
;; Function atoi (atoi)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function atoi

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


atoi (const char * __nptr)
{
  int D.40324;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.40324_2 = strtol (__nptr_1(D), 0B, 10);
  return D.40324_2;
  # SUCC: EXIT [100.0%] 

}



;; Function atol (atol)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function atol

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


atol (const char * __nptr)
{
  long int D.41133;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.41133_2 = strtol (__nptr_1(D), 0B, 10);
  return D.41133_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_codec_ready (switch_core_codec_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
Predictions for bb 2
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 4
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 5
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 6
  DS theory heuristics: 78.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.4%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities

;; Function switch_core_codec_ready

;; 
9 basic blocks, 13 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  4 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec)
Successors:  5 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [85.0%]  (true,exec)
Successors:  6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  8 [78.4%]  (true,exec) 7 [21.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 3 [50.0%]  (false,exec) 4 [15.0%]  (false,exec) 5 [15.0%]  (false,exec) 6 [21.6%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [78.4%]  (true,exec) 7 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_codec_ready (struct switch_codec_t * codec)
{
  const struct switch_codec_implementation_t * D.45456;
  struct switch_codec_interface_t * D.45454;
  struct switch_mutex_t * D.45452;
  uint32_t D.45450;
  uint32_t D.45449;
  int iftmp.104;
  switch_bool_t D.45444;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (codec_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.45449_3 = codec_2(D)->flags;
  D.45450_4 = D.45449_3 & 256;
  if (D.45450_4 != 0)
    goto <bb 4>;
  else
    goto <bb 7>;
  # SUCC: 4 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 4 freq:4250
  # PRED: 3 [50.0%]  (true,exec)
  D.45452_5 = codec_2(D)->mutex;
  if (D.45452_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 5 freq:3612
  # PRED: 4 [85.0%]  (true,exec)
  D.45454_6 = codec_2(D)->codec_interface;
  if (D.45454_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 6 freq:3071
  # PRED: 5 [85.0%]  (true,exec)
  D.45456_7 = codec_2(D)->implementation;
  if (D.45456_7 != 0B)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [78.4%]  (true,exec) 7 [21.6%]  (false,exec)

  # BLOCK 7 freq:7594
  # PRED: 2 [15.0%]  (false,exec) 3 [50.0%]  (false,exec) 4 [15.0%]  (false,exec) 5 [15.0%]  (false,exec) 6 [21.6%]  (false,exec)
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:10000
  # PRED: 6 [78.4%]  (true,exec) 7 [100.0%]  (fallthru,exec)
  # iftmp.104_1 = PHI <1(6), 0(7)>
  D.45444_10 = (switch_bool_t) iftmp.104_1;
  return D.45444_10;
  # SUCC: EXIT [100.0%] 

}



;; Function _zstr (_zstr)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities

;; Function _zstr

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


_zstr (const char * s)
{
  const char D.40302;
  int D.40296;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (s_2(D) == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
  # SUCC: 5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.40302_3 = *s_2(D);
  if (D.40302_3 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5481
  # PRED: 3 [61.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:10000
  # PRED: 3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
  # D.40296_1 = PHI <1(3), 0(4), 1(2)>
  return D.40296_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_known_bitrate (switch_known_bitrate)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 9 10 8
;; 2 succs { 9 10 }
;; 9 succs { 8 }
;; 10 succs { 8 }
;; 8 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 9 10 8
Predictions for bb 2
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities

;; Function switch_known_bitrate

;; 
6 basic blocks, 6 edges, last basic block 12.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  9 [39.0%]  (false) 10 [61.0%]  (true)

Basic block 9 (new)
Predecessors:  2 [39.0%]  (false)
Successors:  8 [100.0%]  (fallthru)

Basic block 10 (new)
Predecessors:  2 [61.0%]  (true)
Successors:  8 [100.0%]  (fallthru)

Basic block 8 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
Successors:  EXIT [100.0%] 


switch_known_bitrate (switch_payload_t payload)
{
  unsigned char csui.173;
  uint32_t D.40703;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  csui.173_11 = payload_2(D);
  if (csui.173_11 <= 18)
    goto <bb 10> (<L13>);
  else
    goto <bb 9> (<L12>);
  # SUCC: 9 [39.0%]  (false) 10 [61.0%]  (true)

  # BLOCK 9 freq:3900
  # PRED: 2 [39.0%]  (false)
<L12>:
  D.40703_9 = 0;
  goto <bb 8> (<L14>);
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 10 freq:6100
  # PRED: 2 [61.0%]  (true)
<L13>:
  D.40703_10 = CSWTCH.174[csui.173_11];
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 8 freq:10000
  # PRED: 9 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
  # D.40703_1 = PHI <D.40703_9(9), D.40703_10(10)>
<L14>:
<L11>:
  return D.40703_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_safe_atoi (switch_safe_atoi)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_safe_atoi

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [78.3%]  (true,exec) 4 [21.6%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.3%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 2 [21.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_safe_atoi (const char * nptr, int dft)
{
  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (nptr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [78.3%]  (true,exec) 4 [21.6%]  (false,exec)

  # BLOCK 3 freq:7835
  # PRED: 2 [78.3%]  (true,exec)
  # DEBUG __nptr => nptr_2(D)
  dft_8 = strtol (nptr_2(D), 0B, 10);
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 3 [100.0%]  (fallthru,exec) 2 [21.6%]  (false,exec)
  # dft_1 = PHI <dft_8(3), dft_4(D)(2)>
  return dft_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_type2str (switch_media_type2str)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 5 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
3 edges in bb 2 predicted to even probabilities
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities

;; Function switch_media_type2str

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

Basic block 3 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_media_type2str (switch_media_type_t type)
{
  const char * D.44061;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>
  # SUCC: 4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

  # BLOCK 3 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L1>:
  goto <bb 5> (<L4>);
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L2>:
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:9999
  # PRED: 2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
  # D.44061_1 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L4>:
  return D.44061_1;
  # SUCC: EXIT [100.0%] 

}



;; Function greedy_sort (greedy_sort)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 10 6 9 7 8
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 2, outer 2
;;  nodes: 10 9 7 8
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 12 }
;; 6 succs { 10 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 7 11 }
;; 11 succs { 12 }
;; 12 succs { 6 13 }
;; 13 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 10 6 9 7 8
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 2, outer 2
;;  nodes: 10 9 7 8
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45440_22)
(get_scalar_evolution 
  (scalar = D.45440_22)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.45440_22)
  (scalar_evolution = D.45440_22))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 2)
  (chrec = D.45440_22)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45440_22)
(get_scalar_evolution 
  (scalar = D.45440_22)
  (scalar_evolution = D.45440_22))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.45440_22)
  (scalar_evolution = D.45440_22))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = g_42)
(get_scalar_evolution 
  (scalar = g_42)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = g_6)
(get_scalar_evolution 
  (scalar = g_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
g_6 = PHI <g_32(5), g_42(11)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = g_6 = PHI <g_32(5), g_42(11)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = g_6)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = g_42)
  (scalar_evolution = {1, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 2)
  (chrec = {1, +, 1}_2)
  (res = {1, +, 1}_2))
Induction variable (int) 1 + 1 * iteration does not wrap in statement g_42 = g_6 + 1;
 in loop 2.
Statement g_42 = g_6 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_2 = PHI <0(6), j_41(9)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_2 = PHI <0(6), j_41(9)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(number_of_iterations_in_loop = 
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
  (set_nb_iterations_in_loop = (unsigned int) MAX_EXPR <m_idx_10(D), 0>))
(chrec_apply 
  (varying_loop = 3
)
  (chrec = {0, +, 1}_3)
  (x = MAX_EXPR <m_idx_10(D), 0>)
  (res = MAX_EXPR <m_idx_10(D), 0>))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 2)
  (chrec = MAX_EXPR <m_idx_10(D), 0>)
  (res = MAX_EXPR <m_idx_10(D), 0>))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j.101_37)
(get_scalar_evolution 
  (scalar = j.101_37)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j.101_37)
  (scalar_evolution = {0, +, 1}_3))
(chrec_apply 
  (varying_loop = 3
)
  (chrec = {0, +, 1}_3)
  (x = (unsigned int) MAX_EXPR <m_idx_10(D), 0>)
  (res = (unsigned int) MAX_EXPR <m_idx_10(D), 0>))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 2)
  (chrec = (unsigned int) MAX_EXPR <m_idx_10(D), 0>)
  (res = (unsigned int) MAX_EXPR <m_idx_10(D), 0>))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
Statement (exit)if (j_2 < m_idx_10(D))
 is executed at most m_idx_10(D) < 0 ? 0 : (unsigned int) m_idx_10(D) (bounded by 2147483647) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_41)
(get_scalar_evolution 
  (scalar = j_41)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_41)
  (scalar_evolution = {1, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 6)
  (evolution_loop = 3)
  (chrec = {1, +, 1}_3)
  (res = {1, +, 1}_3))
Induction variable (int) 1 + 1 * iteration does not wrap in statement j_41 = j_2 + 1;
 in loop 3.
Statement j_41 = j_2 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 6)
  (evolution_loop = 3)
  (chrec = {0, +, 1}_3)
  (res = {0, +, 1}_3))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45433_33 = mtmp[j_2].imp;
 in loop 3.
Statement D.45433_33 = mtmp[j_2].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j.101_37)
(get_scalar_evolution 
  (scalar = j.101_37)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = j.101_37)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 6)
  (evolution_loop = 3)
  (chrec = {0, +, 1}_3)
  (res = {0, +, 1}_3))
Induction variable (unsigned int) 0 + 1 * iteration does not wrap in statement *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
 in loop 3.
Statement *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
 is probably executed at most 29 (bounded by 29) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_1)
(get_scalar_evolution 
  (scalar = j_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_1 = PHI <0(2), j_18(3)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_1 = PHI <0(2), j_18(3)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_1)
(get_scalar_evolution 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
Statement (exit)if (j_1 < m_idx_10(D))
 is executed at most m_idx_10(D) < 0 ? 0 : (unsigned int) m_idx_10(D) (bounded by 2147483647) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j.101_11)
(get_scalar_evolution 
  (scalar = j.101_11)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_1)
(get_scalar_evolution 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
)
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j.101_11)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 2)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (unsigned int) 0 + 1 * iteration does not wrap in statement MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;
 in loop 1.
Statement MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;
 is executed at most 29 (bounded by 29) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_18)
(get_scalar_evolution 
  (scalar = j_18)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_1)
(get_scalar_evolution 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_18)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 2)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement j_18 = j_1 + 1;
 in loop 1.
Statement j_18 = j_1 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
1 edges in bb 2 predicted to even probabilities
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics (ignored): 96.8%
  first match heuristics: 96.8%
  combined heuristics: 96.8%
  guessed loop iterations heuristics: 96.8%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics (ignored): 96.8%
  first match heuristics: 96.8%
  combined heuristics: 96.8%
  guessed loop iterations heuristics: 96.8%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics (ignored): 91.0%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  loop exit heuristics: 91.0%
1 edges in bb 13 predicted to even probabilities

;; Function greedy_sort

;; 
14 basic blocks, 17 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  4 [96.8%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,dfs_back,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
Successors:  3 [96.8%]  (true,exec) 5 [3.2%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [3.2%]  (false,exec)
Successors:  12 [100.0%]  (fallthru)

Basic block 6 (new, reachable)
Predecessors:  12 [91.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  10 [96.8%]  (true,exec)
Successors:  8 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [15.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [85.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [100.0%]  (fallthru,dfs_back,exec)

Basic block 10 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
Successors:  7 [96.8%]  (true,exec) 11 [3.2%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [3.2%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,dfs_back,exec)

Basic block 12 (new)
Predecessors:  5 [100.0%]  (fallthru) 11 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [91.0%]  (true,exec) 13 [9.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [9.0%]  (false,exec)
Successors:  EXIT [100.0%] 


greedy_sort (struct switch_media_handle_t * smh, struct matches * matches, int m_idx, const struct switch_codec_implementation_t * * codec_array, int total_codecs)
{
  const struct switch_codec_implementation_t * imp;
  struct matches mtmp[30];
  int g;
  int f;
  int j;
  _Bool D.45443;
  _Bool D.45442;
  _Bool D.45441;
  int D.45440;
  struct switch_core_media_params_t * D.45439;
  struct matches * D.45438;
  unsigned int D.45437;
  unsigned int f.103;
  const struct switch_codec_implementation_t * D.45433;
  const struct switch_codec_implementation_t * * D.45432;
  unsigned int D.45431;
  unsigned int g.102;
  struct matches * D.45429;
  unsigned int D.45427;
  unsigned int j.101;

  # BLOCK 2 freq:32
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG j => 0
  # DEBUG f => 0
  mtmp = {};
  # DEBUG j => 0
  goto <bb 4>;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:957
  # PRED: 4 [96.8%]  (true,exec)
  j.101_11 = (unsigned int) j_1;
  j.101_14 = (unsigned int) j_1;
  D.45427_15 = j.101_14 * 16;
  D.45429_17 = matches_16(D) + D.45427_15;
  MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;
  j_18 = j_1 + 1;
  # DEBUG j => j_18
  # SUCC: 4 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 4 freq:989
  # PRED: 2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
  # j_1 = PHI <0(2), j_18(3)>
  # DEBUG j => j_1
  if (j_1 < m_idx_10(D))
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 [96.8%]  (true,exec) 5 [3.2%]  (false,exec)

  # BLOCK 5 freq:32
  # PRED: 4 [3.2%]  (false,exec)
  # f_38 = PHI <0(4)>
  # g_32 = PHI <0(4)>
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru)

  # BLOCK 6 freq:323
  # PRED: 12 [91.0%]  (true,exec)
  g.102_27 = (unsigned int) g_6;
  D.45431_28 = g.102_27 * 4;
  D.45432_30 = codec_array_29(D) + D.45431_28;
  imp_31 = *D.45432_30;
  # DEBUG imp => imp_31
  # DEBUG j => 0
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9677
  # PRED: 10 [96.8%]  (true,exec)
  D.45433_33 = mtmp[j_2].imp;
  if (D.45433_33 == imp_31)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 8 freq:1452
  # PRED: 7 [15.0%]  (true,exec)
  f.103_34 = (unsigned int) f_4;
  D.45437_35 = f.103_34 * 16;
  D.45438_36 = matches_16(D) + D.45437_35;
  j.101_37 = (unsigned int) j_2;
  *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
  f_40 = f_4 + 1;
  # DEBUG f => f_40
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9677
  # PRED: 7 [85.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  # f_3 = PHI <f_4(7), f_40(8)>
  # DEBUG f => f_3
  j_41 = j_2 + 1;
  # DEBUG j => j_41
  # SUCC: 10 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 10 freq:10000
  # PRED: 6 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
  # j_2 = PHI <0(6), j_41(9)>
  # f_4 = PHI <f_5(6), f_3(9)>
  # DEBUG f => f_4
  # DEBUG j => j_2
  if (j_2 < m_idx_10(D))
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 [96.8%]  (true,exec) 11 [3.2%]  (false,exec)

  # BLOCK 11 freq:323
  # PRED: 10 [3.2%]  (false,exec)
  g_42 = g_6 + 1;
  # DEBUG g => g_42
  # SUCC: 12 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 12 freq:355
  # PRED: 5 [100.0%]  (fallthru) 11 [100.0%]  (fallthru,dfs_back,exec)
  # f_5 = PHI <f_38(5), f_4(11)>
  # g_6 = PHI <g_32(5), g_42(11)>
  # DEBUG g => g_6
  # DEBUG f => f_5
  D.45439_21 = smh_20(D)->mparams;
  D.45440_22 = D.45439_21->num_codecs;
  D.45441_23 = D.45440_22 > g_6;
  D.45442_25 = g_6 < total_codecs_24(D);
  D.45443_26 = D.45441_23 && D.45442_25;
  if (D.45443_26 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;
  # SUCC: 6 [91.0%]  (true,exec) 13 [9.0%]  (false,exec)

  # BLOCK 13 freq:32
  # PRED: 12 [9.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function clear_pmaps (clear_pmaps)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41160_4)
(get_scalar_evolution 
  (scalar = D.41160_4)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41160_4)
(get_scalar_evolution 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_3(2), pmap_5(3)>
)
  (init_cond = pmap_3))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_3(2), pmap_5(3)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
1 edges in bb 2 predicted to even probabilities
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics (ignored): 99.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  early return (on trees) heuristics (ignored): 61.0%
  loop exit heuristics: 95.5%
Predictions for bb 5
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 6 predicted to even probabilities

;; Function clear_pmaps

;; 
7 basic blocks, 8 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  5 [95.5%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,dfs_back,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
Successors:  5 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.5%]  (true,exec)
Successors:  3 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [4.5%]  (false,exec) 5 [4.5%]  (false,exec)
Successors:  EXIT [100.0%] 


clear_pmaps (struct switch_rtp_engine_t * engine)
{
  struct payload_map_t * pmap;
  uint8_t D.41160;

  # BLOCK 2 freq:880
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  pmap_3 = engine_2(D)->payload_map;
  # DEBUG pmap => pmap_3
  goto <bb 4>;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:9120
  # PRED: 5 [95.5%]  (true,exec)
  pmap_1->negotiated = 0;
  pmap_1->current = 0;
  pmap_5 = pmap_1->next;
  # DEBUG pmap => pmap_5
  # SUCC: 4 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1 = PHI <pmap_3(2), pmap_5(3)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

  # BLOCK 5 freq:9550
  # PRED: 4 [95.5%]  (true,exec)
  D.41160_4 = pmap_1->allocated;
  if (D.41160_4 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

  # BLOCK 6 freq:880
  # PRED: 4 [4.5%]  (false,exec) 5 [4.5%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function dtls_ok (dtls_ok)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function dtls_ok

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


dtls_ok (struct switch_core_session_t * session)
{
  uint32_t D.42521;
  struct switch_channel_t * D.42520;
  int D.42519;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.42520_2 = session_1(D)->channel;
  D.42521_3 = switch_channel_test_flag (D.42520_2, 111);
  D.42519_4 = (int) D.42521_3;
  return D.42519_4;
  # SUCC: EXIT [100.0%] 

}



;; Function get_media_profile_name (get_media_profile_name)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 7 }
;; 5 succs { 9 6 }
;; 6 succs { 9 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 5
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  early return (on trees) heuristics: 61.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities

;; Function get_media_profile_name

;; 
10 basic blocks, 12 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [29.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [71.0%]  (false,exec)
Successors:  9 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec) 6 [100.0%]  (fallthru,exec) 7 [39.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


get_media_profile_name (struct switch_core_session_t * session, int secure)
{
  static const char __PRETTY_FUNCTION__[23] = "get_media_profile_name";
  const char * D.42974;
  uint32_t D.42971;
  uint32_t D.42968;
  struct switch_channel_t * D.42967;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.42967_3 = session_2(D)->channel;
  D.42968_4 = switch_channel_test_flag (D.42967_3, 106);
  if (D.42968_4 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 5 freq:2899
  # PRED: 4 [29.0%]  (true,exec)
  D.42967_5 = session_2(D)->channel;
  D.42971_6 = switch_channel_test_flag (D.42967_5, 107);
  if (D.42971_6 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;
  # SUCC: 9 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 6 freq:1449
  # PRED: 5 [50.0%]  (false,exec)
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:7097
  # PRED: 4 [71.0%]  (false,exec)
  if (secure_9(D) != 0)
    goto <bb 9>;
  else
    goto <bb 8>;
  # SUCC: 9 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:4329
  # PRED: 7 [61.0%]  (false,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9996
  # PRED: 5 [50.0%]  (true,exec) 6 [100.0%]  (fallthru,exec) 7 [39.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
  # D.42974_1 = PHI <"UDP/TLS/RTP/SAVPF"(5), "RTP/SAVPF"(6), "RTP/SAVP"(7), "RTP/AVP"(8)>
  return D.42974_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_find_zrtp_hash (switch_core_media_find_zrtp_hash)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 5 7 21 23 8 22 13 16 14 15 12 9 10 11 6 18 19 20 17 4
;;
;; Loop 2
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22 13 16 14 15 12 9 10 11
;; 2 succs { 26 3 }
;; 3 succs { 25 }
;; 4 succs { 26 5 }
;; 5 succs { 6 24 }
;; 6 succs { 8 7 }
;; 7 succs { 8 24 }
;; 8 succs { 23 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 22 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 19 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 24 }
;; 22 succs { 23 }
;; 23 succs { 9 24 }
;; 24 succs { 25 }
;; 25 succs { 4 26 }
;; 26 succs { 1 }
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 5 7 21 23 8 22 13 16 14 15 12 9 10 11 6 18 19 20 17 4
;;
;; Loop 2
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22 13 16 14 15 12 9 10 11
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_20(3), m_54(24)>
)
  (init_cond = m_20))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_20(3), m_54(24)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 3 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 3 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_33(8), attr_53(22)>
)
  (init_cond = attr_33))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_33(8), attr_53(22)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
Predictions for bb 2
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics (ignored): 2.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  early return (on trees) heuristics (ignored): 39.0%
  loop exit heuristics: 4.5%
Predictions for bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 15
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  continue heuristics: 50.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 26 predicted to even probabilities

;; Function switch_core_media_find_zrtp_hash

;; 
27 basic blocks, 40 edges, last basic block 27.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  26 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  25 [95.5%]  (true,exec)
Successors:  26 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.5%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  8 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec) 7 [50.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  23 [95.5%]  (true,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec)
Successors:  16 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec) 15 [15.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [85.0%]  (false,exec)
Successors:  18 [13.7%]  (true,exec) 19 [86.3%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [13.7%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [86.3%]  (false,exec)
Successors:  20 [13.7%]  (true,exec) 21 [86.3%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [13.7%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [100.0%]  (fallthru,exec) 19 [86.3%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec)
Successors:  23 [100.0%]  (fallthru,dfs_back,exec)

Basic block 23 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [95.5%]  (true,exec) 24 [4.5%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 23 [4.5%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,dfs_back,exec)

Basic block 25 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
Successors:  4 [95.5%]  (true,exec) 26 [4.5%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 4 [4.5%]  (true,exec) 25 [4.5%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_find_zrtp_hash (struct switch_core_session_t * session, struct sdp_session_t * sdp)
{
  const char D.47249;
  int D.47248;
  static const char __func__[33] = "switch_core_media_find_zrtp_hash";
  int got_video;
  int got_audio;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  struct switch_channel_t * channel;
  char * D.40656;
  struct switch_core_session_t * D.40655;
  char * D.40651;
  struct switch_core_session_t * D.40650;
  const char * D.40647;
  int D.40645;
  const char * D.40639;
  _Bool D.40638;
  _Bool D.40637;
  _Bool D.40636;
  _Bool D.40634;
  _Bool D.40633;
  _Bool D.40632;
  sdp_media_e D.40631;
  long unsigned int D.40628;
  _Bool D.40625;
  _Bool D.40624;
  _Bool D.40623;
  struct switch_core_session_t * D.40622;
  struct switch_media_handle_t * D.40619;

  # BLOCK 2 freq:814
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  channel_10 = switch_core_session_get_channel (session_9(D));
  # DEBUG channel => channel_10
  # DEBUG got_audio => 0
  # DEBUG got_video => 0
  D.40619_13 = session_9(D)->media_handle;
  if (D.40619_13 == 0B)
    goto <bb 26>;
  else
    goto <bb 3>;
  # SUCC: 26 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:638
  # PRED: 2 [78.4%]  (false,exec)
  D.40619_14 = session_9(D)->media_handle;
  # DEBUG D#1 => &D.40619_14->engines
  # DEBUG audio_engine => D#1
  D.40619_16 = session_9(D)->media_handle;
  # DEBUG D#2 => &D.40619_16->engines[1]
  # DEBUG video_engine => D#2
  D.40622_18 = switch_channel_get_session (channel_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");
  m_20 = sdp_19(D)->sdp_media;
  # DEBUG m => m_20
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:6923
  # PRED: 25 [95.5%]  (true,exec)
  D.40623_21 = got_audio_5 != 0;
  D.40624_22 = got_video_8 != 0;
  D.40625_23 = D.40623_21 && D.40624_22;
  if (D.40625_23 != 0)
    goto <bb 26>;
  else
    goto <bb 5>;
  # SUCC: 26 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

  # BLOCK 5 freq:6612
  # PRED: 4 [95.5%]  (false,exec)
  D.40628_24 = m_1->m_port;
  if (D.40628_24 != 0)
    goto <bb 6>;
  else
    goto <bb 24>;
  # SUCC: 6 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 6 freq:3306
  # PRED: 5 [50.0%]  (true,exec)
  D.40631_25 = m_1->m_type;
  D.40632_26 = D.40631_25 == 2;
  D.40633_27 = got_audio_5 == 0;
  D.40634_28 = D.40632_26 && D.40633_27;
  if (D.40634_28 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 7 freq:1653
  # PRED: 6 [50.0%]  (false,exec)
  D.40631_29 = m_1->m_type;
  D.40636_30 = D.40631_29 == 3;
  D.40637_31 = got_video_8 == 0;
  D.40638_32 = D.40636_30 && D.40637_31;
  if (D.40638_32 != 0)
    goto <bb 8>;
  else
    goto <bb 24>;
  # SUCC: 8 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 8 freq:2479
  # PRED: 6 [50.0%]  (true,exec) 7 [50.0%]  (true,exec)
  attr_33 = m_1->m_attributes;
  # DEBUG attr => attr_33
  goto <bb 23>;
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9550
  # PRED: 23 [95.5%]  (true,exec)
  D.40639_34 = attr_2->a_name;
  # DEBUG s => D.40639_34
  if (D.40639_34 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:8117
  # PRED: 9 [85.0%]  (false,exec)
  D.47249_73 = *D.40639_34;
  if (D.47249_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4059
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9550
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47248_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47248_74 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:4775
  # PRED: 12 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:4775
  # PRED: 12 [50.0%]  (false,exec)
  D.40639_36 = attr_2->a_name;
  D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
  if (D.40645_37 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;
  # SUCC: 16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 15 freq:2387
  # PRED: 14 [50.0%]  (false,exec)
  D.40647_38 = attr_2->a_value;
  if (D.40647_38 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

  # BLOCK 16 freq:2746
  # PRED: 14 [50.0%]  (true,exec) 15 [15.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:2029
  # PRED: 15 [85.0%]  (false,exec)
  D.40631_39 = m_1->m_type;
  if (D.40631_39 == 2)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [13.7%]  (true,exec) 19 [86.3%]  (false,exec)

  # BLOCK 18 freq:278
  # PRED: 17 [13.7%]  (true,exec)
  D.40650_40 = switch_channel_get_session (channel_10);
  D.40647_41 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);
  D.40647_42 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);
  D.40647_43 = attr_2->a_value;
  D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);
  MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;
  got_audio_45 = got_audio_5 + 1;
  # DEBUG got_audio => got_audio_45
  goto <bb 21>;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:1751
  # PRED: 17 [86.3%]  (false,exec)
  D.40631_46 = m_1->m_type;
  if (D.40631_46 == 3)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [13.7%]  (true,exec) 21 [86.3%]  (false,exec)

  # BLOCK 20 freq:240
  # PRED: 19 [13.7%]  (true,exec)
  D.40655_47 = switch_channel_get_session (channel_10);
  D.40647_48 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);
  D.40647_49 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);
  D.40647_50 = attr_2->a_value;
  D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);
  MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;
  got_video_52 = got_video_8 + 1;
  # DEBUG got_video => got_video_52
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:2029
  # PRED: 18 [100.0%]  (fallthru,exec) 19 [86.3%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  # got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>
  # got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>
  # DEBUG got_video => got_video_6
  # DEBUG got_audio => got_audio_3
  switch_channel_set_flag_value (channel_10, 75, 1);
  goto <bb 24>;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:7521
  # PRED: 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec)
  attr_53 = attr_2->a_next;
  # DEBUG attr => attr_53
  # SUCC: 23 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 23 freq:10000
  # PRED: 8 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,dfs_back,exec)
  # attr_2 = PHI <attr_33(8), attr_53(22)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 24>;
  # SUCC: 9 [95.5%]  (true,exec) 24 [4.5%]  (false,exec)

  # BLOCK 24 freq:6612
  # PRED: 5 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 23 [4.5%]  (false,exec)
  # got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>
  # got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>
  # DEBUG got_video => got_video_7
  # DEBUG got_audio => got_audio_4
  m_54 = m_1->m_next;
  # DEBUG m => m_54
  # SUCC: 25 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 25 freq:7249
  # PRED: 3 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_20(3), m_54(24)>
  # got_audio_5 = PHI <0(3), got_audio_4(24)>
  # got_video_8 = PHI <0(3), got_video_7(24)>
  # DEBUG got_video => got_video_8
  # DEBUG got_audio => got_audio_5
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 4>;
  else
    goto <bb 26>;
  # SUCC: 4 [95.5%]  (true,exec) 26 [4.5%]  (false,exec)

  # BLOCK 26 freq:814
  # PRED: 2 [21.6%]  (true,exec) 4 [4.5%]  (true,exec) 25 [4.5%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function _switch_core_media_pass_zrtp_hash2 (_switch_core_media_pass_zrtp_hash2)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 10 3 }
;; 3 succs { 10 4 }
;; 4 succs { 5 6 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  DS theory heuristics: 20.7%
  first match heuristics (ignored): 29.0%
  combined heuristics: 20.7%
  early return (on trees) heuristics: 39.0%
  call heuristics: 29.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities

;; Function _switch_core_media_pass_zrtp_hash2

;; 
11 basic blocks, 15 edges, last basic block 11.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  10 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  10 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [78.4%]  (false,exec)
Successors:  5 [20.7%]  (true,exec) 6 [79.3%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [20.7%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [79.3%]  (false,exec)
Successors:  7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [78.3%]  (true,exec) 10 [21.6%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [78.3%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  3 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec) 8 [21.6%]  (false,exec) 9 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


_switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session, switch_media_type_t type)
{
  static const char __func__[35] = "_switch_core_media_pass_zrtp_hash2";
  struct switch_rtp_engine_t * bleg_engine;
  struct switch_rtp_engine_t * aleg_engine;
  char * D.47199;
  char * D.47198;
  struct switch_core_session_t * D.47197;
  char * D.47194;
  char * D.47193;
  struct switch_channel_t * D.47192;
  char * D.47191;
  struct switch_core_session_t * D.47190;
  char * D.47187;
  struct switch_core_session_t * D.47186;
  uint32_t D.47183;
  struct switch_core_session_t * D.47182;
  struct switch_channel_t * D.47181;
  unsigned int D.47179;
  struct switch_media_handle_t * D.47177;
  struct switch_media_handle_t * D.47175;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.47175_2 = aleg_session_1(D)->media_handle;
  if (D.47175_2 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;
  # SUCC: 10 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.47177_4 = bleg_session_3(D)->media_handle;
  if (D.47177_4 == 0B)
    goto <bb 10>;
  else
    goto <bb 4>;
  # SUCC: 10 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

  # BLOCK 4 freq:7041
  # PRED: 3 [78.4%]  (false,exec)
  D.47175_5 = aleg_session_1(D)->media_handle;
  aleg_engine_9 = &D.47175_5->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG aleg_engine => aleg_engine_9
  D.47177_10 = bleg_session_3(D)->media_handle;
  bleg_engine_13 = &D.47177_10->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG bleg_engine => bleg_engine_13
  D.47181_14 = aleg_session_1(D)->channel;
  D.47182_15 = switch_channel_get_session (D.47181_14);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47182_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");
  D.47181_16 = aleg_session_1(D)->channel;
  D.47183_17 = switch_channel_test_flag (D.47181_16, 73);
  if (D.47183_17 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [20.7%]  (true,exec) 6 [79.3%]  (false,exec)

  # BLOCK 5 freq:1458
  # PRED: 4 [20.7%]  (true,exec)
  D.47181_18 = aleg_session_1(D)->channel;
  D.47186_19 = switch_channel_get_session (D.47181_18);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47186_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:5583
  # PRED: 4 [79.3%]  (false,exec)
  D.47187_20 = aleg_engine_9->remote_sdp_zrtp_hash;
  if (D.47187_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 7 freq:3899
  # PRED: 6 [69.8%]  (true,exec)
  D.47181_21 = aleg_session_1(D)->channel;
  D.47190_22 = switch_channel_get_session (D.47181_21);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47190_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");
  D.47187_23 = aleg_engine_9->remote_sdp_zrtp_hash;
  D.47191_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47187_23, "src/switch_core_media.c", &__func__, 266);
  bleg_engine_13->local_sdp_zrtp_hash = D.47191_24;
  D.47192_25 = bleg_session_3(D)->channel;
  D.47193_26 = bleg_engine_13->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47192_25, "l_sdp_audio_zrtp_hash", D.47193_26, 1);
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:5583
  # PRED: 6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  D.47194_27 = bleg_engine_13->remote_sdp_zrtp_hash;
  if (D.47194_27 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [78.3%]  (true,exec) 10 [21.6%]  (false,exec)

  # BLOCK 9 freq:4374
  # PRED: 8 [78.3%]  (true,exec)
  D.47181_28 = aleg_session_1(D)->channel;
  D.47197_29 = switch_channel_get_session (D.47181_28);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47197_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");
  D.47194_30 = bleg_engine_13->remote_sdp_zrtp_hash;
  D.47198_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47194_30, "src/switch_core_media.c", &__func__, 272);
  aleg_engine_9->local_sdp_zrtp_hash = D.47198_31;
  D.47181_32 = aleg_session_1(D)->channel;
  D.47199_33 = aleg_engine_9->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47181_32, "l_sdp_audio_zrtp_hash", D.47199_33, 1);
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:10000
  # PRED: 3 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec) 8 [21.6%]  (false,exec) 9 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_true (switch_true)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 12 }
;; 3 succs { 13 4 }
;; 4 succs { 13 5 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
Predictions for bb 2
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 3
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 8
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 9
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 10
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 11
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 12 predicted to even probabilities
1 edges in bb 13 predicted to even probabilities

;; Function switch_true

;; 
14 basic blocks, 23 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [39.0%]  (false,exec)
Successors:  11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_true (const char * expr)
{
  int D.47254;
  switch_bool_t D.40615;
  int D.40613;
  int D.40611;
  int D.40609;
  int D.40607;
  int D.40605;
  int D.40603;
  int D.40601;
  int D.40595;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;
  # SUCC: 3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.40601_3 = strcasecmp (expr_2(D), "yes");
  if (D.40601_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;
  # SUCC: 13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [61.0%]  (false,exec)
  D.40603_4 = strcasecmp (expr_2(D), "on");
  if (D.40603_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;
  # SUCC: 13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:3163
  # PRED: 4 [61.0%]  (false,exec)
  D.40605_5 = strcasecmp (expr_2(D), "true");
  if (D.40605_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;
  # SUCC: 13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:1929
  # PRED: 5 [61.0%]  (false,exec)
  D.40607_6 = strcasecmp (expr_2(D), "t");
  if (D.40607_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;
  # SUCC: 13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:1177
  # PRED: 6 [61.0%]  (false,exec)
  D.40609_7 = strcasecmp (expr_2(D), "enabled");
  if (D.40609_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;
  # SUCC: 13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:718
  # PRED: 7 [61.0%]  (false,exec)
  D.40611_8 = strcasecmp (expr_2(D), "active");
  if (D.40611_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;
  # SUCC: 13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 9 freq:438
  # PRED: 8 [61.0%]  (false,exec)
  D.40613_9 = strcasecmp (expr_2(D), "allow");
  if (D.40613_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;
  # SUCC: 13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

  # BLOCK 10 freq:171
  # PRED: 9 [39.0%]  (false,exec)
  D.40615_10 = switch_is_number (expr_2(D));
  if (D.40615_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 11 freq:50
  # PRED: 10 [29.0%]  (true,exec)
  # DEBUG __nptr => expr_2(D)
  D.47254_17 = strtol (expr_2(D), 0B, 10);
  if (D.47254_17 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1651
  # PRED: 2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:10000
  # PRED: 4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
  # D.40595_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.40595_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_false (switch_false)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 12 }
;; 3 succs { 13 4 }
;; 4 succs { 13 5 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
Predictions for bb 2
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 3
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 8
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 9
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 10
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 11
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 12 predicted to even probabilities
1 edges in bb 13 predicted to even probabilities

;; Function switch_false

;; 
14 basic blocks, 23 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [39.0%]  (false,exec)
Successors:  11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_false (const char * expr)
{
  int D.47258;
  switch_bool_t D.41155;
  int D.41153;
  int D.41151;
  int D.41149;
  int D.41147;
  int D.41145;
  int D.41143;
  int D.41141;
  int D.41135;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;
  # SUCC: 3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.41141_3 = strcasecmp (expr_2(D), "no");
  if (D.41141_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;
  # SUCC: 13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [61.0%]  (false,exec)
  D.41143_4 = strcasecmp (expr_2(D), "off");
  if (D.41143_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;
  # SUCC: 13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:3163
  # PRED: 4 [61.0%]  (false,exec)
  D.41145_5 = strcasecmp (expr_2(D), "false");
  if (D.41145_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;
  # SUCC: 13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:1929
  # PRED: 5 [61.0%]  (false,exec)
  D.41147_6 = strcasecmp (expr_2(D), "f");
  if (D.41147_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;
  # SUCC: 13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:1177
  # PRED: 6 [61.0%]  (false,exec)
  D.41149_7 = strcasecmp (expr_2(D), "disabled");
  if (D.41149_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;
  # SUCC: 13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:718
  # PRED: 7 [61.0%]  (false,exec)
  D.41151_8 = strcasecmp (expr_2(D), "inactive");
  if (D.41151_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;
  # SUCC: 13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 9 freq:438
  # PRED: 8 [61.0%]  (false,exec)
  D.41153_9 = strcasecmp (expr_2(D), "disallow");
  if (D.41153_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;
  # SUCC: 13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

  # BLOCK 10 freq:171
  # PRED: 9 [39.0%]  (false,exec)
  D.41155_10 = switch_is_number (expr_2(D));
  if (D.41155_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 11 freq:50
  # PRED: 10 [29.0%]  (true,exec)
  # DEBUG __nptr => expr_2(D)
  D.47258_17 = strtol (expr_2(D), 0B, 10);
  if (D.47258_17 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1651
  # PRED: 2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:10000
  # PRED: 4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
  # D.41135_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.41135_1;
  # SUCC: EXIT [100.0%] 

}



;; Function add_audio_codec (add_audio_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 16 }
;; 13 succs { 21 14 }
;; 14 succs { 15 21 }
;; 15 succs { 21 }
;; 16 succs { 17 21 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
Predictions for bb 2
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 14
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 17
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 26 predicted to even probabilities
1 edges in bb 27 predicted to even probabilities

;; Function add_audio_codec

;; 
28 basic blocks, 42 edges, last basic block 28.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [29.0%]  (true,exec) 4 [71.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [29.0%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [71.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  6 [50.0%]  (false,exec) 5 [50.0%]  (true,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [71.0%]  (true,exec) 16 [29.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [71.0%]  (true,exec)
Successors:  21 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  12 [29.0%]  (false,exec)
Successors:  17 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [50.0%]  (true,exec)
Successors:  18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [50.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [50.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 16 [50.0%]  (false,exec) 19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec) 13 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
Successors:  22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [71.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [39.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [61.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


add_audio_codec (struct sdp_rtpmap_t * map, int ptime, char * buf, switch_size_t buflen)
{
  const char D.47271;
  int D.47270;
  unsigned char csui.173;
  struct switch_codec_fmtp_t codec_fmtp;
  char bitstr[20];
  char ratestr[20];
  char ptstr[20];
  uint32_t map_bit_rate;
  int codec_ms;
  switch_size_t D.40701;
  size_t D.40700;
  char * D.40699;
  size_t D.40698;
  int D.40689;
  int D.40686;
  switch_status_t D.40683;
  long unsigned int D.40682;
  int D.40678;
  int D.40674;
  const char * D.40670;
  int D.40667;
  uint32_t D.40663;
  uint32_t D.40662;
  <unnamed-unsigned:7> D.40661;
  const char * D.40660;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG codec_ms => ptime_6(D)
  # DEBUG map_bit_rate => 0
  ptstr = "";
  ratestr = "";
  bitstr = "";
  codec_fmtp = {};
  if (ptime_6(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [29.0%]  (true,exec) 4 [71.0%]  (false,exec)

  # BLOCK 3 freq:2900
  # PRED: 2 [29.0%]  (true,exec)
  D.40660_10 = map_9(D)->rm_encoding;
  D.40661_11 = map_9(D)->rm_pt;
  D.40662_12 = (uint32_t) D.40661_11;
  D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);
  codec_ms_14 = (int) D.40663_13;
  # DEBUG codec_ms => codec_ms_14
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [71.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  # codec_ms_1 = PHI <ptime_6(D)(2), codec_ms_14(3)>
  # DEBUG codec_ms => codec_ms_1
  D.40661_15 = map_9(D)->rm_pt;
  csui.173_16 = (unsigned char) D.40661_15;
  # DEBUG payload => csui.173_16
  if (csui.173_16 <= 18)
    goto <bb 5> (<L27>);
  else
    goto <bb 6> (<L28>);
  # SUCC: 6 [50.0%]  (false,exec) 5 [50.0%]  (true,exec)

  # BLOCK 5 freq:5000
  # PRED: 4 [50.0%]  (true,exec)
<L27>:
  map_bit_rate_71 = CSWTCH.174[csui.173_16];
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:10000
  # PRED: 4 [50.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
  # map_bit_rate_72 = PHI <0(4), map_bit_rate_71(5)>
<L28>:
<L29>:
  # DEBUG map_bit_rate => NULL
  if (ptime_6(D) == 0)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 7 freq:5000
  # PRED: 6 [50.0%]  (true,exec)
  D.40660_18 = map_9(D)->rm_encoding;
  D.40667_19 = strcasecmp (D.40660_18, "g723");
  if (D.40667_19 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 8 freq:2500
  # PRED: 7 [50.0%]  (true,exec)
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:10000
  # PRED: 6 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  # codec_ms_2 = PHI <codec_ms_1(6), codec_ms_1(7), 30(8)>
  # DEBUG codec_ms => codec_ms_2
  D.40670_22 = map_9(D)->rm_fmtp;
  # DEBUG s => D.40670_22
  if (D.40670_22 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:8500
  # PRED: 9 [85.0%]  (false,exec)
  D.47271_73 = *D.40670_22;
  if (D.47271_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4250
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:10000
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47270_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47270_74 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [71.0%]  (true,exec) 16 [29.0%]  (false,exec)

  # BLOCK 13 freq:7100
  # PRED: 12 [71.0%]  (true,exec)
  D.40660_24 = map_9(D)->rm_encoding;
  D.40674_25 = strcasecmp (D.40660_24, "ilbc");
  if (D.40674_25 == 0)
    goto <bb 21>;
  else
    goto <bb 14>;
  # SUCC: 21 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 14 freq:3550
  # PRED: 13 [50.0%]  (false,exec)
  D.40660_29 = map_9(D)->rm_encoding;
  D.40678_30 = strcasecmp (D.40660_29, "isac");
  if (D.40678_30 == 0)
    goto <bb 15>;
  else
    goto <bb 21>;
  # SUCC: 15 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 15 freq:1775
  # PRED: 14 [50.0%]  (true,exec)
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30
  # DEBUG map_bit_rate => 32000
  goto <bb 21>;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:2900
  # PRED: 12 [29.0%]  (false,exec)
  D.40660_34 = map_9(D)->rm_encoding;
  D.40670_35 = map_9(D)->rm_fmtp;
  D.40682_36 = map_9(D)->rm_rate;
  D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);
  if (D.40683_37 == 0)
    goto <bb 17>;
  else
    goto <bb 21>;
  # SUCC: 17 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 17 freq:1450
  # PRED: 16 [50.0%]  (true,exec)
  D.40686_38 = codec_fmtp.bits_per_second;
  if (D.40686_38 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 18 freq:725
  # PRED: 17 [50.0%]  (true,exec)
  D.40686_39 = codec_fmtp.bits_per_second;
  map_bit_rate_40 = (uint32_t) D.40686_39;
  # DEBUG map_bit_rate => map_bit_rate_40
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:1450
  # PRED: 17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # map_bit_rate_4 = PHI <map_bit_rate_72(17), map_bit_rate_40(18)>
  # DEBUG map_bit_rate => map_bit_rate_4
  D.40689_41 = codec_fmtp.microseconds_per_packet;
  if (D.40689_41 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 20 freq:725
  # PRED: 19 [50.0%]  (true,exec)
  D.40689_42 = codec_fmtp.microseconds_per_packet;
  codec_ms_43 = D.40689_42 / 1000;
  # DEBUG codec_ms => codec_ms_43
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:10000
  # PRED: 14 [50.0%]  (false,exec) 16 [50.0%]  (false,exec) 19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec) 13 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
  # codec_ms_3 = PHI <codec_ms_2(14), codec_ms_2(16), codec_ms_2(19), codec_ms_43(20), 30(13), 30(15)>
  # map_bit_rate_5 = PHI <map_bit_rate_72(14), map_bit_rate_72(16), map_bit_rate_4(19), map_bit_rate_4(20), 13330(13), 32000(15)>
  # DEBUG map_bit_rate => map_bit_rate_5
  # DEBUG codec_ms => codec_ms_3
  D.40682_44 = map_9(D)->rm_rate;
  if (D.40682_44 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

  # BLOCK 22 freq:2900
  # PRED: 21 [29.0%]  (true,exec)
  D.40682_45 = map_9(D)->rm_rate;
  switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:10000
  # PRED: 21 [71.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  if (codec_ms_3 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

  # BLOCK 24 freq:2900
  # PRED: 23 [29.0%]  (true,exec)
  switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:10000
  # PRED: 23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  if (map_bit_rate_5 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

  # BLOCK 26 freq:3898
  # PRED: 25 [39.0%]  (true,exec)
  switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:10000
  # PRED: 25 [61.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  D.40698_47 = strlen (buf_46(D));
  D.40699_48 = buf_46(D) + D.40698_47;
  D.40700_49 = strlen (buf_46(D));
  D.40701_51 = buflen_50(D) - D.40700_49;
  D.40660_52 = map_9(D)->rm_encoding;
  switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_parse_crypto_prefs (switch_core_session_parse_crypto_prefs)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
;;
;; Loop 2
;;  header 48, latch 47
;;  depth 1, outer 0
;;  nodes: 48 47 45 46 42 44 49 43 41
;;
;; Loop 3
;;  header 44, latch 43
;;  depth 2, outer 2
;;  nodes: 44 43 41
;;
;; Loop 1
;;  header 51, latch 50
;;  depth 1, outer 0
;;  nodes: 51 50
;; 2 succs { 52 3 }
;; 3 succs { 52 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 22 20 }
;; 20 succs { 22 21 }
;; 21 succs { 22 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 34 }
;; 28 succs { 30 29 }
;; 29 succs { 30 31 }
;; 30 succs { 34 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 39 }
;; 35 succs { 38 36 }
;; 36 succs { 38 37 }
;; 37 succs { 38 }
;; 38 succs { 40 39 }
;; 39 succs { 51 }
;; 40 succs { 48 }
;; 41 succs { 42 43 }
;; 42 succs { 45 }
;; 43 succs { 44 }
;; 44 succs { 41 45 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 }
;; 48 succs { 49 52 }
;; 49 succs { 44 }
;; 50 succs { 51 }
;; 51 succs { 50 52 }
;; 52 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
;;
;; Loop 2
;;  header 48, latch 47
;;  depth 1, outer 0
;;  nodes: 48 47 45 46 42 44 49 43 41
;;
;; Loop 3
;;  header 44, latch 43
;;  depth 2, outer 2
;;  nodes: 44 43 41
;;
;; Loop 1
;;  header 51, latch 50
;;  depth 1, outer 0
;;  nodes: 51 50
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_7 = PHI <0(40), i_66(47)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_7 = PHI <0(40), i_66(47)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = argc_55)
(get_scalar_evolution 
  (scalar = argc_55)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (int) D.42573_54
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if (int) D.42573_54 < 0
    # of iterations D.42573_54, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = argc_55)
(get_scalar_evolution 
  (scalar = argc_55)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (int) D.42573_54
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if (int) D.42573_54 < 0
    # of iterations D.42573_54, bounded by 2147483647
Statement (exit)if (i_7 < argc_55)
 is executed at most (int) D.42573_54 < 0 ? 0 : D.42573_54 (bounded by 2147483647) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_66)
(get_scalar_evolution 
  (scalar = i_66)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = i_66)
  (scalar_evolution = {1, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 40)
  (evolution_loop = 2)
  (chrec = {1, +, 1}_2)
  (res = {1, +, 1}_2))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_66 = i_7 + 1;
 in loop 2.
Statement i_66 = i_7 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_9 = PHI <j_74(49), j_65(43)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_9 = PHI <j_74(49), j_65(43)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
(number_of_iterations_in_loop = 
  (set_nb_iterations_in_loop = scev_not_known))
)
(instantiate_scev 
  (instantiate_below = 40)
  (evolution_loop = 2)
  (chrec = j_9)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_9 = PHI <j_74(49), j_65(43)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_9 = PHI <j_74(49), j_65(43)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = k_11)
(get_scalar_evolution 
  (scalar = k_11)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
k_11 = PHI <0(40), k_10(47)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = k_11 = PHI <0(40), k_10(47)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = k_11)
  (scalar_evolution = k_11))
)
(instantiate_scev 
  (instantiate_below = 40)
  (evolution_loop = 2)
  (chrec = k_11)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = k_11)
(get_scalar_evolution 
  (scalar = k_11)
  (scalar_evolution = k_11))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = k_11)
  (scalar_evolution = k_11))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 40 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 40)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42574_59 = fields[i_7];
 in loop 2.
Statement D.42574_59 = fields[i_7];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_9 = PHI <j_74(49), j_65(43)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_9 = PHI <j_74(49), j_65(43)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 40)
  (evolution_loop = 2)
  (chrec = j_9)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_9 = PHI <j_74(49), j_65(43)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_9 = PHI <j_74(49), j_65(43)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.42576_61)
(get_scalar_evolution 
  (scalar = D.42576_61)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = D.42576_61)
  (scalar_evolution = D.42576_61))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.42576_61)
(get_scalar_evolution 
  (scalar = D.42576_61)
  (scalar_evolution = D.42576_61))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = D.42576_61)
  (scalar_evolution = D.42576_61))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_8)
(get_scalar_evolution 
  (scalar = i_8)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_8 = PHI <i_67(39), i_70(50)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_8 = PHI <i_67(39), i_70(50)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = i_8)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Predictions for bb 2
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 20
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 23
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 29
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 35
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 39 predicted to even probabilities
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
1 edges in bb 42 predicted to even probabilities
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics (ignored): 90.0%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  loop iterations heuristics: 90.0%
Predictions for bb 45
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 46 predicted to even probabilities
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics (ignored): 94.0%
  first match heuristics: 90.9%
  combined heuristics: 90.9%
  early return (on trees) heuristics (ignored): 61.0%
  guessed loop iterations heuristics: 90.9%
1 edges in bb 49 predicted to even probabilities
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  DS theory heuristics (ignored): 90.0%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  loop iterations heuristics: 90.0%
1 edges in bb 52 predicted to even probabilities

;; Function switch_core_session_parse_crypto_prefs

;; 
53 basic blocks, 82 edges, last basic block 53.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  52 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  52 [61.0%]  (true,exec) 4 [39.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [39.0%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [6.7%]  (true,exec) 8 [93.3%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [6.7%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [93.3%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (false,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (true,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [85.0%]  (false,exec)
Successors:  17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [29.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [50.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [29.0%]  (true,exec)
Successors:  24 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru)

Basic block 26 (new, reachable)
Predecessors:  22 [71.0%]  (false,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru) 23 [71.0%]  (false,exec)
Successors:  27 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [71.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [29.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (false,exec)
Successors:  30 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec) 29 [71.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  29 [29.0%]  (false,exec)
Successors:  32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [29.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  27 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 31 [50.0%]  (false,exec) 32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [72.0%]  (true,exec) 39 [28.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [72.0%]  (true,exec)
Successors:  38 [15.0%]  (true,exec) 36 [85.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [85.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  35 [15.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [100.0%]  (fallthru,exec)
Successors:  40 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [71.0%]  (false,exec) 34 [28.0%]  (false,exec)
Successors:  51 [100.0%]  (fallthru)

Basic block 40 (new, reachable)
Predecessors:  38 [29.0%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  44 [90.0%]  (true,exec)
Successors:  42 [4.5%]  (true,exec) 43 [95.5%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [4.5%]  (true,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [95.5%]  (false,exec)
Successors:  44 [100.0%]  (fallthru,dfs_back,exec)

Basic block 44 (new)
Predecessors:  49 [100.0%]  (fallthru) 43 [100.0%]  (fallthru,dfs_back,exec)
Successors:  41 [90.0%]  (true,exec) 45 [10.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  42 [100.0%]  (fallthru,exec) 44 [10.0%]  (false,exec)
Successors:  46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [29.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,dfs_back,exec)

Basic block 48 (new, reachable)
Predecessors:  40 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
Successors:  49 [90.9%]  (true,exec) 52 [9.1%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [90.9%]  (true,exec)
Successors:  44 [100.0%]  (fallthru)

Basic block 50 (new, reachable)
Predecessors:  51 [90.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,dfs_back,exec)

Basic block 51 (new)
Predecessors:  39 [100.0%]  (fallthru) 50 [100.0%]  (fallthru,dfs_back,exec)
Successors:  50 [90.0%]  (true,exec) 52 [10.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 3 [61.0%]  (true,exec) 48 [9.1%]  (false,exec) 51 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_session_parse_crypto_prefs (struct switch_core_session_t * session)
{
  const char D.47288;
  int D.47287;
  const char D.47284;
  int D.47283;
  const char D.47280;
  int D.47279;
  const char D.47276;
  int D.47275;
  int ok;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";
  int k;
  int j;
  int i;
  int argc;
  char * fields[10];
  struct switch_media_handle_t * smh;
  char * suites;
  const char * val;
  const char * var;
  switch_rtp_crypto_key_type_t D.42582;
  switch_rtp_crypto_key_type_t D.42579;
  int D.42576;
  char * D.42575;
  char * D.42574;
  unsigned int D.42573;
  switch_rtp_crypto_mode_t D.42569;
  int D.42565;
  int D.42562;
  int D.42561;
  int D.42559;
  int D.42552;
  uint32_t D.42550;
  switch_call_direction_t D.42548;
  switch_call_direction_t D.42529;
  uint32_t D.42526;
  struct switch_channel_t * D.42525;

  # BLOCK 2 freq:2203
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG var => 0B
  # DEBUG val => 0B
  # DEBUG suites => 0B
  # DEBUG argc => 0
  # DEBUG i => 0
  # DEBUG j => 0
  # DEBUG k => 0
  smh_22 = session_21(D)->media_handle;
  # DEBUG smh => smh_22
  if (smh_22 == 0B)
    goto <bb 52>;
  else
    goto <bb 3>;
  # SUCC: 52 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:1726
  # PRED: 2 [78.4%]  (false,exec)
  D.42525_23 = session_21(D)->channel;
  D.42526_24 = switch_channel_test_flag (D.42525_23, 106);
  if (D.42526_24 != 0)
    goto <bb 52>;
  else
    goto <bb 4>;
  # SUCC: 52 [61.0%]  (true,exec) 4 [39.0%]  (false,exec)

  # BLOCK 4 freq:673
  # PRED: 3 [39.0%]  (false,exec)
  D.42525_25 = session_21(D)->channel;
  D.42529_26 = switch_channel_direction (D.42525_25);
  if (D.42529_26 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 5 freq:336
  # PRED: 4 [50.0%]  (false,exec)
  # DEBUG var => "rtp_secure_media_outbound"
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:673
  # PRED: 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  # var_1 = PHI <"rtp_secure_media_inbound"(4), "rtp_secure_media_outbound"(5)>
  # DEBUG var => var_1
  D.42525_29 = session_21(D)->channel;
  val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);
  # DEBUG val => val_30
  if (val_30 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [6.7%]  (true,exec) 8 [93.3%]  (false,exec)

  # BLOCK 7 freq:45
  # PRED: 6 [6.7%]  (true,exec)
  # DEBUG var => "rtp_secure_media"
  D.42525_32 = session_21(D)->channel;
  val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);
  # DEBUG val => val_33
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:673
  # PRED: 6 [93.3%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  # var_2 = PHI <var_1(6), "rtp_secure_media"(7)>
  # val_3 = PHI <val_30(6), val_33(7)>
  # DEBUG val => val_3
  # DEBUG var => var_2
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;
  # SUCC: 11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 9 freq:572
  # PRED: 8 [85.0%]  (false,exec)
  D.47276_100 = *val_3;
  if (D.47276_100 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:286
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:673
  # PRED: 8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # D.47275_101 = PHI <1(8), 1(9), 0(10)>
  if (D.47275_101 == 0)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 12 freq:336
  # PRED: 11 [50.0%]  (true,exec)
  suites_35 = __builtin_strchr (val_3, 58);
  # DEBUG suites => suites_35
  if (suites_35 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:286
  # PRED: 12 [85.0%]  (true,exec)
  *suites_35 = 0;
  suites_36 = suites_35 + 1;
  # DEBUG suites => suites_36
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:673
  # PRED: 11 [50.0%]  (false,exec) 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  # suites_5 = PHI <0B(11), suites_35(12), suites_36(13)>
  # DEBUG suites => suites_5
  # DEBUG s => suites_5
  if (suites_5 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;
  # SUCC: 17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

  # BLOCK 15 freq:572
  # PRED: 14 [85.0%]  (false,exec)
  D.47280_102 = MEM[(const char *)suites_5];
  if (D.47280_102 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;
  # SUCC: 17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 16 freq:286
  # PRED: 15 [50.0%]  (false,exec)
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:673
  # PRED: 14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
  # D.47279_103 = PHI <1(14), 1(15), 0(16)>
  if (D.47279_103 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

  # BLOCK 18 freq:195
  # PRED: 17 [29.0%]  (true,exec)
  D.42525_38 = session_21(D)->channel;
  suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);
  # DEBUG suites => suites_39
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:673
  # PRED: 17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # suites_6 = PHI <suites_5(17), suites_39(18)>
  # DEBUG suites => suites_6
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

  # BLOCK 20 freq:572
  # PRED: 19 [85.0%]  (false,exec)
  D.47284_104 = *val_3;
  if (D.47284_104 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;
  # SUCC: 22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 21 freq:286
  # PRED: 20 [50.0%]  (false,exec)
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:673
  # PRED: 19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
  # D.47283_105 = PHI <1(19), 1(20), 0(21)>
  if (D.47283_105 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;
  # SUCC: 23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 23 freq:195
  # PRED: 22 [29.0%]  (true,exec)
  D.42525_41 = session_21(D)->channel;
  D.42548_42 = switch_channel_direction (D.42525_41);
  if (D.42548_42 == 0)
    goto <bb 24>;
  else
    goto <bb 26>;
  # SUCC: 24 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 24 freq:57
  # PRED: 23 [29.0%]  (true,exec)
  D.42525_43 = session_21(D)->channel;
  D.42550_44 = switch_channel_test_flag (D.42525_43, 84);
  if (D.42550_44 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:28
  # PRED: 24 [50.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru)

  # BLOCK 26 freq:673
  # PRED: 22 [71.0%]  (false,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru) 23 [71.0%]  (false,exec)
  # val_4 = PHI <val_3(22), "optional"(24), "forbidden"(25), "forbidden"(23)>
  # DEBUG val => val_4
  D.42552_47 = strcasecmp (val_4, "optional");
  if (D.42552_47 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

  # BLOCK 27 freq:478
  # PRED: 26 [71.0%]  (true,exec)
  smh_22->crypto_mode = 0;
  goto <bb 34>;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:195
  # PRED: 26 [29.0%]  (false,exec)
  D.42559_48 = switch_true (val_4);
  if (D.42559_48 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 29 freq:98
  # PRED: 28 [50.0%]  (false,exec)
  D.42561_49 = strcasecmp (val_4, "mandatory");
  if (D.42561_49 == 0)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

  # BLOCK 30 freq:167
  # PRED: 28 [50.0%]  (true,exec) 29 [71.0%]  (true,exec)
  smh_22->crypto_mode = 1;
  goto <bb 34>;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:28
  # PRED: 29 [29.0%]  (false,exec)
  smh_22->crypto_mode = 2;
  D.42562_50 = switch_false (val_4);
  if (D.42562_50 == 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 32 freq:14
  # PRED: 31 [50.0%]  (true,exec)
  D.42565_51 = strcasecmp (val_4, "forbidden");
  if (D.42565_51 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 33 freq:4
  # PRED: 32 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:673
  # PRED: 27 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 31 [50.0%]  (false,exec) 32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  D.42569_52 = smh_22->crypto_mode;
  if (D.42569_52 != 2)
    goto <bb 35>;
  else
    goto <bb 39>;
  # SUCC: 35 [72.0%]  (true,exec) 39 [28.0%]  (false,exec)

  # BLOCK 35 freq:484
  # PRED: 34 [72.0%]  (true,exec)
  # DEBUG s => suites_6
  if (suites_6 == 0B)
    goto <bb 38>;
  else
    goto <bb 36>;
  # SUCC: 38 [15.0%]  (true,exec) 36 [85.0%]  (false,exec)

  # BLOCK 36 freq:412
  # PRED: 35 [85.0%]  (false,exec)
  D.47288_106 = MEM[(const char *)suites_6];
  if (D.47288_106 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 37 freq:206
  # PRED: 36 [50.0%]  (false,exec)
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:484
  # PRED: 35 [15.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [100.0%]  (fallthru,exec)
  # D.47287_107 = PHI <1(35), 1(36), 0(37)>
  if (D.47287_107 == 0)
    goto <bb 40>;
  else
    goto <bb 39>;
  # SUCC: 40 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

  # BLOCK 39 freq:532
  # PRED: 38 [71.0%]  (false,exec) 34 [28.0%]  (false,exec)
  # i_67 = PHI <0(38), 0(34)>
  # k_64 = PHI <0(38), 0(34)>
  goto <bb 51>;
  # SUCC: 51 [100.0%]  (fallthru)

  # BLOCK 40 freq:140
  # PRED: 38 [29.0%]  (true,exec)
  D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);
  argc_55 = (int) D.42573_54;
  # DEBUG argc => argc_55
  # DEBUG i => 0
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:9000
  # PRED: 44 [90.0%]  (true,exec)
  D.42574_59 = fields[i_7];
  D.42575_60 = SUITES[j_9].name;
  D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
  if (D.42576_61 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [4.5%]  (true,exec) 43 [95.5%]  (false,exec)

  # BLOCK 42 freq:405
  # PRED: 41 [4.5%]  (true,exec)
  D.42579_62 = SUITES[j_9].type;
  smh_22->crypto_suite_order[k_11] = D.42579_62;
  k_63 = k_11 + 1;
  # DEBUG k => k_63
  # DEBUG ok => 1
  goto <bb 45>;
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:8595
  # PRED: 41 [95.5%]  (false,exec)
  j_65 = j_9 + 1;
  # DEBUG j => j_65
  # SUCC: 44 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 44 freq:10000
  # PRED: 49 [100.0%]  (fallthru) 43 [100.0%]  (fallthru,dfs_back,exec)
  # j_9 = PHI <j_74(49), j_65(43)>
  # DEBUG j => j_9
  if (j_9 <= 8)
    goto <bb 41>;
  else
    goto <bb 45>;
  # SUCC: 41 [90.0%]  (true,exec) 45 [10.0%]  (false,exec)

  # BLOCK 45 freq:1405
  # PRED: 42 [100.0%]  (fallthru,exec) 44 [10.0%]  (false,exec)
  # k_10 = PHI <k_63(42), k_11(44)>
  # ok_13 = PHI <1(42), 0(44)>
  # DEBUG ok => ok_13
  # DEBUG k => k_10
  if (ok_13 == 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

  # BLOCK 46 freq:407
  # PRED: 45 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1405
  # PRED: 45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  i_66 = i_7 + 1;
  # DEBUG i => i_66
  # SUCC: 48 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 48 freq:1545
  # PRED: 40 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
  # i_7 = PHI <0(40), i_66(47)>
  # k_11 = PHI <0(40), k_10(47)>
  # DEBUG k => k_11
  # DEBUG i => i_7
  if (i_7 < argc_55)
    goto <bb 49>;
  else
    goto <bb 52>;
  # SUCC: 49 [90.9%]  (true,exec) 52 [9.1%]  (false,exec)

  # BLOCK 49 freq:1405
  # PRED: 48 [90.9%]  (true,exec)
  # j_74 = PHI <0(48)>
  goto <bb 44>;
  # SUCC: 44 [100.0%]  (fallthru)

  # BLOCK 50 freq:4791
  # PRED: 51 [90.0%]  (true,exec)
  D.42582_68 = SUITES[i_8].type;
  smh_22->crypto_suite_order[k_12] = D.42582_68;
  k_69 = k_12 + 1;
  # DEBUG k => k_69
  i_70 = i_8 + 1;
  # DEBUG i => i_70
  # SUCC: 51 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 51 freq:5323
  # PRED: 39 [100.0%]  (fallthru) 50 [100.0%]  (fallthru,dfs_back,exec)
  # i_8 = PHI <i_67(39), i_70(50)>
  # k_12 = PHI <k_64(39), k_69(50)>
  # DEBUG k => k_12
  # DEBUG i => i_8
  if (i_8 <= 8)
    goto <bb 50>;
  else
    goto <bb 52>;
  # SUCC: 50 [90.0%]  (true,exec) 52 [10.0%]  (false,exec)

  # BLOCK 52 freq:2203
  # PRED: 2 [21.6%]  (true,exec) 3 [61.0%]  (true,exec) 48 [9.1%]  (false,exec) 51 [10.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function gen_ice (gen_ice)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 27 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 22 20 }
;; 20 succs { 22 21 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 20
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities
1 edges in bb 27 predicted to even probabilities

;; Function gen_ice

;; 
28 basic blocks, 39 edges, last basic block 28.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [6.7%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [6.7%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [6.7%]  (true,exec) 13 [93.3%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [6.7%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [93.3%]  (false,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [6.7%]  (true,exec) 15 [93.3%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [6.7%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [93.3%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [6.7%]  (true,exec) 17 [93.3%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [6.7%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [93.3%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [50.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [50.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [29.0%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [71.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 26 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


gen_ice (struct switch_core_session_t * session, switch_media_type_t type, const char * ip, switch_port_t port)
{
  const char D.47293;
  int D.47292;
  static const char __func__[8] = "gen_ice";
  static const char __PRETTY_FUNCTION__[8] = "gen_ice";
  char tmp[33];
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.42961;
  uint32_t D.42957;
  int D.42956;
  int D.42955;
  int D.42952;
  char * D.42951;
  char * D.42948;
  char * D.42947;
  char * D.42944;
  char * D.42943;
  char * D.42940;
  char * D.42939;
  char * D.42936;
  char * D.42935;
  char * D.42932;
  int8_t D.42929;
  unsigned int D.42928;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  tmp = "";
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;
  # SUCC: 27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_6
  D.42929_7 = engine_6->rtcp_mux;
  if (D.42929_7 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 6 freq:4491
  # PRED: 5 [50.0%]  (true,exec)
  engine_6->rtcp_mux = 1;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:8982
  # PRED: 5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.42932_8 = smh_2->msid;
  if (D.42932_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

  # BLOCK 8 freq:604
  # PRED: 7 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 32, 0B);
  tmp[32] = 0;
  D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);
  smh_2->msid = D.42935_9;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8982
  # PRED: 7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  D.42936_10 = smh_2->cname;
  if (D.42936_10 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

  # BLOCK 10 freq:604
  # PRED: 9 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);
  smh_2->cname = D.42939_11;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:8982
  # PRED: 9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  D.42940_12 = engine_6->ice_out.ufrag;
  if (D.42940_12 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [6.7%]  (true,exec) 13 [93.3%]  (false,exec)

  # BLOCK 12 freq:604
  # PRED: 11 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);
  engine_6->ice_out.ufrag = D.42943_13;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:8982
  # PRED: 11 [93.3%]  (false,exec) 12 [100.0%]  (fallthru,exec)
  D.42944_14 = engine_6->ice_out.pwd;
  if (D.42944_14 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [6.7%]  (true,exec) 15 [93.3%]  (false,exec)

  # BLOCK 14 freq:604
  # PRED: 13 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);
  engine_6->ice_out.pwd = D.42947_15;
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:8982
  # PRED: 13 [93.3%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
  if (D.42948_16 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [6.7%]  (true,exec) 17 [93.3%]  (false,exec)

  # BLOCK 16 freq:604
  # PRED: 15 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 10, "0123456789");
  tmp[10] = 0;
  D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);
  engine_6->ice_out.cands[0][0].foundation = D.42951_17;
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:8982
  # PRED: 15 [93.3%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  engine_6->ice_out.cands[0][0].transport = "udp";
  D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
  if (D.42952_18 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 18 freq:4491
  # PRED: 17 [50.0%]  (true,exec)
  engine_6->ice_out.cands[0][0].component_id = 1;
  D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
  D.42955_20 = 329569 - D.42952_19;
  D.42956_21 = D.42955_20 * 2;
  D.42957_22 = (uint32_t) D.42956_21;
  engine_6->ice_out.cands[0][0].priority = D.42957_22;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:8982
  # PRED: 17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # DEBUG s => ip_23(D)
  if (ip_23(D) == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

  # BLOCK 20 freq:7635
  # PRED: 19 [85.0%]  (false,exec)
  D.47293_66 = *ip_23(D);
  if (D.47293_66 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;
  # SUCC: 22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 21 freq:3818
  # PRED: 20 [50.0%]  (false,exec)
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:8982
  # PRED: 19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
  # D.47292_67 = PHI <1(19), 1(20), 0(21)>
  if (D.47292_67 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

  # BLOCK 23 freq:2605
  # PRED: 22 [29.0%]  (true,exec)
  D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);
  engine_6->ice_out.cands[0][0].con_addr = D.42961_25;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:8982
  # PRED: 22 [71.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  if (port_26(D) != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 25 freq:4491
  # PRED: 24 [50.0%]  (true,exec)
  engine_6->ice_out.cands[0][0].con_port = port_26(D);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:8982
  # PRED: 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
  engine_6->ice_out.cands[0][0].generation = "0";
  engine_6->ice_out.cands[0][0].ready = 1;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 26 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function get_channels (get_channels)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 3
  DS theory heuristics: 67.0%
  first match heuristics (ignored): 67.0%
  combined heuristics: 67.0%
  const return heuristics: 67.0%
Predictions for bb 4
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function get_channels

;; 
8 basic blocks, 10 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec)
Successors:  7 [67.0%]  (true,exec) 4 [33.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec) 3 [33.0%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 4 [50.0%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  3 [67.0%]  (true,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


get_channels (const char * name, int dft)
{
  int D.42982;
  int D.42979;
  char * D.42978;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");
  D.42979_4 = switch_true (D.42978_3);
  if (D.42979_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 3 freq:5000
  # PRED: 2 [50.0%]  (true,exec)
  D.42982_6 = strcasecmp (name_5(D), "opus");
  if (D.42982_6 == 0)
    goto <bb 7>;
  else
    goto <bb 4>;
  # SUCC: 7 [67.0%]  (true,exec) 4 [33.0%]  (false,exec)

  # BLOCK 4 freq:6650
  # PRED: 2 [50.0%]  (false,exec) 3 [33.0%]  (false,exec)
  if (dft_8(D) != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 5 freq:3325
  # PRED: 4 [50.0%]  (true,exec)
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6650
  # PRED: 5 [100.0%]  (fallthru,exec) 4 [50.0%]  (false,exec)
  # dft_2 = PHI <dft_8(D)(5), 1(4)>
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 3 [67.0%]  (true,exec) 6 [100.0%]  (fallthru,exec)
  # dft_1 = PHI <2(3), dft_2(6)>
  return dft_1;
  # SUCC: EXIT [100.0%] 

}



;; Function generate_local_fingerprint (generate_local_fingerprint)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 3
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function generate_local_fingerprint

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [61.0%]  (true,exec)
Successors:  4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [15.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  2 [39.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


generate_local_fingerprint (struct switch_media_handle_t * smh, switch_media_type_t type)
{
  struct switch_rtp_engine_t * engine;
  struct dtls_fingerprint_t * D.43000;
  char * D.42996;
  uint32_t D.42993;
  unsigned int D.42992;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_5
  D.42993_6 = engine_5->local_dtls_fingerprint.len;
  if (D.42993_6 == 0)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 3 freq:6100
  # PRED: 2 [61.0%]  (true,exec)
  D.42996_7 = engine_5->remote_dtls_fingerprint.type;
  if (D.42996_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [85.0%]  (true,exec)
  D.42996_8 = engine_5->remote_dtls_fingerprint.type;
  engine_5->local_dtls_fingerprint.type = D.42996_8;
  goto <bb 6>;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:915
  # PRED: 3 [15.0%]  (false,exec)
  engine_5->local_dtls_fingerprint.type = "sha-256";
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6100
  # PRED: 4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
  D.43000_9 = &engine_5->local_dtls_fingerprint;
  switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 2 [39.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function start_video_thread (start_video_thread)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 89.9%
  first match heuristics (ignored): 85.0%
  combined heuristics: 89.9%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities

;; Function start_video_thread

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [89.9%]  (true,exec) 4 [10.1%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [10.1%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [89.9%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


start_video_thread (struct switch_core_session_t * session)
{
  static const char __func__[19] = "start_video_thread";
  struct switch_media_handle_t * smh;
  struct switch_memory_pool_t * pool;
  struct switch_threadattr_t * thd_attr;
  struct switch_memory_pool_t * D.43812;
  struct media_helper * D.43811;
  struct switch_thread_t * * D.43810;
  struct switch_mutex_t * * D.43809;
  struct switch_mutex_t * * D.43808;
  struct switch_thread_cond_t * * D.43807;
  struct switch_threadattr_t * thd_attr.69;
  switch_payload_t D.43805;
  struct payload_map_t * D.43804;
  struct switch_rtp_t * D.43803;
  char * D.43802;
  struct switch_channel_t * D.43801;
  struct switch_thread_t * D.43798;
  switch_status_t D.43797;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  thd_attr = 0B;
  pool_3 = switch_core_session_get_pool (session_2(D));
  # DEBUG pool => pool_3
  # DEBUG v_engine => 0B
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
  # SUCC: 5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  # DEBUG D#3 => &smh_5->engines[1]
  # DEBUG v_engine => D#3
  D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  if (D.43798_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [89.9%]  (true,exec) 4 [10.1%]  (false,exec)

  # BLOCK 4 freq:910
  # PRED: 3 [10.1%]  (false,exec)
  D.43801_10 = switch_core_session_get_channel (session_2(D));
  D.43802_11 = switch_channel_get_name (D.43801_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);
  D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;
  D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;
  D.43805_14 = D.43804_13->agreed_pt;
  switch_rtp_set_default_payload (D.43803_12, D.43805_14);
  MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);
  switch_threadattr_create (&thd_attr, pool_3);
  thd_attr.69_15 = thd_attr;
  switch_threadattr_stacksize_set (thd_attr.69_15, 245760);
  D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;
  switch_thread_cond_create (D.43807_16, pool_3);
  D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;
  switch_mutex_init (D.43808_17, 1, pool_3);
  D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];
  switch_mutex_init (D.43809_18, 1, pool_3);
  D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  thd_attr.69_20 = thd_attr;
  D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;
  D.43812_22 = switch_core_session_get_pool (session_2(D));
  switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 3 [89.9%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # D.43797_1 = PHI <1(2), 1(3), 0(4)>
  return D.43797_1;
  # SUCC: EXIT [100.0%] 

}



;; Function video_helper_thread (video_helper_thread)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;;
;; Loop 1
;;  header 27, latch 26
;;  depth 1, outer 0
;;  nodes: 27 26 25 13 16 19 23 24 22 20 21 17 18 14 15 12 6 11 9 10 7 8
;; 2 succs { 29 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 27 }
;; 6 succs { 7 12 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 26 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 26 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 26 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 6 28 }
;; 28 succs { 29 }
;; 29 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;;
;; Loop 1
;;  header 27, latch 26
;;  depth 1, outer 0
;;  nodes: 27 26 25 13 16 19 23 24 22 20 21 17 18 14 15 12 6 11 9 10 7 8
Predictions for bb 2
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 7
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 15
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
  continue heuristics: 50.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 18
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 50.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
  continue heuristics: 50.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics (ignored): 80.5%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 91.0%
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities

;; Function video_helper_thread

;; 
30 basic blocks, 43 edges, last basic block 30.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  29 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  27 [91.0%]  (true,exec)
Successors:  7 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [29.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  6 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [71.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [29.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  16 [29.0%]  (true,exec) 17 [71.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [29.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 15 [71.0%]  (false,exec)
Successors:  18 [71.0%]  (true,exec) 20 [29.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [71.0%]  (true,exec)
Successors:  19 [51.2%]  (true,exec) 20 [48.8%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [51.2%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  17 [29.0%]  (false,exec) 18 [48.8%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [71.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [29.0%]  (false,exec)
Successors:  25 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [29.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec) 24 [71.0%]  (false,exec)
Successors:  27 [100.0%]  (fallthru,dfs_back)

Basic block 27 (new)
Predecessors:  26 [100.0%]  (fallthru,dfs_back) 5 [100.0%]  (fallthru,exec)
Successors:  6 [91.0%]  (true,exec) 28 [9.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [9.0%]  (false,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 28 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


video_helper_thread (struct switch_thread_t * thread, void * obj)
{
  static const char __func__[20] = "video_helper_thread";
  struct switch_media_handle_t * smh;
  struct switch_frame_t * read_frame;
  switch_status_t status;
  struct switch_channel_t * channel;
  struct switch_core_session_t * session;
  char * D.43871;
  switch_channel_state_t D.43870;
  uint32_t D.43867;
  int D.43863;
  int D.43862;
  switch_frame_flag_t D.43861;
  struct switch_frame_t * read_frame.73;
  uint32_t D.43857;
  _Bool D.43852;
  _Bool D.43851;
  _Bool D.43850;
  uint32_t D.43847;
  uint32_t D.43844;
  uint32_t D.43841;
  uint32_t D.43837;
  char * iftmp.72;
  char * D.43835;
  struct switch_thread_cond_t * D.43834;
  uint32_t D.43830;
  char * iftmp.71;
  char * D.43828;
  uint32_t D.43825;
  uint32_t D.43821;
  char * iftmp.70;
  char * D.43819;
  struct switch_channel_t * D.43818;
  struct switch_mutex_t * D.43817;

  # BLOCK 2 freq:1149
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG mh => obj_5(D)
  session_7 = MEM[(struct media_helper *)obj_5(D)].session;
  # DEBUG session => session_7
  channel_8 = switch_core_session_get_channel (session_7);
  # DEBUG channel => channel_8
  smh_9 = session_7->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 29>;
  else
    goto <bb 3>;
  # SUCC: 29 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:900
  # PRED: 2 [78.4%]  (false,exec)
  switch_core_session_read_lock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 1;
  D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_lock (D.43817_11);
  D.43818_12 = session_7->channel;
  D.43819_13 = switch_channel_get_name (D.43818_12);
  D.43821_14 = switch_channel_test_flag (channel_8, 115);
  if (D.43821_14 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 4 freq:450
  # PRED: 3 [50.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:900
  # PRED: 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # iftmp.70_2 = PHI <"on"(3), "off"(4)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);
  switch_core_session_refresh_video (session_7);
  goto <bb 27>;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9100
  # PRED: 27 [91.0%]  (true,exec)
  D.43825_18 = switch_channel_test_flag (channel_8, 113);
  if (D.43825_18 != 0)
    goto <bb 7>;
  else
    goto <bb 12>;
  # SUCC: 7 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 7 freq:2639
  # PRED: 6 [29.0%]  (true,exec)
  D.43818_19 = session_7->channel;
  D.43828_20 = switch_channel_get_name (D.43818_19);
  D.43830_21 = switch_channel_test_flag (channel_8, 115);
  if (D.43830_21 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;
  # SUCC: 9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 8 freq:1320
  # PRED: 7 [50.0%]  (false,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:2639
  # PRED: 7 [50.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
  # iftmp.71_3 = PHI <"on"(7), "off"(8)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);
  D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;
  D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_thread_cond_wait (D.43834_24, D.43817_25);
  D.43818_26 = session_7->channel;
  D.43835_27 = switch_channel_get_name (D.43818_26);
  D.43837_28 = switch_channel_test_flag (channel_8, 115);
  if (D.43837_28 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:1320
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:2639
  # PRED: 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # iftmp.72_4 = PHI <"on"(9), "off"(10)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);
  switch_core_session_refresh_video (session_7);
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9100
  # PRED: 6 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  D.43841_31 = switch_channel_test_flag (channel_8, 113);
  if (D.43841_31 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

  # BLOCK 13 freq:6461
  # PRED: 12 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:2639
  # PRED: 12 [29.0%]  (false,exec)
  D.43818_32 = session_7->channel;
  D.43844_33 = switch_channel_test_flag (D.43818_32, 1);
  if (D.43844_33 == 0)
    goto <bb 15>;
  else
    goto <bb 17>;
  # SUCC: 15 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

  # BLOCK 15 freq:1320
  # PRED: 14 [50.0%]  (true,exec)
  D.43818_34 = session_7->channel;
  D.43847_35 = switch_channel_test_flag (D.43818_34, 3);
  if (D.43847_35 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [29.0%]  (true,exec) 17 [71.0%]  (false,exec)

  # BLOCK 16 freq:383
  # PRED: 15 [29.0%]  (true,exec)
  switch_sleep (10000);
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:2256
  # PRED: 14 [50.0%]  (false,exec) 15 [71.0%]  (false,exec)
  status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);
  # DEBUG status => status_36
  D.43850_37 = status_36 != 0;
  D.43851_38 = status_36 != 11;
  D.43852_39 = D.43850_37 && D.43851_38;
  if (D.43852_39 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;
  # SUCC: 18 [71.0%]  (true,exec) 20 [29.0%]  (false,exec)

  # BLOCK 18 freq:1602
  # PRED: 17 [71.0%]  (true,exec)
  if (status_36 != 10)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [51.2%]  (true,exec) 20 [48.8%]  (false,exec)

  # BLOCK 19 freq:821
  # PRED: 18 [51.2%]  (true,exec)
  switch_cond_next ();
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:1436
  # PRED: 17 [29.0%]  (false,exec) 18 [48.8%]  (false,exec)
  D.43857_40 = switch_channel_test_flag (channel_8, 70);
  if (D.43857_40 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 21 freq:416
  # PRED: 20 [29.0%]  (true,exec)
  switch_core_session_refresh_video (session_7);
  switch_channel_clear_flag (channel_8, 70);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:1436
  # PRED: 20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  read_frame.73_41 = read_frame;
  D.43861_42 = read_frame.73_41->flags;
  D.43862_43 = (int) D.43861_42;
  D.43863_44 = D.43862_43 & 1;
  if (D.43863_44 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

  # BLOCK 23 freq:1019
  # PRED: 22 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:416
  # PRED: 22 [29.0%]  (false,exec)
  D.43867_46 = switch_channel_test_flag (channel_8, 115);
  if (D.43867_46 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 25 freq:121
  # PRED: 24 [29.0%]  (true,exec)
  read_frame.73_47 = read_frame;
  switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:9100
  # PRED: 25 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec) 24 [71.0%]  (false,exec)
  # SUCC: 27 [100.0%]  (fallthru,dfs_back)

  # BLOCK 27 freq:10000
  # PRED: 26 [100.0%]  (fallthru,dfs_back) 5 [100.0%]  (fallthru,exec)
  D.43870_17 = switch_channel_get_state (channel_8);
  if (D.43870_17 <= 9)
    goto <bb 6>;
  else
    goto <bb 28>;
  # SUCC: 6 [91.0%]  (true,exec) 28 [9.0%]  (false,exec)

  # BLOCK 28 freq:900
  # PRED: 27 [9.0%]  (false,exec)
  D.43818_48 = session_7->channel;
  D.43871_49 = switch_channel_get_name (D.43818_48);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);
  D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_unlock (D.43817_50);
  switch_core_session_rwunlock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 0;
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:1149
  # PRED: 2 [21.6%]  (true,exec) 28 [100.0%]  (fallthru,exec)
  return 0B;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_process_udptl (switch_core_media_process_udptl)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
;;
;; Loop 1
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 17 20 24 28 32 35 38 41 44 45 46 47 42 43 39 40 36 37 33 34 29 25 21 18 19 15 16 30 31 26 27 22 23
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 14 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 49 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 48 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 48 }
;; 21 succs { 22 25 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 48 }
;; 25 succs { 26 29 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 48 }
;; 29 succs { 30 33 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 48 }
;; 33 succs { 34 36 }
;; 34 succs { 35 36 }
;; 35 succs { 48 }
;; 36 succs { 37 39 }
;; 37 succs { 38 39 }
;; 38 succs { 48 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 48 }
;; 42 succs { 43 45 }
;; 43 succs { 44 45 }
;; 44 succs { 48 }
;; 45 succs { 46 48 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 15 50 }
;; 50 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
;;
;; Loop 1
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 17 20 24 28 32 35 38 41 44 45 46 47 42 43 39 40 36 37 33 34 29 25 21 18 19 15 16 30 31 26 27 22 23
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_29(14), attr_84(48)>
)
  (init_cond = attr_29))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_29(14), attr_84(48)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
Predictions for bb 2
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 11
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 12
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 13 predicted to even probabilities
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 16
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 19
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 22
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 23 predicted to even probabilities
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 26
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 27 predicted to even probabilities
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 30
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 31 predicted to even probabilities
1 edges in bb 32 predicted to even probabilities
Predictions for bb 33
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 34
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 37
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 40
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 41 predicted to even probabilities
Predictions for bb 42
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 43
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 46
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 47 predicted to even probabilities
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 50 predicted to even probabilities

;; Function switch_core_media_process_udptl

;; 
51 basic blocks, 78 edges, last basic block 51.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [6.7%]  (true,exec) 4 [93.3%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [6.7%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [93.3%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  5 [69.8%]  (true,exec) 6 [30.2%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [69.8%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [30.2%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [69.8%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 8 [30.2%]  (false,exec)
Successors:  11 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  12 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec)
Successors:  13 [69.8%]  (true,exec) 14 [30.2%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [69.8%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  49 [91.0%]  (true,exec)
Successors:  16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec)
Successors:  17 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec) 16 [30.2%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (true,exec)
Successors:  20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec) 19 [30.2%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [69.8%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [30.2%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  26 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [50.0%]  (true,exec)
Successors:  27 [69.8%]  (true,exec) 28 [30.2%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [69.8%]  (true,exec)
Successors:  28 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [30.2%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  25 [50.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec)
Successors:  31 [69.8%]  (true,exec) 32 [30.2%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [69.8%]  (true,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [30.2%]  (false,exec) 31 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  29 [50.0%]  (false,exec)
Successors:  34 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [50.0%]  (true,exec)
Successors:  35 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  33 [50.0%]  (false,exec) 34 [30.2%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec) 37 [30.2%]  (false,exec)
Successors:  40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  41 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec) 40 [30.2%]  (false,exec)
Successors:  43 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [50.0%]  (true,exec)
Successors:  44 [69.8%]  (true,exec) 45 [30.2%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  42 [50.0%]  (false,exec) 43 [30.2%]  (false,exec)
Successors:  46 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  17 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 41 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 45 [50.0%]  (false,exec) 46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [100.0%]  (fallthru,dfs_back,exec)

Basic block 49 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 48 [100.0%]  (fallthru,dfs_back,exec)
Successors:  15 [91.0%]  (true,exec) 50 [9.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [9.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_process_udptl (struct switch_core_session_t * session, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47319;
  int D.47316;
  int dft;
  int dft;
  int dft;
  int D.47304;
  int D.47301;
  static const char __func__[32] = "switch_core_media_process_udptl";
  struct sdp_attribute_t * attr;
  struct switch_t38_options_t * t38_options;
  char * D.45417;
  int D.45412;
  char * D.45411;
  int D.45408;
  unsigned int D.45405;
  int D.45401;
  unsigned int D.45398;
  int D.45394;
  char * D.45391;
  int D.45388;
  switch_bool_t D.45384;
  int D.45380;
  switch_bool_t D.45378;
  int D.45374;
  switch_bool_t D.45372;
  int D.45368;
  unsigned int D.45367;
  int D.45363;
  short unsigned int D.45360;
  const char * D.45357;
  int D.45355;
  const char * D.45354;
  char * D.45351;
  const char * D.45348;
  struct sdp_connection_t * D.45345;
  char * D.45342;
  const char * D.45340;
  struct sdp_connection_t * D.45338;
  char * D.45334;
  const char * D.45333;
  struct sdp_origin_t * D.45330;
  short unsigned int D.45329;
  long unsigned int D.45328;
  char * D.45327;
  char * D.45326;
  struct switch_channel_t * D.45323;

  # BLOCK 2 freq:900
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.45323_4 = session_3(D)->channel;
  t38_options_5 = switch_channel_get_private (D.45323_4, "t38_options");
  # DEBUG t38_options => t38_options_5
  if (t38_options_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [6.7%]  (true,exec) 4 [93.3%]  (false,exec)

  # BLOCK 3 freq:60
  # PRED: 2 [6.7%]  (true,exec)
  t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);
  # DEBUG t38_options => t38_options_6
  t38_options_6->T38FaxVersion = 0;
  t38_options_6->T38MaxBitRate = 14400;
  D.45326_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);
  t38_options_6->T38FaxRateManagement = D.45326_7;
  D.45327_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);
  t38_options_6->T38FaxUdpEC = D.45327_8;
  t38_options_6->T38FaxMaxBuffer = 500;
  t38_options_6->T38FaxMaxDatagram = 500;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:900
  # PRED: 2 [93.3%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  # t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>
  # DEBUG t38_options => t38_options_1
  D.45328_10 = m_9(D)->m_port;
  D.45329_11 = (short unsigned int) D.45328_10;
  t38_options_1->remote_port = D.45329_11;
  D.45330_13 = sdp_12(D)->sdp_origin;
  if (D.45330_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [69.8%]  (true,exec) 6 [30.2%]  (false,exec)

  # BLOCK 5 freq:628
  # PRED: 4 [69.8%]  (true,exec)
  D.45330_14 = sdp_12(D)->sdp_origin;
  D.45333_15 = D.45330_14->o_username;
  D.45334_16 = switch_core_perform_session_strdup (session_3(D), D.45333_15, "src/switch_core_media.c", &__func__, 383);
  t38_options_1->sdp_o_line = D.45334_16;
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:272
  # PRED: 4 [30.2%]  (false,exec)
  t38_options_1->sdp_o_line = "unknown";
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:900
  # PRED: 5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
  D.45338_17 = m_9(D)->m_connections;
  if (D.45338_17 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
  # SUCC: 8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 8 freq:765
  # PRED: 7 [85.0%]  (true,exec)
  D.45338_18 = m_9(D)->m_connections;
  D.45340_19 = D.45338_18->c_address;
  if (D.45340_19 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

  # BLOCK 9 freq:534
  # PRED: 8 [69.8%]  (true,exec)
  D.45338_20 = m_9(D)->m_connections;
  D.45340_21 = D.45338_20->c_address;
  D.45342_22 = switch_core_perform_session_strdup (session_3(D), D.45340_21, "src/switch_core_media.c", &__func__, 389);
  t38_options_1->remote_ip = D.45342_22;
  goto <bb 14>;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:366
  # PRED: 7 [15.0%]  (false,exec) 8 [30.2%]  (false,exec)
  if (sdp_12(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;
  # SUCC: 11 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 11 freq:311
  # PRED: 10 [85.0%]  (true,exec)
  D.45345_23 = sdp_12(D)->sdp_connection;
  if (D.45345_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 12 freq:264
  # PRED: 11 [85.0%]  (true,exec)
  D.45345_24 = sdp_12(D)->sdp_connection;
  D.45348_25 = D.45345_24->c_address;
  if (D.45348_25 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [69.8%]  (true,exec) 14 [30.2%]  (false,exec)

  # BLOCK 13 freq:185
  # PRED: 12 [69.8%]  (true,exec)
  D.45345_26 = sdp_12(D)->sdp_connection;
  D.45348_27 = D.45345_26->c_address;
  D.45351_28 = switch_core_perform_session_strdup (session_3(D), D.45348_27, "src/switch_core_media.c", &__func__, 391);
  t38_options_1->remote_ip = D.45351_28;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:900
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  attr_29 = m_9(D)->m_attributes;
  # DEBUG attr => attr_29
  goto <bb 49>;
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:9100
  # PRED: 49 [91.0%]  (true,exec)
  D.45354_30 = attr_2->a_name;
  D.45355_31 = strcasecmp (D.45354_30, "T38FaxVersion");
  if (D.45355_31 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 16 freq:4550
  # PRED: 15 [50.0%]  (true,exec)
  D.45357_32 = attr_2->a_value;
  if (D.45357_32 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

  # BLOCK 17 freq:3177
  # PRED: 16 [69.8%]  (true,exec)
  D.45357_33 = attr_2->a_value;
  # DEBUG __nptr => D.45357_33
  D.47301_136 = strtol (D.45357_33, 0B, 10);
  D.45360_35 = (short unsigned int) D.47301_136;
  t38_options_1->T38FaxVersion = D.45360_35;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:5923
  # PRED: 15 [50.0%]  (false,exec) 16 [30.2%]  (false,exec)
  D.45354_36 = attr_2->a_name;
  D.45363_37 = strcasecmp (D.45354_36, "T38MaxBitRate");
  if (D.45363_37 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;
  # SUCC: 19 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 19 freq:2961
  # PRED: 18 [50.0%]  (true,exec)
  D.45357_38 = attr_2->a_value;
  if (D.45357_38 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

  # BLOCK 20 freq:2068
  # PRED: 19 [69.8%]  (true,exec)
  D.45357_39 = attr_2->a_value;
  # DEBUG __nptr => D.45357_39
  D.47304_137 = strtol (D.45357_39, 0B, 10);
  D.45367_41 = (unsigned int) D.47304_137;
  t38_options_1->T38MaxBitRate = D.45367_41;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:3855
  # PRED: 18 [50.0%]  (false,exec) 19 [30.2%]  (false,exec)
  D.45354_42 = attr_2->a_name;
  D.45368_43 = strcasecmp (D.45354_42, "T38FaxFillBitRemoval");
  if (D.45368_43 == 0)
    goto <bb 22>;
  else
    goto <bb 25>;
  # SUCC: 22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 22 freq:1927
  # PRED: 21 [50.0%]  (true,exec)
  D.45357_44 = attr_2->a_value;
  # DEBUG nptr => D.45357_44
  # DEBUG dft => 1
  if (D.45357_44 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

  # BLOCK 23 freq:1346
  # PRED: 22 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45357_44
  dft_138 = strtol (D.45357_44, 0B, 10);
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:1927
  # PRED: 22 [30.2%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  # dft_139 = PHI <1(22), dft_138(23)>
  D.45372_46 = (switch_bool_t) dft_139;
  t38_options_1->T38FaxFillBitRemoval = D.45372_46;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1927
  # PRED: 21 [50.0%]  (false,exec)
  D.45354_47 = attr_2->a_name;
  D.45374_48 = strcasecmp (D.45354_47, "T38FaxTranscodingMMR");
  if (D.45374_48 == 0)
    goto <bb 26>;
  else
    goto <bb 29>;
  # SUCC: 26 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 26 freq:964
  # PRED: 25 [50.0%]  (true,exec)
  D.45357_49 = attr_2->a_value;
  # DEBUG nptr => D.45357_49
  # DEBUG dft => 1
  if (D.45357_49 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [69.8%]  (true,exec) 28 [30.2%]  (false,exec)

  # BLOCK 27 freq:673
  # PRED: 26 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45357_49
  dft_140 = strtol (D.45357_49, 0B, 10);
  # SUCC: 28 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:964
  # PRED: 26 [30.2%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  # dft_141 = PHI <1(26), dft_140(27)>
  D.45378_51 = (switch_bool_t) dft_141;
  t38_options_1->T38FaxTranscodingMMR = D.45378_51;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:964
  # PRED: 25 [50.0%]  (false,exec)
  D.45354_52 = attr_2->a_name;
  D.45380_53 = strcasecmp (D.45354_52, "T38FaxTranscodingJBIG");
  if (D.45380_53 == 0)
    goto <bb 30>;
  else
    goto <bb 33>;
  # SUCC: 30 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 30 freq:482
  # PRED: 29 [50.0%]  (true,exec)
  D.45357_54 = attr_2->a_value;
  # DEBUG nptr => D.45357_54
  # DEBUG dft => 1
  if (D.45357_54 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [69.8%]  (true,exec) 32 [30.2%]  (false,exec)

  # BLOCK 31 freq:336
  # PRED: 30 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45357_54
  dft_142 = strtol (D.45357_54, 0B, 10);
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:482
  # PRED: 30 [30.2%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  # dft_143 = PHI <1(30), dft_142(31)>
  D.45384_56 = (switch_bool_t) dft_143;
  t38_options_1->T38FaxTranscodingJBIG = D.45384_56;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:482
  # PRED: 29 [50.0%]  (false,exec)
  D.45354_57 = attr_2->a_name;
  D.45388_58 = strcasecmp (D.45354_57, "T38FaxRateManagement");
  if (D.45388_58 == 0)
    goto <bb 34>;
  else
    goto <bb 36>;
  # SUCC: 34 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 34 freq:241
  # PRED: 33 [50.0%]  (true,exec)
  D.45357_59 = attr_2->a_value;
  if (D.45357_59 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

  # BLOCK 35 freq:168
  # PRED: 34 [69.8%]  (true,exec)
  D.45357_60 = attr_2->a_value;
  D.45391_61 = switch_core_perform_session_strdup (session_3(D), D.45357_60, "src/switch_core_media.c", &__func__, 406);
  t38_options_1->T38FaxRateManagement = D.45391_61;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:314
  # PRED: 33 [50.0%]  (false,exec) 34 [30.2%]  (false,exec)
  D.45354_62 = attr_2->a_name;
  D.45394_63 = strcasecmp (D.45354_62, "T38FaxMaxBuffer");
  if (D.45394_63 == 0)
    goto <bb 37>;
  else
    goto <bb 39>;
  # SUCC: 37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 37 freq:157
  # PRED: 36 [50.0%]  (true,exec)
  D.45357_64 = attr_2->a_value;
  if (D.45357_64 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

  # BLOCK 38 freq:109
  # PRED: 37 [69.8%]  (true,exec)
  D.45357_65 = attr_2->a_value;
  # DEBUG __nptr => D.45357_65
  D.47316_144 = strtol (D.45357_65, 0B, 10);
  D.45398_67 = (unsigned int) D.47316_144;
  t38_options_1->T38FaxMaxBuffer = D.45398_67;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:204
  # PRED: 36 [50.0%]  (false,exec) 37 [30.2%]  (false,exec)
  D.45354_68 = attr_2->a_name;
  D.45401_69 = strcasecmp (D.45354_68, "T38FaxMaxDatagram");
  if (D.45401_69 == 0)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 40 freq:102
  # PRED: 39 [50.0%]  (true,exec)
  D.45357_70 = attr_2->a_value;
  if (D.45357_70 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

  # BLOCK 41 freq:71
  # PRED: 40 [69.8%]  (true,exec)
  D.45357_71 = attr_2->a_value;
  # DEBUG __nptr => D.45357_71
  D.47319_145 = strtol (D.45357_71, 0B, 10);
  D.45405_73 = (unsigned int) D.47319_145;
  t38_options_1->T38FaxMaxDatagram = D.45405_73;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:133
  # PRED: 39 [50.0%]  (false,exec) 40 [30.2%]  (false,exec)
  D.45354_74 = attr_2->a_name;
  D.45408_75 = strcasecmp (D.45354_74, "T38FaxUdpEC");
  if (D.45408_75 == 0)
    goto <bb 43>;
  else
    goto <bb 45>;
  # SUCC: 43 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

  # BLOCK 43 freq:66
  # PRED: 42 [50.0%]  (true,exec)
  D.45357_76 = attr_2->a_value;
  if (D.45357_76 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [69.8%]  (true,exec) 45 [30.2%]  (false,exec)

  # BLOCK 44 freq:46
  # PRED: 43 [69.8%]  (true,exec)
  D.45357_77 = attr_2->a_value;
  D.45411_78 = switch_core_perform_session_strdup (session_3(D), D.45357_77, "src/switch_core_media.c", &__func__, 412);
  t38_options_1->T38FaxUdpEC = D.45411_78;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:86
  # PRED: 42 [50.0%]  (false,exec) 43 [30.2%]  (false,exec)
  D.45354_79 = attr_2->a_name;
  D.45412_80 = strcasecmp (D.45354_79, "T38VendorInfo");
  if (D.45412_80 == 0)
    goto <bb 46>;
  else
    goto <bb 48>;
  # SUCC: 46 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

  # BLOCK 46 freq:43
  # PRED: 45 [50.0%]  (true,exec)
  D.45357_81 = attr_2->a_value;
  if (D.45357_81 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

  # BLOCK 47 freq:30
  # PRED: 46 [69.8%]  (true,exec)
  D.45357_82 = attr_2->a_value;
  D.45417_83 = switch_core_perform_session_strdup (session_3(D), D.45357_82, "src/switch_core_media.c", &__func__, 414);
  t38_options_1->T38VendorInfo = D.45417_83;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:9100
  # PRED: 17 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 41 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 45 [50.0%]  (false,exec) 46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  attr_84 = attr_2->a_next;
  # DEBUG attr => attr_84
  # SUCC: 49 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 49 freq:10000
  # PRED: 14 [100.0%]  (fallthru,exec) 48 [100.0%]  (fallthru,dfs_back,exec)
  # attr_2 = PHI <attr_29(14), attr_84(48)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 50>;
  # SUCC: 15 [91.0%]  (true,exec) 50 [9.0%]  (false,exec)

  # BLOCK 50 freq:900
  # PRED: 49 [9.0%]  (false,exec)
  D.45323_85 = session_3(D)->channel;
  switch_channel_set_variable_var_check (D.45323_85, "has_t38", "true", 1);
  D.45323_86 = session_3(D)->channel;
  switch_channel_set_private (D.45323_86, "t38_options", t38_options_1);
  D.45323_87 = session_3(D)->channel;
  switch_channel_set_app_flag_key ("T38", D.45323_87, 2);
  D.45323_88 = session_3(D)->channel;
  switch_channel_execute_on (D.45323_88, "sip_execute_on_image");
  D.45323_89 = session_3(D)->channel;
  switch_channel_api_on (D.45323_89, "sip_api_on_image");
  return t38_options_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_build_crypto (switch_core_media_build_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 13 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 25 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 10 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 24 }
;; 21 succs { 23 22 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 13 12
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46692_26)
(get_scalar_evolution 
  (scalar = D.46692_26)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46692_26)
(get_scalar_evolution 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <p_25(9), p_28(10)>
)
  (init_cond = p_25))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <p_25(9), p_28(10)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = p_25)
  (to_add = -1)
  (res = {p_25, +, -1}_1))
  (evolution_function = {p_25, +, -1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = p_3)
  (scalar_evolution = {p_25, +, -1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 1
  exit condition [p_25, + , -1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations (unsigned int) p_25, bounded by 4294967295
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics (ignored): 99.5%
  first match heuristics: 97.0%
  combined heuristics: 97.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 97.0%
Predictions for bb 12
  DS theory heuristics (ignored): 97.0%
  first match heuristics: 97.0%
  combined heuristics: 97.0%
  loop exit heuristics: 97.0%
Predictions for bb 13
  DS theory heuristics (ignored): 92.6%
  first match heuristics: 97.0%
  combined heuristics: 97.0%
  opcode values nonequal (on trees) heuristics (ignored): 28.0%
  loop exit heuristics: 97.0%
Predictions for bb 14
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 21
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 22
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 23 predicted to even probabilities
1 edges in bb 24 predicted to even probabilities
1 edges in bb 25 predicted to even probabilities

;; Function switch_core_media_build_crypto

;; 
26 basic blocks, 37 edges, last basic block 26.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  25 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec) 5 [61.0%]  (false,exec)
Successors:  7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  13 [97.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,dfs_back,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
Successors:  12 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [97.0%]  (true,exec)
Successors:  13 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [97.0%]  (true,exec)
Successors:  10 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  11 [3.0%]  (false,exec) 12 [3.0%]  (false,exec) 13 [3.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  18 [28.0%]  (true,exec) 17 [72.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [72.0%]  (false,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [28.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
Successors:  20 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [72.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [28.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  23 [21.6%]  (true,exec) 22 [78.3%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [78.3%]  (false,exec)
Successors:  23 [39.0%]  (true,exec) 24 [61.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [21.6%]  (true,exec) 22 [39.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 22 [61.0%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_build_crypto (struct switch_media_handle_t * smh, switch_media_type_t type, int index, switch_rtp_crypto_key_type_t ctype, switch_rtp_crypto_direction_t direction, int force)
{
  static const char __func__[31] = "switch_core_media_build_crypto";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_build_crypto";
  struct switch_rtp_engine_t * engine;
  char * p;
  struct switch_channel_t * channel;
  const char * val;
  unsigned char * key;
  unsigned char b64_key[512];
  int D.46717;
  unsigned int D.46714;
  switch_core_media_NDLB_t D.46713;
  struct switch_core_media_params_t * D.46712;
  char * iftmp.165;
  char * iftmp.164;
  char * D.46700;
  struct switch_channel_t * D.46699;
  char * D.46698;
  char * D.46697;
  unsigned int D.46696;
  char D.46692;
  switch_size_t D.46690;
  uint32_t D.46689;
  int D.46688;
  unsigned char D.46681;
  struct switch_core_session_t * D.46676;

  # BLOCK 2 freq:1085
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  b64_key = "";
  if (smh_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1085
  # PRED: 2 [100.0%]  (false,exec)
  D.46676_8 = smh_7(D)->session;
  channel_9 = switch_core_session_get_channel (D.46676_8);
  # DEBUG channel => channel_9
  engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_13
  if (force_14(D) == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 5 freq:542
  # PRED: 4 [50.0%]  (true,exec)
  D.46681_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
  if (D.46681_16 != 0)
    goto <bb 25>;
  else
    goto <bb 6>;
  # SUCC: 25 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:873
  # PRED: 4 [50.0%]  (false,exec) 5 [61.0%]  (false,exec)
  if (direction_18(D) == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 7 freq:437
  # PRED: 6 [50.0%]  (true,exec)
  key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
  # DEBUG key => key_19
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:437
  # PRED: 6 [50.0%]  (false,exec)
  key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
  # DEBUG key => key_20
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:873
  # PRED: 7 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,exec)
  # key_2 = PHI <key_19(7), key_20(8)>
  # DEBUG key => key_2
  D.46688_21 = SUITES[ctype_15(D)].keylen;
  D.46689_22 = (uint32_t) D.46688_21;
  switch_rtp_get_random (key_2, D.46689_22);
  D.46688_23 = SUITES[ctype_15(D)].keylen;
  D.46690_24 = (switch_size_t) D.46688_23;
  switch_b64_encode (key_2, D.46690_24, &b64_key, 512);
  p_25 = strrchr (&b64_key, 61);
  # DEBUG p => p_25
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9127
  # PRED: 13 [97.0%]  (true,exec)
  *p_3 = 0;
  p_28 = p_3 + -1;
  # DEBUG p => p_28
  # SUCC: 11 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 11 freq:10000
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
  # p_3 = PHI <p_25(9), p_28(10)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 12 freq:9700
  # PRED: 11 [97.0%]  (true,exec)
  D.46692_26 = *p_3;
  if (D.46692_26 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 13 freq:9409
  # PRED: 12 [97.0%]  (true,exec)
  D.46692_27 = *p_3;
  if (D.46692_27 == 61)
    goto <bb 10>;
  else
    goto <bb 14>;
  # SUCC: 10 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 14 freq:873
  # PRED: 11 [3.0%]  (false,exec) 12 [3.0%]  (false,exec) 13 [3.0%]  (false,exec)
  if (index_29(D) == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 15 freq:437
  # PRED: 14 [50.0%]  (true,exec)
  D.46696_30 = ctype_15(D) + 1;
  index_31 = (int) D.46696_30;
  # DEBUG index => index_31
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:873
  # PRED: 14 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  # index_1 = PHI <index_29(D)(14), index_31(15)>
  # DEBUG index => index_1
  D.46676_32 = smh_7(D)->session;
  D.46697_33 = SUITES[ctype_15(D)].name;
  D.46698_34 = switch_core_session_sprintf (D.46676_32, "%d %s inline:%s", index_1, D.46697_33, &b64_key);
  engine_13->ssec[ctype_15(D)].local_crypto_key = D.46698_34;
  D.46676_35 = smh_7(D)->session;
  D.46699_36 = D.46676_35->channel;
  D.46700_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  if (type_11(D) == 1)
    goto <bb 18>;
  else
    goto <bb 17>;
  # SUCC: 18 [28.0%]  (true,exec) 17 [72.0%]  (false,exec)

  # BLOCK 17 freq:629
  # PRED: 16 [72.0%]  (false,exec)
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:873
  # PRED: 16 [28.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
  # iftmp.164_5 = PHI <"video"(16), "audio"(17)>
  switch_channel_set_variable_name_printf (D.46699_36, D.46700_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);
  D.46676_40 = smh_7(D)->session;
  D.46699_41 = D.46676_40->channel;
  switch_channel_set_flag_value (D.46699_41, 92, 1);
  D.46676_42 = smh_7(D)->session;
  if (type_11(D) == 1)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

  # BLOCK 19 freq:629
  # PRED: 18 [72.0%]  (false,exec)
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:873
  # PRED: 18 [28.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
  # iftmp.165_6 = PHI <"video"(18), "audio"(19)>
  D.46700_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46676_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46700_45);
  D.46712_46 = smh_7(D)->mparams;
  D.46713_47 = D.46712_46->ndlb;
  D.46714_48 = D.46713_47 & 8;
  if (D.46714_48 == 0)
    goto <bb 21>;
  else
    goto <bb 24>;
  # SUCC: 21 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

  # BLOCK 21 freq:253
  # PRED: 20 [29.0%]  (true,exec)
  val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);
  # DEBUG val => val_49
  if (val_49 == 0B)
    goto <bb 23>;
  else
    goto <bb 22>;
  # SUCC: 23 [21.6%]  (true,exec) 22 [78.3%]  (false,exec)

  # BLOCK 22 freq:198
  # PRED: 21 [78.3%]  (false,exec)
  D.46717_50 = switch_true (val_49);
  if (D.46717_50 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [39.0%]  (true,exec) 24 [61.0%]  (false,exec)

  # BLOCK 23 freq:132
  # PRED: 21 [21.6%]  (true,exec) 22 [39.0%]  (true,exec)
  engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:741
  # PRED: 20 [71.0%]  (false,exec) 22 [61.0%]  (false,exec)
  engine_13->ssec[ctype_15(D)].crypto_type = 8;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1085
  # PRED: 5 [39.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec)
  return 0;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_crypto_str2type (switch_core_media_crypto_str2type)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <0(2), i_10(5)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <0(2), i_10(5)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47211_8)
(get_scalar_evolution 
  (scalar = D.47211_8)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.47211_8)
  (scalar_evolution = D.47211_8))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47211_8)
(get_scalar_evolution 
  (scalar = D.47211_8)
  (scalar_evolution = D.47211_8))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.47211_8)
  (scalar_evolution = D.47211_8))
)
1 edges in bb 2 predicted to even probabilities
Predictions for bb 3
  DS theory heuristics (ignored): 2.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  early return (on trees) heuristics (ignored): 39.0%
  loop exit heuristics: 4.5%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics (ignored): 81.6%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  loop iterations heuristics: 90.0%
  const return heuristics (ignored): 33.0%
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_crypto_str2type

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  6 [90.0%]  (true,exec)
Successors:  4 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [4.5%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [95.5%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,dfs_back,exec)

Basic block 6 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,dfs_back,exec)
Successors:  3 [90.0%]  (true,exec) 7 [10.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 6 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_crypto_str2type (const char * str)
{
  int i;
  switch_rtp_crypto_key_type_t D.47214;
  int D.47211;
  size_t D.47210;
  char * D.47209;

  # BLOCK 2 freq:1405
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG i => 0
  goto <bb 6>;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:9000
  # PRED: 6 [90.0%]  (true,exec)
  D.47209_5 = SUITES[i_1].name;
  D.47210_6 = strlen (D.47209_5);
  D.47211_8 = strncasecmp (str_7(D), D.47209_5, D.47210_6);
  if (D.47211_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

  # BLOCK 4 freq:405
  # PRED: 3 [4.5%]  (true,exec)
  D.47214_9 = SUITES[i_1].type;
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:8595
  # PRED: 3 [95.5%]  (false,exec)
  i_10 = i_1 + 1;
  # DEBUG i => i_10
  # SUCC: 6 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 6 freq:10000
  # PRED: 2 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <0(2), i_10(5)>
  # DEBUG i => i_1
  if (i_1 <= 8)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [90.0%]  (true,exec) 7 [10.0%]  (false,exec)

  # BLOCK 7 freq:1405
  # PRED: 4 [100.0%]  (fallthru,exec) 6 [10.0%]  (false,exec)
  # D.47214_2 = PHI <D.47214_9(4), 9(6)>
  return D.47214_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_get_recovery_crypto_key (switch_core_session_get_recovery_crypto_key)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 12 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities

;; Function switch_core_session_get_recovery_crypto_key

;; 
13 basic blocks, 17 edges, last basic block 13.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  12 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  6 [78.3%]  (true,exec) 12 [21.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.3%]  (true,exec)
Successors:  7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [69.8%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [30.2%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 5 [21.6%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_get_recovery_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  int tv;
  static const char __func__[44] = "switch_core_session_get_recovery_crypto_key";
  char * ctypevar;
  char * tagvar;
  char * keyvar;
  struct switch_rtp_engine_t * engine;
  const char * tmp;
  char * D.40319;
  switch_rtp_crypto_key_type_t D.40318;
  switch_rtp_crypto_key_type_t D.40317;
  struct switch_channel_t * D.40312;
  struct switch_media_handle_t * D.40304;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.40304_5 = session_4(D)->media_handle;
  if (D.40304_5 == 0B)
    goto <bb 12>;
  else
    goto <bb 3>;
  # SUCC: 12 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.40304_6 = session_4(D)->media_handle;
  engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  if (type_8(D) == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 4 freq:4493
  # PRED: 3 [50.0%]  (false,exec)
  # DEBUG keyvar => "srtp_remote_video_crypto_key"
  # DEBUG tagvar => "srtp_remote_video_crypto_tag"
  # DEBUG ctypevar => "srtp_remote_video_crypto_type"
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:8986
  # PRED: 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # keyvar_1 = PHI <"srtp_remote_audio_crypto_key"(3), "srtp_remote_video_crypto_key"(4)>
  # tagvar_2 = PHI <"srtp_remote_audio_crypto_tag"(3), "srtp_remote_video_crypto_tag"(4)>
  # ctypevar_3 = PHI <"srtp_remote_audio_crypto_type"(3), "srtp_remote_video_crypto_type"(4)>
  # DEBUG ctypevar => ctypevar_3
  # DEBUG tagvar => tagvar_2
  # DEBUG keyvar => keyvar_1
  D.40312_17 = session_4(D)->channel;
  tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);
  # DEBUG tmp => tmp_18
  if (tmp_18 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 [78.3%]  (true,exec) 12 [21.6%]  (false,exec)

  # BLOCK 6 freq:7041
  # PRED: 5 [78.3%]  (true,exec)
  D.40312_19 = session_4(D)->channel;
  tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);
  # DEBUG tmp => tmp_20
  if (tmp_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 7 freq:4916
  # PRED: 6 [69.8%]  (true,exec)
  D.40317_21 = switch_core_media_crypto_str2type (tmp_20);
  engine_10->crypto_type = D.40317_21;
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:7041
  # PRED: 6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  D.40318_22 = engine_10->crypto_type;
  D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);
  engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;
  D.40312_24 = session_4(D)->channel;
  tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);
  # DEBUG tmp => tmp_25
  if (tmp_25 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

  # BLOCK 9 freq:4916
  # PRED: 8 [69.8%]  (true,exec)
  # DEBUG __nptr => tmp_25
  tv_43 = strtol (tmp_25, 0B, 10);
  # DEBUG tv => NULL
  D.40318_27 = engine_10->crypto_type;
  engine_10->ssec[D.40318_27].crypto_tag = tv_43;
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:2124
  # PRED: 8 [30.2%]  (false,exec)
  D.40318_28 = engine_10->crypto_type;
  engine_10->ssec[D.40318_28].crypto_tag = 1;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:7041
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
  D.40312_29 = session_4(D)->channel;
  switch_channel_set_flag_value (D.40312_29, 92, 1);
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 5 [21.6%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_crypto_type2str (switch_core_media_crypto_type2str)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_media_crypto_type2str

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_crypto_type2str (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_crypto_type2str";
  const char * D.47207;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 222, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.47207_2 = SUITES[type_1(D)].name;
  return D.47207_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_crypto_keylen (switch_core_media_crypto_keylen)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_media_crypto_keylen

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_crypto_keylen (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_crypto_keylen";
  int D.47203;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 229, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.47203_2 = SUITES[type_1(D)].keylen;
  return D.47203_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_pass_zrtp_hash2 (switch_core_media_pass_zrtp_hash2)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function switch_core_media_pass_zrtp_hash2

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session)
{
  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 0);
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 1);
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_pass_zrtp_hash (switch_core_media_pass_zrtp_hash)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_pass_zrtp_hash

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [61.0%]  (false,exec)
Successors:  5 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_pass_zrtp_hash (struct switch_core_session_t * session)
{
  static const char __func__[33] = "switch_core_media_pass_zrtp_hash";
  struct switch_core_session_t * other_session;
  struct switch_channel_t * channel;
  struct switch_core_session_t * other_session.172;
  struct switch_core_session_t * D.47170;
  struct switch_core_session_t * D.47169;
  switch_status_t D.47166;
  struct switch_core_session_t * D.47165;
  uint32_t D.47162;
  struct switch_core_session_t * D.47161;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  channel_2 = switch_core_session_get_channel (session_1(D));
  # DEBUG channel => channel_2
  D.47161_3 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 289, D.47161_3, 101, "Deciding whether to pass zrtp-hash between legs\n");
  D.47162_4 = switch_channel_test_flag (channel_2, 73);
  if (D.47162_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 3 freq:3900
  # PRED: 2 [39.0%]  (true,exec)
  D.47165_5 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 291, D.47165_5, 101, "CF_ZRTP_PASSTHRU_REQ not set, so not propagating zrtp-hash\n");
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:6100
  # PRED: 2 [61.0%]  (false,exec)
  D.47166_6 = switch_core_session_perform_get_partner (session_1(D), &other_session, "src/switch_core_media.c", &__func__, 293);
  if (D.47166_6 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 5 freq:2379
  # PRED: 4 [39.0%]  (true,exec)
  D.47169_7 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 294, D.47169_7, 101, "No partner channel found, so not propagating zrtp-hash\n");
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:3721
  # PRED: 4 [61.0%]  (false,exec)
  D.47170_8 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 297, D.47170_8, 101, "Found peer channel; propagating zrtp-hash if set\n");
  other_session.172_9 = other_session;
  switch_core_media_pass_zrtp_hash2 (session_1(D), other_session.172_9);
  other_session.172_10 = other_session;
  switch_core_session_rwunlock (other_session.172_10);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 3 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_zrtp_hash (switch_core_media_get_zrtp_hash)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics: 1.9%
  first match heuristics (ignored): 15.0%
  combined heuristics: 1.9%
  pointer (on trees) heuristics: 15.0%
  null return heuristics: 10.0%
Predictions for bb 3
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_media_get_zrtp_hash

;; 
7 basic blocks, 8 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  6 [1.9%]  (true,exec) 3 [98.1%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [98.1%]  (false,exec)
Successors:  4 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [39.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  2 [1.9%]  (true,exec) 4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_zrtp_hash (struct switch_core_session_t * session, switch_media_type_t type, switch_bool_t local)
{
  struct switch_rtp_engine_t * engine;
  const char * D.47155;
  struct switch_media_handle_t * D.47152;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.47152_3 = session_2(D)->media_handle;
  if (D.47152_3 == 0B)
    goto <bb 6>;
  else
    goto <bb 3>;
  # SUCC: 6 [1.9%]  (true,exec) 3 [98.1%]  (false,exec)

  # BLOCK 3 freq:9808
  # PRED: 2 [98.1%]  (false,exec)
  D.47152_5 = session_2(D)->media_handle;
  engine_9 = &D.47152_5->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_9
  if (local_10(D) != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 4 freq:3825
  # PRED: 3 [39.0%]  (true,exec)
  D.47155_11 = engine_9->local_sdp_zrtp_hash;
  goto <bb 6>;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:5983
  # PRED: 3 [61.0%]  (false,exec)
  D.47155_12 = engine_9->remote_sdp_zrtp_hash;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:10000
  # PRED: 2 [1.9%]  (true,exec) 4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
  # D.47155_1 = PHI <0B(2), D.47155_11(4), D.47155_12(5)>
  return D.47155_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_extract_t38_options (switch_core_media_extract_t38_options)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 7 8
;; 2 succs { 13 3 }
;; 3 succs { 4 5 }
;; 4 succs { 13 }
;; 5 succs { 11 }
;; 6 succs { 7 10 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 }
;; 11 succs { 6 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 7 8
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_13(5), m_19(10)>
)
  (init_cond = m_13))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_13(5), m_19(10)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
Predictions for bb 2
  DS theory heuristics: 4.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  null return heuristics: 10.0%
Predictions for bb 3
  DS theory heuristics: 0.8%
  first match heuristics (ignored): 15.0%
  combined heuristics: 0.8%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
  null return heuristics: 10.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 7
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 8
  DS theory heuristics (ignored): 1.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 12 predicted to even probabilities
1 edges in bb 13 predicted to even probabilities

;; Function switch_core_media_extract_t38_options

;; 
14 basic blocks, 19 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  13 [4.6%]  (true,exec) 3 [95.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [95.4%]  (false,exec)
Successors:  4 [0.8%]  (true,exec) 5 [99.2%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [0.8%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [99.2%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  11 [95.5%]  (true,exec)
Successors:  7 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [28.0%]  (true,exec)
Successors:  8 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [28.0%]  (true,exec)
Successors:  9 [4.5%]  (true,exec) 10 [95.5%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [4.5%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  6 [72.0%]  (false,exec) 7 [72.0%]  (false,exec) 8 [95.5%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,dfs_back,exec)

Basic block 11 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [95.5%]  (true,exec) 12 [4.5%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 11 [4.5%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  2 [4.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_extract_t38_options (struct switch_core_session_t * session, const char * r_sdp)
{
  struct switch_t38_options_t * t38_options;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  long unsigned int D.47148;
  sdp_media_e D.47145;
  sdp_proto_e D.47142;
  int D.47136;
  size_t D.47135;

  # BLOCK 2 freq:511
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG parser => 0B
  # DEBUG t38_options => 0B
  D.47135_7 = strlen (r_sdp_6(D));
  D.47136_8 = (int) D.47135_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.47136_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 13>;
  else
    goto <bb 3>;
  # SUCC: 13 [4.6%]  (true,exec) 3 [95.4%]  (false,exec)

  # BLOCK 3 freq:488
  # PRED: 2 [95.4%]  (false,exec)
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [0.8%]  (true,exec) 5 [99.2%]  (false,exec)

  # BLOCK 4 freq:4
  # PRED: 3 [0.8%]  (true,exec)
  sdp_parser_free (parser_9);
  goto <bb 13>;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:484
  # PRED: 3 [99.2%]  (false,exec)
  m_13 = sdp_11->sdp_media;
  # DEBUG m => m_13
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9550
  # PRED: 11 [95.5%]  (true,exec)
  D.47142_14 = m_1->m_proto;
  if (D.47142_14 == 258)
    goto <bb 7>;
  else
    goto <bb 10>;
  # SUCC: 7 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

  # BLOCK 7 freq:2674
  # PRED: 6 [28.0%]  (true,exec)
  D.47145_15 = m_1->m_type;
  if (D.47145_15 == 8)
    goto <bb 8>;
  else
    goto <bb 10>;
  # SUCC: 8 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

  # BLOCK 8 freq:749
  # PRED: 7 [28.0%]  (true,exec)
  D.47148_16 = m_1->m_port;
  if (D.47148_16 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [4.5%]  (true,exec) 10 [95.5%]  (false,exec)

  # BLOCK 9 freq:34
  # PRED: 8 [4.5%]  (true,exec)
  t38_options_18 = switch_core_media_process_udptl (session_17(D), sdp_11, m_1);
  # DEBUG t38_options => t38_options_18
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9516
  # PRED: 6 [72.0%]  (false,exec) 7 [72.0%]  (false,exec) 8 [95.5%]  (false,exec)
  m_19 = m_1->m_next;
  # DEBUG m => m_19
  # SUCC: 11 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 11 freq:10000
  # PRED: 5 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_13(5), m_19(10)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 [95.5%]  (true,exec) 12 [4.5%]  (false,exec)

  # BLOCK 12 freq:484
  # PRED: 9 [100.0%]  (fallthru,exec) 11 [4.5%]  (false,exec)
  # t38_options_2 = PHI <t38_options_18(9), 0B(11)>
  # DEBUG t38_options => t38_options_2
  sdp_parser_free (parser_9);
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:511
  # PRED: 2 [4.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,exec)
  # t38_options_3 = PHI <0B(2), 0B(4), t38_options_2(12)>
  return t38_options_3;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_get_payload_code (switch_core_session_get_payload_code)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 7 8 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 23 5 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 10 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 }
;; 11 succs { 6 12 }
;; 12 succs { 13 23 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 20 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 7 8 6
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_19(5), pmap_28(10)>
)
  (init_cond = pmap_19))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_19(5), pmap_28(10)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 12
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 13
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 18
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 21
  DS theory heuristics: 89.9%
  first match heuristics (ignored): 85.0%
  combined heuristics: 89.9%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 22 predicted to even probabilities
1 edges in bb 23 predicted to even probabilities

;; Function switch_core_session_get_payload_code

;; 
24 basic blocks, 34 edges, last basic block 24.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  23 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  11 [95.5%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  9 [4.5%]  (true,exec) 10 [95.5%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [4.5%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 8 [95.5%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,dfs_back,exec)

Basic block 11 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [95.5%]  (true,exec) 12 [4.5%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 11 [4.5%]  (false,exec)
Successors:  13 [61.0%]  (true,exec) 23 [39.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [61.0%]  (true,exec)
Successors:  14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [85.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [15.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [85.0%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [15.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  20 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (false,exec)
Successors:  20 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  17 [15.0%]  (true,exec) 18 [50.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [61.0%]  (true,exec) 23 [39.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [61.0%]  (true,exec)
Successors:  22 [89.9%]  (true,exec) 23 [10.1%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [89.9%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 21 [10.1%]  (false,exec) 12 [39.0%]  (false,exec) 20 [39.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_get_payload_code (struct switch_core_session_t * session, switch_media_type_t type, const char * iananame, switch_payload_t * ptP, switch_payload_t * recv_ptP, char * * fmtpP)
{
  const char D.47341;
  int D.47340;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_session_get_payload_code";
  char * fmtp;
  int found;
  switch_payload_t recv_pt;
  switch_payload_t pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  struct payload_map_t * pmap;
  int D.47090;
  char * D.47089;
  uint8_t D.47086;
  struct switch_mutex_t * D.47085;
  switch_status_t D.47082;

  # BLOCK 2 freq:849
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG pt => 0
  # DEBUG recv_pt => 0
  # DEBUG found => 0
  # DEBUG fmtp => 0B
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 530, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:848
  # PRED: 2 [100.0%]  (false,exec)
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 23>;
  else
    goto <bb 5>;
  # SUCC: 23 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:665
  # PRED: 4 [78.4%]  (false,exec)
  engine_17 = &smh_12->engines[type_15(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_17
  D.47085_18 = smh_12->sdp_mutex;
  switch_mutex_lock (D.47085_18);
  pmap_19 = engine_17->payload_map;
  # DEBUG pmap => pmap_19
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9550
  # PRED: 11 [95.5%]  (true,exec)
  D.47086_20 = pmap_1->allocated;
  if (D.47086_20 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 7 freq:4775
  # PRED: 6 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:4775
  # PRED: 6 [50.0%]  (false,exec)
  D.47089_21 = pmap_1->iananame;
  D.47090_23 = strcasecmp (D.47089_21, iananame_22(D));
  if (D.47090_23 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [4.5%]  (true,exec) 10 [95.5%]  (false,exec)

  # BLOCK 9 freq:215
  # PRED: 8 [4.5%]  (true,exec)
  pt_24 = pmap_1->pt;
  # DEBUG pt => pt_24
  recv_pt_25 = pmap_1->recv_pt;
  # DEBUG recv_pt => recv_pt_25
  fmtp_26 = pmap_1->rm_fmtp;
  # DEBUG fmtp => fmtp_26
  # DEBUG found => 1
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9335
  # PRED: 7 [100.0%]  (fallthru,exec) 8 [95.5%]  (false,exec)
  pmap_28 = pmap_1->next;
  # DEBUG pmap => pmap_28
  # SUCC: 11 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 11 freq:10000
  # PRED: 5 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1 = PHI <pmap_19(5), pmap_28(10)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 [95.5%]  (true,exec) 12 [4.5%]  (false,exec)

  # BLOCK 12 freq:665
  # PRED: 9 [100.0%]  (fallthru,exec) 11 [4.5%]  (false,exec)
  # pt_2 = PHI <pt_24(9), 0(11)>
  # recv_pt_3 = PHI <recv_pt_25(9), 0(11)>
  # found_4 = PHI <1(9), 0(11)>
  # fmtp_5 = PHI <fmtp_26(9), 0B(11)>
  # DEBUG fmtp => fmtp_5
  # DEBUG found => found_4
  # DEBUG recv_pt => recv_pt_3
  # DEBUG pt => pt_2
  D.47085_29 = smh_12->sdp_mutex;
  switch_mutex_unlock (D.47085_29);
  if (found_4 != 0)
    goto <bb 13>;
  else
    goto <bb 23>;
  # SUCC: 13 [61.0%]  (true,exec) 23 [39.0%]  (false,exec)

  # BLOCK 13 freq:406
  # PRED: 12 [61.0%]  (true,exec)
  if (ptP_30(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

  # BLOCK 14 freq:345
  # PRED: 13 [85.0%]  (true,exec)
  *ptP_30(D) = pt_2;
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:406
  # PRED: 13 [15.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  if (recv_ptP_31(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 16 freq:345
  # PRED: 15 [85.0%]  (true,exec)
  *recv_ptP_31(D) = recv_pt_3;
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:406
  # PRED: 15 [15.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  # DEBUG s => fmtp_5
  if (fmtp_5 == 0B)
    goto <bb 20>;
  else
    goto <bb 18>;
  # SUCC: 20 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

  # BLOCK 18 freq:345
  # PRED: 17 [85.0%]  (false,exec)
  D.47341_44 = MEM[(const char *)fmtp_5];
  if (D.47341_44 == 0)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 19 freq:172
  # PRED: 18 [50.0%]  (false,exec)
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:406
  # PRED: 17 [15.0%]  (true,exec) 18 [50.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
  # D.47340_45 = PHI <1(17), 1(18), 0(19)>
  if (D.47340_45 == 0)
    goto <bb 21>;
  else
    goto <bb 23>;
  # SUCC: 21 [61.0%]  (true,exec) 23 [39.0%]  (false,exec)

  # BLOCK 21 freq:247
  # PRED: 20 [61.0%]  (true,exec)
  if (fmtpP_33(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [89.9%]  (true,exec) 23 [10.1%]  (false,exec)

  # BLOCK 22 freq:222
  # PRED: 21 [89.9%]  (true,exec)
  *fmtpP_33(D) = fmtp_5;
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:848
  # PRED: 4 [21.6%]  (true,exec) 21 [10.1%]  (false,exec) 12 [39.0%]  (false,exec) 20 [39.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  # D.47082_6 = PHI <1(4), 0(21), 1(12), 0(20), 0(22)>
  return D.47082_6;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_add_payload_map (switch_core_media_add_payload_map)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
;;
;; Loop 1
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 12 22 21 20 17 18 19 16 13 14 15 10 11 9 7 8 6 25
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 60 5 }
;; 5 succs { 24 }
;; 6 succs { 7 11 }
;; 7 succs { 9 8 }
;; 8 succs { 9 11 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 23 }
;; 13 succs { 16 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 17 26 }
;; 17 succs { 20 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 26 }
;; 21 succs { 22 26 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 6 26 }
;; 26 succs { 27 32 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 39 38 }
;; 38 succs { 39 }
;; 39 succs { 40 46 }
;; 40 succs { 43 41 }
;; 41 succs { 43 42 }
;; 42 succs { 43 }
;; 43 succs { 45 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 51 }
;; 47 succs { 48 49 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 59 }
;; 54 succs { 55 56 }
;; 55 succs { 59 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
;;
;; Loop 1
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 12 22 21 20 17 18 19 16 13 14 15 10 11 9 7 8 6 25
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47031_23)
(get_scalar_evolution 
  (scalar = D.47031_23)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47031_23)
(get_scalar_evolution 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_22(5), pmap_45(23)>
)
  (init_cond = pmap_22))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_22(5), pmap_45(23)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 4.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  null return heuristics: 10.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 8
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 10
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 13
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 14
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 17
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 18
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 21
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 22 predicted to even probabilities
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 98.0%
Predictions for bb 25
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 26
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 27
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 29 predicted to even probabilities
1 edges in bb 30 predicted to even probabilities
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 37
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 40
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 41
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 44
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 45 predicted to even probabilities
Predictions for bb 46
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 47
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 48 predicted to even probabilities
1 edges in bb 49 predicted to even probabilities
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 54
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 55 predicted to even probabilities
Predictions for bb 56
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities
1 edges in bb 59 predicted to even probabilities
1 edges in bb 60 predicted to even probabilities

;; Function switch_core_media_add_payload_map

;; 
61 basic blocks, 94 edges, last basic block 61.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  60 [4.6%]  (true,exec) 5 [95.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.4%]  (false,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  25 [98.0%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (false,exec)
Successors:  9 [28.0%]  (true,exec) 11 [72.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec) 8 [28.0%]  (true,exec)
Successors:  12 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  12 [28.0%]  (true,exec) 11 [72.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec) 8 [72.0%]  (false,exec) 10 [72.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [28.0%]  (true,exec) 11 [100.0%]  (fallthru,exec) 9 [50.0%]  (true,exec)
Successors:  13 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  16 [15.0%]  (true,exec) 14 [85.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [85.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  13 [15.0%]  (true,exec) 14 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
Successors:  17 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [98.0%]  (true,exec)
Successors:  20 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (false,exec)
Successors:  20 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  17 [15.0%]  (true,exec) 18 [50.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [98.0%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [100.0%]  (fallthru,dfs_back,exec)

Basic block 24 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,dfs_back,exec)
Successors:  25 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [98.0%]  (true,exec)
Successors:  6 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  20 [2.0%]  (false,exec) 24 [2.0%]  (false,exec) 25 [2.0%]  (false,exec) 16 [2.0%]  (false,exec) 21 [50.0%]  (false,exec)
Successors:  27 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [50.0%]  (true,exec)
Successors:  28 [93.3%]  (true,exec) 30 [6.7%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [93.3%]  (true,exec)
Successors:  29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  27 [6.7%]  (false,exec) 28 [50.0%]  (false,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  29 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  26 [50.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
Successors:  33 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [50.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [50.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec)
Successors:  36 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec) 35 [100.0%]  (fallthru,exec)
Successors:  39 [15.0%]  (true,exec) 37 [85.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [85.0%]  (false,exec)
Successors:  39 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [50.0%]  (false,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [15.0%]  (true,exec) 37 [50.0%]  (true,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  43 [15.0%]  (true,exec) 41 [85.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [85.0%]  (false,exec)
Successors:  43 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [50.0%]  (false,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  40 [15.0%]  (true,exec) 41 [50.0%]  (true,exec) 42 [100.0%]  (fallthru,exec)
Successors:  45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [71.0%]  (false,exec)
Successors:  45 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  43 [29.0%]  (true,exec) 44 [50.0%]  (true,exec)
Successors:  46 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec) 44 [50.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
Successors:  47 [50.0%]  (true,exec) 51 [50.0%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [50.0%]  (true,exec)
Successors:  48 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [50.0%]  (true,exec)
Successors:  50 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  47 [50.0%]  (false,exec)
Successors:  50 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  48 [100.0%]  (fallthru,exec) 49 [100.0%]  (fallthru,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  46 [50.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
Successors:  52 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  51 [50.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
Successors:  54 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [50.0%]  (true,exec)
Successors:  55 [15.0%]  (true,exec) 56 [85.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [15.0%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [85.0%]  (false,exec)
Successors:  57 [15.0%]  (true,exec) 58 [85.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [15.0%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [85.0%]  (false,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  53 [50.0%]  (false,exec) 55 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
Successors:  60 [100.0%]  (fallthru,exec)

Basic block 60 (new, reachable)
Predecessors:  4 [4.6%]  (true,exec) 59 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_add_payload_map (struct switch_core_session_t * session, switch_media_type_t type, const char * name, const char * fmtp, switch_sdp_type_t sdp_type, uint32_t pt, uint32_t rate, uint32_t ptime, uint8_t negotiated)
{
  const char D.47358;
  int D.47357;
  const char D.47354;
  int D.47353;
  const char D.47350;
  int D.47349;
  const char D.47346;
  int D.47345;
  switch_ssize_t hlen;
  static const char __func__[34] = "switch_core_media_add_payload_map";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_add_payload_map";
  int local_pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  int exists;
  struct payload_map_t * pmap;
  struct payload_map_s * D.47076;
  struct payload_map_t * D.47074;
  unsigned char iftmp.170;
  _Bool D.47058;
  _Bool D.47057;
  _Bool D.47056;
  unsigned char D.47055;
  char * D.47054;
  int D.38491;
  unsigned int D.47042;
  char * D.47041;
  struct switch_memory_pool_t * D.47040;
  uint8_t D.47038;
  struct payload_map_t * D.47036;
  uint8_t D.47031;
  switch_payload_t D.47029;
  int D.38476;
  char * D.47023;
  uint32_t D.47016;
  uint32_t D.47014;
  int D.47012;
  char * D.47011;
  struct switch_mutex_t * D.47005;

  # BLOCK 2 freq:3032
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG exists => 0
  # DEBUG local_pt => 0
  if (session_14(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:1
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 589, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:3031
  # PRED: 2 [100.0%]  (false,exec)
  smh_15 = session_14(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 60>;
  else
    goto <bb 5>;
  # SUCC: 60 [4.6%]  (true,exec) 5 [95.4%]  (false,exec)

  # BLOCK 5 freq:2892
  # PRED: 4 [95.4%]  (false,exec)
  engine_20 = &smh_15->engines[type_18(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_20
  D.47005_21 = smh_15->sdp_mutex;
  switch_mutex_lock (D.47005_21);
  pmap_22 = engine_20->payload_map;
  # DEBUG pmap => pmap_22
  goto <bb 24>;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9604
  # PRED: 25 [98.0%]  (true,exec)
  D.47011_24 = pmap_1->iananame;
  D.47012_26 = strcasecmp (name_25(D), D.47011_24);
  if (D.47012_26 == 0)
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 7 freq:4802
  # PRED: 6 [50.0%]  (true,exec)
  D.47014_27 = pmap_1->rate;
  if (D.47014_27 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;
  # SUCC: 9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 8 freq:2401
  # PRED: 7 [50.0%]  (false,exec)
  D.47014_28 = pmap_1->rate;
  if (D.47014_28 == rate_29(D))
    goto <bb 9>;
  else
    goto <bb 11>;
  # SUCC: 9 [28.0%]  (true,exec) 11 [72.0%]  (false,exec)

  # BLOCK 9 freq:3073
  # PRED: 7 [50.0%]  (true,exec) 8 [28.0%]  (true,exec)
  D.47016_30 = pmap_1->ptime;
  if (D.47016_30 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:1537
  # PRED: 9 [50.0%]  (false,exec)
  D.47016_31 = pmap_1->ptime;
  if (D.47016_31 == ptime_32(D))
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [28.0%]  (true,exec) 11 [72.0%]  (false,exec)

  # BLOCK 11 freq:7637
  # PRED: 6 [50.0%]  (false,exec) 8 [72.0%]  (false,exec) 10 [72.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9604
  # PRED: 10 [28.0%]  (true,exec) 11 [100.0%]  (fallthru,exec) 9 [50.0%]  (true,exec)
  # exists_10 = PHI <1(10), 0(11), 1(9)>
  # DEBUG exists => exists_10
  if (exists_10 != 0)
    goto <bb 13>;
  else
    goto <bb 23>;
  # SUCC: 13 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 13 freq:4802
  # PRED: 12 [50.0%]  (true,exec)
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 16>;
  else
    goto <bb 14>;
  # SUCC: 16 [15.0%]  (true,exec) 14 [85.0%]  (false,exec)

  # BLOCK 14 freq:4082
  # PRED: 13 [85.0%]  (false,exec)
  D.47346_114 = *fmtp_36(D);
  if (D.47346_114 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;
  # SUCC: 16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 15 freq:2041
  # PRED: 14 [50.0%]  (false,exec)
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:4802
  # PRED: 13 [15.0%]  (true,exec) 14 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
  # D.47345_115 = PHI <1(13), 1(14), 0(15)>
  if (D.47345_115 == 0)
    goto <bb 17>;
  else
    goto <bb 26>;
  # SUCC: 17 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

  # BLOCK 17 freq:4706
  # PRED: 16 [98.0%]  (true,exec)
  D.47023_38 = pmap_1->rm_fmtp;
  # DEBUG s => D.47023_38
  if (D.47023_38 == 0B)
    goto <bb 20>;
  else
    goto <bb 18>;
  # SUCC: 20 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

  # BLOCK 18 freq:4000
  # PRED: 17 [85.0%]  (false,exec)
  D.47350_116 = MEM[(const char *)D.47023_38];
  if (D.47350_116 == 0)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 19 freq:2000
  # PRED: 18 [50.0%]  (false,exec)
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:4706
  # PRED: 17 [15.0%]  (true,exec) 18 [50.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
  # D.47349_117 = PHI <1(17), 1(18), 0(19)>
  if (D.47349_117 == 0)
    goto <bb 21>;
  else
    goto <bb 26>;
  # SUCC: 21 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

  # BLOCK 21 freq:4612
  # PRED: 20 [98.0%]  (true,exec)
  D.47023_40 = pmap_1->rm_fmtp;
  D.38476_41 = __builtin_strcmp (D.47023_40, fmtp_36(D));
  if (D.38476_41 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;
  # SUCC: 22 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 22 freq:2306
  # PRED: 21 [50.0%]  (true,exec)
  # DEBUG exists => 0
  D.47029_43 = pmap_1->pt;
  local_pt_44 = (int) D.47029_43;
  # DEBUG local_pt => local_pt_44
  // predicted unlikely by continue predictor.
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:7108
  # PRED: 12 [50.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  # exists_4 = PHI <exists_10(12), 0(22)>
  # local_pt_7 = PHI <local_pt_8(12), local_pt_44(22)>
  # DEBUG local_pt => local_pt_7
  # DEBUG exists => exists_4
  pmap_45 = pmap_1->next;
  # DEBUG pmap => pmap_45
  # SUCC: 24 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 24 freq:10000
  # PRED: 5 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1 = PHI <pmap_22(5), pmap_45(23)>
  # exists_5 = PHI <0(5), exists_4(23)>
  # local_pt_8 = PHI <0(5), local_pt_7(23)>
  # DEBUG local_pt => local_pt_8
  # DEBUG exists => exists_5
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

  # BLOCK 25 freq:9800
  # PRED: 24 [98.0%]  (true,exec)
  D.47031_23 = pmap_1->allocated;
  if (D.47031_23 != 0)
    goto <bb 6>;
  else
    goto <bb 26>;
  # SUCC: 6 [98.0%]  (true,exec) 26 [2.0%]  (false,exec)

  # BLOCK 26 freq:2892
  # PRED: 20 [2.0%]  (false,exec) 24 [2.0%]  (false,exec) 25 [2.0%]  (false,exec) 16 [2.0%]  (false,exec) 21 [50.0%]  (false,exec)
  # exists_6 = PHI <exists_10(20), exists_5(24), exists_5(25), exists_10(16), exists_10(21)>
  # DEBUG exists => exists_6
  if (exists_6 == 0)
    goto <bb 27>;
  else
    goto <bb 32>;
  # SUCC: 27 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

  # BLOCK 27 freq:1446
  # PRED: 26 [50.0%]  (true,exec)
  hlen = -1;
  D.47036_46 = engine_20->payload_map;
  if (D.47036_46 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [93.3%]  (true,exec) 30 [6.7%]  (false,exec)

  # BLOCK 28 freq:1349
  # PRED: 27 [93.3%]  (true,exec)
  D.47036_47 = engine_20->payload_map;
  D.47038_48 = D.47036_47->allocated;
  if (D.47038_48 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 29 freq:674
  # PRED: 28 [50.0%]  (true,exec)
  pmap_49 = engine_20->payload_map;
  # DEBUG pmap => pmap_49
  goto <bb 31>;
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:772
  # PRED: 27 [6.7%]  (false,exec) 28 [50.0%]  (false,exec)
  D.47040_50 = session_14(D)->pool;
  pmap_51 = switch_core_perform_alloc (D.47040_50, 84, "src/switch_core_media.c", &__func__, 624);
  # DEBUG pmap => pmap_51
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:1446
  # PRED: 29 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec)
  # pmap_2 = PHI <pmap_49(29), pmap_51(30)>
  # DEBUG pmap => pmap_2
  pmap_2->type = type_18(D);
  D.47040_52 = session_14(D)->pool;
  D.47041_53 = switch_core_perform_strdup (D.47040_52, name_25(D), "src/switch_core_media.c", &__func__, 628);
  pmap_2->iananame = D.47041_53;
  D.47011_54 = pmap_2->iananame;
  pmap_2->rm_encoding = D.47011_54;
  D.47011_55 = pmap_2->iananame;
  D.47042_56 = switch_ci_hashfunc_default (D.47011_55, &hlen);
  pmap_2->hash = D.47042_56;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:2892
  # PRED: 26 [50.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  # pmap_3 = PHI <pmap_1(26), pmap_2(31)>
  # DEBUG pmap => pmap_3
  pmap_3->sdp_type = sdp_type_57(D);
  if (ptime_32(D) != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 33 freq:1446
  # PRED: 32 [50.0%]  (true,exec)
  pmap_3->ptime = ptime_32(D);
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:2892
  # PRED: 32 [50.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  if (rate_29(D) != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 35 freq:1446
  # PRED: 34 [50.0%]  (true,exec)
  pmap_3->rate = rate_29(D);
  # SUCC: 36 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:2892
  # PRED: 34 [50.0%]  (false,exec) 35 [100.0%]  (fallthru,exec)
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 39>;
  else
    goto <bb 37>;
  # SUCC: 39 [15.0%]  (true,exec) 37 [85.0%]  (false,exec)

  # BLOCK 37 freq:2458
  # PRED: 36 [85.0%]  (false,exec)
  D.47354_118 = *fmtp_36(D);
  if (D.47354_118 == 0)
    goto <bb 39>;
  else
    goto <bb 38>;
  # SUCC: 39 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 38 freq:1229
  # PRED: 37 [50.0%]  (false,exec)
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:2892
  # PRED: 36 [15.0%]  (true,exec) 37 [50.0%]  (true,exec) 38 [100.0%]  (fallthru,exec)
  # D.47353_119 = PHI <1(36), 1(37), 0(38)>
  if (D.47353_119 == 0)
    goto <bb 40>;
  else
    goto <bb 46>;
  # SUCC: 40 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

  # BLOCK 40 freq:1446
  # PRED: 39 [50.0%]  (true,exec)
  D.47023_59 = pmap_3->rm_fmtp;
  # DEBUG s => D.47023_59
  if (D.47023_59 == 0B)
    goto <bb 43>;
  else
    goto <bb 41>;
  # SUCC: 43 [15.0%]  (true,exec) 41 [85.0%]  (false,exec)

  # BLOCK 41 freq:1229
  # PRED: 40 [85.0%]  (false,exec)
  D.47358_120 = MEM[(const char *)D.47023_59];
  if (D.47358_120 == 0)
    goto <bb 43>;
  else
    goto <bb 42>;
  # SUCC: 43 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 42 freq:615
  # PRED: 41 [50.0%]  (false,exec)
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:1446
  # PRED: 40 [15.0%]  (true,exec) 41 [50.0%]  (true,exec) 42 [100.0%]  (fallthru,exec)
  # D.47357_121 = PHI <1(40), 1(41), 0(42)>
  if (D.47357_121 != 0)
    goto <bb 45>;
  else
    goto <bb 44>;
  # SUCC: 45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

  # BLOCK 44 freq:1027
  # PRED: 43 [71.0%]  (false,exec)
  D.47023_61 = pmap_3->rm_fmtp;
  D.38491_62 = __builtin_strcmp (D.47023_61, fmtp_36(D));
  if (D.38491_62 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

  # BLOCK 45 freq:933
  # PRED: 43 [29.0%]  (true,exec) 44 [50.0%]  (true,exec)
  D.47040_63 = session_14(D)->pool;
  D.47054_64 = switch_core_perform_strdup (D.47040_63, fmtp_36(D), "src/switch_core_media.c", &__func__, 644);
  pmap_3->rm_fmtp = D.47054_64;
  # SUCC: 46 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:2892
  # PRED: 39 [50.0%]  (false,exec) 44 [50.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
  pmap_3->allocated = 1;
  D.47055_66 = (unsigned char) pt_65(D);
  pmap_3->recv_pt = D.47055_66;
  D.47056_67 = sdp_type_57(D) == 0;
  D.47057_68 = exists_6 == 0;
  D.47058_69 = D.47056_67 || D.47057_68;
  if (D.47058_69 != 0)
    goto <bb 47>;
  else
    goto <bb 51>;
  # SUCC: 47 [50.0%]  (true,exec) 51 [50.0%]  (false,exec)

  # BLOCK 47 freq:1446
  # PRED: 46 [50.0%]  (true,exec)
  if (local_pt_8 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
  # SUCC: 48 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

  # BLOCK 48 freq:723
  # PRED: 47 [50.0%]  (true,exec)
  iftmp.170_70 = (unsigned char) local_pt_8;
  goto <bb 50>;
  # SUCC: 50 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:723
  # PRED: 47 [50.0%]  (false,exec)
  iftmp.170_71 = (unsigned char) pt_65(D);
  # SUCC: 50 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:1446
  # PRED: 48 [100.0%]  (fallthru,exec) 49 [100.0%]  (fallthru,exec)
  # iftmp.170_11 = PHI <iftmp.170_70(48), iftmp.170_71(49)>
  pmap_3->pt = iftmp.170_11;
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:2892
  # PRED: 46 [50.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
  if (negotiated_72(D) != 0)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

  # BLOCK 52 freq:1446
  # PRED: 51 [50.0%]  (true,exec)
  pmap_3->negotiated = negotiated_72(D);
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:2892
  # PRED: 51 [50.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
  if (exists_6 == 0)
    goto <bb 54>;
  else
    goto <bb 59>;
  # SUCC: 54 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

  # BLOCK 54 freq:1446
  # PRED: 53 [50.0%]  (true,exec)
  D.47036_73 = engine_20->payload_map;
  if (D.47036_73 == pmap_3)
    goto <bb 55>;
  else
    goto <bb 56>;
  # SUCC: 55 [15.0%]  (true,exec) 56 [85.0%]  (false,exec)

  # BLOCK 55 freq:217
  # PRED: 54 [15.0%]  (true,exec)
  engine_20->pmap_tail = pmap_3;
  goto <bb 59>;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:1229
  # PRED: 54 [85.0%]  (false,exec)
  D.47036_74 = engine_20->payload_map;
  if (D.47036_74 == 0B)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [15.0%]  (true,exec) 58 [85.0%]  (false,exec)

  # BLOCK 57 freq:184
  # PRED: 56 [15.0%]  (true,exec)
  engine_20->pmap_tail = pmap_3;
  D.47074_75 = engine_20->pmap_tail;
  engine_20->payload_map = D.47074_75;
  goto <bb 59>;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:1045
  # PRED: 56 [85.0%]  (false,exec)
  D.47074_76 = engine_20->pmap_tail;
  D.47074_76->next = pmap_3;
  D.47074_77 = engine_20->pmap_tail;
  D.47076_78 = D.47074_77->next;
  engine_20->pmap_tail = D.47076_78;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:2892
  # PRED: 53 [50.0%]  (false,exec) 55 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
  D.47005_79 = smh_15->sdp_mutex;
  switch_mutex_unlock (D.47005_79);
  # SUCC: 60 [100.0%]  (fallthru,exec)

  # BLOCK 60 freq:3031
  # PRED: 4 [4.6%]  (true,exec) 59 [100.0%]  (fallthru,exec)
  # pmap_9 = PHI <0B(4), pmap_3(59)>
  return pmap_9;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_r_sdp_codec_string (switch_core_media_set_r_sdp_codec_string)

;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
;;
;; Loop 3
;;  header 150, latch 149
;;  depth 1, outer 0
;;  nodes: 150 149 49 112 113 114 148 89 70 88 74 85 87 73 86 84 81 83 82 79 80 78 75 76 77 72 71 67 68 65 63 64 60 62 52 61 57 58 59 56 53 54 55 51 50 47 48 118 147 123 126 144 146 127 145 130 140 137 139 138 135 136 134 131 132 133 129 128 124 125 122 121 120 142 143 141 117 115 116 69 111 93 108 110 94 109 97 107 104 106 105 102 103 101 98 99 100 96 95 92 91 90
;;
;; Loop 9
;;  header 89, latch 88
;;  depth 2, outer 3
;;  nodes: 89 88 74 85 87 73 86 84 81 83 82 79 80 78 75 76 77 72 71
;;
;; Loop 10
;;  header 87, latch 86
;;  depth 3, outer 9
;;  nodes: 87 86 84 81 83 82 79 80 78 75 76 77
;;
;; Loop 7
;;  header 112, latch 111
;;  depth 2, outer 3
;;  nodes: 112 111 93 108 110 94 109 97 107 104 106 105 102 103 101 98 99 100 96 95 92 91 90
;;
;; Loop 8
;;  header 110, latch 109
;;  depth 3, outer 7
;;  nodes: 110 109 97 107 104 106 105 102 103 101 98 99 100 96 95
;;
;; Loop 6
;;  header 62, latch 61
;;  depth 2, outer 3
;;  nodes: 62 61 57 58 59 56 53 54 55
;;
;; Loop 4
;;  header 148, latch 147
;;  depth 2, outer 3
;;  nodes: 148 147 123 126 144 146 127 145 130 140 137 139 138 135 136 134 131 132 133 129 128 124 125 122 121 120 142 143 141
;;
;; Loop 5
;;  header 146, latch 145
;;  depth 3, outer 4
;;  nodes: 146 145 130 140 137 139 138 135 136 134 131 132 133 129 128
;;
;; Loop 2
;;  header 45, latch 44
;;  depth 1, outer 0
;;  nodes: 45 44 28 29 43 30 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 11
;;  header 43, latch 42
;;  depth 2, outer 2
;;  nodes: 43 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 12
;;  header 41, latch 40
;;  depth 3, outer 11
;;  nodes: 41 40 36 37 38 35 32 33 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 22 23 21 18 19 20
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 153 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 15 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 153 17 }
;; 17 succs { 26 }
;; 18 succs { 21 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 27 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 45 }
;; 28 succs { 29 44 }
;; 29 succs { 30 44 }
;; 30 succs { 43 }
;; 31 succs { 41 }
;; 32 succs { 35 33 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 40 }
;; 37 succs { 38 40 }
;; 38 succs { 39 40 }
;; 39 succs { 42 }
;; 40 succs { 41 }
;; 41 succs { 32 42 }
;; 42 succs { 43 }
;; 43 succs { 31 44 }
;; 44 succs { 45 }
;; 45 succs { 28 46 }
;; 46 succs { 150 }
;; 47 succs { 48 50 }
;; 48 succs { 49 50 }
;; 49 succs { 149 }
;; 50 succs { 51 113 }
;; 51 succs { 52 113 }
;; 52 succs { 62 }
;; 53 succs { 56 54 }
;; 54 succs { 56 55 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 61 }
;; 58 succs { 59 61 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 62 }
;; 62 succs { 53 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 151 }
;; 67 succs { 70 68 }
;; 68 succs { 70 69 }
;; 69 succs { 112 }
;; 70 succs { 89 }
;; 71 succs { 74 72 }
;; 72 succs { 74 73 }
;; 73 succs { 87 }
;; 74 succs { 88 }
;; 75 succs { 78 76 }
;; 76 succs { 78 77 }
;; 77 succs { 78 }
;; 78 succs { 80 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 84 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 86 }
;; 85 succs { 88 }
;; 86 succs { 87 }
;; 87 succs { 75 88 }
;; 88 succs { 89 }
;; 89 succs { 71 149 }
;; 90 succs { 93 91 }
;; 91 succs { 93 92 }
;; 92 succs { 93 94 }
;; 93 succs { 111 }
;; 94 succs { 110 }
;; 95 succs { 97 96 }
;; 96 succs { 97 98 }
;; 97 succs { 109 }
;; 98 succs { 101 99 }
;; 99 succs { 101 100 }
;; 100 succs { 101 }
;; 101 succs { 103 102 }
;; 102 succs { 103 105 }
;; 103 succs { 104 105 }
;; 104 succs { 107 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 108 109 }
;; 108 succs { 111 }
;; 109 succs { 110 }
;; 110 succs { 95 111 }
;; 111 succs { 112 }
;; 112 succs { 90 149 }
;; 113 succs { 114 149 }
;; 114 succs { 115 149 }
;; 115 succs { 116 117 }
;; 116 succs { 117 }
;; 117 succs { 119 118 }
;; 118 succs { 148 }
;; 119 succs { 151 }
;; 120 succs { 123 121 }
;; 121 succs { 123 122 }
;; 122 succs { 123 124 }
;; 123 succs { 147 }
;; 124 succs { 125 127 }
;; 125 succs { 126 127 }
;; 126 succs { 147 }
;; 127 succs { 146 }
;; 128 succs { 130 129 }
;; 129 succs { 130 131 }
;; 130 succs { 145 }
;; 131 succs { 134 132 }
;; 132 succs { 134 133 }
;; 133 succs { 134 }
;; 134 succs { 136 135 }
;; 135 succs { 136 138 }
;; 136 succs { 137 138 }
;; 137 succs { 140 }
;; 138 succs { 139 140 }
;; 139 succs { 140 }
;; 140 succs { 141 145 }
;; 141 succs { 142 143 }
;; 142 succs { 144 }
;; 143 succs { 144 }
;; 144 succs { 147 }
;; 145 succs { 146 }
;; 146 succs { 128 147 }
;; 147 succs { 148 }
;; 148 succs { 120 149 }
;; 149 succs { 150 }
;; 150 succs { 47 151 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 1 }
;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
;;
;; Loop 3
;;  header 150, latch 149
;;  depth 1, outer 0
;;  nodes: 150 149 49 112 113 114 148 89 70 88 74 85 87 73 86 84 81 83 82 79 80 78 75 76 77 72 71 67 68 65 63 64 60 62 52 61 57 58 59 56 53 54 55 51 50 47 48 118 147 123 126 144 146 127 145 130 140 137 139 138 135 136 134 131 132 133 129 128 124 125 122 121 120 142 143 141 117 115 116 69 111 93 108 110 94 109 97 107 104 106 105 102 103 101 98 99 100 96 95 92 91 90
;;
;; Loop 9
;;  header 89, latch 88
;;  depth 2, outer 3
;;  nodes: 89 88 74 85 87 73 86 84 81 83 82 79 80 78 75 76 77 72 71
;;
;; Loop 10
;;  header 87, latch 86
;;  depth 3, outer 9
;;  nodes: 87 86 84 81 83 82 79 80 78 75 76 77
;;
;; Loop 7
;;  header 112, latch 111
;;  depth 2, outer 3
;;  nodes: 112 111 93 108 110 94 109 97 107 104 106 105 102 103 101 98 99 100 96 95 92 91 90
;;
;; Loop 8
;;  header 110, latch 109
;;  depth 3, outer 7
;;  nodes: 110 109 97 107 104 106 105 102 103 101 98 99 100 96 95
;;
;; Loop 6
;;  header 62, latch 61
;;  depth 2, outer 3
;;  nodes: 62 61 57 58 59 56 53 54 55
;;
;; Loop 4
;;  header 148, latch 147
;;  depth 2, outer 3
;;  nodes: 148 147 123 126 144 146 127 145 130 140 137 139 138 135 136 134 131 132 133 129 128 124 125 122 121 120 142 143 141
;;
;; Loop 5
;;  header 146, latch 145
;;  depth 3, outer 4
;;  nodes: 146 145 130 140 137 139 138 135 136 134 131 132 133 129 128
;;
;; Loop 2
;;  header 45, latch 44
;;  depth 1, outer 0
;;  nodes: 45 44 28 29 43 30 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 11
;;  header 43, latch 42
;;  depth 2, outer 2
;;  nodes: 43 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 12
;;  header 41, latch 40
;;  depth 3, outer 11
;;  nodes: 41 40 36 37 38 35 32 33 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 22 23 21 18 19 20
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_2)
(get_scalar_evolution 
  (scalar = m_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_2 = PHI <m_81(46), m_231(149)>
)
  (init_cond = m_81))
(analyze_evolution_in_loop 
  (loop_phi_node = m_2 = PHI <m_81(46), m_231(149)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = m_2)
  (scalar_evolution = m_2))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_2)
(get_scalar_evolution 
  (scalar = m_2)
  (scalar_evolution = m_2))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = m_2)
  (scalar_evolution = m_2))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_13 = PHI <map_141(70), map_170(88)>
)
  (init_cond = map_141))
(analyze_evolution_in_loop 
  (loop_phi_node = map_13 = PHI <map_141(70), map_170(88)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = map_13))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = map_13))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = map_13))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_19 = PHI <i_214(73), i_169(86)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_19 = PHI <i_214(73), i_169(86)>
)
(add_to_evolution 
  (loop_nb = 10)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_10))
  (evolution_function = {0, +, 1}_10))
(set_scalar_evolution 
  instantiated_below = 73 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
(number_of_iterations_in_loop = 
  (set_nb_iterations_in_loop = scev_not_known))
)
(instantiate_scev 
  (instantiate_below = 70)
  (evolution_loop = 9)
  (chrec = i_19)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_19 = PHI <i_214(73), i_169(86)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_19 = PHI <i_214(73), i_169(86)>
)
(add_to_evolution 
  (loop_nb = 10)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_10))
  (evolution_function = {0, +, 1}_10))
(set_scalar_evolution 
  instantiated_below = 73 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
(set_scalar_evolution 
  instantiated_below = 73 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40491_145)
(get_scalar_evolution 
  (scalar = D.40491_145)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40455_144)
(get_scalar_evolution 
  (scalar = D.40455_144)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40455_144)
  (scalar_evolution = D.40455_144))
)
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40491_145)
  (scalar_evolution = (int) D.40455_144))
)
(instantiate_scev 
  (instantiate_below = 70)
  (evolution_loop = 9)
  (chrec = (int) D.40455_144)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40455_144)
(get_scalar_evolution 
  (scalar = D.40455_144)
  (scalar_evolution = D.40455_144))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40455_144)
  (scalar_evolution = D.40455_144))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40491_143)
(get_scalar_evolution 
  (scalar = D.40491_143)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40455_142)
(get_scalar_evolution 
  (scalar = D.40455_142)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40455_142)
  (scalar_evolution = D.40455_142))
)
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40491_143)
  (scalar_evolution = (int) D.40455_142))
)
(instantiate_scev 
  (instantiate_below = 70)
  (evolution_loop = 9)
  (chrec = (int) D.40455_142)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.40455_142)
(get_scalar_evolution 
  (scalar = D.40455_142)
  (scalar_evolution = D.40455_142))
(set_scalar_evolution 
  instantiated_below = 70 
  (scalar = D.40455_142)
  (scalar_evolution = D.40455_142))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
(set_scalar_evolution 
  instantiated_below = 73 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 10
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_20)
(get_scalar_evolution 
  (scalar = i_20)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_20 = PHI <i_310(69), i_140(111)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_20 = PHI <i_310(69), i_140(111)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_7))
  (evolution_function = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 7
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_20)
(get_scalar_evolution 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 7
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
Statement (exit)if (i_20 < num_codecs_22)
 is executed at most num_codecs_22 < 0 ? 0 : (unsigned int) num_codecs_22 (bounded by 2147483647) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_140)
(get_scalar_evolution 
  (scalar = i_140)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_20)
(get_scalar_evolution 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = i_140)
  (scalar_evolution = {1, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 69)
  (evolution_loop = 7)
  (chrec = {1, +, 1}_7)
  (res = {1, +, 1}_7))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_140 = i_20 + 1;
 in loop 7.
Statement i_140 = i_20 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.40491_117)
(get_scalar_evolution 
  (scalar = D.40491_117)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.40455_116)
(get_scalar_evolution 
  (scalar = D.40455_116)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = D.40455_116)
  (scalar_evolution = D.40455_116))
)
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = D.40491_117)
  (scalar_evolution = (int) D.40455_116))
)
(instantiate_scev 
  (instantiate_below = 69)
  (evolution_loop = 7)
  (chrec = D.40491_117)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.40491_117)
(get_scalar_evolution 
  (scalar = D.40491_117)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.40455_116)
(get_scalar_evolution 
  (scalar = D.40455_116)
  (scalar_evolution = D.40455_116))
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = D.40455_116)
  (scalar_evolution = D.40455_116))
)
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = D.40491_117)
  (scalar_evolution = (int) D.40455_116))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.40491_117)
(get_scalar_evolution 
  (scalar = D.40491_117)
  (scalar_evolution = (int) D.40455_116))
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = D.40491_117)
  (scalar_evolution = (int) D.40455_116))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.40521_111)
(get_scalar_evolution 
  (scalar = D.40521_111)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.40518_110)
(get_scalar_evolution 
  (scalar = D.40518_110)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = D.40518_110)
  (scalar_evolution = D.40518_110))
)
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = D.40521_111)
  (scalar_evolution = (int) D.40518_110))
)
(instantiate_scev 
  (instantiate_below = 69)
  (evolution_loop = 7)
  (chrec = (int) D.40518_110)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.40518_110)
(get_scalar_evolution 
  (scalar = D.40518_110)
  (scalar_evolution = D.40518_110))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = D.40518_110)
  (scalar_evolution = D.40518_110))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_20)
(get_scalar_evolution 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 69)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_106 = codecs[i_20];
 in loop 7.
Statement imp_106 = codecs[i_20];
 is executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = map_14)
(get_scalar_evolution 
  (scalar = map_14)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_14 = PHI <map_113(94), map_139(109)>
)
  (init_cond = map_113))
(analyze_evolution_in_loop 
  (loop_phi_node = map_14 = PHI <map_113(94), map_139(109)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = map_14)
  (scalar_evolution = map_14))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = map_14)
(get_scalar_evolution 
  (scalar = map_14)
  (scalar_evolution = map_14))
(set_scalar_evolution 
  instantiated_below = 94 
  (scalar = map_14)
  (scalar_evolution = map_14))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = attr_5)
(get_scalar_evolution 
  (scalar = attr_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_5 = PHI <attr_91(52), attr_99(61)>
)
  (init_cond = attr_91))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_5 = PHI <attr_91(52), attr_99(61)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 52 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = attr_5)
(get_scalar_evolution 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
(set_scalar_evolution 
  instantiated_below = 52 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_21)
(get_scalar_evolution 
  (scalar = i_21)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_21 = PHI <i_177(118), i_230(147)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_21 = PHI <i_177(118), i_230(147)>
)
(add_to_evolution 
  (loop_nb = 4)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_4))
  (evolution_function = {0, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 4
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_21)
(get_scalar_evolution 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 4
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
Statement (exit)if (i_21 < num_codecs_22)
 is executed at most num_codecs_22 < 0 ? 0 : (unsigned int) num_codecs_22 (bounded by 2147483647) + 1 times in loop 4.
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_230)
(get_scalar_evolution 
  (scalar = i_230)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_21)
(get_scalar_evolution 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = i_230)
  (scalar_evolution = {1, +, 1}_4))
)
(instantiate_scev 
  (instantiate_below = 118)
  (evolution_loop = 4)
  (chrec = {1, +, 1}_4)
  (res = {1, +, 1}_4))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_230 = i_21 + 1;
 in loop 4.
Statement i_230 = i_21 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 4.
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40555_228)
(get_scalar_evolution 
  (scalar = D.40555_228)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40552_227)
(get_scalar_evolution 
  (scalar = D.40552_227)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40552_227)
  (scalar_evolution = D.40552_227))
)
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40555_228)
  (scalar_evolution = (int) D.40552_227))
)
(instantiate_scev 
  (instantiate_below = 118)
  (evolution_loop = 4)
  (chrec = (int) D.40552_227)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40552_227)
(get_scalar_evolution 
  (scalar = D.40552_227)
  (scalar_evolution = D.40552_227))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40552_227)
  (scalar_evolution = D.40552_227))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40491_193)
(get_scalar_evolution 
  (scalar = D.40491_193)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.40455_192)
(get_scalar_evolution 
  (scalar = D.40455_192)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = D.40455_192)
  (scalar_evolution = D.40455_192))
)
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = D.40491_193)
  (scalar_evolution = (int) D.40455_192))
)
(instantiate_scev 
  (instantiate_below = 118)
  (evolution_loop = 4)
  (chrec = D.40491_193)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40491_193)
(get_scalar_evolution 
  (scalar = D.40491_193)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.40455_192)
(get_scalar_evolution 
  (scalar = D.40455_192)
  (scalar_evolution = D.40455_192))
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = D.40455_192)
  (scalar_evolution = D.40455_192))
)
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = D.40491_193)
  (scalar_evolution = (int) D.40455_192))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.40491_193)
(get_scalar_evolution 
  (scalar = D.40491_193)
  (scalar_evolution = (int) D.40455_192))
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = D.40491_193)
  (scalar_evolution = (int) D.40455_192))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40555_183)
(get_scalar_evolution 
  (scalar = D.40555_183)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40552_182)
(get_scalar_evolution 
  (scalar = D.40552_182)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40552_182)
  (scalar_evolution = D.40552_182))
)
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40555_183)
  (scalar_evolution = (int) D.40552_182))
)
(instantiate_scev 
  (instantiate_below = 118)
  (evolution_loop = 4)
  (chrec = (int) D.40552_182)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.40552_182)
(get_scalar_evolution 
  (scalar = D.40552_182)
  (scalar_evolution = D.40552_182))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.40552_182)
  (scalar_evolution = D.40552_182))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_21)
(get_scalar_evolution 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
)
(instantiate_scev 
  (instantiate_below = 118)
  (evolution_loop = 4)
  (chrec = {0, +, 1}_4)
  (res = {0, +, 1}_4))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_178 = codecs[i_21];
 in loop 4.
Statement imp_178 = codecs[i_21];
 is executed at most 49 (bounded by 49) + 1 times in loop 4.
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_15)
(get_scalar_evolution 
  (scalar = map_15)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_15 = PHI <map_189(127), map_229(145)>
)
  (init_cond = map_189))
(analyze_evolution_in_loop 
  (loop_phi_node = map_15 = PHI <map_189(127), map_229(145)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = map_15)
  (scalar_evolution = map_15))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_15)
(get_scalar_evolution 
  (scalar = map_15)
  (scalar_evolution = map_15))
(set_scalar_evolution 
  instantiated_below = 127 
  (scalar = map_15)
  (scalar_evolution = map_15))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_55(27), m_80(44)>
)
  (init_cond = m_55))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_55(27), m_80(44)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_12 = PHI <map_60(30), map_79(42)>
)
  (init_cond = map_60))
(analyze_evolution_in_loop 
  (loop_phi_node = map_12 = PHI <map_60(30), map_79(42)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = map_12))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = map_12))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = map_12))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = attr_4)
(get_scalar_evolution 
  (scalar = attr_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_4 = PHI <attr_61(31), attr_69(40)>
)
  (init_cond = attr_61))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_4 = PHI <attr_61(31), attr_69(40)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 31 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = attr_4)
(get_scalar_evolution 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
(set_scalar_evolution 
  instantiated_below = 31 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_3 = PHI <attr_47(17), attr_54(25)>
)
  (init_cond = attr_47))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_3 = PHI <attr_47(17), attr_54(25)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 17 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 17 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 12
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 13
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 19
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics (ignored): 1.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 24 predicted to even probabilities
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
Predictions for bb 29
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 30 predicted to even probabilities
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 33
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 38
  DS theory heuristics (ignored): 9.8%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  pointer (on trees) heuristics (ignored): 85.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 39 predicted to even probabilities
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 48
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 49 predicted to even probabilities
Predictions for bb 50
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 51
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 54
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 55 predicted to even probabilities
Predictions for bb 56
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 57 predicted to even probabilities
Predictions for bb 58
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 59
  DS theory heuristics (ignored): 9.8%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  pointer (on trees) heuristics (ignored): 85.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 60 predicted to even probabilities
1 edges in bb 61 predicted to even probabilities
Predictions for bb 62
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 63
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 64 predicted to even probabilities
Predictions for bb 65
  DS theory heuristics (ignored): 0.5%
  first match heuristics: 3.0%
  combined heuristics: 3.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 3.0%
1 edges in bb 66 predicted to even probabilities
Predictions for bb 67
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 68
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 69 predicted to even probabilities
1 edges in bb 70 predicted to even probabilities
Predictions for bb 71
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 72
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 73 predicted to even probabilities
1 edges in bb 74 predicted to even probabilities
Predictions for bb 75
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 76
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 77 predicted to even probabilities
Predictions for bb 78
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 79
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 80
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 81 predicted to even probabilities
Predictions for bb 82
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  DS theory heuristics (ignored): 1.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 85 predicted to even probabilities
1 edges in bb 86 predicted to even probabilities
Predictions for bb 87
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 88 predicted to even probabilities
Predictions for bb 89
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
Predictions for bb 90
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 91
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
  continue heuristics: 50.0%
Predictions for bb 92
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 93 predicted to even probabilities
1 edges in bb 94 predicted to even probabilities
Predictions for bb 95
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 96
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 97 predicted to even probabilities
Predictions for bb 98
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 99
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 100 predicted to even probabilities
Predictions for bb 101
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 103
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 104 predicted to even probabilities
Predictions for bb 105
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 106 predicted to even probabilities
Predictions for bb 107
  DS theory heuristics (ignored): 1.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 108 predicted to even probabilities
1 edges in bb 109 predicted to even probabilities
Predictions for bb 110
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 111 predicted to even probabilities
Predictions for bb 112
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 113
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 114
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 115
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 116 predicted to even probabilities
Predictions for bb 117
  DS theory heuristics (ignored): 0.2%
  first match heuristics: 3.0%
  combined heuristics: 3.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 3.0%
1 edges in bb 118 predicted to even probabilities
1 edges in bb 119 predicted to even probabilities
Predictions for bb 120
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
Predictions for bb 121
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
  continue heuristics: 50.0%
Predictions for bb 122
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 123 predicted to even probabilities
Predictions for bb 124
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 125
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 126 predicted to even probabilities
1 edges in bb 127 predicted to even probabilities
Predictions for bb 128
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 129
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 130 predicted to even probabilities
Predictions for bb 131
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 132
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 133 predicted to even probabilities
Predictions for bb 134
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 135
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 136
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 137 predicted to even probabilities
Predictions for bb 138
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 139 predicted to even probabilities
Predictions for bb 140
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
Predictions for bb 141
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 142 predicted to even probabilities
1 edges in bb 143 predicted to even probabilities
1 edges in bb 144 predicted to even probabilities
1 edges in bb 145 predicted to even probabilities
Predictions for bb 146
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 147 predicted to even probabilities
Predictions for bb 148
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
1 edges in bb 149 predicted to even probabilities
Predictions for bb 150
  DS theory heuristics (ignored): 99.5%
  first match heuristics: 97.0%
  combined heuristics: 97.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 97.0%
Predictions for bb 151
  DS theory heuristics: 19.9%
  first match heuristics (ignored): 28.0%
  combined heuristics: 19.9%
  opcode values nonequal (on trees) heuristics: 28.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 152 predicted to even probabilities
1 edges in bb 153 predicted to even probabilities

;; Function switch_core_media_set_r_sdp_codec_string

;; 
154 basic blocks, 239 edges, last basic block 154.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  153 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [69.8%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [30.2%]  (false,exec) 6 [50.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (false,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (true,exec)
Successors:  13 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [69.8%]  (true,exec)
Successors:  14 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [69.8%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  13 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec) 12 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  153 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [61.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  26 [95.5%]  (true,exec)
Successors:  21 [15.0%]  (true,exec) 19 [85.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [85.0%]  (false,exec)
Successors:  21 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [50.0%]  (false,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [15.0%]  (true,exec) 19 [50.0%]  (true,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  24 [4.5%]  (true,exec) 25 [95.5%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [4.5%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 23 [95.5%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,dfs_back,exec)

Basic block 26 (new, reachable)
Predecessors:  17 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
Successors:  18 [95.5%]  (true,exec) 27 [4.5%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  24 [100.0%]  (fallthru,exec) 26 [4.5%]  (false,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  45 [91.0%]  (true,exec)
Successors:  29 [27.0%]  (true,exec) 44 [73.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [27.0%]  (true,exec)
Successors:  30 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  43 [91.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  41 [95.5%]  (true,exec)
Successors:  35 [15.0%]  (true,exec) 33 [85.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [85.0%]  (false,exec)
Successors:  35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [50.0%]  (false,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  32 [15.0%]  (true,exec) 33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
Successors:  36 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [50.0%]  (true,exec)
Successors:  40 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  35 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [50.0%]  (true,exec)
Successors:  39 [4.5%]  (true,exec) 40 [95.5%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [4.5%]  (true,exec)
Successors:  42 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  36 [100.0%]  (fallthru,exec) 37 [50.0%]  (false,exec) 38 [95.5%]  (false,exec)
Successors:  41 [100.0%]  (fallthru,dfs_back,exec)

Basic block 41 (new, reachable)
Predecessors:  31 [100.0%]  (fallthru,exec) 40 [100.0%]  (fallthru,dfs_back,exec)
Successors:  32 [95.5%]  (true,exec) 42 [4.5%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [100.0%]  (fallthru,exec) 41 [4.5%]  (false,exec)
Successors:  43 [100.0%]  (fallthru,dfs_back,exec)

Basic block 43 (new, reachable)
Predecessors:  30 [100.0%]  (fallthru,exec) 42 [100.0%]  (fallthru,dfs_back,exec)
Successors:  31 [91.0%]  (true,exec) 44 [9.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  28 [73.0%]  (false,exec) 29 [50.0%]  (false,exec) 43 [9.0%]  (false,exec)
Successors:  45 [100.0%]  (fallthru,dfs_back,exec)

Basic block 45 (new, reachable)
Predecessors:  27 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,dfs_back,exec)
Successors:  28 [91.0%]  (true,exec) 46 [9.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [9.0%]  (false,exec)
Successors:  150 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  150 [97.0%]  (true,exec)
Successors:  48 [28.0%]  (true,exec) 50 [72.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [28.0%]  (true,exec)
Successors:  49 [29.0%]  (true,exec) 50 [71.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [29.0%]  (true,exec)
Successors:  149 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  47 [72.0%]  (false,exec) 48 [71.0%]  (false,exec)
Successors:  51 [28.0%]  (true,exec) 113 [72.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [28.0%]  (true,exec)
Successors:  52 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  62 [95.5%]  (true,exec)
Successors:  56 [15.0%]  (true,exec) 54 [85.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  56 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  53 [15.0%]  (true,exec) 54 [50.0%]  (true,exec) 55 [100.0%]  (fallthru,exec)
Successors:  57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [50.0%]  (false,exec)
Successors:  59 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [50.0%]  (true,exec)
Successors:  60 [4.5%]  (true,exec) 61 [95.5%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [4.5%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  57 [100.0%]  (fallthru,exec) 58 [50.0%]  (false,exec) 59 [95.5%]  (false,exec)
Successors:  62 [100.0%]  (fallthru,dfs_back,exec)

Basic block 62 (new, reachable)
Predecessors:  52 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
Successors:  53 [95.5%]  (true,exec) 63 [4.5%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  60 [100.0%]  (fallthru,exec) 62 [4.5%]  (false,exec)
Successors:  64 [85.0%]  (true,exec) 65 [15.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [85.0%]  (true,exec)
Successors:  65 [100.0%]  (fallthru,exec)

Basic block 65 (new, reachable)
Predecessors:  63 [15.0%]  (false,exec) 64 [100.0%]  (fallthru,exec)
Successors:  66 [3.0%]  (true,exec) 67 [97.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [3.0%]  (true,exec)
Successors:  151 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  65 [97.0%]  (false,exec)
Successors:  70 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec)
Successors:  70 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [50.0%]  (false,exec)
Successors:  112 [100.0%]  (fallthru)

Basic block 70 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec) 68 [50.0%]  (true,exec)
Successors:  89 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  89 [91.0%]  (true,exec)
Successors:  74 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [50.0%]  (false,exec)
Successors:  74 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [50.0%]  (false,exec)
Successors:  87 [100.0%]  (fallthru)

Basic block 74 (new, reachable)
Predecessors:  71 [50.0%]  (true,exec) 72 [50.0%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 75 (new, reachable)
Predecessors:  87 [95.5%]  (true,exec)
Successors:  78 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [85.0%]  (false,exec)
Successors:  78 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [50.0%]  (false,exec)
Successors:  78 [100.0%]  (fallthru,exec)

Basic block 78 (new, reachable)
Predecessors:  75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec) 77 [100.0%]  (fallthru,exec)
Successors:  80 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [50.0%]  (false,exec)
Successors:  80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  78 [50.0%]  (true,exec) 79 [50.0%]  (true,exec)
Successors:  81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 82 (new, reachable)
Predecessors:  79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
Successors:  83 [85.0%]  (true,exec) 84 [15.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [85.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 82 [15.0%]  (false,exec)
Successors:  85 [4.5%]  (true,exec) 86 [95.5%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [4.5%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 86 (new, reachable)
Predecessors:  84 [95.5%]  (false,exec)
Successors:  87 [100.0%]  (fallthru,dfs_back,exec)

Basic block 87 (new)
Predecessors:  73 [100.0%]  (fallthru) 86 [100.0%]  (fallthru,dfs_back,exec)
Successors:  75 [95.5%]  (true,exec) 88 [4.5%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  74 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 87 [4.5%]  (false,exec)
Successors:  89 [100.0%]  (fallthru,dfs_back,exec)

Basic block 89 (new, reachable)
Predecessors:  70 [100.0%]  (fallthru,exec) 88 [100.0%]  (fallthru,dfs_back,exec)
Successors:  71 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  112 [98.0%]  (true,exec)
Successors:  93 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [50.0%]  (false,exec)
Successors:  93 [27.0%]  (true,exec) 92 [73.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [73.0%]  (false,exec)
Successors:  93 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  90 [50.0%]  (true,exec) 91 [27.0%]  (true,exec) 92 [50.0%]  (true,exec)
Successors:  111 [100.0%]  (fallthru,exec)

Basic block 94 (new, reachable)
Predecessors:  92 [50.0%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 95 (new, reachable)
Predecessors:  110 [95.5%]  (true,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  95 [50.0%]  (true,exec) 96 [50.0%]  (true,exec)
Successors:  109 [100.0%]  (fallthru,exec)

Basic block 98 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec)
Successors:  101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [85.0%]  (false,exec)
Successors:  101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [50.0%]  (false,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 101 (new, reachable)
Predecessors:  98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
Successors:  103 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [50.0%]  (false,exec)
Successors:  103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  101 [50.0%]  (true,exec) 102 [50.0%]  (true,exec)
Successors:  104 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [50.0%]  (true,exec)
Successors:  107 [100.0%]  (fallthru,exec)

Basic block 105 (new, reachable)
Predecessors:  102 [50.0%]  (false,exec) 103 [50.0%]  (false,exec)
Successors:  106 [85.0%]  (true,exec) 107 [15.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [85.0%]  (true,exec)
Successors:  107 [100.0%]  (fallthru,exec)

Basic block 107 (new, reachable)
Predecessors:  104 [100.0%]  (fallthru,exec) 106 [100.0%]  (fallthru,exec) 105 [15.0%]  (false,exec)
Successors:  108 [4.5%]  (true,exec) 109 [95.5%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  107 [4.5%]  (true,exec)
Successors:  111 [100.0%]  (fallthru,exec)

Basic block 109 (new, reachable)
Predecessors:  97 [100.0%]  (fallthru,exec) 107 [95.5%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,dfs_back,exec)

Basic block 110 (new, reachable)
Predecessors:  94 [100.0%]  (fallthru,exec) 109 [100.0%]  (fallthru,dfs_back,exec)
Successors:  95 [95.5%]  (true,exec) 111 [4.5%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  93 [100.0%]  (fallthru,exec) 108 [100.0%]  (fallthru,exec) 110 [4.5%]  (false,exec)
Successors:  112 [100.0%]  (fallthru,dfs_back,exec)

Basic block 112 (new)
Predecessors:  69 [100.0%]  (fallthru) 111 [100.0%]  (fallthru,dfs_back,exec)
Successors:  90 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  50 [72.0%]  (false,exec) 51 [50.0%]  (false,exec)
Successors:  114 [28.0%]  (true,exec) 149 [72.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [28.0%]  (true,exec)
Successors:  115 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [50.0%]  (true,exec)
Successors:  116 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [85.0%]  (true,exec)
Successors:  117 [100.0%]  (fallthru,exec)

Basic block 117 (new, reachable)
Predecessors:  115 [15.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
Successors:  119 [3.0%]  (true,exec) 118 [97.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [97.0%]  (false,exec)
Successors:  148 [100.0%]  (fallthru)

Basic block 119 (new, reachable)
Predecessors:  117 [3.0%]  (true,exec)
Successors:  151 [100.0%]  (fallthru,exec)

Basic block 120 (new, reachable)
Predecessors:  148 [98.0%]  (true,exec)
Successors:  123 [72.0%]  (true,exec) 121 [28.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [28.0%]  (false,exec)
Successors:  123 [27.0%]  (true,exec) 122 [73.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [73.0%]  (false,exec)
Successors:  123 [71.0%]  (true,exec) 124 [29.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  120 [72.0%]  (true,exec) 121 [27.0%]  (true,exec) 122 [71.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 124 (new, reachable)
Predecessors:  122 [29.0%]  (false,exec)
Successors:  125 [29.0%]  (true,exec) 127 [71.0%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [29.0%]  (true,exec)
Successors:  126 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

Basic block 126 (new, reachable)
Predecessors:  125 [50.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  124 [71.0%]  (false,exec) 125 [50.0%]  (false,exec)
Successors:  146 [100.0%]  (fallthru,exec)

Basic block 128 (new, reachable)
Predecessors:  146 [95.5%]  (true,exec)
Successors:  130 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [50.0%]  (false,exec)
Successors:  130 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  128 [50.0%]  (true,exec) 129 [50.0%]  (true,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  129 [50.0%]  (false,exec)
Successors:  134 [15.0%]  (true,exec) 132 [85.0%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [85.0%]  (false,exec)
Successors:  134 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

Basic block 133 (new, reachable)
Predecessors:  132 [50.0%]  (false,exec)
Successors:  134 [100.0%]  (fallthru,exec)

Basic block 134 (new, reachable)
Predecessors:  131 [15.0%]  (true,exec) 132 [50.0%]  (true,exec) 133 [100.0%]  (fallthru,exec)
Successors:  136 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

Basic block 135 (new, reachable)
Predecessors:  134 [50.0%]  (false,exec)
Successors:  136 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  134 [50.0%]  (true,exec) 135 [50.0%]  (true,exec)
Successors:  137 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

Basic block 137 (new, reachable)
Predecessors:  136 [50.0%]  (true,exec)
Successors:  140 [100.0%]  (fallthru,exec)

Basic block 138 (new, reachable)
Predecessors:  135 [50.0%]  (false,exec) 136 [50.0%]  (false,exec)
Successors:  139 [85.0%]  (true,exec) 140 [15.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [85.0%]  (true,exec)
Successors:  140 [100.0%]  (fallthru,exec)

Basic block 140 (new, reachable)
Predecessors:  137 [100.0%]  (fallthru,exec) 139 [100.0%]  (fallthru,exec) 138 [15.0%]  (false,exec)
Successors:  141 [4.5%]  (true,exec) 145 [95.5%]  (false,exec)

Basic block 141 (new, reachable)
Predecessors:  140 [4.5%]  (true,exec)
Successors:  142 [73.0%]  (true,exec) 143 [27.0%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [73.0%]  (true,exec)
Successors:  144 [100.0%]  (fallthru,exec)

Basic block 143 (new, reachable)
Predecessors:  141 [27.0%]  (false,exec)
Successors:  144 [100.0%]  (fallthru,exec)

Basic block 144 (new, reachable)
Predecessors:  142 [100.0%]  (fallthru,exec) 143 [100.0%]  (fallthru,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  130 [100.0%]  (fallthru,exec) 140 [95.5%]  (false,exec)
Successors:  146 [100.0%]  (fallthru,dfs_back,exec)

Basic block 146 (new, reachable)
Predecessors:  127 [100.0%]  (fallthru,exec) 145 [100.0%]  (fallthru,dfs_back,exec)
Successors:  128 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

Basic block 147 (new, reachable)
Predecessors:  123 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,exec) 146 [4.5%]  (false,exec)
Successors:  148 [100.0%]  (fallthru,dfs_back,exec)

Basic block 148 (new)
Predecessors:  118 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
Successors:  120 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  49 [100.0%]  (fallthru,exec) 112 [2.0%]  (false,exec) 113 [72.0%]  (false,exec) 114 [50.0%]  (false,exec) 148 [2.0%]  (false,exec) 89 [9.0%]  (false,exec)
Successors:  150 [100.0%]  (fallthru,dfs_back,exec)

Basic block 150 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 149 [100.0%]  (fallthru,dfs_back,exec)
Successors:  47 [97.0%]  (true,exec) 151 [3.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  66 [100.0%]  (fallthru,exec) 119 [100.0%]  (fallthru,exec) 150 [3.0%]  (false,exec)
Successors:  152 [19.9%]  (true,exec) 153 [80.1%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [19.9%]  (true,exec)
Successors:  153 [100.0%]  (fallthru,exec)

Basic block 153 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 16 [39.0%]  (true,exec) 151 [80.1%]  (false,exec) 152 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_r_sdp_codec_string (struct switch_core_session_t * session, const char * codec_string, struct sdp_session_t * sdp, switch_sdp_type_t sdp_type)
{
  const char D.47396;
  int D.47395;
  const char D.47392;
  int D.47391;
  const char D.47388;
  int D.47387;
  const char D.47381;
  int D.47380;
  const char D.47374;
  int D.47373;
  const char D.47367;
  int D.47366;
  const char D.47363;
  int D.47362;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  char * tmp_codec_string;
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  struct switch_media_handle_t * smh;
  const char * var;
  int prefer_sdp;
  struct switch_channel_t * channel;
  const struct switch_codec_implementation_t * codecs[50];
  char * codec_order[50];
  int num_codecs;
  int already_did[128];
  int i;
  short int match;
  struct sdp_rtpmap_t * map;
  struct sdp_connection_t * connection;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  char buf[1024];
  char D.40591;
  unsigned int D.40590;
  size_t D.40589;
  char * D.40588;
  size_t D.40587;
  unsigned int D.40585;
  size_t D.40584;
  char * D.40583;
  size_t D.40582;
  int D.40576;
  char * const D.40575;
  uint32_t D.40561;
  switch_call_direction_t D.40558;
  struct switch_channel_t * D.40557;
  int D.40556;
  int D.40555;
  signed char D.40553;
  const switch_payload_t D.40552;
  const switch_codec_type_t D.40550;
  struct switch_core_session_t * D.40547;
  int D.40535;
  char * const D.40534;
  int D.40522;
  int D.40521;
  signed char D.40519;
  const switch_payload_t D.40518;
  const switch_codec_type_t D.40516;
  int D.40510;
  char * const D.40509;
  int D.40506;
  const switch_payload_t D.40505;
  int D.40502;
  int D.40501;
  switch_core_media_NDLB_t D.40500;
  struct switch_core_media_params_t * D.40499;
  int D.40493;
  int D.40491;
  switch_call_direction_t D.40487;
  struct switch_core_session_t * D.40484;
  struct sdp_connection_t * D.40479;
  int D.40474;
  unsigned int D.40466;
  size_t D.40465;
  char * D.40464;
  size_t D.40463;
  uint32_t ptime.5;
  long unsigned int D.40457;
  uint32_t D.40456;
  <unnamed-unsigned:7> D.40455;
  const char * D.40454;
  const char * D.40453;
  switch_media_type_t D.40452;
  int D.40447;
  long unsigned int D.40441;
  unsigned int D.40438;
  sdp_media_e D.40437;
  const char * D.40436;
  int D.40433;
  const char * D.40429;
  _Bool D.40426;
  _Bool D.40425;
  _Bool D.40424;
  unsigned int D.40420;
  int D.40412;

  # BLOCK 2 freq:85
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  buf = {};
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG match => 0
  already_did = {};
  # DEBUG num_codecs => 0
  codecs = {};
  channel_29 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_29
  # DEBUG prefer_sdp => 0
  if (session_28(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:84
  # PRED: 2 [100.0%]  (false,exec)
  smh_31 = session_28(D)->media_handle;
  # DEBUG smh => smh_31
  if (smh_31 == 0B)
    goto <bb 153>;
  else
    goto <bb 5>;
  # SUCC: 153 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:66
  # PRED: 4 [78.4%]  (false,exec)
  var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);
  # DEBUG var => var_32
  if (var_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 6 freq:46
  # PRED: 5 [69.8%]  (true,exec)
  D.40412_33 = switch_true (var_32);
  if (D.40412_33 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 7 freq:23
  # PRED: 6 [50.0%]  (true,exec)
  # DEBUG prefer_sdp => 1
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:66
  # PRED: 5 [30.2%]  (false,exec) 6 [50.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  # prefer_sdp_23 = PHI <0(5), 0(6), 1(7)>
  # DEBUG prefer_sdp => prefer_sdp_23
  # DEBUG s => codec_string_35(D)
  if (codec_string_35(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;
  # SUCC: 11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 9 freq:56
  # PRED: 8 [85.0%]  (false,exec)
  D.47363_278 = *codec_string_35(D);
  if (D.47363_278 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:28
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:66
  # PRED: 8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # D.47362_279 = PHI <1(8), 1(9), 0(10)>
  if (D.47362_279 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 12 freq:33
  # PRED: 11 [50.0%]  (true,exec)
  tmp_codec_string_37 = __strdup (codec_string_35(D));
  # DEBUG tmp_codec_string => tmp_codec_string_37
  if (tmp_codec_string_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

  # BLOCK 13 freq:23
  # PRED: 12 [69.8%]  (true,exec)
  D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);
  num_codecs_39 = (int) D.40420_38;
  # DEBUG num_codecs => num_codecs_39
  num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);
  # DEBUG num_codecs => num_codecs_40
  if (tmp_codec_string_37 != 0B)
    goto <bb 14>;
  else
    goto <bb 16>;
  # SUCC: 14 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

  # BLOCK 14 freq:16
  # PRED: 13 [69.8%]  (true,exec)
  free (tmp_codec_string_37);
  # DEBUG tmp_codec_string => 0B
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:33
  # PRED: 11 [50.0%]  (false,exec)
  num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);
  # DEBUG num_codecs => num_codecs_42
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:66
  # PRED: 13 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec) 12 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  # num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), 0(12), num_codecs_40(14)>
  # DEBUG num_codecs => num_codecs_22
  D.40424_43 = channel_29 == 0B;
  D.40425_44 = num_codecs_22 == 0;
  D.40426_45 = D.40424_43 || D.40425_44;
  if (D.40426_45 != 0)
    goto <bb 153>;
  else
    goto <bb 17>;
  # SUCC: 153 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 17 freq:40
  # PRED: 16 [61.0%]  (false,exec)
  attr_47 = sdp_46(D)->sdp_attributes;
  # DEBUG attr => attr_47
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:580
  # PRED: 26 [95.5%]  (true,exec)
  D.40429_48 = attr_3->a_name;
  # DEBUG s => D.40429_48
  if (D.40429_48 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;
  # SUCC: 21 [15.0%]  (true,exec) 19 [85.0%]  (false,exec)

  # BLOCK 19 freq:493
  # PRED: 18 [85.0%]  (false,exec)
  D.47367_280 = *D.40429_48;
  if (D.47367_280 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;
  # SUCC: 21 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 20 freq:247
  # PRED: 19 [50.0%]  (false,exec)
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:580
  # PRED: 18 [15.0%]  (true,exec) 19 [50.0%]  (true,exec) 20 [100.0%]  (fallthru,exec)
  # D.47366_281 = PHI <1(18), 1(19), 0(20)>
  if (D.47366_281 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 22 freq:290
  # PRED: 21 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:290
  # PRED: 21 [50.0%]  (false,exec)
  D.40429_50 = attr_3->a_name;
  D.40433_51 = strcasecmp (D.40429_50, "ptime");
  if (D.40433_51 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [4.5%]  (true,exec) 25 [95.5%]  (false,exec)

  # BLOCK 24 freq:13
  # PRED: 23 [4.5%]  (true,exec)
  D.40436_52 = attr_3->a_value;
  # DEBUG __nptr => D.40436_52
  dptime_282 = strtol (D.40436_52, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 27>;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:567
  # PRED: 22 [100.0%]  (fallthru,exec) 23 [95.5%]  (false,exec)
  attr_54 = attr_3->a_next;
  # DEBUG attr => attr_54
  # SUCC: 26 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 26 freq:607
  # PRED: 17 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
  # attr_3 = PHI <attr_47(17), attr_54(25)>
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 18>;
  else
    goto <bb 27>;
  # SUCC: 18 [95.5%]  (true,exec) 27 [4.5%]  (false,exec)

  # BLOCK 27 freq:40
  # PRED: 24 [100.0%]  (fallthru,exec) 26 [4.5%]  (false,exec)
  # dptime_9 = PHI <dptime_282(24), 0(26)>
  # DEBUG dptime => dptime_9
  switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));
  switch_core_media_pass_zrtp_hash (session_28(D));
  m_55 = sdp_46(D)->sdp_media;
  # DEBUG m => m_55
  goto <bb 45>;
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:408
  # PRED: 45 [91.0%]  (true,exec)
  # DEBUG ptime => dptime_9
  D.40437_57 = m_1->m_type;
  D.40438_58 = D.40437_57 + 4294967294;
  if (D.40438_58 <= 1)
    goto <bb 29>;
  else
    goto <bb 44>;
  # SUCC: 29 [27.0%]  (true,exec) 44 [73.0%]  (false,exec)

  # BLOCK 29 freq:110
  # PRED: 28 [27.0%]  (true,exec)
  D.40441_59 = m_1->m_port;
  if (D.40441_59 != 0)
    goto <bb 30>;
  else
    goto <bb 44>;
  # SUCC: 30 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 30 freq:55
  # PRED: 29 [50.0%]  (true,exec)
  map_60 = m_1->m_rtpmaps;
  # DEBUG map => map_60
  goto <bb 43>;
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:557
  # PRED: 43 [91.0%]  (true,exec)
  attr_61 = m_1->m_attributes;
  # DEBUG attr => attr_61
  goto <bb 41>;
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:9550
  # PRED: 41 [95.5%]  (true,exec)
  D.40429_62 = attr_4->a_name;
  # DEBUG s => D.40429_62
  if (D.40429_62 == 0B)
    goto <bb 35>;
  else
    goto <bb 33>;
  # SUCC: 35 [15.0%]  (true,exec) 33 [85.0%]  (false,exec)

  # BLOCK 33 freq:8117
  # PRED: 32 [85.0%]  (false,exec)
  D.47374_283 = *D.40429_62;
  if (D.47374_283 == 0)
    goto <bb 35>;
  else
    goto <bb 34>;
  # SUCC: 35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 34 freq:4059
  # PRED: 33 [50.0%]  (false,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:9550
  # PRED: 32 [15.0%]  (true,exec) 33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
  # D.47373_284 = PHI <1(32), 1(33), 0(34)>
  if (D.47373_284 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 36 freq:4775
  # PRED: 35 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 40>;
  # SUCC: 40 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:4775
  # PRED: 35 [50.0%]  (false,exec)
  D.40429_64 = attr_4->a_name;
  D.40447_65 = strcasecmp (D.40429_64, "ptime");
  if (D.40447_65 == 0)
    goto <bb 38>;
  else
    goto <bb 40>;
  # SUCC: 38 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

  # BLOCK 38 freq:2387
  # PRED: 37 [50.0%]  (true,exec)
  D.40436_66 = attr_4->a_value;
  if (D.40436_66 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 [4.5%]  (true,exec) 40 [95.5%]  (false,exec)

  # BLOCK 39 freq:107
  # PRED: 38 [4.5%]  (true,exec)
  D.40436_67 = attr_4->a_value;
  # DEBUG __nptr => D.40436_67
  ptime_285 = strtol (D.40436_67, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 42>;
  # SUCC: 42 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:9443
  # PRED: 36 [100.0%]  (fallthru,exec) 37 [50.0%]  (false,exec) 38 [95.5%]  (false,exec)
  attr_69 = attr_4->a_next;
  # DEBUG attr => attr_69
  # SUCC: 41 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 41 freq:10000
  # PRED: 31 [100.0%]  (fallthru,exec) 40 [100.0%]  (fallthru,dfs_back,exec)
  # attr_4 = PHI <attr_61(31), attr_69(40)>
  # DEBUG attr => attr_4
  if (attr_4 != 0B)
    goto <bb 32>;
  else
    goto <bb 42>;
  # SUCC: 32 [95.5%]  (true,exec) 42 [4.5%]  (false,exec)

  # BLOCK 42 freq:557
  # PRED: 39 [100.0%]  (fallthru,exec) 41 [4.5%]  (false,exec)
  # ptime_6 = PHI <ptime_285(39), ptime_7(41)>
  # DEBUG ptime => ptime_6
  D.40437_70 = m_1->m_type;
  D.40452_71 = D.40437_70 != 2;
  D.40453_72 = map_12->rm_encoding;
  D.40454_73 = map_12->rm_fmtp;
  D.40455_74 = map_12->rm_pt;
  D.40456_75 = (uint32_t) D.40455_74;
  D.40457_76 = map_12->rm_rate;
  ptime.5_77 = (uint32_t) ptime_6;
  switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);
  map_79 = map_12->rm_next;
  # DEBUG map => map_79
  # SUCC: 43 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 43 freq:613
  # PRED: 30 [100.0%]  (fallthru,exec) 42 [100.0%]  (fallthru,dfs_back,exec)
  # ptime_7 = PHI <dptime_9(30), ptime_6(42)>
  # map_12 = PHI <map_60(30), map_79(42)>
  # DEBUG map => map_12
  # DEBUG ptime => ptime_7
  if (map_12 != 0B)
    goto <bb 31>;
  else
    goto <bb 44>;
  # SUCC: 31 [91.0%]  (true,exec) 44 [9.0%]  (false,exec)

  # BLOCK 44 freq:408
  # PRED: 28 [73.0%]  (false,exec) 29 [50.0%]  (false,exec) 43 [9.0%]  (false,exec)
  m_80 = m_1->m_next;
  # DEBUG m => m_80
  # SUCC: 45 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 45 freq:449
  # PRED: 27 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_55(27), m_80(44)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 46>;
  # SUCC: 28 [91.0%]  (true,exec) 46 [9.0%]  (false,exec)

  # BLOCK 46 freq:40
  # PRED: 45 [9.0%]  (false,exec)
  m_81 = sdp_46(D)->sdp_media;
  # DEBUG m => m_81
  goto <bb 150>;
  # SUCC: 150 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1060
  # PRED: 150 [97.0%]  (true,exec)
  # DEBUG ptime => dptime_9
  D.40437_83 = m_2->m_type;
  if (D.40437_83 == 8)
    goto <bb 48>;
  else
    goto <bb 50>;
  # SUCC: 48 [28.0%]  (true,exec) 50 [72.0%]  (false,exec)

  # BLOCK 48 freq:297
  # PRED: 47 [28.0%]  (true,exec)
  D.40441_84 = m_2->m_port;
  if (D.40441_84 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [29.0%]  (true,exec) 50 [71.0%]  (false,exec)

  # BLOCK 49 freq:86
  # PRED: 48 [29.0%]  (true,exec)
  D.40463_85 = strlen (&buf);
  D.40464_86 = &buf + D.40463_85;
  D.40465_87 = strlen (&buf);
  D.40466_88 = 1024 - D.40465_87;
  switch_snprintf (D.40464_86, D.40466_88, ",t38");
  goto <bb 149>;
  # SUCC: 149 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:974
  # PRED: 47 [72.0%]  (false,exec) 48 [71.0%]  (false,exec)
  D.40437_89 = m_2->m_type;
  if (D.40437_89 == 2)
    goto <bb 51>;
  else
    goto <bb 113>;
  # SUCC: 51 [28.0%]  (true,exec) 113 [72.0%]  (false,exec)

  # BLOCK 51 freq:273
  # PRED: 50 [28.0%]  (true,exec)
  D.40441_90 = m_2->m_port;
  if (D.40441_90 != 0)
    goto <bb 52>;
  else
    goto <bb 113>;
  # SUCC: 52 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

  # BLOCK 52 freq:136
  # PRED: 51 [50.0%]  (true,exec)
  attr_91 = m_2->m_attributes;
  # DEBUG attr => attr_91
  goto <bb 62>;
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:2336
  # PRED: 62 [95.5%]  (true,exec)
  D.40429_92 = attr_5->a_name;
  # DEBUG s => D.40429_92
  if (D.40429_92 == 0B)
    goto <bb 56>;
  else
    goto <bb 54>;
  # SUCC: 56 [15.0%]  (true,exec) 54 [85.0%]  (false,exec)

  # BLOCK 54 freq:1985
  # PRED: 53 [85.0%]  (false,exec)
  D.47381_286 = *D.40429_92;
  if (D.47381_286 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 55 freq:993
  # PRED: 54 [50.0%]  (false,exec)
  # SUCC: 56 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:2336
  # PRED: 53 [15.0%]  (true,exec) 54 [50.0%]  (true,exec) 55 [100.0%]  (fallthru,exec)
  # D.47380_287 = PHI <1(53), 1(54), 0(55)>
  if (D.47380_287 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

  # BLOCK 57 freq:1168
  # PRED: 56 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:1168
  # PRED: 56 [50.0%]  (false,exec)
  D.40429_94 = attr_5->a_name;
  D.40474_95 = strcasecmp (D.40429_94, "ptime");
  if (D.40474_95 == 0)
    goto <bb 59>;
  else
    goto <bb 61>;
  # SUCC: 59 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

  # BLOCK 59 freq:584
  # PRED: 58 [50.0%]  (true,exec)
  D.40436_96 = attr_5->a_value;
  if (D.40436_96 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [4.5%]  (true,exec) 61 [95.5%]  (false,exec)

  # BLOCK 60 freq:26
  # PRED: 59 [4.5%]  (true,exec)
  D.40436_97 = attr_5->a_value;
  # DEBUG __nptr => D.40436_97
  ptime_288 = strtol (D.40436_97, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:2310
  # PRED: 57 [100.0%]  (fallthru,exec) 58 [50.0%]  (false,exec) 59 [95.5%]  (false,exec)
  attr_99 = attr_5->a_next;
  # DEBUG attr => attr_99
  # SUCC: 62 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 62 freq:2446
  # PRED: 52 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
  # attr_5 = PHI <attr_91(52), attr_99(61)>
  # DEBUG attr => attr_5
  if (attr_5 != 0B)
    goto <bb 53>;
  else
    goto <bb 63>;
  # SUCC: 53 [95.5%]  (true,exec) 63 [4.5%]  (false,exec)

  # BLOCK 63 freq:136
  # PRED: 60 [100.0%]  (fallthru,exec) 62 [4.5%]  (false,exec)
  # ptime_8 = PHI <ptime_288(60), dptime_9(62)>
  # DEBUG ptime => ptime_8
  connection_100 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_100
  D.40479_101 = m_2->m_connections;
  if (D.40479_101 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [85.0%]  (true,exec) 65 [15.0%]  (false,exec)

  # BLOCK 64 freq:116
  # PRED: 63 [85.0%]  (true,exec)
  connection_102 = m_2->m_connections;
  # DEBUG connection => connection_102
  # SUCC: 65 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:136
  # PRED: 63 [15.0%]  (false,exec) 64 [100.0%]  (fallthru,exec)
  # connection_10 = PHI <connection_100(63), connection_102(64)>
  # DEBUG connection => connection_10
  if (connection_10 == 0B)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [3.0%]  (true,exec) 67 [97.0%]  (false,exec)

  # BLOCK 66 freq:4
  # PRED: 65 [3.0%]  (true,exec)
  D.40484_103 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;
  # SUCC: 151 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:132
  # PRED: 65 [97.0%]  (false,exec)
  D.40487_104 = switch_channel_direction (channel_29);
  if (D.40487_104 == 0)
    goto <bb 70>;
  else
    goto <bb 68>;
  # SUCC: 70 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

  # BLOCK 68 freq:66
  # PRED: 67 [50.0%]  (false,exec)
  if (prefer_sdp_23 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;
  # SUCC: 70 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

  # BLOCK 69 freq:33
  # PRED: 68 [50.0%]  (false,exec)
  # i_310 = PHI <0(68)>
  goto <bb 112>;
  # SUCC: 112 [100.0%]  (fallthru)

  # BLOCK 70 freq:99
  # PRED: 67 [50.0%]  (true,exec) 68 [50.0%]  (true,exec)
  map_141 = m_2->m_rtpmaps;
  # DEBUG map => map_141
  goto <bb 89>;
  # SUCC: 89 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:1003
  # PRED: 89 [91.0%]  (true,exec)
  D.40455_142 = map_13->rm_pt;
  D.40491_143 = (int) D.40455_142;
  if (D.40491_143 > 127)
    goto <bb 74>;
  else
    goto <bb 72>;
  # SUCC: 74 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 72 freq:501
  # PRED: 71 [50.0%]  (false,exec)
  D.40455_144 = map_13->rm_pt;
  D.40491_145 = (int) D.40455_144;
  D.40493_146 = already_did[D.40491_145];
  if (D.40493_146 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;
  # SUCC: 74 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

  # BLOCK 73 freq:251
  # PRED: 72 [50.0%]  (false,exec)
  # i_214 = PHI <0(72)>
  goto <bb 87>;
  # SUCC: 87 [100.0%]  (fallthru)

  # BLOCK 74 freq:752
  # PRED: 71 [50.0%]  (true,exec) 72 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 88>;
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 75 freq:2722
  # PRED: 87 [95.5%]  (true,exec)
  imp_148 = codecs[i_19];
  # DEBUG imp => imp_148
  D.40453_149 = map_13->rm_encoding;
  # DEBUG s => D.40453_149
  if (D.40453_149 == 0B)
    goto <bb 78>;
  else
    goto <bb 76>;
  # SUCC: 78 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

  # BLOCK 76 freq:2313
  # PRED: 75 [85.0%]  (false,exec)
  D.47388_289 = *D.40453_149;
  if (D.47388_289 == 0)
    goto <bb 78>;
  else
    goto <bb 77>;
  # SUCC: 78 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

  # BLOCK 77 freq:1157
  # PRED: 76 [50.0%]  (false,exec)
  # SUCC: 78 [100.0%]  (fallthru,exec)

  # BLOCK 78 freq:2722
  # PRED: 75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec) 77 [100.0%]  (fallthru,exec)
  # D.47387_290 = PHI <1(75), 1(76), 0(77)>
  if (D.47387_290 != 0)
    goto <bb 80>;
  else
    goto <bb 79>;
  # SUCC: 80 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

  # BLOCK 79 freq:1361
  # PRED: 78 [50.0%]  (false,exec)
  D.40499_151 = smh_31->mparams;
  D.40500_152 = D.40499_151->ndlb;
  D.40501_153 = (int) D.40500_152;
  D.40502_154 = D.40501_153 & 1;
  if (D.40502_154 != 0)
    goto <bb 80>;
  else
    goto <bb 82>;
  # SUCC: 80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 80 freq:2041
  # PRED: 78 [50.0%]  (true,exec) 79 [50.0%]  (true,exec)
  D.40455_156 = map_13->rm_pt;
  D.40491_157 = (int) D.40455_156;
  if (D.40491_157 <= 95)
    goto <bb 81>;
  else
    goto <bb 82>;
  # SUCC: 81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 81 freq:1021
  # PRED: 80 [50.0%]  (true,exec)
  D.40455_158 = map_13->rm_pt;
  D.40491_159 = (int) D.40455_158;
  D.40505_160 = imp_148->ianacode;
  D.40506_161 = (int) D.40505_160;
  match_162 = D.40491_159 == D.40506_161;
  # DEBUG match => match_162
  goto <bb 84>;
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 82 freq:1701
  # PRED: 79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
  D.40453_163 = map_13->rm_encoding;
  if (D.40453_163 != 0B)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [85.0%]  (true,exec) 84 [15.0%]  (false,exec)

  # BLOCK 83 freq:1446
  # PRED: 82 [85.0%]  (true,exec)
  D.40453_164 = map_13->rm_encoding;
  D.40509_165 = imp_148->iananame;
  D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
  match_167 = D.40510_166 == 0;
  # DEBUG match => match_167
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:2722
  # PRED: 81 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 82 [15.0%]  (false,exec)
  # match_16 = PHI <match_162(81), match_167(83), 0(82)>
  # DEBUG match => match_16
  if (match_16 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;
  # SUCC: 85 [4.5%]  (true,exec) 86 [95.5%]  (false,exec)

  # BLOCK 85 freq:122
  # PRED: 84 [4.5%]  (true,exec)
  add_audio_codec (map_13, ptime_8, &buf, 1024);
  goto <bb 88>;
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 86 freq:2599
  # PRED: 84 [95.5%]  (false,exec)
  i_169 = i_19 + 1;
  # DEBUG i => i_169
  # SUCC: 87 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 87 freq:2850
  # PRED: 73 [100.0%]  (fallthru) 86 [100.0%]  (fallthru,dfs_back,exec)
  # i_19 = PHI <i_214(73), i_169(86)>
  # DEBUG i => i_19
  if (i_19 < num_codecs_22)
    goto <bb 75>;
  else
    goto <bb 88>;
  # SUCC: 75 [95.5%]  (true,exec) 88 [4.5%]  (false,exec)

  # BLOCK 88 freq:1003
  # PRED: 74 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 87 [4.5%]  (false,exec)
  map_170 = map_13->rm_next;
  # DEBUG map => map_170
  # SUCC: 89 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 89 freq:1102
  # PRED: 70 [100.0%]  (fallthru,exec) 88 [100.0%]  (fallthru,dfs_back,exec)
  # map_13 = PHI <map_141(70), map_170(88)>
  # DEBUG map => map_13
  if (map_13 != 0B)
    goto <bb 71>;
  else
    goto <bb 149>;
  # SUCC: 71 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

  # BLOCK 90 freq:1654
  # PRED: 112 [98.0%]  (true,exec)
  imp_106 = codecs[i_20];
  # DEBUG imp => imp_106
  D.40516_107 = imp_106->codec_type;
  if (D.40516_107 != 0)
    goto <bb 93>;
  else
    goto <bb 91>;
  # SUCC: 93 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 91 freq:827
  # PRED: 90 [50.0%]  (false,exec)
  D.40518_108 = imp_106->ianacode;
  D.40519_109 = (signed char) D.40518_108;
  if (D.40519_109 < 0)
    goto <bb 93>;
  else
    goto <bb 92>;
  # SUCC: 93 [27.0%]  (true,exec) 92 [73.0%]  (false,exec)

  # BLOCK 92 freq:604
  # PRED: 91 [73.0%]  (false,exec)
  D.40518_110 = imp_106->ianacode;
  D.40521_111 = (int) D.40518_110;
  D.40522_112 = already_did[D.40521_111];
  if (D.40522_112 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;
  # SUCC: 93 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

  # BLOCK 93 freq:1352
  # PRED: 90 [50.0%]  (true,exec) 91 [27.0%]  (true,exec) 92 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru,exec)

  # BLOCK 94 freq:302
  # PRED: 92 [50.0%]  (false,exec)
  map_113 = m_2->m_rtpmaps;
  # DEBUG map => map_113
  goto <bb 110>;
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 95 freq:5171
  # PRED: 110 [95.5%]  (true,exec)
  D.40455_114 = map_14->rm_pt;
  D.40491_115 = (int) D.40455_114;
  if (D.40491_115 > 127)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:2585
  # PRED: 95 [50.0%]  (false,exec)
  D.40455_116 = map_14->rm_pt;
  D.40491_117 = (int) D.40455_116;
  D.40493_118 = already_did[D.40491_117];
  if (D.40493_118 != 0)
    goto <bb 97>;
  else
    goto <bb 98>;
  # SUCC: 97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

  # BLOCK 97 freq:3878
  # PRED: 95 [50.0%]  (true,exec) 96 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 109>;
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 98 freq:1293
  # PRED: 96 [50.0%]  (false,exec)
  D.40453_119 = map_14->rm_encoding;
  # DEBUG s => D.40453_119
  if (D.40453_119 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;
  # SUCC: 101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

  # BLOCK 99 freq:1099
  # PRED: 98 [85.0%]  (false,exec)
  D.47392_291 = *D.40453_119;
  if (D.47392_291 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;
  # SUCC: 101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

  # BLOCK 100 freq:549
  # PRED: 99 [50.0%]  (false,exec)
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 101 freq:1293
  # PRED: 98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
  # D.47391_292 = PHI <1(98), 1(99), 0(100)>
  if (D.47391_292 != 0)
    goto <bb 103>;
  else
    goto <bb 102>;
  # SUCC: 103 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

  # BLOCK 102 freq:646
  # PRED: 101 [50.0%]  (false,exec)
  D.40499_121 = smh_31->mparams;
  D.40500_122 = D.40499_121->ndlb;
  D.40501_123 = (int) D.40500_122;
  D.40502_124 = D.40501_123 & 1;
  if (D.40502_124 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;
  # SUCC: 103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 103 freq:970
  # PRED: 101 [50.0%]  (true,exec) 102 [50.0%]  (true,exec)
  D.40455_126 = map_14->rm_pt;
  D.40491_127 = (int) D.40455_126;
  if (D.40491_127 <= 95)
    goto <bb 104>;
  else
    goto <bb 105>;
  # SUCC: 104 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 104 freq:485
  # PRED: 103 [50.0%]  (true,exec)
  D.40455_128 = map_14->rm_pt;
  D.40491_129 = (int) D.40455_128;
  D.40518_130 = imp_106->ianacode;
  D.40521_131 = (int) D.40518_130;
  match_132 = D.40491_129 == D.40521_131;
  # DEBUG match => match_132
  goto <bb 107>;
  # SUCC: 107 [100.0%]  (fallthru,exec)

  # BLOCK 105 freq:808
  # PRED: 102 [50.0%]  (false,exec) 103 [50.0%]  (false,exec)
  D.40453_133 = map_14->rm_encoding;
  if (D.40453_133 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;
  # SUCC: 106 [85.0%]  (true,exec) 107 [15.0%]  (false,exec)

  # BLOCK 106 freq:687
  # PRED: 105 [85.0%]  (true,exec)
  D.40453_134 = map_14->rm_encoding;
  D.40534_135 = imp_106->iananame;
  D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
  match_137 = D.40535_136 == 0;
  # DEBUG match => match_137
  # SUCC: 107 [100.0%]  (fallthru,exec)

  # BLOCK 107 freq:1293
  # PRED: 104 [100.0%]  (fallthru,exec) 106 [100.0%]  (fallthru,exec) 105 [15.0%]  (false,exec)
  # match_17 = PHI <match_132(104), match_137(106), 0(105)>
  # DEBUG match => match_17
  if (match_17 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;
  # SUCC: 108 [4.5%]  (true,exec) 109 [95.5%]  (false,exec)

  # BLOCK 108 freq:58
  # PRED: 107 [4.5%]  (true,exec)
  add_audio_codec (map_14, ptime_8, &buf, 1024);
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:5113
  # PRED: 97 [100.0%]  (fallthru,exec) 107 [95.5%]  (false,exec)
  map_139 = map_14->rm_next;
  # DEBUG map => map_139
  # SUCC: 110 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 110 freq:5414
  # PRED: 94 [100.0%]  (fallthru,exec) 109 [100.0%]  (fallthru,dfs_back,exec)
  # map_14 = PHI <map_113(94), map_139(109)>
  # DEBUG map => map_14
  if (map_14 != 0B)
    goto <bb 95>;
  else
    goto <bb 111>;
  # SUCC: 95 [95.5%]  (true,exec) 111 [4.5%]  (false,exec)

  # BLOCK 111 freq:1654
  # PRED: 93 [100.0%]  (fallthru,exec) 108 [100.0%]  (fallthru,exec) 110 [4.5%]  (false,exec)
  i_140 = i_20 + 1;
  # DEBUG i => i_140
  # SUCC: 112 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 112 freq:1687
  # PRED: 69 [100.0%]  (fallthru) 111 [100.0%]  (fallthru,dfs_back,exec)
  # i_20 = PHI <i_310(69), i_140(111)>
  # DEBUG i => i_20
  if (i_20 < num_codecs_22)
    goto <bb 90>;
  else
    goto <bb 149>;
  # SUCC: 90 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

  # BLOCK 113 freq:838
  # PRED: 50 [72.0%]  (false,exec) 51 [50.0%]  (false,exec)
  D.40437_171 = m_2->m_type;
  if (D.40437_171 == 3)
    goto <bb 114>;
  else
    goto <bb 149>;
  # SUCC: 114 [28.0%]  (true,exec) 149 [72.0%]  (false,exec)

  # BLOCK 114 freq:235
  # PRED: 113 [28.0%]  (true,exec)
  D.40441_172 = m_2->m_port;
  if (D.40441_172 != 0)
    goto <bb 115>;
  else
    goto <bb 149>;
  # SUCC: 115 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

  # BLOCK 115 freq:117
  # PRED: 114 [50.0%]  (true,exec)
  connection_173 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_173
  D.40479_174 = m_2->m_connections;
  if (D.40479_174 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;
  # SUCC: 116 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

  # BLOCK 116 freq:100
  # PRED: 115 [85.0%]  (true,exec)
  connection_175 = m_2->m_connections;
  # DEBUG connection => connection_175
  # SUCC: 117 [100.0%]  (fallthru,exec)

  # BLOCK 117 freq:117
  # PRED: 115 [15.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
  # connection_11 = PHI <connection_173(115), connection_175(116)>
  # DEBUG connection => connection_11
  if (connection_11 == 0B)
    goto <bb 119>;
  else
    goto <bb 118>;
  # SUCC: 119 [3.0%]  (true,exec) 118 [97.0%]  (false,exec)

  # BLOCK 118 freq:114
  # PRED: 117 [97.0%]  (false,exec)
  # i_177 = PHI <0(117)>
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru)

  # BLOCK 119 freq:4
  # PRED: 117 [3.0%]  (true,exec)
  D.40547_176 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;
  # SUCC: 151 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:5689
  # PRED: 148 [98.0%]  (true,exec)
  imp_178 = codecs[i_21];
  # DEBUG imp => imp_178
  D.40550_179 = imp_178->codec_type;
  if (D.40550_179 != 1)
    goto <bb 123>;
  else
    goto <bb 121>;
  # SUCC: 123 [72.0%]  (true,exec) 121 [28.0%]  (false,exec)

  # BLOCK 121 freq:1593
  # PRED: 120 [28.0%]  (false,exec)
  D.40552_180 = imp_178->ianacode;
  D.40553_181 = (signed char) D.40552_180;
  if (D.40553_181 < 0)
    goto <bb 123>;
  else
    goto <bb 122>;
  # SUCC: 123 [27.0%]  (true,exec) 122 [73.0%]  (false,exec)

  # BLOCK 122 freq:1163
  # PRED: 121 [73.0%]  (false,exec)
  D.40552_182 = imp_178->ianacode;
  D.40555_183 = (int) D.40552_182;
  D.40556_184 = already_did[D.40555_183];
  if (D.40556_184 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;
  # SUCC: 123 [71.0%]  (true,exec) 124 [29.0%]  (false,exec)

  # BLOCK 123 freq:5352
  # PRED: 120 [72.0%]  (true,exec) 121 [27.0%]  (true,exec) 122 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 124 freq:337
  # PRED: 122 [29.0%]  (false,exec)
  D.40557_185 = session_28(D)->channel;
  D.40558_186 = switch_channel_direction (D.40557_185);
  if (D.40558_186 == 0)
    goto <bb 125>;
  else
    goto <bb 127>;
  # SUCC: 125 [29.0%]  (true,exec) 127 [71.0%]  (false,exec)

  # BLOCK 125 freq:98
  # PRED: 124 [29.0%]  (true,exec)
  D.40557_187 = session_28(D)->channel;
  D.40561_188 = switch_channel_test_flag (D.40557_187, 114);
  if (D.40561_188 != 0)
    goto <bb 126>;
  else
    goto <bb 127>;
  # SUCC: 126 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

  # BLOCK 126 freq:49
  # PRED: 125 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:288
  # PRED: 124 [71.0%]  (false,exec) 125 [50.0%]  (false,exec)
  map_189 = m_2->m_rtpmaps;
  # DEBUG map => map_189
  goto <bb 146>;
  # SUCC: 146 [100.0%]  (fallthru,exec)

  # BLOCK 128 freq:4940
  # PRED: 146 [95.5%]  (true,exec)
  D.40455_190 = map_15->rm_pt;
  D.40491_191 = (int) D.40455_190;
  if (D.40491_191 > 127)
    goto <bb 130>;
  else
    goto <bb 129>;
  # SUCC: 130 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

  # BLOCK 129 freq:2470
  # PRED: 128 [50.0%]  (false,exec)
  D.40455_192 = map_15->rm_pt;
  D.40491_193 = (int) D.40455_192;
  D.40493_194 = already_did[D.40491_193];
  if (D.40493_194 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;
  # SUCC: 130 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

  # BLOCK 130 freq:3705
  # PRED: 128 [50.0%]  (true,exec) 129 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 145>;
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:1235
  # PRED: 129 [50.0%]  (false,exec)
  D.40453_195 = map_15->rm_encoding;
  # DEBUG s => D.40453_195
  if (D.40453_195 == 0B)
    goto <bb 134>;
  else
    goto <bb 132>;
  # SUCC: 134 [15.0%]  (true,exec) 132 [85.0%]  (false,exec)

  # BLOCK 132 freq:1050
  # PRED: 131 [85.0%]  (false,exec)
  D.47396_293 = *D.40453_195;
  if (D.47396_293 == 0)
    goto <bb 134>;
  else
    goto <bb 133>;
  # SUCC: 134 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

  # BLOCK 133 freq:525
  # PRED: 132 [50.0%]  (false,exec)
  # SUCC: 134 [100.0%]  (fallthru,exec)

  # BLOCK 134 freq:1235
  # PRED: 131 [15.0%]  (true,exec) 132 [50.0%]  (true,exec) 133 [100.0%]  (fallthru,exec)
  # D.47395_294 = PHI <1(131), 1(132), 0(133)>
  if (D.47395_294 != 0)
    goto <bb 136>;
  else
    goto <bb 135>;
  # SUCC: 136 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

  # BLOCK 135 freq:617
  # PRED: 134 [50.0%]  (false,exec)
  D.40499_197 = smh_31->mparams;
  D.40500_198 = D.40499_197->ndlb;
  D.40501_199 = (int) D.40500_198;
  D.40502_200 = D.40501_199 & 1;
  if (D.40502_200 != 0)
    goto <bb 136>;
  else
    goto <bb 138>;
  # SUCC: 136 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

  # BLOCK 136 freq:926
  # PRED: 134 [50.0%]  (true,exec) 135 [50.0%]  (true,exec)
  D.40455_202 = map_15->rm_pt;
  D.40491_203 = (int) D.40455_202;
  if (D.40491_203 <= 95)
    goto <bb 137>;
  else
    goto <bb 138>;
  # SUCC: 137 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

  # BLOCK 137 freq:463
  # PRED: 136 [50.0%]  (true,exec)
  D.40455_204 = map_15->rm_pt;
  D.40491_205 = (int) D.40455_204;
  D.40552_206 = imp_178->ianacode;
  D.40555_207 = (int) D.40552_206;
  match_208 = D.40491_205 == D.40555_207;
  # DEBUG match => match_208
  goto <bb 140>;
  # SUCC: 140 [100.0%]  (fallthru,exec)

  # BLOCK 138 freq:772
  # PRED: 135 [50.0%]  (false,exec) 136 [50.0%]  (false,exec)
  D.40453_209 = map_15->rm_encoding;
  if (D.40453_209 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;
  # SUCC: 139 [85.0%]  (true,exec) 140 [15.0%]  (false,exec)

  # BLOCK 139 freq:656
  # PRED: 138 [85.0%]  (true,exec)
  D.40453_210 = map_15->rm_encoding;
  D.40575_211 = imp_178->iananame;
  D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
  match_213 = D.40576_212 == 0;
  # DEBUG match => match_213
  # SUCC: 140 [100.0%]  (fallthru,exec)

  # BLOCK 140 freq:1235
  # PRED: 137 [100.0%]  (fallthru,exec) 139 [100.0%]  (fallthru,exec) 138 [15.0%]  (false,exec)
  # match_18 = PHI <match_208(137), match_213(139), 0(138)>
  # DEBUG match => match_18
  if (match_18 != 0)
    goto <bb 141>;
  else
    goto <bb 145>;
  # SUCC: 141 [4.5%]  (true,exec) 145 [95.5%]  (false,exec)

  # BLOCK 141 freq:56
  # PRED: 140 [4.5%]  (true,exec)
  if (dptime_9 > 0)
    goto <bb 142>;
  else
    goto <bb 143>;
  # SUCC: 142 [73.0%]  (true,exec) 143 [27.0%]  (false,exec)

  # BLOCK 142 freq:41
  # PRED: 141 [73.0%]  (true,exec)
  D.40582_215 = strlen (&buf);
  D.40583_216 = &buf + D.40582_215;
  D.40584_217 = strlen (&buf);
  D.40585_218 = 1024 - D.40584_217;
  D.40575_219 = imp_178->iananame;
  D.40457_220 = map_15->rm_rate;
  switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);
  goto <bb 144>;
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 143 freq:15
  # PRED: 141 [27.0%]  (false,exec)
  D.40587_221 = strlen (&buf);
  D.40588_222 = &buf + D.40587_221;
  D.40589_223 = strlen (&buf);
  D.40590_224 = 1024 - D.40589_223;
  D.40575_225 = imp_178->iananame;
  D.40457_226 = map_15->rm_rate;
  switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 144 freq:56
  # PRED: 142 [100.0%]  (fallthru,exec) 143 [100.0%]  (fallthru,exec)
  D.40552_227 = imp_178->ianacode;
  D.40555_228 = (int) D.40552_227;
  already_did[D.40555_228] = 1;
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:4884
  # PRED: 130 [100.0%]  (fallthru,exec) 140 [95.5%]  (false,exec)
  map_229 = map_15->rm_next;
  # DEBUG map => map_229
  # SUCC: 146 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 146 freq:5172
  # PRED: 127 [100.0%]  (fallthru,exec) 145 [100.0%]  (fallthru,dfs_back,exec)
  # map_15 = PHI <map_189(127), map_229(145)>
  # DEBUG map => map_15
  if (map_15 != 0B)
    goto <bb 128>;
  else
    goto <bb 147>;
  # SUCC: 128 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

  # BLOCK 147 freq:5689
  # PRED: 123 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,exec) 146 [4.5%]  (false,exec)
  i_230 = i_21 + 1;
  # DEBUG i => i_230
  # SUCC: 148 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 148 freq:5803
  # PRED: 118 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
  # i_21 = PHI <i_177(118), i_230(147)>
  # DEBUG i => i_21
  if (i_21 < num_codecs_22)
    goto <bb 120>;
  else
    goto <bb 149>;
  # SUCC: 120 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

  # BLOCK 149 freq:1052
  # PRED: 49 [100.0%]  (fallthru,exec) 112 [2.0%]  (false,exec) 113 [72.0%]  (false,exec) 114 [50.0%]  (false,exec) 148 [2.0%]  (false,exec) 89 [9.0%]  (false,exec)
  m_231 = m_2->m_next;
  # DEBUG m => m_231
  # SUCC: 150 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 150 freq:1093
  # PRED: 46 [100.0%]  (fallthru,exec) 149 [100.0%]  (fallthru,dfs_back,exec)
  # m_2 = PHI <m_81(46), m_231(149)>
  # DEBUG m => m_2
  if (m_2 != 0B)
    goto <bb 47>;
  else
    goto <bb 151>;
  # SUCC: 47 [97.0%]  (true,exec) 151 [3.0%]  (false,exec)

  # BLOCK 151 freq:40
  # PRED: 66 [100.0%]  (fallthru,exec) 119 [100.0%]  (fallthru,exec) 150 [3.0%]  (false,exec)
  D.40591_232 = buf[0];
  if (D.40591_232 == 44)
    goto <bb 152>;
  else
    goto <bb 153>;
  # SUCC: 152 [19.9%]  (true,exec) 153 [80.1%]  (false,exec)

  # BLOCK 152 freq:8
  # PRED: 151 [19.9%]  (true,exec)
  switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);
  # SUCC: 153 [100.0%]  (fallthru,exec)

  # BLOCK 153 freq:84
  # PRED: 4 [21.6%]  (true,exec) 16 [39.0%]  (true,exec) 151 [80.1%]  (false,exec) 152 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_codec_string (switch_core_media_get_codec_string)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 11 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 14 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 5
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
Predictions for bb 8
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 9 predicted to even probabilities
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 12
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 15 predicted to even probabilities
1 edges in bb 16 predicted to even probabilities

;; Function switch_core_media_get_codec_string

;; 
17 basic blocks, 23 edges, last basic block 17.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  11 [30.2%]  (true,exec) 5 [69.8%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [69.8%]  (false,exec)
Successors:  6 [6.7%]  (true,exec) 7 [93.3%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [6.7%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [93.3%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [6.7%]  (true,exec)
Successors:  9 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [28.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [72.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  4 [30.2%]  (true,exec) 7 [93.3%]  (false,exec) 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
Successors:  14 [15.0%]  (true,exec) 12 [85.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [85.0%]  (false,exec)
Successors:  14 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  11 [15.0%]  (true,exec) 12 [50.0%]  (true,exec) 13 [100.0%]  (fallthru,exec)
Successors:  16 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [61.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [39.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_codec_string (struct switch_core_session_t * session)
{
  const char D.47402;
  int D.47401;
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_get_codec_string";
  struct switch_media_handle_t * smh;
  const char * fallback;
  const char * preferred;
  struct switch_core_media_params_t * D.46989;
  switch_call_direction_t D.46986;
  struct switch_channel_t * D.46981;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG preferred => 0B
  # DEBUG fallback => 0B
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 685, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;
  # SUCC: 11 [30.2%]  (true,exec) 5 [69.8%]  (false,exec)

  # BLOCK 5 freq:6980
  # PRED: 4 [69.8%]  (false,exec)
  D.46981_11 = session_7(D)->channel;
  preferred_12 = switch_channel_get_variable_dup (D.46981_11, "absolute_codec_string", 1, -1);
  # DEBUG preferred => preferred_12
  if (preferred_12 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [6.7%]  (true,exec) 7 [93.3%]  (false,exec)

  # BLOCK 6 freq:469
  # PRED: 5 [6.7%]  (true,exec)
  D.46981_13 = session_7(D)->channel;
  preferred_14 = switch_channel_get_variable_dup (D.46981_13, "codec_string", 1, -1);
  # DEBUG preferred => preferred_14
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:6980
  # PRED: 5 [93.3%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  # preferred_1 = PHI <preferred_12(5), preferred_14(6)>
  # DEBUG preferred => preferred_1
  if (preferred_1 == 0B)
    goto <bb 8>;
  else
    goto <bb 11>;
  # SUCC: 8 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

  # BLOCK 8 freq:469
  # PRED: 7 [6.7%]  (true,exec)
  D.46981_15 = session_7(D)->channel;
  D.46986_16 = switch_channel_direction (D.46981_15);
  if (D.46986_16 == 1)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [28.0%]  (true,exec) 10 [72.0%]  (false,exec)

  # BLOCK 9 freq:131
  # PRED: 8 [28.0%]  (true,exec)
  D.46989_17 = smh_8->mparams;
  preferred_18 = D.46989_17->outbound_codec_string;
  # DEBUG preferred => preferred_18
  D.46989_19 = smh_8->mparams;
  fallback_20 = D.46989_19->inbound_codec_string;
  # DEBUG fallback => fallback_20
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:338
  # PRED: 8 [72.0%]  (false,exec)
  D.46989_21 = smh_8->mparams;
  preferred_22 = D.46989_21->inbound_codec_string;
  # DEBUG preferred => preferred_22
  D.46989_23 = smh_8->mparams;
  fallback_24 = D.46989_23->outbound_codec_string;
  # DEBUG fallback => fallback_24
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:9996
  # PRED: 4 [30.2%]  (true,exec) 7 [93.3%]  (false,exec) 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
  # preferred_2 = PHI <"PCMU"(4), preferred_1(7), preferred_18(9), preferred_22(10)>
  # fallback_3 = PHI <"PCMU"(4), 0B(7), fallback_20(9), fallback_24(10)>
  # DEBUG fallback => fallback_3
  # DEBUG preferred => preferred_2
  # DEBUG s => preferred_2
  if (preferred_2 == 0B)
    goto <bb 14>;
  else
    goto <bb 12>;
  # SUCC: 14 [15.0%]  (true,exec) 12 [85.0%]  (false,exec)

  # BLOCK 12 freq:8497
  # PRED: 11 [85.0%]  (false,exec)
  D.47402_35 = *preferred_2;
  if (D.47402_35 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;
  # SUCC: 14 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

  # BLOCK 13 freq:4248
  # PRED: 12 [50.0%]  (false,exec)
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:9996
  # PRED: 11 [15.0%]  (true,exec) 12 [50.0%]  (true,exec) 13 [100.0%]  (fallthru,exec)
  # D.47401_36 = PHI <1(11), 1(12), 0(13)>
  if (D.47401_36 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;
  # SUCC: 16 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

  # BLOCK 15 freq:6098
  # PRED: 14 [61.0%]  (false,exec)
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:9996
  # PRED: 14 [39.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
  # preferred_4 = PHI <preferred_2(14), fallback_3(15)>
  return preferred_4;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_clear_crypto (switch_core_session_clear_crypto)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 9 6 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 7 9 }
;; 9 succs { 1 }
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <i_13(6), i_19(7)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <i_13(6), i_19(7)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <0(2), i_8(3)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <0(2), i_8(3)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 2)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46966_4 = vars[i_1];
 in loop 1.
Statement D.46966_4 = vars[i_1];
 is executed at most 10 (bounded by 10) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 2)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46966_7 = vars[i_1];
 in loop 1.
Statement D.46966_7 = vars[i_1];
 is executed at most 10 (bounded by 10) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_8)
(get_scalar_evolution 
  (scalar = i_8)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_8)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 2)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_8 = i_1 + 1;
 in loop 1.
Statement i_8 = i_1 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
1 edges in bb 2 predicted to even probabilities
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics (ignored): 95.9%
  first match heuristics: 90.9%
  combined heuristics: 90.9%
  pointer (on trees) heuristics (ignored): 85.0%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 90.9%
Predictions for bb 5
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 78.6%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  call heuristics (ignored): 29.0%
  loop iterations heuristics: 90.0%
1 edges in bb 9 predicted to even probabilities

;; Function switch_core_session_clear_crypto

;; 
10 basic blocks, 12 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  4 [90.9%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,dfs_back,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
Successors:  3 [90.9%]  (true,exec) 5 [9.1%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [9.1%]  (false,exec)
Successors:  9 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [89.9%]  (false,exec)
Successors:  8 [100.0%]  (fallthru)

Basic block 7 (new, reachable)
Predecessors:  8 [90.0%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,dfs_back,exec)

Basic block 8 (new)
Predecessors:  6 [100.0%]  (fallthru) 7 [100.0%]  (fallthru,dfs_back,exec)
Successors:  7 [90.0%]  (true,exec) 9 [10.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  5 [10.1%]  (true,exec) 8 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_session_clear_crypto (struct switch_core_session_t * session)
{
  const char * vars[11];
  struct switch_media_handle_t * smh;
  int i;
  void * D.46974;
  void * D.46972;
  unsigned int i.167;
  const char * D.46966;
  struct switch_channel_t * D.46965;

  # BLOCK 2 freq:909
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  vars = *.LC10;
  # DEBUG i => 0
  goto <bb 4>;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:9091
  # PRED: 4 [90.9%]  (true,exec)
  D.46965_6 = session_5(D)->channel;
  D.46966_7 = vars[i_1];
  switch_channel_set_variable_var_check (D.46965_6, D.46966_7, 0B, 1);
  i_8 = i_1 + 1;
  # DEBUG i => i_8
  # SUCC: 4 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <0(2), i_8(3)>
  # DEBUG i => i_1
  D.46966_4 = vars[i_1];
  if (D.46966_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 [90.9%]  (true,exec) 5 [9.1%]  (false,exec)

  # BLOCK 5 freq:909
  # PRED: 4 [9.1%]  (false,exec)
  smh_9 = session_5(D)->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 9>;
  else
    goto <bb 6>;
  # SUCC: 9 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

  # BLOCK 6 freq:817
  # PRED: 5 [89.9%]  (false,exec)
  # i_13 = PHI <0(5)>
  goto <bb 8>;
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 7 freq:7351
  # PRED: 8 [90.0%]  (true,exec)
  i.167_12 = (unsigned int) i_2;
  D.46972_14 = &smh_9->engines[0].ssec[i.167_12]{lb: 0 sz: 144};
  memset (D.46972_14, 0, 144);
  i.167_16 = (unsigned int) i_2;
  D.46974_18 = &smh_9->engines[1].ssec[i.167_16]{lb: 0 sz: 144};
  memset (D.46974_18, 0, 144);
  i_19 = i_2 + 1;
  # DEBUG i => i_19
  # SUCC: 8 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 8 freq:8168
  # PRED: 6 [100.0%]  (fallthru) 7 [100.0%]  (fallthru,dfs_back,exec)
  # i_2 = PHI <i_13(6), i_19(7)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [90.0%]  (true,exec) 9 [10.0%]  (false,exec)

  # BLOCK 9 freq:909
  # PRED: 5 [10.1%]  (true,exec) 8 [10.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_local_crypto_key (switch_core_session_local_crypto_key)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 1.9%
  first match heuristics (ignored): 15.0%
  combined heuristics: 1.9%
  pointer (on trees) heuristics: 15.0%
  null return heuristics: 10.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_session_local_crypto_key

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [1.9%]  (true,exec) 3 [98.1%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [98.1%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [1.9%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_local_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  switch_rtp_crypto_key_type_t D.46952;
  const char * D.46951;
  struct switch_media_handle_t * D.46948;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46948_3 = session_2(D)->media_handle;
  if (D.46948_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [1.9%]  (true,exec) 3 [98.1%]  (false,exec)

  # BLOCK 3 freq:9808
  # PRED: 2 [98.1%]  (false,exec)
  D.46948_6 = session_2(D)->media_handle;
  D.46952_8 = D.46948_6->engines[type_7(D)].crypto_type;
  D.46951_9 = D.46948_6->engines[type_7(D)].ssec[D.46952_8].local_crypto_key;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [1.9%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  # D.46951_1 = PHI <0B(2), D.46951_9(3)>
  return D.46951_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_parse_rtp_bugs (switch_core_media_parse_rtp_bugs)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
Predictions for bb 2
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 39 predicted to even probabilities
Predictions for bb 40
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 41 predicted to even probabilities
Predictions for bb 42
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 45 predicted to even probabilities
Predictions for bb 46
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 49 predicted to even probabilities
Predictions for bb 50
  DS theory heuristics: 89.9%
  first match heuristics (ignored): 85.0%
  combined heuristics: 89.9%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 51 predicted to even probabilities
1 edges in bb 52 predicted to even probabilities

;; Function switch_core_media_parse_rtp_bugs

;; 
53 basic blocks, 77 edges, last basic block 53.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 4 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  5 [85.0%]  (true,exec) 6 [15.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [85.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [15.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [85.0%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [15.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [15.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  15 [85.0%]  (true,exec) 16 [15.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [85.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [15.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [85.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [15.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
Successors:  19 [85.0%]  (true,exec) 20 [15.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [85.0%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [15.0%]  (false,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [85.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [15.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [85.0%]  (true,exec) 24 [15.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [85.0%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [15.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  25 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [85.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [15.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [85.0%]  (true,exec) 28 [15.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [85.0%]  (true,exec)
Successors:  28 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [15.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  29 [85.0%]  (true,exec) 30 [15.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [85.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  28 [15.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
Successors:  31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [85.0%]  (true,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [15.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
Successors:  33 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [85.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [15.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [85.0%]  (true,exec) 36 [15.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [85.0%]  (true,exec)
Successors:  36 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  34 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec)
Successors:  37 [85.0%]  (true,exec) 38 [15.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [85.0%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  36 [15.0%]  (false,exec) 37 [100.0%]  (fallthru,exec)
Successors:  39 [85.0%]  (true,exec) 40 [15.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [85.0%]  (true,exec)
Successors:  40 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  38 [15.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
Successors:  41 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [85.0%]  (true,exec)
Successors:  42 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  40 [15.0%]  (false,exec) 41 [100.0%]  (fallthru,exec)
Successors:  43 [85.0%]  (true,exec) 44 [15.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [85.0%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  42 [15.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
Successors:  45 [85.0%]  (true,exec) 46 [15.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [85.0%]  (true,exec)
Successors:  46 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  44 [15.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
Successors:  47 [85.0%]  (true,exec) 48 [15.0%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [85.0%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  46 [15.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [85.0%]  (true,exec) 50 [15.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [85.0%]  (true,exec)
Successors:  50 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  48 [15.0%]  (false,exec) 49 [100.0%]  (fallthru,exec)
Successors:  51 [89.9%]  (true,exec) 52 [10.1%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [89.9%]  (true,exec)
Successors:  52 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  50 [10.1%]  (false,exec) 51 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_parse_rtp_bugs (switch_rtp_bug_flag_t * flag_pole, const char * str)
{
  unsigned int D.46947;
  const char * D.46944;
  unsigned int D.46943;
  const char * D.46940;
  unsigned int D.46939;
  const char * D.46936;
  unsigned int D.46935;
  const char * D.46932;
  unsigned int D.46931;
  const char * D.46928;
  unsigned int D.46927;
  const char * D.46924;
  unsigned int D.46923;
  const char * D.46920;
  unsigned int D.46919;
  const char * D.46916;
  unsigned int D.46915;
  const char * D.46912;
  unsigned int D.46911;
  const char * D.46908;
  unsigned int D.46907;
  const char * D.46904;
  unsigned int D.46903;
  const char * D.46900;
  unsigned int D.46899;
  const char * D.46896;
  unsigned int D.46895;
  const char * D.46892;
  unsigned int D.46891;
  const char * D.46888;
  unsigned int D.46887;
  const char * D.46884;
  unsigned int D.46883;
  const char * D.46880;
  unsigned int D.46879;
  const char * D.46876;
  unsigned int D.46875;
  const char * D.46872;
  unsigned int D.46871;
  const char * D.46868;
  unsigned int D.46867;
  const char * D.46864;
  unsigned int D.46863;
  const char * D.46860;
  unsigned int D.46859;
  const char * D.46856;
  unsigned int D.46855;
  switch_rtp_bug_flag_t D.46854;
  const char * D.46851;
  const char * D.46848;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46848_2 = switch_stristr ("clear", str_1(D));
  if (D.46848_2 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [85.0%]  (true,exec) 4 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  *flag_pole_3(D) = 0;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [15.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  D.46851_4 = switch_stristr ("CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46851_4 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [85.0%]  (true,exec) 6 [15.0%]  (false,exec)

  # BLOCK 5 freq:8500
  # PRED: 4 [85.0%]  (true,exec)
  D.46854_5 = *flag_pole_3(D);
  D.46855_6 = D.46854_5 | 1;
  *flag_pole_3(D) = D.46855_6;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:10000
  # PRED: 4 [15.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
  D.46856_7 = switch_stristr ("~CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46856_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

  # BLOCK 7 freq:8500
  # PRED: 6 [85.0%]  (true,exec)
  D.46854_8 = *flag_pole_3(D);
  D.46859_9 = D.46854_8 & 4294967294;
  *flag_pole_3(D) = D.46859_9;
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:10000
  # PRED: 6 [15.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  D.46860_10 = switch_stristr ("SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46860_10 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 9 freq:8500
  # PRED: 8 [85.0%]  (true,exec)
  D.46854_11 = *flag_pole_3(D);
  D.46863_12 = D.46854_11 | 2;
  *flag_pole_3(D) = D.46863_12;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:10000
  # PRED: 8 [15.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
  D.46864_13 = switch_stristr ("~SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46864_13 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:8500
  # PRED: 10 [85.0%]  (true,exec)
  D.46854_14 = *flag_pole_3(D);
  D.46867_15 = D.46854_14 & 4294967293;
  *flag_pole_3(D) = D.46867_15;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:10000
  # PRED: 10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  D.46868_16 = switch_stristr ("IGNORE_MARK_BIT", str_1(D));
  if (D.46868_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:8500
  # PRED: 12 [85.0%]  (true,exec)
  D.46854_17 = *flag_pole_3(D);
  D.46871_18 = D.46854_17 | 4;
  *flag_pole_3(D) = D.46871_18;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:10000
  # PRED: 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  D.46872_19 = switch_stristr ("~IGNORE_MARK_BIT", str_1(D));
  if (D.46872_19 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [85.0%]  (true,exec) 16 [15.0%]  (false,exec)

  # BLOCK 15 freq:8500
  # PRED: 14 [85.0%]  (true,exec)
  D.46854_20 = *flag_pole_3(D);
  D.46875_21 = D.46854_20 & 4294967291;
  *flag_pole_3(D) = D.46875_21;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:10000
  # PRED: 14 [15.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  D.46876_22 = switch_stristr ("SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46876_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 17 freq:8500
  # PRED: 16 [85.0%]  (true,exec)
  D.46854_23 = *flag_pole_3(D);
  D.46879_24 = D.46854_23 | 8;
  *flag_pole_3(D) = D.46879_24;
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:10000
  # PRED: 16 [15.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
  D.46880_25 = switch_stristr ("~SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46880_25 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [85.0%]  (true,exec) 20 [15.0%]  (false,exec)

  # BLOCK 19 freq:8500
  # PRED: 18 [85.0%]  (true,exec)
  D.46854_26 = *flag_pole_3(D);
  D.46883_27 = D.46854_26 & 4294967287;
  *flag_pole_3(D) = D.46883_27;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:10000
  # PRED: 18 [15.0%]  (false,exec) 19 [100.0%]  (fallthru,exec)
  D.46884_28 = switch_stristr ("START_SEQ_AT_ZERO", str_1(D));
  if (D.46884_28 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

  # BLOCK 21 freq:8500
  # PRED: 20 [85.0%]  (true,exec)
  D.46854_29 = *flag_pole_3(D);
  D.46887_30 = D.46854_29 | 16;
  *flag_pole_3(D) = D.46887_30;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:10000
  # PRED: 20 [15.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  D.46888_31 = switch_stristr ("~START_SEQ_AT_ZERO", str_1(D));
  if (D.46888_31 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [85.0%]  (true,exec) 24 [15.0%]  (false,exec)

  # BLOCK 23 freq:8500
  # PRED: 22 [85.0%]  (true,exec)
  D.46854_32 = *flag_pole_3(D);
  D.46891_33 = D.46854_32 & 4294967279;
  *flag_pole_3(D) = D.46891_33;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:10000
  # PRED: 22 [15.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  D.46892_34 = switch_stristr ("NEVER_SEND_MARKER", str_1(D));
  if (D.46892_34 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

  # BLOCK 25 freq:8500
  # PRED: 24 [85.0%]  (true,exec)
  D.46854_35 = *flag_pole_3(D);
  D.46895_36 = D.46854_35 | 32;
  *flag_pole_3(D) = D.46895_36;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:10000
  # PRED: 24 [15.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
  D.46896_37 = switch_stristr ("~NEVER_SEND_MARKER", str_1(D));
  if (D.46896_37 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [85.0%]  (true,exec) 28 [15.0%]  (false,exec)

  # BLOCK 27 freq:8500
  # PRED: 26 [85.0%]  (true,exec)
  D.46854_38 = *flag_pole_3(D);
  D.46899_39 = D.46854_38 & 4294967263;
  *flag_pole_3(D) = D.46899_39;
  # SUCC: 28 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:10000
  # PRED: 26 [15.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  D.46900_40 = switch_stristr ("IGNORE_DTMF_DURATION", str_1(D));
  if (D.46900_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [85.0%]  (true,exec) 30 [15.0%]  (false,exec)

  # BLOCK 29 freq:8500
  # PRED: 28 [85.0%]  (true,exec)
  D.46854_41 = *flag_pole_3(D);
  D.46903_42 = D.46854_41 | 64;
  *flag_pole_3(D) = D.46903_42;
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:10000
  # PRED: 28 [15.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
  D.46904_43 = switch_stristr ("~IGNORE_DTMF_DURATION", str_1(D));
  if (D.46904_43 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

  # BLOCK 31 freq:8500
  # PRED: 30 [85.0%]  (true,exec)
  D.46854_44 = *flag_pole_3(D);
  D.46907_45 = D.46854_44 & 4294967231;
  *flag_pole_3(D) = D.46907_45;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:10000
  # PRED: 30 [15.0%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  D.46908_46 = switch_stristr ("ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46908_46 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 33 freq:8500
  # PRED: 32 [85.0%]  (true,exec)
  D.46854_47 = *flag_pole_3(D);
  D.46911_48 = D.46854_47 | 128;
  *flag_pole_3(D) = D.46911_48;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:10000
  # PRED: 32 [15.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  D.46912_49 = switch_stristr ("~ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46912_49 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [85.0%]  (true,exec) 36 [15.0%]  (false,exec)

  # BLOCK 35 freq:8500
  # PRED: 34 [85.0%]  (true,exec)
  D.46854_50 = *flag_pole_3(D);
  D.46915_51 = D.46854_50 & 4294967167;
  *flag_pole_3(D) = D.46915_51;
  # SUCC: 36 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:10000
  # PRED: 34 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec)
  D.46916_52 = switch_stristr ("ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46916_52 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 [85.0%]  (true,exec) 38 [15.0%]  (false,exec)

  # BLOCK 37 freq:8500
  # PRED: 36 [85.0%]  (true,exec)
  D.46854_53 = *flag_pole_3(D);
  D.46919_54 = D.46854_53 | 2048;
  *flag_pole_3(D) = D.46919_54;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:10000
  # PRED: 36 [15.0%]  (false,exec) 37 [100.0%]  (fallthru,exec)
  D.46920_55 = switch_stristr ("~ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46920_55 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 [85.0%]  (true,exec) 40 [15.0%]  (false,exec)

  # BLOCK 39 freq:8500
  # PRED: 38 [85.0%]  (true,exec)
  D.46854_56 = *flag_pole_3(D);
  D.46923_57 = D.46854_56 & 4294965247;
  *flag_pole_3(D) = D.46923_57;
  # SUCC: 40 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:10000
  # PRED: 38 [15.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
  D.46924_58 = switch_stristr ("GEN_ONE_GEN_ALL", str_1(D));
  if (D.46924_58 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

  # BLOCK 41 freq:8500
  # PRED: 40 [85.0%]  (true,exec)
  D.46854_59 = *flag_pole_3(D);
  D.46927_60 = D.46854_59 | 256;
  *flag_pole_3(D) = D.46927_60;
  # SUCC: 42 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:10000
  # PRED: 40 [15.0%]  (false,exec) 41 [100.0%]  (fallthru,exec)
  D.46928_61 = switch_stristr ("~GEN_ONE_GEN_ALL", str_1(D));
  if (D.46928_61 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [85.0%]  (true,exec) 44 [15.0%]  (false,exec)

  # BLOCK 43 freq:8500
  # PRED: 42 [85.0%]  (true,exec)
  D.46854_62 = *flag_pole_3(D);
  D.46931_63 = D.46854_62 & 4294967039;
  *flag_pole_3(D) = D.46931_63;
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:10000
  # PRED: 42 [15.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.46932_64 = switch_stristr ("CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46932_64 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [85.0%]  (true,exec) 46 [15.0%]  (false,exec)

  # BLOCK 45 freq:8500
  # PRED: 44 [85.0%]  (true,exec)
  D.46854_65 = *flag_pole_3(D);
  D.46935_66 = D.46854_65 | 512;
  *flag_pole_3(D) = D.46935_66;
  # SUCC: 46 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:10000
  # PRED: 44 [15.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
  D.46936_67 = switch_stristr ("~CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46936_67 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 [85.0%]  (true,exec) 48 [15.0%]  (false,exec)

  # BLOCK 47 freq:8500
  # PRED: 46 [85.0%]  (true,exec)
  D.46854_68 = *flag_pole_3(D);
  D.46939_69 = D.46854_68 & 4294966783;
  *flag_pole_3(D) = D.46939_69;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:10000
  # PRED: 46 [15.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  D.46940_70 = switch_stristr ("FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46940_70 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [85.0%]  (true,exec) 50 [15.0%]  (false,exec)

  # BLOCK 49 freq:8500
  # PRED: 48 [85.0%]  (true,exec)
  D.46854_71 = *flag_pole_3(D);
  D.46943_72 = D.46854_71 | 1024;
  *flag_pole_3(D) = D.46943_72;
  # SUCC: 50 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:10000
  # PRED: 48 [15.0%]  (false,exec) 49 [100.0%]  (fallthru,exec)
  D.46944_73 = switch_stristr ("~FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46944_73 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [89.9%]  (true,exec) 52 [10.1%]  (false,exec)

  # BLOCK 51 freq:8986
  # PRED: 50 [89.9%]  (true,exec)
  D.46854_74 = *flag_pole_3(D);
  D.46947_75 = D.46854_74 & 4294966271;
  *flag_pole_3(D) = D.46947_75;
  # SUCC: 52 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:10000
  # PRED: 50 [10.1%]  (false,exec) 51 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_add_crypto (switch_core_media_add_crypto)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 15 }
;; 3 succs { 4 15 }
;; 4 succs { 5 15 }
;; 5 succs { 6 7 }
;; 6 succs { 15 }
;; 7 succs { 8 15 }
;; 8 succs { 9 15 }
;; 9 succs { 10 15 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
Predictions for bb 2
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 4
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 5
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 10
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  early return (on trees) heuristics: 61.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 13 predicted to even probabilities
1 edges in bb 14 predicted to even probabilities
1 edges in bb 15 predicted to even probabilities
1 edges in bb 16 predicted to even probabilities

;; Function switch_core_media_add_crypto

;; 
17 basic blocks, 25 edges, last basic block 17.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [93.3%]  (true,exec)
Successors:  4 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec)
Successors:  5 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [29.0%]  (true,exec)
Successors:  6 [13.7%]  (true,exec) 7 [86.3%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [13.7%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [86.3%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  2 [6.7%]  (false,exec) 3 [50.0%]  (false,exec) 4 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_add_crypto (struct switch_secure_settings_t * ssec, const char * key_str, switch_rtp_crypto_direction_t direction)
{
  static const char __func__[29] = "switch_core_media_add_crypto";
  char * p;
  switch_rtp_crypto_key_type_t type;
  unsigned char key[64];
  switch_status_t D.46846;
  void * restrict D.46845;
  unsigned char * D.46844;
  size_t D.46842;
  int D.46841;
  void * restrict D.46839;
  unsigned char * D.46838;
  int D.46833;
  char D.46822;
  char D.46818;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  p_3 = __builtin_strchr (key_str_2(D), 32);
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 15> (bad);
  # SUCC: 3 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

  # BLOCK 3 freq:9328
  # PRED: 2 [93.3%]  (true,exec)
  D.46818_4 = *p_3;
  if (D.46818_4 != 0)
    goto <bb 4>;
  else
    goto <bb 15> (bad);
  # SUCC: 4 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 4 freq:4664
  # PRED: 3 [50.0%]  (true,exec)
  D.46822_6 = MEM[(char *)p_3 + 1B];
  if (D.46822_6 != 0)
    goto <bb 5>;
  else
    goto <bb 15> (bad);
  # SUCC: 5 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

  # BLOCK 5 freq:1353
  # PRED: 4 [29.0%]  (true,exec)
  p_7 = p_3 + 1;
  # DEBUG p => p_7
  type_8 = switch_core_media_crypto_str2type (p_7);
  # DEBUG type => type_8
  if (type_8 == 9)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [13.7%]  (true,exec) 7 [86.3%]  (false,exec)

  # BLOCK 6 freq:185
  # PRED: 5 [13.7%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);
  goto <bb 15> (bad);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:1167
  # PRED: 5 [86.3%]  (false,exec)
  p_9 = __builtin_strchr (p_7, 32);
  # DEBUG p => p_9
  if (p_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 15> (bad);
  # SUCC: 8 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

  # BLOCK 8 freq:992
  # PRED: 7 [85.0%]  (true,exec)
  D.46818_10 = *p_9;
  if (D.46818_10 != 0)
    goto <bb 9>;
  else
    goto <bb 15> (bad);
  # SUCC: 9 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 9 freq:496
  # PRED: 8 [50.0%]  (true,exec)
  D.46822_12 = MEM[(char *)p_9 + 1B];
  if (D.46822_12 != 0)
    goto <bb 10>;
  else
    goto <bb 15> (bad);
  # SUCC: 10 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 10 freq:248
  # PRED: 9 [50.0%]  (true,exec)
  p_13 = p_9 + 1;
  # DEBUG p => p_13
  D.46833_14 = strncasecmp (p_13, "inline:", 7);
  if (D.46833_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 11 freq:124
  # PRED: 10 [50.0%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);
  goto <bb 15> (bad);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:124
  # PRED: 10 [50.0%]  (false,exec)
  p_15 = &MEM[(void *)p_9 + 8B];
  # DEBUG p => p_15
  switch_b64_decode (p_15, &key, 64);
  if (direction_16(D) == 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:62
  # PRED: 12 [50.0%]  (true,exec)
  D.46838_18 = &ssec_17(D)->local_raw_key[0];
  D.46839_19 = (void * restrict) D.46838_18;
  D.46841_21 = SUITES[type_8].keylen;
  D.46842_22 = (size_t) D.46841_21;
  memcpy (D.46839_19, &key[0], D.46842_22);
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:62
  # PRED: 12 [50.0%]  (false,exec)
  D.46844_23 = &ssec_17(D)->remote_raw_key[0];
  D.46845_24 = (void * restrict) D.46844_23;
  D.46841_26 = SUITES[type_8].keylen;
  D.46842_27 = (size_t) D.46841_26;
  memcpy (D.46845_24, &key[0], D.46842_27);
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:9876
  # PRED: 2 [6.7%]  (false,exec) 3 [50.0%]  (false,exec) 4 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
bad:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:10000
  # PRED: 14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec)
  # D.46846_1 = PHI <0(14), 1(15), 0(13)>
  return D.46846_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_apply_crypto (switch_core_session_apply_crypto)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 9 5 }
;; 5 succs { 9 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
Predictions for bb 2
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities

;; Function switch_core_session_apply_crypto

;; 
10 basic blocks, 14 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [50.0%]  (true,exec) 3 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  9 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  7 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [78.3%]  (true,exec)
Successors:  8 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [39.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [39.0%]  (true,exec) 6 [21.6%]  (false,exec) 7 [61.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_apply_crypto (struct switch_core_session_t * session, switch_media_type_t type)
{
  const char * varname;
  struct switch_rtp_engine_t * engine;
  char * D.43903;
  unsigned char[64] * D.43902;
  uint32_t D.43901;
  int D.43900;
  switch_size_t D.43899;
  int D.43898;
  unsigned char[64] * D.43897;
  switch_rtp_crypto_key_type_t D.43896;
  struct switch_rtp_t * D.43895;
  struct switch_secure_settings_t * D.43894;
  uint32_t D.43889;
  char * D.43886;
  switch_rtp_crypto_key_type_t D.43885;
  uint32_t D.43882;
  struct switch_channel_t * D.43881;
  struct switch_media_handle_t * D.43876;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (type_2(D) == 0)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [50.0%]  (true,exec) 3 [50.0%]  (false,exec)

  # BLOCK 3 freq:5000
  # PRED: 2 [50.0%]  (false,exec)
  # DEBUG varname => "rtp_secure_video_confirmed"
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [50.0%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  # varname_1 = PHI <"rtp_secure_audio_confirmed"(2), "rtp_secure_video_confirmed"(3)>
  # DEBUG varname => varname_1
  D.43876_6 = session_5(D)->media_handle;
  if (D.43876_6 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;
  # SUCC: 9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7836
  # PRED: 4 [78.4%]  (false,exec)
  D.43876_7 = session_5(D)->media_handle;
  engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  D.43881_11 = session_5(D)->channel;
  D.43882_12 = switch_channel_test_flag (D.43881_11, 84);
  if (D.43882_12 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;
  # SUCC: 9 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:4780
  # PRED: 5 [61.0%]  (false,exec)
  D.43885_13 = engine_10->crypto_type;
  D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
  if (D.43886_14 != 0B)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

  # BLOCK 7 freq:3745
  # PRED: 6 [78.3%]  (true,exec)
  D.43881_15 = session_5(D)->channel;
  D.43889_16 = switch_channel_test_flag (D.43881_15, 92);
  if (D.43889_16 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 8 freq:1460
  # PRED: 7 [39.0%]  (true,exec)
  D.43885_18 = engine_10->crypto_type;
  D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};
  D.43885_21 = engine_10->crypto_type;
  D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
  switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);
  D.43895_23 = engine_10->rtp_session;
  D.43885_26 = engine_10->crypto_type;
  D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
  D.43885_28 = engine_10->crypto_type;
  D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
  D.43898_30 = SUITES[D.43896_29].keylen;
  D.43899_31 = (switch_size_t) D.43898_30;
  switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);
  D.43895_32 = engine_10->rtp_session;
  D.43885_33 = engine_10->crypto_type;
  D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
  D.43901_35 = (uint32_t) D.43900_34;
  D.43885_38 = engine_10->crypto_type;
  D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
  D.43885_40 = engine_10->crypto_type;
  D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
  D.43898_42 = SUITES[D.43896_41].keylen;
  D.43899_43 = (switch_size_t) D.43898_42;
  switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);
  D.43881_44 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);
  D.43881_45 = session_5(D)->channel;
  D.43885_46 = engine_10->crypto_type;
  D.43903_47 = SUITES[D.43885_46].name;
  switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:10000
  # PRED: 4 [21.6%]  (true,exec) 5 [39.0%]  (true,exec) 6 [21.6%]  (false,exec) 7 [61.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_rtp_session (switch_core_media_set_rtp_session)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_media_set_rtp_session

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_rtp_session (struct switch_core_session_t * session, switch_media_type_t type, struct switch_rtp_t * rtp_session)
{
  struct switch_rtp_engine_t * engine;
  unsigned int D.46814;
  struct switch_media_handle_t * D.46810;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46810_2 = session_1(D)->media_handle;
  if (D.46810_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.46810_3 = session_1(D)->media_handle;
  engine_7 = &D.46810_3->engines[type_5(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_7
  engine_7->rtp_session = rtp_session_8(D);
  engine_7->type = type_5(D);
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_check_incoming_crypto (switch_core_session_check_incoming_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
;; 2 succs { 42 3 }
;; 3 succs { 42 4 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 29 }
;; 10 succs { 11 29 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 41 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 41 }
;; 18 succs { 19 }
;; 19 succs { 20 28 }
;; 20 succs { 21 28 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 41 }
;; 26 succs { 27 41 }
;; 27 succs { 41 }
;; 28 succs { 41 }
;; 29 succs { 30 41 }
;; 30 succs { 31 32 }
;; 31 succs { 41 }
;; 32 succs { 33 34 }
;; 33 succs { 36 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 39 38 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 }
;; 42 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 1.6%
  first match heuristics (ignored): 28.0%
  combined heuristics: 1.6%
  opcode values nonequal (on trees) heuristics: 28.0%
  negative return heuristics: 4.0%
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  DS theory heuristics (ignored): 9.8%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  pointer (on trees) heuristics (ignored): 85.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 95.7%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  opcode values nonequal (on trees) heuristics (ignored): 72.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 95.5%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 11
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 12
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 13
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 16
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 17 predicted to even probabilities
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 21
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 26
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 27 predicted to even probabilities
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 30
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 37
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 40 predicted to even probabilities
1 edges in bb 41 predicted to even probabilities
1 edges in bb 42 predicted to even probabilities

;; Function switch_core_session_check_incoming_crypto

;; 
43 basic blocks, 66 edges, last basic block 43.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  42 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  42 [1.6%]  (true,exec) 4 [98.4%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [98.4%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  8 [95.5%]  (true,exec)
Successors:  6 [4.5%]  (true,exec) 7 [95.5%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [4.5%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [95.5%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,dfs_back,exec)

Basic block 8 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 7 [100.0%]  (fallthru,dfs_back,exec)
Successors:  5 [95.5%]  (true,exec) 9 [4.5%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 8 [4.5%]  (false,exec)
Successors:  10 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec)
Successors:  12 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [93.3%]  (true,exec)
Successors:  13 [72.0%]  (true,exec) 15 [28.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [72.0%]  (true,exec)
Successors:  14 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [6.7%]  (false,exec) 12 [28.0%]  (false,exec) 13 [71.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec)
Successors:  17 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [15.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [85.0%]  (false,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [71.0%]  (true,exec)
Successors:  21 [29.0%]  (true,exec) 28 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [71.0%]  (false,exec)
Successors:  24 [13.7%]  (true,exec) 25 [86.3%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [13.7%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 23 [86.3%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [29.0%]  (true,exec)
Successors:  27 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  19 [29.0%]  (false,exec) 20 [71.0%]  (false,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  9 [15.0%]  (false,exec) 10 [50.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 41 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec)
Successors:  31 [15.0%]  (true,exec) 32 [85.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [15.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [85.0%]  (false,exec)
Successors:  33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [29.0%]  (true,exec)
Successors:  36 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [71.0%]  (false,exec)
Successors:  35 [13.7%]  (true,exec) 36 [86.3%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [13.7%]  (true,exec)
Successors:  36 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  33 [100.0%]  (fallthru,exec) 34 [86.3%]  (false,exec) 35 [100.0%]  (fallthru,exec)
Successors:  39 [15.0%]  (true,exec) 37 [85.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [85.0%]  (false,exec)
Successors:  39 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [50.0%]  (false,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [15.0%]  (true,exec) 37 [50.0%]  (true,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  17 [100.0%]  (fallthru,exec) 26 [71.0%]  (false,exec) 29 [50.0%]  (false,exec) 31 [100.0%]  (fallthru,exec) 39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 25 [71.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  42 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [1.6%]  (true,exec) 41 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_check_incoming_crypto (struct switch_core_session_t * session, const char * varname, switch_media_type_t type, const char * crypto, int crypto_tag, switch_sdp_type_t sdp_type)
{
  const char D.47416;
  int D.47415;
  int D.47412;
  const char * b;
  const char * a;
  switch_rtp_crypto_key_type_t j;
  static const char __func__[42] = "switch_core_session_check_incoming_crypto";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * vval;
  int ctype;
  int i;
  int got_crypto;
  char * D.46805;
  struct switch_channel_t * D.46804;
  struct switch_core_session_t * D.46803;
  const char * D.46802;
  const char * D.46798;
  char * D.46795;
  uint8_t D.46790;
  switch_size_t D.46789;
  int D.46788;
  unsigned char[64] * D.46787;
  uint32_t D.46786;
  int D.46785;
  struct switch_secure_settings_t * D.46784;
  uint32_t D.46779;
  uint8_t D.46776;
  const char * D.46775;
  const char * D.46771;
  switch_media_type_t D.46768;
  char * D.46767;
  int D.46765;
  _Bool D.46763;
  _Bool D.46762;
  _Bool D.46761;
  switch_size_t D.46758;
  int D.46757;
  unsigned char[64] * D.46756;
  switch_rtp_crypto_key_type_t D.46755;
  uint32_t D.46754;
  switch_rtp_crypto_key_type_t ctype.166;
  int D.38621;
  uint8_t D.46741;
  struct switch_rtp_t * D.46740;
  char * D.46738;
  switch_rtp_crypto_key_type_t D.46737;
  struct switch_channel_t * D.46734;
  switch_rtp_crypto_key_type_t D.46733;
  const char * D.46730;
  char * D.46729;
  switch_rtp_crypto_key_type_t D.46728;
  struct switch_media_handle_t * D.46725;
  switch_rtp_crypto_mode_t D.46722;

  # BLOCK 2 freq:995
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG got_crypto => 0
  # DEBUG i => 0
  # DEBUG ctype => 0
  # DEBUG vval => 0B
  smh_11 = session_10(D)->media_handle;
  # DEBUG smh => smh_11
  if (smh_11 == 0B)
    goto <bb 42>;
  else
    goto <bb 3>;
  # SUCC: 42 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:894
  # PRED: 2 [89.9%]  (false,exec)
  D.46722_13 = smh_11->crypto_mode;
  if (D.46722_13 == 2)
    goto <bb 42>;
  else
    goto <bb 4>;
  # SUCC: 42 [1.6%]  (true,exec) 4 [98.4%]  (false,exec)

  # BLOCK 4 freq:880
  # PRED: 3 [98.4%]  (false,exec)
  D.46725_15 = session_10(D)->media_handle;
  engine_19 = &D.46725_15->engines[type_17(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_19
  # DEBUG i => 0
  goto <bb 8>;
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:9550
  # PRED: 8 [95.5%]  (true,exec)
  D.46728_22 = smh_11->crypto_suite_order[i_2];
  j_23 = SUITES[D.46728_22].type;
  # DEBUG j => j_23
  D.46729_24 = SUITES[j_23].name;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1179, session_10(D), 7, "looking for crypto suite [%s] in [%s]\n", D.46729_24, crypto_25(D));
  D.46729_26 = SUITES[j_23].name;
  D.46730_27 = switch_stristr (D.46729_26, crypto_25(D));
  if (D.46730_27 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [4.5%]  (true,exec) 7 [95.5%]  (false,exec)

  # BLOCK 6 freq:430
  # PRED: 5 [4.5%]  (true,exec)
  D.46733_28 = SUITES[j_23].type;
  ctype_29 = (int) D.46733_28;
  # DEBUG ctype => ctype_29
  vval_30 = SUITES[j_23].name;
  # DEBUG vval => vval_30
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1184, session_10(D), 7, "Found suite %s\n", vval_30);
  D.46734_31 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_31, "rtp_secure_media_negotiated", vval_30, 1);
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9120
  # PRED: 5 [95.5%]  (false,exec)
  i_32 = i_2 + 1;
  # DEBUG i => i_32
  # SUCC: 8 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 8 freq:10000
  # PRED: 4 [100.0%]  (fallthru,exec) 7 [100.0%]  (fallthru,dfs_back,exec)
  # i_2 = PHI <0(4), i_32(7)>
  # DEBUG i => i_2
  D.46728_21 = smh_11->crypto_suite_order[i_2];
  if (D.46728_21 != 9)
    goto <bb 5>;
  else
    goto <bb 9>;
  # SUCC: 5 [95.5%]  (true,exec) 9 [4.5%]  (false,exec)

  # BLOCK 9 freq:880
  # PRED: 6 [100.0%]  (fallthru,exec) 8 [4.5%]  (false,exec)
  # ctype_3 = PHI <ctype_29(6), 0(8)>
  # vval_4 = PHI <vval_30(6), 0B(8)>
  # DEBUG vval => vval_4
  # DEBUG ctype => ctype_3
  D.46737_33 = engine_19->crypto_type;
  D.46738_34 = engine_19->ssec[D.46737_33].remote_crypto_key;
  if (D.46738_34 != 0B)
    goto <bb 10>;
  else
    goto <bb 29>;
  # SUCC: 10 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

  # BLOCK 10 freq:748
  # PRED: 9 [85.0%]  (true,exec)
  D.46740_35 = engine_19->rtp_session;
  D.46741_36 = switch_rtp_ready (D.46740_35);
  if (D.46741_36 != 0)
    goto <bb 11>;
  else
    goto <bb 29>;
  # SUCC: 11 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 11 freq:374
  # PRED: 10 [50.0%]  (true,exec)
  if (crypto_25(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

  # BLOCK 12 freq:349
  # PRED: 11 [93.3%]  (true,exec)
  D.46737_37 = engine_19->crypto_type;
  if (D.46737_37 != 9)
    goto <bb 13>;
  else
    goto <bb 15>;
  # SUCC: 13 [72.0%]  (true,exec) 15 [28.0%]  (false,exec)

  # BLOCK 13 freq:251
  # PRED: 12 [72.0%]  (true,exec)
  D.46737_38 = engine_19->crypto_type;
  D.46738_39 = engine_19->ssec[D.46737_38].remote_crypto_key;
  D.38621_40 = __builtin_strcmp (crypto_25(D), D.46738_39);
  if (D.38621_40 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

  # BLOCK 14 freq:73
  # PRED: 13 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1193, session_10(D), 7, "Existing key is still valid.\n");
  # DEBUG got_crypto => 1
  goto <bb 41> (end);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:301
  # PRED: 11 [6.7%]  (false,exec) 12 [28.0%]  (false,exec) 13 [71.0%]  (false,exec)
  D.46737_42 = engine_19->crypto_type;
  D.46738_43 = engine_19->ssec[D.46737_42].remote_crypto_key;
  a_44 = switch_stristr ("AE", D.46738_43);
  # DEBUG a => a_44
  b_45 = switch_stristr ("AE", crypto_25(D));
  # DEBUG b => b_45
  if (sdp_type_46(D) == 0)
    goto <bb 16>;
  else
    goto <bb 19>;
  # SUCC: 16 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 16 freq:151
  # PRED: 15 [50.0%]  (true,exec)
  if (vval_4 == 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [15.0%]  (true,exec) 18 [85.0%]  (false,exec)

  # BLOCK 17 freq:23
  # PRED: 16 [15.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1201, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 41> (end);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:128
  # PRED: 16 [85.0%]  (false,exec)
  D.46734_47 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_47, varname_48(D), vval_4, 1);
  D.46725_49 = session_10(D)->media_handle;
  ctype.166_50 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_49, type_17(D), crypto_tag_51(D), ctype.166_50, 0, 1);
  D.46740_52 = engine_19->rtp_session;
  # DEBUG __nptr => crypto_25(D)
  D.47412_185 = strtol (crypto_25(D), 0B, 10);
  D.46754_54 = (uint32_t) D.47412_185;
  D.46737_55 = engine_19->crypto_type;
  D.46755_56 = engine_19->ssec[D.46737_55].crypto_type;
  D.46737_57 = engine_19->crypto_type;
  D.46756_58 = &engine_19->ssec[D.46737_57].local_raw_key;
  D.46757_59 = SUITES[ctype_3].keylen;
  D.46758_60 = (switch_size_t) D.46757_59;
  switch_rtp_add_crypto_key (D.46740_52, 0, D.46754_54, D.46755_56, D.46756_58, D.46758_60);
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:279
  # PRED: 15 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  D.46761_61 = a_44 != 0B;
  D.46762_62 = b_45 != 0B;
  D.46763_63 = D.46761_61 && D.46762_62;
  if (D.46763_63 != 0)
    goto <bb 20>;
  else
    goto <bb 28>;
  # SUCC: 20 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

  # BLOCK 20 freq:198
  # PRED: 19 [71.0%]  (true,exec)
  D.46765_64 = strncasecmp (a_44, b_45, 23);
  if (D.46765_64 == 0)
    goto <bb 21>;
  else
    goto <bb 28>;
  # SUCC: 21 [29.0%]  (true,exec) 28 [71.0%]  (false,exec)

  # BLOCK 21 freq:57
  # PRED: 20 [29.0%]  (true,exec)
  ctype.166_65 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_65;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1214, session_10(D), 7, "Change Remote key to [%s]\n", crypto_25(D));
  D.46737_66 = engine_19->crypto_type;
  D.46767_67 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1215);
  engine_19->ssec[D.46737_66].remote_crypto_key = D.46767_67;
  D.46768_68 = engine_19->type;
  if (D.46768_68 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

  # BLOCK 22 freq:17
  # PRED: 21 [29.0%]  (true,exec)
  D.46734_69 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_69, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_70 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_70, "srtp_remote_audio_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_71 = session_10(D)->channel;
  ctype.166_72 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46771_73 = switch_core_media_crypto_type2str (ctype.166_72);
  switch_channel_set_variable_printf (D.46734_71, "srtp_remote_audio_crypto_type", "%s", D.46771_73);
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:41
  # PRED: 21 [71.0%]  (false,exec)
  D.46768_74 = engine_19->type;
  if (D.46768_74 == 1)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [13.7%]  (true,exec) 25 [86.3%]  (false,exec)

  # BLOCK 24 freq:6
  # PRED: 23 [13.7%]  (true,exec)
  D.46734_75 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_75, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_76 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_76, "srtp_remote_video_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_77 = session_10(D)->channel;
  ctype.166_78 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46775_79 = switch_core_media_crypto_type2str (ctype.166_78);
  switch_channel_set_variable_printf (D.46734_77, "srtp_remote_video_crypto_type", "%s", D.46775_79);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:57
  # PRED: 22 [100.0%]  (fallthru,exec) 23 [86.3%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  D.46737_80 = engine_19->crypto_type;
  engine_19->ssec[D.46737_80].crypto_tag = crypto_tag_51(D);
  D.46740_81 = engine_19->rtp_session;
  D.46776_82 = switch_rtp_ready (D.46740_81);
  if (D.46776_82 != 0)
    goto <bb 26>;
  else
    goto <bb 41> (end);
  # SUCC: 26 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 26 freq:17
  # PRED: 25 [29.0%]  (true,exec)
  D.46734_83 = session_10(D)->channel;
  D.46779_84 = switch_channel_test_flag (D.46734_83, 92);
  if (D.46779_84 != 0)
    goto <bb 27>;
  else
    goto <bb 41> (end);
  # SUCC: 27 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 27 freq:5
  # PRED: 26 [29.0%]  (true,exec)
  D.46737_86 = engine_19->crypto_type;
  D.46784_88 = &engine_19->ssec[D.46737_86]{lb: 0 sz: 144};
  D.46737_89 = engine_19->crypto_type;
  D.46738_90 = engine_19->ssec[D.46737_89].remote_crypto_key;
  switch_core_media_add_crypto (D.46784_88, D.46738_90, 1);
  D.46740_91 = engine_19->rtp_session;
  D.46737_92 = engine_19->crypto_type;
  D.46785_93 = engine_19->ssec[D.46737_92].crypto_tag;
  D.46786_94 = (uint32_t) D.46785_93;
  D.46737_97 = engine_19->crypto_type;
  D.46787_98 = &engine_19->ssec[D.46737_97].remote_raw_key;
  D.46737_99 = engine_19->crypto_type;
  D.46755_100 = engine_19->ssec[D.46737_99].crypto_type;
  D.46788_101 = SUITES[D.46755_100].keylen;
  D.46789_102 = (switch_size_t) D.46788_101;
  switch_rtp_add_crypto_key (D.46740_91, 1, D.46786_94, D.46755_100, D.46787_98, D.46789_102);
  goto <bb 41> (end);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:221
  # PRED: 19 [29.0%]  (false,exec) 20 [71.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1238, session_10(D), 7, "Ignoring unacceptable key\n");
  goto <bb 41> (end);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:506
  # PRED: 9 [15.0%]  (false,exec) 10 [50.0%]  (false,exec)
  D.46740_104 = engine_19->rtp_session;
  D.46790_105 = switch_rtp_ready (D.46740_104);
  if (D.46790_105 == 0)
    goto <bb 30>;
  else
    goto <bb 41> (end);
  # SUCC: 30 [50.0%]  (true,exec) 41 [50.0%]  (false,exec)

  # BLOCK 30 freq:253
  # PRED: 29 [50.0%]  (true,exec)
  if (vval_4 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [15.0%]  (true,exec) 32 [85.0%]  (false,exec)

  # BLOCK 31 freq:38
  # PRED: 30 [15.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1244, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 41> (end);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:215
  # PRED: 30 [85.0%]  (false,exec)
  ctype.166_106 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_106;
  D.46737_107 = engine_19->crypto_type;
  D.46795_108 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1249);
  engine_19->ssec[D.46737_107].remote_crypto_key = D.46795_108;
  D.46737_109 = engine_19->crypto_type;
  D.46738_110 = engine_19->ssec[D.46737_109].remote_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1250, session_10(D), 7, "Set Remote Key [%s]\n", D.46738_110);
  D.46768_111 = engine_19->type;
  if (D.46768_111 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 33 freq:62
  # PRED: 32 [29.0%]  (true,exec)
  D.46734_112 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_112, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_113 = session_10(D)->channel;
  ctype.166_114 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46798_115 = switch_core_media_crypto_type2str (ctype.166_114);
  switch_channel_set_variable_printf (D.46734_113, "srtp_remote_audio_crypto_type", "%s", D.46798_115);
  goto <bb 36>;
  # SUCC: 36 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:153
  # PRED: 32 [71.0%]  (false,exec)
  D.46768_116 = engine_19->type;
  if (D.46768_116 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [13.7%]  (true,exec) 36 [86.3%]  (false,exec)

  # BLOCK 35 freq:21
  # PRED: 34 [13.7%]  (true,exec)
  D.46734_117 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_117, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_118 = session_10(D)->channel;
  ctype.166_119 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46802_120 = switch_core_media_crypto_type2str (ctype.166_119);
  switch_channel_set_variable_printf (D.46734_118, "srtp_remote_video_crypto_type", "%s", D.46802_120);
  # SUCC: 36 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:215
  # PRED: 33 [100.0%]  (fallthru,exec) 34 [86.3%]  (false,exec) 35 [100.0%]  (fallthru,exec)
  D.46737_121 = engine_19->crypto_type;
  engine_19->ssec[D.46737_121].crypto_tag = crypto_tag_51(D);
  # DEBUG got_crypto => 1
  D.46734_123 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_123, varname_48(D), vval_4, 1);
  D.46803_124 = smh_11->session;
  D.46804_125 = D.46803_124->channel;
  switch_channel_set_flag_value (D.46804_125, 92, 1);
  D.46737_126 = engine_19->crypto_type;
  D.46805_127 = engine_19->ssec[D.46737_126].local_crypto_key;
  # DEBUG s => D.46805_127
  if (D.46805_127 == 0B)
    goto <bb 39>;
  else
    goto <bb 37>;
  # SUCC: 39 [15.0%]  (true,exec) 37 [85.0%]  (false,exec)

  # BLOCK 37 freq:183
  # PRED: 36 [85.0%]  (false,exec)
  D.47416_186 = MEM[(const char *)D.46805_127];
  if (D.47416_186 == 0)
    goto <bb 39>;
  else
    goto <bb 38>;
  # SUCC: 39 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 38 freq:91
  # PRED: 37 [50.0%]  (false,exec)
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:215
  # PRED: 36 [15.0%]  (true,exec) 37 [50.0%]  (true,exec) 38 [100.0%]  (fallthru,exec)
  # D.47415_187 = PHI <1(36), 1(37), 0(38)>
  if (D.47415_187 != 0)
    goto <bb 40>;
  else
    goto <bb 41> (end);
  # SUCC: 40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 40 freq:62
  # PRED: 39 [29.0%]  (true,exec)
  D.46725_129 = session_10(D)->media_handle;
  ctype.166_130 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_129, type_17(D), crypto_tag_51(D), ctype.166_130, 0, 1);
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:880
  # PRED: 17 [100.0%]  (fallthru,exec) 26 [71.0%]  (false,exec) 29 [50.0%]  (false,exec) 31 [100.0%]  (fallthru,exec) 39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 25 [71.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  # got_crypto_1 = PHI <0(17), 1(26), 0(29), 0(31), 1(39), 1(40), 1(14), 0(28), 1(25), 1(27)>
end:
  # DEBUG got_crypto => got_crypto_1
  # SUCC: 42 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:995
  # PRED: 2 [10.1%]  (true,exec) 3 [1.6%]  (true,exec) 41 [100.0%]  (fallthru,exec)
  # got_crypto_5 = PHI <0(2), -1(3), got_crypto_1(41)>
  return got_crypto_5;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_create (switch_media_handle_create)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 3
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 18 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 3
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_4)
(get_scalar_evolution 
  (scalar = i_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_4 = PHI <0(14), i_38(15)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_4 = PHI <0(14), i_38(15)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = i_4)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 9)
(get_scalar_evolution 
  (scalar = 9)
  (scalar_evolution = 9))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) <= 9
  bounds on difference of bases: 9 ... 9
  result:
    # of iterations 10, bounded by 10
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_3)
(get_scalar_evolution 
  (scalar = i_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_3 = PHI <0(11), i_34(12)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_3 = PHI <0(11), i_34(12)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 11 
  (scalar = i_3)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <0(8), i_27(9)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <0(8), i_27(9)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Predictions for bb 2
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 89.9%
  first match heuristics (ignored): 85.0%
  combined heuristics: 89.9%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics (ignored): 90.0%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  loop iterations heuristics: 90.0%
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics (ignored): 90.0%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  loop iterations heuristics: 90.0%
1 edges in bb 14 predicted to even probabilities
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics (ignored): 90.9%
  first match heuristics: 90.9%
  combined heuristics: 90.9%
  loop iterations heuristics: 90.9%
1 edges in bb 17 predicted to even probabilities
1 edges in bb 18 predicted to even probabilities

;; Function switch_media_handle_create

;; 
19 basic blocks, 25 edges, last basic block 19.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  5 [15.0%]  (true,exec) 3 [85.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [15.0%]  (true,exec) 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [89.9%]  (true,exec) 18 [10.1%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [89.9%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  10 [90.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,dfs_back,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [90.0%]  (true,exec) 11 [10.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [10.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  13 [90.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,dfs_back,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,dfs_back,exec)
Successors:  12 [90.0%]  (true,exec) 14 [10.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [10.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  16 [90.9%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,dfs_back,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,dfs_back,exec)
Successors:  15 [90.9%]  (true,exec) 17 [9.1%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [9.1%]  (false,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  7 [10.1%]  (false,exec) 17 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_create (struct switch_media_handle_t * * smhp, struct switch_core_session_t * session, struct switch_core_media_params_t * params)
{
  const char D.47421;
  int D.47420;
  static const char __func__[27] = "switch_media_handle_create";
  int i;
  switch_status_t status;
  struct switch_channel_t * D.46496;
  struct payload_map_t * D.46495;
  struct payload_map_t * D.46494;
  void * D.46493;
  struct payload_map_t * D.46492;
  struct payload_map_t * D.46491;
  void * D.46490;
  struct switch_memory_pool_t * D.46489;
  unsigned int D.46488;
  unsigned int D.46487;
  unsigned int D.46486;
  time_t D.46485;
  unsigned int D.46484;
  struct switch_rtp_engine_t * D.46483;
  unsigned int D.46482;
  unsigned int D.46481;
  time_t D.46480;
  unsigned int D.46479;
  struct switch_rtp_engine_t[2] * D.46478;
  struct switch_memory_pool_t * D.46477;
  struct switch_mutex_t * * D.46476;
  struct switch_memory_pool_t * D.46475;
  struct switch_mutex_t * * D.46474;
  switch_rtp_crypto_key_type_t i.136;
  unsigned int D.46472;
  smh_flag_t D.46471;
  struct switch_media_handle_t * D.46468;
  void * D.46467;
  char * D.46463;

  # BLOCK 2 freq:1012
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG status => 1
  # DEBUG smh => 0B
  *smhp_7(D) = 0B;
  D.46463_9 = params_8(D)->sdp_username;
  # DEBUG s => D.46463_9
  if (D.46463_9 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
  # SUCC: 5 [15.0%]  (true,exec) 3 [85.0%]  (false,exec)

  # BLOCK 3 freq:860
  # PRED: 2 [85.0%]  (false,exec)
  D.47421_119 = MEM[(const char *)D.46463_9];
  if (D.47421_119 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 4 freq:430
  # PRED: 3 [50.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:1012
  # PRED: 2 [15.0%]  (true,exec) 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # D.47420_120 = PHI <1(2), 1(3), 0(4)>
  if (D.47420_120 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 6 freq:506
  # PRED: 5 [50.0%]  (true,exec)
  params_8(D)->sdp_username = "FreeSWITCH";
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:1012
  # PRED: 5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.46467_12 = switch_core_perform_session_alloc (session_11(D), 23856, "src/switch_core_media.c", &__func__, 1426);
  session_11(D)->media_handle = D.46467_12;
  D.46468_13 = session_11(D)->media_handle;
  if (D.46468_13 != 0B)
    goto <bb 8>;
  else
    goto <bb 18>;
  # SUCC: 8 [89.9%]  (true,exec) 18 [10.1%]  (false,exec)

  # BLOCK 8 freq:909
  # PRED: 7 [89.9%]  (true,exec)
  D.46468_14 = session_11(D)->media_handle;
  D.46468_14->session = session_11(D);
  D.46468_15 = session_11(D)->media_handle;
  *smhp_7(D) = D.46468_15;
  D.46468_17 = session_11(D)->media_handle;
  D.46471_18 = D.46468_17->flags;
  D.46472_19 = D.46471_18 | 1;
  D.46468_17->flags = D.46472_19;
  D.46468_20 = session_11(D)->media_handle;
  D.46468_20->media_flags[0] = 1;
  D.46468_21 = session_11(D)->media_handle;
  D.46468_21->engines[0].read_frame.buflen = 16384;
  D.46468_22 = session_11(D)->media_handle;
  D.46468_22->engines[0].type = 0;
  D.46468_23 = session_11(D)->media_handle;
  D.46468_23->engines[0].crypto_type = 9;
  # DEBUG i => 0
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8181
  # PRED: 10 [90.0%]  (true,exec)
  D.46468_25 = session_11(D)->media_handle;
  i.136_26 = (switch_rtp_crypto_key_type_t) i_2;
  D.46468_25->engines[0].ssec[i_2].crypto_type = i.136_26;
  i_27 = i_2 + 1;
  # DEBUG i => i_27
  # SUCC: 10 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 10 freq:9090
  # PRED: 8 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
  # i_2 = PHI <0(8), i_27(9)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 9>;
  else
    goto <bb 11>;
  # SUCC: 9 [90.0%]  (true,exec) 11 [10.0%]  (false,exec)

  # BLOCK 11 freq:909
  # PRED: 10 [10.0%]  (false,exec)
  D.46468_28 = session_11(D)->media_handle;
  D.46468_28->engines[1].read_frame.buflen = 16384;
  D.46468_29 = session_11(D)->media_handle;
  D.46468_29->engines[1].type = 1;
  D.46468_30 = session_11(D)->media_handle;
  D.46468_30->engines[1].crypto_type = 9;
  # DEBUG i => 0
  goto <bb 13>;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:8181
  # PRED: 13 [90.0%]  (true,exec)
  D.46468_32 = session_11(D)->media_handle;
  i.136_33 = (switch_rtp_crypto_key_type_t) i_3;
  D.46468_32->engines[1].ssec[i_3].crypto_type = i.136_33;
  i_34 = i_3 + 1;
  # DEBUG i => i_34
  # SUCC: 13 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 13 freq:9090
  # PRED: 11 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,dfs_back,exec)
  # i_3 = PHI <0(11), i_34(12)>
  # DEBUG i => i_3
  if (i_3 <= 8)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [90.0%]  (true,exec) 14 [10.0%]  (false,exec)

  # BLOCK 14 freq:909
  # PRED: 13 [10.0%]  (false,exec)
  D.46468_35 = session_11(D)->media_handle;
  D.46468_35->mparams = params_8(D);
  # DEBUG i => 0
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:9091
  # PRED: 16 [90.9%]  (true,exec)
  D.46468_37 = session_11(D)->media_handle;
  D.46468_37->crypto_suite_order[i_4] = 9;
  i_38 = i_4 + 1;
  # DEBUG i => i_38
  # SUCC: 16 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 16 freq:10000
  # PRED: 14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,dfs_back,exec)
  # i_4 = PHI <0(14), i_38(15)>
  # DEBUG i => i_4
  if (i_4 <= 9)
    goto <bb 15>;
  else
    goto <bb 17>;
  # SUCC: 15 [90.9%]  (true,exec) 17 [9.1%]  (false,exec)

  # BLOCK 17 freq:909
  # PRED: 16 [9.1%]  (false,exec)
  D.46468_39 = session_11(D)->media_handle;
  D.46474_40 = &D.46468_39->mutex;
  D.46475_41 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46474_40, 1, D.46475_41);
  D.46468_42 = session_11(D)->media_handle;
  D.46476_43 = &D.46468_42->sdp_mutex;
  D.46477_44 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46476_43, 1, D.46477_44);
  D.46468_46 = session_11(D)->media_handle;
  D.46478_47 = &D.46468_46->engines;
  D.46479_48 = (unsigned int) D.46478_47;
  D.46480_49 = time (0B);
  D.46481_50 = (unsigned int) D.46480_49;
  D.46482_51 = D.46479_48 + D.46481_50;
  D.46468_46->engines[0].ssrc = D.46482_51;
  D.46468_53 = session_11(D)->media_handle;
  D.46483_54 = &D.46468_53->engines[1];
  D.46484_55 = (unsigned int) D.46483_54;
  D.46485_56 = time (0B);
  D.46486_57 = (unsigned int) D.46485_56;
  D.46487_58 = D.46486_57 / 2;
  D.46488_59 = D.46484_55 + D.46487_58;
  D.46468_53->engines[1].ssrc = D.46488_59;
  D.46468_60 = session_11(D)->media_handle;
  D.46489_61 = session_11(D)->pool;
  D.46490_62 = switch_core_perform_alloc (D.46489_61, 84, "src/switch_core_media.c", &__func__, 1464);
  D.46468_60->engines[0].payload_map = D.46490_62;
  D.46468_64 = session_11(D)->media_handle;
  D.46491_65 = D.46468_64->engines[0].payload_map;
  D.46468_64->engines[0].cur_payload_map = D.46491_65;
  D.46468_66 = session_11(D)->media_handle;
  D.46492_67 = D.46468_66->engines[0].cur_payload_map;
  D.46492_67->current = 1;
  D.46468_68 = session_11(D)->media_handle;
  D.46489_69 = session_11(D)->pool;
  D.46493_70 = switch_core_perform_alloc (D.46489_69, 84, "src/switch_core_media.c", &__func__, 1467);
  D.46468_68->engines[1].payload_map = D.46493_70;
  D.46468_72 = session_11(D)->media_handle;
  D.46494_73 = D.46468_72->engines[1].payload_map;
  D.46468_72->engines[1].cur_payload_map = D.46494_73;
  D.46468_74 = session_11(D)->media_handle;
  D.46495_75 = D.46468_74->engines[1].cur_payload_map;
  D.46495_75->current = 1;
  D.46496_76 = session_11(D)->channel;
  switch_channel_set_flag_value (D.46496_76, 111, 1);
  # DEBUG status => 0
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:1012
  # PRED: 7 [10.1%]  (false,exec) 17 [100.0%]  (fallthru,exec)
  # status_1 = PHI <1(7), 0(17)>
  # DEBUG status => status_1
  return status_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_set_media_flag (switch_media_handle_set_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_media_handle_set_media_flag

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_set_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_media_handle_set_media_flag";

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 1482, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_1(D)->media_flags[flag_2(D)] = 1;
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_set_media_flags (switch_media_handle_set_media_flags)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
;; 2 succs { 4 3 }
;; 3 succs { 8 }
;; 4 succs { }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 6
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <i_3(3), i_13(7)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <i_3(3), i_13(7)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 3 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 16)
(get_scalar_evolution 
  (scalar = 16)
  (scalar_evolution = 16))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 16
  bounds on difference of bases: 16 ... 16
  result:
    # of iterations 17, bounded by 17
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
1 edges in bb 3 predicted to even probabilities
0 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics (ignored): 94.4%
  first match heuristics: 94.4%
  combined heuristics: 94.4%
  loop iterations heuristics: 94.4%
1 edges in bb 9 predicted to even probabilities

;; Function switch_media_handle_set_media_flags

;; 
10 basic blocks, 11 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [0.0%]  (true,exec) 3 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  8 [100.0%]  (fallthru)

Basic block 4 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 5 (new, reachable)
Predecessors:  8 [94.4%]  (true,exec)
Successors:  6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [100.0%]  (fallthru,dfs_back,exec)

Basic block 8 (new)
Predecessors:  3 [100.0%]  (fallthru) 7 [100.0%]  (fallthru,dfs_back,exec)
Successors:  5 [94.4%]  (true,exec) 9 [5.6%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [5.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_set_media_flags (struct switch_media_handle_t * smh, switch_core_media_flag_t * flags)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_set_media_flags";
  int i;
  switch_core_media_flag_t D.46458;
  switch_core_media_flag_t * D.46457;
  unsigned int D.46456;
  unsigned int i.135;

  # BLOCK 2 freq:556
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (smh_2(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [0.0%]  (true,exec) 3 [100.0%]  (false,exec)

  # BLOCK 3 freq:556
  # PRED: 2 [100.0%]  (false,exec)
  # i_3 = PHI <0(2)>
  goto <bb 8>;
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 1491, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 5 freq:9444
  # PRED: 8 [94.4%]  (true,exec)
  i.135_4 = (unsigned int) i_1;
  D.46456_5 = i.135_4 * 4;
  D.46457_7 = flags_6(D) + D.46456_5;
  D.46458_8 = *D.46457_7;
  if (D.46458_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 6 freq:4722
  # PRED: 5 [50.0%]  (true,exec)
  i.135_9 = (unsigned int) i_1;
  D.46456_10 = i.135_9 * 4;
  D.46457_11 = flags_6(D) + D.46456_10;
  D.46458_12 = *D.46457_11;
  smh_2(D)->media_flags[i_1] = D.46458_12;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9444
  # PRED: 5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  i_13 = i_1 + 1;
  # DEBUG i => i_13
  # SUCC: 8 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 8 freq:10000
  # PRED: 3 [100.0%]  (fallthru) 7 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <i_3(3), i_13(7)>
  # DEBUG i => i_1
  if (i_1 <= 16)
    goto <bb 5>;
  else
    goto <bb 9>;
  # SUCC: 5 [94.4%]  (true,exec) 9 [5.6%]  (false,exec)

  # BLOCK 9 freq:556
  # PRED: 8 [5.6%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_clear_media_flag (switch_media_handle_clear_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_media_handle_clear_media_flag

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_clear_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[37] = "switch_media_handle_clear_media_flag";

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 1503, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_1(D)->media_flags[flag_2(D)] = 0;
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_test_media_flag (switch_media_handle_test_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_media_handle_test_media_flag

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_test_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_test_media_flag";
  switch_core_media_flag_t D.46449;
  int32_t D.46448;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 1510, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.46449_3 = smh_1(D)->media_flags[flag_2(D)];
  D.46448_4 = (int32_t) D.46449_3;
  return D.46448_4;
  # SUCC: EXIT [100.0%] 

}



;; Function generate_m.isra.4 (generate_m.isra.4)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 138 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
;;
;; Loop 3
;;  header 116, latch 115
;;  depth 1, outer 0
;;  nodes: 116 115 109 113 114 110 111 112 108
;;
;; Loop 2
;;  header 62, latch 61
;;  depth 1, outer 0
;;  nodes: 62 61 35 43 46 59 60 55 57 58 56 54 52 53 48 50 51 49 44 47 45 40 41 42 39 37 38 36 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 14 19 22 24 20 23 21 16 17 18 15 13 11 12 10
;; 138 succs { 2 }
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 137 5 }
;; 5 succs { 6 7 }
;; 6 succs { 9 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 26 }
;; 10 succs { 12 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 25 }
;; 15 succs { 16 18 }
;; 16 succs { 17 20 }
;; 17 succs { 20 }
;; 18 succs { 19 20 }
;; 19 succs { 25 }
;; 20 succs { 21 24 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 10 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 33 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 62 }
;; 34 succs { 35 36 }
;; 35 succs { 61 }
;; 36 succs { 38 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 42 }
;; 40 succs { 41 44 }
;; 41 succs { 44 }
;; 42 succs { 43 44 }
;; 43 succs { 61 }
;; 44 succs { 45 48 }
;; 45 succs { 46 47 }
;; 46 succs { 61 }
;; 47 succs { 48 }
;; 48 succs { 49 52 }
;; 49 succs { 51 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 54 }
;; 53 succs { 54 }
;; 54 succs { 56 55 }
;; 55 succs { 56 59 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 34 63 }
;; 63 succs { 66 64 }
;; 64 succs { 66 65 }
;; 65 succs { 66 70 }
;; 66 succs { 67 70 }
;; 67 succs { 68 69 }
;; 68 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 73 71 }
;; 71 succs { 73 72 }
;; 72 succs { 73 }
;; 73 succs { 74 76 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 77 80 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 105 }
;; 81 succs { 84 82 }
;; 82 succs { 84 83 }
;; 83 succs { 84 }
;; 84 succs { 85 92 }
;; 85 succs { 88 86 }
;; 86 succs { 88 87 }
;; 87 succs { 88 }
;; 88 succs { 89 92 }
;; 89 succs { 90 92 }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 94 93 }
;; 93 succs { 94 105 }
;; 94 succs { 97 95 }
;; 95 succs { 97 96 }
;; 96 succs { 97 }
;; 97 succs { 98 105 }
;; 98 succs { 101 99 }
;; 99 succs { 101 100 }
;; 100 succs { 101 }
;; 101 succs { 102 105 }
;; 102 succs { 103 105 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 117 }
;; 106 succs { 107 117 }
;; 107 succs { 116 }
;; 108 succs { 110 109 }
;; 109 succs { 110 115 }
;; 110 succs { 113 111 }
;; 111 succs { 113 112 }
;; 112 succs { 113 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 }
;; 116 succs { 108 117 }
;; 117 succs { 118 120 }
;; 118 succs { 119 120 }
;; 119 succs { 120 }
;; 120 succs { 121 126 }
;; 121 succs { 122 123 }
;; 122 succs { 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 }
;; 125 succs { 126 }
;; 126 succs { 127 128 }
;; 127 succs { 128 }
;; 128 succs { 129 130 }
;; 129 succs { 130 }
;; 130 succs { 131 132 }
;; 131 succs { 132 }
;; 132 succs { 135 133 }
;; 133 succs { 135 134 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 138 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
;;
;; Loop 3
;;  header 116, latch 115
;;  depth 1, outer 0
;;  nodes: 116 115 109 113 114 110 111 112 108
;;
;; Loop 2
;;  header 62, latch 61
;;  depth 1, outer 0
;;  nodes: 62 61 35 43 46 59 60 55 57 58 56 54 52 53 48 50 51 49 44 47 45 40 41 42 39 37 38 36 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 14 19 22 24 20 23 21 16 17 18 15 13 11 12 10
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_291)
(get_scalar_evolution 
  (scalar = i_291)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_291 = PHI <i_346(107), i_304(115)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_291 = PHI <i_346(107), i_304(115)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = i_291)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = {0, +, 1}_3)
  (res = {0, +, 1}_3))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47550_305 = smh_2->crypto_suite_order[i_291];
 in loop 3.
Statement D.47550_305 = smh_2->crypto_suite_order[i_291];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_304)
(get_scalar_evolution 
  (scalar = i_304)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_291)
(get_scalar_evolution 
  (scalar = i_291)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = i_291)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = i_304)
  (scalar_evolution = {1, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = {1, +, 1}_3)
  (res = {1, +, 1}_3))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_304 = i_291 + 1;
 in loop 3.
Statement i_304 = i_291 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_293)
(get_scalar_evolution 
  (scalar = j_293)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = j_293)
  (scalar_evolution = j_293))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = j_293)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_293)
(get_scalar_evolution 
  (scalar = j_293)
  (scalar_evolution = j_293))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = j_293)
  (scalar_evolution = j_293))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_293)
(get_scalar_evolution 
  (scalar = j_293)
  (scalar_evolution = j_293))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = j_293)
  (scalar_evolution = j_293))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = j_293)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_293)
(get_scalar_evolution 
  (scalar = j_293)
  (scalar_evolution = j_293))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = j_293)
  (scalar_evolution = j_293))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_291)
(get_scalar_evolution 
  (scalar = i_291)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = i_291)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = {0, +, 1}_3)
  (res = {0, +, 1}_3))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47550_292 = smh_2->crypto_suite_order[i_291];
 in loop 3.
Statement D.47550_292 = smh_2->crypto_suite_order[i_291];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.47550_292)
(get_scalar_evolution 
  (scalar = D.47550_292)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = D.47550_292)
  (scalar_evolution = D.47550_292))
)
(instantiate_scev 
  (instantiate_below = 107)
  (evolution_loop = 3)
  (chrec = D.47550_292)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.47550_292)
(get_scalar_evolution 
  (scalar = D.47550_292)
  (scalar_evolution = D.47550_292))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = D.47550_292)
  (scalar_evolution = D.47550_292))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_70 = PHI <0(33), i_127(61)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_70 = PHI <0(33), i_127(61)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = D.47687_129)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47687_129)
(get_scalar_evolution 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47687_129)
  (scalar_evolution = D.47687_129))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_127)
(get_scalar_evolution 
  (scalar = i_127)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_127)
  (scalar_evolution = {1, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {1, +, 1}_2)
  (res = {1, +, 1}_2))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_127 = i_70 + 1;
 in loop 2.
Statement i_127 = i_70 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_125 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_125 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_110 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_110 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_117 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_117 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_99 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_99 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47660_97 = smh_2->fmtps[i_70];
 in loop 2.
Statement D.47660_97 = smh_2->fmtps[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement fmtp_98 = smh_2->fmtps[i_70];
 in loop 2.
Statement fmtp_98 = smh_2->fmtps[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_82 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_82 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_87 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_87 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47694_88)
(get_scalar_evolution 
  (scalar = D.47694_88)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47696_87)
(get_scalar_evolution 
  (scalar = D.47696_87)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47696_87)
  (scalar_evolution = D.47696_87))
)
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47694_88)
  (scalar_evolution = (int) D.47696_87))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = (int) D.47696_87)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47696_87)
(get_scalar_evolution 
  (scalar = D.47696_87)
  (scalar_evolution = D.47696_87))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47696_87)
  (scalar_evolution = D.47696_87))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_84 = smh_2->ianacodes[i_70];
 in loop 2.
Statement D.47696_84 = smh_2->ianacodes[i_70];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47694_85)
(get_scalar_evolution 
  (scalar = D.47694_85)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47696_84)
(get_scalar_evolution 
  (scalar = D.47696_84)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47696_84)
  (scalar_evolution = D.47696_84))
)
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47694_85)
  (scalar_evolution = (int) D.47696_84))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = (int) D.47696_84)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47696_84)
(get_scalar_evolution 
  (scalar = D.47696_84)
  (scalar_evolution = D.47696_84))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47696_84)
  (scalar_evolution = D.47696_84))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_70)
(get_scalar_evolution 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = i_70)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_71 = smh_2->codecs[i_70];
 in loop 2.
Statement imp_71 = smh_2->codecs[i_70];
 is executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47667_73)
(get_scalar_evolution 
  (scalar = D.47667_73)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47667_73)
  (scalar_evolution = D.47667_73))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = D.47667_73)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47667_73)
(get_scalar_evolution 
  (scalar = D.47667_73)
  (scalar_evolution = D.47667_73))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.47667_73)
  (scalar_evolution = D.47667_73))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = this_ptime_74)
(get_scalar_evolution 
  (scalar = this_ptime_74)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = this_ptime_74)
  (scalar_evolution = this_ptime_74))
)
(instantiate_scev 
  (instantiate_below = 33)
  (evolution_loop = 2)
  (chrec = this_ptime_74)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = this_ptime_74)
(get_scalar_evolution 
  (scalar = this_ptime_74)
  (scalar_evolution = this_ptime_74))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = this_ptime_74)
  (scalar_evolution = this_ptime_74))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_17 = PHI <0(9), i_42(25)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_17 = PHI <0(9), i_42(25)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = D.47687_44)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47687_44)
(get_scalar_evolution 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47687_44)
  (scalar_evolution = D.47687_44))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_42)
(get_scalar_evolution 
  (scalar = i_42)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_42)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_42 = i_17 + 1;
 in loop 1.
Statement i_42 = i_17 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_40 = smh_2->ianacodes[i_17];
 in loop 1.
Statement D.47696_40 = smh_2->ianacodes[i_17];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_29 = smh_2->ianacodes[i_17];
 in loop 1.
Statement D.47696_29 = smh_2->ianacodes[i_17];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_34 = smh_2->ianacodes[i_17];
 in loop 1.
Statement D.47696_34 = smh_2->ianacodes[i_17];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47694_35)
(get_scalar_evolution 
  (scalar = D.47694_35)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47696_34)
(get_scalar_evolution 
  (scalar = D.47696_34)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47696_34)
  (scalar_evolution = D.47696_34))
)
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47694_35)
  (scalar_evolution = (int) D.47696_34))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = (int) D.47696_34)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47696_34)
(get_scalar_evolution 
  (scalar = D.47696_34)
  (scalar_evolution = D.47696_34))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47696_34)
  (scalar_evolution = D.47696_34))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.47696_31 = smh_2->ianacodes[i_17];
 in loop 1.
Statement D.47696_31 = smh_2->ianacodes[i_17];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47694_32)
(get_scalar_evolution 
  (scalar = D.47694_32)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47696_31)
(get_scalar_evolution 
  (scalar = D.47696_31)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47696_31)
  (scalar_evolution = D.47696_31))
)
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47694_32)
  (scalar_evolution = (int) D.47696_31))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = (int) D.47696_31)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47696_31)
(get_scalar_evolution 
  (scalar = D.47696_31)
  (scalar_evolution = D.47696_31))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47696_31)
  (scalar_evolution = D.47696_31))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_17)
(get_scalar_evolution 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = i_17)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_18 = smh_2->codecs[i_17];
 in loop 1.
Statement imp_18 = smh_2->codecs[i_17];
 is executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47701_19)
(get_scalar_evolution 
  (scalar = D.47701_19)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47701_19)
  (scalar_evolution = D.47701_19))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = D.47701_19)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47701_19)
(get_scalar_evolution 
  (scalar = D.47701_19)
  (scalar_evolution = D.47701_19))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.47701_19)
  (scalar_evolution = D.47701_19))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = this_ptime_20)
(get_scalar_evolution 
  (scalar = this_ptime_20)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = this_ptime_20)
  (scalar_evolution = this_ptime_20))
)
(instantiate_scev 
  (instantiate_below = 9)
  (evolution_loop = 1)
  (chrec = this_ptime_20)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = this_ptime_20)
(get_scalar_evolution 
  (scalar = this_ptime_20)
  (scalar_evolution = this_ptime_20))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = this_ptime_20)
  (scalar_evolution = this_ptime_20))
)
  (res = scev_not_known))
1 edges in bb 138 predicted to even probabilities
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 7
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 11
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 16
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 86.9%
  first match heuristics (ignored): 73.0%
  combined heuristics: 86.9%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
Predictions for bb 21
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 22 predicted to even probabilities
1 edges in bb 23 predicted to even probabilities
1 edges in bb 24 predicted to even probabilities
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 27
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 28
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 31
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 32 predicted to even probabilities
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 37
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 40
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 41 predicted to even probabilities
Predictions for bb 42
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
Predictions for bb 45
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 46 predicted to even probabilities
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 49
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 50
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 51 predicted to even probabilities
Predictions for bb 52
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 53 predicted to even probabilities
Predictions for bb 54
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 55
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 56
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities
Predictions for bb 59
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 60 predicted to even probabilities
1 edges in bb 61 predicted to even probabilities
Predictions for bb 62
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 63
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 64
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 65
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 66
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 67
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 68 predicted to even probabilities
1 edges in bb 69 predicted to even probabilities
Predictions for bb 70
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 71
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 72 predicted to even probabilities
Predictions for bb 73
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 74
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 75 predicted to even probabilities
Predictions for bb 76
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 77
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 78 predicted to even probabilities
1 edges in bb 79 predicted to even probabilities
Predictions for bb 80
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 81
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 82
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 85
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 86
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 87 predicted to even probabilities
Predictions for bb 88
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 89
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 90
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 91 predicted to even probabilities
Predictions for bb 92
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 93
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 94
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 95
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 96 predicted to even probabilities
Predictions for bb 97
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 98
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 99
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 100 predicted to even probabilities
Predictions for bb 101
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 103
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 104 predicted to even probabilities
Predictions for bb 105
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 106
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 107 predicted to even probabilities
Predictions for bb 108
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 109
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 110
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 111
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 112 predicted to even probabilities
Predictions for bb 113
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 114 predicted to even probabilities
1 edges in bb 115 predicted to even probabilities
Predictions for bb 116
  DS theory heuristics (ignored): 95.9%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  opcode values nonequal (on trees) heuristics (ignored): 72.0%
  guessed loop iterations heuristics: 90.0%
Predictions for bb 117
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 118
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 119 predicted to even probabilities
Predictions for bb 120
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 121
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 122 predicted to even probabilities
Predictions for bb 123
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 124 predicted to even probabilities
1 edges in bb 125 predicted to even probabilities
Predictions for bb 126
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 127 predicted to even probabilities
Predictions for bb 128
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 129 predicted to even probabilities
Predictions for bb 130
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 131 predicted to even probabilities
Predictions for bb 132
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 133
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 134 predicted to even probabilities
Predictions for bb 135
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 136 predicted to even probabilities
1 edges in bb 137 predicted to even probabilities

;; Function generate_m.isra.4

;; 
139 basic blocks, 221 edges, last basic block 139.

Basic block 138 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  2 [100.0%]  (fallthru)

Basic block 2 (new, reachable)
Predecessors:  138 [100.0%]  (fallthru)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  137 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [29.0%]  (true,exec)
Successors:  9 [28.0%]  (true,exec) 7 [72.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [71.0%]  (false,exec) 6 [72.0%]  (false,exec)
Successors:  8 [72.0%]  (true,exec) 9 [28.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [72.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru)

Basic block 9 (new, reachable)
Predecessors:  6 [28.0%]  (true,exec) 7 [28.0%]  (false,exec) 8 [100.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  26 [98.0%]  (true,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec) 11 [50.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec)
Successors:  17 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [50.0%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  19 [72.0%]  (true,exec) 20 [28.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [72.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  16 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec) 18 [28.0%]  (false,exec)
Successors:  21 [86.9%]  (true,exec) 24 [13.1%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [86.9%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  20 [13.1%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [100.0%]  (fallthru,dfs_back,exec)

Basic block 26 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
Successors:  10 [98.0%]  (true,exec) 27 [2.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [2.0%]  (false,exec)
Successors:  28 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [50.0%]  (true,exec)
Successors:  29 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  27 [50.0%]  (false,exec) 28 [71.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
Successors:  31 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec)
Successors:  32 [29.0%]  (true,exec) 33 [71.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [29.0%]  (true,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec) 31 [71.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  62 [98.0%]  (true,exec)
Successors:  35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec) 37 [50.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  37 [50.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  41 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [50.0%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec)
Successors:  43 [72.0%]  (true,exec) 44 [28.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [72.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  40 [50.0%]  (false,exec) 41 [100.0%]  (fallthru,exec) 42 [28.0%]  (false,exec)
Successors:  45 [73.0%]  (true,exec) 48 [27.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [73.0%]  (true,exec)
Successors:  46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [50.0%]  (false,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  44 [27.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [69.8%]  (true,exec) 52 [30.2%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [69.8%]  (true,exec)
Successors:  51 [93.3%]  (true,exec) 50 [6.7%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [6.7%]  (false,exec)
Successors:  51 [85.0%]  (true,exec) 52 [15.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  49 [93.3%]  (true,exec) 50 [85.0%]  (true,exec)
Successors:  52 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  48 [30.2%]  (false,exec) 50 [15.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
Successors:  53 [85.0%]  (true,exec) 54 [15.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [85.0%]  (true,exec)
Successors:  54 [100.0%]  (fallthru,exec)

Basic block 54 (new, reachable)
Predecessors:  52 [15.0%]  (false,exec) 53 [100.0%]  (fallthru,exec)
Successors:  56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
Successors:  57 [73.0%]  (true,exec) 58 [27.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [73.0%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [27.0%]  (false,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  55 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
Successors:  60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [69.8%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  35 [100.0%]  (fallthru,exec) 43 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
Successors:  62 [100.0%]  (fallthru,dfs_back,exec)

Basic block 62 (new, reachable)
Predecessors:  33 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
Successors:  34 [98.0%]  (true,exec) 63 [2.0%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  62 [2.0%]  (false,exec)
Successors:  66 [71.0%]  (true,exec) 64 [29.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [29.0%]  (false,exec)
Successors:  66 [71.0%]  (true,exec) 65 [29.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [29.0%]  (false,exec)
Successors:  66 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  63 [71.0%]  (true,exec) 64 [71.0%]  (true,exec) 65 [50.0%]  (true,exec)
Successors:  67 [29.0%]  (true,exec) 70 [71.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [29.0%]  (true,exec)
Successors:  68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  70 [100.0%]  (fallthru,exec)

Basic block 69 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec)
Successors:  70 [100.0%]  (fallthru,exec)

Basic block 70 (new, reachable)
Predecessors:  65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec)
Successors:  73 [15.0%]  (true,exec) 71 [85.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [85.0%]  (false,exec)
Successors:  73 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [50.0%]  (false,exec)
Successors:  73 [100.0%]  (fallthru,exec)

Basic block 73 (new, reachable)
Predecessors:  70 [15.0%]  (true,exec) 71 [50.0%]  (true,exec) 72 [100.0%]  (fallthru,exec)
Successors:  74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [50.0%]  (true,exec)
Successors:  75 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [29.0%]  (true,exec)
Successors:  76 [100.0%]  (fallthru,exec)

Basic block 76 (new, reachable)
Predecessors:  73 [50.0%]  (false,exec) 74 [71.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
Successors:  77 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [85.0%]  (true,exec)
Successors:  78 [73.0%]  (true,exec) 79 [27.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [73.0%]  (true,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 79 (new, reachable)
Predecessors:  77 [27.0%]  (false,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 80 (new, reachable)
Predecessors:  76 [15.0%]  (false,exec) 78 [100.0%]  (fallthru,exec) 79 [100.0%]  (fallthru,exec)
Successors:  81 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [29.0%]  (true,exec)
Successors:  84 [15.0%]  (true,exec) 82 [85.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [85.0%]  (false,exec)
Successors:  84 [50.0%]  (true,exec) 83 [50.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [50.0%]  (false,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [15.0%]  (true,exec) 82 [50.0%]  (true,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  88 [15.0%]  (true,exec) 86 [85.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [85.0%]  (false,exec)
Successors:  88 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [50.0%]  (false,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 88 (new, reachable)
Predecessors:  85 [15.0%]  (true,exec) 86 [50.0%]  (true,exec) 87 [100.0%]  (fallthru,exec)
Successors:  89 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [50.0%]  (true,exec)
Successors:  90 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [50.0%]  (true,exec)
Successors:  91 [51.2%]  (true,exec) 92 [48.8%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [51.2%]  (true,exec)
Successors:  92 [100.0%]  (fallthru,exec)

Basic block 92 (new, reachable)
Predecessors:  84 [50.0%]  (false,exec) 88 [50.0%]  (false,exec) 89 [50.0%]  (false,exec) 90 [48.8%]  (false,exec) 91 [100.0%]  (fallthru,exec)
Successors:  94 [27.0%]  (true,exec) 93 [73.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [73.0%]  (false,exec)
Successors:  94 [28.0%]  (true,exec) 105 [72.0%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  92 [27.0%]  (true,exec) 93 [28.0%]  (true,exec)
Successors:  97 [15.0%]  (true,exec) 95 [85.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [85.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [100.0%]  (fallthru,exec)

Basic block 97 (new, reachable)
Predecessors:  94 [15.0%]  (true,exec) 95 [50.0%]  (true,exec) 96 [100.0%]  (fallthru,exec)
Successors:  98 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 98 (new, reachable)
Predecessors:  97 [50.0%]  (true,exec)
Successors:  101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [85.0%]  (false,exec)
Successors:  101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [50.0%]  (false,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 101 (new, reachable)
Predecessors:  98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
Successors:  102 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [50.0%]  (true,exec)
Successors:  103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  102 [50.0%]  (true,exec)
Successors:  104 [51.2%]  (true,exec) 105 [48.8%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [51.2%]  (true,exec)
Successors:  105 [100.0%]  (fallthru,exec)

Basic block 105 (new, reachable)
Predecessors:  80 [71.0%]  (false,exec) 93 [72.0%]  (false,exec) 97 [50.0%]  (false,exec) 101 [50.0%]  (false,exec) 102 [50.0%]  (false,exec) 103 [48.8%]  (false,exec) 104 [100.0%]  (fallthru,exec)
Successors:  106 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [29.0%]  (true,exec)
Successors:  107 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [50.0%]  (true,exec)
Successors:  116 [100.0%]  (fallthru)

Basic block 108 (new, reachable)
Predecessors:  116 [90.0%]  (true,exec)
Successors:  110 [28.0%]  (true,exec) 109 [72.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [72.0%]  (false,exec)
Successors:  110 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

Basic block 110 (new, reachable)
Predecessors:  108 [28.0%]  (true,exec) 109 [28.0%]  (true,exec)
Successors:  113 [15.0%]  (true,exec) 111 [85.0%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  110 [85.0%]  (false,exec)
Successors:  113 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

Basic block 112 (new, reachable)
Predecessors:  111 [50.0%]  (false,exec)
Successors:  113 [100.0%]  (fallthru,exec)

Basic block 113 (new, reachable)
Predecessors:  110 [15.0%]  (true,exec) 111 [50.0%]  (true,exec) 112 [100.0%]  (fallthru,exec)
Successors:  114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 115 (new, reachable)
Predecessors:  109 [72.0%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
Successors:  116 [100.0%]  (fallthru,dfs_back,exec)

Basic block 116 (new, reachable)
Predecessors:  107 [100.0%]  (fallthru) 115 [100.0%]  (fallthru,dfs_back,exec)
Successors:  108 [90.0%]  (true,exec) 117 [10.0%]  (false,exec)

Basic block 117 (new, reachable)
Predecessors:  105 [71.0%]  (false,exec) 106 [50.0%]  (false,exec) 116 [10.0%]  (false,exec)
Successors:  118 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [29.0%]  (true,exec)
Successors:  119 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

Basic block 119 (new, reachable)
Predecessors:  118 [29.0%]  (true,exec)
Successors:  120 [100.0%]  (fallthru,exec)

Basic block 120 (new, reachable)
Predecessors:  117 [71.0%]  (false,exec) 118 [71.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
Successors:  121 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [85.0%]  (true,exec)
Successors:  122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [50.0%]  (true,exec)
Successors:  123 [100.0%]  (fallthru,exec)

Basic block 123 (new, reachable)
Predecessors:  121 [50.0%]  (false,exec) 122 [100.0%]  (fallthru,exec)
Successors:  125 [28.0%]  (true,exec) 124 [72.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [72.0%]  (false,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 125 (new, reachable)
Predecessors:  123 [28.0%]  (true,exec) 124 [100.0%]  (fallthru,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  120 [15.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
Successors:  127 [50.0%]  (true,exec) 128 [50.0%]  (false,exec)

Basic block 127 (new, reachable)
Predecessors:  126 [50.0%]  (true,exec)
Successors:  128 [100.0%]  (fallthru,exec)

Basic block 128 (new, reachable)
Predecessors:  126 [50.0%]  (false,exec) 127 [100.0%]  (fallthru,exec)
Successors:  129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [29.0%]  (true,exec)
Successors:  130 [100.0%]  (fallthru,exec)

Basic block 130 (new, reachable)
Predecessors:  128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
Successors:  131 [69.8%]  (true,exec) 132 [30.2%]  (false,exec)

Basic block 131 (new, reachable)
Predecessors:  130 [69.8%]  (true,exec)
Successors:  132 [100.0%]  (fallthru,exec)

Basic block 132 (new, reachable)
Predecessors:  130 [30.2%]  (false,exec) 131 [100.0%]  (fallthru,exec)
Successors:  135 [15.0%]  (true,exec) 133 [85.0%]  (false,exec)

Basic block 133 (new, reachable)
Predecessors:  132 [85.0%]  (false,exec)
Successors:  135 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [50.0%]  (false,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 135 (new, reachable)
Predecessors:  132 [15.0%]  (true,exec) 133 [50.0%]  (true,exec) 134 [100.0%]  (fallthru,exec)
Successors:  136 [39.0%]  (true,exec) 137 [61.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [39.0%]  (true,exec)
Successors:  137 [100.0%]  (fallthru,exec)

Basic block 137 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 135 [61.0%]  (false,exec) 136 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


generate_m.isra.4 (struct switch_core_session_t * session, char * buf, size_t buflen, switch_port_t port, const char * family, const char * ip, int cur_ptime, const char * append_audio, const char * sr, int use_cng, int cng_type, struct switch_event_t * map, int secure)
{
  size_t D.47711;
  char * D.47710;
  size_t D.47709;
  size_t D.47708;
  int D.47707;
  int iftmp.40;
  struct switch_channel_t * D.47705;
  switch_call_direction_t D.47704;
  switch_rtp_crypto_key_type_t D.47703;
  const char * D.47702;
  const int D.47701;
  char * const D.47700;
  int D.47699;
  int D.47698;
  const switch_codec_type_t D.47697;
  switch_payload_t D.47696;
  signed char D.47695;
  int D.47694;
  int D.47693;
  size_t D.47692;
  char * D.47691;
  size_t D.47690;
  size_t D.47689;
  struct switch_core_media_params_t * D.47688;
  int D.47687;
  switch_core_media_dtmf_t D.47686;
  switch_payload_t D.47685;
  size_t D.47684;
  char * D.47683;
  size_t D.47682;
  size_t D.47681;
  int D.47680;
  int32_t D.47679;
  _Bool D.47678;
  _Bool D.47677;
  _Bool D.47676;
  size_t D.47675;
  char * D.47674;
  size_t D.47673;
  size_t D.47672;
  size_t D.47671;
  char * D.47670;
  size_t D.47669;
  size_t D.47668;
  const int D.47667;
  const switch_codec_type_t D.47666;
  char * const D.47665;
  int D.47664;
  int D.47663;
  const uint32_t D.47662;
  const int D.47661;
  char * D.47660;
  uint32_t D.47659;
  const uint8_t D.47658;
  int D.47657;
  size_t D.47656;
  char * D.47655;
  size_t D.47654;
  size_t D.47653;
  size_t D.47652;
  char * D.47651;
  size_t D.47650;
  size_t D.47649;
  size_t D.47648;
  char * D.47647;
  size_t D.47646;
  size_t D.47645;
  int32_t D.47644;
  uint32_t D.47643;
  uint32_t D.47642;
  size_t D.47641;
  char * D.47640;
  size_t D.47639;
  size_t D.47638;
  size_t D.47637;
  char * D.47636;
  size_t D.47635;
  size_t D.47634;
  char * D.47633;
  size_t D.47632;
  char * D.47631;
  size_t D.47630;
  size_t D.47629;
  char[192] * D.47628;
  char * D.47627;
  int8_t D.47626;
  size_t D.47625;
  char * D.47624;
  size_t D.47623;
  size_t D.47622;
  size_t D.47621;
  char * D.47620;
  size_t D.47619;
  size_t D.47618;
  size_t D.47617;
  char * D.47616;
  size_t D.47615;
  size_t D.47614;
  int D.47613;
  uint8_t D.47612;
  size_t D.47611;
  char * D.47610;
  size_t D.47609;
  size_t D.47608;
  uint32_t D.47607;
  char * D.47606;
  size_t D.47605;
  char * D.47604;
  size_t D.47603;
  size_t D.47602;
  char * D.47601;
  size_t D.47600;
  char * D.47599;
  size_t D.47598;
  size_t D.47597;
  size_t D.47596;
  char * D.47595;
  size_t D.47594;
  size_t D.47593;
  size_t D.47592;
  char * D.47591;
  size_t D.47590;
  size_t D.47589;
  char * D.47588;
  size_t D.47587;
  char * D.47586;
  size_t D.47585;
  size_t D.47584;
  char * D.47583;
  size_t D.47582;
  char * D.47581;
  size_t D.47580;
  size_t D.47579;
  char * D.47578;
  char * D.47577;
  switch_port_t D.47576;
  int D.47575;
  char * D.47574;
  int D.47573;
  switch_port_t D.47572;
  size_t D.47571;
  char * D.47570;
  size_t D.47569;
  size_t D.47568;
  int D.47567;
  switch_call_direction_t D.47566;
  size_t D.47565;
  char * D.47564;
  size_t D.47563;
  size_t D.47562;
  int D.47561;
  int D.47560;
  char * D.47559;
  int D.47558;
  switch_port_t D.47557;
  size_t D.47556;
  char * D.47555;
  size_t D.47554;
  size_t D.47553;
  int D.47552;
  uint32_t D.47551;
  switch_rtp_crypto_key_type_t D.47550;
  char * D.47549;
  size_t D.47548;
  char * D.47547;
  size_t D.47546;
  size_t D.47545;
  int32_t D.47544;
  size_t D.47543;
  char * D.47542;
  size_t D.47541;
  size_t D.47540;
  size_t D.47539;
  char * D.47538;
  size_t D.47537;
  size_t D.47536;
  char * iftmp.41;
  const char D.47534;
  size_t D.47533;
  unsigned int D.47532;
  const char D.47531;
  size_t D.47530;
  char * D.47529;
  size_t D.47528;
  size_t D.47527;
  size_t D.47526;
  char * D.47525;
  size_t D.47524;
  size_t D.47523;
  size_t D.47522;
  char * D.47521;
  size_t D.47520;
  size_t D.47519;
  int i;
  int rate;
  int already_did[128];
  int ptime;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  static const char __func__[11] = "generate_m";
  const struct switch_codec_implementation_t * imp;
  int this_ptime;
  const struct switch_codec_implementation_t * imp;
  char * fmtp;
  int this_ptime;
  char key[128];
  char * check;
  int channels;
  char tmp1[11];
  char tmp2[11];
  int i;
  switch_rtp_crypto_key_type_t j;
  int D.47518;
  const char D.47517;
  int D.47516;
  const char D.47515;
  int D.47514;
  const char D.47513;
  int D.47512;
  const char D.47511;
  int D.47510;
  const char D.47509;
  int D.47508;
  const char D.47507;
  int D.47506;
  const char D.47505;
  static const char __func__[11] = "generate_m";
  static const char __PRETTY_FUNCTION__[11] = "generate_m";

  # BLOCK 138 freq:218
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # SUCC: 2 [100.0%]  (fallthru)

  # BLOCK 2 freq:218
  # PRED: 138 [100.0%]  (fallthru)
  # DEBUG i => 0
  already_did = {};
  # DEBUG ptime => 0
  # DEBUG noptime => 0
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:218
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 137>;
  else
    goto <bb 5>;
  # SUCC: 137 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:196
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#4 => &smh_2->engines
  # DEBUG a_engine => D#4
  D.47711_4 = strlen (buf_3(D));
  D.47710_5 = buf_3(D) + D.47711_4;
  D.47709_6 = strlen (buf_3(D));
  D.47708_8 = buflen_7(D) - D.47709_6;
  D.47707_10 = (int) port_9(D);
  if (secure_11(D) != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 6 freq:57
  # PRED: 5 [29.0%]  (true,exec)
  D.47705_12 = session_1(D)->channel;
  D.47704_13 = switch_channel_direction (D.47705_12);
  if (D.47704_13 == 1)
    goto <bb 9>;
  else
    goto <bb 7>;
  # SUCC: 9 [28.0%]  (true,exec) 7 [72.0%]  (false,exec)

  # BLOCK 7 freq:180
  # PRED: 5 [71.0%]  (false,exec) 6 [72.0%]  (false,exec)
  D.47703_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (D.47703_14 != 9)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [72.0%]  (true,exec) 9 [28.0%]  (false,exec)

  # BLOCK 8 freq:130
  # PRED: 7 [72.0%]  (true,exec)
  # SUCC: 9 [100.0%]  (fallthru)

  # BLOCK 9 freq:196
  # PRED: 6 [28.0%]  (true,exec) 7 [28.0%]  (false,exec) 8 [100.0%]  (fallthru)
  # iftmp.40_15 = PHI <1(6), 0(7), 1(8)>
  D.47702_16 = get_media_profile_name (session_1(D), iftmp.40_15);
  switch_snprintf (D.47710_5, D.47708_8, "m=audio %d %s", D.47707_10, D.47702_16);
  # DEBUG i => 0
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9804
  # PRED: 26 [98.0%]  (true,exec)
  imp_18 = smh_2->codecs[i_17];
  # DEBUG imp => imp_18
  D.47701_19 = imp_18->microseconds_per_packet;
  this_ptime_20 = D.47701_19 / 1000;
  # DEBUG this_ptime => this_ptime_20
  D.47700_21 = imp_18->iananame;
  D.47699_22 = strcasecmp (D.47700_21, "ilbc");
  if (D.47699_22 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4902
  # PRED: 10 [50.0%]  (false,exec)
  D.47700_23 = imp_18->iananame;
  D.47698_24 = strcasecmp (D.47700_23, "isac");
  if (D.47698_24 == 0)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

  # BLOCK 12 freq:7353
  # PRED: 10 [50.0%]  (true,exec) 11 [50.0%]  (true,exec)
  # DEBUG this_ptime => 20
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:9804
  # PRED: 11 [50.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
  # this_ptime_28 = PHI <this_ptime_20(11), 20(12)>
  # DEBUG this_ptime => this_ptime_28
  D.47697_25 = imp_18->codec_type;
  if (D.47697_25 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 14 freq:4902
  # PRED: 13 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:4902
  # PRED: 13 [50.0%]  (false,exec)
  if (cur_ptime_26(D) == 0)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 16 freq:2451
  # PRED: 15 [50.0%]  (true,exec)
  if (ptime_27 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;
  # SUCC: 17 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 17 freq:1225
  # PRED: 16 [50.0%]  (true,exec)
  # DEBUG ptime => this_ptime_28
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:2451
  # PRED: 15 [50.0%]  (false,exec)
  if (cur_ptime_26(D) != this_ptime_28)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [72.0%]  (true,exec) 20 [28.0%]  (false,exec)

  # BLOCK 19 freq:1765
  # PRED: 18 [72.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:3137
  # PRED: 16 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec) 18 [28.0%]  (false,exec)
  # ptime_340 = PHI <ptime_27(16), this_ptime_28(17), ptime_27(18)>
  # DEBUG ptime => ptime_340
  D.47696_29 = smh_2->ianacodes[i_17];
  D.47695_30 = (signed char) D.47696_29;
  if (D.47695_30 >= 0)
    goto <bb 21>;
  else
    goto <bb 24>;
  # SUCC: 21 [86.9%]  (true,exec) 24 [13.1%]  (false,exec)

  # BLOCK 21 freq:2726
  # PRED: 20 [86.9%]  (true,exec)
  D.47696_31 = smh_2->ianacodes[i_17];
  D.47694_32 = (int) D.47696_31;
  D.47693_33 = already_did[D.47694_32];
  if (D.47693_33 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 22 freq:1363
  # PRED: 21 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:1363
  # PRED: 21 [50.0%]  (false,exec)
  D.47696_34 = smh_2->ianacodes[i_17];
  D.47694_35 = (int) D.47696_34;
  already_did[D.47694_35] = 1;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:1774
  # PRED: 20 [13.1%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  D.47692_36 = strlen (buf_3(D));
  D.47691_37 = buf_3(D) + D.47692_36;
  D.47690_38 = strlen (buf_3(D));
  D.47689_39 = buflen_7(D) - D.47690_38;
  D.47696_40 = smh_2->ianacodes[i_17];
  D.47694_41 = (int) D.47696_40;
  switch_snprintf (D.47691_37, D.47689_39, " %d", D.47694_41);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:9804
  # PRED: 14 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec)
  # ptime_341 = PHI <ptime_27(14), ptime_27(19), ptime_340(22), ptime_340(24)>
  # DEBUG ptime => ptime_341
  i_42 = i_17 + 1;
  # DEBUG i => i_42
  # SUCC: 26 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 26 freq:10000
  # PRED: 9 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
  # i_17 = PHI <0(9), i_42(25)>
  # ptime_27 = PHI <0(9), ptime_341(25)>
  # DEBUG ptime => ptime_27
  # DEBUG i => i_17
  D.47688_43 = smh_2->mparams;
  D.47687_44 = D.47688_43->num_codecs;
  if (i_17 < D.47687_44)
    goto <bb 10>;
  else
    goto <bb 27>;
  # SUCC: 10 [98.0%]  (true,exec) 27 [2.0%]  (false,exec)

  # BLOCK 27 freq:196
  # PRED: 26 [2.0%]  (false,exec)
  D.47688_45 = smh_2->mparams;
  D.47686_46 = D.47688_45->dtmf_type;
  if (D.47686_46 == 0)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 28 freq:98
  # PRED: 27 [50.0%]  (true,exec)
  D.47688_47 = smh_2->mparams;
  D.47685_48 = D.47688_47->te;
  if (D.47685_48 > 95)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 29 freq:28
  # PRED: 28 [29.0%]  (true,exec)
  D.47684_49 = strlen (buf_3(D));
  D.47683_50 = buf_3(D) + D.47684_49;
  D.47682_51 = strlen (buf_3(D));
  D.47681_52 = buflen_7(D) - D.47682_51;
  D.47688_53 = smh_2->mparams;
  D.47685_54 = D.47688_53->te;
  D.47680_55 = (int) D.47685_54;
  switch_snprintf (D.47683_50, D.47681_52, " %d", D.47680_55);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:196
  # PRED: 27 [50.0%]  (false,exec) 28 [71.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
  D.47679_56 = switch_media_handle_test_media_flag (smh_2, 9);
  if (D.47679_56 == 0)
    goto <bb 31>;
  else
    goto <bb 33>;
  # SUCC: 31 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 31 freq:98
  # PRED: 30 [50.0%]  (true,exec)
  D.47678_58 = cng_type_57(D) != 0;
  D.47677_60 = use_cng_59(D) != 0;
  D.47676_61 = D.47678_58 && D.47677_60;
  if (D.47676_61 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [29.0%]  (true,exec) 33 [71.0%]  (false,exec)

  # BLOCK 32 freq:28
  # PRED: 31 [29.0%]  (true,exec)
  D.47675_62 = strlen (buf_3(D));
  D.47674_63 = buf_3(D) + D.47675_62;
  D.47673_64 = strlen (buf_3(D));
  D.47672_65 = buflen_7(D) - D.47673_64;
  switch_snprintf (D.47674_63, D.47672_65, " %d", cng_type_57(D));
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:196
  # PRED: 30 [50.0%]  (false,exec) 31 [71.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
  D.47671_66 = strlen (buf_3(D));
  D.47670_67 = buf_3(D) + D.47671_66;
  D.47669_68 = strlen (buf_3(D));
  D.47668_69 = buflen_7(D) - D.47669_68;
  switch_snprintf (D.47670_67, D.47668_69, "\n");
  memset (&already_did, 0, 512);
  # DEBUG i => 0
  goto <bb 62>;
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:9804
  # PRED: 62 [98.0%]  (true,exec)
  imp_71 = smh_2->codecs[i_70];
  # DEBUG imp => imp_71
  fmtp_72 = imp_71->fmtp;
  # DEBUG fmtp => fmtp_72
  D.47667_73 = imp_71->microseconds_per_packet;
  this_ptime_74 = D.47667_73 / 1000;
  # DEBUG this_ptime => this_ptime_74
  D.47666_75 = imp_71->codec_type;
  if (D.47666_75 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 35 freq:4902
  # PRED: 34 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:4902
  # PRED: 34 [50.0%]  (false,exec)
  D.47665_76 = imp_71->iananame;
  D.47664_77 = strcasecmp (D.47665_76, "ilbc");
  if (D.47664_77 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 37 freq:2451
  # PRED: 36 [50.0%]  (false,exec)
  D.47665_78 = imp_71->iananame;
  D.47663_79 = strcasecmp (D.47665_78, "isac");
  if (D.47663_79 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 38 freq:3676
  # PRED: 36 [50.0%]  (true,exec) 37 [50.0%]  (true,exec)
  # DEBUG this_ptime => 20
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:4902
  # PRED: 37 [50.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
  # this_ptime_81 = PHI <this_ptime_74(37), 20(38)>
  # DEBUG this_ptime => this_ptime_81
  if (cur_ptime_26(D) == 0)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 40 freq:2451
  # PRED: 39 [50.0%]  (true,exec)
  if (ptime_80 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 41 freq:1225
  # PRED: 40 [50.0%]  (true,exec)
  # DEBUG ptime => this_ptime_81
  goto <bb 44>;
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:2451
  # PRED: 39 [50.0%]  (false,exec)
  if (cur_ptime_26(D) != this_ptime_81)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [72.0%]  (true,exec) 44 [28.0%]  (false,exec)

  # BLOCK 43 freq:1765
  # PRED: 42 [72.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:3137
  # PRED: 40 [50.0%]  (false,exec) 41 [100.0%]  (fallthru,exec) 42 [28.0%]  (false,exec)
  # ptime_342 = PHI <ptime_80(40), this_ptime_81(41), ptime_80(42)>
  # DEBUG ptime => ptime_342
  D.47696_82 = smh_2->ianacodes[i_70];
  D.47695_83 = (signed char) D.47696_82;
  if (D.47695_83 >= 0)
    goto <bb 45>;
  else
    goto <bb 48>;
  # SUCC: 45 [73.0%]  (true,exec) 48 [27.0%]  (false,exec)

  # BLOCK 45 freq:2290
  # PRED: 44 [73.0%]  (true,exec)
  D.47696_84 = smh_2->ianacodes[i_70];
  D.47694_85 = (int) D.47696_84;
  D.47693_86 = already_did[D.47694_85];
  if (D.47693_86 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

  # BLOCK 46 freq:1145
  # PRED: 45 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1145
  # PRED: 45 [50.0%]  (false,exec)
  D.47696_87 = smh_2->ianacodes[i_70];
  D.47694_88 = (int) D.47696_87;
  already_did[D.47694_88] = 1;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:1992
  # PRED: 44 [27.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  D.47662_89 = imp_71->samples_per_second;
  rate_90 = (int) D.47662_89;
  # DEBUG rate => rate_90
  if (map_91(D) != 0B)
    goto <bb 49>;
  else
    goto <bb 52>;
  # SUCC: 49 [69.8%]  (true,exec) 52 [30.2%]  (false,exec)

  # BLOCK 49 freq:1391
  # PRED: 48 [69.8%]  (true,exec)
  key = "";
  # DEBUG check => 0B
  D.47665_92 = imp_71->iananame;
  D.47661_93 = imp_71->bits_per_second;
  switch_snprintf (&key, 128, "%s:%u", D.47665_92, D.47661_93);
  check_94 = switch_event_get_header_idx (map_91(D), &key, -1);
  # DEBUG check => check_94
  if (check_94 != 0B)
    goto <bb 51>;
  else
    goto <bb 50>;
  # SUCC: 51 [93.3%]  (true,exec) 50 [6.7%]  (false,exec)

  # BLOCK 50 freq:93
  # PRED: 49 [6.7%]  (false,exec)
  D.47665_95 = imp_71->iananame;
  check_96 = switch_event_get_header_idx (map_91(D), D.47665_95, -1);
  # DEBUG check => check_96
  if (check_96 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [85.0%]  (true,exec) 52 [15.0%]  (false,exec)

  # BLOCK 51 freq:1377
  # PRED: 49 [93.3%]  (true,exec) 50 [85.0%]  (true,exec)
  # check_343 = PHI <check_94(49), check_96(50)>
  # DEBUG check => check_343
  # DEBUG fmtp => check_343
  # SUCC: 52 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:1992
  # PRED: 48 [30.2%]  (false,exec) 50 [15.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
  # fmtp_344 = PHI <fmtp_72(48), fmtp_72(50), check_343(51)>
  # DEBUG fmtp => fmtp_344
  D.47660_97 = smh_2->fmtps[i_70];
  if (D.47660_97 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;
  # SUCC: 53 [85.0%]  (true,exec) 54 [15.0%]  (false,exec)

  # BLOCK 53 freq:1693
  # PRED: 52 [85.0%]  (true,exec)
  fmtp_98 = smh_2->fmtps[i_70];
  # DEBUG fmtp => fmtp_98
  # SUCC: 54 [100.0%]  (fallthru,exec)

  # BLOCK 54 freq:1992
  # PRED: 52 [15.0%]  (false,exec) 53 [100.0%]  (fallthru,exec)
  # fmtp_120 = PHI <fmtp_344(52), fmtp_98(53)>
  # DEBUG fmtp => fmtp_120
  D.47696_99 = smh_2->ianacodes[i_70];
  if (D.47696_99 > 95)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 55 freq:996
  # PRED: 54 [50.0%]  (false,exec)
  D.47705_100 = session_1(D)->channel;
  D.47659_101 = switch_channel_test_flag (D.47705_100, 110);
  if (D.47659_101 != 0)
    goto <bb 56>;
  else
    goto <bb 59>;
  # SUCC: 56 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

  # BLOCK 56 freq:1494
  # PRED: 54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
  D.47665_102 = imp_71->iananame;
  D.47658_103 = imp_71->number_of_channels;
  D.47657_104 = (int) D.47658_103;
  channels_105 = get_channels (D.47665_102, D.47657_104);
  # DEBUG channels => channels_105
  if (channels_105 > 1)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [73.0%]  (true,exec) 58 [27.0%]  (false,exec)

  # BLOCK 57 freq:1091
  # PRED: 56 [73.0%]  (true,exec)
  D.47656_106 = strlen (buf_3(D));
  D.47655_107 = buf_3(D) + D.47656_106;
  D.47654_108 = strlen (buf_3(D));
  D.47653_109 = buflen_7(D) - D.47654_108;
  D.47696_110 = smh_2->ianacodes[i_70];
  D.47694_111 = (int) D.47696_110;
  D.47665_112 = imp_71->iananame;
  switch_snprintf (D.47655_107, D.47653_109, "a=rtpmap:%d %s/%d/%d\n", D.47694_111, D.47665_112, rate_90, channels_105);
  goto <bb 59>;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:403
  # PRED: 56 [27.0%]  (false,exec)
  D.47652_113 = strlen (buf_3(D));
  D.47651_114 = buf_3(D) + D.47652_113;
  D.47650_115 = strlen (buf_3(D));
  D.47649_116 = buflen_7(D) - D.47650_115;
  D.47696_117 = smh_2->ianacodes[i_70];
  D.47694_118 = (int) D.47696_117;
  D.47665_119 = imp_71->iananame;
  switch_snprintf (D.47651_114, D.47649_116, "a=rtpmap:%d %s/%d\n", D.47694_118, D.47665_119, rate_90);
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:1992
  # PRED: 55 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
  if (fmtp_120 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

  # BLOCK 60 freq:1391
  # PRED: 59 [69.8%]  (true,exec)
  D.47648_121 = strlen (buf_3(D));
  D.47647_122 = buf_3(D) + D.47648_121;
  D.47646_123 = strlen (buf_3(D));
  D.47645_124 = buflen_7(D) - D.47646_123;
  D.47696_125 = smh_2->ianacodes[i_70];
  D.47694_126 = (int) D.47696_125;
  switch_snprintf (D.47647_122, D.47645_124, "a=fmtp:%d %s\n", D.47694_126, fmtp_120);
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:9804
  # PRED: 35 [100.0%]  (fallthru,exec) 43 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
  # ptime_345 = PHI <ptime_80(35), ptime_80(43), ptime_342(46), ptime_342(59), ptime_342(60)>
  # DEBUG ptime => ptime_345
  i_127 = i_70 + 1;
  # DEBUG i => i_127
  # SUCC: 62 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 62 freq:10000
  # PRED: 33 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
  # i_70 = PHI <0(33), i_127(61)>
  # ptime_80 = PHI <ptime_27(33), ptime_345(61)>
  # DEBUG ptime => ptime_80
  # DEBUG i => i_70
  D.47688_128 = smh_2->mparams;
  D.47687_129 = D.47688_128->num_codecs;
  if (i_70 < D.47687_129)
    goto <bb 34>;
  else
    goto <bb 63>;
  # SUCC: 34 [98.0%]  (true,exec) 63 [2.0%]  (false,exec)

  # BLOCK 63 freq:196
  # PRED: 62 [2.0%]  (false,exec)
  D.47688_130 = smh_2->mparams;
  D.47686_131 = D.47688_130->dtmf_type;
  if (D.47686_131 == 0)
    goto <bb 66>;
  else
    goto <bb 64>;
  # SUCC: 66 [71.0%]  (true,exec) 64 [29.0%]  (false,exec)

  # BLOCK 64 freq:57
  # PRED: 63 [29.0%]  (false,exec)
  D.47644_132 = switch_media_handle_test_media_flag (smh_2, 8);
  if (D.47644_132 != 0)
    goto <bb 66>;
  else
    goto <bb 65>;
  # SUCC: 66 [71.0%]  (true,exec) 65 [29.0%]  (false,exec)

  # BLOCK 65 freq:16
  # PRED: 64 [29.0%]  (false,exec)
  D.47705_133 = session_1(D)->channel;
  D.47643_134 = switch_channel_test_flag (D.47705_133, 93);
  if (D.47643_134 != 0)
    goto <bb 66>;
  else
    goto <bb 70>;
  # SUCC: 66 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 66 freq:188
  # PRED: 63 [71.0%]  (true,exec) 64 [71.0%]  (true,exec) 65 [50.0%]  (true,exec)
  D.47688_135 = smh_2->mparams;
  D.47685_136 = D.47688_135->te;
  if (D.47685_136 > 95)
    goto <bb 67>;
  else
    goto <bb 70>;
  # SUCC: 67 [29.0%]  (true,exec) 70 [71.0%]  (false,exec)

  # BLOCK 67 freq:54
  # PRED: 66 [29.0%]  (true,exec)
  D.47705_137 = session_1(D)->channel;
  D.47642_138 = switch_channel_test_flag (D.47705_137, 106);
  if (D.47642_138 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;
  # SUCC: 68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

  # BLOCK 68 freq:27
  # PRED: 67 [50.0%]  (true,exec)
  D.47641_139 = strlen (buf_3(D));
  D.47640_140 = buf_3(D) + D.47641_139;
  D.47639_141 = strlen (buf_3(D));
  D.47638_142 = buflen_7(D) - D.47639_141;
  D.47688_143 = smh_2->mparams;
  D.47685_144 = D.47688_143->te;
  D.47680_145 = (int) D.47685_144;
  switch_snprintf (D.47640_140, D.47638_142, "a=rtpmap:%d telephone-event/8000\n", D.47680_145);
  goto <bb 70>;
  # SUCC: 70 [100.0%]  (fallthru,exec)

  # BLOCK 69 freq:27
  # PRED: 67 [50.0%]  (false,exec)
  D.47637_146 = strlen (buf_3(D));
  D.47636_147 = buf_3(D) + D.47637_146;
  D.47635_148 = strlen (buf_3(D));
  D.47634_149 = buflen_7(D) - D.47635_148;
  D.47688_150 = smh_2->mparams;
  D.47685_151 = D.47688_150->te;
  D.47680_152 = (int) D.47685_151;
  switch_snprintf (D.47636_147, D.47634_149, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.47680_152, D.47680_152);
  # SUCC: 70 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:196
  # PRED: 65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec)
  D.47633_153 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
  # DEBUG s => D.47633_153
  if (D.47633_153 == 0B)
    goto <bb 73>;
  else
    goto <bb 71>;
  # SUCC: 73 [15.0%]  (true,exec) 71 [85.0%]  (false,exec)

  # BLOCK 71 freq:167
  # PRED: 70 [85.0%]  (false,exec)
  D.47517_154 = MEM[(const char *)D.47633_153];
  if (D.47517_154 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;
  # SUCC: 73 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 72 freq:83
  # PRED: 71 [50.0%]  (false,exec)
  # SUCC: 73 [100.0%]  (fallthru,exec)

  # BLOCK 73 freq:196
  # PRED: 70 [15.0%]  (true,exec) 71 [50.0%]  (true,exec) 72 [100.0%]  (fallthru,exec)
  # D.47518_155 = PHI <1(70), 1(71), 0(72)>
  if (D.47518_155 == 0)
    goto <bb 74>;
  else
    goto <bb 76>;
  # SUCC: 74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

  # BLOCK 74 freq:98
  # PRED: 73 [50.0%]  (true,exec)
  if (secure_11(D) != 0)
    goto <bb 75>;
  else
    goto <bb 76>;
  # SUCC: 75 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

  # BLOCK 75 freq:28
  # PRED: 74 [29.0%]  (true,exec)
  D.47632_156 = strlen (buf_3(D));
  D.47631_157 = buf_3(D) + D.47632_156;
  D.47630_158 = strlen (buf_3(D));
  D.47629_159 = buflen_7(D) - D.47630_158;
  D.47633_160 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
  D.47628_161 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.str;
  switch_snprintf (D.47631_157, D.47629_159, "a=fingerprint:%s %s\n", D.47633_160, D.47628_161);
  # SUCC: 76 [100.0%]  (fallthru,exec)

  # BLOCK 76 freq:196
  # PRED: 73 [50.0%]  (false,exec) 74 [71.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
  D.47688_162 = smh_2->mparams;
  D.47627_163 = D.47688_162->rtcp_audio_interval_msec;
  if (D.47627_163 != 0B)
    goto <bb 77>;
  else
    goto <bb 80>;
  # SUCC: 77 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

  # BLOCK 77 freq:167
  # PRED: 76 [85.0%]  (true,exec)
  D.47626_164 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  if (D.47626_164 > 0)
    goto <bb 78>;
  else
    goto <bb 79>;
  # SUCC: 78 [73.0%]  (true,exec) 79 [27.0%]  (false,exec)

  # BLOCK 78 freq:122
  # PRED: 77 [73.0%]  (true,exec)
  D.47625_165 = strlen (buf_3(D));
  D.47624_166 = buf_3(D) + D.47625_165;
  D.47623_167 = strlen (buf_3(D));
  D.47622_168 = buflen_7(D) - D.47623_167;
  switch_snprintf (D.47624_166, D.47622_168, "a=rtcp-mux\n");
  D.47621_169 = strlen (buf_3(D));
  D.47620_170 = buf_3(D) + D.47621_169;
  D.47619_171 = strlen (buf_3(D));
  D.47618_172 = buflen_7(D) - D.47619_171;
  D.47707_173 = (int) port_9(D);
  switch_snprintf (D.47620_170, D.47618_172, "a=rtcp:%d IN %s %s\n", D.47707_173, family_174(D), ip_175(D));
  goto <bb 80>;
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:45
  # PRED: 77 [27.0%]  (false,exec)
  D.47617_176 = strlen (buf_3(D));
  D.47616_177 = buf_3(D) + D.47617_176;
  D.47615_178 = strlen (buf_3(D));
  D.47614_179 = buflen_7(D) - D.47615_178;
  D.47707_180 = (int) port_9(D);
  D.47613_181 = D.47707_180 + 1;
  switch_snprintf (D.47616_177, D.47614_179, "a=rtcp:%d IN %s %s\n", D.47613_181, family_174(D), ip_175(D));
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 80 freq:196
  # PRED: 76 [15.0%]  (false,exec) 78 [100.0%]  (fallthru,exec) 79 [100.0%]  (fallthru,exec)
  D.47612_182 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ice_out.cands[0][0].ready;
  if (D.47612_182 != 0)
    goto <bb 81>;
  else
    goto <bb 105>;
  # SUCC: 81 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

  # BLOCK 81 freq:57
  # PRED: 80 [29.0%]  (true,exec)
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  gen_ice (session_1(D), 0, 0B, 0);
  # DEBUG D#5 => &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ice_out
  # DEBUG ice_out => D#5
  D.47611_183 = strlen (buf_3(D));
  D.47610_184 = buf_3(D) + D.47611_183;
  D.47609_185 = strlen (buf_3(D));
  D.47608_186 = buflen_7(D) - D.47609_185;
  D.47607_187 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47606_188 = smh_2->cname;
  switch_snprintf (D.47610_184, D.47608_186, "a=ssrc:%u cname:%s\n", D.47607_187, D.47606_188);
  D.47605_189 = strlen (buf_3(D));
  D.47604_190 = buf_3(D) + D.47605_189;
  D.47603_191 = strlen (buf_3(D));
  D.47602_192 = buflen_7(D) - D.47603_191;
  D.47607_193 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47601_194 = smh_2->msid;
  switch_snprintf (D.47604_190, D.47602_192, "a=ssrc:%u msid:%s a0\n", D.47607_193, D.47601_194);
  D.47600_195 = strlen (buf_3(D));
  D.47599_196 = buf_3(D) + D.47600_195;
  D.47598_197 = strlen (buf_3(D));
  D.47597_198 = buflen_7(D) - D.47598_197;
  D.47607_199 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47601_200 = smh_2->msid;
  switch_snprintf (D.47599_196, D.47597_198, "a=ssrc:%u mslabel:%s\n", D.47607_199, D.47601_200);
  D.47596_201 = strlen (buf_3(D));
  D.47595_202 = buf_3(D) + D.47596_201;
  D.47594_203 = strlen (buf_3(D));
  D.47593_204 = buflen_7(D) - D.47594_203;
  D.47607_205 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47601_206 = smh_2->msid;
  switch_snprintf (D.47595_202, D.47593_204, "a=ssrc:%u label:%sa0\n", D.47607_205, D.47601_206);
  D.47592_207 = strlen (buf_3(D));
  D.47591_208 = buf_3(D) + D.47592_207;
  D.47590_209 = strlen (buf_3(D));
  D.47589_210 = buflen_7(D) - D.47590_209;
  D.47588_211 = MEM[(struct ice_t *)smh_2 + 6480B].ufrag;
  switch_snprintf (D.47591_208, D.47589_210, "a=ice-ufrag:%s\n", D.47588_211);
  D.47587_212 = strlen (buf_3(D));
  D.47586_213 = buf_3(D) + D.47587_212;
  D.47585_214 = strlen (buf_3(D));
  D.47584_215 = buflen_7(D) - D.47585_214;
  D.47583_216 = MEM[(struct ice_t *)smh_2 + 6480B].pwd;
  switch_snprintf (D.47586_213, D.47584_215, "a=ice-pwd:%s\n", D.47583_216);
  D.47582_217 = strlen (buf_3(D));
  D.47581_218 = buf_3(D) + D.47582_217;
  D.47580_219 = strlen (buf_3(D));
  D.47579_220 = buflen_7(D) - D.47580_219;
  D.47578_221 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47577_222 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47576_223 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47575_224 = (int) D.47576_223;
  switch_snprintf (D.47581_218, D.47579_220, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.47578_221, 659136, D.47577_222, D.47575_224);
  D.47574_225 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  # DEBUG s => D.47574_225
  if (D.47574_225 == 0B)
    goto <bb 84>;
  else
    goto <bb 82>;
  # SUCC: 84 [15.0%]  (true,exec) 82 [85.0%]  (false,exec)

  # BLOCK 82 freq:48
  # PRED: 81 [85.0%]  (false,exec)
  D.47515_226 = MEM[(const char *)D.47574_225];
  if (D.47515_226 == 0)
    goto <bb 84>;
  else
    goto <bb 83>;
  # SUCC: 84 [50.0%]  (true,exec) 83 [50.0%]  (false,exec)

  # BLOCK 83 freq:24
  # PRED: 82 [50.0%]  (false,exec)
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:57
  # PRED: 81 [15.0%]  (true,exec) 82 [50.0%]  (true,exec) 83 [100.0%]  (fallthru,exec)
  # D.47516_227 = PHI <1(81), 1(82), 0(83)>
  if (D.47516_227 == 0)
    goto <bb 85>;
  else
    goto <bb 92>;
  # SUCC: 85 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 85 freq:28
  # PRED: 84 [50.0%]  (true,exec)
  D.47577_228 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.47577_228
  if (D.47577_228 == 0B)
    goto <bb 88>;
  else
    goto <bb 86>;
  # SUCC: 88 [15.0%]  (true,exec) 86 [85.0%]  (false,exec)

  # BLOCK 86 freq:24
  # PRED: 85 [85.0%]  (false,exec)
  D.47513_229 = MEM[(const char *)D.47577_228];
  if (D.47513_229 == 0)
    goto <bb 88>;
  else
    goto <bb 87>;
  # SUCC: 88 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

  # BLOCK 87 freq:12
  # PRED: 86 [50.0%]  (false,exec)
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 88 freq:28
  # PRED: 85 [15.0%]  (true,exec) 86 [50.0%]  (true,exec) 87 [100.0%]  (fallthru,exec)
  # D.47514_230 = PHI <1(85), 1(86), 0(87)>
  if (D.47514_230 == 0)
    goto <bb 89>;
  else
    goto <bb 92>;
  # SUCC: 89 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 89 freq:14
  # PRED: 88 [50.0%]  (true,exec)
  D.47574_231 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47577_232 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47573_233 = __builtin_strcmp (D.47574_231, D.47577_232);
  if (D.47573_233 != 0)
    goto <bb 90>;
  else
    goto <bb 92>;
  # SUCC: 90 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 90 freq:7
  # PRED: 89 [50.0%]  (true,exec)
  D.47572_234 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47576_235 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  if (D.47572_234 != D.47576_235)
    goto <bb 91>;
  else
    goto <bb 92>;
  # SUCC: 91 [51.2%]  (true,exec) 92 [48.8%]  (false,exec)

  # BLOCK 91 freq:4
  # PRED: 90 [51.2%]  (true,exec)
  D.47571_236 = strlen (buf_3(D));
  D.47570_237 = buf_3(D) + D.47571_236;
  D.47569_238 = strlen (buf_3(D));
  D.47568_239 = buflen_7(D) - D.47569_238;
  D.47578_240 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47577_241 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47576_242 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47575_243 = (int) D.47576_242;
  D.47574_244 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47572_245 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47567_246 = (int) D.47572_245;
  switch_snprintf (D.47570_237, D.47568_239, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47578_240, 659134, D.47577_241, D.47575_243, D.47574_244, D.47567_246);
  # SUCC: 92 [100.0%]  (fallthru,exec)

  # BLOCK 92 freq:57
  # PRED: 84 [50.0%]  (false,exec) 88 [50.0%]  (false,exec) 89 [50.0%]  (false,exec) 90 [48.8%]  (false,exec) 91 [100.0%]  (fallthru,exec)
  D.47626_247 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  if (D.47626_247 <= 0)
    goto <bb 94>;
  else
    goto <bb 93>;
  # SUCC: 94 [27.0%]  (true,exec) 93 [73.0%]  (false,exec)

  # BLOCK 93 freq:41
  # PRED: 92 [73.0%]  (false,exec)
  D.47705_248 = session_1(D)->channel;
  D.47566_249 = switch_channel_direction (D.47705_248);
  if (D.47566_249 == 1)
    goto <bb 94>;
  else
    goto <bb 105>;
  # SUCC: 94 [28.0%]  (true,exec) 105 [72.0%]  (false,exec)

  # BLOCK 94 freq:27
  # PRED: 92 [27.0%]  (true,exec) 93 [28.0%]  (true,exec)
  D.47565_250 = strlen (buf_3(D));
  D.47564_251 = buf_3(D) + D.47565_250;
  D.47563_252 = strlen (buf_3(D));
  D.47562_253 = buflen_7(D) - D.47563_252;
  D.47578_254 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47577_255 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47576_256 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47575_257 = (int) D.47576_256;
  D.47626_258 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47561_259 = D.47626_258 <= 0;
  D.47560_260 = D.47575_257 + D.47561_259;
  switch_snprintf (D.47564_251, D.47562_253, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.47578_254, 659136, D.47577_255, D.47560_260);
  D.47574_261 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  # DEBUG s => D.47574_261
  if (D.47574_261 == 0B)
    goto <bb 97>;
  else
    goto <bb 95>;
  # SUCC: 97 [15.0%]  (true,exec) 95 [85.0%]  (false,exec)

  # BLOCK 95 freq:23
  # PRED: 94 [85.0%]  (false,exec)
  D.47511_262 = MEM[(const char *)D.47574_261];
  if (D.47511_262 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:11
  # PRED: 95 [50.0%]  (false,exec)
  # SUCC: 97 [100.0%]  (fallthru,exec)

  # BLOCK 97 freq:27
  # PRED: 94 [15.0%]  (true,exec) 95 [50.0%]  (true,exec) 96 [100.0%]  (fallthru,exec)
  # D.47512_263 = PHI <1(94), 1(95), 0(96)>
  if (D.47512_263 == 0)
    goto <bb 98>;
  else
    goto <bb 105>;
  # SUCC: 98 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 98 freq:13
  # PRED: 97 [50.0%]  (true,exec)
  D.47559_264 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
  # DEBUG s => D.47559_264
  if (D.47559_264 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;
  # SUCC: 101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

  # BLOCK 99 freq:11
  # PRED: 98 [85.0%]  (false,exec)
  D.47509_265 = MEM[(const char *)D.47559_264];
  if (D.47509_265 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;
  # SUCC: 101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

  # BLOCK 100 freq:6
  # PRED: 99 [50.0%]  (false,exec)
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 101 freq:13
  # PRED: 98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
  # D.47510_266 = PHI <1(98), 1(99), 0(100)>
  if (D.47510_266 == 0)
    goto <bb 102>;
  else
    goto <bb 105>;
  # SUCC: 102 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 102 freq:7
  # PRED: 101 [50.0%]  (true,exec)
  D.47574_267 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47559_268 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
  D.47558_269 = __builtin_strcmp (D.47574_267, D.47559_268);
  if (D.47558_269 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;
  # SUCC: 103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 103 freq:3
  # PRED: 102 [50.0%]  (true,exec)
  D.47572_270 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47557_271 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_port;
  if (D.47572_270 != D.47557_271)
    goto <bb 104>;
  else
    goto <bb 105>;
  # SUCC: 104 [51.2%]  (true,exec) 105 [48.8%]  (false,exec)

  # BLOCK 104 freq:2
  # PRED: 103 [51.2%]  (true,exec)
  D.47556_272 = strlen (buf_3(D));
  D.47555_273 = buf_3(D) + D.47556_272;
  D.47554_274 = strlen (buf_3(D));
  D.47553_275 = buflen_7(D) - D.47554_274;
  D.47578_276 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47577_277 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47576_278 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47575_279 = (int) D.47576_278;
  D.47626_280 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47561_281 = D.47626_280 <= 0;
  D.47560_282 = D.47575_279 + D.47561_281;
  D.47574_283 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47572_284 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47567_285 = (int) D.47572_284;
  D.47626_286 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47561_287 = D.47626_286 <= 0;
  D.47552_288 = D.47567_285 + D.47561_287;
  switch_snprintf (D.47555_273, D.47553_275, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47578_276, 659134, D.47577_277, D.47560_282, D.47574_283, D.47552_288);
  # SUCC: 105 [100.0%]  (fallthru,exec)

  # BLOCK 105 freq:196
  # PRED: 80 [71.0%]  (false,exec) 93 [72.0%]  (false,exec) 97 [50.0%]  (false,exec) 101 [50.0%]  (false,exec) 102 [50.0%]  (false,exec) 103 [48.8%]  (false,exec) 104 [100.0%]  (fallthru,exec)
  if (secure_11(D) != 0)
    goto <bb 106>;
  else
    goto <bb 117>;
  # SUCC: 106 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

  # BLOCK 106 freq:57
  # PRED: 105 [29.0%]  (true,exec)
  D.47705_289 = session_1(D)->channel;
  D.47551_290 = switch_channel_test_flag (D.47705_289, 109);
  if (D.47551_290 == 0)
    goto <bb 107>;
  else
    goto <bb 117>;
  # SUCC: 107 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

  # BLOCK 107 freq:28
  # PRED: 106 [50.0%]  (true,exec)
  # i_346 = PHI <0(106)>
  goto <bb 116>;
  # SUCC: 116 [100.0%]  (fallthru)

  # BLOCK 108 freq:256
  # PRED: 116 [90.0%]  (true,exec)
  D.47550_292 = smh_2->crypto_suite_order[i_291];
  j_293 = SUITES[D.47550_292].type;
  # DEBUG j => j_293
  D.47703_294 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (j_293 == D.47703_294)
    goto <bb 110>;
  else
    goto <bb 109>;
  # SUCC: 110 [28.0%]  (true,exec) 109 [72.0%]  (false,exec)

  # BLOCK 109 freq:184
  # PRED: 108 [72.0%]  (false,exec)
  D.47703_295 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (D.47703_295 == 9)
    goto <bb 110>;
  else
    goto <bb 115>;
  # SUCC: 110 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

  # BLOCK 110 freq:123
  # PRED: 108 [28.0%]  (true,exec) 109 [28.0%]  (true,exec)
  D.47549_296 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
  # DEBUG s => D.47549_296
  if (D.47549_296 == 0B)
    goto <bb 113>;
  else
    goto <bb 111>;
  # SUCC: 113 [15.0%]  (true,exec) 111 [85.0%]  (false,exec)

  # BLOCK 111 freq:105
  # PRED: 110 [85.0%]  (false,exec)
  D.47507_297 = MEM[(const char *)D.47549_296];
  if (D.47507_297 == 0)
    goto <bb 113>;
  else
    goto <bb 112>;
  # SUCC: 113 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

  # BLOCK 112 freq:52
  # PRED: 111 [50.0%]  (false,exec)
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 113 freq:123
  # PRED: 110 [15.0%]  (true,exec) 111 [50.0%]  (true,exec) 112 [100.0%]  (fallthru,exec)
  # D.47508_298 = PHI <1(110), 1(111), 0(112)>
  if (D.47508_298 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;
  # SUCC: 114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

  # BLOCK 114 freq:36
  # PRED: 113 [29.0%]  (true,exec)
  D.47548_299 = strlen (buf_3(D));
  D.47547_300 = buf_3(D) + D.47548_299;
  D.47546_301 = strlen (buf_3(D));
  D.47545_302 = buflen_7(D) - D.47546_301;
  D.47549_303 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
  switch_snprintf (D.47547_300, D.47545_302, "a=crypto:%s\n", D.47549_303);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:256
  # PRED: 109 [72.0%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
  i_304 = i_291 + 1;
  # DEBUG i => i_304
  # SUCC: 116 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 116 freq:284
  # PRED: 107 [100.0%]  (fallthru) 115 [100.0%]  (fallthru,dfs_back,exec)
  # i_291 = PHI <i_346(107), i_304(115)>
  # DEBUG i => i_291
  D.47550_305 = smh_2->crypto_suite_order[i_291];
  if (D.47550_305 != 9)
    goto <bb 108>;
  else
    goto <bb 117>;
  # SUCC: 108 [90.0%]  (true,exec) 117 [10.0%]  (false,exec)

  # BLOCK 117 freq:196
  # PRED: 105 [71.0%]  (false,exec) 106 [50.0%]  (false,exec) 116 [10.0%]  (false,exec)
  if (cng_type_57(D) == 0)
    goto <bb 118>;
  else
    goto <bb 120>;
  # SUCC: 118 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

  # BLOCK 118 freq:57
  # PRED: 117 [29.0%]  (true,exec)
  D.47544_306 = switch_media_handle_test_media_flag (smh_2, 9);
  if (D.47544_306 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;
  # SUCC: 119 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

  # BLOCK 119 freq:16
  # PRED: 118 [29.0%]  (true,exec)
  D.47543_307 = strlen (buf_3(D));
  D.47542_308 = buf_3(D) + D.47543_307;
  D.47541_309 = strlen (buf_3(D));
  D.47540_310 = buflen_7(D) - D.47541_309;
  switch_snprintf (D.47542_308, D.47540_310, "a=silenceSupp:off - - - -\n");
  # SUCC: 120 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:196
  # PRED: 117 [71.0%]  (false,exec) 118 [71.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
  if (append_audio_311(D) != 0B)
    goto <bb 121>;
  else
    goto <bb 126>;
  # SUCC: 121 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

  # BLOCK 121 freq:167
  # PRED: 120 [85.0%]  (true,exec)
  D.47539_312 = strlen (buf_3(D));
  D.47538_313 = buf_3(D) + D.47539_312;
  D.47537_314 = strlen (buf_3(D));
  D.47536_315 = buflen_7(D) - D.47537_314;
  D.47534_316 = *append_audio_311(D);
  if (D.47534_316 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;
  # SUCC: 122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

  # BLOCK 122 freq:83
  # PRED: 121 [50.0%]  (true,exec)
  D.47533_317 = strlen (append_audio_311(D));
  D.47532_318 = D.47533_317 + -1;
  append_audio_319 = append_audio_311(D) + D.47532_318;
  # SUCC: 123 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:167
  # PRED: 121 [50.0%]  (false,exec) 122 [100.0%]  (fallthru,exec)
  # append_audio_320 = PHI <append_audio_311(D)(121), append_audio_319(122)>
  D.47531_321 = *append_audio_320;
  if (D.47531_321 == 10)
    goto <bb 125>;
  else
    goto <bb 124>;
  # SUCC: 125 [28.0%]  (true,exec) 124 [72.0%]  (false,exec)

  # BLOCK 124 freq:120
  # PRED: 123 [72.0%]  (false,exec)
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 125 freq:167
  # PRED: 123 [28.0%]  (true,exec) 124 [100.0%]  (fallthru,exec)
  # iftmp.41_322 = PHI <""(123), "\n"(124)>
  switch_snprintf (D.47538_313, D.47536_315, "%s%s", append_audio_311(D), iftmp.41_322);
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:196
  # PRED: 120 [15.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
  if (cur_ptime_26(D) == 0)
    goto <bb 127>;
  else
    goto <bb 128>;
  # SUCC: 127 [50.0%]  (true,exec) 128 [50.0%]  (false,exec)

  # BLOCK 127 freq:98
  # PRED: 126 [50.0%]  (true,exec)
  # DEBUG cur_ptime => ptime_80
  # SUCC: 128 [100.0%]  (fallthru,exec)

  # BLOCK 128 freq:196
  # PRED: 126 [50.0%]  (false,exec) 127 [100.0%]  (fallthru,exec)
  # cur_ptime_323 = PHI <cur_ptime_26(D)(126), ptime_80(127)>
  # DEBUG cur_ptime => cur_ptime_323
  if (cur_ptime_323 != 0)
    goto <bb 129>;
  else
    goto <bb 130>;
  # SUCC: 129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

  # BLOCK 129 freq:57
  # PRED: 128 [29.0%]  (true,exec)
  D.47530_324 = strlen (buf_3(D));
  D.47529_325 = buf_3(D) + D.47530_324;
  D.47528_326 = strlen (buf_3(D));
  D.47527_327 = buflen_7(D) - D.47528_326;
  switch_snprintf (D.47529_325, D.47527_327, "a=ptime:%d\n", cur_ptime_323);
  # SUCC: 130 [100.0%]  (fallthru,exec)

  # BLOCK 130 freq:196
  # PRED: 128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
  local_sdp_audio_zrtp_hash_328 = switch_core_media_get_zrtp_hash (session_1(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_328
  if (local_sdp_audio_zrtp_hash_328 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;
  # SUCC: 131 [69.8%]  (true,exec) 132 [30.2%]  (false,exec)

  # BLOCK 131 freq:137
  # PRED: 130 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_1(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
  D.47526_329 = strlen (buf_3(D));
  D.47525_330 = buf_3(D) + D.47526_329;
  D.47524_331 = strlen (buf_3(D));
  D.47523_332 = buflen_7(D) - D.47524_331;
  switch_snprintf (D.47525_330, D.47523_332, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
  # SUCC: 132 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:196
  # PRED: 130 [30.2%]  (false,exec) 131 [100.0%]  (fallthru,exec)
  # DEBUG s => sr_333(D)
  if (sr_333(D) == 0B)
    goto <bb 135>;
  else
    goto <bb 133>;
  # SUCC: 135 [15.0%]  (true,exec) 133 [85.0%]  (false,exec)

  # BLOCK 133 freq:167
  # PRED: 132 [85.0%]  (false,exec)
  D.47505_334 = *sr_333(D);
  if (D.47505_334 == 0)
    goto <bb 135>;
  else
    goto <bb 134>;
  # SUCC: 135 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

  # BLOCK 134 freq:83
  # PRED: 133 [50.0%]  (false,exec)
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:196
  # PRED: 132 [15.0%]  (true,exec) 133 [50.0%]  (true,exec) 134 [100.0%]  (fallthru,exec)
  # D.47506_335 = PHI <1(132), 1(133), 0(134)>
  if (D.47506_335 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;
  # SUCC: 136 [39.0%]  (true,exec) 137 [61.0%]  (false,exec)

  # BLOCK 136 freq:76
  # PRED: 135 [39.0%]  (true,exec)
  D.47522_336 = strlen (buf_3(D));
  D.47521_337 = buf_3(D) + D.47522_336;
  D.47520_338 = strlen (buf_3(D));
  D.47519_339 = buflen_7(D) - D.47520_338;
  switch_snprintf (D.47521_337, D.47519_339, "a=%s\n", sr_333(D));
  # SUCC: 137 [100.0%]  (fallthru,exec)

  # BLOCK 137 freq:218
  # PRED: 4 [10.1%]  (true,exec) 135 [61.0%]  (false,exec) 136 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_media_handle_ready (switch_core_session_media_handle_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
Predictions for bb 2
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 3
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities

;; Function switch_core_session_media_handle_ready

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 4 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 3 [61.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_media_handle_ready (struct switch_core_session_t * session)
{
  switch_status_t D.46444;
  int D.46440;
  int D.46439;
  smh_flag_t D.46438;
  struct switch_media_handle_t * D.46435;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46435_3 = session_2(D)->media_handle;
  if (D.46435_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [85.0%]  (true,exec) 4 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.46435_4 = session_2(D)->media_handle;
  D.46438_5 = D.46435_4->flags;
  D.46439_6 = (int) D.46438_5;
  D.46440_7 = D.46439_6 & 1;
  if (D.46440_7 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:6685
  # PRED: 2 [15.0%]  (false,exec) 3 [61.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:10000
  # PRED: 3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # D.46444_1 = PHI <0(3), 1(4)>
  return D.46444_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_check_outgoing_crypto (switch_core_session_check_outgoing_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 8 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <0(5), i_13(6)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <0(5), i_13(6)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46672_8 = smh_5->crypto_suite_order[i_1];
 in loop 1.
Statement D.46672_8 = smh_5->crypto_suite_order[i_1];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46672_10 = smh_5->crypto_suite_order[i_1];
 in loop 1.
Statement D.46672_10 = smh_5->crypto_suite_order[i_1];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46672_12 = smh_5->crypto_suite_order[i_1];
 in loop 1.
Statement D.46672_12 = smh_5->crypto_suite_order[i_1];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_13)
(get_scalar_evolution 
  (scalar = i_13)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = i_13)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 5)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_13 = i_1 + 1;
 in loop 1.
Statement i_13 = i_1 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
Predictions for bb 2
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  DS theory heuristics: 80.9%
  first match heuristics (ignored): 73.0%
  combined heuristics: 80.9%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics (ignored): 90.4%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  opcode values nonequal (on trees) heuristics (ignored): 72.0%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 90.0%
1 edges in bb 8 predicted to even probabilities

;; Function switch_core_session_check_outgoing_crypto

;; 
9 basic blocks, 12 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  8 [39.0%]  (true,exec) 3 [61.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [61.0%]  (false,exec)
Successors:  8 [10.1%]  (true,exec) 4 [89.9%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [89.9%]  (false,exec)
Successors:  8 [80.9%]  (true,exec) 5 [19.1%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [19.1%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  7 [90.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,dfs_back,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [90.0%]  (true,exec) 8 [10.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  2 [39.0%]  (true,exec) 3 [10.1%]  (true,exec) 4 [80.9%]  (true,exec) 7 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_session_check_outgoing_crypto (struct switch_core_session_t * session)
{
  int i;
  struct switch_media_handle_t * smh;
  struct switch_channel_t * channel;
  switch_rtp_crypto_key_type_t D.46672;
  struct switch_media_handle_t * D.46671;
  switch_rtp_crypto_mode_t D.46668;
  switch_status_t D.46663;

  # BLOCK 2 freq:9546
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  D.46663_4 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46663_4 != 0)
    goto <bb 8>;
  else
    goto <bb 3>;
  # SUCC: 8 [39.0%]  (true,exec) 3 [61.0%]  (false,exec)

  # BLOCK 3 freq:5823
  # PRED: 2 [61.0%]  (false,exec)
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 8>;
  else
    goto <bb 4>;
  # SUCC: 8 [10.1%]  (true,exec) 4 [89.9%]  (false,exec)

  # BLOCK 4 freq:5233
  # PRED: 3 [89.9%]  (false,exec)
  D.46668_6 = smh_5->crypto_mode;
  if (D.46668_6 > 1)
    goto <bb 8>;
  else
    goto <bb 5>;
  # SUCC: 8 [80.9%]  (true,exec) 5 [19.1%]  (false,exec)

  # BLOCK 5 freq:1000
  # PRED: 4 [19.1%]  (false,exec)
  switch_channel_set_flag_value (channel_3, 92, 1);
  # DEBUG i => 0
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9000
  # PRED: 7 [90.0%]  (true,exec)
  D.46671_9 = session_2(D)->media_handle;
  D.46672_10 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_9, 0, 0, D.46672_10, 0, 0);
  D.46671_11 = session_2(D)->media_handle;
  D.46672_12 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_11, 1, 0, D.46672_12, 0, 0);
  i_13 = i_1 + 1;
  # DEBUG i => i_13
  # SUCC: 7 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 7 freq:10000
  # PRED: 5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <0(5), i_13(6)>
  # DEBUG i => i_1
  D.46672_8 = smh_5->crypto_suite_order[i_1];
  if (D.46672_8 != 9)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [90.0%]  (true,exec) 8 [10.0%]  (false,exec)

  # BLOCK 8 freq:9546
  # PRED: 2 [39.0%]  (true,exec) 3 [10.1%]  (true,exec) 4 [80.9%]  (true,exec) 7 [10.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_get_media_handle (switch_core_session_get_media_handle)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 90.0%
  first match heuristics (ignored): 90.0%
  combined heuristics: 90.0%
  null return heuristics: 90.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_session_get_media_handle

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [90.0%]  (true,exec) 4 [10.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [90.0%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 2 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_session_get_media_handle (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46433;
  switch_status_t D.46430;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46430_3 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46430_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [90.0%]  (true,exec) 4 [10.0%]  (false,exec)

  # BLOCK 3 freq:9000
  # PRED: 2 [90.0%]  (true,exec)
  D.46433_4 = session_2(D)->media_handle;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 3 [100.0%]  (fallthru,exec) 2 [10.0%]  (false,exec)
  # D.46433_1 = PHI <D.46433_4(3), 0B(2)>
  return D.46433_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_clear_media_handle (switch_core_session_clear_media_handle)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_session_clear_media_handle

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_clear_media_handle (struct switch_core_session_t * session)
{
  switch_status_t D.46428;
  struct switch_media_handle_t * D.46425;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46425_3 = session_2(D)->media_handle;
  if (D.46425_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  # D.46428_1 = PHI <1(2), 0(3)>
  return D.46428_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_mparams (switch_core_media_get_mparams)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  early return (on trees) heuristics (ignored): 61.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_media_get_mparams

;; 
5 basic blocks, 4 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_mparams (struct switch_media_handle_t * smh)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_get_mparams";
  struct switch_core_media_params_t * D.46423;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 1545, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.46423_2 = smh_1(D)->mparams;
  return D.46423_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_prepare_codecs (switch_core_media_prepare_codecs)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 27 5 }
;; 5 succs { 6 8 }
;; 6 succs { 27 7 }
;; 7 succs { 27 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 27 11 }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 24 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 19 }
;; 17 succs { 18 19 }
;; 18 succs { 24 }
;; 19 succs { 20 24 }
;; 20 succs { 24 21 }
;; 21 succs { 24 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 11
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 14
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 17
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 20
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 21
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 22
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  DS theory heuristics: 78.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities
1 edges in bb 27 predicted to even probabilities

;; Function switch_core_media_prepare_codecs

;; 
28 basic blocks, 42 edges, last basic block 28.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [29.0%]  (true,exec) 8 [71.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [29.0%]  (true,exec)
Successors:  27 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (false,exec)
Successors:  27 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [71.0%]  (false,exec) 7 [61.0%]  (false,exec)
Successors:  9 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [50.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
Successors:  27 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [61.0%]  (false,exec)
Successors:  12 [0.0%]  (true,exec) 13 [100.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [0.0%]  (true,exec)
Successors: 

Basic block 13 (new, reachable)
Predecessors:  11 [100.0%]  (false,exec)
Successors:  24 [93.3%]  (true,exec) 14 [6.7%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [6.7%]  (false,exec)
Successors:  15 [6.7%]  (true,exec) 16 [93.3%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [6.7%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [93.3%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  17 [93.3%]  (true,exec) 19 [6.7%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [93.3%]  (true,exec)
Successors:  18 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [28.0%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  16 [6.7%]  (false,exec) 17 [72.0%]  (false,exec)
Successors:  20 [85.0%]  (true,exec) 24 [15.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (true,exec)
Successors:  24 [15.0%]  (true,exec) 21 [85.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [85.0%]  (false,exec)
Successors:  24 [71.0%]  (true,exec) 22 [29.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (false,exec)
Successors:  23 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [15.0%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  13 [93.3%]  (true,exec) 18 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec) 21 [71.0%]  (true,exec) 22 [85.0%]  (false,exec) 23 [100.0%]  (fallthru,exec) 20 [15.0%]  (true,exec)
Successors:  25 [78.4%]  (true,exec) 26 [21.6%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [78.4%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [21.6%]  (false,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 7 [39.0%]  (true,exec) 10 [39.0%]  (true,exec) 25 [100.0%]  (fallthru,exec) 26 [100.0%]  (fallthru,exec) 6 [61.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_prepare_codecs (struct switch_core_session_t * session, switch_bool_t force)
{
  char * tmp_codec_string;
  static const char __func__[33] = "switch_core_media_prepare_codecs";
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_prepare_codecs";
  struct switch_media_handle_t * smh;
  const char * ocodec;
  const char * codec_string;
  const char * abs;
  int D.46419;
  int D.46417;
  int D.46416;
  const struct switch_codec_implementation_t *[50] * D.46415;
  int D.46414;
  unsigned int D.46413;
  char *[50] * D.46412;
  switch_core_media_flag_t D.46407;
  const char D.46398;
  struct switch_core_session_t * D.46389;
  int D.46386;
  struct switch_core_media_params_t * D.46385;
  uint32_t D.46382;
  uint32_t D.46380;
  struct switch_channel_t * D.46379;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG codec_string => 0B
  # DEBUG ocodec => 0B
  if (session_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 1555, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_6 = session_5(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;
  # SUCC: 27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  if (force_7(D) == 0)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [29.0%]  (true,exec) 8 [71.0%]  (false,exec)

  # BLOCK 6 freq:2605
  # PRED: 5 [29.0%]  (true,exec)
  D.46379_8 = session_5(D)->channel;
  D.46380_9 = switch_channel_test_flag (D.46379_8, 15);
  if (D.46380_9 != 0)
    goto <bb 27>;
  else
    goto <bb 7>;
  # SUCC: 27 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 7 freq:1015
  # PRED: 6 [39.0%]  (false,exec)
  D.46379_10 = session_5(D)->channel;
  D.46382_11 = switch_channel_test_flag (D.46379_10, 29);
  if (D.46382_11 != 0)
    goto <bb 27>;
  else
    goto <bb 8>;
  # SUCC: 27 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:6997
  # PRED: 5 [71.0%]  (false,exec) 7 [61.0%]  (false,exec)
  if (force_7(D) != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 9 freq:3498
  # PRED: 8 [50.0%]  (true,exec)
  D.46385_12 = smh_6->mparams;
  D.46385_12->num_codecs = 0;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:6997
  # PRED: 8 [50.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
  D.46385_13 = smh_6->mparams;
  D.46386_14 = D.46385_13->num_codecs;
  if (D.46386_14 != 0)
    goto <bb 27>;
  else
    goto <bb 11>;
  # SUCC: 27 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

  # BLOCK 11 freq:4268
  # PRED: 10 [61.0%]  (false,exec)
  smh_6->payload_space = 0;
  D.46389_15 = smh_6->session;
  if (D.46389_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [0.0%]  (true,exec) 13 [100.0%]  (false,exec)

  # BLOCK 12 freq:2
  # PRED: 11 [0.0%]  (true,exec)
  __assert_fail ("smh->session != ((void *)0)", "src/switch_core_media.c", 1575, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 13 freq:4266
  # PRED: 11 [100.0%]  (false,exec)
  D.46379_16 = session_5(D)->channel;
  abs_17 = switch_channel_get_variable_dup (D.46379_16, "absolute_codec_string", 1, -1);
  # DEBUG abs => abs_17
  if (abs_17 != 0B)
    goto <bb 24> (ready);
  else
    goto <bb 14>;
  # SUCC: 24 [93.3%]  (true,exec) 14 [6.7%]  (false,exec)

  # BLOCK 14 freq:287
  # PRED: 13 [6.7%]  (false,exec)
  D.46379_19 = session_5(D)->channel;
  codec_string_20 = switch_channel_get_variable_dup (D.46379_19, "codec_string", 1, -1);
  # DEBUG codec_string => codec_string_20
  if (codec_string_20 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [6.7%]  (true,exec) 16 [93.3%]  (false,exec)

  # BLOCK 15 freq:19
  # PRED: 14 [6.7%]  (true,exec)
  D.46389_21 = smh_6->session;
  codec_string_22 = switch_core_media_get_codec_string (D.46389_21);
  # DEBUG codec_string => codec_string_22
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:287
  # PRED: 14 [93.3%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  # codec_string_1 = PHI <codec_string_20(14), codec_string_22(15)>
  # DEBUG codec_string => codec_string_1
  if (codec_string_1 != 0B)
    goto <bb 17>;
  else
    goto <bb 19>;
  # SUCC: 17 [93.3%]  (true,exec) 19 [6.7%]  (false,exec)

  # BLOCK 17 freq:267
  # PRED: 16 [93.3%]  (true,exec)
  D.46398_23 = *codec_string_1;
  if (D.46398_23 == 61)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

  # BLOCK 18 freq:75
  # PRED: 17 [28.0%]  (true,exec)
  codec_string_24 = codec_string_1 + 1;
  # DEBUG codec_string => codec_string_24
  goto <bb 24> (ready);
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:212
  # PRED: 16 [6.7%]  (false,exec) 17 [72.0%]  (false,exec)
  D.46379_25 = session_5(D)->channel;
  ocodec_26 = switch_channel_get_variable_dup (D.46379_25, "originator_codec", 1, -1);
  # DEBUG ocodec => ocodec_26
  if (ocodec_26 != 0B)
    goto <bb 20>;
  else
    goto <bb 24> (ready);
  # SUCC: 20 [85.0%]  (true,exec) 24 [15.0%]  (false,exec)

  # BLOCK 20 freq:180
  # PRED: 19 [85.0%]  (true,exec)
  if (codec_string_1 == 0B)
    goto <bb 24> (ready);
  else
    goto <bb 21>;
  # SUCC: 24 [15.0%]  (true,exec) 21 [85.0%]  (false,exec)

  # BLOCK 21 freq:153
  # PRED: 20 [85.0%]  (false,exec)
  D.46407_27 = smh_6->media_flags[1];
  if (D.46407_27 != 0)
    goto <bb 24> (ready);
  else
    goto <bb 22>;
  # SUCC: 24 [71.0%]  (true,exec) 22 [29.0%]  (false,exec)

  # BLOCK 22 freq:44
  # PRED: 21 [29.0%]  (false,exec)
  D.46389_28 = smh_6->session;
  codec_string_29 = switch_core_session_sprintf (D.46389_28, "%s,%s", ocodec_26, codec_string_1);
  # DEBUG codec_string => codec_string_29
  if (codec_string_29 == 0B)
    goto <bb 23>;
  else
    goto <bb 24> (ready);
  # SUCC: 23 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

  # BLOCK 23 freq:7
  # PRED: 22 [15.0%]  (true,exec)
  # DEBUG codec_string => ocodec_26
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:4266
  # PRED: 13 [93.3%]  (true,exec) 18 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec) 21 [71.0%]  (true,exec) 22 [85.0%]  (false,exec) 23 [100.0%]  (fallthru,exec) 20 [15.0%]  (true,exec)
  # codec_string_2 = PHI <abs_17(13), codec_string_24(18), codec_string_1(19), ocodec_26(21), codec_string_29(22), ocodec_26(23), ocodec_26(20)>
ready:
  # DEBUG codec_string => codec_string_2
  if (codec_string_2 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [78.4%]  (true,exec) 26 [21.6%]  (false,exec)

  # BLOCK 25 freq:3344
  # PRED: 24 [78.4%]  (true,exec)
  D.46389_32 = smh_6->session;
  tmp_codec_string_33 = switch_core_perform_session_strdup (D.46389_32, codec_string_2, "src/switch_core_media.c", &__func__, 1603);
  # DEBUG tmp_codec_string => tmp_codec_string_33
  D.46379_34 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.46379_34, "rtp_use_codec_string", codec_string_2, 1);
  D.46412_35 = &smh_6->codec_order;
  D.46413_36 = switch_separate_string (tmp_codec_string_33, 44, D.46412_35, 50);
  D.46414_37 = (int) D.46413_36;
  smh_6->codec_order_last = D.46414_37;
  D.46385_38 = smh_6->mparams;
  D.46415_39 = &smh_6->codecs;
  D.46412_40 = &smh_6->codec_order;
  D.46416_41 = smh_6->codec_order_last;
  D.46417_42 = switch_loadable_module_get_codecs_sorted (D.46415_39, 50, D.46412_40, D.46416_41);
  D.46385_38->num_codecs = D.46417_42;
  goto <bb 27>;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:923
  # PRED: 24 [21.6%]  (false,exec)
  D.46385_43 = smh_6->mparams;
  D.46415_44 = &smh_6->codecs;
  D.46419_45 = switch_loadable_module_get_codecs (D.46415_44, 50);
  D.46385_43->num_codecs = D.46419_45;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:9994
  # PRED: 4 [10.1%]  (true,exec) 7 [39.0%]  (true,exec) 10 [39.0%]  (true,exec) 25 [100.0%]  (fallthru,exec) 26 [100.0%]  (fallthru,exec) 6 [61.0%]  (true,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_write_frame (switch_core_media_write_frame)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 7 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 34 5 }
;; 5 succs { 34 6 }
;; 6 succs { 9 }
;; 7 succs { 8 34 }
;; 8 succs { 9 }
;; 9 succs { 7 10 }
;; 10 succs { 7 11 }
;; 11 succs { 34 12 }
;; 12 succs { 13 17 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 17 }
;; 17 succs { 18 }
;; 18 succs { 34 19 }
;; 19 succs { 34 20 }
;; 20 succs { 21 25 }
;; 21 succs { 22 25 }
;; 22 succs { 23 25 }
;; 23 succs { 24 25 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 34 27 }
;; 27 succs { 28 31 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 7 10
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46087_51)
(get_scalar_evolution 
  (scalar = D.46087_51)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46087_51)
(get_scalar_evolution 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics (ignored): 81.0%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 95.5%
  const return heuristics (ignored): 33.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 11
  DS theory heuristics: 26.4%
  first match heuristics (ignored): 15.0%
  combined heuristics: 26.4%
  pointer (on trees) heuristics: 15.0%
  const return heuristics: 67.0%
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 14
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 15
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 16
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 67.0%
  first match heuristics (ignored): 67.0%
  combined heuristics: 67.0%
  const return heuristics: 67.0%
Predictions for bb 19
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 20
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 21
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 22
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 23
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 24
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 27
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 29 predicted to even probabilities
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
1 edges in bb 32 predicted to even probabilities
1 edges in bb 33 predicted to even probabilities
1 edges in bb 34 predicted to even probabilities

;; Function switch_core_media_write_frame

;; 
35 basic blocks, 56 edges, last basic block 35.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  34 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  34 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [95.5%]  (true,exec)
Successors:  8 [95.5%]  (true,exec) 34 [4.5%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [95.5%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,dfs_back,exec)

Basic block 9 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,dfs_back,exec)
Successors:  7 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  7 [95.5%]  (true,exec) 11 [4.5%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [4.5%]  (false,exec)
Successors:  34 [26.4%]  (true,exec) 12 [73.6%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [73.6%]  (false,exec)
Successors:  13 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  15 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [85.0%]  (true,exec)
Successors:  16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [85.0%]  (true,exec)
Successors:  18 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  12 [15.0%]  (false,exec) 13 [50.0%]  (false,exec) 14 [15.0%]  (false,exec) 15 [15.0%]  (false,exec) 16 [15.0%]  (false,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [85.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
Successors:  34 [67.0%]  (true,exec) 19 [33.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [33.0%]  (false,exec)
Successors:  34 [10.1%]  (true,exec) 20 [89.9%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [89.9%]  (false,exec)
Successors:  21 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [85.0%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [85.0%]  (true,exec)
Successors:  24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  26 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  20 [15.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [15.0%]  (false,exec) 23 [15.0%]  (false,exec) 24 [15.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [85.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
Successors:  34 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [61.0%]  (false,exec)
Successors:  28 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [50.0%]  (true,exec)
Successors:  29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [100.0%]  (fallthru,exec) 28 [50.0%]  (false,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  27 [50.0%]  (false,exec) 30 [100.0%]  (fallthru,exec)
Successors:  32 [27.0%]  (true,exec) 33 [73.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [27.0%]  (true,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  31 [73.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 7 [4.5%]  (false,exec) 18 [67.0%]  (true,exec) 26 [39.0%]  (true,exec) 33 [100.0%]  (fallthru,exec) 11 [26.4%]  (true,exec) 19 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_write_frame (struct switch_core_session_t * session, struct switch_frame_t * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47735;
  uint32_t D.47734;
  struct switch_mutex_t * D.47733;
  struct switch_codec_interface_t * D.47732;
  const struct switch_codec_implementation_t * D.47731;
  int iftmp.104;
  uint32_t D.47726;
  uint32_t D.47725;
  struct switch_mutex_t * D.47724;
  struct switch_codec_interface_t * D.47723;
  const struct switch_codec_implementation_t * D.47722;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_write_frame";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  int frames;
  int samples;
  int bytes;
  switch_status_t status;
  int D.46120;
  uint32_t D.46119;
  uint32_t samples.128;
  uint32_t D.46117;
  uint32_t D.46116;
  uint32_t frames.127;
  uint32_t D.46114;
  int D.46112;
  uint32_t D.46111;
  uint32_t D.46108;
  unsigned int D.46105;
  unsigned int D.46104;
  struct switch_codec_t * D.46098;
  uint8_t D.46094;
  struct switch_rtp_t * D.46093;
  const struct switch_codec_implementation_t * D.46091;
  int D.46087;
  struct switch_channel_t * D.46086;
  switch_core_media_flag_t D.46081;

  # BLOCK 2 freq:1488
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG status => 0
  # DEBUG bytes => 0
  # DEBUG samples => 0
  # DEBUG frames => 0
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:1
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 1996, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1487
  # PRED: 2 [100.0%]  (false,exec)
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 34>;
  else
    goto <bb 5>;
  # SUCC: 34 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:1337
  # PRED: 4 [89.9%]  (false,exec)
  D.46081_12 = smh_10->media_flags[0];
  if (D.46081_12 == 0)
    goto <bb 34>;
  else
    goto <bb 6>;
  # SUCC: 34 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:815
  # PRED: 5 [61.0%]  (false,exec)
  engine_17 = &smh_10->engines[type_15(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_17
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9617
  # PRED: 9 [15.0%]  (true,exec) 10 [95.5%]  (true,exec)
  D.46086_50 = session_9(D)->channel;
  D.46087_51 = switch_channel_test_ready (D.46086_50, 1, 0);
  if (D.46087_51 != 0)
    goto <bb 8>;
  else
    goto <bb 34>;
  # SUCC: 8 [95.5%]  (true,exec) 34 [4.5%]  (false,exec)

  # BLOCK 8 freq:9185
  # PRED: 7 [95.5%]  (true,exec)
  switch_sleep (10000);
  # SUCC: 9 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 9 freq:10000
  # PRED: 6 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,dfs_back,exec)
  D.46091_18 = engine_17->read_codec.implementation;
  if (D.46091_18 == 0B)
    goto <bb 7>;
  else
    goto <bb 10>;
  # SUCC: 7 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:8500
  # PRED: 9 [85.0%]  (false,exec)
  D.46093_19 = engine_17->rtp_session;
  D.46094_20 = switch_rtp_ready (D.46093_19);
  if (D.46094_20 == 0)
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 [95.5%]  (true,exec) 11 [4.5%]  (false,exec)

  # BLOCK 11 freq:382
  # PRED: 10 [4.5%]  (false,exec)
  D.46091_21 = engine_17->read_codec.implementation;
  if (D.46091_21 == 0B)
    goto <bb 34>;
  else
    goto <bb 12>;
  # SUCC: 34 [26.4%]  (true,exec) 12 [73.6%]  (false,exec)

  # BLOCK 12 freq:282
  # PRED: 11 [73.6%]  (false,exec)
  D.46098_22 = &engine_17->read_codec;
  # DEBUG codec => D.46098_22
  if (D.46098_22 != 0B)
    goto <bb 13>;
  else
    goto <bb 17>;
  # SUCC: 13 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 13 freq:239
  # PRED: 12 [85.0%]  (true,exec)
  D.47726_61 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
  D.47725_62 = D.47726_61 & 256;
  if (D.47725_62 != 0)
    goto <bb 14>;
  else
    goto <bb 17>;
  # SUCC: 14 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

  # BLOCK 14 freq:120
  # PRED: 13 [50.0%]  (true,exec)
  D.47724_63 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
  if (D.47724_63 != 0B)
    goto <bb 15>;
  else
    goto <bb 17>;
  # SUCC: 15 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 15 freq:102
  # PRED: 14 [85.0%]  (true,exec)
  D.47723_64 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
  if (D.47723_64 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 16 freq:86
  # PRED: 15 [85.0%]  (true,exec)
  D.47722_65 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
  if (D.47722_65 != 0B)
    goto <bb 18>;
  else
    goto <bb 17>;
  # SUCC: 18 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 17 freq:208
  # PRED: 12 [15.0%]  (false,exec) 13 [50.0%]  (false,exec) 14 [15.0%]  (false,exec) 15 [15.0%]  (false,exec) 16 [15.0%]  (false,exec)
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:282
  # PRED: 16 [85.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
  # iftmp.104_66 = PHI <1(16), 0(17)>
  if (iftmp.104_66 == 0)
    goto <bb 34>;
  else
    goto <bb 19>;
  # SUCC: 34 [67.0%]  (true,exec) 19 [33.0%]  (false,exec)

  # BLOCK 19 freq:93
  # PRED: 18 [33.0%]  (false,exec)
  D.46091_24 = engine_17->read_codec.implementation;
  if (D.46091_24 == 0B)
    goto <bb 34>;
  else
    goto <bb 20>;
  # SUCC: 34 [10.1%]  (true,exec) 20 [89.9%]  (false,exec)

  # BLOCK 20 freq:84
  # PRED: 19 [89.9%]  (false,exec)
  D.46098_25 = &engine_17->read_codec;
  # DEBUG codec => D.46098_25
  if (D.46098_25 != 0B)
    goto <bb 21>;
  else
    goto <bb 25>;
  # SUCC: 21 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 21 freq:71
  # PRED: 20 [85.0%]  (true,exec)
  D.47735_68 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
  D.47734_69 = D.47735_68 & 256;
  if (D.47734_69 != 0)
    goto <bb 22>;
  else
    goto <bb 25>;
  # SUCC: 22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 22 freq:35
  # PRED: 21 [50.0%]  (true,exec)
  D.47733_70 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
  if (D.47733_70 != 0B)
    goto <bb 23>;
  else
    goto <bb 25>;
  # SUCC: 23 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 23 freq:30
  # PRED: 22 [85.0%]  (true,exec)
  D.47732_71 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
  if (D.47732_71 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 24 freq:26
  # PRED: 23 [85.0%]  (true,exec)
  D.47731_72 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
  if (D.47731_72 != 0B)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 25 freq:62
  # PRED: 20 [15.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [15.0%]  (false,exec) 23 [15.0%]  (false,exec) 24 [15.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:84
  # PRED: 24 [85.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
  # iftmp.104_73 = PHI <1(24), 0(25)>
  if (iftmp.104_73 == 0)
    goto <bb 34>;
  else
    goto <bb 27>;
  # SUCC: 34 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

  # BLOCK 27 freq:51
  # PRED: 26 [61.0%]  (false,exec)
  D.46104_28 = BIT_FIELD_REF <*frame_27(D), 32, 480>;
  D.46105_29 = D.46104_28 & 33;
  if (D.46105_29 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;
  # SUCC: 28 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

  # BLOCK 28 freq:25
  # PRED: 27 [50.0%]  (true,exec)
  D.46108_30 = engine_17->read_impl.encoded_bytes_per_packet;
  if (D.46108_30 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 29 freq:13
  # PRED: 28 [50.0%]  (true,exec)
  D.46108_31 = engine_17->read_impl.encoded_bytes_per_packet;
  bytes_32 = (int) D.46108_31;
  # DEBUG bytes => bytes_32
  D.46111_33 = frame_27(D)->datalen;
  D.46112_34 = (int) D.46111_33;
  frames_35 = D.46112_34 / bytes_32;
  # DEBUG frames => frames_35
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:25
  # PRED: 29 [100.0%]  (fallthru,exec) 28 [50.0%]  (false,exec)
  # frames_3 = PHI <frames_35(29), 1(28)>
  # DEBUG frames => frames_3
  D.46114_37 = engine_17->read_impl.samples_per_packet;
  frames.127_38 = (uint32_t) frames_3;
  D.46116_39 = D.46114_37 * frames.127_38;
  samples_40 = (int) D.46116_39;
  # DEBUG samples => samples_40
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:51
  # PRED: 27 [50.0%]  (false,exec) 30 [100.0%]  (fallthru,exec)
  # samples_2 = PHI <0(27), samples_40(30)>
  # DEBUG samples => samples_2
  D.46117_41 = engine_17->timestamp_send;
  samples.128_42 = (uint32_t) samples_2;
  D.46119_43 = D.46117_41 + samples.128_42;
  engine_17->timestamp_send = D.46119_43;
  D.46093_44 = engine_17->rtp_session;
  D.46120_45 = switch_rtp_write_frame (D.46093_44, frame_27(D));
  if (D.46120_45 < 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [27.0%]  (true,exec) 33 [73.0%]  (false,exec)

  # BLOCK 32 freq:14
  # PRED: 31 [27.0%]  (true,exec)
  # DEBUG status => 1
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:51
  # PRED: 31 [73.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
  # status_1 = PHI <0(31), 1(32)>
  # DEBUG status => status_1
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:1487
  # PRED: 4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 7 [4.5%]  (false,exec) 18 [67.0%]  (true,exec) 26 [39.0%]  (true,exec) 33 [100.0%]  (fallthru,exec) 11 [26.4%]  (true,exec) 19 [10.1%]  (true,exec)
  # status_4 = PHI <1(4), 1(5), 9(7), 9(18), 1(26), status_1(33), 9(11), 1(19)>
  return status_4;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_copy_t38_options (switch_core_media_copy_t38_options)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_media_copy_t38_options

;; 
7 basic blocks, 7 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_copy_t38_options (struct switch_t38_options_t * t38_options, struct switch_core_session_t * session)
{
  static const char __func__[35] = "switch_core_media_copy_t38_options";
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_copy_t38_options";
  struct switch_t38_options_t * local_t38_options;
  struct switch_channel_t * channel;
  uint16_t D.46075;
  char * D.46074;
  const char * D.46073;
  char * D.46072;
  const char * D.46071;
  char * D.46070;
  const char * D.46069;
  uint32_t D.46068;
  uint32_t D.46067;
  char * D.46066;
  const char * D.46065;
  switch_bool_t D.46064;
  switch_bool_t D.46063;
  switch_bool_t D.46062;
  uint32_t D.46061;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  local_t38_options_4 = switch_channel_get_private (channel_3, "t38_options");
  # DEBUG local_t38_options => local_t38_options_4
  if (t38_options_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("t38_options", "src/switch_core_media.c", 2052, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  if (local_t38_options_4 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

  # BLOCK 5 freq:1013
  # PRED: 4 [10.1%]  (true,exec)
  local_t38_options_6 = switch_core_perform_session_alloc (session_2(D), 60, "src/switch_core_media.c", &__func__, 2055);
  # DEBUG local_t38_options => local_t38_options_6
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9996
  # PRED: 4 [89.9%]  (false,exec) 5 [100.0%]  (fallthru,exec)
  # local_t38_options_1 = PHI <local_t38_options_4(4), local_t38_options_6(5)>
  # DEBUG local_t38_options => local_t38_options_1
  D.46061_7 = t38_options_5(D)->T38MaxBitRate;
  local_t38_options_1->T38MaxBitRate = D.46061_7;
  D.46062_8 = t38_options_5(D)->T38FaxFillBitRemoval;
  local_t38_options_1->T38FaxFillBitRemoval = D.46062_8;
  D.46063_9 = t38_options_5(D)->T38FaxTranscodingMMR;
  local_t38_options_1->T38FaxTranscodingMMR = D.46063_9;
  D.46064_10 = t38_options_5(D)->T38FaxTranscodingJBIG;
  local_t38_options_1->T38FaxTranscodingJBIG = D.46064_10;
  D.46065_11 = t38_options_5(D)->T38FaxRateManagement;
  D.46066_12 = switch_core_perform_session_strdup (session_2(D), D.46065_11, "src/switch_core_media.c", &__func__, 2062);
  local_t38_options_1->T38FaxRateManagement = D.46066_12;
  D.46067_13 = t38_options_5(D)->T38FaxMaxBuffer;
  local_t38_options_1->T38FaxMaxBuffer = D.46067_13;
  D.46068_14 = t38_options_5(D)->T38FaxMaxDatagram;
  local_t38_options_1->T38FaxMaxDatagram = D.46068_14;
  D.46069_15 = t38_options_5(D)->T38FaxUdpEC;
  D.46070_16 = switch_core_perform_session_strdup (session_2(D), D.46069_15, "src/switch_core_media.c", &__func__, 2065);
  local_t38_options_1->T38FaxUdpEC = D.46070_16;
  D.46071_17 = t38_options_5(D)->T38VendorInfo;
  D.46072_18 = switch_core_perform_session_strdup (session_2(D), D.46071_17, "src/switch_core_media.c", &__func__, 2066);
  local_t38_options_1->T38VendorInfo = D.46072_18;
  D.46073_19 = t38_options_5(D)->remote_ip;
  D.46074_20 = switch_core_perform_session_strdup (session_2(D), D.46073_19, "src/switch_core_media.c", &__func__, 2067);
  local_t38_options_1->remote_ip = D.46074_20;
  D.46075_21 = t38_options_5(D)->remote_port;
  local_t38_options_1->remote_port = D.46075_21;
  switch_channel_set_private (channel_3, "t38_options", local_t38_options_1);
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_process_t38_passthru (switch_core_media_process_t38_passthru)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 12 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities

;; Function switch_core_media_process_t38_passthru

;; 
13 basic blocks, 17 edges, last basic block 13.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  12 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [71.0%]  (true,exec) 9 [29.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [71.0%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [13.7%]  (true,exec) 9 [86.3%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [13.7%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  5 [29.0%]  (false,exec) 6 [50.0%]  (false,exec) 7 [86.3%]  (false,exec)
Successors:  10 [29.0%]  (true,exec) 11 [71.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [29.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_process_t38_passthru (struct switch_core_session_t * session, struct switch_core_session_t * other_session, struct switch_t38_options_t * t38_options)
{
  const char * err;
  static const char __func__[39] = "switch_core_media_process_t38_passthru";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_process_t38_passthru";
  struct switch_media_handle_t * smh;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  const char * err.171;
  switch_status_t D.47130;
  int D.47129;
  int D.47128;
  char * D.47127;
  char * D.47126;
  struct switch_channel_t * D.47125;
  switch_port_t D.47123;
  char * D.47121;
  int D.38429;
  _Bool D.47119;
  _Bool D.47118;
  _Bool D.47117;
  uint16_t D.47114;
  char * D.47113;
  const char * D.47112;
  struct payload_map_t * D.47111;
  struct switch_rtp_t * D.47110;
  switch_status_t D.47109;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  tmp = "";
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 473, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;
  # SUCC: 12 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#6 => &smh_3->engines
  # DEBUG a_engine => D#6
  D.47110_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  remote_host_7 = switch_rtp_get_remote_host (D.47110_6);
  # DEBUG remote_host => remote_host_7
  D.47110_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  remote_port_9 = switch_rtp_get_remote_port (D.47110_8);
  # DEBUG remote_port => remote_port_9
  D.47111_10 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47112_12 = t38_options_11(D)->remote_ip;
  D.47113_13 = switch_core_perform_session_strdup (session_2(D), D.47112_12, "src/switch_core_media.c", &__func__, 484);
  D.47111_10->remote_sdp_ip = D.47113_13;
  D.47111_14 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47114_15 = t38_options_11(D)->remote_port;
  D.47111_14->remote_sdp_port = D.47114_15;
  D.47117_16 = remote_host_7 != 0B;
  D.47118_17 = remote_port_9 != 0;
  D.47119_18 = D.47117_16 && D.47118_17;
  if (D.47119_18 != 0)
    goto <bb 6>;
  else
    goto <bb 9>;
  # SUCC: 6 [71.0%]  (true,exec) 9 [29.0%]  (false,exec)

  # BLOCK 6 freq:5561
  # PRED: 5 [71.0%]  (true,exec)
  D.47111_19 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_20 = D.47111_19->remote_sdp_ip;
  D.38429_21 = __builtin_strcmp (remote_host_7, D.47121_20);
  if (D.38429_21 == 0)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 7 freq:2781
  # PRED: 6 [50.0%]  (true,exec)
  D.47111_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_23 = D.47111_22->remote_sdp_port;
  if (D.47123_23 == remote_port_9)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [13.7%]  (true,exec) 9 [86.3%]  (false,exec)

  # BLOCK 8 freq:381
  # PRED: 7 [13.7%]  (true,exec)
  D.47125_24 = session_2(D)->channel;
  D.47126_25 = switch_channel_get_name (D.47125_24);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 489, session_2(D), 7, "Audio params are unchanged for %s.\n", D.47126_25);
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:7452
  # PRED: 5 [29.0%]  (false,exec) 6 [50.0%]  (false,exec) 7 [86.3%]  (false,exec)
  err = 0B;
  D.47125_26 = session_2(D)->channel;
  D.47127_27 = switch_channel_get_name (D.47125_26);
  D.47128_28 = (int) remote_port_9;
  D.47111_29 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_30 = D.47111_29->remote_sdp_ip;
  D.47111_31 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_32 = D.47111_31->remote_sdp_port;
  D.47129_33 = (int) D.47123_32;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 495, session_2(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.47127_27, remote_host_7, D.47128_28, D.47121_30, D.47129_33);
  D.47111_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_35 = D.47111_34->remote_sdp_port;
  D.47129_36 = (int) D.47123_35;
  switch_snprintf (&tmp, 32, "%d", D.47129_36);
  D.47125_37 = session_2(D)->channel;
  D.47111_38 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_39 = D.47111_38->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.47125_37, "remote_media_ip", D.47121_39, 1);
  D.47125_40 = session_2(D)->channel;
  switch_channel_set_variable_var_check (D.47125_40, "remote_media_port", &tmp, 1);
  D.47110_41 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  D.47111_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_43 = D.47111_42->remote_sdp_ip;
  D.47111_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_45 = D.47111_44->remote_sdp_port;
  D.47130_46 = switch_rtp_set_remote_address (D.47110_41, D.47121_43, D.47123_45, 0, 1, &err);
  if (D.47130_46 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [29.0%]  (true,exec) 11 [71.0%]  (false,exec)

  # BLOCK 10 freq:2161
  # PRED: 9 [29.0%]  (true,exec)
  err.171_47 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 505, session_2(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.171_47);
  D.47125_48 = session_2(D)->channel;
  switch_channel_perform_hangup (D.47125_48, "src/switch_core_media.c", &__func__, 506, 88);
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:7833
  # PRED: 8 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  switch_core_media_copy_t38_options (t38_options_11(D), other_session_49(D));
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47109_1 = PHI <1(4), 0(11)>
  return D.47109_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_offered_pt (switch_core_media_get_offered_pt)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 10 6 7 8 9 12 11
;;
;; Loop 1
;;  header 12, latch 9
;;  depth 1, outer 0
;;  nodes: 12 9 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 5 }
;; 5 succs { 11 10 }
;; 10 succs { 12 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 12 }
;; 12 succs { 6 11 }
;; 11 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 10 6 7 8 9 12 11
;;
;; Loop 1
;;  header 12, latch 9
;;  depth 1, outer 0
;;  nodes: 12 9 6 7
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46055_9)
(get_scalar_evolution 
  (scalar = D.46055_9)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 10 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46055_9)
(get_scalar_evolution 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
(set_scalar_evolution 
  instantiated_below = 10 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  DS theory heuristics (ignored): 1.2%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  early return (on trees) heuristics (ignored): 39.0%
  opcode values nonequal (on trees) heuristics (ignored): 28.0%
  loop exit heuristics: 4.5%
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 11 predicted to even probabilities

;; Function switch_core_media_get_offered_pt

;; 
13 basic blocks, 17 edges, last basic block 13.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  11 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  11 [10.1%]  (true,exec) 10 [89.9%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  5 [89.9%]  (false,exec)
Successors:  12 [100.0%]  (fallthru)

Basic block 6 (new, reachable)
Predecessors:  12 [95.5%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [4.5%]  (true,exec) 9 [95.5%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [4.5%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec) 7 [95.5%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,dfs_back,exec)

Basic block 12 (new)
Predecessors:  10 [100.0%]  (fallthru) 9 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [95.5%]  (true,exec) 11 [4.5%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  5 [10.1%]  (true,exec) 8 [100.0%]  (fallthru,exec) 12 [4.5%]  (false,exec) 4 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_offered_pt (struct switch_core_session_t * session, const struct switch_codec_implementation_t * mimp, switch_payload_t * pt)
{
  const struct switch_codec_implementation_t * imp;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_get_offered_pt";
  struct switch_media_handle_t * smh;
  int i;
  int D.46055;
  struct switch_core_media_params_t * D.46054;
  switch_payload_t D.46053;
  const uint32_t D.46050;
  const uint32_t D.46049;
  int D.46046;
  char * const D.46045;
  char * const D.46044;
  switch_status_t D.46043;

  # BLOCK 2 freq:824
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG i => 0
  if (session_4(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2081, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:823
  # PRED: 2 [100.0%]  (false,exec)
  smh_5 = session_4(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;
  # SUCC: 11 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:740
  # PRED: 4 [89.9%]  (false,exec)
  if (mimp_6(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [10.1%]  (true,exec) 10 [89.9%]  (false,exec)

  # BLOCK 10 freq:665
  # PRED: 5 [89.9%]  (false,exec)
  # i_20 = PHI <0(5)>
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru)

  # BLOCK 6 freq:9550
  # PRED: 12 [95.5%]  (true,exec)
  imp_10 = smh_5->codecs[i_1];
  # DEBUG imp => imp_10
  D.46044_11 = imp_10->iananame;
  D.46045_12 = mimp_6(D)->iananame;
  D.46046_13 = strcasecmp (D.46044_11, D.46045_12);
  if (D.46046_13 == 0)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 7 freq:4775
  # PRED: 6 [50.0%]  (true,exec)
  D.46049_14 = imp_10->actual_samples_per_second;
  D.46050_15 = mimp_6(D)->actual_samples_per_second;
  if (D.46049_14 == D.46050_15)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [4.5%]  (true,exec) 9 [95.5%]  (false,exec)

  # BLOCK 8 freq:215
  # PRED: 7 [4.5%]  (true,exec)
  D.46053_16 = smh_5->ianacodes[i_1];
  *pt_17(D) = D.46053_16;
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9335
  # PRED: 6 [50.0%]  (false,exec) 7 [95.5%]  (false,exec)
  i_19 = i_1 + 1;
  # DEBUG i => i_19
  # SUCC: 12 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 12 freq:10000
  # PRED: 10 [100.0%]  (fallthru) 9 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <i_20(10), i_19(9)>
  # DEBUG i => i_1
  D.46054_8 = smh_5->mparams;
  D.46055_9 = D.46054_8->num_codecs;
  if (D.46055_9 > i_1)
    goto <bb 6>;
  else
    goto <bb 11>;
  # SUCC: 6 [95.5%]  (true,exec) 11 [4.5%]  (false,exec)

  # BLOCK 11 freq:823
  # PRED: 5 [10.1%]  (true,exec) 8 [100.0%]  (fallthru,exec) 12 [4.5%]  (false,exec) 4 [10.1%]  (true,exec)
  # D.46043_2 = PHI <1(5), 0(8), 1(12), 1(4)>
  return D.46043_2;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_video_codec (switch_core_media_set_video_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 26 5 }
;; 5 succs { 26 6 }
;; 6 succs { 7 19 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 19 }
;; 14 succs { 26 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 26 }
;; 19 succs { 20 21 }
;; 20 succs { 26 }
;; 21 succs { 22 23 }
;; 22 succs { 26 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 11
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 14
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 15
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 16
  DS theory heuristics: 90.8%
  first match heuristics (ignored): 72.0%
  combined heuristics: 90.8%
  early return (on trees) heuristics: 61.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
1 edges in bb 17 predicted to even probabilities
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
1 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities

;; Function switch_core_media_set_video_codec

;; 
27 basic blocks, 41 edges, last basic block 27.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  26 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  26 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  7 [93.3%]  (true,exec) 19 [6.7%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [93.3%]  (true,exec)
Successors:  8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  26 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [61.0%]  (false,exec)
Successors:  17 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [71.0%]  (false,exec)
Successors:  17 [90.8%]  (true,exec) 18 [9.2%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [29.0%]  (true,exec) 16 [90.8%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [9.2%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  6 [6.7%]  (false,exec) 13 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
Successors:  20 [39.0%]  (true,exec) 21 [61.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [39.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [61.0%]  (false,exec)
Successors:  22 [39.0%]  (true,exec) 23 [61.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [39.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [61.0%]  (false,exec)
Successors:  24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 14 [39.0%]  (true,exec) 18 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_video_codec (struct switch_core_session_t * session, int force)
{
  int iftmp.104;
  uint32_t D.47748;
  uint32_t D.47747;
  struct switch_mutex_t * D.47746;
  struct switch_codec_interface_t * D.47745;
  const struct switch_codec_implementation_t * D.47744;
  struct switch_core_session_message_t msg;
  static const char __func__[34] = "switch_core_media_set_video_codec";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_set_video_codec";
  struct switch_media_handle_t * smh;
  uint8_t D.46034;
  struct switch_rtp_t * D.46033;
  switch_payload_t D.46032;
  char * D.46031;
  char * D.46030;
  uint32_t D.46029;
  char * D.46028;
  struct switch_channel_t * D.46027;
  switch_status_t D.46024;
  struct switch_memory_pool_t * D.46023;
  switch_status_t D.46020;
  struct switch_memory_pool_t * D.46019;
  char * D.46018;
  struct switch_codec_t * D.46017;
  long unsigned int D.46016;
  const uint32_t D.46015;
  int D.46013;
  char * D.46012;
  struct payload_map_t * D.46011;
  char * const D.46010;
  struct switch_codec_t * D.46001;
  const struct switch_codec_implementation_t * D.45998;
  uint8_t D.45995;
  switch_status_t D.45994;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2109, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 26>;
  else
    goto <bb 5>;
  # SUCC: 26 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#7 => &smh_3->engines[1]
  # DEBUG v_engine => D#7
  D.45995_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].codec_negotiated;
  if (D.45995_6 == 0)
    goto <bb 26>;
  else
    goto <bb 6>;
  # SUCC: 26 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:5479
  # PRED: 5 [61.0%]  (false,exec)
  D.45998_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  if (D.45998_8 != 0B)
    goto <bb 7>;
  else
    goto <bb 19>;
  # SUCC: 7 [93.3%]  (true,exec) 19 [6.7%]  (false,exec)

  # BLOCK 7 freq:5111
  # PRED: 6 [93.3%]  (true,exec)
  D.46001_9 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  # DEBUG codec => D.46001_9
  if (D.46001_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;
  # SUCC: 8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 8 freq:4344
  # PRED: 7 [85.0%]  (true,exec)
  D.47748_125 = MEM[(struct switch_codec_t *)smh_3 + 13020B].flags;
  D.47747_126 = D.47748_125 & 256;
  if (D.47747_126 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;
  # SUCC: 9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 9 freq:2172
  # PRED: 8 [50.0%]  (true,exec)
  D.47746_127 = MEM[(struct switch_codec_t *)smh_3 + 13020B].mutex;
  if (D.47746_127 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 10 freq:1846
  # PRED: 9 [85.0%]  (true,exec)
  D.47745_128 = MEM[(struct switch_codec_t *)smh_3 + 13020B].codec_interface;
  if (D.47745_128 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:1569
  # PRED: 10 [85.0%]  (true,exec)
  D.47744_129 = MEM[(struct switch_codec_t *)smh_3 + 13020B].implementation;
  if (D.47744_129 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 12 freq:3777
  # PRED: 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:5111
  # PRED: 11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # iftmp.104_130 = PHI <1(11), 0(12)>
  if (iftmp.104_130 != 0)
    goto <bb 14>;
  else
    goto <bb 19>;
  # SUCC: 14 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 14 freq:2556
  # PRED: 13 [50.0%]  (true,exec)
  if (force_11(D) == 0)
    goto <bb 26>;
  else
    goto <bb 15>;
  # SUCC: 26 [39.0%]  (true,exec) 15 [61.0%]  (false,exec)

  # BLOCK 15 freq:1559
  # PRED: 14 [61.0%]  (false,exec)
  D.45998_13 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_14 = D.45998_13->iananame;
  D.46011_15 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_16 = D.46011_15->rm_encoding;
  D.46013_17 = strcasecmp (D.46010_14, D.46012_16);
  if (D.46013_17 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;
  # SUCC: 17 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 16 freq:1107
  # PRED: 15 [71.0%]  (false,exec)
  D.45998_18 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46015_19 = D.45998_18->samples_per_second;
  D.46011_20 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_21 = D.46011_20->rm_rate;
  if (D.46015_19 != D.46016_21)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [90.8%]  (true,exec) 18 [9.2%]  (false,exec)

  # BLOCK 17 freq:1457
  # PRED: 15 [29.0%]  (true,exec) 16 [90.8%]  (true,exec)
  D.45998_25 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_26 = D.45998_25->iananame;
  D.46011_27 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_28 = D.46011_27->rm_encoding;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2128, session_2(D), 7, "Changing Codec from %s to %s\n", D.46010_26, D.46012_28);
  D.46001_29 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  switch_core_codec_destroy (D.46001_29);
  D.46017_30 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  switch_core_codec_destroy (D.46017_30);
  goto <bb 19>;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:102
  # PRED: 16 [9.2%]  (false,exec)
  D.45998_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_23 = D.45998_22->iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2133, session_2(D), 7, "Already using %s\n", D.46010_23);
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:4381
  # PRED: 6 [6.7%]  (false,exec) 13 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
  D.46001_31 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  D.46011_32 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_33 = D.46011_32->rm_encoding;
  D.46011_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_35 = D.46011_34->rm_fmtp;
  D.46011_36 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_37 = D.46011_36->rm_rate;
  D.46019_38 = switch_core_session_get_pool (session_2(D));
  D.46020_39 = switch_core_codec_init_with_bitrate (D.46001_31, D.46012_33, D.46018_35, D.46016_37, 0, 1, 0, 3, 0B, D.46019_38);
  if (D.46020_39 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [39.0%]  (true,exec) 21 [61.0%]  (false,exec)

  # BLOCK 20 freq:1708
  # PRED: 19 [39.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2149, session_2(D), 3, "Can\'t load codec?\n");
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:2672
  # PRED: 19 [61.0%]  (false,exec)
  D.46017_41 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  D.46011_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_43 = D.46011_42->rm_encoding;
  D.46011_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_45 = D.46011_44->rm_fmtp;
  D.46011_46 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_47 = D.46011_46->rm_rate;
  D.46023_48 = switch_core_session_get_pool (session_2(D));
  D.46024_49 = switch_core_codec_init_with_bitrate (D.46017_41, D.46012_43, D.46018_45, D.46016_47, 0, 1, 0, 3, 0B, D.46023_48);
  if (D.46024_49 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [39.0%]  (true,exec) 23 [61.0%]  (false,exec)

  # BLOCK 22 freq:1042
  # PRED: 21 [39.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2160, session_2(D), 3, "Can\'t load codec?\n");
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:1630
  # PRED: 21 [61.0%]  (false,exec)
  D.46011_51 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_52 = D.46011_51->rm_rate;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.rate = D.46016_52;
  D.46027_53 = session_2(D)->channel;
  D.46028_54 = switch_channel_get_name (D.46027_53);
  D.46011_55 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_56 = D.46011_55->rm_encoding;
  D.46011_57 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_58 = D.46011_57->rm_rate;
  D.46011_59 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46029_60 = D.46011_59->codec_ms;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2164, session_2(D), 7, "Set VIDEO Codec %s %s/%ld %d ms\n", D.46028_54, D.46012_56, D.46016_58, D.46029_60);
  D.46001_61 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.codec = D.46001_61;
  D.46030_62 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out;
  D.46031_63 = switch_core_perform_session_strdup (session_2(D), D.46030_62, "src/switch_core_media.c", &__func__, 2169);
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out = D.46031_63;
  D.46011_64 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_65 = D.46011_64->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.agreed_pt = D.46032_65;
  D.46011_66 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_67 = D.46011_66->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.agreed_pt = D.46032_67;
  D.46001_68 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  switch_core_session_set_video_read_codec (session_2(D), D.46001_68);
  D.46017_69 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  switch_core_session_set_video_write_codec (session_2(D), D.46017_69);
  D.46027_70 = session_2(D)->channel;
  D.46011_71 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_72 = D.46011_71->rm_encoding;
  D.46011_73 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_74 = D.46011_73->rm_rate;
  switch_channel_set_variable_printf (D.46027_70, "rtp_last_video_codec_string", "%s@%dh", D.46012_72, D.46016_74);
  D.46033_75 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
  D.46034_76 = switch_rtp_ready (D.46033_75);
  if (D.46034_76 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

  # BLOCK 24 freq:473
  # PRED: 23 [29.0%]  (true,exec)
  msg = {};
  msg.from = "src/switch_core_media.c";
  msg.message_id = 17;
  D.46033_77 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
  D.46011_78 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_79 = D.46011_78->agreed_pt;
  switch_rtp_set_default_payload (D.46033_77, D.46032_79);
  switch_core_session_perform_receive_message (session_2(D), &msg, "src/switch_core_media.c", &__func__, 2191);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1630
  # PRED: 23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  D.46027_80 = session_2(D)->channel;
  D.46011_81 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_82 = D.46011_81->rm_encoding;
  switch_channel_set_variable_var_check (D.46027_80, "rtp_use_video_codec_name", D.46012_82, 1);
  D.46027_83 = session_2(D)->channel;
  D.46011_84 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_85 = D.46011_84->rm_fmtp;
  switch_channel_set_variable_var_check (D.46027_83, "rtp_use_video_codec_fmtp", D.46018_85, 1);
  D.46027_86 = session_2(D)->channel;
  D.46011_87 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_88 = D.46011_87->rm_rate;
  switch_channel_set_variable_printf (D.46027_86, "rtp_use_video_codec_rate", "%d", D.46016_88);
  D.46027_89 = session_2(D)->channel;
  switch_channel_set_variable_printf (D.46027_89, "rtp_use_video_codec_ptime", "%d", 0);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 14 [39.0%]  (true,exec) 18 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,exec)
  # D.45994_1 = PHI <1(4), 1(5), 0(14), 0(18), 1(20), 1(22), 0(25)>
  return D.45994_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_codec (switch_core_media_set_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 51 5 }
;; 5 succs { 6 7 }
;; 6 succs { 49 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 24 }
;; 14 succs { 49 15 }
;; 15 succs { 18 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 23 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 24 }
;; 23 succs { 49 }
;; 24 succs { 25 26 }
;; 25 succs { 49 }
;; 26 succs { 27 28 }
;; 27 succs { 49 }
;; 28 succs { 29 30 }
;; 29 succs { }
;; 30 succs { 31 32 }
;; 31 succs { }
;; 32 succs { 33 37 }
;; 33 succs { 34 35 }
;; 34 succs { }
;; 35 succs { 36 37 }
;; 36 succs { 49 }
;; 37 succs { 38 42 }
;; 38 succs { 39 42 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 43 42 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 49 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 11
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 14
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 16
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 17
  DS theory heuristics: 86.3%
  first match heuristics (ignored): 72.0%
  combined heuristics: 86.3%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
Predictions for bb 18
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities
1 edges in bb 23 predicted to even probabilities
Predictions for bb 24
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 33
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 38
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 39
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 40
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 41
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 50 predicted to even probabilities
1 edges in bb 51 predicted to even probabilities

;; Function switch_core_media_set_codec

;; 
52 basic blocks, 78 edges, last basic block 52.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  51 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [6.7%]  (true,exec) 7 [93.3%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [6.7%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [93.3%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [71.0%]  (true,exec)
Successors:  49 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec)
Successors:  18 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  18 [72.0%]  (true,exec) 17 [28.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [28.0%]  (false,exec)
Successors:  18 [86.3%]  (true,exec) 23 [13.7%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec) 16 [72.0%]  (true,exec) 17 [86.3%]  (true,exec)
Successors:  19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [69.8%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [30.2%]  (false,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [69.8%]  (true,exec) 22 [30.2%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [69.8%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [30.2%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  17 [13.7%]  (false,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  13 [29.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  27 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [50.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [50.0%]  (false,exec)
Successors:  29 [0.0%]  (true,exec) 30 [100.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [0.0%]  (true,exec)
Successors: 

Basic block 30 (new, reachable)
Predecessors:  28 [100.0%]  (false,exec)
Successors:  31 [0.0%]  (true,exec) 32 [100.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [0.0%]  (true,exec)
Successors: 

Basic block 32 (new, reachable)
Predecessors:  30 [100.0%]  (false,exec)
Successors:  33 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [50.0%]  (true,exec)
Successors:  34 [0.0%]  (true,exec) 35 [100.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [0.0%]  (true,exec)
Successors: 

Basic block 35 (new, reachable)
Predecessors:  33 [100.0%]  (false,exec)
Successors:  36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [29.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  32 [50.0%]  (false,exec) 35 [71.0%]  (false,exec)
Successors:  38 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [85.0%]  (true,exec)
Successors:  39 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [50.0%]  (true,exec)
Successors:  40 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [85.0%]  (true,exec)
Successors:  41 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [85.0%]  (true,exec)
Successors:  43 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  37 [15.0%]  (false,exec) 38 [50.0%]  (false,exec) 39 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 41 [15.0%]  (false,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [85.0%]  (true,exec) 42 [100.0%]  (fallthru,exec)
Successors:  44 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [50.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  43 [50.0%]  (false,exec)
Successors:  46 [51.2%]  (true,exec) 47 [48.8%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [51.2%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [48.8%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [29.0%]  (true,exec) 49 [71.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [29.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 14 [50.0%]  (true,exec) 23 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,exec) 27 [100.0%]  (fallthru,exec) 36 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 47 [71.0%]  (false,exec) 48 [100.0%]  (fallthru,exec)
Successors:  50 [39.0%]  (true,exec) 51 [61.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [39.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 50 [100.0%]  (fallthru,exec) 49 [61.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_codec (struct switch_core_session_t * session, int force, uint32_t codec_flags)
{
  int iftmp.104;
  uint32_t D.47767;
  uint32_t D.47766;
  struct switch_mutex_t * D.47765;
  struct switch_codec_interface_t * D.47764;
  const struct switch_codec_implementation_t * D.47763;
  int iftmp.104;
  uint32_t D.47758;
  uint32_t D.47757;
  struct switch_mutex_t * D.47756;
  struct switch_codec_interface_t * D.47755;
  const struct switch_codec_implementation_t * D.47754;
  static const char __func__[28] = "switch_core_media_set_codec";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_set_codec";
  struct switch_media_handle_t * smh;
  int resetting;
  switch_status_t status;
  switch_payload_t D.45986;
  uint8_t D.45983;
  char * D.45982;
  char * D.45981;
  switch_payload_t D.45978;
  int D.45977;
  char * D.45976;
  switch_status_t D.45970;
  uint32_t D.45969;
  uint32_t D.45968;
  uint8_t D.45963;
  struct switch_rtp_t * D.45962;
  const struct switch_codec_implementation_t * D.45959;
  const struct switch_codec_implementation_t * D.45956;
  switch_status_t D.45953;
  struct switch_memory_pool_t * D.45952;
  switch_status_t D.45949;
  struct switch_memory_pool_t * D.45948;
  uint32_t D.45947;
  uint32_t D.45946;
  int D.45945;
  int D.45944;
  char * D.45943;
  struct switch_codec_t * D.45942;
  switch_interval_time_t D.45941;
  int D.45940;
  struct switch_channel_t * D.45939;
  struct switch_audio_resampler_t * * D.45938;
  struct switch_audio_resampler_t * D.45935;
  struct switch_audio_resampler_t * * D.45934;
  struct switch_mutex_t * D.45933;
  struct switch_audio_resampler_t * D.45930;
  long unsigned int D.45929;
  uint32_t D.45928;
  uint32_t D.45926;
  unsigned int D.45925;
  unsigned int D.45924;
  int D.45923;
  int D.45921;
  char * D.45920;
  struct switch_codec_t * D.45911;
  char * D.45908;
  struct payload_map_t * D.45907;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG status => 0
  # DEBUG resetting => 0
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2215, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 51>;
  else
    goto <bb 5>;
  # SUCC: 51 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#8 => &smh_8->engines
  # DEBUG a_engine => D#8
  D.45907_11 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_12 = D.45907_11->iananame;
  if (D.45908_12 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [6.7%]  (true,exec) 7 [93.3%]  (false,exec)

  # BLOCK 6 freq:604
  # PRED: 5 [6.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2223, session_7(D), 7, "No audio codec available\n");
  # DEBUG status => 1
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:8379
  # PRED: 5 [93.3%]  (false,exec)
  D.45911_14 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  # DEBUG codec => D.45911_14
  if (D.45911_14 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;
  # SUCC: 8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 8 freq:7122
  # PRED: 7 [85.0%]  (true,exec)
  D.47758_228 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
  D.47757_229 = D.47758_228 & 256;
  if (D.47757_229 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;
  # SUCC: 9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 9 freq:3561
  # PRED: 8 [50.0%]  (true,exec)
  D.47756_230 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
  if (D.47756_230 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 10 freq:3027
  # PRED: 9 [85.0%]  (true,exec)
  D.47755_231 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
  if (D.47755_231 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:2573
  # PRED: 10 [85.0%]  (true,exec)
  D.47754_232 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
  if (D.47754_232 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 12 freq:6192
  # PRED: 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:8379
  # PRED: 11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # iftmp.104_233 = PHI <1(11), 0(12)>
  if (iftmp.104_233 != 0)
    goto <bb 14>;
  else
    goto <bb 24>;
  # SUCC: 14 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

  # BLOCK 14 freq:5949
  # PRED: 13 [71.0%]  (true,exec)
  if (force_16(D) == 0)
    goto <bb 49> (end);
  else
    goto <bb 15>;
  # SUCC: 49 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 15 freq:2974
  # PRED: 14 [50.0%]  (false,exec)
  D.45920_18 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  D.45907_19 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_20 = D.45907_19->iananame;
  D.45921_21 = strcasecmp (D.45920_18, D.45908_20);
  if (D.45921_21 != 0)
    goto <bb 18>;
  else
    goto <bb 16>;
  # SUCC: 18 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 16 freq:1487
  # PRED: 15 [50.0%]  (false,exec)
  D.45923_22 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45924_23 = (unsigned int) D.45923_22;
  D.45925_24 = D.45924_23 / 1000;
  D.45907_25 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_26 = D.45907_25->codec_ms;
  if (D.45925_24 != D.45926_26)
    goto <bb 18>;
  else
    goto <bb 17>;
  # SUCC: 18 [72.0%]  (true,exec) 17 [28.0%]  (false,exec)

  # BLOCK 17 freq:416
  # PRED: 16 [28.0%]  (false,exec)
  D.45928_27 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
  D.45907_28 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_29 = D.45907_28->rm_rate;
  if (D.45928_27 != D.45929_29)
    goto <bb 18>;
  else
    goto <bb 23>;
  # SUCC: 18 [86.3%]  (true,exec) 23 [13.7%]  (false,exec)

  # BLOCK 18 freq:2917
  # PRED: 15 [50.0%]  (true,exec) 16 [72.0%]  (true,exec) 17 [86.3%]  (true,exec)
  D.45930_32 = session_7(D)->read_resampler;
  if (D.45930_32 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 19 freq:2037
  # PRED: 18 [69.8%]  (true,exec)
  D.45933_33 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_33);
  D.45934_34 = &session_7(D)->read_resampler;
  switch_resample_destroy (D.45934_34);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2238, session_7(D), 5, "Deactivating read resampler\n");
  D.45933_35 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_35);
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:2917
  # PRED: 18 [30.2%]  (false,exec) 19 [100.0%]  (fallthru,exec)
  D.45935_36 = session_7(D)->write_resampler;
  if (D.45935_36 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [69.8%]  (true,exec) 22 [30.2%]  (false,exec)

  # BLOCK 21 freq:2037
  # PRED: 20 [69.8%]  (true,exec)
  D.45933_37 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_37);
  D.45938_38 = &session_7(D)->write_resampler;
  switch_resample_destroy (D.45938_38);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2245, session_7(D), 5, "Deactivating write resampler\n");
  D.45933_39 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_39);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:2917
  # PRED: 20 [30.2%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  switch_core_session_reset (session_7(D), 0, 0);
  D.45939_40 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_40, "src/switch_core_media.c", &__func__, 2250);
  D.45920_41 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  D.45923_42 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45940_43 = D.45923_42 / 1000;
  D.45928_44 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
  D.45907_45 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_46 = D.45907_45->iananame;
  D.45907_47 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_48 = D.45907_47->codec_ms;
  D.45907_49 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_50 = D.45907_49->rm_rate;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2252, session_7(D), 7, "Changing Codec from %s@%dms@%dhz to %s@%dms@%luhz\n", D.45920_41, D.45940_43, D.45928_44, D.45908_46, D.45926_48, D.45929_50);
  D.45923_51 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45941_52 = (switch_interval_time_t) D.45923_51;
  switch_sleep (D.45941_52);
  switch_core_session_lock_codec_write (session_7(D));
  switch_core_session_lock_codec_read (session_7(D));
  # DEBUG resetting => 1
  D.45923_54 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45941_55 = (switch_interval_time_t) D.45923_54;
  switch_sleep (D.45941_55);
  D.45911_56 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  switch_core_codec_destroy (D.45911_56);
  D.45942_57 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  switch_core_codec_destroy (D.45942_57);
  D.45939_58 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_58, "src/switch_core_media.c", &__func__, 2269);
  goto <bb 24>;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:57
  # PRED: 17 [13.7%]  (false,exec)
  D.45920_30 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2271, session_7(D), 7, "Already using %s\n", D.45920_30);
  # DEBUG status => 0
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:5347
  # PRED: 13 [29.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  # resetting_2 = PHI <0(13), 1(22)>
  # DEBUG resetting => resetting_2
  D.45911_59 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  D.45907_60 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_61 = D.45907_60->iananame;
  D.45907_62 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_63 = D.45907_62->rm_fmtp;
  D.45907_64 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_65 = D.45907_64->rm_rate;
  D.45907_66 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_67 = D.45907_66->codec_ms;
  D.45944_68 = (int) D.45926_67;
  D.45907_69 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45945_70 = D.45907_69->channels;
  D.45907_71 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45946_72 = D.45907_71->bitrate;
  D.45947_74 = codec_flags_73(D) | 3;
  D.45948_75 = switch_core_session_get_pool (session_7(D));
  D.45949_76 = switch_core_codec_init_with_bitrate (D.45911_59, D.45908_61, D.45943_63, D.45929_65, D.45944_68, D.45945_70, D.45946_72, D.45947_74, 0B, D.45948_75);
  if (D.45949_76 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 25 freq:2674
  # PRED: 24 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2285, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_77 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_77, "src/switch_core_media.c", &__func__, 2286, 88);
  # DEBUG status => 1
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:2674
  # PRED: 24 [50.0%]  (false,exec)
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.session = session_7(D);
  D.45942_79 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  D.45907_80 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_81 = D.45907_80->iananame;
  D.45907_82 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_83 = D.45907_82->rm_fmtp;
  D.45907_84 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_85 = D.45907_84->rm_rate;
  D.45907_86 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_87 = D.45907_86->codec_ms;
  D.45944_88 = (int) D.45926_87;
  D.45907_89 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45945_90 = D.45907_89->channels;
  D.45907_91 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45946_92 = D.45907_91->bitrate;
  D.45947_93 = codec_flags_73(D) | 3;
  D.45952_94 = switch_core_session_get_pool (session_7(D));
  D.45953_95 = switch_core_codec_init_with_bitrate (D.45942_79, D.45908_81, D.45943_83, D.45929_85, D.45944_88, D.45945_90, D.45946_92, D.45947_93, 0B, D.45952_94);
  if (D.45953_95 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

  # BLOCK 27 freq:1337
  # PRED: 26 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2302, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_96 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_96, "src/switch_core_media.c", &__func__, 2303, 88);
  # DEBUG status => 1
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:1337
  # PRED: 26 [50.0%]  (false,exec)
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.session = session_7(D);
  D.45939_98 = session_7(D)->channel;
  D.45907_99 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_100 = D.45907_99->iananame;
  switch_channel_set_variable_var_check (D.45939_98, "rtp_use_codec_name", D.45908_100, 1);
  D.45939_101 = session_7(D)->channel;
  D.45907_102 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_103 = D.45907_102->rm_fmtp;
  switch_channel_set_variable_var_check (D.45939_101, "rtp_use_codec_fmtp", D.45943_103, 1);
  D.45939_104 = session_7(D)->channel;
  D.45907_105 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_106 = D.45907_105->rm_rate;
  switch_channel_set_variable_printf (D.45939_104, "rtp_use_codec_rate", "%d", D.45929_106);
  D.45939_107 = session_7(D)->channel;
  D.45907_108 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_109 = D.45907_108->codec_ms;
  switch_channel_set_variable_printf (D.45939_107, "rtp_use_codec_ptime", "%d", D.45926_109);
  D.45939_110 = session_7(D)->channel;
  D.45907_111 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_112 = D.45907_111->iananame;
  D.45907_113 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_114 = D.45907_113->rm_rate;
  D.45907_115 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_116 = D.45907_115->codec_ms;
  switch_channel_set_variable_printf (D.45939_110, "rtp_last_audio_codec_string", "%s@%dh@%di", D.45908_112, D.45929_114, D.45926_116);
  D.45956_117 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  if (D.45956_117 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [0.0%]  (true,exec) 30 [100.0%]  (false,exec)

  # BLOCK 29 freq:1
  # PRED: 28 [0.0%]  (true,exec)
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2316, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 30 freq:1336
  # PRED: 28 [100.0%]  (false,exec)
  D.45959_118 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  if (D.45959_118 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [0.0%]  (true,exec) 32 [100.0%]  (false,exec)

  # BLOCK 31 freq:1
  # PRED: 30 [0.0%]  (true,exec)
  __assert_fail ("a_engine->write_codec.implementation", "src/switch_core_media.c", 2317, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 32 freq:1336
  # PRED: 30 [100.0%]  (false,exec)
  D.45956_119 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl = *D.45956_119;
  D.45959_120 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_impl = *D.45959_120;
  D.45956_121 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  switch_core_session_set_read_impl (session_7(D), D.45956_121);
  D.45959_122 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  switch_core_session_set_write_impl (session_7(D), D.45959_122);
  D.45962_123 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45963_124 = switch_rtp_ready (D.45962_123);
  if (D.45963_124 != 0)
    goto <bb 33>;
  else
    goto <bb 37>;
  # SUCC: 33 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 33 freq:668
  # PRED: 32 [50.0%]  (true,exec)
  D.45956_125 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  if (D.45956_125 == 0B)
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 [0.0%]  (true,exec) 35 [100.0%]  (false,exec)

  # BLOCK 34
  # PRED: 33 [0.0%]  (true,exec)
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2326, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 35 freq:668
  # PRED: 33 [100.0%]  (false,exec)
  D.45962_126 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45923_127 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45968_128 = (uint32_t) D.45923_127;
  D.45969_129 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
  D.45970_130 = switch_rtp_change_interval (D.45962_126, D.45968_128, D.45969_129);
  if (D.45970_130 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

  # BLOCK 36 freq:194
  # PRED: 35 [29.0%]  (true,exec)
  D.45939_131 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_131, "src/switch_core_media.c", &__func__, 2331, 27);
  # DEBUG status => 1
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:1142
  # PRED: 32 [50.0%]  (false,exec) 35 [71.0%]  (false,exec)
  D.45907_133 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_134 = D.45907_133->rm_rate;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.rate = D.45929_134;
  D.45911_135 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  # DEBUG codec => D.45911_135
  if (D.45911_135 != 0B)
    goto <bb 38>;
  else
    goto <bb 42>;
  # SUCC: 38 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

  # BLOCK 38 freq:971
  # PRED: 37 [85.0%]  (true,exec)
  D.47767_235 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
  D.47766_236 = D.47767_235 & 256;
  if (D.47766_236 != 0)
    goto <bb 39>;
  else
    goto <bb 42>;
  # SUCC: 39 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 39 freq:485
  # PRED: 38 [50.0%]  (true,exec)
  D.47765_237 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
  if (D.47765_237 != 0B)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

  # BLOCK 40 freq:412
  # PRED: 39 [85.0%]  (true,exec)
  D.47764_238 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
  if (D.47764_238 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

  # BLOCK 41 freq:351
  # PRED: 40 [85.0%]  (true,exec)
  D.47763_239 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
  if (D.47763_239 != 0B)
    goto <bb 43>;
  else
    goto <bb 42>;
  # SUCC: 43 [85.0%]  (true,exec) 42 [15.0%]  (false,exec)

  # BLOCK 42 freq:844
  # PRED: 37 [15.0%]  (false,exec) 38 [50.0%]  (false,exec) 39 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 41 [15.0%]  (false,exec)
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:1142
  # PRED: 41 [85.0%]  (true,exec) 42 [100.0%]  (fallthru,exec)
  # iftmp.104_240 = PHI <1(41), 0(42)>
  if (iftmp.104_240 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

  # BLOCK 44 freq:571
  # PRED: 43 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2339, session_7(D), 3, "Can\'t load codec?\n");
  # DEBUG status => 1
  goto <bb 49> (end);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:571
  # PRED: 43 [50.0%]  (false,exec)
  D.45939_138 = session_7(D)->channel;
  D.45976_139 = switch_channel_get_name (D.45939_138);
  D.45907_140 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_141 = D.45907_140->iananame;
  D.45907_142 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_143 = D.45907_142->rm_rate;
  D.45907_144 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_145 = D.45907_144->codec_ms;
  D.45969_146 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
  D.45977_147 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.bits_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2343, session_7(D), 7, "Set Codec %s %s/%ld %d ms %d samples %d bits\n", D.45976_139, D.45908_141, D.45929_143, D.45926_145, D.45969_146, D.45977_147);
  D.45911_148 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.codec = D.45911_148;
  D.45907_149 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45978_150 = D.45907_149->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.agreed_pt = D.45978_150;
  D.45907_151 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45978_152 = D.45907_151->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.agreed_pt = D.45978_152;
  if (force_16(D) != 2)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [51.2%]  (true,exec) 47 [48.8%]  (false,exec)

  # BLOCK 46 freq:292
  # PRED: 45 [51.2%]  (true,exec)
  D.45911_153 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  switch_core_session_set_real_read_codec (session_7(D), D.45911_153);
  D.45942_154 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  switch_core_session_set_write_codec (session_7(D), D.45942_154);
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:571
  # PRED: 45 [48.8%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  D.45907_155 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45981_156 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.fmtp_out;
  D.45982_157 = switch_core_perform_session_strdup (session_7(D), D.45981_156, "src/switch_core_media.c", &__func__, 2357);
  D.45907_155->fmtp_out = D.45982_157;
  D.45962_158 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45983_159 = switch_rtp_ready (D.45962_158);
  if (D.45983_159 != 0)
    goto <bb 48>;
  else
    goto <bb 49> (end);
  # SUCC: 48 [29.0%]  (true,exec) 49 [71.0%]  (false,exec)

  # BLOCK 48 freq:166
  # PRED: 47 [29.0%]  (true,exec)
  D.45962_160 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45907_161 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45986_162 = D.45907_161->pt;
  switch_rtp_set_default_payload (D.45962_160, D.45986_162);
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:8981
  # PRED: 6 [100.0%]  (fallthru,exec) 14 [50.0%]  (true,exec) 23 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,exec) 27 [100.0%]  (fallthru,exec) 36 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 47 [71.0%]  (false,exec) 48 [100.0%]  (fallthru,exec)
  # status_1 = PHI <1(6), 0(14), 0(23), 1(25), 1(27), 1(36), 1(44), 0(47), 0(48)>
  # resetting_3 = PHI <0(6), 0(14), 0(23), resetting_2(25), resetting_2(27), resetting_2(36), resetting_2(44), resetting_2(47), resetting_2(48)>
end:
  # DEBUG resetting => resetting_3
  # DEBUG status => status_1
  if (resetting_3 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 [39.0%]  (true,exec) 51 [61.0%]  (false,exec)

  # BLOCK 50 freq:3501
  # PRED: 49 [39.0%]  (true,exec)
  switch_core_session_unlock_codec_write (session_7(D));
  switch_core_session_unlock_codec_read (session_7(D));
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:9995
  # PRED: 4 [10.1%]  (true,exec) 50 [100.0%]  (fallthru,exec) 49 [61.0%]  (false,exec)
  # status_4 = PHI <1(4), status_1(50), status_1(49)>
  return status_4;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_read_frame (switch_core_media_read_frame)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
;;
;; Loop 1
;;  header 120, latch 119
;;  depth 1, outer 0
;;  nodes: 120 119 118 62 60 61 58 50 51 57 56 54 55 52 53 48 30 47 31 45 46 42 43 44 39 40 41 36 37 38 33 34 32 25 121 117 115 116 76 83 90 96 97 99 101 103 104 105 106 113 114 110 112 107 111 108 109 102 100 98 73 74 94 95 77 78 75 88 93 87 92 91 89 84 85 86 82 81 80 79 71 69 70 65 66 67 68 64 63
;;
;; Loop 3
;;  header 112, latch 111
;;  depth 2, outer 1
;;  nodes: 112 111 108 109
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 2, outer 1
;;  nodes: 56 55
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 127 5 }
;; 5 succs { 127 6 }
;; 6 succs { 127 7 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 127 14 }
;; 14 succs { 15 16 }
;; 15 succs { }
;; 16 succs { 127 17 }
;; 17 succs { 127 18 }
;; 18 succs { 127 19 }
;; 19 succs { 21 20 }
;; 20 succs { 120 }
;; 21 succs { 22 20 }
;; 22 succs { 24 23 }
;; 23 succs { 24 }
;; 24 succs { 127 }
;; 25 succs { 26 30 }
;; 26 succs { 27 125 }
;; 27 succs { 28 29 }
;; 28 succs { 125 }
;; 29 succs { 125 }
;; 30 succs { 31 48 }
;; 31 succs { 32 47 }
;; 32 succs { 33 34 }
;; 33 succs { 36 }
;; 34 succs { 35 36 }
;; 35 succs { 125 }
;; 36 succs { 37 39 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 125 }
;; 50 succs { 51 58 }
;; 51 succs { 52 58 }
;; 52 succs { 53 54 }
;; 53 succs { 54 }
;; 54 succs { 56 }
;; 55 succs { 56 }
;; 56 succs { 55 57 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 125 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 119 }
;; 63 succs { 64 122 }
;; 64 succs { 72 65 }
;; 65 succs { 66 70 }
;; 66 succs { 67 70 }
;; 67 succs { 68 70 }
;; 68 succs { 69 70 }
;; 69 succs { 71 70 }
;; 70 succs { 71 }
;; 71 succs { 72 73 }
;; 72 succs { 125 }
;; 73 succs { 74 96 }
;; 74 succs { 75 96 }
;; 75 succs { 76 77 }
;; 76 succs { 115 }
;; 77 succs { 78 95 }
;; 78 succs { 79 95 }
;; 79 succs { 80 93 }
;; 80 succs { 81 93 }
;; 81 succs { 83 82 }
;; 82 succs { 83 84 }
;; 83 succs { 115 }
;; 84 succs { 85 87 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 94 }
;; 88 succs { 89 94 }
;; 89 succs { 90 91 }
;; 90 succs { 115 }
;; 91 succs { 92 94 }
;; 92 succs { 94 }
;; 93 succs { 94 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 115 }
;; 97 succs { 98 115 }
;; 98 succs { 100 99 }
;; 99 succs { 100 115 }
;; 100 succs { 102 101 }
;; 101 succs { 102 115 }
;; 102 succs { 104 103 }
;; 103 succs { 104 115 }
;; 104 succs { 105 115 }
;; 105 succs { 106 115 }
;; 106 succs { 107 115 }
;; 107 succs { 112 }
;; 108 succs { 109 111 }
;; 109 succs { 110 111 }
;; 110 succs { 113 }
;; 111 succs { 112 }
;; 112 succs { 108 113 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { 117 }
;; 117 succs { 118 122 }
;; 118 succs { 119 }
;; 119 succs { 120 }
;; 120 succs { 121 122 }
;; 121 succs { 25 122 }
;; 122 succs { 123 124 }
;; 123 succs { 124 }
;; 124 succs { 125 }
;; 125 succs { 126 127 }
;; 126 succs { 127 }
;; 127 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127
;;
;; Loop 1
;;  header 120, latch 119
;;  depth 1, outer 0
;;  nodes: 120 119 118 62 60 61 58 50 51 57 56 54 55 52 53 48 30 47 31 45 46 42 43 44 39 40 41 36 37 38 33 34 32 25 121 117 115 116 76 83 90 96 97 99 101 103 104 105 106 113 114 110 112 107 111 108 109 102 100 98 73 74 94 95 77 78 75 88 93 87 92 91 89 84 85 86 82 81 80 79 71 69 70 65 66 67 68 64 63
;;
;; Loop 3
;;  header 112, latch 111
;;  depth 2, outer 1
;;  nodes: 112 111 108 109
;;
;; Loop 2
;;  header 56, latch 55
;;  depth 2, outer 1
;;  nodes: 56 55
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pmap_9)
(get_scalar_evolution 
  (scalar = pmap_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_9 = PHI <pmap_262(107), pmap_270(111)>
)
  (init_cond = pmap_262))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_9 = PHI <pmap_262(107), pmap_270(111)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pmap_9)
(get_scalar_evolution 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
(set_scalar_evolution 
  instantiated_below = 107 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46255_142)
(get_scalar_evolution 
  (scalar = D.46255_142)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46255_142)
(get_scalar_evolution 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46255_142)
(get_scalar_evolution 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = (int) D.46254_141)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_7 = PHI <0(54), i_172(55)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_7 = PHI <0(54), i_172(55)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46240_145 = rtcp_frame.reports[i_7].ssrc;
 in loop 2.
Statement D.46240_145 = rtcp_frame.reports[i_7].ssrc;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46242_149 = rtcp_frame.reports[i_7].fraction;
 in loop 2.
Statement D.46242_149 = rtcp_frame.reports[i_7].fraction;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46243_150)
(get_scalar_evolution 
  (scalar = D.46243_150)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46242_149)
(get_scalar_evolution 
  (scalar = D.46242_149)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46242_149)
  (scalar_evolution = D.46242_149))
)
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46243_150)
  (scalar_evolution = (int) D.46242_149))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = (int) D.46242_149)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46242_149)
(get_scalar_evolution 
  (scalar = D.46242_149)
  (scalar_evolution = D.46242_149))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = D.46242_149)
  (scalar_evolution = D.46242_149))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46245_154 = rtcp_frame.reports[i_7].lost;
 in loop 2.
Statement D.46245_154 = rtcp_frame.reports[i_7].lost;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
 in loop 2.
Statement D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46249_162 = rtcp_frame.reports[i_7].jitter;
 in loop 2.
Statement D.46249_162 = rtcp_frame.reports[i_7].jitter;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46251_166 = rtcp_frame.reports[i_7].lsr;
 in loop 2.
Statement D.46251_166 = rtcp_frame.reports[i_7].lsr;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.46253_170 = rtcp_frame.reports[i_7].dlsr;
 in loop 2.
Statement D.46253_170 = rtcp_frame.reports[i_7].dlsr;
 is executed at most 4 (bounded by 4) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_172)
(get_scalar_evolution 
  (scalar = i_172)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 54 
  (scalar = i_172)
  (scalar_evolution = {1, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 54)
  (evolution_loop = 2)
  (chrec = {1, +, 1}_2)
  (res = {1, +, 1}_2))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_172 = i_7 + 1;
 in loop 2.
Statement i_172 = i_7 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 2.
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 11
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 14
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 17
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 18
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 19
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 45.3%
  first match heuristics (ignored): 29.0%
  combined heuristics: 45.3%
  call heuristics: 29.0%
  const return heuristics: 67.0%
Predictions for bb 22
  DS theory heuristics: 19.9%
  first match heuristics (ignored): 28.0%
  combined heuristics: 19.9%
  early return (on trees) heuristics: 39.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 23 predicted to even probabilities
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 26
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
Predictions for bb 27
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 37
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 40
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
1 edges in bb 41 predicted to even probabilities
Predictions for bb 42
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 43
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 46 predicted to even probabilities
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 2.0%
1 edges in bb 49 predicted to even probabilities
Predictions for bb 50
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 51
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 52
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 53 predicted to even probabilities
1 edges in bb 54 predicted to even probabilities
1 edges in bb 55 predicted to even probabilities
Predictions for bb 56
  DS theory heuristics (ignored): 67.1%
  first match heuristics: 83.3%
  combined heuristics: 83.3%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 83.3%
1 edges in bb 57 predicted to even probabilities
Predictions for bb 58
  DS theory heuristics (ignored): 4.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  loop exit heuristics: 2.0%
1 edges in bb 59 predicted to even probabilities
Predictions for bb 60
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 61 predicted to even probabilities
Predictions for bb 62
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 63
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 64
  DS theory heuristics (ignored): 0.4%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  pointer (on trees) heuristics (ignored): 15.0%
  loop exit heuristics: 2.0%
Predictions for bb 65
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 66
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 67
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 68
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 69
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 70 predicted to even probabilities
Predictions for bb 71
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 72 predicted to even probabilities
Predictions for bb 73
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 74
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 75
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 76 predicted to even probabilities
Predictions for bb 77
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 78
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 79
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 80
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 81
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 82
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 85
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 86 predicted to even probabilities
Predictions for bb 87
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 88
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 89
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 90 predicted to even probabilities
Predictions for bb 91
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 92 predicted to even probabilities
1 edges in bb 93 predicted to even probabilities
1 edges in bb 94 predicted to even probabilities
1 edges in bb 95 predicted to even probabilities
Predictions for bb 96
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 97
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 98
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 99
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 100
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 101
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 103
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 104
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 105
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 106
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 107 predicted to even probabilities
Predictions for bb 108
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 109
  DS theory heuristics (ignored): 1.9%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
1 edges in bb 110 predicted to even probabilities
1 edges in bb 111 predicted to even probabilities
Predictions for bb 112
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 113
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 114 predicted to even probabilities
Predictions for bb 115
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 116 predicted to even probabilities
Predictions for bb 117
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 118 predicted to even probabilities
1 edges in bb 119 predicted to even probabilities
Predictions for bb 120
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 121
  DS theory heuristics (ignored): 95.2%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 98.0%
Predictions for bb 122
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 123 predicted to even probabilities
1 edges in bb 124 predicted to even probabilities
Predictions for bb 125
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 126 predicted to even probabilities
1 edges in bb 127 predicted to even probabilities

;; Function switch_core_media_read_frame

;; 
128 basic blocks, 208 edges, last basic block 128.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  127 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  127 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  127 [10.1%]  (true,exec) 7 [89.9%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [89.9%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  127 [39.0%]  (true,exec) 14 [61.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [61.0%]  (false,exec)
Successors:  15 [0.0%]  (true,exec) 16 [100.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [0.0%]  (true,exec)
Successors: 

Basic block 16 (new, reachable)
Predecessors:  14 [100.0%]  (false,exec)
Successors:  127 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [39.0%]  (false,exec)
Successors:  127 [61.0%]  (true,exec) 18 [39.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [39.0%]  (false,exec)
Successors:  127 [39.0%]  (true,exec) 19 [61.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [61.0%]  (false,exec)
Successors:  21 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

Basic block 20 (new)
Predecessors:  19 [30.2%]  (false,exec) 21 [54.7%]  (false,exec)
Successors:  120 [100.0%]  (fallthru)

Basic block 21 (new, reachable)
Predecessors:  19 [69.8%]  (true,exec)
Successors:  22 [45.3%]  (true,exec) 20 [54.7%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [45.3%]  (true,exec)
Successors:  24 [19.9%]  (true,exec) 23 [80.1%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [80.1%]  (false,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [19.9%]  (true,exec) 23 [100.0%]  (fallthru,exec)
Successors:  127 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  121 [98.0%]  (true,exec)
Successors:  26 [2.0%]  (true,exec) 30 [98.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [2.0%]  (true,exec)
Successors:  27 [13.7%]  (true,exec) 125 [86.3%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [13.7%]  (true,exec)
Successors:  28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [15.0%]  (false,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  25 [98.0%]  (false,exec)
Successors:  31 [29.0%]  (true,exec) 48 [71.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [29.0%]  (true,exec)
Successors:  32 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [28.0%]  (true,exec) 34 [72.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [28.0%]  (true,exec)
Successors:  36 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [72.0%]  (false,exec)
Successors:  35 [2.0%]  (true,exec) 36 [98.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [2.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  33 [100.0%]  (fallthru,exec) 34 [98.0%]  (false,exec)
Successors:  37 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [69.8%]  (true,exec)
Successors:  38 [73.0%]  (true,exec) 39 [27.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [73.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [30.2%]  (false,exec) 37 [27.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [69.8%]  (true,exec)
Successors:  41 [73.0%]  (true,exec) 42 [27.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [73.0%]  (true,exec)
Successors:  42 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [30.2%]  (false,exec) 40 [27.0%]  (false,exec) 41 [100.0%]  (fallthru,exec)
Successors:  43 [29.0%]  (true,exec) 45 [71.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [29.0%]  (true,exec)
Successors:  44 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [50.0%]  (true,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  42 [71.0%]  (false,exec) 43 [50.0%]  (false,exec) 44 [100.0%]  (fallthru,exec)
Successors:  46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  31 [50.0%]  (false,exec) 45 [50.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  30 [71.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [2.0%]  (true,exec) 50 [98.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [2.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  48 [98.0%]  (false,exec)
Successors:  51 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [29.0%]  (true,exec)
Successors:  52 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [29.0%]  (true,exec)
Successors:  53 [69.8%]  (true,exec) 54 [30.2%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [69.8%]  (true,exec)
Successors:  54 [100.0%]  (fallthru,exec)

Basic block 54 (new, reachable)
Predecessors:  52 [30.2%]  (false,exec) 53 [100.0%]  (fallthru,exec)
Successors:  56 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  56 [83.3%]  (true,exec)
Successors:  56 [100.0%]  (fallthru,dfs_back,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [100.0%]  (fallthru,exec) 55 [100.0%]  (fallthru,dfs_back,exec)
Successors:  55 [83.3%]  (true,exec) 57 [16.7%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [16.7%]  (false,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  50 [71.0%]  (false,exec) 51 [71.0%]  (false,exec) 57 [100.0%]  (fallthru,exec)
Successors:  59 [2.0%]  (true,exec) 60 [98.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [2.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 60 (new, reachable)
Predecessors:  58 [98.0%]  (false,exec)
Successors:  61 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

Basic block 61 (new, reachable)
Predecessors:  60 [29.0%]  (true,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 62 (new, reachable)
Predecessors:  60 [71.0%]  (false,exec) 61 [100.0%]  (fallthru,exec)
Successors:  63 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  62 [50.0%]  (true,exec)
Successors:  64 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [98.0%]  (true,exec)
Successors:  72 [2.0%]  (true,exec) 65 [98.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [98.0%]  (false,exec)
Successors:  66 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [85.0%]  (true,exec)
Successors:  67 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [50.0%]  (true,exec)
Successors:  68 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [85.0%]  (true,exec)
Successors:  69 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [85.0%]  (true,exec)
Successors:  71 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  65 [15.0%]  (false,exec) 66 [50.0%]  (false,exec) 67 [15.0%]  (false,exec) 68 [15.0%]  (false,exec) 69 [15.0%]  (false,exec)
Successors:  71 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  69 [85.0%]  (true,exec) 70 [100.0%]  (fallthru,exec)
Successors:  72 [2.0%]  (true,exec) 73 [98.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  64 [2.0%]  (true,exec) 71 [2.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 73 (new, reachable)
Predecessors:  71 [98.0%]  (false,exec)
Successors:  74 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [50.0%]  (true,exec)
Successors:  75 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [50.0%]  (true,exec)
Successors:  76 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [50.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 77 (new, reachable)
Predecessors:  75 [50.0%]  (false,exec)
Successors:  78 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [50.0%]  (true,exec)
Successors:  79 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [50.0%]  (true,exec)
Successors:  80 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [50.0%]  (true,exec)
Successors:  81 [72.0%]  (true,exec) 93 [28.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [72.0%]  (true,exec)
Successors:  83 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [50.0%]  (false,exec)
Successors:  83 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  81 [50.0%]  (true,exec) 82 [50.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  82 [50.0%]  (false,exec)
Successors:  85 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  86 [28.0%]  (true,exec) 87 [72.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [28.0%]  (true,exec)
Successors:  87 [100.0%]  (fallthru,exec)

Basic block 87 (new, reachable)
Predecessors:  84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [100.0%]  (fallthru,exec)
Successors:  88 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  87 [50.0%]  (true,exec)
Successors:  89 [72.0%]  (true,exec) 94 [28.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [72.0%]  (true,exec)
Successors:  90 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [29.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  89 [71.0%]  (false,exec)
Successors:  92 [51.2%]  (true,exec) 94 [48.8%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [51.2%]  (true,exec)
Successors:  94 [100.0%]  (fallthru,exec)

Basic block 93 (new, reachable)
Predecessors:  79 [50.0%]  (false,exec) 80 [28.0%]  (false,exec)
Successors:  94 [100.0%]  (fallthru,exec)

Basic block 94 (new, reachable)
Predecessors:  88 [28.0%]  (false,exec) 93 [100.0%]  (fallthru,exec) 87 [50.0%]  (false,exec) 92 [100.0%]  (fallthru,exec) 91 [48.8%]  (false,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 95 (new, reachable)
Predecessors:  77 [50.0%]  (false,exec) 78 [50.0%]  (false,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 96 (new, reachable)
Predecessors:  73 [50.0%]  (false,exec) 74 [50.0%]  (false,exec) 94 [100.0%]  (fallthru,exec) 95 [100.0%]  (fallthru,exec)
Successors:  97 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [50.0%]  (true,exec)
Successors:  98 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

Basic block 98 (new, reachable)
Predecessors:  97 [50.0%]  (true,exec)
Successors:  100 [50.0%]  (true,exec) 99 [50.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [50.0%]  (false,exec)
Successors:  100 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  98 [50.0%]  (true,exec) 99 [72.0%]  (true,exec)
Successors:  102 [50.0%]  (true,exec) 101 [50.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [50.0%]  (false,exec)
Successors:  102 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  100 [50.0%]  (true,exec) 101 [72.0%]  (true,exec)
Successors:  104 [50.0%]  (true,exec) 103 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  102 [50.0%]  (false,exec)
Successors:  104 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  102 [50.0%]  (true,exec) 103 [72.0%]  (true,exec)
Successors:  105 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [72.0%]  (true,exec)
Successors:  106 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [72.0%]  (true,exec)
Successors:  107 [51.2%]  (true,exec) 115 [48.8%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [51.2%]  (true,exec)
Successors:  112 [100.0%]  (fallthru,exec)

Basic block 108 (new, reachable)
Predecessors:  112 [95.5%]  (true,exec)
Successors:  109 [28.0%]  (true,exec) 111 [72.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [28.0%]  (true,exec)
Successors:  110 [4.5%]  (true,exec) 111 [95.5%]  (false,exec)

Basic block 110 (new, reachable)
Predecessors:  109 [4.5%]  (true,exec)
Successors:  113 [100.0%]  (fallthru,exec)

Basic block 111 (new, reachable)
Predecessors:  108 [72.0%]  (false,exec) 109 [95.5%]  (false,exec)
Successors:  112 [100.0%]  (fallthru,dfs_back,exec)

Basic block 112 (new, reachable)
Predecessors:  107 [100.0%]  (fallthru,exec) 111 [100.0%]  (fallthru,dfs_back,exec)
Successors:  108 [95.5%]  (true,exec) 113 [4.5%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  110 [100.0%]  (fallthru,exec) 112 [4.5%]  (false,exec)
Successors:  114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 115 (new, reachable)
Predecessors:  76 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 90 [100.0%]  (fallthru,exec) 96 [50.0%]  (false,exec) 97 [50.0%]  (false,exec) 99 [28.0%]  (false,exec) 101 [28.0%]  (false,exec) 103 [28.0%]  (false,exec) 104 [28.0%]  (false,exec) 105 [28.0%]  (false,exec) 106 [48.8%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
Successors:  116 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [50.0%]  (true,exec)
Successors:  117 [100.0%]  (fallthru,exec)

Basic block 117 (new, reachable)
Predecessors:  115 [50.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
Successors:  118 [50.0%]  (true,exec) 122 [50.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [50.0%]  (true,exec)
Successors:  119 [100.0%]  (fallthru,exec)

Basic block 119 (new, reachable)
Predecessors:  118 [100.0%]  (fallthru,exec) 62 [50.0%]  (false,exec)
Successors:  120 [100.0%]  (fallthru,dfs_back)

Basic block 120 (new)
Predecessors:  20 [100.0%]  (fallthru) 119 [100.0%]  (fallthru,dfs_back)
Successors:  121 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [98.0%]  (true,exec)
Successors:  25 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  117 [50.0%]  (false,exec) 120 [2.0%]  (false,exec) 121 [2.0%]  (false,exec) 63 [2.0%]  (false,exec)
Successors:  123 [50.0%]  (true,exec) 124 [50.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  122 [50.0%]  (true,exec)
Successors:  124 [100.0%]  (fallthru,exec)

Basic block 124 (new, reachable)
Predecessors:  122 [50.0%]  (false,exec) 123 [100.0%]  (fallthru,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 125 (new, reachable)
Predecessors:  28 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 49 [100.0%]  (fallthru,exec) 59 [100.0%]  (fallthru,exec) 72 [100.0%]  (fallthru,exec) 124 [100.0%]  (fallthru,exec) 26 [86.3%]  (false,exec)
Successors:  126 [78.3%]  (true,exec) 127 [21.6%]  (false,exec)

Basic block 126 (new, reachable)
Predecessors:  125 [78.3%]  (true,exec)
Successors:  127 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 13 [39.0%]  (true,exec) 17 [61.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 6 [10.1%]  (true,exec) 16 [61.0%]  (true,exec) 18 [39.0%]  (true,exec) 125 [21.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_read_frame (struct switch_core_session_t * session, struct switch_frame_t * * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47792;
  uint32_t D.47791;
  struct switch_mutex_t * D.47790;
  struct switch_codec_interface_t * D.47789;
  const struct switch_codec_implementation_t * D.47788;
  int iftmp.104;
  uint32_t D.47777;
  uint32_t D.47776;
  struct switch_mutex_t * D.47775;
  struct switch_codec_interface_t * D.47774;
  const struct switch_codec_implementation_t * D.47773;
  struct payload_map_t * pmap;
  uint32_t codec_ms;
  int frames;
  uint32_t bytes;
  struct switch_dtmf_t dtmf;
  char * uuid;
  int i;
  char header[50];
  char value[30];
  struct switch_event_t * event;
  int v;
  int v;
  int rtp_hold_timeout_sec;
  int rtp_timeout_sec;
  const char * val;
  static const char __func__[29] = "switch_core_media_read_frame";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_read_frame";
  int do_cng;
  struct switch_media_handle_t * smh;
  switch_status_t status;
  struct switch_rtp_engine_t * engine;
  struct switch_rtcp_frame_t rtcp_frame;
  uint32_t D.46362;
  uint32_t frames.134;
  uint32_t D.46360;
  int D.46355;
  switch_payload_t D.46354;
  char * D.46353;
  uint8_t D.46350;
  switch_payload_t D.46347;
  struct switch_mutex_t * D.46346;
  int D.46345;
  int D.46344;
  switch_payload_t D.46341;
  switch_payload_t D.46338;
  switch_payload_t D.46335;
  switch_payload_t D.46333;
  switch_payload_t D.46331;
  switch_payload_t D.46330;
  switch_payload_t D.46328;
  struct switch_core_media_params_t * D.46327;
  uint8_t D.46324;
  int D.46317;
  int codec_ms.133;
  uint32_t D.46309;
  struct payload_map_t * D.46308;
  uint32_t D.46305;
  uint32_t D.46304;
  uint32_t D.46299;
  uint32_t D.46298;
  uint32_t D.46296;
  uint32_t D.46293;
  switch_size_t D.46292;
  switch_size_t D.46289;
  uint32_t D.46285;
  uint32_t D.46279;
  uint32_t D.46276;
  switch_core_media_flag_t D.46273;
  switch_frame_flag_t D.46266;
  uint32_t D.46263;
  switch_size_t D.46260;
  switch_frame_flag_t D.46257;
  switch_frame_flag_t D.46256;
  int D.46255;
  uint16_t D.46254;
  uint32_t D.46253;
  uint32_t D.46251;
  uint32_t D.46249;
  uint32_t D.46247;
  uint32_t D.46245;
  int D.46243;
  uint8_t D.46242;
  uint32_t D.46240;
  switch_time_t D.46238;
  uint32_t D.46236;
  switch_size_t D.46235;
  uint32_t D.46233;
  uint32_t D.46232;
  uint32_t D.46231;
  uint32_t D.46230;
  uint32_t D.46229;
  uint32_t D.46227;
  char * D.46225;
  struct switch_event_t * event.132;
  switch_status_t D.46219;
  switch_status_t D.46216;
  uint32_t D.46213;
  uint32_t D.46212;
  uint32_t rtp_hold_timeout_sec.131;
  uint32_t D.46206;
  uint32_t D.46205;
  uint32_t D.46204;
  uint32_t D.46203;
  uint32_t rtp_timeout_sec.130;
  uint32_t D.46201;
  switch_status_t D.46188;
  uint8_t D.46182;
  uint8_t D.46179;
  uint32_t D.46178;
  void * D.46177;
  uint32_t D.46176;
  switch_frame_flag_t D.46175;
  switch_frame_flag_t D.46174;
  struct switch_frame_t * D.46173;
  const char * D.46170;
  _Bool D.46165;
  _Bool D.46164;
  _Bool D.46163;
  struct switch_frame_t * D.46162;
  char * iftmp.129;
  char * D.46157;
  switch_status_t D.46154;
  struct switch_mutex_t * D.46151;
  uint32_t D.46150;
  uint8_t D.46148;
  switch_channel_state_t D.46146;
  struct switch_channel_t * D.46145;
  struct switch_rtp_t * D.46140;
  struct switch_codec_t * D.46138;
  const struct switch_codec_implementation_t * D.46136;
  switch_core_media_flag_t D.46129;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG do_cng => 0
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 1623, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_14 = session_13(D)->media_handle;
  # DEBUG smh => smh_14
  if (smh_14 == 0B)
    goto <bb 127>;
  else
    goto <bb 5>;
  # SUCC: 127 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  D.46129_16 = smh_14->media_flags[0];
  if (D.46129_16 == 0)
    goto <bb 127>;
  else
    goto <bb 6>;
  # SUCC: 127 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:5479
  # PRED: 5 [61.0%]  (false,exec)
  engine_21 = &smh_14->engines[type_19(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_21
  engine_21->read_frame.datalen = 0;
  D.46136_22 = engine_21->read_codec.implementation;
  if (D.46136_22 == 0B)
    goto <bb 127>;
  else
    goto <bb 7>;
  # SUCC: 127 [10.1%]  (true,exec) 7 [89.9%]  (false,exec)

  # BLOCK 7 freq:4924
  # PRED: 6 [89.9%]  (false,exec)
  D.46138_23 = &engine_21->read_codec;
  # DEBUG codec => D.46138_23
  if (D.46138_23 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;
  # SUCC: 8 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 8 freq:4185
  # PRED: 7 [85.0%]  (true,exec)
  D.47777_424 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
  D.47776_425 = D.47777_424 & 256;
  if (D.47776_425 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;
  # SUCC: 9 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 9 freq:2093
  # PRED: 8 [50.0%]  (true,exec)
  D.47775_426 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
  if (D.47775_426 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 10 freq:1779
  # PRED: 9 [85.0%]  (true,exec)
  D.47774_427 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
  if (D.47774_427 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:1512
  # PRED: 10 [85.0%]  (true,exec)
  D.47773_428 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
  if (D.47773_428 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 12 freq:3639
  # PRED: 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:4924
  # PRED: 11 [85.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # iftmp.104_429 = PHI <1(11), 0(12)>
  if (iftmp.104_429 == 0)
    goto <bb 127>;
  else
    goto <bb 14>;
  # SUCC: 127 [39.0%]  (true,exec) 14 [61.0%]  (false,exec)

  # BLOCK 14 freq:3003
  # PRED: 13 [61.0%]  (false,exec)
  D.46140_25 = engine_21->rtp_session;
  if (D.46140_25 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [0.0%]  (true,exec) 16 [100.0%]  (false,exec)

  # BLOCK 15 freq:1
  # PRED: 14 [0.0%]  (true,exec)
  __assert_fail ("engine->rtp_session != ((void *)0)", "src/switch_core_media.c", 1641, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 16 freq:3002
  # PRED: 14 [100.0%]  (false,exec)
  engine_21->read_frame.datalen = 0;
  D.46145_26 = session_13(D)->channel;
  D.46146_27 = switch_channel_get_state (D.46145_26);
  if (D.46146_27 > 9)
    goto <bb 127>;
  else
    goto <bb 17>;
  # SUCC: 127 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 17 freq:1170
  # PRED: 16 [39.0%]  (false,exec)
  D.46140_28 = engine_21->rtp_session;
  D.46148_29 = switch_rtp_ready (D.46140_28);
  if (D.46148_29 == 0)
    goto <bb 127>;
  else
    goto <bb 18>;
  # SUCC: 127 [61.0%]  (true,exec) 18 [39.0%]  (false,exec)

  # BLOCK 18 freq:456
  # PRED: 17 [39.0%]  (false,exec)
  D.46145_30 = session_13(D)->channel;
  D.46150_31 = switch_channel_test_flag (D.46145_30, 45);
  if (D.46150_31 != 0)
    goto <bb 127>;
  else
    goto <bb 19>;
  # SUCC: 127 [39.0%]  (true,exec) 19 [61.0%]  (false,exec)

  # BLOCK 19 freq:278
  # PRED: 18 [61.0%]  (false,exec)
  D.46151_32 = engine_21->read_mutex[type_19(D)];
  if (D.46151_32 != 0B)
    goto <bb 21>;
  else
    goto <bb 20>;
  # SUCC: 21 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 20 freq:190
  # PRED: 19 [30.2%]  (false,exec) 21 [54.7%]  (false,exec)
  # do_cng_183 = PHI <0(19), 0(21)>
  goto <bb 120>;
  # SUCC: 120 [100.0%]  (fallthru)

  # BLOCK 21 freq:194
  # PRED: 19 [69.8%]  (true,exec)
  D.46151_33 = engine_21->read_mutex[type_19(D)];
  D.46154_34 = switch_mutex_trylock (D.46151_33);
  if (D.46154_34 != 0)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 [45.3%]  (true,exec) 20 [54.7%]  (false,exec)

  # BLOCK 22 freq:88
  # PRED: 21 [45.3%]  (true,exec)
  D.46145_35 = session_13(D)->channel;
  D.46157_36 = switch_channel_get_name (D.46145_35);
  if (type_19(D) == 1)
    goto <bb 24>;
  else
    goto <bb 23>;
  # SUCC: 24 [19.9%]  (true,exec) 23 [80.1%]  (false,exec)

  # BLOCK 23 freq:71
  # PRED: 22 [80.1%]  (false,exec)
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:88
  # PRED: 22 [19.9%]  (true,exec) 23 [100.0%]  (fallthru,exec)
  # iftmp.129_11 = PHI <"video"(22), "audio"(23)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1650, session_13(D), 101, "%s is already being read for %s\n", D.46157_36, iftmp.129_11);
  goto <bb 127>;
  # SUCC: 127 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:542
  # PRED: 121 [98.0%]  (true,exec)
  engine_21->read_frame.flags = 0;
  D.46140_42 = engine_21->rtp_session;
  D.46162_43 = &engine_21->read_frame;
  status_45 = switch_rtp_zerocopy_read_frame (D.46140_42, D.46162_43, flags_44(D));
  # DEBUG status => status_45
  D.46163_46 = status_45 != 0;
  D.46164_47 = status_45 != 11;
  D.46165_48 = D.46163_46 && D.46164_47;
  if (D.46165_48 != 0)
    goto <bb 26>;
  else
    goto <bb 30>;
  # SUCC: 26 [2.0%]  (true,exec) 30 [98.0%]  (false,exec)

  # BLOCK 26 freq:11
  # PRED: 25 [2.0%]  (true,exec)
  if (status_45 == 2)
    goto <bb 27>;
  else
    goto <bb 125> (end);
  # SUCC: 27 [13.7%]  (true,exec) 125 [86.3%]  (false,exec)

  # BLOCK 27 freq:1
  # PRED: 26 [13.7%]  (true,exec)
  D.46145_49 = session_13(D)->channel;
  D.46170_50 = switch_channel_get_variable_dup (D.46145_49, "execute_on_media_timeout", 1, -1);
  if (D.46170_50 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

  # BLOCK 28 freq:1
  # PRED: 27 [85.0%]  (true,exec)
  D.46162_51 = &engine_21->read_frame;
  *frame_52(D) = D.46162_51;
  D.46173_54 = *frame_52(D);
  D.46174_55 = D.46173_54->flags;
  D.46175_56 = D.46174_55 | 1;
  D.46173_54->flags = D.46175_56;
  D.46173_57 = *frame_52(D);
  D.46176_58 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_57->datalen = D.46176_58;
  D.46173_59 = *frame_52(D);
  D.46177_60 = D.46173_59->data;
  D.46173_61 = *frame_52(D);
  D.46178_62 = D.46173_61->datalen;
  memset (D.46177_60, 0, D.46178_62);
  D.46145_63 = session_13(D)->channel;
  switch_channel_execute_on (D.46145_63, "execute_on_media_timeout");
  # DEBUG status => 0
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 29
  # PRED: 27 [15.0%]  (false,exec)
  D.46145_65 = session_13(D)->channel;
  switch_channel_perform_hangup (D.46145_65, "src/switch_core_media.c", &__func__, 1674, 604);
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:532
  # PRED: 25 [98.0%]  (false,exec)
  D.46179_66 = engine_21->reset_codec;
  if (D.46179_66 != 0)
    goto <bb 31>;
  else
    goto <bb 48>;
  # SUCC: 31 [29.0%]  (true,exec) 48 [71.0%]  (false,exec)

  # BLOCK 31 freq:154
  # PRED: 30 [29.0%]  (true,exec)
  # DEBUG rtp_timeout_sec => 0
  # DEBUG rtp_hold_timeout_sec => 0
  engine_21->reset_codec = 0;
  D.46140_69 = engine_21->rtp_session;
  D.46182_70 = switch_rtp_ready (D.46140_69);
  if (D.46182_70 != 0)
    goto <bb 32>;
  else
    goto <bb 47>;
  # SUCC: 32 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

  # BLOCK 32 freq:77
  # PRED: 31 [50.0%]  (true,exec)
  if (type_19(D) == 1)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [28.0%]  (true,exec) 34 [72.0%]  (false,exec)

  # BLOCK 33 freq:22
  # PRED: 32 [28.0%]  (true,exec)
  switch_core_media_set_video_codec (session_13(D), 1);
  goto <bb 36>;
  # SUCC: 36 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:55
  # PRED: 32 [72.0%]  (false,exec)
  D.46188_71 = switch_core_media_set_codec (session_13(D), 1, 0);
  if (D.46188_71 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [2.0%]  (true,exec) 36 [98.0%]  (false,exec)

  # BLOCK 35 freq:1
  # PRED: 34 [2.0%]  (true,exec)
  *frame_52(D) = 0B;
  # DEBUG status => 9
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:76
  # PRED: 33 [100.0%]  (fallthru,exec) 34 [98.0%]  (false,exec)
  D.46145_73 = session_13(D)->channel;
  val_74 = switch_channel_get_variable_dup (D.46145_73, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_74
  if (val_74 != 0B)
    goto <bb 37>;
  else
    goto <bb 39>;
  # SUCC: 37 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

  # BLOCK 37 freq:53
  # PRED: 36 [69.8%]  (true,exec)
  # DEBUG __nptr => val_74
  v_431 = strtol (val_74, 0B, 10);
  # DEBUG v => NULL
  if (v_431 >= 0)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [73.0%]  (true,exec) 39 [27.0%]  (false,exec)

  # BLOCK 38 freq:39
  # PRED: 37 [73.0%]  (true,exec)
  # DEBUG rtp_timeout_sec => v_431
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:76
  # PRED: 36 [30.2%]  (false,exec) 37 [27.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
  # rtp_timeout_sec_4 = PHI <0(36), 0(37), v_431(38)>
  # DEBUG rtp_timeout_sec => rtp_timeout_sec_4
  D.46145_77 = session_13(D)->channel;
  val_78 = switch_channel_get_variable_dup (D.46145_77, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_78
  if (val_78 != 0B)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

  # BLOCK 40 freq:53
  # PRED: 39 [69.8%]  (true,exec)
  # DEBUG __nptr => val_78
  v_432 = strtol (val_78, 0B, 10);
  # DEBUG v => NULL
  if (v_432 >= 0)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [73.0%]  (true,exec) 42 [27.0%]  (false,exec)

  # BLOCK 41 freq:39
  # PRED: 40 [73.0%]  (true,exec)
  # DEBUG rtp_hold_timeout_sec => v_432
  # SUCC: 42 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:76
  # PRED: 39 [30.2%]  (false,exec) 40 [27.0%]  (false,exec) 41 [100.0%]  (fallthru,exec)
  # rtp_hold_timeout_sec_5 = PHI <0(39), 0(40), v_432(41)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_5
  if (rtp_timeout_sec_4 != 0)
    goto <bb 43>;
  else
    goto <bb 45>;
  # SUCC: 43 [29.0%]  (true,exec) 45 [71.0%]  (false,exec)

  # BLOCK 43 freq:22
  # PRED: 42 [29.0%]  (true,exec)
  D.46201_81 = engine_21->read_impl.samples_per_second;
  rtp_timeout_sec.130_82 = (uint32_t) rtp_timeout_sec_4;
  D.46203_83 = D.46201_81 * rtp_timeout_sec.130_82;
  D.46204_84 = engine_21->read_impl.samples_per_packet;
  D.46205_85 = D.46203_83 / D.46204_84;
  engine_21->max_missed_packets = D.46205_85;
  D.46140_86 = engine_21->rtp_session;
  D.46206_87 = engine_21->max_missed_packets;
  switch_rtp_set_max_missed_packets (D.46140_86, D.46206_87);
  if (rtp_hold_timeout_sec_5 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

  # BLOCK 44 freq:11
  # PRED: 43 [50.0%]  (true,exec)
  rtp_hold_timeout_sec_88 = rtp_timeout_sec_4 * 10;
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_88
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:76
  # PRED: 42 [71.0%]  (false,exec) 43 [50.0%]  (false,exec) 44 [100.0%]  (fallthru,exec)
  # rtp_hold_timeout_sec_6 = PHI <rtp_hold_timeout_sec_5(42), rtp_hold_timeout_sec_5(43), rtp_hold_timeout_sec_88(44)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_6
  if (rtp_hold_timeout_sec_6 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

  # BLOCK 46 freq:38
  # PRED: 45 [50.0%]  (true,exec)
  D.46201_89 = engine_21->read_impl.samples_per_second;
  rtp_hold_timeout_sec.131_90 = (uint32_t) rtp_hold_timeout_sec_6;
  D.46212_91 = D.46201_89 * rtp_hold_timeout_sec.131_90;
  D.46204_92 = engine_21->read_impl.samples_per_packet;
  D.46213_93 = D.46212_91 / D.46204_92;
  engine_21->max_missed_hold_packets = D.46213_93;
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:153
  # PRED: 31 [50.0%]  (false,exec) 45 [50.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  engine_21->check_frames = 0;
  engine_21->last_ts = 0;
  # DEBUG do_cng => 1
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:530
  # PRED: 30 [71.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  # do_cng_2 = PHI <do_cng_3(30), 1(47)>
  # DEBUG do_cng => do_cng_2
  if (do_cng_2 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [2.0%]  (true,exec) 50 [98.0%]  (false,exec)

  # BLOCK 49 freq:11
  # PRED: 48 [2.0%]  (true,exec)
  D.46162_95 = &engine_21->read_frame;
  *frame_52(D) = D.46162_95;
  D.46173_97 = *frame_52(D);
  D.46174_98 = D.46173_97->flags;
  D.46175_99 = D.46174_98 | 1;
  D.46173_97->flags = D.46175_99;
  D.46173_100 = *frame_52(D);
  D.46176_101 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_100->datalen = D.46176_101;
  D.46173_102 = *frame_52(D);
  D.46177_103 = D.46173_102->data;
  D.46173_104 = *frame_52(D);
  D.46178_105 = D.46173_104->datalen;
  memset (D.46177_103, 0, D.46178_105);
  # DEBUG status => 0
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:520
  # PRED: 48 [98.0%]  (false,exec)
  D.46140_107 = engine_21->rtp_session;
  D.46216_108 = switch_rtcp_zerocopy_read_frame (D.46140_107, &rtcp_frame);
  if (D.46216_108 == 0)
    goto <bb 51>;
  else
    goto <bb 58>;
  # SUCC: 51 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

  # BLOCK 51 freq:151
  # PRED: 50 [29.0%]  (true,exec)
  D.46219_109 = switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 1747, &event, 71, 0B);
  if (D.46219_109 == 0)
    goto <bb 52>;
  else
    goto <bb 58>;
  # SUCC: 52 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

  # BLOCK 52 freq:44
  # PRED: 51 [29.0%]  (true,exec)
  uuid_110 = switch_core_session_get_uuid (session_13(D));
  # DEBUG uuid => uuid_110
  if (uuid_110 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;
  # SUCC: 53 [69.8%]  (true,exec) 54 [30.2%]  (false,exec)

  # BLOCK 53 freq:31
  # PRED: 52 [69.8%]  (true,exec)
  event.132_111 = event;
  D.46225_112 = switch_core_session_get_uuid (session_13(D));
  switch_event_add_header_string (event.132_111, 1, "Unique-ID", D.46225_112);
  # SUCC: 54 [100.0%]  (fallthru,exec)

  # BLOCK 54 freq:44
  # PRED: 52 [30.2%]  (false,exec) 53 [100.0%]  (fallthru,exec)
  D.46227_114 = rtcp_frame.ssrc;
  snprintf (&value, 30, &"%.8x"[0], D.46227_114);
  event.132_115 = event;
  switch_event_add_header_string (event.132_115, 1, "SSRC", &value);
  D.46229_117 = rtcp_frame.ntp_msw;
  snprintf (&value, 30, &"%u"[0], D.46229_117);
  event.132_118 = event;
  switch_event_add_header_string (event.132_118, 1, "NTP-Most-Significant-Word", &value);
  D.46230_120 = rtcp_frame.ntp_lsw;
  snprintf (&value, 30, &"%u"[0], D.46230_120);
  event.132_121 = event;
  switch_event_add_header_string (event.132_121, 1, "NTP-Least-Significant-Word", &value);
  D.46231_123 = rtcp_frame.timestamp;
  snprintf (&value, 30, &"%u"[0], D.46231_123);
  event.132_124 = event;
  switch_event_add_header_string (event.132_124, 1, "RTP-Timestamp", &value);
  D.46232_126 = rtcp_frame.packet_count;
  snprintf (&value, 30, &"%u"[0], D.46232_126);
  event.132_127 = event;
  switch_event_add_header_string (event.132_127, 1, "Sender-Packet-Count", &value);
  D.46233_129 = rtcp_frame.octect_count;
  snprintf (&value, 30, &"%u"[0], D.46233_129);
  event.132_130 = event;
  switch_event_add_header_string (event.132_130, 1, "Octect-Packet-Count", &value);
  D.46235_132 = engine_21->read_frame.timestamp;
  snprintf (&value, 30, &"%d"[0], D.46235_132);
  event.132_133 = event;
  switch_event_add_header_string (event.132_133, 1, "Last-RTP-Timestamp", &value);
  D.46236_135 = engine_21->read_frame.rate;
  snprintf (&value, 30, &"%u"[0], D.46236_135);
  event.132_136 = event;
  switch_event_add_header_string (event.132_136, 1, "RTP-Rate", &value);
  D.46238_138 = switch_time_now ();
  snprintf (&value, 30, &"%lld"[0], D.46238_138);
  event.132_139 = event;
  switch_event_add_header_string (event.132_139, 1, "Capture-Time", &value);
  # DEBUG i => 0
  goto <bb 56>;
  # SUCC: 56 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:219
  # PRED: 56 [83.3%]  (true,exec)
  snprintf (&header, 50, &"Source%u-SSRC"[0], i_7);
  D.46240_145 = rtcp_frame.reports[i_7].ssrc;
  snprintf (&value, 30, &"%.8x"[0], D.46240_145);
  event.132_146 = event;
  switch_event_add_header_string (event.132_146, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Fraction"[0], i_7);
  D.46242_149 = rtcp_frame.reports[i_7].fraction;
  D.46243_150 = (int) D.46242_149;
  snprintf (&value, 30, &"%u"[0], D.46243_150);
  event.132_151 = event;
  switch_event_add_header_string (event.132_151, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Lost"[0], i_7);
  D.46245_154 = rtcp_frame.reports[i_7].lost;
  snprintf (&value, 30, &"%u"[0], D.46245_154);
  event.132_155 = event;
  switch_event_add_header_string (event.132_155, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Highest-Sequence-Number-Received"[0], i_7);
  D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
  snprintf (&value, 30, &"%u"[0], D.46247_158);
  event.132_159 = event;
  switch_event_add_header_string (event.132_159, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Jitter"[0], i_7);
  D.46249_162 = rtcp_frame.reports[i_7].jitter;
  snprintf (&value, 30, &"%u"[0], D.46249_162);
  event.132_163 = event;
  switch_event_add_header_string (event.132_163, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-LSR"[0], i_7);
  D.46251_166 = rtcp_frame.reports[i_7].lsr;
  snprintf (&value, 30, &"%u"[0], D.46251_166);
  event.132_167 = event;
  switch_event_add_header_string (event.132_167, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-DLSR"[0], i_7);
  D.46253_170 = rtcp_frame.reports[i_7].dlsr;
  snprintf (&value, 30, &"%u"[0], D.46253_170);
  event.132_171 = event;
  switch_event_add_header_string (event.132_171, 1, &header, &value);
  i_172 = i_7 + 1;
  # DEBUG i => i_172
  # SUCC: 56 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 56 freq:262
  # PRED: 54 [100.0%]  (fallthru,exec) 55 [100.0%]  (fallthru,dfs_back,exec)
  # i_7 = PHI <0(54), i_172(55)>
  # DEBUG i => i_7
  D.46254_141 = rtcp_frame.report_count;
  D.46255_142 = (int) D.46254_141;
  if (D.46255_142 > i_7)
    goto <bb 55>;
  else
    goto <bb 57>;
  # SUCC: 55 [83.3%]  (true,exec) 57 [16.7%]  (false,exec)

  # BLOCK 57 freq:44
  # PRED: 56 [16.7%]  (false,exec)
  switch_event_fire_detailed ("src/switch_core_media.c", &__func__, 1809, &event, 0B);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1810, session_13(D), 110, "Dispatched RTCP event\n");
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:520
  # PRED: 50 [71.0%]  (false,exec) 51 [71.0%]  (false,exec) 57 [100.0%]  (fallthru,exec)
  D.46256_173 = engine_21->read_frame.flags;
  D.46257_174 = D.46256_173 & 32;
  if (D.46257_174 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;
  # SUCC: 59 [2.0%]  (true,exec) 60 [98.0%]  (false,exec)

  # BLOCK 59 freq:10
  # PRED: 58 [2.0%]  (true,exec)
  D.46162_175 = &engine_21->read_frame;
  *frame_52(D) = D.46162_175;
  # DEBUG status => 0
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 60 freq:509
  # PRED: 58 [98.0%]  (false,exec)
  D.46140_177 = engine_21->rtp_session;
  D.46260_178 = switch_rtp_has_dtmf (D.46140_177);
  if (D.46260_178 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;
  # SUCC: 61 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

  # BLOCK 61 freq:148
  # PRED: 60 [29.0%]  (true,exec)
  dtmf = {};
  D.46140_179 = engine_21->rtp_session;
  switch_rtp_dequeue_dtmf (D.46140_179, &dtmf);
  D.46145_180 = session_13(D)->channel;
  switch_channel_queue_dtmf (D.46145_180, &dtmf);
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 62 freq:509
  # PRED: 60 [71.0%]  (false,exec) 61 [100.0%]  (fallthru,exec)
  D.46263_181 = engine_21->read_frame.datalen;
  if (D.46263_181 != 0)
    goto <bb 63>;
  else
    goto <bb 119>;
  # SUCC: 63 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

  # BLOCK 63 freq:255
  # PRED: 62 [50.0%]  (true,exec)
  # DEBUG bytes => 0
  # DEBUG frames => 1
  D.46256_184 = engine_21->read_frame.flags;
  D.46266_185 = D.46256_184 & 1;
  if (D.46266_185 == 0)
    goto <bb 64>;
  else
    goto <bb 122>;
  # SUCC: 64 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

  # BLOCK 64 freq:250
  # PRED: 63 [98.0%]  (true,exec)
  D.46136_186 = engine_21->read_codec.implementation;
  if (D.46136_186 == 0B)
    goto <bb 72>;
  else
    goto <bb 65>;
  # SUCC: 72 [2.0%]  (true,exec) 65 [98.0%]  (false,exec)

  # BLOCK 65 freq:245
  # PRED: 64 [98.0%]  (false,exec)
  D.46138_187 = &engine_21->read_codec;
  # DEBUG codec => D.46138_187
  if (D.46138_187 != 0B)
    goto <bb 66>;
  else
    goto <bb 70>;
  # SUCC: 66 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

  # BLOCK 66 freq:208
  # PRED: 65 [85.0%]  (true,exec)
  D.47792_433 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
  D.47791_434 = D.47792_433 & 256;
  if (D.47791_434 != 0)
    goto <bb 67>;
  else
    goto <bb 70>;
  # SUCC: 67 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 67 freq:104
  # PRED: 66 [50.0%]  (true,exec)
  D.47790_435 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
  if (D.47790_435 != 0B)
    goto <bb 68>;
  else
    goto <bb 70>;
  # SUCC: 68 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

  # BLOCK 68 freq:88
  # PRED: 67 [85.0%]  (true,exec)
  D.47789_436 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
  if (D.47789_436 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;
  # SUCC: 69 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

  # BLOCK 69 freq:75
  # PRED: 68 [85.0%]  (true,exec)
  D.47788_437 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
  if (D.47788_437 != 0B)
    goto <bb 71>;
  else
    goto <bb 70>;
  # SUCC: 71 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

  # BLOCK 70 freq:181
  # PRED: 65 [15.0%]  (false,exec) 66 [50.0%]  (false,exec) 67 [15.0%]  (false,exec) 68 [15.0%]  (false,exec) 69 [15.0%]  (false,exec)
  # SUCC: 71 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:245
  # PRED: 69 [85.0%]  (true,exec) 70 [100.0%]  (fallthru,exec)
  # iftmp.104_438 = PHI <1(69), 0(70)>
  if (iftmp.104_438 == 0)
    goto <bb 72>;
  else
    goto <bb 73>;
  # SUCC: 72 [2.0%]  (true,exec) 73 [98.0%]  (false,exec)

  # BLOCK 72 freq:10
  # PRED: 64 [2.0%]  (true,exec) 71 [2.0%]  (true,exec)
  *frame_52(D) = 0B;
  # DEBUG status => 9
  goto <bb 125> (end);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 73 freq:240
  # PRED: 71 [98.0%]  (false,exec)
  D.46273_189 = smh_14->media_flags[2];
  if (D.46273_189 != 0)
    goto <bb 74>;
  else
    goto <bb 96>;
  # SUCC: 74 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 74 freq:120
  # PRED: 73 [50.0%]  (true,exec)
  D.46276_190 = engine_21->check_frames;
  if (D.46276_190 <= 49)
    goto <bb 75>;
  else
    goto <bb 96>;
  # SUCC: 75 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 75 freq:60
  # PRED: 74 [50.0%]  (true,exec)
  D.46276_191 = engine_21->check_frames;
  D.46279_192 = D.46276_191 + 1;
  engine_21->check_frames = D.46279_192;
  D.46176_193 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46176_193 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;
  # SUCC: 76 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

  # BLOCK 76 freq:30
  # PRED: 75 [50.0%]  (true,exec)
  engine_21->check_frames = 50;
  goto <bb 115> (skip);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 77 freq:30
  # PRED: 75 [50.0%]  (false,exec)
  D.46273_194 = smh_14->media_flags[2];
  if (D.46273_194 != 0)
    goto <bb 78>;
  else
    goto <bb 95>;
  # SUCC: 78 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

  # BLOCK 78 freq:15
  # PRED: 77 [50.0%]  (true,exec)
  D.46263_195 = engine_21->read_frame.datalen;
  D.46285_196 = D.46263_195 % 10;
  if (D.46285_196 == 0)
    goto <bb 79>;
  else
    goto <bb 95>;
  # SUCC: 79 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

  # BLOCK 79 freq:7
  # PRED: 78 [50.0%]  (true,exec)
  D.46289_197 = engine_21->last_ts;
  if (D.46289_197 != 0)
    goto <bb 80>;
  else
    goto <bb 93>;
  # SUCC: 80 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

  # BLOCK 80 freq:4
  # PRED: 79 [50.0%]  (true,exec)
  D.46263_198 = engine_21->read_frame.datalen;
  D.46176_199 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46263_198 != D.46176_199)
    goto <bb 81>;
  else
    goto <bb 93>;
  # SUCC: 81 [72.0%]  (true,exec) 93 [28.0%]  (false,exec)

  # BLOCK 81 freq:3
  # PRED: 80 [72.0%]  (true,exec)
  D.46235_200 = engine_21->read_frame.timestamp;
  D.46289_201 = engine_21->last_ts;
  D.46292_202 = D.46235_200 - D.46289_201;
  D.46201_203 = engine_21->read_impl.samples_per_second;
  D.46293_204 = D.46201_203 / 1000;
  codec_ms_205 = D.46292_202 / D.46293_204;
  # DEBUG codec_ms => codec_ms_205
  D.46296_206 = codec_ms_205 % 10;
  if (D.46296_206 != 0)
    goto <bb 83>;
  else
    goto <bb 82>;
  # SUCC: 83 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 82 freq:1
  # PRED: 81 [50.0%]  (false,exec)
  D.46204_207 = engine_21->read_impl.samples_per_packet;
  D.46298_208 = D.46204_207 * 10;
  if (D.46298_208 < codec_ms_205)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 83 freq:2
  # PRED: 81 [50.0%]  (true,exec) 82 [50.0%]  (true,exec)
  engine_21->last_ts = 0;
  goto <bb 115> (skip);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:1
  # PRED: 82 [50.0%]  (false,exec)
  D.46299_209 = engine_21->last_codec_ms;
  if (D.46299_209 != 0)
    goto <bb 85>;
  else
    goto <bb 87>;
  # SUCC: 85 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

  # BLOCK 85
  # PRED: 84 [50.0%]  (true,exec)
  D.46299_210 = engine_21->last_codec_ms;
  if (D.46299_210 == codec_ms_205)
    goto <bb 86>;
  else
    goto <bb 87>;
  # SUCC: 86 [28.0%]  (true,exec) 87 [72.0%]  (false,exec)

  # BLOCK 86
  # PRED: 85 [28.0%]  (true,exec)
  D.46304_211 = engine_21->mismatch_count;
  D.46305_212 = D.46304_211 + 1;
  engine_21->mismatch_count = D.46305_212;
  # SUCC: 87 [100.0%]  (fallthru,exec)

  # BLOCK 87 freq:1
  # PRED: 84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [100.0%]  (fallthru,exec)
  engine_21->last_codec_ms = codec_ms_205;
  D.46304_213 = engine_21->mismatch_count;
  if (D.46304_213 > 5)
    goto <bb 88>;
  else
    goto <bb 94>;
  # SUCC: 88 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

  # BLOCK 88
  # PRED: 87 [50.0%]  (true,exec)
  D.46308_214 = engine_21->cur_payload_map;
  D.46309_215 = D.46308_214->codec_ms;
  if (D.46309_215 != codec_ms_205)
    goto <bb 89>;
  else
    goto <bb 94>;
  # SUCC: 89 [72.0%]  (true,exec) 94 [28.0%]  (false,exec)

  # BLOCK 89
  # PRED: 88 [72.0%]  (true,exec)
  if (codec_ms_205 > 120)
    goto <bb 90>;
  else
    goto <bb 91>;
  # SUCC: 90 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

  # BLOCK 90
  # PRED: 89 [29.0%]  (true,exec)
  codec_ms.133_216 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1871, session_13(D), 4, "Your phone is trying to send timestamps that suggest an increment of %dms per packet\nThat seems hard to believe so I am going to go on ahead and um ignore that, mmkay?\n", codec_ms.133_216);
  engine_21->check_frames = 50;
  goto <bb 115> (skip);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 91
  # PRED: 89 [71.0%]  (false,exec)
  engine_21->read_frame.datalen = 0;
  D.46308_217 = engine_21->cur_payload_map;
  D.46309_218 = D.46308_217->codec_ms;
  if (D.46309_218 != codec_ms_205)
    goto <bb 92>;
  else
    goto <bb 94>;
  # SUCC: 92 [51.2%]  (true,exec) 94 [48.8%]  (false,exec)

  # BLOCK 92
  # PRED: 91 [51.2%]  (true,exec)
  D.46308_219 = engine_21->cur_payload_map;
  D.46309_220 = D.46308_219->codec_ms;
  D.46317_221 = (int) D.46309_220;
  codec_ms.133_222 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1882, session_13(D), 4, "Asynchronous PTIME not supported, changing our end from %d to %d\n", D.46317_221, codec_ms.133_222);
  D.46145_223 = session_13(D)->channel;
  D.46308_224 = engine_21->cur_payload_map;
  D.46309_225 = D.46308_224->codec_ms;
  D.46317_226 = (int) D.46309_225;
  codec_ms.133_227 = (int) codec_ms_205;
  switch_channel_set_variable_printf (D.46145_223, "rtp_h_X-Broken-PTIME", "Adv=%d;Sent=%d", D.46317_226, codec_ms.133_227);
  D.46308_228 = engine_21->cur_payload_map;
  D.46308_228->codec_ms = codec_ms_205;
  engine_21->reset_codec = 2;
  goto <bb 94>;
  # SUCC: 94 [100.0%]  (fallthru,exec)

  # BLOCK 93 freq:5
  # PRED: 79 [50.0%]  (false,exec) 80 [28.0%]  (false,exec)
  engine_21->mismatch_count = 0;
  # SUCC: 94 [100.0%]  (fallthru,exec)

  # BLOCK 94 freq:5
  # PRED: 88 [28.0%]  (false,exec) 93 [100.0%]  (fallthru,exec) 87 [50.0%]  (false,exec) 92 [100.0%]  (fallthru,exec) 91 [48.8%]  (false,exec)
  D.46235_229 = engine_21->read_frame.timestamp;
  engine_21->last_ts = D.46235_229;
  goto <bb 96>;
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 95 freq:22
  # PRED: 77 [50.0%]  (false,exec) 78 [50.0%]  (false,exec)
  engine_21->mismatch_count = 0;
  engine_21->last_ts = 0;
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 96 freq:208
  # PRED: 73 [50.0%]  (false,exec) 74 [50.0%]  (false,exec) 94 [100.0%]  (fallthru,exec) 95 [100.0%]  (fallthru,exec)
  D.46179_230 = engine_21->reset_codec;
  if (D.46179_230 == 0)
    goto <bb 97>;
  else
    goto <bb 115> (skip);
  # SUCC: 97 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

  # BLOCK 97 freq:104
  # PRED: 96 [50.0%]  (true,exec)
  D.46324_231 = engine_21->codec_negotiated;
  if (D.46324_231 != 0)
    goto <bb 98>;
  else
    goto <bb 115> (skip);
  # SUCC: 98 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

  # BLOCK 98 freq:52
  # PRED: 97 [50.0%]  (true,exec)
  D.46327_232 = smh_14->mparams;
  D.46328_233 = D.46327_232->cng_pt;
  if (D.46328_233 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;
  # SUCC: 100 [50.0%]  (true,exec) 99 [50.0%]  (false,exec)

  # BLOCK 99 freq:26
  # PRED: 98 [50.0%]  (false,exec)
  D.46330_234 = engine_21->read_frame.payload;
  D.46327_235 = smh_14->mparams;
  D.46328_236 = D.46327_235->cng_pt;
  if (D.46330_234 != D.46328_236)
    goto <bb 100>;
  else
    goto <bb 115> (skip);
  # SUCC: 100 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

  # BLOCK 100 freq:45
  # PRED: 98 [50.0%]  (true,exec) 99 [72.0%]  (true,exec)
  D.46327_237 = smh_14->mparams;
  D.46331_238 = D.46327_237->recv_te;
  if (D.46331_238 == 0)
    goto <bb 102>;
  else
    goto <bb 101>;
  # SUCC: 102 [50.0%]  (true,exec) 101 [50.0%]  (false,exec)

  # BLOCK 101 freq:22
  # PRED: 100 [50.0%]  (false,exec)
  D.46330_239 = engine_21->read_frame.payload;
  D.46327_240 = smh_14->mparams;
  D.46331_241 = D.46327_240->recv_te;
  if (D.46330_239 != D.46331_241)
    goto <bb 102>;
  else
    goto <bb 115> (skip);
  # SUCC: 102 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

  # BLOCK 102 freq:38
  # PRED: 100 [50.0%]  (true,exec) 101 [72.0%]  (true,exec)
  D.46327_242 = smh_14->mparams;
  D.46333_243 = D.46327_242->te;
  if (D.46333_243 == 0)
    goto <bb 104>;
  else
    goto <bb 103>;
  # SUCC: 104 [50.0%]  (true,exec) 103 [50.0%]  (false,exec)

  # BLOCK 103 freq:19
  # PRED: 102 [50.0%]  (false,exec)
  D.46330_244 = engine_21->read_frame.payload;
  D.46327_245 = smh_14->mparams;
  D.46333_246 = D.46327_245->te;
  if (D.46330_244 != D.46333_246)
    goto <bb 104>;
  else
    goto <bb 115> (skip);
  # SUCC: 104 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

  # BLOCK 104 freq:33
  # PRED: 102 [50.0%]  (true,exec) 103 [72.0%]  (true,exec)
  D.46330_247 = engine_21->read_frame.payload;
  D.46308_248 = engine_21->cur_payload_map;
  D.46335_249 = D.46308_248->recv_pt;
  if (D.46330_247 != D.46335_249)
    goto <bb 105>;
  else
    goto <bb 115> (skip);
  # SUCC: 105 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

  # BLOCK 105 freq:24
  # PRED: 104 [72.0%]  (true,exec)
  D.46330_250 = engine_21->read_frame.payload;
  D.46308_251 = engine_21->cur_payload_map;
  D.46338_252 = D.46308_251->agreed_pt;
  if (D.46330_250 != D.46338_252)
    goto <bb 106>;
  else
    goto <bb 115> (skip);
  # SUCC: 106 [72.0%]  (true,exec) 115 [28.0%]  (false,exec)

  # BLOCK 106 freq:17
  # PRED: 105 [72.0%]  (true,exec)
  D.46330_253 = engine_21->read_frame.payload;
  D.46308_254 = engine_21->cur_payload_map;
  D.46341_255 = D.46308_254->pt;
  if (D.46330_253 != D.46341_255)
    goto <bb 107>;
  else
    goto <bb 115> (skip);
  # SUCC: 107 [51.2%]  (true,exec) 115 [48.8%]  (false,exec)

  # BLOCK 107 freq:9
  # PRED: 106 [51.2%]  (true,exec)
  D.46330_256 = engine_21->read_frame.payload;
  D.46344_257 = (int) D.46330_256;
  D.46308_258 = engine_21->cur_payload_map;
  D.46338_259 = D.46308_258->agreed_pt;
  D.46345_260 = (int) D.46338_259;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1926, session_13(D), 7, "alternate payload received (received %d, expecting %d)\n", D.46344_257, D.46345_260);
  D.46346_261 = smh_14->sdp_mutex;
  switch_mutex_lock (D.46346_261);
  pmap_262 = engine_21->payload_map;
  # DEBUG pmap => pmap_262
  goto <bb 112>;
  # SUCC: 112 [100.0%]  (fallthru,exec)

  # BLOCK 108 freq:147
  # PRED: 112 [95.5%]  (true,exec)
  D.46330_263 = engine_21->read_frame.payload;
  D.46347_264 = pmap_9->recv_pt;
  if (D.46330_263 == D.46347_264)
    goto <bb 109>;
  else
    goto <bb 111>;
  # SUCC: 109 [28.0%]  (true,exec) 111 [72.0%]  (false,exec)

  # BLOCK 109 freq:41
  # PRED: 108 [28.0%]  (true,exec)
  D.46350_265 = pmap_9->negotiated;
  if (D.46350_265 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;
  # SUCC: 110 [4.5%]  (true,exec) 111 [95.5%]  (false,exec)

  # BLOCK 110 freq:2
  # PRED: 109 [4.5%]  (true,exec)
  engine_21->cur_payload_map = pmap_9;
  D.46308_266 = engine_21->cur_payload_map;
  D.46308_266->current = 1;
  D.46353_267 = pmap_9->iananame;
  D.46354_268 = pmap_9->pt;
  D.46355_269 = (int) D.46354_268;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1937, session_13(D), 4, "Changing current codec to %s (payload type %d).\n", D.46353_267, D.46355_269);
  engine_21->reset_codec = 1;
  goto <bb 113>;
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 111 freq:145
  # PRED: 108 [72.0%]  (false,exec) 109 [95.5%]  (false,exec)
  pmap_270 = pmap_9->next;
  # DEBUG pmap => pmap_270
  # SUCC: 112 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 112 freq:154
  # PRED: 107 [100.0%]  (fallthru,exec) 111 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_9 = PHI <pmap_262(107), pmap_270(111)>
  # DEBUG pmap => pmap_9
  if (pmap_9 != 0B)
    goto <bb 108>;
  else
    goto <bb 113>;
  # SUCC: 108 [95.5%]  (true,exec) 113 [4.5%]  (false,exec)

  # BLOCK 113 freq:9
  # PRED: 110 [100.0%]  (fallthru,exec) 112 [4.5%]  (false,exec)
  D.46346_271 = smh_14->sdp_mutex;
  switch_mutex_unlock (D.46346_271);
  D.46179_272 = engine_21->reset_codec;
  if (D.46179_272 == 0)
    goto <bb 114>;
  else
    goto <bb 115> (skip);
  # SUCC: 114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

  # BLOCK 114 freq:3
  # PRED: 113 [29.0%]  (true,exec)
  D.46330_273 = engine_21->read_frame.payload;
  D.46344_274 = (int) D.46330_273;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1949, session_13(D), 4, "Could not change to payload type %d, ignoring...\n", D.46344_274);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:240
  # PRED: 76 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 90 [100.0%]  (fallthru,exec) 96 [50.0%]  (false,exec) 97 [50.0%]  (false,exec) 99 [28.0%]  (false,exec) 101 [28.0%]  (false,exec) 103 [28.0%]  (false,exec) 104 [28.0%]  (false,exec) 105 [28.0%]  (false,exec) 106 [48.8%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
skip:
  bytes_275 = engine_21->read_impl.encoded_bytes_per_packet;
  # DEBUG bytes => bytes_275
  if (bytes_275 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;
  # SUCC: 116 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

  # BLOCK 116 freq:120
  # PRED: 115 [50.0%]  (true,exec)
  D.46263_276 = engine_21->read_frame.datalen;
  D.46360_277 = D.46263_276 / bytes_275;
  frames_278 = (int) D.46360_277;
  # DEBUG frames => frames_278
  # SUCC: 117 [100.0%]  (fallthru,exec)

  # BLOCK 117 freq:240
  # PRED: 115 [50.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
  # frames_8 = PHI <1(115), frames_278(116)>
  # DEBUG frames => frames_8
  D.46204_279 = engine_21->read_impl.samples_per_packet;
  frames.134_280 = (uint32_t) frames_8;
  D.46362_281 = D.46204_279 * frames.134_280;
  engine_21->read_frame.samples = D.46362_281;
  D.46263_282 = engine_21->read_frame.datalen;
  if (D.46263_282 == 0)
    goto <bb 118>;
  else
    goto <bb 122>;
  # SUCC: 118 [50.0%]  (true,exec) 122 [50.0%]  (false,exec)

  # BLOCK 118 freq:120
  # PRED: 117 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  # SUCC: 119 [100.0%]  (fallthru,exec)

  # BLOCK 119 freq:375
  # PRED: 118 [100.0%]  (fallthru,exec) 62 [50.0%]  (false,exec)
  # do_cng_286 = PHI <do_cng_2(118), do_cng_2(62)>
  # SUCC: 120 [100.0%]  (fallthru,dfs_back)

  # BLOCK 120 freq:565
  # PRED: 20 [100.0%]  (fallthru) 119 [100.0%]  (fallthru,dfs_back)
  # do_cng_3 = PHI <do_cng_183(20), do_cng_286(119)>
  # DEBUG do_cng => do_cng_3
  D.46129_40 = smh_14->media_flags[0];
  if (D.46129_40 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;
  # SUCC: 121 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

  # BLOCK 121 freq:553
  # PRED: 120 [98.0%]  (true,exec)
  D.46263_41 = engine_21->read_frame.datalen;
  if (D.46263_41 == 0)
    goto <bb 25>;
  else
    goto <bb 122>;
  # SUCC: 25 [98.0%]  (true,exec) 122 [2.0%]  (false,exec)

  # BLOCK 122 freq:147
  # PRED: 117 [50.0%]  (false,exec) 120 [2.0%]  (false,exec) 121 [2.0%]  (false,exec) 63 [2.0%]  (false,exec)
  D.46263_284 = engine_21->read_frame.datalen;
  if (D.46263_284 == 0)
    goto <bb 123>;
  else
    goto <bb 124>;
  # SUCC: 123 [50.0%]  (true,exec) 124 [50.0%]  (false,exec)

  # BLOCK 123 freq:74
  # PRED: 122 [50.0%]  (true,exec)
  *frame_52(D) = 0B;
  # SUCC: 124 [100.0%]  (fallthru,exec)

  # BLOCK 124 freq:147
  # PRED: 122 [50.0%]  (false,exec) 123 [100.0%]  (fallthru,exec)
  D.46162_285 = &engine_21->read_frame;
  *frame_52(D) = D.46162_285;
  # DEBUG status => 0
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 125 freq:190
  # PRED: 28 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 49 [100.0%]  (fallthru,exec) 59 [100.0%]  (fallthru,exec) 72 [100.0%]  (fallthru,exec) 124 [100.0%]  (fallthru,exec) 26 [86.3%]  (false,exec)
  # status_1 = PHI <0(28), status_45(29), 9(35), 0(49), 0(59), 9(72), 0(124), status_45(26)>
end:
  # DEBUG status => status_1
  D.46151_287 = engine_21->read_mutex[type_19(D)];
  if (D.46151_287 != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;
  # SUCC: 126 [78.3%]  (true,exec) 127 [21.6%]  (false,exec)

  # BLOCK 126 freq:149
  # PRED: 125 [78.3%]  (true,exec)
  D.46151_288 = engine_21->read_mutex[type_19(D)];
  switch_mutex_unlock (D.46151_288);
  # SUCC: 127 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:9995
  # PRED: 4 [10.1%]  (true,exec) 5 [39.0%]  (true,exec) 13 [39.0%]  (true,exec) 17 [61.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 6 [10.1%]  (true,exec) 16 [61.0%]  (true,exec) 18 [39.0%]  (true,exec) 125 [21.6%]  (false,exec)
  # status_10 = PHI <1(4), 1(5), 1(13), 1(17), 10(24), status_1(126), 1(6), 1(16), 1(18), status_1(125)>
  return status_10;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_add_ice_acl (switch_core_media_add_ice_acl)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_add_ice_acl

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_add_ice_acl (struct switch_core_session_t * session, switch_media_type_t type, const char * acl_name)
{
  static const char __func__[30] = "switch_core_media_add_ice_acl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_add_ice_acl";
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.45900;
  int D.45899;
  int D.45896;
  switch_status_t D.45893;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2379, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_8
  D.45896_9 = engine_8->cand_acl_count;
  if (D.45896_9 <= 24)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3501
  # PRED: 5 [39.0%]  (true,exec)
  D.45896_10 = engine_8->cand_acl_count;
  D.45900_12 = switch_core_perform_session_strdup (session_2(D), acl_name_11(D), "src/switch_core_media.c", &__func__, 2388);
  engine_8->cand_acl[D.45896_10] = D.45900_12;
  D.45899_13 = D.45896_10 + 1;
  engine_8->cand_acl_count = D.45899_13;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
  # D.45893_1 = PHI <1(4), 0(6), 1(5)>
  return D.45893_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_check_video_codecs (switch_core_media_check_video_codecs)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 8 11 12 9 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 17 5 }
;; 5 succs { 6 17 }
;; 6 succs { 7 17 }
;; 7 succs { 14 }
;; 8 succs { 9 13 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 8 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 8 11 12 9 10
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45867_10)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <0(7), i_19(13)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <0(7), i_19(13)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = i_19)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_19 = i_1 + 1;
 in loop 1.
Statement i_19 = i_1 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45874_11 = smh_3->codecs[i_1];
 in loop 1.
Statement D.45874_11 = smh_3->codecs[i_1];
 is executed at most 49 (bounded by 49) + 1 times in loop 1.
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 15
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
1 edges in bb 17 predicted to even probabilities

;; Function switch_core_media_check_video_codecs

;; 
18 basic blocks, 25 edges, last basic block 18.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  17 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  14 [98.0%]  (true,exec)
Successors:  9 [13.7%]  (true,exec) 13 [86.3%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [13.7%]  (true,exec)
Successors:  10 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [29.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [71.0%]  (false,exec) 10 [50.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  8 [86.3%]  (false,exec) 11 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [100.0%]  (fallthru,dfs_back,exec)

Basic block 14 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,dfs_back,exec)
Successors:  8 [98.0%]  (true,exec) 15 [2.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [2.0%]  (false,exec)
Successors:  16 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [39.0%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [61.0%]  (false,exec) 6 [39.0%]  (false,exec) 15 [61.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_check_video_codecs (struct switch_core_session_t * session)
{
  int i;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_check_video_codecs";
  struct switch_media_handle_t * smh;
  int D.45885;
  int D.45884;
  uint32_t D.45881;
  switch_call_direction_t D.45878;
  const switch_codec_type_t D.45875;
  const struct switch_codec_implementation_t * D.45874;
  uint32_t D.45871;
  struct switch_channel_t * D.45870;
  int D.45867;
  struct switch_core_media_params_t * D.45866;

  # BLOCK 2 freq:918
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2400, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:917
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 17>;
  else
    goto <bb 5>;
  # SUCC: 17 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:824
  # PRED: 4 [89.9%]  (false,exec)
  D.45866_4 = smh_3->mparams;
  D.45867_5 = D.45866_4->num_codecs;
  if (D.45867_5 != 0)
    goto <bb 6>;
  else
    goto <bb 17>;
  # SUCC: 6 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 6 freq:321
  # PRED: 5 [39.0%]  (true,exec)
  D.45870_6 = session_2(D)->channel;
  D.45871_7 = switch_channel_test_flag (D.45870_6, 98);
  if (D.45871_7 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;
  # SUCC: 7 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 7 freq:196
  # PRED: 6 [61.0%]  (true,exec)
  smh_3->video_count = 0;
  # DEBUG i => 0
  goto <bb 14>;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:9804
  # PRED: 14 [98.0%]  (true,exec)
  D.45874_11 = smh_3->codecs[i_1];
  D.45875_12 = D.45874_11->codec_type;
  if (D.45875_12 == 1)
    goto <bb 9>;
  else
    goto <bb 13>;
  # SUCC: 9 [13.7%]  (true,exec) 13 [86.3%]  (false,exec)

  # BLOCK 9 freq:1344
  # PRED: 8 [13.7%]  (true,exec)
  D.45870_13 = session_2(D)->channel;
  D.45878_14 = switch_channel_direction (D.45870_13);
  if (D.45878_14 == 0)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 10 freq:390
  # PRED: 9 [29.0%]  (true,exec)
  D.45870_15 = session_2(D)->channel;
  D.45881_16 = switch_channel_test_flag (D.45870_15, 114);
  if (D.45881_16 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 11 freq:195
  # PRED: 10 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 13>;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:1149
  # PRED: 9 [71.0%]  (false,exec) 10 [50.0%]  (false,exec)
  D.45884_17 = smh_3->video_count;
  D.45885_18 = D.45884_17 + 1;
  smh_3->video_count = D.45885_18;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:9804
  # PRED: 8 [86.3%]  (false,exec) 11 [100.0%]  (fallthru,exec) 12 [100.0%]  (fallthru,exec)
  i_19 = i_1 + 1;
  # DEBUG i => i_19
  # SUCC: 14 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 14 freq:10000
  # PRED: 7 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,dfs_back,exec)
  # i_1 = PHI <0(7), i_19(13)>
  # DEBUG i => i_1
  D.45866_9 = smh_3->mparams;
  D.45867_10 = D.45866_9->num_codecs;
  if (D.45867_10 > i_1)
    goto <bb 8>;
  else
    goto <bb 15>;
  # SUCC: 8 [98.0%]  (true,exec) 15 [2.0%]  (false,exec)

  # BLOCK 15 freq:196
  # PRED: 14 [2.0%]  (false,exec)
  D.45884_20 = smh_3->video_count;
  if (D.45884_20 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 16 freq:76
  # PRED: 15 [39.0%]  (true,exec)
  D.45870_21 = session_2(D)->channel;
  switch_channel_set_flag_value (D.45870_21, 98, 1);
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:917
  # PRED: 4 [10.1%]  (true,exec) 5 [61.0%]  (false,exec) 6 [39.0%]  (false,exec) 15 [61.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_ice_direction (switch_ice_direction)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
Predictions for bb 2
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 5
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities

;; Function switch_ice_direction

;; 
9 basic blocks, 12 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec)
Successors:  6 [61.0%]  (true,exec) 8 [39.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec) 5 [61.0%]  (true,exec)
Successors:  7 [61.0%]  (true,exec) 8 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [39.0%]  (false,exec) 6 [39.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_ice_direction (struct switch_core_session_t * session)
{
  switch_call_direction_t r;
  uint32_t D.45857;
  uint32_t D.45856;
  uint32_t D.45854;
  uint32_t D.45849;
  struct switch_channel_t * D.45848;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.45848_4 = session_3(D)->channel;
  r_5 = switch_channel_direction (D.45848_4);
  # DEBUG r => r_5
  D.45848_6 = session_3(D)->channel;
  D.45849_7 = switch_channel_test_flag (D.45848_6, 112);
  if (D.45849_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 3 freq:5000
  # PRED: 2 [50.0%]  (true,exec)
  r_8 = r_5 == 0;
  # DEBUG r => r_8
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [50.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  # r_1 = PHI <r_5(2), r_8(3)>
  # DEBUG r => r_1
  D.45848_9 = session_3(D)->channel;
  D.45854_10 = switch_channel_test_flag (D.45848_9, 103);
  if (D.45854_10 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 5 freq:5000
  # PRED: 4 [50.0%]  (false,exec)
  D.45848_11 = session_3(D)->channel;
  D.45856_12 = switch_channel_test_flag (D.45848_11, 84);
  if (D.45856_12 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [61.0%]  (true,exec) 8 [39.0%]  (false,exec)

  # BLOCK 6 freq:8050
  # PRED: 4 [50.0%]  (true,exec) 5 [61.0%]  (true,exec)
  D.45848_13 = session_3(D)->channel;
  D.45857_14 = switch_channel_test_flag (D.45848_13, 106);
  if (D.45857_14 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [61.0%]  (true,exec) 8 [39.0%]  (false,exec)

  # BLOCK 7 freq:4910
  # PRED: 6 [61.0%]  (true,exec)
  # DEBUG r => 1
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:10000
  # PRED: 5 [39.0%]  (false,exec) 6 [39.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  # r_2 = PHI <r_1(5), r_1(6), 1(7)>
  # DEBUG r => r_2
  return r_2;
  # SUCC: EXIT [100.0%] 

}



;; Function check_dtls_reinvite (check_dtls_reinvite)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;; 2 succs { 3 17 }
;; 3 succs { 6 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 17 }
;; 7 succs { 8 17 }
;; 8 succs { 9 17 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
Predictions for bb 2
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 3
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 4
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 8
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 19.1%
  first match heuristics (ignored): 27.0%
  combined heuristics: 19.1%
  opcode values positive (on trees) heuristics: 27.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
1 edges in bb 17 predicted to even probabilities

;; Function check_dtls_reinvite

;; 
18 basic blocks, 27 edges, last basic block 18.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [61.0%]  (true,exec)
Successors:  6 [15.0%]  (true,exec) 4 [85.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  3 [15.0%]  (true,exec) 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (true,exec)
Successors:  8 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [39.0%]  (true,exec)
Successors:  9 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [39.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  13 [28.0%]  (true,exec) 12 [72.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [72.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [28.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [73.0%]  (true,exec) 15 [27.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [73.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [27.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [19.1%]  (true,exec) 17 [80.9%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [19.1%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  2 [39.0%]  (false,exec) 6 [61.0%]  (false,exec) 7 [61.0%]  (false,exec) 8 [61.0%]  (false,exec) 15 [80.9%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


check_dtls_reinvite (struct switch_core_session_t * session, struct switch_rtp_engine_t * engine)
{
  const char D.47801;
  int D.47800;
  dtls_type_t dtype;
  dtls_type_t xtype;
  static const char __func__[20] = "check_dtls_reinvite";
  unsigned int D.43935;
  struct dtls_fingerprint_t * D.43934;
  struct dtls_fingerprint_t * D.43933;
  struct switch_rtp_t * D.43932;
  int8_t D.43929;
  switch_media_type_t D.43925;
  char * iftmp.75;
  switch_call_direction_t D.43920;
  int D.43916;
  int D.43913;
  char[192] * D.43909;
  uint32_t D.43906;
  struct switch_channel_t * D.43905;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.43905_5 = session_4(D)->channel;
  D.43906_6 = switch_channel_test_flag (D.43905_5, 103);
  if (D.43906_6 != 0)
    goto <bb 3>;
  else
    goto <bb 17>;
  # SUCC: 3 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 3 freq:6100
  # PRED: 2 [61.0%]  (true,exec)
  D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
  # DEBUG s => D.43909_8
  if (D.43909_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;
  # SUCC: 6 [15.0%]  (true,exec) 4 [85.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [85.0%]  (false,exec)
  D.47801_40 = MEM[(const char *)engine_7(D) + 10904B];
  if (D.47801_40 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 5 freq:2592
  # PRED: 4 [50.0%]  (false,exec)
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6100
  # PRED: 3 [15.0%]  (true,exec) 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  # D.47800_41 = PHI <1(3), 1(4), 0(5)>
  if (D.47800_41 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;
  # SUCC: 7 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 7 freq:2378
  # PRED: 6 [39.0%]  (true,exec)
  D.43913_10 = switch_rtp_has_dtls ();
  if (D.43913_10 != 0)
    goto <bb 8>;
  else
    goto <bb 17>;
  # SUCC: 8 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 8 freq:927
  # PRED: 7 [39.0%]  (true,exec)
  D.43916_11 = dtls_ok (session_4(D));
  if (D.43916_11 != 0)
    goto <bb 9>;
  else
    goto <bb 17>;
  # SUCC: 9 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 9 freq:361
  # PRED: 8 [39.0%]  (true,exec)
  D.43920_12 = switch_ice_direction (session_4(D));
  if (D.43920_12 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:181
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:361
  # PRED: 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # dtype_2 = PHI <1(9), 2(10)>
  # DEBUG dtype => dtype_2
  D.43925_16 = engine_7(D)->type;
  if (D.43925_16 == 1)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [28.0%]  (true,exec) 12 [72.0%]  (false,exec)

  # BLOCK 12 freq:260
  # PRED: 11 [72.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:361
  # PRED: 11 [28.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # iftmp.75_3 = PHI <"video"(11), "audio"(12)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);
  # DEBUG xtype => 4
  D.43929_20 = engine_7(D)->rtcp_mux;
  if (D.43929_20 > 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [73.0%]  (true,exec) 15 [27.0%]  (false,exec)

  # BLOCK 14 freq:264
  # PRED: 13 [73.0%]  (true,exec)
  # DEBUG xtype => 12
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:361
  # PRED: 13 [27.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  # xtype_1 = PHI <4(13), 12(14)>
  # DEBUG xtype => xtype_1
  D.43932_22 = engine_7(D)->rtp_session;
  D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_25 = xtype_1 | dtype_2;
  switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);
  D.43929_26 = engine_7(D)->rtcp_mux;
  if (D.43929_26 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [19.1%]  (true,exec) 17 [80.9%]  (false,exec)

  # BLOCK 16 freq:69
  # PRED: 15 [19.1%]  (true,exec)
  # DEBUG xtype => 8
  D.43932_28 = engine_7(D)->rtp_session;
  D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_31 = dtype_2 | 8;
  switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:10000
  # PRED: 2 [39.0%]  (false,exec) 6 [61.0%]  (false,exec) 7 [61.0%]  (false,exec) 8 [61.0%]  (false,exec) 15 [80.9%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function check_ice (check_ice)

;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 5
;;  header 148, latch 147
;;  depth 1, outer 0
;;  nodes: 148 147 137 145 146 141 138 139 140 142 143 144
;;
;; Loop 4
;;  header 133, latch 132
;;  depth 1, outer 0
;;  nodes: 133 132 127 128 131 129 130 122 123 126 124 125 135 136
;;
;; Loop 3
;;  header 111, latch 110
;;  depth 1, outer 0
;;  nodes: 111 110 104 105 106 109 107 108 98 99 100 103 101 102 112 113
;;
;; Loop 2
;;  header 92, latch 91
;;  depth 1, outer 0
;;  nodes: 92 91 84 85 86 87 90 88 89 77 78 79 80 83 81 82 93 94
;;
;; Loop 1
;;  header 73, latch 72
;;  depth 1, outer 0
;;  nodes: 73 72 13 15 17 19 29 34 37 38 42 45 71 49 33 35 70 68 69 58 67 60 62 64 65 66 63 61 59 54 57 55 56 50 51 52 53 32 31 30 20 21 22 26 23 24 25 18 16 14 12 9 10 11 48 46 47 44 43 41 39 40 36 27 28
;;
;; Loop 7
;;  header 68, latch 67
;;  depth 2, outer 1
;;  nodes: 68 67 60 62 64 65 66 63 61 59 69
;;
;; Loop 6
;;  header 48, latch 47
;;  depth 2, outer 1
;;  nodes: 48 47
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 203 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 }
;; 7 succs { 73 }
;; 8 succs { 7 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 72 }
;; 14 succs { 15 16 }
;; 15 succs { 72 }
;; 16 succs { 17 18 }
;; 17 succs { 72 }
;; 18 succs { 19 20 }
;; 19 succs { 72 }
;; 20 succs { 21 30 }
;; 21 succs { 22 30 }
;; 22 succs { 23 30 }
;; 23 succs { 26 24 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 27 30 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 72 }
;; 30 succs { 31 36 }
;; 31 succs { 32 36 }
;; 32 succs { 33 36 }
;; 33 succs { 34 72 }
;; 34 succs { 35 72 }
;; 35 succs { 72 }
;; 36 succs { 37 38 }
;; 37 succs { 72 }
;; 38 succs { 39 72 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 72 }
;; 43 succs { 45 44 }
;; 44 succs { 45 46 }
;; 45 succs { 72 }
;; 46 succs { 48 }
;; 47 succs { 48 }
;; 48 succs { 47 49 }
;; 49 succs { 50 72 }
;; 50 succs { 51 55 }
;; 51 succs { 52 55 }
;; 52 succs { 54 53 }
;; 53 succs { 54 }
;; 54 succs { 58 }
;; 55 succs { 57 56 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 68 }
;; 59 succs { 60 61 }
;; 60 succs { 67 }
;; 61 succs { 62 63 }
;; 62 succs { 67 }
;; 63 succs { 64 65 }
;; 64 succs { 67 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 69 70 }
;; 69 succs { 59 70 }
;; 70 succs { 71 72 }
;; 71 succs { 72 }
;; 72 succs { 73 }
;; 73 succs { 9 74 }
;; 74 succs { 76 75 }
;; 75 succs { 76 95 }
;; 76 succs { 92 }
;; 77 succs { 78 84 }
;; 78 succs { 79 84 }
;; 79 succs { 80 84 }
;; 80 succs { 81 84 }
;; 81 succs { 83 82 }
;; 82 succs { 83 }
;; 83 succs { 84 }
;; 84 succs { 85 91 }
;; 85 succs { 86 91 }
;; 86 succs { 87 91 }
;; 87 succs { 88 91 }
;; 88 succs { 90 89 }
;; 89 succs { 90 }
;; 90 succs { 91 }
;; 91 succs { 92 }
;; 92 succs { 93 95 }
;; 93 succs { 77 94 }
;; 94 succs { 77 95 }
;; 95 succs { 97 96 }
;; 96 succs { 97 114 }
;; 97 succs { 111 }
;; 98 succs { 99 104 }
;; 99 succs { 100 104 }
;; 100 succs { 101 104 }
;; 101 succs { 103 102 }
;; 102 succs { 103 }
;; 103 succs { 104 }
;; 104 succs { 105 110 }
;; 105 succs { 106 110 }
;; 106 succs { 107 110 }
;; 107 succs { 109 108 }
;; 108 succs { 109 }
;; 109 succs { 110 }
;; 110 succs { 111 }
;; 111 succs { 112 114 }
;; 112 succs { 98 113 }
;; 113 succs { 98 114 }
;; 114 succs { 115 119 }
;; 115 succs { 116 119 }
;; 116 succs { 118 117 }
;; 117 succs { 118 }
;; 118 succs { 119 }
;; 119 succs { 121 120 }
;; 120 succs { 121 134 }
;; 121 succs { 133 }
;; 122 succs { 123 127 }
;; 123 succs { 124 127 }
;; 124 succs { 126 125 }
;; 125 succs { 126 }
;; 126 succs { 127 }
;; 127 succs { 128 132 }
;; 128 succs { 129 132 }
;; 129 succs { 131 130 }
;; 130 succs { 131 }
;; 131 succs { 132 }
;; 132 succs { 133 }
;; 133 succs { 135 134 }
;; 134 succs { 148 }
;; 135 succs { 122 136 }
;; 136 succs { 122 134 }
;; 137 succs { 138 147 }
;; 138 succs { 141 139 }
;; 139 succs { 141 140 }
;; 140 succs { 141 }
;; 141 succs { 146 142 }
;; 142 succs { 145 143 }
;; 143 succs { 145 144 }
;; 144 succs { 145 }
;; 145 succs { 146 147 }
;; 146 succs { 147 }
;; 147 succs { 148 }
;; 148 succs { 137 149 }
;; 149 succs { 150 156 }
;; 150 succs { 151 156 }
;; 151 succs { 153 152 }
;; 152 succs { 153 }
;; 153 succs { 154 155 }
;; 154 succs { 155 }
;; 155 succs { 156 }
;; 156 succs { 157 160 }
;; 157 succs { 159 158 }
;; 158 succs { 159 }
;; 159 succs { 160 }
;; 160 succs { 161 162 }
;; 161 succs { 162 }
;; 162 succs { 163 203 }
;; 163 succs { 164 170 }
;; 164 succs { 165 170 }
;; 165 succs { 167 166 }
;; 166 succs { 167 }
;; 167 succs { 169 168 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { 171 191 }
;; 171 succs { 173 172 }
;; 172 succs { 173 }
;; 173 succs { 178 174 }
;; 174 succs { 175 176 }
;; 175 succs { 177 }
;; 176 succs { 177 }
;; 177 succs { 178 191 }
;; 178 succs { 180 179 }
;; 179 succs { 180 }
;; 180 succs { 181 182 }
;; 181 succs { 182 }
;; 182 succs { 183 186 }
;; 183 succs { 185 184 }
;; 184 succs { 185 }
;; 185 succs { 191 }
;; 186 succs { 187 188 }
;; 187 succs { 188 }
;; 188 succs { 190 189 }
;; 189 succs { 190 }
;; 190 succs { 191 }
;; 191 succs { 192 203 }
;; 192 succs { 193 198 }
;; 193 succs { 194 198 }
;; 194 succs { 195 198 }
;; 195 succs { 197 196 }
;; 196 succs { 197 }
;; 197 succs { 203 }
;; 198 succs { 200 199 }
;; 199 succs { 200 }
;; 200 succs { 202 201 }
;; 201 succs { 202 }
;; 202 succs { 203 }
;; 203 succs { 1 }
;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 5
;;  header 148, latch 147
;;  depth 1, outer 0
;;  nodes: 148 147 137 145 146 141 138 139 140 142 143 144
;;
;; Loop 4
;;  header 133, latch 132
;;  depth 1, outer 0
;;  nodes: 133 132 127 128 131 129 130 122 123 126 124 125 135 136
;;
;; Loop 3
;;  header 111, latch 110
;;  depth 1, outer 0
;;  nodes: 111 110 104 105 106 109 107 108 98 99 100 103 101 102 112 113
;;
;; Loop 2
;;  header 92, latch 91
;;  depth 1, outer 0
;;  nodes: 92 91 84 85 86 87 90 88 89 77 78 79 80 83 81 82 93 94
;;
;; Loop 1
;;  header 73, latch 72
;;  depth 1, outer 0
;;  nodes: 73 72 13 15 17 19 29 34 37 38 42 45 71 49 33 35 70 68 69 58 67 60 62 64 65 66 63 61 59 54 57 55 56 50 51 52 53 32 31 30 20 21 22 26 23 24 25 18 16 14 12 9 10 11 48 46 47 44 43 41 39 40 36 27 28
;;
;; Loop 7
;;  header 68, latch 67
;;  depth 2, outer 1
;;  nodes: 68 67 60 62 64 65 66 63 61 59 69
;;
;; Loop 6
;;  header 48, latch 47
;;  depth 2, outer 1
;;  nodes: 48 47
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = i_6)
(get_scalar_evolution 
  (scalar = i_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_6 = PHI <i_513(134), i_332(147)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_6 = PHI <i_513(134), i_332(147)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_5))
  (evolution_function = {0, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 134 
  (scalar = i_6)
  (scalar_evolution = {0, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
Analyzing # of iterations of loop 5
  exit condition [0, + , 1](no_overflow) <= 1
  bounds on difference of bases: 1 ... 1
  result:
    # of iterations 2, bounded by 2
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.45544_304)
(get_scalar_evolution 
  (scalar = D.45544_304)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 121 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.45544_304)
(get_scalar_evolution 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
(set_scalar_evolution 
  instantiated_below = 121 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.45544_249)
(get_scalar_evolution 
  (scalar = D.45544_249)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 97 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.45544_249)
(get_scalar_evolution 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
(set_scalar_evolution 
  instantiated_below = 97 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45544_220)
(get_scalar_evolution 
  (scalar = D.45544_220)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45544_220)
(get_scalar_evolution 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_1 = PHI <attr_417(7), attr_216(72)>
)
  (init_cond = attr_417))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_1 = PHI <attr_417(7), attr_216(72)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = -1)
(get_scalar_evolution 
  (scalar = -1)
  (scalar_evolution = -1))
)
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45556_212)
(get_scalar_evolution 
  (scalar = D.45556_212)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45556_212)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45556_212)
(get_scalar_evolution 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45556_212)
(get_scalar_evolution 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45556_212)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45556_212)
(get_scalar_evolution 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45556_212)
  (scalar_evolution = D.45556_212))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 2)
(get_scalar_evolution 
  (scalar = 2)
  (scalar_evolution = 2))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 2)
  (res = 2))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 7)
(get_scalar_evolution 
  (scalar = 7)
  (scalar_evolution = 7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 7)
  (res = 7))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 4)
  (res = 4))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 5)
(get_scalar_evolution 
  (scalar = 5)
  (scalar_evolution = 5))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 5)
  (res = 5))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_180)
(get_scalar_evolution 
  (scalar = D.45583_180)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_180)
  (scalar_evolution = {7, +, 2}_7))
(number_of_iterations_in_loop = 
  (set_nb_iterations_in_loop = scev_not_known))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45583_180)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_180)
(get_scalar_evolution 
  (scalar = D.45583_180)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_180)
  (scalar_evolution = {7, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45583_180)
(get_scalar_evolution 
  (scalar = D.45583_180)
  (scalar_evolution = {7, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_180)
  (scalar_evolution = {7, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 0)
(get_scalar_evolution 
  (scalar = 0)
  (scalar_evolution = 0))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 0)
  (res = 0))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_156)
(get_scalar_evolution 
  (scalar = D.45544_156)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_156)
  (scalar_evolution = D.45544_156))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_156)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_156)
(get_scalar_evolution 
  (scalar = D.45544_156)
  (scalar_evolution = D.45544_156))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_156)
  (scalar_evolution = D.45544_156))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 1)
  (res = 1))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_160)
(get_scalar_evolution 
  (scalar = D.45544_160)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_160)
  (scalar_evolution = D.45544_160))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_160)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_160)
(get_scalar_evolution 
  (scalar = D.45544_160)
  (scalar_evolution = D.45544_160))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_160)
  (scalar_evolution = D.45544_160))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 2)
(get_scalar_evolution 
  (scalar = 2)
  (scalar_evolution = 2))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 2)
  (res = 2))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_163)
(get_scalar_evolution 
  (scalar = D.45544_163)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_163)
  (scalar_evolution = D.45544_163))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_163)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_163)
(get_scalar_evolution 
  (scalar = D.45544_163)
  (scalar_evolution = D.45544_163))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_163)
  (scalar_evolution = D.45544_163))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 3)
(get_scalar_evolution 
  (scalar = 3)
  (scalar_evolution = 3))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 3)
  (res = 3))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_167)
(get_scalar_evolution 
  (scalar = D.45544_167)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_167)
  (scalar_evolution = D.45544_167))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_167)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_167)
(get_scalar_evolution 
  (scalar = D.45544_167)
  (scalar_evolution = D.45544_167))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_167)
  (scalar_evolution = D.45544_167))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 4)
  (res = 4))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_171)
(get_scalar_evolution 
  (scalar = D.45544_171)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_171)
  (scalar_evolution = D.45544_171))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_171)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_171)
(get_scalar_evolution 
  (scalar = D.45544_171)
  (scalar_evolution = D.45544_171))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_171)
  (scalar_evolution = D.45544_171))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 5)
(get_scalar_evolution 
  (scalar = 5)
  (scalar_evolution = 5))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 5)
  (res = 5))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_175)
(get_scalar_evolution 
  (scalar = D.45544_175)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_175)
  (scalar_evolution = D.45544_175))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_175)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_175)
(get_scalar_evolution 
  (scalar = D.45544_175)
  (scalar_evolution = D.45544_175))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45544_175)
  (scalar_evolution = D.45544_175))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_186)
(get_scalar_evolution 
  (scalar = D.45583_186)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_186)
  (scalar_evolution = {7, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45583_186)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_186)
(get_scalar_evolution 
  (scalar = D.45583_186)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_186)
  (scalar_evolution = {7, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45583_186)
(get_scalar_evolution 
  (scalar = D.45583_186)
  (scalar_evolution = {7, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_186)
  (scalar_evolution = {7, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_184)
(get_scalar_evolution 
  (scalar = D.45544_184)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_184)
  (scalar_evolution = D.45544_184))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_184)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_184)
(get_scalar_evolution 
  (scalar = D.45544_184)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_184)
  (scalar_evolution = D.45544_184))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45544_184)
(get_scalar_evolution 
  (scalar = D.45544_184)
  (scalar_evolution = D.45544_184))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_184)
  (scalar_evolution = D.45544_184))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_193)
(get_scalar_evolution 
  (scalar = D.45583_193)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_193)
  (scalar_evolution = {7, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45583_193)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_193)
(get_scalar_evolution 
  (scalar = D.45583_193)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_193)
  (scalar_evolution = {7, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45583_193)
(get_scalar_evolution 
  (scalar = D.45583_193)
  (scalar_evolution = {7, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_193)
  (scalar_evolution = {7, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_191)
(get_scalar_evolution 
  (scalar = D.45544_191)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_191)
  (scalar_evolution = D.45544_191))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_191)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_191)
(get_scalar_evolution 
  (scalar = D.45544_191)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_191)
  (scalar_evolution = D.45544_191))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45544_191)
(get_scalar_evolution 
  (scalar = D.45544_191)
  (scalar_evolution = D.45544_191))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_191)
  (scalar_evolution = D.45544_191))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_199)
(get_scalar_evolution 
  (scalar = D.45583_199)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_199)
  (scalar_evolution = {7, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45583_199)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_199)
(get_scalar_evolution 
  (scalar = D.45583_199)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_199)
  (scalar_evolution = {7, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45583_199)
(get_scalar_evolution 
  (scalar = D.45583_199)
  (scalar_evolution = {7, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_199)
  (scalar_evolution = {7, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_198)
(get_scalar_evolution 
  (scalar = D.45544_198)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_198)
  (scalar_evolution = D.45544_198))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_198)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_198)
(get_scalar_evolution 
  (scalar = D.45544_198)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_198)
  (scalar_evolution = D.45544_198))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45544_198)
(get_scalar_evolution 
  (scalar = D.45544_198)
  (scalar_evolution = D.45544_198))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_198)
  (scalar_evolution = D.45544_198))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = j_10)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_207)
(get_scalar_evolution 
  (scalar = D.45583_207)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_207)
  (scalar_evolution = {7, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45583_207)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45583_207)
(get_scalar_evolution 
  (scalar = D.45583_207)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_207)
  (scalar_evolution = {7, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45583_207)
(get_scalar_evolution 
  (scalar = D.45583_207)
  (scalar_evolution = {7, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45583_207)
  (scalar_evolution = {7, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_205)
(get_scalar_evolution 
  (scalar = D.45544_205)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_205)
  (scalar_evolution = D.45544_205))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45544_205)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45544_205)
(get_scalar_evolution 
  (scalar = D.45544_205)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_205)
  (scalar_evolution = D.45544_205))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45544_205)
(get_scalar_evolution 
  (scalar = D.45544_205)
  (scalar_evolution = D.45544_205))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45544_205)
  (scalar_evolution = D.45544_205))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = j_10)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = j_10)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = j_10)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(58), j_210(67)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(58), j_210(67)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 2)
(get_scalar_evolution 
  (scalar = 2)
  (scalar_evolution = 2))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 2)
  (res = 2))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 7)
(get_scalar_evolution 
  (scalar = 7)
  (scalar_evolution = 7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 7)
  (res = 7))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 4)
  (res = 4))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 5)
(get_scalar_evolution 
  (scalar = 5)
  (scalar_evolution = 5))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 5)
  (res = 5))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 2)
(get_scalar_evolution 
  (scalar = 2)
  (scalar_evolution = 2))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 2)
  (res = 2))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 7)
(get_scalar_evolution 
  (scalar = 7)
  (scalar_evolution = 7))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 7)
  (res = 7))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 4)
  (res = 4))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 5)
(get_scalar_evolution 
  (scalar = 5)
  (scalar_evolution = 5))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 5)
  (res = 5))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 4)
  (res = 4))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 0)
(get_scalar_evolution 
  (scalar = 0)
  (scalar_evolution = 0))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 0)
  (res = 0))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = cid_120)
(get_scalar_evolution 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = cid_120)
  (scalar_evolution = D.47839_645 + -1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.47839_645 + -1)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47839_645)
(get_scalar_evolution 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.47839_645)
  (scalar_evolution = D.47839_645))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = 1)
  (res = 1))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <0(46), i_124(47)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <0(46), i_124(47)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(number_of_iterations_in_loop = 
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < (int) D.45540_115
  bounds on difference of bases: 5 ... 2147483647
  result:
    # of iterations D.45540_115, bounded by 2147483647
  (set_nb_iterations_in_loop = D.45540_115))
(chrec_apply 
  (varying_loop = 6
)
  (chrec = {0, +, 1}_6)
  (x = (int) D.45540_115)
  (res = (int) D.45540_115))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45540_115)
(get_scalar_evolution 
  (scalar = D.45540_115)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45540_115)
  (scalar_evolution = D.45540_115))
)
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = (int) D.45540_115)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45540_115)
(get_scalar_evolution 
  (scalar = D.45540_115)
  (scalar_evolution = D.45540_115))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45540_115)
  (scalar_evolution = D.45540_115))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45533_107)
(get_scalar_evolution 
  (scalar = D.45533_107)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45533_107)
  (scalar_evolution = D.45533_107))
)
(instantiate_scev 
  (instantiate_below = 7)
  (evolution_loop = 1)
  (chrec = D.45533_107)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45533_107)
(get_scalar_evolution 
  (scalar = D.45533_107)
  (scalar_evolution = D.45533_107))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45533_107)
  (scalar_evolution = D.45533_107))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45584_181)
(get_scalar_evolution 
  (scalar = D.45584_181)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45584_181)
(get_scalar_evolution 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 58 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 7
  exit condition [6, + , 2](no_overflow) < (int) D.45540_115
  bounds on difference of bases: -1 ... 2147483641
  result:
    # of iterations (D.45540_115 + 4294967291) / 2, bounded by 1073741821
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < (int) D.45540_115
  bounds on difference of bases: 5 ... 2147483647
  result:
    # of iterations D.45540_115, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < (int) D.45540_115
  bounds on difference of bases: 5 ... 2147483647
  result:
    # of iterations D.45540_115, bounded by 2147483647
Statement (exit)if (i_2 < argc_116)
 is executed at most D.45540_115 (bounded by 2147483647) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 46)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45547_123 = fields[i_2];
 in loop 6.
Statement D.45547_123 = fields[i_2];
 is executed at most 14 (bounded by 14) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_124)
(get_scalar_evolution 
  (scalar = i_124)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = i_124)
  (scalar_evolution = {1, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 46)
  (evolution_loop = 6)
  (chrec = {1, +, 1}_6)
  (res = {1, +, 1}_6))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_124 = i_2 + 1;
 in loop 6.
Statement i_124 = i_2 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 6.
Predictions for bb 2
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 3
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 21
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 22
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 23
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 27
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 33
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 34
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 39
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 50.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
  continue heuristics: 50.0%
Predictions for bb 44
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 45 predicted to even probabilities
1 edges in bb 46 predicted to even probabilities
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics (ignored): 86.0%
  first match heuristics: 93.8%
  combined heuristics: 93.8%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 93.8%
Predictions for bb 49
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
Predictions for bb 50
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 51
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 52
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 53 predicted to even probabilities
1 edges in bb 54 predicted to even probabilities
Predictions for bb 55
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 56 predicted to even probabilities
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities
Predictions for bb 59
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 60 predicted to even probabilities
Predictions for bb 61
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 62 predicted to even probabilities
Predictions for bb 63
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 64 predicted to even probabilities
Predictions for bb 65
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 66 predicted to even probabilities
1 edges in bb 67 predicted to even probabilities
Predictions for bb 68
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 69
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 70
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 71 predicted to even probabilities
1 edges in bb 72 predicted to even probabilities
Predictions for bb 73
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
Predictions for bb 74
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 75
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 76 predicted to even probabilities
Predictions for bb 77
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 78
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 79
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 80
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 81
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 82 predicted to even probabilities
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 85
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 86
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 87
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 88
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 89 predicted to even probabilities
1 edges in bb 90 predicted to even probabilities
1 edges in bb 91 predicted to even probabilities
Predictions for bb 92
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 93
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 94
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 95
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 96
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 97 predicted to even probabilities
Predictions for bb 98
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 99
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 100
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 101
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 102 predicted to even probabilities
1 edges in bb 103 predicted to even probabilities
Predictions for bb 104
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 105
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 106
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 107
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 108 predicted to even probabilities
1 edges in bb 109 predicted to even probabilities
1 edges in bb 110 predicted to even probabilities
Predictions for bb 111
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 112
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 113
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 114
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 115
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 116
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 117 predicted to even probabilities
1 edges in bb 118 predicted to even probabilities
Predictions for bb 119
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 120
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 121 predicted to even probabilities
Predictions for bb 122
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 123
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 124
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 125 predicted to even probabilities
1 edges in bb 126 predicted to even probabilities
Predictions for bb 127
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 128
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 129
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 130 predicted to even probabilities
1 edges in bb 131 predicted to even probabilities
1 edges in bb 132 predicted to even probabilities
Predictions for bb 133
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 134 predicted to even probabilities
Predictions for bb 135
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 136
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 137
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 138
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 139
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 140 predicted to even probabilities
Predictions for bb 141
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 142
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 143
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 144 predicted to even probabilities
Predictions for bb 145
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 146 predicted to even probabilities
1 edges in bb 147 predicted to even probabilities
Predictions for bb 148
  DS theory heuristics (ignored): 42.5%
  first match heuristics: 66.7%
  combined heuristics: 66.7%
  opcode values positive (on trees) heuristics (ignored): 27.0%
  loop iterations heuristics: 66.7%
Predictions for bb 149
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 150
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 151
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 152 predicted to even probabilities
Predictions for bb 153
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 154 predicted to even probabilities
1 edges in bb 155 predicted to even probabilities
Predictions for bb 156
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 157
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 158 predicted to even probabilities
1 edges in bb 159 predicted to even probabilities
Predictions for bb 160
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 161 predicted to even probabilities
Predictions for bb 162
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 163
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 164
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 165
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 166 predicted to even probabilities
Predictions for bb 167
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 168 predicted to even probabilities
1 edges in bb 169 predicted to even probabilities
Predictions for bb 170
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 171
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 172 predicted to even probabilities
Predictions for bb 173
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 174
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 175 predicted to even probabilities
1 edges in bb 176 predicted to even probabilities
Predictions for bb 177
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 178
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 179 predicted to even probabilities
Predictions for bb 180
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 181 predicted to even probabilities
Predictions for bb 182
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 183
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 184 predicted to even probabilities
1 edges in bb 185 predicted to even probabilities
Predictions for bb 186
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 187 predicted to even probabilities
Predictions for bb 188
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 189 predicted to even probabilities
1 edges in bb 190 predicted to even probabilities
Predictions for bb 191
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 192
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
Predictions for bb 193
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 194
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 195
  DS theory heuristics: 19.9%
  first match heuristics (ignored): 28.0%
  combined heuristics: 19.9%
  early return (on trees) heuristics: 39.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 196 predicted to even probabilities
1 edges in bb 197 predicted to even probabilities
Predictions for bb 198
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 199 predicted to even probabilities
Predictions for bb 200
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 201 predicted to even probabilities
1 edges in bb 202 predicted to even probabilities
1 edges in bb 203 predicted to even probabilities

;; Function check_ice

;; 
204 basic blocks, 325 edges, last basic block 204.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec)
Successors:  4 [29.0%]  (true,exec) 5 [71.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [29.0%]  (true,exec)
Successors:  203 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec) 3 [71.0%]  (false,exec) 4 [61.0%]  (false,exec)
Successors:  6 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
Successors:  73 [100.0%]  (fallthru)

Basic block 8 (new, reachable)
Predecessors:  5 [15.0%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  73 [91.0%]  (true,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [71.0%]  (false,exec)
Successors:  17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [71.0%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [50.0%]  (true,exec)
Successors:  26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (false,exec)
Successors:  26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (true,exec)
Successors:  28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [69.8%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [50.0%]  (false,exec) 26 [71.0%]  (false,exec)
Successors:  31 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec)
Successors:  32 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [69.8%]  (true,exec)
Successors:  34 [85.0%]  (true,exec) 72 [15.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [85.0%]  (true,exec)
Successors:  35 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  39 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [29.0%]  (true,exec)
Successors:  40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
Successors:  42 [30.2%]  (true,exec) 43 [69.8%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [30.2%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [69.8%]  (false,exec)
Successors:  45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [71.0%]  (false,exec)
Successors:  45 [71.0%]  (true,exec) 46 [29.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  43 [29.0%]  (true,exec) 44 [71.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  44 [29.0%]  (false,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  48 [93.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,dfs_back,exec)

Basic block 48 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
Successors:  47 [93.8%]  (true,exec) 49 [6.2%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [6.2%]  (false,exec)
Successors:  50 [73.0%]  (true,exec) 72 [27.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [73.0%]  (true,exec)
Successors:  51 [29.0%]  (true,exec) 55 [71.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [29.0%]  (true,exec)
Successors:  52 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  54 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [72.0%]  (false,exec)
Successors:  54 [100.0%]  (fallthru,exec)

Basic block 54 (new, reachable)
Predecessors:  52 [28.0%]  (true,exec) 53 [100.0%]  (fallthru,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  50 [71.0%]  (false,exec) 51 [50.0%]  (false,exec)
Successors:  57 [28.0%]  (true,exec) 56 [72.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [72.0%]  (false,exec)
Successors:  57 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  55 [28.0%]  (true,exec) 56 [100.0%]  (fallthru,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  54 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec)
Successors:  68 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  69 [95.5%]  (true,exec)
Successors:  60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  59 [71.0%]  (false,exec)
Successors:  62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  61 [71.0%]  (false,exec)
Successors:  64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 65 (new, reachable)
Predecessors:  63 [71.0%]  (false,exec)
Successors:  66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  60 [100.0%]  (fallthru,exec) 62 [100.0%]  (fallthru,exec) 64 [100.0%]  (fallthru,exec) 65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
Successors:  68 [100.0%]  (fallthru,dfs_back,exec)

Basic block 68 (new, reachable)
Predecessors:  58 [100.0%]  (fallthru,exec) 67 [100.0%]  (fallthru,dfs_back,exec)
Successors:  69 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [95.5%]  (true,exec)
Successors:  59 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  68 [4.5%]  (false,exec) 69 [4.5%]  (false,exec)
Successors:  71 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 72 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 34 [71.0%]  (false,exec) 37 [100.0%]  (fallthru,exec) 38 [71.0%]  (false,exec) 42 [100.0%]  (fallthru,exec) 45 [100.0%]  (fallthru,exec) 71 [100.0%]  (fallthru,exec) 49 [27.0%]  (false,exec) 33 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec) 70 [50.0%]  (false,exec)
Successors:  73 [100.0%]  (fallthru,dfs_back,exec)

Basic block 73 (new)
Predecessors:  7 [100.0%]  (fallthru) 72 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [91.0%]  (true,exec) 74 [9.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [9.0%]  (false,exec)
Successors:  76 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [50.0%]  (false,exec)
Successors:  76 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [50.0%]  (true,exec) 74 [50.0%]  (true,exec)
Successors:  92 [100.0%]  (fallthru)

Basic block 77 (new, reachable)
Predecessors:  93 [50.0%]  (true,exec) 94 [95.5%]  (true,exec)
Successors:  78 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [50.0%]  (true,exec)
Successors:  79 [28.0%]  (true,exec) 84 [72.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [28.0%]  (true,exec)
Successors:  80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [29.0%]  (true,exec)
Successors:  81 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec)
Successors:  83 [28.0%]  (true,exec) 82 [72.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [72.0%]  (false,exec)
Successors:  83 [100.0%]  (fallthru,exec)

Basic block 83 (new, reachable)
Predecessors:  81 [28.0%]  (true,exec) 82 [100.0%]  (fallthru,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  77 [50.0%]  (false,exec) 78 [72.0%]  (false,exec) 79 [71.0%]  (false,exec) 80 [50.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  86 [28.0%]  (true,exec) 91 [72.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [28.0%]  (true,exec)
Successors:  87 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [29.0%]  (true,exec)
Successors:  88 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  87 [50.0%]  (true,exec)
Successors:  90 [28.0%]  (true,exec) 89 [72.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [72.0%]  (false,exec)
Successors:  90 [100.0%]  (fallthru,exec)

Basic block 90 (new, reachable)
Predecessors:  88 [28.0%]  (true,exec) 89 [100.0%]  (fallthru,exec)
Successors:  91 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
Successors:  92 [100.0%]  (fallthru,dfs_back,exec)

Basic block 92 (new)
Predecessors:  76 [100.0%]  (fallthru) 91 [100.0%]  (fallthru,dfs_back,exec)
Successors:  93 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [95.5%]  (true,exec)
Successors:  77 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  93 [50.0%]  (false,exec)
Successors:  77 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  75 [50.0%]  (false,exec) 92 [4.5%]  (false,exec) 94 [4.5%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 114 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [50.0%]  (true,exec) 95 [50.0%]  (true,exec)
Successors:  111 [100.0%]  (fallthru)

Basic block 98 (new, reachable)
Predecessors:  112 [50.0%]  (true,exec) 113 [95.5%]  (true,exec)
Successors:  99 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [50.0%]  (true,exec)
Successors:  100 [28.0%]  (true,exec) 104 [72.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [28.0%]  (true,exec)
Successors:  101 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [50.0%]  (true,exec)
Successors:  103 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [72.0%]  (false,exec)
Successors:  103 [100.0%]  (fallthru,exec)

Basic block 103 (new, reachable)
Predecessors:  101 [28.0%]  (true,exec) 102 [100.0%]  (fallthru,exec)
Successors:  104 [100.0%]  (fallthru,exec)

Basic block 104 (new, reachable)
Predecessors:  98 [50.0%]  (false,exec) 99 [72.0%]  (false,exec) 100 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
Successors:  105 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [50.0%]  (true,exec)
Successors:  106 [28.0%]  (true,exec) 110 [72.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [28.0%]  (true,exec)
Successors:  107 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [50.0%]  (true,exec)
Successors:  109 [28.0%]  (true,exec) 108 [72.0%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  107 [72.0%]  (false,exec)
Successors:  109 [100.0%]  (fallthru,exec)

Basic block 109 (new, reachable)
Predecessors:  107 [28.0%]  (true,exec) 108 [100.0%]  (fallthru,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 110 (new, reachable)
Predecessors:  104 [50.0%]  (false,exec) 105 [72.0%]  (false,exec) 106 [50.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
Successors:  111 [100.0%]  (fallthru,dfs_back,exec)

Basic block 111 (new)
Predecessors:  97 [100.0%]  (fallthru) 110 [100.0%]  (fallthru,dfs_back,exec)
Successors:  112 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

Basic block 112 (new, reachable)
Predecessors:  111 [95.5%]  (true,exec)
Successors:  98 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  112 [50.0%]  (false,exec)
Successors:  98 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec) 111 [4.5%]  (false,exec) 113 [4.5%]  (false,exec)
Successors:  115 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [50.0%]  (true,exec)
Successors:  116 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [29.0%]  (true,exec)
Successors:  118 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

Basic block 117 (new, reachable)
Predecessors:  116 [72.0%]  (false,exec)
Successors:  118 [100.0%]  (fallthru,exec)

Basic block 118 (new, reachable)
Predecessors:  116 [28.0%]  (true,exec) 117 [100.0%]  (fallthru,exec)
Successors:  119 [100.0%]  (fallthru,exec)

Basic block 119 (new, reachable)
Predecessors:  114 [50.0%]  (false,exec) 115 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
Successors:  121 [50.0%]  (true,exec) 120 [50.0%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [50.0%]  (false,exec)
Successors:  121 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [50.0%]  (true,exec) 119 [50.0%]  (true,exec)
Successors:  133 [100.0%]  (fallthru)

Basic block 122 (new, reachable)
Predecessors:  135 [50.0%]  (true,exec) 136 [95.5%]  (true,exec)
Successors:  123 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  122 [50.0%]  (true,exec)
Successors:  124 [28.0%]  (true,exec) 127 [72.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [28.0%]  (true,exec)
Successors:  126 [28.0%]  (true,exec) 125 [72.0%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [72.0%]  (false,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  124 [28.0%]  (true,exec) 125 [100.0%]  (fallthru,exec)
Successors:  127 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  122 [50.0%]  (false,exec) 123 [72.0%]  (false,exec) 126 [100.0%]  (fallthru,exec)
Successors:  128 [50.0%]  (true,exec) 132 [50.0%]  (false,exec)

Basic block 128 (new, reachable)
Predecessors:  127 [50.0%]  (true,exec)
Successors:  129 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [28.0%]  (true,exec)
Successors:  131 [28.0%]  (true,exec) 130 [72.0%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  129 [72.0%]  (false,exec)
Successors:  131 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  129 [28.0%]  (true,exec) 130 [100.0%]  (fallthru,exec)
Successors:  132 [100.0%]  (fallthru,exec)

Basic block 132 (new, reachable)
Predecessors:  127 [50.0%]  (false,exec) 128 [72.0%]  (false,exec) 131 [100.0%]  (fallthru,exec)
Successors:  133 [100.0%]  (fallthru,dfs_back,exec)

Basic block 133 (new)
Predecessors:  121 [100.0%]  (fallthru) 132 [100.0%]  (fallthru,dfs_back,exec)
Successors:  135 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [4.5%]  (false,exec) 136 [4.5%]  (false,exec) 120 [50.0%]  (false,exec)
Successors:  148 [100.0%]  (fallthru)

Basic block 135 (new, reachable)
Predecessors:  133 [95.5%]  (true,exec)
Successors:  122 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [50.0%]  (false,exec)
Successors:  122 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

Basic block 137 (new, reachable)
Predecessors:  148 [66.7%]  (true,exec)
Successors:  138 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 138 (new, reachable)
Predecessors:  137 [50.0%]  (true,exec)
Successors:  141 [15.0%]  (true,exec) 139 [85.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [85.0%]  (false,exec)
Successors:  141 [50.0%]  (true,exec) 140 [50.0%]  (false,exec)

Basic block 140 (new, reachable)
Predecessors:  139 [50.0%]  (false,exec)
Successors:  141 [100.0%]  (fallthru,exec)

Basic block 141 (new, reachable)
Predecessors:  138 [15.0%]  (true,exec) 139 [50.0%]  (true,exec) 140 [100.0%]  (fallthru,exec)
Successors:  146 [50.0%]  (true,exec) 142 [50.0%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [50.0%]  (false,exec)
Successors:  145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

Basic block 143 (new, reachable)
Predecessors:  142 [85.0%]  (false,exec)
Successors:  145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

Basic block 144 (new, reachable)
Predecessors:  143 [50.0%]  (false,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
Successors:  146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 146 (new, reachable)
Predecessors:  141 [50.0%]  (true,exec) 145 [50.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 147 (new, reachable)
Predecessors:  137 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
Successors:  148 [100.0%]  (fallthru,dfs_back,exec)

Basic block 148 (new)
Predecessors:  134 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
Successors:  137 [66.7%]  (true,exec) 149 [33.3%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  148 [33.3%]  (false,exec)
Successors:  150 [85.0%]  (true,exec) 156 [15.0%]  (false,exec)

Basic block 150 (new, reachable)
Predecessors:  149 [85.0%]  (true,exec)
Successors:  151 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [29.0%]  (true,exec)
Successors:  153 [28.0%]  (true,exec) 152 [72.0%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [72.0%]  (false,exec)
Successors:  153 [100.0%]  (fallthru,exec)

Basic block 153 (new, reachable)
Predecessors:  151 [28.0%]  (true,exec) 152 [100.0%]  (fallthru,exec)
Successors:  154 [50.0%]  (true,exec) 155 [50.0%]  (false,exec)

Basic block 154 (new, reachable)
Predecessors:  153 [50.0%]  (true,exec)
Successors:  155 [100.0%]  (fallthru,exec)

Basic block 155 (new, reachable)
Predecessors:  153 [50.0%]  (false,exec) 154 [100.0%]  (fallthru,exec)
Successors:  156 [100.0%]  (fallthru,exec)

Basic block 156 (new, reachable)
Predecessors:  149 [15.0%]  (false,exec) 150 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
Successors:  157 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

Basic block 157 (new, reachable)
Predecessors:  156 [50.0%]  (true,exec)
Successors:  159 [28.0%]  (true,exec) 158 [72.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [72.0%]  (false,exec)
Successors:  159 [100.0%]  (fallthru,exec)

Basic block 159 (new, reachable)
Predecessors:  157 [28.0%]  (true,exec) 158 [100.0%]  (fallthru,exec)
Successors:  160 [100.0%]  (fallthru,exec)

Basic block 160 (new, reachable)
Predecessors:  156 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec)
Successors:  161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

Basic block 161 (new, reachable)
Predecessors:  160 [50.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 162 (new, reachable)
Predecessors:  160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
Successors:  163 [39.0%]  (true,exec) 203 [61.0%]  (false,exec)

Basic block 163 (new, reachable)
Predecessors:  162 [39.0%]  (true,exec)
Successors:  164 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 164 (new, reachable)
Predecessors:  163 [50.0%]  (true,exec)
Successors:  165 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 165 (new, reachable)
Predecessors:  164 [50.0%]  (true,exec)
Successors:  167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  165 [72.0%]  (false,exec)
Successors:  167 [100.0%]  (fallthru,exec)

Basic block 167 (new, reachable)
Predecessors:  165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
Successors:  169 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

Basic block 168 (new, reachable)
Predecessors:  167 [72.0%]  (false,exec)
Successors:  169 [100.0%]  (fallthru,exec)

Basic block 169 (new, reachable)
Predecessors:  167 [28.0%]  (true,exec) 168 [100.0%]  (fallthru,exec)
Successors:  170 [100.0%]  (fallthru,exec)

Basic block 170 (new, reachable)
Predecessors:  163 [50.0%]  (false,exec) 164 [50.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
Successors:  171 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

Basic block 171 (new, reachable)
Predecessors:  170 [85.0%]  (true,exec)
Successors:  173 [28.0%]  (true,exec) 172 [72.0%]  (false,exec)

Basic block 172 (new, reachable)
Predecessors:  171 [72.0%]  (false,exec)
Successors:  173 [100.0%]  (fallthru,exec)

Basic block 173 (new, reachable)
Predecessors:  171 [28.0%]  (true,exec) 172 [100.0%]  (fallthru,exec)
Successors:  178 [85.0%]  (true,exec) 174 [15.0%]  (false,exec)

Basic block 174 (new, reachable)
Predecessors:  173 [15.0%]  (false,exec)
Successors:  175 [28.0%]  (true,exec) 176 [72.0%]  (false,exec)

Basic block 175 (new, reachable)
Predecessors:  174 [28.0%]  (true,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 176 (new, reachable)
Predecessors:  174 [72.0%]  (false,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 177 (new, reachable)
Predecessors:  175 [100.0%]  (fallthru,exec) 176 [100.0%]  (fallthru,exec)
Successors:  178 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

Basic block 178 (new, reachable)
Predecessors:  173 [85.0%]  (true,exec) 177 [85.0%]  (true,exec)
Successors:  180 [28.0%]  (true,exec) 179 [72.0%]  (false,exec)

Basic block 179 (new, reachable)
Predecessors:  178 [72.0%]  (false,exec)
Successors:  180 [100.0%]  (fallthru,exec)

Basic block 180 (new, reachable)
Predecessors:  178 [28.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
Successors:  181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

Basic block 181 (new, reachable)
Predecessors:  180 [29.0%]  (true,exec)
Successors:  182 [100.0%]  (fallthru,exec)

Basic block 182 (new, reachable)
Predecessors:  180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
Successors:  183 [71.0%]  (true,exec) 186 [29.0%]  (false,exec)

Basic block 183 (new, reachable)
Predecessors:  182 [71.0%]  (true,exec)
Successors:  185 [28.0%]  (true,exec) 184 [72.0%]  (false,exec)

Basic block 184 (new, reachable)
Predecessors:  183 [72.0%]  (false,exec)
Successors:  185 [100.0%]  (fallthru,exec)

Basic block 185 (new, reachable)
Predecessors:  183 [28.0%]  (true,exec) 184 [100.0%]  (fallthru,exec)
Successors:  191 [100.0%]  (fallthru,exec)

Basic block 186 (new, reachable)
Predecessors:  182 [29.0%]  (false,exec)
Successors:  187 [29.0%]  (true,exec) 188 [71.0%]  (false,exec)

Basic block 187 (new, reachable)
Predecessors:  186 [29.0%]  (true,exec)
Successors:  188 [100.0%]  (fallthru,exec)

Basic block 188 (new, reachable)
Predecessors:  186 [71.0%]  (false,exec) 187 [100.0%]  (fallthru,exec)
Successors:  190 [28.0%]  (true,exec) 189 [72.0%]  (false,exec)

Basic block 189 (new, reachable)
Predecessors:  188 [72.0%]  (false,exec)
Successors:  190 [100.0%]  (fallthru,exec)

Basic block 190 (new, reachable)
Predecessors:  188 [28.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
Successors:  191 [100.0%]  (fallthru,exec)

Basic block 191 (new, reachable)
Predecessors:  170 [15.0%]  (false,exec) 177 [15.0%]  (false,exec) 185 [100.0%]  (fallthru,exec) 190 [100.0%]  (fallthru,exec)
Successors:  192 [61.0%]  (true,exec) 203 [39.0%]  (false,exec)

Basic block 192 (new, reachable)
Predecessors:  191 [61.0%]  (true,exec)
Successors:  193 [73.0%]  (true,exec) 198 [27.0%]  (false,exec)

Basic block 193 (new, reachable)
Predecessors:  192 [73.0%]  (true,exec)
Successors:  194 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 194 (new, reachable)
Predecessors:  193 [50.0%]  (true,exec)
Successors:  195 [28.0%]  (true,exec) 198 [72.0%]  (false,exec)

Basic block 195 (new, reachable)
Predecessors:  194 [28.0%]  (true,exec)
Successors:  197 [19.9%]  (true,exec) 196 [80.1%]  (false,exec)

Basic block 196 (new, reachable)
Predecessors:  195 [80.1%]  (false,exec)
Successors:  197 [100.0%]  (fallthru,exec)

Basic block 197 (new, reachable)
Predecessors:  195 [19.9%]  (true,exec) 196 [100.0%]  (fallthru,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 198 (new, reachable)
Predecessors:  192 [27.0%]  (false,exec) 193 [50.0%]  (false,exec) 194 [72.0%]  (false,exec)
Successors:  200 [28.0%]  (true,exec) 199 [72.0%]  (false,exec)

Basic block 199 (new, reachable)
Predecessors:  198 [72.0%]  (false,exec)
Successors:  200 [100.0%]  (fallthru,exec)

Basic block 200 (new, reachable)
Predecessors:  198 [28.0%]  (true,exec) 199 [100.0%]  (fallthru,exec)
Successors:  202 [28.0%]  (true,exec) 201 [72.0%]  (false,exec)

Basic block 201 (new, reachable)
Predecessors:  200 [72.0%]  (false,exec)
Successors:  202 [100.0%]  (fallthru,exec)

Basic block 202 (new, reachable)
Predecessors:  200 [28.0%]  (true,exec) 201 [100.0%]  (fallthru,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 203 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 162 [61.0%]  (false,exec) 191 [39.0%]  (false,exec) 197 [100.0%]  (fallthru,exec) 202 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


check_ice (struct switch_media_handle_t * smh, switch_media_type_t type, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47862;
  const char D.47859;
  int D.47858;
  const char D.47855;
  int D.47854;
  int D.47851;
  int D.47848;
  long int D.47845;
  int D.47842;
  int D.47839;
  long int D.47836;
  const char D.47833;
  int D.47832;
  const char D.47829;
  int D.47828;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char tmp[80];
  char * p;
  int cid;
  int j;
  int argc;
  char * fields[15];
  char * data;
  static const char __func__[10] = "check_ice";
  const char * val;
  int got_rtcp_mux;
  int i;
  struct sdp_attribute_t * attr;
  struct switch_rtp_engine_t * engine;
  switch_call_direction_t D.45836;
  switch_core_media_ice_type_t iftmp.126;
  char * iftmp.125;
  char * iftmp.124;
  int D.38904;
  char * iftmp.123;
  unsigned int D.45813;
  unsigned int interval.122;
  switch_bool_t D.45810;
  int8_t D.45809;
  int D.45808;
  char * iftmp.121;
  int D.45801;
  _Bool D.45797;
  _Bool D.45796;
  _Bool D.45795;
  char[27] * iftmp.120;
  struct switch_core_media_params_t * D.45789;
  char[25] * iftmp.118;
  struct ice_t * D.45776;
  switch_call_direction_t D.45772;
  switch_core_media_ice_type_t iftmp.117;
  char * D.45770;
  char * D.45769;
  char * iftmp.116;
  uint8_t D.45760;
  uint32_t D.45757;
  _Bool D.45754;
  _Bool D.45753;
  _Bool D.45752;
  char * D.45751;
  char * iftmp.115;
  char * D.45744;
  int D.45743;
  switch_port_t D.45740;
  char * D.45739;
  char * D.45738;
  int D.45737;
  char * iftmp.114;
  char * D.45732;
  switch_port_t D.45729;
  char * D.45726;
  char * D.45724;
  char * D.45721;
  uint8_t D.45716;
  int D.45715;
  char * iftmp.113;
  char * iftmp.112;
  int D.45694;
  switch_port_t D.45693;
  char * D.45692;
  char * iftmp.111;
  const void * restrict D.45687;
  unsigned int D.45686;
  unsigned int D.45685;
  const void * restrict D.45684;
  void * restrict D.45683;
  unsigned int D.45682;
  unsigned int D.45681;
  unsigned int D.45680;
  void * restrict D.45679;
  struct icand_t * D.45678;
  _Bool D.45675;
  _Bool D.45674;
  _Bool D.45673;
  char * iftmp.110;
  char * iftmp.109;
  char * iftmp.108;
  uint8_t D.45640;
  uint8_t D.45639;
  switch_bool_t D.45636;
  char * D.45635;
  switch_port_t D.45632;
  int D.45629;
  char * iftmp.107;
  uint8_t D.45622;
  uint8_t D.45621;
  switch_bool_t D.45618;
  char * D.45617;
  switch_port_t D.45614;
  int D.45611;
  uint8_t D.45606;
  uint8_t D.45605;
  char * D.45601;
  int D.45598;
  short unsigned int D.45596;
  int D.45592;
  char * D.45590;
  int D.45587;
  char * D.45585;
  char * D.45584;
  int D.45583;
  int D.45580;
  char * D.45579;
  short unsigned int D.45578;
  char * D.45576;
  uint32_t D.45575;
  char * D.45573;
  char * D.45572;
  char * D.45570;
  char * D.45569;
  char * iftmp.106;
  char * iftmp.105;
  switch_bool_t D.45559;
  char * D.45558;
  int D.45556;
  int D.45553;
  char * D.45552;
  char * D.45551;
  char * D.45550;
  char * D.45549;
  char * D.45547;
  char * D.45545;
  int D.45544;
  unsigned int D.45540;
  const char * D.45537;
  int D.45536;
  int D.45533;
  int D.45530;
  switch_port_t D.45528;
  struct payload_map_t * D.45527;
  int D.45524;
  struct switch_rtp_t * D.45519;
  unsigned int D.45518;
  int D.45514;
  uint32_t D.45512;
  char[192] * D.45509;
  char * D.45506;
  char * D.45505;
  int D.45501;
  int D.45499;
  int D.45497;
  char * D.45493;
  int D.45490;
  char * D.45488;
  int D.45485;
  char * D.45483;
  const char * D.45482;
  int D.45479;
  const char * D.45475;
  uint32_t D.45469;
  struct switch_channel_t * D.45468;
  struct switch_core_session_t * D.45467;
  int D.45464;
  int D.45461;

  # BLOCK 2 freq:940
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_38
  # DEBUG i => 0
  # DEBUG got_rtcp_mux => 0
  D.45461_41 = engine_38->ice_in.chosen[0];
  if (D.45461_41 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 3 freq:470
  # PRED: 2 [50.0%]  (true,exec)
  D.45464_42 = engine_38->ice_in.chosen[1];
  if (D.45464_42 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [29.0%]  (true,exec) 5 [71.0%]  (false,exec)

  # BLOCK 4 freq:136
  # PRED: 3 [29.0%]  (true,exec)
  D.45467_43 = smh_34(D)->session;
  D.45468_44 = D.45467_43->channel;
  D.45469_45 = switch_channel_test_flag (D.45468_44, 103);
  if (D.45469_45 == 0)
    goto <bb 203>;
  else
    goto <bb 5>;
  # SUCC: 203 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:887
  # PRED: 2 [50.0%]  (false,exec) 3 [71.0%]  (false,exec) 4 [61.0%]  (false,exec)
  engine_38->ice_in.chosen[0] = 0;
  engine_38->ice_in.chosen[1] = 0;
  engine_38->ice_in.cand_idx = 0;
  if (m_46(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

  # BLOCK 6 freq:754
  # PRED: 5 [85.0%]  (true,exec)
  attr_47 = m_46(D)->m_attributes;
  # DEBUG attr => attr_47
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:887
  # PRED: 8 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
  # attr_417 = PHI <attr_49(8), attr_47(6)>
  # got_rtcp_mux_672 = PHI <0(8), 0(6)>
  goto <bb 73>;
  # SUCC: 73 [100.0%]  (fallthru)

  # BLOCK 8 freq:133
  # PRED: 5 [15.0%]  (false,exec)
  attr_49 = sdp_48(D)->sdp_attributes;
  # DEBUG attr => attr_49
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8964
  # PRED: 73 [91.0%]  (true,exec)
  # DEBUG argc => 0
  # DEBUG j => 0
  # DEBUG cid => 0
  D.45475_53 = attr_1->a_name;
  # DEBUG s => D.45475_53
  if (D.45475_53 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:7619
  # PRED: 9 [85.0%]  (false,exec)
  D.47829_640 = *D.45475_53;
  if (D.47829_640 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:3809
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:8964
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47828_641 = PHI <1(9), 1(10), 0(11)>
  if (D.47828_641 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:4482
  # PRED: 12 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:4482
  # PRED: 12 [50.0%]  (false,exec)
  D.45475_55 = attr_1->a_name;
  D.45479_56 = strcasecmp (D.45475_55, "ice-ufrag");
  if (D.45479_56 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 15 freq:1300
  # PRED: 14 [29.0%]  (true,exec)
  D.45467_57 = smh_34(D)->session;
  D.45482_58 = attr_1->a_value;
  D.45483_59 = switch_core_perform_session_strdup (D.45467_57, D.45482_58, "src/switch_core_media.c", &__func__, 2503);
  engine_38->ice_in.ufrag = D.45483_59;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:3182
  # PRED: 14 [71.0%]  (false,exec)
  D.45475_60 = attr_1->a_name;
  D.45485_61 = strcasecmp (D.45475_60, "ice-pwd");
  if (D.45485_61 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

  # BLOCK 17 freq:923
  # PRED: 16 [29.0%]  (true,exec)
  D.45467_62 = smh_34(D)->session;
  D.45482_63 = attr_1->a_value;
  D.45488_64 = switch_core_perform_session_strdup (D.45467_62, D.45482_63, "src/switch_core_media.c", &__func__, 2505);
  engine_38->ice_in.pwd = D.45488_64;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:2259
  # PRED: 16 [71.0%]  (false,exec)
  D.45475_65 = attr_1->a_name;
  D.45490_66 = strcasecmp (D.45475_65, "ice-options");
  if (D.45490_66 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 19 freq:1130
  # PRED: 18 [50.0%]  (true,exec)
  D.45467_67 = smh_34(D)->session;
  D.45482_68 = attr_1->a_value;
  D.45493_69 = switch_core_perform_session_strdup (D.45467_67, D.45482_68, "src/switch_core_media.c", &__func__, 2507);
  engine_38->ice_in.options = D.45493_69;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:1130
  # PRED: 18 [50.0%]  (false,exec)
  D.45497_70 = switch_rtp_has_dtls ();
  if (D.45497_70 != 0)
    goto <bb 21>;
  else
    goto <bb 30>;
  # SUCC: 21 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 21 freq:328
  # PRED: 20 [29.0%]  (true,exec)
  D.45467_71 = smh_34(D)->session;
  D.45499_72 = dtls_ok (D.45467_71);
  if (D.45499_72 != 0)
    goto <bb 22>;
  else
    goto <bb 30>;
  # SUCC: 22 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 22 freq:164
  # PRED: 21 [50.0%]  (true,exec)
  D.45475_73 = attr_1->a_name;
  D.45501_74 = strcasecmp (D.45475_73, "fingerprint");
  if (D.45501_74 == 0)
    goto <bb 23>;
  else
    goto <bb 30>;
  # SUCC: 23 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 23 freq:82
  # PRED: 22 [50.0%]  (true,exec)
  D.45482_75 = attr_1->a_value;
  # DEBUG s => D.45482_75
  if (D.45482_75 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;
  # SUCC: 26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

  # BLOCK 24 freq:70
  # PRED: 23 [85.0%]  (false,exec)
  D.47833_642 = *D.45482_75;
  if (D.47833_642 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:35
  # PRED: 24 [50.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:82
  # PRED: 23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
  # D.47832_643 = PHI <1(23), 1(24), 0(25)>
  if (D.47832_643 == 0)
    goto <bb 27>;
  else
    goto <bb 30>;
  # SUCC: 27 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 27 freq:24
  # PRED: 26 [29.0%]  (true,exec)
  D.45467_77 = smh_34(D)->session;
  D.45482_78 = attr_1->a_value;
  D.45505_79 = switch_core_perform_session_strdup (D.45467_77, D.45482_78, "src/switch_core_media.c", &__func__, 2512);
  engine_38->remote_dtls_fingerprint.type = D.45505_79;
  D.45506_80 = engine_38->remote_dtls_fingerprint.type;
  p_81 = __builtin_strchr (D.45506_80, 32);
  # DEBUG p => p_81
  if (p_81 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

  # BLOCK 28 freq:17
  # PRED: 27 [69.8%]  (true,exec)
  *p_81 = 0;
  p_82 = p_81 + 1;
  # DEBUG p => p_82
  D.45509_83 = &engine_38->local_dtls_fingerprint.str;
  switch_copy_string (D.45509_83, p_82, 192);
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:24
  # PRED: 27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  generate_local_fingerprint (smh_34(D), type_36(D));
  D.45467_84 = smh_34(D)->session;
  D.45468_85 = D.45467_84->channel;
  switch_channel_set_flag_value (D.45468_85, 109, 1);
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:1106
  # PRED: 20 [71.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [50.0%]  (false,exec) 26 [71.0%]  (false,exec)
  D.45512_86 = engine_38->remote_ssrc;
  if (D.45512_86 == 0)
    goto <bb 31>;
  else
    goto <bb 36>;
  # SUCC: 31 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 31 freq:553
  # PRED: 30 [50.0%]  (true,exec)
  D.45475_87 = attr_1->a_name;
  D.45514_88 = strcasecmp (D.45475_87, "ssrc");
  if (D.45514_88 == 0)
    goto <bb 32>;
  else
    goto <bb 36>;
  # SUCC: 32 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 32 freq:276
  # PRED: 31 [50.0%]  (true,exec)
  D.45482_89 = attr_1->a_value;
  if (D.45482_89 != 0B)
    goto <bb 33>;
  else
    goto <bb 36>;
  # SUCC: 33 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

  # BLOCK 33 freq:193
  # PRED: 32 [69.8%]  (true,exec)
  D.45482_90 = attr_1->a_value;
  # DEBUG __nptr => D.45482_90
  D.47836_644 = strtol (D.45482_90, 0B, 10);
  D.45518_92 = (unsigned int) D.47836_644;
  engine_38->remote_ssrc = D.45518_92;
  D.45519_93 = engine_38->rtp_session;
  if (D.45519_93 != 0B)
    goto <bb 34>;
  else
    goto <bb 72>;
  # SUCC: 34 [85.0%]  (true,exec) 72 [15.0%]  (false,exec)

  # BLOCK 34 freq:164
  # PRED: 33 [85.0%]  (true,exec)
  D.45512_94 = engine_38->remote_ssrc;
  if (D.45512_94 != 0)
    goto <bb 35>;
  else
    goto <bb 72>;
  # SUCC: 35 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

  # BLOCK 35 freq:48
  # PRED: 34 [29.0%]  (true,exec)
  D.45519_95 = engine_38->rtp_session;
  D.45512_96 = engine_38->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.45519_95, D.45512_96);
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:913
  # PRED: 30 [50.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec)
  D.45475_97 = attr_1->a_name;
  D.45524_98 = strcasecmp (D.45475_97, "rtcp-mux");
  if (D.45524_98 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 37 freq:456
  # PRED: 36 [50.0%]  (true,exec)
  engine_38->rtcp_mux = 1;
  D.45527_99 = engine_38->cur_payload_map;
  D.45528_100 = D.45527_99->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_100;
  got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
  # DEBUG got_rtcp_mux => got_rtcp_mux_101
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:456
  # PRED: 36 [50.0%]  (false,exec)
  D.45475_102 = attr_1->a_name;
  D.45530_103 = strcasecmp (D.45475_102, "candidate");
  if (D.45530_103 == 0)
    goto <bb 39>;
  else
    goto <bb 72>;
  # SUCC: 39 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

  # BLOCK 39 freq:132
  # PRED: 38 [29.0%]  (true,exec)
  D.45467_104 = smh_34(D)->session;
  D.45468_105 = D.45467_104->channel;
  switch_channel_set_flag_value (D.45468_105, 108, 1);
  D.45533_106 = engine_38->cand_acl_count;
  if (D.45533_106 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 40 freq:38
  # PRED: 39 [29.0%]  (true,exec)
  D.45533_107 = engine_38->cand_acl_count;
  engine_38->cand_acl[D.45533_107] = "wan.auto";
  D.45536_108 = D.45533_107 + 1;
  engine_38->cand_acl_count = D.45536_108;
  D.45467_109 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45467_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:132
  # PRED: 39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
  D.45482_110 = attr_1->a_value;
  D.45537_111 = switch_stristr (" udp ", D.45482_110);
  if (D.45537_111 == 0B)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [30.2%]  (true,exec) 43 [69.8%]  (false,exec)

  # BLOCK 42 freq:40
  # PRED: 41 [30.2%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:92
  # PRED: 41 [69.8%]  (false,exec)
  D.45467_112 = smh_34(D)->session;
  D.45482_113 = attr_1->a_value;
  data_114 = switch_core_perform_session_strdup (D.45467_112, D.45482_113, "src/switch_core_media.c", &__func__, 2556);
  # DEBUG data => data_114
  D.45540_115 = switch_separate_string (data_114, 32, &fields, 15);
  argc_116 = (int) D.45540_115;
  # DEBUG argc => argc_116
  if (argc_116 <= 4)
    goto <bb 45>;
  else
    goto <bb 44>;
  # SUCC: 45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

  # BLOCK 44 freq:66
  # PRED: 43 [71.0%]  (false,exec)
  D.45544_117 = engine_38->ice_in.cand_idx;
  if (D.45544_117 > 48)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [71.0%]  (true,exec) 46 [29.0%]  (false,exec)

  # BLOCK 45 freq:73
  # PRED: 43 [29.0%]  (true,exec) 44 [71.0%]  (true,exec)
  D.45467_215 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45467_215, 4, "Invalid data\n");
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:19
  # PRED: 44 [29.0%]  (false,exec)
  D.45545_118 = fields[1];
  # DEBUG __nptr => D.45545_118
  D.47839_645 = strtol (D.45545_118, 0B, 10);
  cid_120 = D.47839_645 + -1;
  # DEBUG cid => cid_120
  # DEBUG i => 0
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:285
  # PRED: 48 [93.8%]  (true,exec)
  D.45467_122 = smh_34(D)->session;
  D.45547_123 = fields[i_2];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45467_122, 101, "CAND %d [%s]\n", i_2, D.45547_123);
  i_124 = i_2 + 1;
  # DEBUG i => i_124
  # SUCC: 48 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 48 freq:304
  # PRED: 46 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
  # i_2 = PHI <0(46), i_124(47)>
  # DEBUG i => i_2
  if (i_2 < argc_116)
    goto <bb 47>;
  else
    goto <bb 49>;
  # SUCC: 47 [93.8%]  (true,exec) 49 [6.2%]  (false,exec)

  # BLOCK 49 freq:19
  # PRED: 48 [6.2%]  (false,exec)
  D.45467_125 = smh_34(D)->session;
  D.45549_127 = fields[2];
  D.45550_128 = fields[7];
  D.45551_129 = fields[4];
  D.45552_130 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45467_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47839_645, D.45549_127, D.45550_128, D.45551_129, D.45552_130);
  D.45544_131 = engine_38->ice_in.cand_idx;
  D.45553_132 = D.45544_131 + 1;
  engine_38->ice_in.cand_idx = D.45553_132;
  # DEBUG i => 0
  D.45533_134 = engine_38->cand_acl_count;
  if (D.45533_134 > 0)
    goto <bb 50>;
  else
    goto <bb 72>;
  # SUCC: 50 [73.0%]  (true,exec) 72 [27.0%]  (false,exec)

  # BLOCK 50 freq:14
  # PRED: 49 [73.0%]  (true,exec)
  D.45556_135 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_135 == 0)
    goto <bb 51>;
  else
    goto <bb 55>;
  # SUCC: 51 [29.0%]  (true,exec) 55 [71.0%]  (false,exec)

  # BLOCK 51 freq:4
  # PRED: 50 [29.0%]  (true,exec)
  D.45551_136 = fields[4];
  D.45558_137 = engine_38->cand_acl[0];
  D.45559_138 = switch_check_network_list_ip_token (D.45551_136, D.45558_137, 0B);
  if (D.45559_138 != 0)
    goto <bb 52>;
  else
    goto <bb 55>;
  # SUCC: 52 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 52 freq:2
  # PRED: 51 [50.0%]  (true,exec)
  D.45544_139 = engine_38->ice_in.cand_idx;
  engine_38->ice_in.chosen[cid_120] = D.45544_139;
  D.45467_140 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 54>;
  else
    goto <bb 53>;
  # SUCC: 54 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

  # BLOCK 53 freq:1
  # PRED: 52 [72.0%]  (false,exec)
  # SUCC: 54 [100.0%]  (fallthru,exec)

  # BLOCK 54 freq:2
  # PRED: 52 [28.0%]  (true,exec) 53 [100.0%]  (fallthru,exec)
  # iftmp.105_13 = PHI <"video"(52), "audio"(53)>
  D.45549_144 = fields[2];
  D.45550_145 = fields[7];
  D.45551_146 = fields[4];
  D.45552_147 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45467_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47839_645, D.45549_144, D.45550_145, D.45551_146, D.45552_147);
  goto <bb 58>;
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:12
  # PRED: 50 [71.0%]  (false,exec) 51 [50.0%]  (false,exec)
  D.45467_148 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 57>;
  else
    goto <bb 56>;
  # SUCC: 57 [28.0%]  (true,exec) 56 [72.0%]  (false,exec)

  # BLOCK 56 freq:9
  # PRED: 55 [72.0%]  (false,exec)
  # SUCC: 57 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:12
  # PRED: 55 [28.0%]  (true,exec) 56 [100.0%]  (fallthru,exec)
  # iftmp.106_14 = PHI <"video"(55), "audio"(56)>
  D.45549_152 = fields[2];
  D.45550_153 = fields[7];
  D.45551_154 = fields[4];
  D.45552_155 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45467_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47839_645, D.45549_152, D.45550_153, D.45551_154, D.45552_155);
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:14
  # PRED: 54 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec)
  D.45544_156 = engine_38->ice_in.cand_idx;
  D.45467_157 = smh_34(D)->session;
  D.45569_158 = fields[0];
  D.45570_159 = switch_core_perform_session_strdup (D.45467_157, D.45569_158, "src/switch_core_media.c", &__func__, 2592);
  engine_38->ice_in.cands[D.45544_156][cid_120].foundation = D.45570_159;
  D.45544_160 = engine_38->ice_in.cand_idx;
  D.45545_161 = fields[1];
  # DEBUG __nptr => D.45545_161
  D.47842_646 = strtol (D.45545_161, 0B, 10);
  engine_38->ice_in.cands[D.45544_160][cid_120].component_id = D.47842_646;
  D.45544_163 = engine_38->ice_in.cand_idx;
  D.45467_164 = smh_34(D)->session;
  D.45549_165 = fields[2];
  D.45572_166 = switch_core_perform_session_strdup (D.45467_164, D.45549_165, "src/switch_core_media.c", &__func__, 2594);
  engine_38->ice_in.cands[D.45544_163][cid_120].transport = D.45572_166;
  D.45544_167 = engine_38->ice_in.cand_idx;
  D.45573_168 = fields[3];
  # DEBUG __nptr => D.45573_168
  D.47845_647 = strtol (D.45573_168, 0B, 10);
  D.45575_170 = (uint32_t) D.47845_647;
  engine_38->ice_in.cands[D.45544_167][cid_120].priority = D.45575_170;
  D.45544_171 = engine_38->ice_in.cand_idx;
  D.45467_172 = smh_34(D)->session;
  D.45551_173 = fields[4];
  D.45576_174 = switch_core_perform_session_strdup (D.45467_172, D.45551_173, "src/switch_core_media.c", &__func__, 2596);
  engine_38->ice_in.cands[D.45544_171][cid_120].con_addr = D.45576_174;
  D.45544_175 = engine_38->ice_in.cand_idx;
  D.45552_176 = fields[5];
  # DEBUG __nptr => D.45552_176
  D.47848_648 = strtol (D.45552_176, 0B, 10);
  D.45578_178 = (short unsigned int) D.47848_648;
  engine_38->ice_in.cands[D.45544_175][cid_120].con_port = D.45578_178;
  # DEBUG j => 6
  goto <bb 68>;
  # SUCC: 68 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:144
  # PRED: 69 [95.5%]  (true,exec)
  D.45579_182 = fields[j_10];
  D.45580_183 = strcasecmp (D.45579_182, "typ");
  if (D.45580_183 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

  # BLOCK 60 freq:42
  # PRED: 59 [29.0%]  (true,exec)
  D.45544_184 = engine_38->ice_in.cand_idx;
  D.45467_185 = smh_34(D)->session;
  D.45583_186 = j_10 + 1;
  D.45584_187 = fields[D.45583_186];
  D.45585_188 = switch_core_perform_session_strdup (D.45467_185, D.45584_187, "src/switch_core_media.c", &__func__, 2604);
  engine_38->ice_in.cands[D.45544_184][cid_120].cand_type = D.45585_188;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:102
  # PRED: 59 [71.0%]  (false,exec)
  D.45579_189 = fields[j_10];
  D.45587_190 = strcasecmp (D.45579_189, "raddr");
  if (D.45587_190 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 62 freq:30
  # PRED: 61 [29.0%]  (true,exec)
  D.45544_191 = engine_38->ice_in.cand_idx;
  D.45467_192 = smh_34(D)->session;
  D.45583_193 = j_10 + 1;
  D.45584_194 = fields[D.45583_193];
  D.45590_195 = switch_core_perform_session_strdup (D.45467_192, D.45584_194, "src/switch_core_media.c", &__func__, 2606);
  engine_38->ice_in.cands[D.45544_191][cid_120].raddr = D.45590_195;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:73
  # PRED: 61 [71.0%]  (false,exec)
  D.45579_196 = fields[j_10];
  D.45592_197 = strcasecmp (D.45579_196, "rport");
  if (D.45592_197 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

  # BLOCK 64 freq:21
  # PRED: 63 [29.0%]  (true,exec)
  D.45544_198 = engine_38->ice_in.cand_idx;
  D.45583_199 = j_10 + 1;
  D.45584_200 = fields[D.45583_199];
  # DEBUG __nptr => D.45584_200
  D.47851_649 = strtol (D.45584_200, 0B, 10);
  D.45596_202 = (short unsigned int) D.47851_649;
  engine_38->ice_in.cands[D.45544_198][cid_120].rport = D.45596_202;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:52
  # PRED: 63 [71.0%]  (false,exec)
  D.45579_203 = fields[j_10];
  D.45598_204 = strcasecmp (D.45579_203, "generation");
  if (D.45598_204 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

  # BLOCK 66 freq:15
  # PRED: 65 [29.0%]  (true,exec)
  D.45544_205 = engine_38->ice_in.cand_idx;
  D.45467_206 = smh_34(D)->session;
  D.45583_207 = j_10 + 1;
  D.45584_208 = fields[D.45583_207];
  D.45601_209 = switch_core_perform_session_strdup (D.45467_206, D.45584_208, "src/switch_core_media.c", &__func__, 2610);
  engine_38->ice_in.cands[D.45544_205][cid_120].generation = D.45601_209;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:144
  # PRED: 60 [100.0%]  (fallthru,exec) 62 [100.0%]  (fallthru,exec) 64 [100.0%]  (fallthru,exec) 65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
  j_210 = j_10 + 2;
  # DEBUG j => j_210
  # SUCC: 68 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 68 freq:158
  # PRED: 58 [100.0%]  (fallthru,exec) 67 [100.0%]  (fallthru,dfs_back,exec)
  # j_10 = PHI <6(58), j_210(67)>
  # DEBUG j => j_10
  if (j_10 < argc_116)
    goto <bb 69>;
  else
    goto <bb 70>;
  # SUCC: 69 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

  # BLOCK 69 freq:151
  # PRED: 68 [95.5%]  (true,exec)
  D.45583_180 = j_10 + 1;
  D.45584_181 = fields[D.45583_180];
  if (D.45584_181 != 0B)
    goto <bb 59>;
  else
    goto <bb 70>;
  # SUCC: 59 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

  # BLOCK 70 freq:14
  # PRED: 68 [4.5%]  (false,exec) 69 [4.5%]  (false,exec)
  D.45556_211 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_211 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;
  # SUCC: 71 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 71 freq:7
  # PRED: 70 [50.0%]  (true,exec)
  D.45556_212 = engine_38->ice_in.chosen[cid_120];
  D.45605_213 = engine_38->ice_in.cands[D.45556_212][cid_120].ready;
  D.45606_214 = D.45605_213 + 1;
  engine_38->ice_in.cands[D.45556_212][cid_120].ready = D.45606_214;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 72 freq:8964
  # PRED: 13 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 34 [71.0%]  (false,exec) 37 [100.0%]  (fallthru,exec) 38 [71.0%]  (false,exec) 42 [100.0%]  (fallthru,exec) 45 [100.0%]  (fallthru,exec) 71 [100.0%]  (fallthru,exec) 49 [27.0%]  (false,exec) 33 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec) 70 [50.0%]  (false,exec)
  # got_rtcp_mux_7 = PHI <got_rtcp_mux_8(13), got_rtcp_mux_8(15), got_rtcp_mux_8(17), got_rtcp_mux_8(19), got_rtcp_mux_8(29), got_rtcp_mux_8(34), got_rtcp_mux_101(37), got_rtcp_mux_8(38), got_rtcp_mux_8(42), got_rtcp_mux_8(45), got_rtcp_mux_8(71), got_rtcp_mux_8(49), got_rtcp_mux_8(33), got_rtcp_mux_8(35), got_rtcp_mux_8(70)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_7
  attr_216 = attr_1->a_next;
  # DEBUG attr => attr_216
  # SUCC: 73 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 73 freq:9850
  # PRED: 7 [100.0%]  (fallthru) 72 [100.0%]  (fallthru,dfs_back,exec)
  # attr_1 = PHI <attr_417(7), attr_216(72)>
  # got_rtcp_mux_8 = PHI <got_rtcp_mux_672(7), got_rtcp_mux_7(72)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_8
  # DEBUG attr => attr_1
  if (attr_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 74>;
  # SUCC: 9 [91.0%]  (true,exec) 74 [9.0%]  (false,exec)

  # BLOCK 74 freq:887
  # PRED: 73 [9.0%]  (false,exec)
  D.45461_217 = engine_38->ice_in.chosen[0];
  if (D.45461_217 == 0)
    goto <bb 76>;
  else
    goto <bb 75>;
  # SUCC: 76 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

  # BLOCK 75 freq:443
  # PRED: 74 [50.0%]  (false,exec)
  D.45464_218 = engine_38->ice_in.chosen[1];
  if (D.45464_218 == 0)
    goto <bb 76>;
  else
    goto <bb 95>;
  # SUCC: 76 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

  # BLOCK 76 freq:665
  # PRED: 75 [50.0%]  (true,exec) 74 [50.0%]  (true,exec)
  # i_440 = PHI <0(75), 0(74)>
  goto <bb 92>;
  # SUCC: 92 [100.0%]  (fallthru)

  # BLOCK 77 freq:9335
  # PRED: 93 [50.0%]  (true,exec) 94 [95.5%]  (true,exec)
  D.45461_223 = engine_38->ice_in.chosen[0];
  if (D.45461_223 == 0)
    goto <bb 78>;
  else
    goto <bb 84>;
  # SUCC: 78 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 78 freq:4668
  # PRED: 77 [50.0%]  (true,exec)
  D.45611_224 = engine_38->ice_in.cands[i_3][0].component_id;
  if (D.45611_224 == 1)
    goto <bb 79>;
  else
    goto <bb 84>;
  # SUCC: 79 [28.0%]  (true,exec) 84 [72.0%]  (false,exec)

  # BLOCK 79 freq:1307
  # PRED: 78 [28.0%]  (true,exec)
  D.45614_225 = engine_38->ice_in.cands[i_3][0].rport;
  if (D.45614_225 == 0)
    goto <bb 80>;
  else
    goto <bb 84>;
  # SUCC: 80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 80 freq:379
  # PRED: 79 [29.0%]  (true,exec)
  D.45617_226 = engine_38->ice_in.cands[i_3][0].con_addr;
  D.45618_227 = switch_check_network_list_ip_token (D.45617_226, "localnet.auto", 0B);
  if (D.45618_227 != 0)
    goto <bb 81>;
  else
    goto <bb 84>;
  # SUCC: 81 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 81 freq:190
  # PRED: 80 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_3;
  D.45461_228 = engine_38->ice_in.chosen[0];
  D.45621_229 = engine_38->ice_in.cands[D.45461_228][0].ready;
  D.45622_230 = D.45621_229 + 1;
  engine_38->ice_in.cands[D.45461_228][0].ready = D.45622_230;
  D.45467_231 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 83>;
  else
    goto <bb 82>;
  # SUCC: 83 [28.0%]  (true,exec) 82 [72.0%]  (false,exec)

  # BLOCK 82 freq:136
  # PRED: 81 [72.0%]  (false,exec)
  # SUCC: 83 [100.0%]  (fallthru,exec)

  # BLOCK 83 freq:190
  # PRED: 81 [28.0%]  (true,exec) 82 [100.0%]  (fallthru,exec)
  # iftmp.107_15 = PHI <"video"(81), "audio"(82)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45467_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:9335
  # PRED: 77 [50.0%]  (false,exec) 78 [72.0%]  (false,exec) 79 [71.0%]  (false,exec) 80 [50.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
  D.45464_234 = engine_38->ice_in.chosen[1];
  if (D.45464_234 == 0)
    goto <bb 85>;
  else
    goto <bb 91>;
  # SUCC: 85 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 85 freq:4668
  # PRED: 84 [50.0%]  (true,exec)
  D.45629_235 = engine_38->ice_in.cands[i_3][1].component_id;
  if (D.45629_235 == 2)
    goto <bb 86>;
  else
    goto <bb 91>;
  # SUCC: 86 [28.0%]  (true,exec) 91 [72.0%]  (false,exec)

  # BLOCK 86 freq:1307
  # PRED: 85 [28.0%]  (true,exec)
  D.45632_236 = engine_38->ice_in.cands[i_3][1].rport;
  if (D.45632_236 == 0)
    goto <bb 87>;
  else
    goto <bb 91>;
  # SUCC: 87 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

  # BLOCK 87 freq:379
  # PRED: 86 [29.0%]  (true,exec)
  D.45635_237 = engine_38->ice_in.cands[i_3][1].con_addr;
  D.45636_238 = switch_check_network_list_ip_token (D.45635_237, "localnet.auto", 0B);
  if (D.45636_238 != 0)
    goto <bb 88>;
  else
    goto <bb 91>;
  # SUCC: 88 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 88 freq:190
  # PRED: 87 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_3;
  D.45464_239 = engine_38->ice_in.chosen[1];
  D.45639_240 = engine_38->ice_in.cands[D.45464_239][1].ready;
  D.45640_241 = D.45639_240 + 1;
  engine_38->ice_in.cands[D.45464_239][1].ready = D.45640_241;
  D.45467_242 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 90>;
  else
    goto <bb 89>;
  # SUCC: 90 [28.0%]  (true,exec) 89 [72.0%]  (false,exec)

  # BLOCK 89 freq:136
  # PRED: 88 [72.0%]  (false,exec)
  # SUCC: 90 [100.0%]  (fallthru,exec)

  # BLOCK 90 freq:190
  # PRED: 88 [28.0%]  (true,exec) 89 [100.0%]  (fallthru,exec)
  # iftmp.108_16 = PHI <"video"(88), "audio"(89)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45467_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);
  # SUCC: 91 [100.0%]  (fallthru,exec)

  # BLOCK 91 freq:9335
  # PRED: 84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
  i_245 = i_3 + 1;
  # DEBUG i => i_245
  # SUCC: 92 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 92 freq:10000
  # PRED: 76 [100.0%]  (fallthru) 91 [100.0%]  (fallthru,dfs_back,exec)
  # i_3 = PHI <i_440(76), i_245(91)>
  # DEBUG i => i_3
  D.45544_220 = engine_38->ice_in.cand_idx;
  if (D.45544_220 >= i_3)
    goto <bb 93>;
  else
    goto <bb 95>;
  # SUCC: 93 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

  # BLOCK 93 freq:9550
  # PRED: 92 [95.5%]  (true,exec)
  D.45461_221 = engine_38->ice_in.chosen[0];
  if (D.45461_221 == 0)
    goto <bb 77>;
  else
    goto <bb 94>;
  # SUCC: 77 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

  # BLOCK 94 freq:4775
  # PRED: 93 [50.0%]  (false,exec)
  D.45464_222 = engine_38->ice_in.chosen[1];
  if (D.45464_222 == 0)
    goto <bb 77>;
  else
    goto <bb 95>;
  # SUCC: 77 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

  # BLOCK 95 freq:887
  # PRED: 75 [50.0%]  (false,exec) 92 [4.5%]  (false,exec) 94 [4.5%]  (false,exec)
  D.45461_246 = engine_38->ice_in.chosen[0];
  if (D.45461_246 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:443
  # PRED: 95 [50.0%]  (false,exec)
  D.45464_247 = engine_38->ice_in.chosen[1];
  if (D.45464_247 == 0)
    goto <bb 97>;
  else
    goto <bb 114>;
  # SUCC: 97 [50.0%]  (true,exec) 114 [50.0%]  (false,exec)

  # BLOCK 97 freq:665
  # PRED: 96 [50.0%]  (true,exec) 95 [50.0%]  (true,exec)
  # i_676 = PHI <0(96), 0(95)>
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru)

  # BLOCK 98 freq:9335
  # PRED: 112 [50.0%]  (true,exec) 113 [95.5%]  (true,exec)
  D.45461_252 = engine_38->ice_in.chosen[0];
  if (D.45461_252 == 0)
    goto <bb 99>;
  else
    goto <bb 104>;
  # SUCC: 99 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

  # BLOCK 99 freq:4668
  # PRED: 98 [50.0%]  (true,exec)
  D.45611_253 = engine_38->ice_in.cands[i_4][0].component_id;
  if (D.45611_253 == 1)
    goto <bb 100>;
  else
    goto <bb 104>;
  # SUCC: 100 [28.0%]  (true,exec) 104 [72.0%]  (false,exec)

  # BLOCK 100 freq:1307
  # PRED: 99 [28.0%]  (true,exec)
  D.45614_254 = engine_38->ice_in.cands[i_4][0].rport;
  if (D.45614_254 != 0)
    goto <bb 101>;
  else
    goto <bb 104>;
  # SUCC: 101 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

  # BLOCK 101 freq:653
  # PRED: 100 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_4;
  D.45461_255 = engine_38->ice_in.chosen[0];
  D.45621_256 = engine_38->ice_in.cands[D.45461_255][0].ready;
  D.45622_257 = D.45621_256 + 1;
  engine_38->ice_in.cands[D.45461_255][0].ready = D.45622_257;
  D.45467_258 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 103>;
  else
    goto <bb 102>;
  # SUCC: 103 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

  # BLOCK 102 freq:470
  # PRED: 101 [72.0%]  (false,exec)
  # SUCC: 103 [100.0%]  (fallthru,exec)

  # BLOCK 103 freq:653
  # PRED: 101 [28.0%]  (true,exec) 102 [100.0%]  (fallthru,exec)
  # iftmp.109_17 = PHI <"video"(101), "audio"(102)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45467_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);
  # SUCC: 104 [100.0%]  (fallthru,exec)

  # BLOCK 104 freq:9335
  # PRED: 98 [50.0%]  (false,exec) 99 [72.0%]  (false,exec) 100 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
  D.45464_261 = engine_38->ice_in.chosen[1];
  if (D.45464_261 == 0)
    goto <bb 105>;
  else
    goto <bb 110>;
  # SUCC: 105 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

  # BLOCK 105 freq:4668
  # PRED: 104 [50.0%]  (true,exec)
  D.45629_262 = engine_38->ice_in.cands[i_4][1].component_id;
  if (D.45629_262 == 2)
    goto <bb 106>;
  else
    goto <bb 110>;
  # SUCC: 106 [28.0%]  (true,exec) 110 [72.0%]  (false,exec)

  # BLOCK 106 freq:1307
  # PRED: 105 [28.0%]  (true,exec)
  D.45632_263 = engine_38->ice_in.cands[i_4][1].rport;
  if (D.45632_263 != 0)
    goto <bb 107>;
  else
    goto <bb 110>;
  # SUCC: 107 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

  # BLOCK 107 freq:653
  # PRED: 106 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_4;
  D.45464_264 = engine_38->ice_in.chosen[1];
  D.45639_265 = engine_38->ice_in.cands[D.45464_264][1].ready;
  D.45640_266 = D.45639_265 + 1;
  engine_38->ice_in.cands[D.45464_264][1].ready = D.45640_266;
  D.45467_267 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 109>;
  else
    goto <bb 108>;
  # SUCC: 109 [28.0%]  (true,exec) 108 [72.0%]  (false,exec)

  # BLOCK 108 freq:470
  # PRED: 107 [72.0%]  (false,exec)
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:653
  # PRED: 107 [28.0%]  (true,exec) 108 [100.0%]  (fallthru,exec)
  # iftmp.110_18 = PHI <"video"(107), "audio"(108)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45467_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:9335
  # PRED: 104 [50.0%]  (false,exec) 105 [72.0%]  (false,exec) 106 [50.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
  i_270 = i_4 + 1;
  # DEBUG i => i_270
  # SUCC: 111 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 111 freq:10000
  # PRED: 97 [100.0%]  (fallthru) 110 [100.0%]  (fallthru,dfs_back,exec)
  # i_4 = PHI <i_676(97), i_270(110)>
  # DEBUG i => i_4
  D.45544_249 = engine_38->ice_in.cand_idx;
  if (D.45544_249 >= i_4)
    goto <bb 112>;
  else
    goto <bb 114>;
  # SUCC: 112 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

  # BLOCK 112 freq:9550
  # PRED: 111 [95.5%]  (true,exec)
  D.45461_250 = engine_38->ice_in.chosen[0];
  if (D.45461_250 == 0)
    goto <bb 98>;
  else
    goto <bb 113>;
  # SUCC: 98 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

  # BLOCK 113 freq:4775
  # PRED: 112 [50.0%]  (false,exec)
  D.45464_251 = engine_38->ice_in.chosen[1];
  if (D.45464_251 == 0)
    goto <bb 98>;
  else
    goto <bb 114>;
  # SUCC: 98 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

  # BLOCK 114 freq:886
  # PRED: 96 [50.0%]  (false,exec) 111 [4.5%]  (false,exec) 113 [4.5%]  (false,exec)
  D.45461_271 = engine_38->ice_in.chosen[0];
  if (D.45461_271 != 0)
    goto <bb 115>;
  else
    goto <bb 119>;
  # SUCC: 115 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

  # BLOCK 115 freq:443
  # PRED: 114 [50.0%]  (true,exec)
  D.45464_272 = engine_38->ice_in.chosen[1];
  D.45673_273 = D.45464_272 == 0;
  D.45674_274 = got_rtcp_mux_8 != 0;
  D.45675_275 = D.45673_273 && D.45674_274;
  if (D.45675_275 != 0)
    goto <bb 116>;
  else
    goto <bb 119>;
  # SUCC: 116 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

  # BLOCK 116 freq:129
  # PRED: 115 [29.0%]  (true,exec)
  D.45461_276 = engine_38->ice_in.chosen[0];
  engine_38->ice_in.chosen[1] = D.45461_276;
  D.45678_277 = &engine_38->ice_in.cands[0][0];
  D.45679_278 = (void * restrict) D.45678_277;
  D.45464_279 = engine_38->ice_in.chosen[1];
  D.45680_280 = (unsigned int) D.45464_279;
  D.45681_281 = D.45680_280 * 88;
  D.45682_282 = D.45681_281 + 44;
  D.45683_283 = D.45679_278 + D.45682_282;
  D.45678_284 = &engine_38->ice_in.cands[0][0];
  D.45684_285 = (const void * restrict) D.45678_284;
  D.45461_286 = engine_38->ice_in.chosen[0];
  D.45685_287 = (unsigned int) D.45461_286;
  D.45686_288 = D.45685_287 * 88;
  D.45687_289 = D.45684_285 + D.45686_288;
  memcpy (D.45683_283, D.45687_289, 44);
  D.45464_290 = engine_38->ice_in.chosen[1];
  D.45639_291 = engine_38->ice_in.cands[D.45464_290][1].ready;
  D.45640_292 = D.45639_291 + 1;
  engine_38->ice_in.cands[D.45464_290][1].ready = D.45640_292;
  D.45467_293 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 118>;
  else
    goto <bb 117>;
  # SUCC: 118 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

  # BLOCK 117 freq:93
  # PRED: 116 [72.0%]  (false,exec)
  # SUCC: 118 [100.0%]  (fallthru,exec)

  # BLOCK 118 freq:129
  # PRED: 116 [28.0%]  (true,exec) 117 [100.0%]  (fallthru,exec)
  # iftmp.111_19 = PHI <"video"(116), "audio"(117)>
  D.45464_296 = engine_38->ice_in.chosen[1];
  D.45692_297 = engine_38->ice_in.cands[D.45464_296][1].con_addr;
  D.45464_298 = engine_38->ice_in.chosen[1];
  D.45693_299 = engine_38->ice_in.cands[D.45464_298][1].con_port;
  D.45694_300 = (int) D.45693_299;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45467_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45692_297, D.45694_300);
  # SUCC: 119 [100.0%]  (fallthru,exec)

  # BLOCK 119 freq:886
  # PRED: 114 [50.0%]  (false,exec) 115 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
  D.45461_301 = engine_38->ice_in.chosen[0];
  if (D.45461_301 == 0)
    goto <bb 121>;
  else
    goto <bb 120>;
  # SUCC: 121 [50.0%]  (true,exec) 120 [50.0%]  (false,exec)

  # BLOCK 120 freq:443
  # PRED: 119 [50.0%]  (false,exec)
  D.45464_302 = engine_38->ice_in.chosen[1];
  if (D.45464_302 == 0)
    goto <bb 121>;
  else
    goto <bb 134>;
  # SUCC: 121 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

  # BLOCK 121 freq:665
  # PRED: 120 [50.0%]  (true,exec) 119 [50.0%]  (true,exec)
  # i_487 = PHI <0(120), 0(119)>
  goto <bb 133>;
  # SUCC: 133 [100.0%]  (fallthru)

  # BLOCK 122 freq:9335
  # PRED: 135 [50.0%]  (true,exec) 136 [95.5%]  (true,exec)
  D.45461_307 = engine_38->ice_in.chosen[0];
  if (D.45461_307 == 0)
    goto <bb 123>;
  else
    goto <bb 127>;
  # SUCC: 123 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

  # BLOCK 123 freq:4668
  # PRED: 122 [50.0%]  (true,exec)
  D.45611_308 = engine_38->ice_in.cands[i_5][0].component_id;
  if (D.45611_308 == 1)
    goto <bb 124>;
  else
    goto <bb 127>;
  # SUCC: 124 [28.0%]  (true,exec) 127 [72.0%]  (false,exec)

  # BLOCK 124 freq:1307
  # PRED: 123 [28.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_5;
  D.45461_309 = engine_38->ice_in.chosen[0];
  D.45621_310 = engine_38->ice_in.cands[D.45461_309][0].ready;
  D.45622_311 = D.45621_310 + 1;
  engine_38->ice_in.cands[D.45461_309][0].ready = D.45622_311;
  D.45467_312 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 126>;
  else
    goto <bb 125>;
  # SUCC: 126 [28.0%]  (true,exec) 125 [72.0%]  (false,exec)

  # BLOCK 125 freq:941
  # PRED: 124 [72.0%]  (false,exec)
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:1307
  # PRED: 124 [28.0%]  (true,exec) 125 [100.0%]  (fallthru,exec)
  # iftmp.112_20 = PHI <"video"(124), "audio"(125)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45467_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);
  # SUCC: 127 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:9335
  # PRED: 122 [50.0%]  (false,exec) 123 [72.0%]  (false,exec) 126 [100.0%]  (fallthru,exec)
  D.45464_315 = engine_38->ice_in.chosen[1];
  if (D.45464_315 == 0)
    goto <bb 128>;
  else
    goto <bb 132>;
  # SUCC: 128 [50.0%]  (true,exec) 132 [50.0%]  (false,exec)

  # BLOCK 128 freq:4668
  # PRED: 127 [50.0%]  (true,exec)
  D.45629_316 = engine_38->ice_in.cands[i_5][1].component_id;
  if (D.45629_316 == 2)
    goto <bb 129>;
  else
    goto <bb 132>;
  # SUCC: 129 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

  # BLOCK 129 freq:1307
  # PRED: 128 [28.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_5;
  D.45464_317 = engine_38->ice_in.chosen[1];
  D.45639_318 = engine_38->ice_in.cands[D.45464_317][1].ready;
  D.45640_319 = D.45639_318 + 1;
  engine_38->ice_in.cands[D.45464_317][1].ready = D.45640_319;
  D.45467_320 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 131>;
  else
    goto <bb 130>;
  # SUCC: 131 [28.0%]  (true,exec) 130 [72.0%]  (false,exec)

  # BLOCK 130 freq:941
  # PRED: 129 [72.0%]  (false,exec)
  # SUCC: 131 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:1307
  # PRED: 129 [28.0%]  (true,exec) 130 [100.0%]  (fallthru,exec)
  # iftmp.113_21 = PHI <"video"(129), "audio"(130)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45467_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);
  # SUCC: 132 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:9335
  # PRED: 127 [50.0%]  (false,exec) 128 [72.0%]  (false,exec) 131 [100.0%]  (fallthru,exec)
  i_323 = i_5 + 1;
  # DEBUG i => i_323
  # SUCC: 133 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 133 freq:10000
  # PRED: 121 [100.0%]  (fallthru) 132 [100.0%]  (fallthru,dfs_back,exec)
  # i_5 = PHI <i_487(121), i_323(132)>
  # DEBUG i => i_5
  D.45544_304 = engine_38->ice_in.cand_idx;
  if (D.45544_304 >= i_5)
    goto <bb 135>;
  else
    goto <bb 134>;
  # SUCC: 135 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

  # BLOCK 134 freq:886
  # PRED: 133 [4.5%]  (false,exec) 136 [4.5%]  (false,exec) 120 [50.0%]  (false,exec)
  # i_513 = PHI <0(133), 0(136), 0(120)>
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru)

  # BLOCK 135 freq:9550
  # PRED: 133 [95.5%]  (true,exec)
  D.45461_305 = engine_38->ice_in.chosen[0];
  if (D.45461_305 == 0)
    goto <bb 122>;
  else
    goto <bb 136>;
  # SUCC: 122 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

  # BLOCK 136 freq:4775
  # PRED: 135 [50.0%]  (false,exec)
  D.45464_306 = engine_38->ice_in.chosen[1];
  if (D.45464_306 == 0)
    goto <bb 122>;
  else
    goto <bb 134>;
  # SUCC: 122 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

  # BLOCK 137 freq:1773
  # PRED: 148 [66.7%]  (true,exec)
  D.45715_325 = engine_38->ice_in.chosen[i_6];
  D.45716_326 = engine_38->ice_in.cands[D.45715_325][i_6].ready;
  if (D.45716_326 != 0)
    goto <bb 138>;
  else
    goto <bb 147>;
  # SUCC: 138 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 138 freq:887
  # PRED: 137 [50.0%]  (true,exec)
  D.45721_327 = engine_38->ice_in.ufrag;
  # DEBUG s => D.45721_327
  if (D.45721_327 == 0B)
    goto <bb 141>;
  else
    goto <bb 139>;
  # SUCC: 141 [15.0%]  (true,exec) 139 [85.0%]  (false,exec)

  # BLOCK 139 freq:754
  # PRED: 138 [85.0%]  (false,exec)
  D.47855_650 = MEM[(const char *)D.45721_327];
  if (D.47855_650 == 0)
    goto <bb 141>;
  else
    goto <bb 140>;
  # SUCC: 141 [50.0%]  (true,exec) 140 [50.0%]  (false,exec)

  # BLOCK 140 freq:377
  # PRED: 139 [50.0%]  (false,exec)
  # SUCC: 141 [100.0%]  (fallthru,exec)

  # BLOCK 141 freq:887
  # PRED: 138 [15.0%]  (true,exec) 139 [50.0%]  (true,exec) 140 [100.0%]  (fallthru,exec)
  # D.47854_651 = PHI <1(138), 1(139), 0(140)>
  if (D.47854_651 != 0)
    goto <bb 146>;
  else
    goto <bb 142>;
  # SUCC: 146 [50.0%]  (true,exec) 142 [50.0%]  (false,exec)

  # BLOCK 142 freq:443
  # PRED: 141 [50.0%]  (false,exec)
  D.45724_329 = engine_38->ice_in.pwd;
  # DEBUG s => D.45724_329
  if (D.45724_329 == 0B)
    goto <bb 145>;
  else
    goto <bb 143>;
  # SUCC: 145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

  # BLOCK 143 freq:377
  # PRED: 142 [85.0%]  (false,exec)
  D.47859_652 = MEM[(const char *)D.45724_329];
  if (D.47859_652 == 0)
    goto <bb 145>;
  else
    goto <bb 144>;
  # SUCC: 145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

  # BLOCK 144 freq:188
  # PRED: 143 [50.0%]  (false,exec)
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:443
  # PRED: 142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
  # D.47858_653 = PHI <1(142), 1(143), 0(144)>
  if (D.47858_653 != 0)
    goto <bb 146>;
  else
    goto <bb 147>;
  # SUCC: 146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 146 freq:665
  # PRED: 141 [50.0%]  (true,exec) 145 [50.0%]  (true,exec)
  D.45715_331 = engine_38->ice_in.chosen[i_6];
  engine_38->ice_in.cands[D.45715_331][i_6].ready = 0;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 147 freq:1773
  # PRED: 137 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
  i_332 = i_6 + 1;
  # DEBUG i => i_332
  # SUCC: 148 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 148 freq:2660
  # PRED: 134 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
  # i_6 = PHI <i_513(134), i_332(147)>
  # DEBUG i => i_6
  if (i_6 <= 1)
    goto <bb 137>;
  else
    goto <bb 149>;
  # SUCC: 137 [66.7%]  (true,exec) 149 [33.3%]  (false,exec)

  # BLOCK 149 freq:886
  # PRED: 148 [33.3%]  (false,exec)
  D.45461_333 = engine_38->ice_in.chosen[0];
  D.45726_334 = engine_38->ice_in.cands[D.45461_333][0].con_addr;
  if (D.45726_334 != 0B)
    goto <bb 150>;
  else
    goto <bb 156>;
  # SUCC: 150 [85.0%]  (true,exec) 156 [15.0%]  (false,exec)

  # BLOCK 150 freq:754
  # PRED: 149 [85.0%]  (true,exec)
  D.45461_335 = engine_38->ice_in.chosen[0];
  D.45729_336 = engine_38->ice_in.cands[D.45461_335][0].con_port;
  if (D.45729_336 != 0)
    goto <bb 151>;
  else
    goto <bb 156>;
  # SUCC: 151 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

  # BLOCK 151 freq:219
  # PRED: 150 [29.0%]  (true,exec)
  tmp = "";
  D.45527_337 = engine_38->cur_payload_map;
  D.45467_338 = smh_34(D)->session;
  D.45461_339 = engine_38->ice_in.chosen[0];
  D.45726_340 = engine_38->ice_in.cands[D.45461_339][0].con_addr;
  D.45732_341 = switch_core_perform_session_strdup (D.45467_338, D.45726_340, "src/switch_core_media.c", &__func__, 2709);
  D.45527_337->remote_sdp_ip = D.45732_341;
  D.45467_342 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 153>;
  else
    goto <bb 152>;
  # SUCC: 153 [28.0%]  (true,exec) 152 [72.0%]  (false,exec)

  # BLOCK 152 freq:157
  # PRED: 151 [72.0%]  (false,exec)
  # SUCC: 153 [100.0%]  (fallthru,exec)

  # BLOCK 153 freq:219
  # PRED: 151 [28.0%]  (true,exec) 152 [100.0%]  (fallthru,exec)
  # iftmp.114_22 = PHI <"video"(151), "audio"(152)>
  D.45461_345 = engine_38->ice_in.chosen[0];
  D.45726_346 = engine_38->ice_in.cands[D.45461_345][0].con_addr;
  D.45461_347 = engine_38->ice_in.chosen[0];
  D.45729_348 = engine_38->ice_in.cands[D.45461_347][0].con_port;
  D.45737_349 = (int) D.45729_348;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45467_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45726_346, D.45737_349);
  D.45461_350 = engine_38->ice_in.chosen[0];
  D.45621_351 = engine_38->ice_in.cands[D.45461_350][0].ready;
  D.45622_352 = D.45621_351 + 1;
  engine_38->ice_in.cands[D.45461_350][0].ready = D.45622_352;
  D.45461_353 = engine_38->ice_in.chosen[0];
  D.45729_354 = engine_38->ice_in.cands[D.45461_353][0].con_port;
  engine_38->remote_rtp_ice_port = D.45729_354;
  D.45467_355 = smh_34(D)->session;
  D.45461_356 = engine_38->ice_in.chosen[0];
  D.45726_357 = engine_38->ice_in.cands[D.45461_356][0].con_addr;
  D.45738_358 = switch_core_perform_session_strdup (D.45467_355, D.45726_357, "src/switch_core_media.c", &__func__, 2716);
  engine_38->remote_rtp_ice_addr = D.45738_358;
  D.45527_359 = engine_38->cur_payload_map;
  D.45467_360 = smh_34(D)->session;
  D.45461_361 = engine_38->ice_in.chosen[0];
  D.45726_362 = engine_38->ice_in.cands[D.45461_361][0].con_addr;
  D.45739_363 = switch_core_perform_session_strdup (D.45467_360, D.45726_362, "src/switch_core_media.c", &__func__, 2718);
  D.45527_359->remote_sdp_ip = D.45739_363;
  D.45527_364 = engine_38->cur_payload_map;
  D.45461_365 = engine_38->ice_in.chosen[0];
  D.45729_366 = engine_38->ice_in.cands[D.45461_365][0].con_port;
  D.45527_364->remote_sdp_port = D.45729_366;
  D.45740_367 = engine_38->remote_rtcp_port;
  if (D.45740_367 != 0)
    goto <bb 154>;
  else
    goto <bb 155>;
  # SUCC: 154 [50.0%]  (true,exec) 155 [50.0%]  (false,exec)

  # BLOCK 154 freq:109
  # PRED: 153 [50.0%]  (true,exec)
  D.45527_368 = engine_38->cur_payload_map;
  D.45528_369 = D.45527_368->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_369;
  # SUCC: 155 [100.0%]  (fallthru,exec)

  # BLOCK 155 freq:219
  # PRED: 153 [50.0%]  (false,exec) 154 [100.0%]  (fallthru,exec)
  D.45527_370 = engine_38->cur_payload_map;
  D.45528_371 = D.45527_370->remote_sdp_port;
  D.45743_372 = (int) D.45528_371;
  switch_snprintf (&tmp, 80, "%d", D.45743_372);
  D.45467_373 = smh_34(D)->session;
  D.45468_374 = D.45467_373->channel;
  D.45527_375 = engine_38->cur_payload_map;
  D.45744_376 = D.45527_375->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.45468_374, "remote_media_ip", D.45744_376, 1);
  D.45467_377 = smh_34(D)->session;
  D.45468_378 = D.45467_377->channel;
  switch_channel_set_variable_var_check (D.45468_378, "remote_media_port", &tmp, 1);
  # SUCC: 156 [100.0%]  (fallthru,exec)

  # BLOCK 156 freq:886
  # PRED: 149 [15.0%]  (false,exec) 150 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
  D.45464_379 = engine_38->ice_in.chosen[1];
  D.45693_380 = engine_38->ice_in.cands[D.45464_379][1].con_port;
  if (D.45693_380 != 0)
    goto <bb 157>;
  else
    goto <bb 160>;
  # SUCC: 157 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

  # BLOCK 157 freq:443
  # PRED: 156 [50.0%]  (true,exec)
  D.45467_381 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 159>;
  else
    goto <bb 158>;
  # SUCC: 159 [28.0%]  (true,exec) 158 [72.0%]  (false,exec)

  # BLOCK 158 freq:319
  # PRED: 157 [72.0%]  (false,exec)
  # SUCC: 159 [100.0%]  (fallthru,exec)

  # BLOCK 159 freq:443
  # PRED: 157 [28.0%]  (true,exec) 158 [100.0%]  (fallthru,exec)
  # iftmp.115_23 = PHI <"video"(157), "audio"(158)>
  D.45464_384 = engine_38->ice_in.chosen[1];
  D.45692_385 = engine_38->ice_in.cands[D.45464_384][1].con_addr;
  D.45464_386 = engine_38->ice_in.chosen[1];
  D.45693_387 = engine_38->ice_in.cands[D.45464_386][1].con_port;
  D.45694_388 = (int) D.45693_387;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45467_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45692_385, D.45694_388);
  D.45464_389 = engine_38->ice_in.chosen[1];
  D.45693_390 = engine_38->ice_in.cands[D.45464_389][1].con_port;
  engine_38->remote_rtcp_ice_port = D.45693_390;
  D.45467_391 = smh_34(D)->session;
  D.45464_392 = engine_38->ice_in.chosen[1];
  D.45692_393 = engine_38->ice_in.cands[D.45464_392][1].con_addr;
  D.45751_394 = switch_core_perform_session_strdup (D.45467_391, D.45692_393, "src/switch_core_media.c", &__func__, 2734);
  engine_38->remote_rtcp_ice_addr = D.45751_394;
  D.45464_395 = engine_38->ice_in.chosen[1];
  D.45693_396 = engine_38->ice_in.cands[D.45464_395][1].con_port;
  engine_38->remote_rtcp_port = D.45693_396;
  # SUCC: 160 [100.0%]  (fallthru,exec)

  # BLOCK 160 freq:886
  # PRED: 156 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec)
  D.45752_397 = m_46(D) != 0B;
  D.45753_398 = got_rtcp_mux_8 == 0;
  D.45754_399 = D.45752_397 && D.45753_398;
  if (D.45754_399 != 0)
    goto <bb 161>;
  else
    goto <bb 162>;
  # SUCC: 161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

  # BLOCK 161 freq:443
  # PRED: 160 [50.0%]  (true,exec)
  engine_38->rtcp_mux = -1;
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 162 freq:886
  # PRED: 160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
  D.45467_400 = smh_34(D)->session;
  D.45468_401 = D.45467_400->channel;
  D.45757_402 = switch_channel_test_flag (D.45468_401, 103);
  if (D.45757_402 != 0)
    goto <bb 163>;
  else
    goto <bb 203>;
  # SUCC: 163 [39.0%]  (true,exec) 203 [61.0%]  (false,exec)

  # BLOCK 163 freq:346
  # PRED: 162 [39.0%]  (true,exec)
  D.45519_403 = engine_38->rtp_session;
  D.45760_404 = switch_rtp_ready (D.45519_403);
  if (D.45760_404 != 0)
    goto <bb 164>;
  else
    goto <bb 170>;
  # SUCC: 164 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 164 freq:173
  # PRED: 163 [50.0%]  (true,exec)
  D.45461_405 = engine_38->ice_in.chosen[0];
  D.45621_406 = engine_38->ice_in.cands[D.45461_405][0].ready;
  if (D.45621_406 != 0)
    goto <bb 165>;
  else
    goto <bb 170>;
  # SUCC: 165 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 165 freq:86
  # PRED: 164 [50.0%]  (true,exec)
  D.45467_407 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 167>;
  else
    goto <bb 166>;
  # SUCC: 167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

  # BLOCK 166 freq:62
  # PRED: 165 [72.0%]  (false,exec)
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167 freq:86
  # PRED: 165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
  # iftmp.116_24 = PHI <"video"(165), "audio"(166)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45467_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);
  D.45519_410 = engine_38->rtp_session;
  D.45721_411 = engine_38->ice_in.ufrag;
  D.45769_412 = engine_38->ice_out.ufrag;
  D.45770_413 = engine_38->ice_out.pwd;
  D.45724_414 = engine_38->ice_in.pwd;
  D.45467_415 = smh_34(D)->session;
  D.45772_416 = switch_ice_direction (D.45467_415);
  if (D.45772_416 == 1)
    goto <bb 169>;
  else
    goto <bb 168>;
  # SUCC: 169 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

  # BLOCK 168 freq:62
  # PRED: 167 [72.0%]  (false,exec)
  # SUCC: 169 [100.0%]  (fallthru,exec)

  # BLOCK 169 freq:86
  # PRED: 167 [28.0%]  (true,exec) 168 [100.0%]  (fallthru,exec)
  # iftmp.117_25 = PHI <2(167), 6(168)>
  D.45776_419 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_410, D.45721_411, D.45769_412, D.45770_413, D.45724_414, 0, iftmp.117_25, D.45776_419);
  # SUCC: 170 [100.0%]  (fallthru,exec)

  # BLOCK 170 freq:346
  # PRED: 163 [50.0%]  (false,exec) 164 [50.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
  D.45519_420 = engine_38->rtp_session;
  if (D.45519_420 != 0B)
    goto <bb 171>;
  else
    goto <bb 191>;
  # SUCC: 171 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

  # BLOCK 171 freq:294
  # PRED: 170 [85.0%]  (true,exec)
  D.45467_421 = smh_34(D)->session;
  D.45468_422 = D.45467_421->channel;
  if (type_36(D) == 1)
    goto <bb 173>;
  else
    goto <bb 172>;
  # SUCC: 173 [28.0%]  (true,exec) 172 [72.0%]  (false,exec)

  # BLOCK 172 freq:211
  # PRED: 171 [72.0%]  (false,exec)
  # SUCC: 173 [100.0%]  (fallthru,exec)

  # BLOCK 173 freq:294
  # PRED: 171 [28.0%]  (true,exec) 172 [100.0%]  (fallthru,exec)
  # iftmp.118_26 = PHI <"rtcp_video_interval_msec"(171), "rtcp_audio_interval_msec"(172)>
  val_425 = switch_channel_get_variable_dup (D.45468_422, iftmp.118_26, 1, -1);
  # DEBUG val => val_425
  if (val_425 != 0B)
    goto <bb 178>;
  else
    goto <bb 174>;
  # SUCC: 178 [85.0%]  (true,exec) 174 [15.0%]  (false,exec)

  # BLOCK 174 freq:44
  # PRED: 173 [15.0%]  (false,exec)
  if (type_36(D) == 1)
    goto <bb 175>;
  else
    goto <bb 176>;
  # SUCC: 175 [28.0%]  (true,exec) 176 [72.0%]  (false,exec)

  # BLOCK 175 freq:12
  # PRED: 174 [28.0%]  (true,exec)
  D.45789_426 = smh_34(D)->mparams;
  val_427 = D.45789_426->rtcp_video_interval_msec;
  goto <bb 177>;
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 176 freq:32
  # PRED: 174 [72.0%]  (false,exec)
  D.45789_428 = smh_34(D)->mparams;
  val_429 = D.45789_428->rtcp_audio_interval_msec;
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 177 freq:44
  # PRED: 175 [100.0%]  (fallthru,exec) 176 [100.0%]  (fallthru,exec)
  # val_27 = PHI <val_427(175), val_429(176)>
  # DEBUG val => val_27
  if (val_27 != 0B)
    goto <bb 178>;
  else
    goto <bb 191>;
  # SUCC: 178 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

  # BLOCK 178 freq:287
  # PRED: 173 [85.0%]  (true,exec) 177 [85.0%]  (true,exec)
  # val_9 = PHI <val_425(173), val_27(177)>
  # DEBUG val => val_9
  D.45467_431 = smh_34(D)->session;
  D.45468_432 = D.45467_431->channel;
  if (type_36(D) == 1)
    goto <bb 180>;
  else
    goto <bb 179>;
  # SUCC: 180 [28.0%]  (true,exec) 179 [72.0%]  (false,exec)

  # BLOCK 179 freq:207
  # PRED: 178 [72.0%]  (false,exec)
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 180 freq:287
  # PRED: 178 [28.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
  # iftmp.120_28 = PHI <"rtp_remote_video_rtcp_port"(178), "rtp_remote_audio_rtcp_port"(179)>
  rport_435 = switch_channel_get_variable_dup (D.45468_432, iftmp.120_28, 1, -1);
  # DEBUG rport => rport_435
  remote_rtcp_port_436 = engine_38->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_436
  D.45795_437 = remote_rtcp_port_436 == 0;
  D.45796_438 = rport_435 != 0B;
  D.45797_439 = D.45795_437 && D.45796_438;
  if (D.45797_439 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;
  # SUCC: 181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

  # BLOCK 181 freq:83
  # PRED: 180 [29.0%]  (true,exec)
  # DEBUG __nptr => rport_435
  D.47862_654 = strtol (rport_435, 0B, 10);
  remote_rtcp_port_441 = (switch_port_t) D.47862_654;
  # DEBUG remote_rtcp_port => remote_rtcp_port_441
  # SUCC: 182 [100.0%]  (fallthru,exec)

  # BLOCK 182 freq:287
  # PRED: 180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_11 = PHI <remote_rtcp_port_436(180), remote_rtcp_port_441(181)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_11
  D.45801_442 = strcasecmp (val_9, "passthru");
  if (D.45801_442 == 0)
    goto <bb 183>;
  else
    goto <bb 186>;
  # SUCC: 183 [71.0%]  (true,exec) 186 [29.0%]  (false,exec)

  # BLOCK 183 freq:204
  # PRED: 182 [71.0%]  (true,exec)
  D.45467_443 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 185>;
  else
    goto <bb 184>;
  # SUCC: 185 [28.0%]  (true,exec) 184 [72.0%]  (false,exec)

  # BLOCK 184 freq:147
  # PRED: 183 [72.0%]  (false,exec)
  # SUCC: 185 [100.0%]  (fallthru,exec)

  # BLOCK 185 freq:204
  # PRED: 183 [28.0%]  (true,exec) 184 [100.0%]  (fallthru,exec)
  # iftmp.121_29 = PHI <"video"(183), "audio"(184)>
  D.45808_446 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45467_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45808_446);
  D.45519_447 = engine_38->rtp_session;
  D.45809_448 = engine_38->rtcp_mux;
  D.45810_449 = D.45809_448 > 0;
  switch_rtp_activate_rtcp (D.45519_447, -1, remote_rtcp_port_11, D.45810_449);
  goto <bb 191>;
  # SUCC: 191 [100.0%]  (fallthru,exec)

  # BLOCK 186 freq:83
  # PRED: 182 [29.0%]  (false,exec)
  # DEBUG __nptr => val_9
  interval_655 = strtol (val_9, 0B, 10);
  # DEBUG interval => NULL
  interval.122_451 = (unsigned int) interval_655;
  D.45813_452 = interval.122_451 + 4294967196;
  if (D.45813_452 > 499900)
    goto <bb 187>;
  else
    goto <bb 188>;
  # SUCC: 187 [29.0%]  (true,exec) 188 [71.0%]  (false,exec)

  # BLOCK 187 freq:24
  # PRED: 186 [29.0%]  (true,exec)
  D.45467_453 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45467_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);
  # DEBUG interval => 10000
  # SUCC: 188 [100.0%]  (fallthru,exec)

  # BLOCK 188 freq:83
  # PRED: 186 [71.0%]  (false,exec) 187 [100.0%]  (fallthru,exec)
  # interval_12 = PHI <interval_655(186), 10000(187)>
  # DEBUG interval => interval_12
  D.45467_455 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 190>;
  else
    goto <bb 189>;
  # SUCC: 190 [28.0%]  (true,exec) 189 [72.0%]  (false,exec)

  # BLOCK 189 freq:60
  # PRED: 188 [72.0%]  (false,exec)
  # SUCC: 190 [100.0%]  (fallthru,exec)

  # BLOCK 190 freq:83
  # PRED: 188 [28.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
  # iftmp.123_30 = PHI <"video"(188), "audio"(189)>
  D.45808_458 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45467_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45808_458);
  D.45519_459 = engine_38->rtp_session;
  D.45809_460 = engine_38->rtcp_mux;
  D.45810_461 = D.45809_460 > 0;
  switch_rtp_activate_rtcp (D.45519_459, interval_12, remote_rtcp_port_11, D.45810_461);
  # SUCC: 191 [100.0%]  (fallthru,exec)

  # BLOCK 191 freq:346
  # PRED: 170 [15.0%]  (false,exec) 177 [15.0%]  (false,exec) 185 [100.0%]  (fallthru,exec) 190 [100.0%]  (fallthru,exec)
  D.45464_462 = engine_38->ice_in.chosen[1];
  D.45639_463 = engine_38->ice_in.cands[D.45464_462][1].ready;
  if (D.45639_463 != 0)
    goto <bb 192>;
  else
    goto <bb 203>;
  # SUCC: 192 [61.0%]  (true,exec) 203 [39.0%]  (false,exec)

  # BLOCK 192 freq:211
  # PRED: 191 [61.0%]  (true,exec)
  D.45809_464 = engine_38->rtcp_mux;
  if (D.45809_464 > 0)
    goto <bb 193>;
  else
    goto <bb 198>;
  # SUCC: 193 [73.0%]  (true,exec) 198 [27.0%]  (false,exec)

  # BLOCK 193 freq:154
  # PRED: 192 [73.0%]  (true,exec)
  D.45464_465 = engine_38->ice_in.chosen[1];
  D.45692_466 = engine_38->ice_in.cands[D.45464_465][1].con_addr;
  D.45461_467 = engine_38->ice_in.chosen[0];
  D.45726_468 = engine_38->ice_in.cands[D.45461_467][0].con_addr;
  D.38904_469 = __builtin_strcmp (D.45692_466, D.45726_468);
  if (D.38904_469 == 0)
    goto <bb 194>;
  else
    goto <bb 198>;
  # SUCC: 194 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 194 freq:77
  # PRED: 193 [50.0%]  (true,exec)
  D.45464_470 = engine_38->ice_in.chosen[1];
  D.45693_471 = engine_38->ice_in.cands[D.45464_470][1].con_port;
  D.45461_472 = engine_38->ice_in.chosen[0];
  D.45729_473 = engine_38->ice_in.cands[D.45461_472][0].con_port;
  if (D.45693_471 == D.45729_473)
    goto <bb 195>;
  else
    goto <bb 198>;
  # SUCC: 195 [28.0%]  (true,exec) 198 [72.0%]  (false,exec)

  # BLOCK 195 freq:22
  # PRED: 194 [28.0%]  (true,exec)
  D.45467_474 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 197>;
  else
    goto <bb 196>;
  # SUCC: 197 [19.9%]  (true,exec) 196 [80.1%]  (false,exec)

  # BLOCK 196 freq:17
  # PRED: 195 [80.1%]  (false,exec)
  # SUCC: 197 [100.0%]  (fallthru,exec)

  # BLOCK 197 freq:22
  # PRED: 195 [19.9%]  (true,exec) 196 [100.0%]  (fallthru,exec)
  # iftmp.124_31 = PHI <"video"(195), "audio"(196)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45467_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);
  goto <bb 203>;
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 198 freq:189
  # PRED: 192 [27.0%]  (false,exec) 193 [50.0%]  (false,exec) 194 [72.0%]  (false,exec)
  D.45467_477 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 200>;
  else
    goto <bb 199>;
  # SUCC: 200 [28.0%]  (true,exec) 199 [72.0%]  (false,exec)

  # BLOCK 199 freq:136
  # PRED: 198 [72.0%]  (false,exec)
  # SUCC: 200 [100.0%]  (fallthru,exec)

  # BLOCK 200 freq:189
  # PRED: 198 [28.0%]  (true,exec) 199 [100.0%]  (fallthru,exec)
  # iftmp.125_32 = PHI <"video"(198), "audio"(199)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45467_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);
  D.45519_480 = engine_38->rtp_session;
  D.45721_481 = engine_38->ice_in.ufrag;
  D.45769_482 = engine_38->ice_out.ufrag;
  D.45770_483 = engine_38->ice_out.pwd;
  D.45724_484 = engine_38->ice_in.pwd;
  D.45467_485 = smh_34(D)->session;
  D.45836_486 = switch_ice_direction (D.45467_485);
  if (D.45836_486 == 1)
    goto <bb 202>;
  else
    goto <bb 201>;
  # SUCC: 202 [28.0%]  (true,exec) 201 [72.0%]  (false,exec)

  # BLOCK 201 freq:136
  # PRED: 200 [72.0%]  (false,exec)
  # SUCC: 202 [100.0%]  (fallthru,exec)

  # BLOCK 202 freq:189
  # PRED: 200 [28.0%]  (true,exec) 201 [100.0%]  (fallthru,exec)
  # iftmp.126_33 = PHI <2(200), 6(201)>
  D.45776_489 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_480, D.45721_481, D.45769_482, D.45770_483, D.45724_484, 1, iftmp.126_33, D.45776_489);
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 203 freq:940
  # PRED: 4 [39.0%]  (true,exec) 162 [61.0%]  (false,exec) 191 [39.0%]  (false,exec) 197 [100.0%]  (fallthru,exec) 202 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_set_ice (switch_core_session_set_ice)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_session_set_ice

;; 
7 basic blocks, 7 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  6 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_set_ice (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_session_set_ice";
  struct switch_media_handle_t * smh;
  struct switch_core_media_params_t * D.45846;
  struct switch_channel_t * D.45845;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2840, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.45845_3 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_3, 110, 1);
  D.45845_4 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_4, 106, 1);
  D.45845_5 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_5, 108, 1);
  D.45846_6 = smh_2->mparams;
  D.45846_6->rtcp_audio_interval_msec = "10000";
  D.45846_7 = smh_2->mparams;
  D.45846_7->rtcp_video_interval_msec = "10000";
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_toggle_hold (switch_core_media_toggle_hold)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 65 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 34 }
;; 8 succs { 9 34 }
;; 9 succs { 10 63 }
;; 10 succs { 12 11 }
;; 11 succs { 12 15 }
;; 12 succs { 14 13 }
;; 13 succs { 14 15 }
;; 14 succs { 63 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 63 }
;; 28 succs { 29 63 }
;; 29 succs { 31 30 }
;; 30 succs { 31 63 }
;; 31 succs { 32 33 }
;; 32 succs { 63 }
;; 33 succs { 63 }
;; 34 succs { 35 39 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 63 }
;; 40 succs { 41 44 }
;; 41 succs { 43 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 47 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 53 }
;; 48 succs { 49 50 }
;; 49 succs { 53 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 54 61 }
;; 54 succs { 56 55 }
;; 55 succs { 56 61 }
;; 56 succs { 57 61 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 8
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 11
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 12
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 16
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 23
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 29
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 31
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 32 predicted to even probabilities
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 35
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 40
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 41
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 42
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 45
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 48
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 49 predicted to even probabilities
Predictions for bb 50
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 51 predicted to even probabilities
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 54
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 55
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 56
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 57
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 58 predicted to even probabilities
Predictions for bb 59
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 60 predicted to even probabilities
Predictions for bb 61
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 62 predicted to even probabilities
Predictions for bb 63
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 64 predicted to even probabilities
1 edges in bb 65 predicted to even probabilities

;; Function switch_core_media_toggle_hold

;; 
66 basic blocks, 106 edges, last basic block 66.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  65 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [29.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec)
Successors:  9 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [29.0%]  (true,exec)
Successors:  10 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [29.0%]  (true,exec)
Successors:  12 [71.0%]  (true,exec) 11 [29.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [71.0%]  (true,exec) 11 [50.0%]  (true,exec)
Successors:  14 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (false,exec)
Successors:  14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 13 [50.0%]  (false,exec)
Successors:  16 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [69.8%]  (true,exec)
Successors:  17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [85.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [30.2%]  (false,exec) 16 [15.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
Successors:  19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [69.8%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [30.2%]  (false,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [69.8%]  (true,exec) 22 [30.2%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [69.8%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [30.2%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [50.0%]  (true,exec)
Successors:  24 [69.8%]  (true,exec) 25 [30.2%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [69.8%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [50.0%]  (false,exec) 23 [30.2%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [15.0%]  (true,exec) 27 [85.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [15.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [85.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [85.0%]  (true,exec) 63 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec)
Successors:  29 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec)
Successors:  31 [30.2%]  (true,exec) 30 [69.8%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [69.8%]  (false,exec)
Successors:  31 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  29 [30.2%]  (true,exec) 30 [50.0%]  (true,exec)
Successors:  32 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  31 [50.0%]  (false,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  7 [50.0%]  (false,exec) 8 [71.0%]  (false,exec)
Successors:  35 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [29.0%]  (true,exec)
Successors:  36 [69.8%]  (true,exec) 37 [30.2%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [69.8%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  35 [30.2%]  (false,exec) 36 [100.0%]  (fallthru,exec)
Successors:  38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [69.8%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  34 [71.0%]  (false,exec) 38 [100.0%]  (fallthru,exec) 37 [30.2%]  (false,exec)
Successors:  40 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [29.0%]  (true,exec)
Successors:  41 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [69.8%]  (true,exec)
Successors:  43 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [50.0%]  (false,exec)
Successors:  43 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [50.0%]  (true,exec) 42 [50.0%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  40 [30.2%]  (false,exec) 42 [50.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
Successors:  45 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [50.0%]  (true,exec)
Successors:  46 [69.8%]  (true,exec) 47 [30.2%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [69.8%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  44 [50.0%]  (false,exec) 45 [30.2%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [69.8%]  (true,exec) 53 [30.2%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [69.8%]  (true,exec)
Successors:  49 [50.0%]  (true,exec) 50 [50.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [50.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  48 [50.0%]  (false,exec)
Successors:  51 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [29.0%]  (true,exec)
Successors:  52 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [100.0%]  (fallthru,exec) 50 [71.0%]  (false,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  47 [30.2%]  (false,exec) 49 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec)
Successors:  54 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [29.0%]  (true,exec)
Successors:  56 [15.0%]  (true,exec) 55 [85.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [85.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [15.0%]  (true,exec) 55 [50.0%]  (true,exec)
Successors:  57 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [50.0%]  (true,exec)
Successors:  58 [69.8%]  (true,exec) 59 [30.2%]  (false,exec)

Basic block 58 (new, reachable)
Predecessors:  57 [69.8%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  57 [30.2%]  (false,exec) 58 [100.0%]  (fallthru,exec)
Successors:  60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [69.8%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  53 [71.0%]  (false,exec) 55 [50.0%]  (false,exec) 56 [50.0%]  (false,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
Successors:  62 [69.8%]  (true,exec) 63 [30.2%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [69.8%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec) 39 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 30 [50.0%]  (false,exec) 28 [50.0%]  (false,exec) 61 [30.2%]  (false,exec)
Successors:  64 [78.3%]  (true,exec) 65 [21.6%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [78.3%]  (true,exec)
Successors:  65 [100.0%]  (fallthru,exec)

Basic block 65 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 64 [100.0%]  (fallthru,exec) 63 [21.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_toggle_hold (struct switch_core_session_t * session, int sendonly)
{
  const char * val;
  const char * info;
  const char * msg;
  const char * stream;
  static const char __func__[30] = "switch_core_media_toggle_hold";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_toggle_hold";
  struct switch_channel_t * b_channel;
  struct switch_core_session_t * b_session;
  struct switch_media_handle_t * smh;
  int changed;
  uint32_t D.44454;
  int D.44453;
  int32_t D.44449;
  uint32_t D.44444;
  uint32_t D.44440;
  uint32_t D.44433;
  char * D.44432;
  uint32_t D.44431;
  uint32_t D.44429;
  uint32_t D.44422;
  uint32_t D.44415;
  char * D.44414;
  char * D.44412;
  int D.44409;
  uint32_t D.44408;
  int D.44404;
  uint32_t D.44393;
  struct switch_rtp_t * D.44390;
  struct switch_rtp_t * D.44387;
  const char * D.44384;
  switch_bool_t sendonly.87;
  uint32_t D.44380;
  uint32_t D.44378;
  uint32_t D.44376;
  uint32_t D.44370;
  uint32_t D.44368;
  struct switch_channel_t * D.44367;
  struct switch_core_session_t * b_session.86;
  switch_status_t D.44360;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG changed => 0
  b_session = 0B;
  # DEBUG b_channel => 0B
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 3872, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 65>;
  else
    goto <bb 5>;
  # SUCC: 65 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#9 => &smh_10->engines
  # DEBUG a_engine => D#9
  # DEBUG D#10 => &smh_10->engines[1]
  # DEBUG v_engine => D#10
  D.44360_14 = switch_core_session_perform_get_partner (session_9(D), &b_session, "src/switch_core_media.c", &__func__, 3882);
  if (D.44360_14 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 6 freq:2272
  # PRED: 5 [29.0%]  (true,exec)
  b_session.86_15 = b_session;
  b_channel_16 = switch_core_session_get_channel (b_session.86_15);
  # DEBUG b_channel => b_channel_16
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:7833
  # PRED: 5 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  # b_channel_3 = PHI <0B(5), b_channel_16(6)>
  # DEBUG b_channel => b_channel_3
  if (sendonly_17(D) != 0)
    goto <bb 8>;
  else
    goto <bb 34>;
  # SUCC: 8 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 8 freq:3916
  # PRED: 7 [50.0%]  (true,exec)
  D.44367_18 = session_9(D)->channel;
  D.44368_19 = switch_channel_test_flag (D.44367_18, 1);
  if (D.44368_19 != 0)
    goto <bb 9>;
  else
    goto <bb 34>;
  # SUCC: 9 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 9 freq:1136
  # PRED: 8 [29.0%]  (true,exec)
  D.44367_20 = session_9(D)->channel;
  D.44370_21 = switch_channel_test_flag (D.44367_20, 96);
  if (D.44370_21 == 0)
    goto <bb 10>;
  else
    goto <bb 63> (end);
  # SUCC: 10 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 10 freq:329
  # PRED: 9 [29.0%]  (true,exec)
  # DEBUG msg => "hold"
  D.44367_23 = session_9(D)->channel;
  D.44376_24 = switch_channel_test_flag (D.44367_23, 94);
  if (D.44376_24 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [71.0%]  (true,exec) 11 [29.0%]  (false,exec)

  # BLOCK 11 freq:96
  # PRED: 10 [29.0%]  (false,exec)
  D.44367_25 = session_9(D)->channel;
  D.44378_26 = switch_channel_test_flag (D.44367_25, 95);
  if (D.44378_26 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 12 freq:282
  # PRED: 10 [71.0%]  (true,exec) 11 [50.0%]  (true,exec)
  if (b_channel_3 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;
  # SUCC: 14 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

  # BLOCK 13 freq:239
  # PRED: 12 [85.0%]  (false,exec)
  D.44380_27 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44380_27 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 14 freq:162
  # PRED: 12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec)
  D.44367_28 = session_9(D)->channel;
  sendonly.87_29 = (switch_bool_t) sendonly_17(D);
  switch_channel_mark_hold (D.44367_28, sendonly.87_29);
  D.44367_30 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_30, 96, 1);
  # DEBUG changed => 0
  goto <bb 63> (end);
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:167
  # PRED: 11 [50.0%]  (false,exec) 13 [50.0%]  (false,exec)
  D.44367_32 = session_9(D)->channel;
  info_33 = switch_channel_get_variable_dup (D.44367_32, "presence_call_info", 1, -1);
  # DEBUG info => info_33
  if (info_33 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

  # BLOCK 16 freq:117
  # PRED: 15 [69.8%]  (true,exec)
  D.44384_34 = switch_stristr ("private", info_33);
  if (D.44384_34 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 17 freq:99
  # PRED: 16 [85.0%]  (true,exec)
  # DEBUG msg => "hold-private"
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:167
  # PRED: 15 [30.2%]  (false,exec) 16 [15.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
  # msg_5 = PHI <"hold"(15), "hold"(16), "hold-private"(17)>
  # DEBUG msg => msg_5
  D.44387_36 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_36 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 19 freq:117
  # PRED: 18 [69.8%]  (true,exec)
  D.44387_37 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_37, 35);
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:167
  # PRED: 18 [30.2%]  (false,exec) 19 [100.0%]  (fallthru,exec)
  D.44390_38 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_38 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [69.8%]  (true,exec) 22 [30.2%]  (false,exec)

  # BLOCK 21 freq:117
  # PRED: 20 [69.8%]  (true,exec)
  D.44390_39 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_39, 35);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:167
  # PRED: 20 [30.2%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  D.44367_40 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_40, 96, 1);
  D.44367_41 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_41, 1);
  D.44367_42 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_42, "unknown", msg_5, 0B, "src/switch_core_media.c", &__func__, 3918);
  # DEBUG changed => 1
  D.44393_44 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
  if (D.44393_44 != 0)
    goto <bb 23>;
  else
    goto <bb 25>;
  # SUCC: 23 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 23 freq:84
  # PRED: 22 [50.0%]  (true,exec)
  D.44387_45 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_45 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [69.8%]  (true,exec) 25 [30.2%]  (false,exec)

  # BLOCK 24 freq:58
  # PRED: 23 [69.8%]  (true,exec)
  D.44387_46 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  D.44393_47 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
  switch_rtp_set_max_missed_packets (D.44387_46, D.44393_47);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:167
  # PRED: 22 [50.0%]  (false,exec) 23 [30.2%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  D.44367_48 = session_9(D)->channel;
  stream_49 = switch_channel_get_hold_music (D.44367_48);
  # DEBUG stream => stream_49
  if (stream_49 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [15.0%]  (true,exec) 27 [85.0%]  (false,exec)

  # BLOCK 26 freq:25
  # PRED: 25 [15.0%]  (true,exec)
  # DEBUG stream => "local_stream://moh"
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:167
  # PRED: 25 [85.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  # stream_4 = PHI <stream_49(25), "local_stream://moh"(26)>
  # DEBUG stream => stream_4
  if (stream_4 != 0B)
    goto <bb 28>;
  else
    goto <bb 63> (end);
  # SUCC: 28 [85.0%]  (true,exec) 63 [15.0%]  (false,exec)

  # BLOCK 28 freq:142
  # PRED: 27 [85.0%]  (true,exec)
  D.44404_51 = strcasecmp (stream_4, "silence");
  if (D.44404_51 != 0)
    goto <bb 29>;
  else
    goto <bb 63> (end);
  # SUCC: 29 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

  # BLOCK 29 freq:71
  # PRED: 28 [50.0%]  (true,exec)
  if (b_channel_3 == 0B)
    goto <bb 31>;
  else
    goto <bb 30>;
  # SUCC: 31 [30.2%]  (true,exec) 30 [69.8%]  (false,exec)

  # BLOCK 30 freq:50
  # PRED: 29 [69.8%]  (false,exec)
  D.44408_52 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44408_52 == 0)
    goto <bb 31>;
  else
    goto <bb 63> (end);
  # SUCC: 31 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

  # BLOCK 31 freq:46
  # PRED: 29 [30.2%]  (true,exec) 30 [50.0%]  (true,exec)
  D.44409_53 = strcasecmp (stream_4, "indicate_hold");
  if (D.44409_53 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 32 freq:23
  # PRED: 31 [50.0%]  (true,exec)
  D.44367_54 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_54, 16, 1);
  D.44367_55 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_55, 10, 1);
  b_session.86_56 = b_session;
  D.44412_57 = switch_core_session_get_uuid (b_session.86_56);
  switch_ivr_hold_uuid (D.44412_57, 0B, 0);
  goto <bb 63> (end);
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:23
  # PRED: 31 [50.0%]  (false,exec)
  b_session.86_58 = b_session;
  D.44414_59 = switch_core_session_get_uuid (b_session.86_58);
  switch_ivr_broadcast (D.44414_59, stream_4, 274);
  switch_sleep (250000);
  goto <bb 63> (end);
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:6697
  # PRED: 7 [50.0%]  (false,exec) 8 [71.0%]  (false,exec)
  D.44367_60 = session_9(D)->channel;
  D.44415_61 = switch_channel_test_flag (D.44367_60, 97);
  if (D.44415_61 != 0)
    goto <bb 35>;
  else
    goto <bb 39>;
  # SUCC: 35 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

  # BLOCK 35 freq:1942
  # PRED: 34 [29.0%]  (true,exec)
  D.44367_62 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_62, 96, 1);
  D.44367_63 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_63, 1);
  D.44387_64 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_64 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [69.8%]  (true,exec) 37 [30.2%]  (false,exec)

  # BLOCK 36 freq:1356
  # PRED: 35 [69.8%]  (true,exec)
  D.44387_65 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_65, 35);
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:1942
  # PRED: 35 [30.2%]  (false,exec) 36 [100.0%]  (fallthru,exec)
  D.44390_66 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_66 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

  # BLOCK 38 freq:1356
  # PRED: 37 [69.8%]  (true,exec)
  D.44390_67 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_67, 35);
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:6697
  # PRED: 34 [71.0%]  (false,exec) 38 [100.0%]  (fallthru,exec) 37 [30.2%]  (false,exec)
  # changed_1 = PHI <0(34), 1(38), 1(37)>
  # DEBUG changed => changed_1
  D.44367_69 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_69, 97);
  D.44367_70 = session_9(D)->channel;
  D.44422_71 = switch_channel_test_flag (D.44367_70, 96);
  if (D.44422_71 != 0)
    goto <bb 40>;
  else
    goto <bb 63> (end);
  # SUCC: 40 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 40 freq:1942
  # PRED: 39 [29.0%]  (true,exec)
  switch_sleep (250000);
  if (b_channel_3 != 0B)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

  # BLOCK 41 freq:1356
  # PRED: 40 [69.8%]  (true,exec)
  D.44367_72 = session_9(D)->channel;
  D.44429_73 = switch_channel_test_flag (D.44367_72, 120);
  if (D.44429_73 != 0)
    goto <bb 43>;
  else
    goto <bb 42>;
  # SUCC: 43 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 42 freq:678
  # PRED: 41 [50.0%]  (false,exec)
  D.44431_74 = switch_channel_test_flag (b_channel_3, 120);
  if (D.44431_74 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 43 freq:1017
  # PRED: 41 [50.0%]  (true,exec) 42 [50.0%]  (true,exec)
  D.44432_75 = switch_core_session_get_uuid (session_9(D));
  switch_ivr_nomedia (D.44432_75, 1);
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:1942
  # PRED: 40 [30.2%]  (false,exec) 42 [50.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.44433_76 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
  if (D.44433_76 != 0)
    goto <bb 45>;
  else
    goto <bb 47>;
  # SUCC: 45 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

  # BLOCK 45 freq:971
  # PRED: 44 [50.0%]  (true,exec)
  D.44387_77 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_77 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [69.8%]  (true,exec) 47 [30.2%]  (false,exec)

  # BLOCK 46 freq:678
  # PRED: 45 [69.8%]  (true,exec)
  D.44387_78 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_reset_media_timer (D.44387_78);
  D.44387_79 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  D.44433_80 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
  switch_rtp_set_max_missed_packets (D.44387_79, D.44433_80);
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1942
  # PRED: 44 [50.0%]  (false,exec) 45 [30.2%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  if (b_channel_3 != 0B)
    goto <bb 48>;
  else
    goto <bb 53>;
  # SUCC: 48 [69.8%]  (true,exec) 53 [30.2%]  (false,exec)

  # BLOCK 48 freq:1356
  # PRED: 47 [69.8%]  (true,exec)
  D.44367_81 = session_9(D)->channel;
  D.44440_82 = switch_channel_test_flag (D.44367_81, 10);
  if (D.44440_82 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [50.0%]  (true,exec) 50 [50.0%]  (false,exec)

  # BLOCK 49 freq:678
  # PRED: 48 [50.0%]  (true,exec)
  b_session.86_83 = b_session;
  switch_ivr_unhold (b_session.86_83);
  D.44367_84 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_84, 16);
  D.44367_85 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_85, 10);
  goto <bb 53>;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:678
  # PRED: 48 [50.0%]  (false,exec)
  D.44444_86 = switch_channel_test_flag (b_channel_3, 21);
  if (D.44444_86 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

  # BLOCK 51 freq:197
  # PRED: 50 [29.0%]  (true,exec)
  switch_channel_set_flag_value (b_channel_3, 28, 1);
  switch_channel_set_flag_value (b_channel_3, 20, 1);
  # SUCC: 52 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:678
  # PRED: 51 [100.0%]  (fallthru,exec) 50 [71.0%]  (false,exec)
  switch_channel_wait_for_flag (b_channel_3, 21, 0, 5000, 0B);
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:1942
  # PRED: 47 [30.2%]  (false,exec) 49 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec)
  D.44449_87 = switch_media_handle_test_media_flag (smh_10, 10);
  if (D.44449_87 == 0)
    goto <bb 54>;
  else
    goto <bb 61>;
  # SUCC: 54 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

  # BLOCK 54 freq:563
  # PRED: 53 [29.0%]  (true,exec)
  D.44367_88 = session_9(D)->channel;
  val_89 = switch_channel_get_variable_dup (D.44367_88, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_89
  if (val_89 == 0B)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [15.0%]  (true,exec) 55 [85.0%]  (false,exec)

  # BLOCK 55 freq:479
  # PRED: 54 [85.0%]  (false,exec)
  D.44453_90 = switch_true (val_89);
  if (D.44453_90 == 0)
    goto <bb 56>;
  else
    goto <bb 61>;
  # SUCC: 56 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

  # BLOCK 56 freq:324
  # PRED: 54 [15.0%]  (true,exec) 55 [50.0%]  (true,exec)
  D.44367_91 = session_9(D)->channel;
  D.44454_92 = switch_channel_test_flag (D.44367_91, 106);
  if (D.44454_92 == 0)
    goto <bb 57>;
  else
    goto <bb 61>;
  # SUCC: 57 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

  # BLOCK 57 freq:162
  # PRED: 56 [50.0%]  (true,exec)
  D.44387_93 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_93 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;
  # SUCC: 58 [69.8%]  (true,exec) 59 [30.2%]  (false,exec)

  # BLOCK 58 freq:113
  # PRED: 57 [69.8%]  (true,exec)
  D.44387_94 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_94, 7);
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:162
  # PRED: 57 [30.2%]  (false,exec) 58 [100.0%]  (fallthru,exec)
  D.44390_95 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_95 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

  # BLOCK 60 freq:113
  # PRED: 59 [69.8%]  (true,exec)
  D.44390_96 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_96, 7);
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:1942
  # PRED: 53 [71.0%]  (false,exec) 55 [50.0%]  (false,exec) 56 [50.0%]  (false,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
  D.44367_97 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_97, 96);
  D.44367_98 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_98, 0);
  D.44367_99 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_99, "unknown", "unhold", 0B, "src/switch_core_media.c", &__func__, 4004);
  D.44387_100 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_clear_flag (D.44387_100, 35);
  D.44390_101 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_101 != 0B)
    goto <bb 62>;
  else
    goto <bb 63> (end);
  # SUCC: 62 [69.8%]  (true,exec) 63 [30.2%]  (false,exec)

  # BLOCK 62 freq:1356
  # PRED: 61 [69.8%]  (true,exec)
  D.44390_102 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_clear_flag (D.44390_102, 35);
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:7833
  # PRED: 14 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec) 39 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 30 [50.0%]  (false,exec) 28 [50.0%]  (false,exec) 61 [30.2%]  (false,exec)
  # changed_2 = PHI <0(14), 1(27), changed_1(39), 1(62), 0(9), 1(33), 1(32), 1(30), 1(28), 1(61)>
end:
  # DEBUG changed => changed_2
  b_session.86_104 = b_session;
  if (b_session.86_104 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [78.3%]  (true,exec) 65 [21.6%]  (false,exec)

  # BLOCK 64 freq:6137
  # PRED: 63 [78.3%]  (true,exec)
  b_session.86_105 = b_session;
  switch_core_session_rwunlock (b_session.86_105);
  # SUCC: 65 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 64 [100.0%]  (fallthru,exec) 63 [21.6%]  (false,exec)
  # changed_6 = PHI <0(4), changed_2(64), changed_2(63)>
  return changed_6;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_negotiate_sdp (switch_core_media_negotiate_sdp)

;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 419, latch 418
;;  depth 1, outer 0
;;  nodes: 419 418 321 323 324 397 416 417 318 319 316 317 322 320 314 310 312 313 311 299 309 308 306 307 304 305 300 301 302 303 274 298 277 297 295 296 294 293 292 289 290 291 287 288 286 285 284 283 281 282 278 279 280 275 276 263 271 273 264 272 270 269 268 267 266 265 261 262 258 260 180 259 187 193 195 197 196 194 188 189 190 183 181 182 191 192 185 186 184 178 176 177 173 174 172 149 171 153 156 159 160 161 165 170 152 151 150 166 167 168 162 163 164 157 158 154 155 138 139 148 140 147 141 145 146 142 143 144 137 136 102 103 104 95 98 100 101 96 99 97 94 91 92 93 89 90 255 257 222 256 224 248 254 252 253 251 249 243 244 246 247 245 238 239 240 241 242 231 236 237 234 235 233 232 229 230 228 225 226 227 223 213 215 220 221 212 214 211 208 209 210 205 206 207 203 204 201 202 198 199 200 218 219 216 217 250 315 414 415 412 413 408 409 410 411 406 407 405 400 404 401 402 403 398 399 395 396 394 329 393 392 374 391 376 379 389 388 390 386 387 384 385 383 380 381 382 377 378 375 372 373 371 341 370 343 351 358 359 360 364 369 348 357 356 354 355 353 352 344 342 345 346 347 365 366 367 361 362 363 349 350 330 331 340 332 339 333 337 338 334 335 336 327 325 326
;;
;; Loop 15
;;  header 298, latch 297
;;  depth 2, outer 4
;;  nodes: 298 297 295 296 294 293 292 289 290 291 287 288 286 285 284 283 281 282 278 279 280
;;
;; Loop 14
;;  header 273, latch 272
;;  depth 2, outer 4
;;  nodes: 273 272 270 269 268 267 266 265
;;
;; Loop 12
;;  header 260, latch 259
;;  depth 2, outer 4
;;  nodes: 260 259 187 193 195 197 258 255 257 222 256 224 248 254 252 253 251 249 243 244 246 247 245 238 239 240 241 242 231 236 237 234 235 233 232 229 230 228 225 226 227 223 213 215 220 221 212 214 211 208 209 210 205 206 207 203 204 201 202 198 199 200 196 194 188 189 190 183 181 182 218 219 216 217 250 191 192 185 186 184
;;
;; Loop 13
;;  header 257, latch 256
;;  depth 3, outer 12
;;  nodes: 257 256 224 248 254 255 250 253 251 252 249 243 244 246 247 245 238 239 240 241 242 231 236 237 234 235 233 232 229 230 228 225 226 227 223
;;
;; Loop 11
;;  header 172, latch 171
;;  depth 2, outer 4
;;  nodes: 172 171 153 156 159 160 161 165 170 152 151 150 166 167 168 162 163 164 157 158 154 155
;;
;; Loop 10
;;  header 148, latch 147
;;  depth 2, outer 4
;;  nodes: 148 147 141 145 146 142 143 144
;;
;; Loop 6
;;  header 405, latch 404
;;  depth 2, outer 4
;;  nodes: 405 404 401 402 403
;;
;; Loop 5
;;  header 394, latch 393
;;  depth 2, outer 4
;;  nodes: 394 393 392 374 391 376 379 389 388 390 386 387 384 385 383 380 381 382 377 378 375 372 373 371 341 370 343 351 358 359 360 364 369 348 357 356 354 355 353 352 344 342 345 346 347 365 366 367 361 362 363 349 350 330 331 340 332 339 333 337 338 334 335 336
;;
;; Loop 9
;;  header 392, latch 391
;;  depth 3, outer 5
;;  nodes: 392 391 376 379 389 388 390 386 387 384 385 383 380 381 382 377 378 375
;;
;; Loop 8
;;  header 371, latch 370
;;  depth 3, outer 5
;;  nodes: 371 370 343 351 358 359 360 364 369 348 357 356 354 355 353 352 344 342 345 346 347 365 366 367 361 362 363 349 350
;;
;; Loop 7
;;  header 340, latch 339
;;  depth 3, outer 5
;;  nodes: 340 339 333 337 338 334 335 336
;;
;; Loop 3
;;  header 64, latch 63
;;  depth 1, outer 0
;;  nodes: 64 63 48 50 52 56 58 60 61 62 55 54 53 51 49 47 44 45 46 59 57
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 19
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 15
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 423 5 }
;; 5 succs { 423 6 }
;; 6 succs { 7 8 }
;; 7 succs { 423 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 13 16 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 17 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 27 }
;; 23 succs { 27 24 }
;; 24 succs { 27 25 }
;; 25 succs { 27 26 }
;; 26 succs { 27 }
;; 27 succs { 28 34 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 37 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 43 }
;; 38 succs { 42 39 }
;; 39 succs { 40 43 }
;; 40 succs { 41 43 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 64 }
;; 44 succs { 47 45 }
;; 45 succs { 47 46 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 63 }
;; 49 succs { 50 51 }
;; 50 succs { 63 }
;; 51 succs { 52 53 }
;; 52 succs { 63 }
;; 53 succs { 54 57 }
;; 54 succs { 55 56 }
;; 55 succs { 63 }
;; 56 succs { 63 }
;; 57 succs { 58 59 }
;; 58 succs { 63 59 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 44 65 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 74 }
;; 68 succs { 70 69 }
;; 69 succs { 70 74 }
;; 70 succs { 71 74 }
;; 71 succs { 72 74 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 77 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 84 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 87 85 }
;; 85 succs { 87 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 419 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 94 }
;; 94 succs { 95 97 }
;; 95 succs { 96 102 }
;; 96 succs { 102 }
;; 97 succs { 98 100 }
;; 98 succs { 99 102 }
;; 99 succs { 102 }
;; 100 succs { 101 102 }
;; 101 succs { 102 }
;; 102 succs { 103 136 }
;; 103 succs { 104 136 }
;; 104 succs { 105 136 }
;; 105 succs { 420 106 }
;; 106 succs { 107 108 }
;; 107 succs { 420 }
;; 108 succs { 109 111 }
;; 109 succs { 110 111 }
;; 110 succs { 111 }
;; 111 succs { 112 115 }
;; 112 succs { 113 115 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { 122 117 }
;; 117 succs { 122 118 }
;; 118 succs { 122 119 }
;; 119 succs { 122 120 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 420 }
;; 123 succs { 124 420 }
;; 124 succs { 125 126 }
;; 125 succs { 420 }
;; 126 succs { 127 129 }
;; 127 succs { 128 129 }
;; 128 succs { 129 }
;; 129 succs { 130 133 }
;; 130 succs { 131 133 }
;; 131 succs { 132 133 }
;; 132 succs { 135 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 420 }
;; 136 succs { 137 323 }
;; 137 succs { 138 323 }
;; 138 succs { 139 149 }
;; 139 succs { 140 149 }
;; 140 succs { 148 }
;; 141 succs { 142 147 }
;; 142 succs { 145 143 }
;; 143 succs { 145 144 }
;; 144 succs { 145 }
;; 145 succs { 146 147 }
;; 146 succs { 147 }
;; 147 succs { 148 }
;; 148 succs { 141 149 }
;; 149 succs { 172 }
;; 150 succs { 151 154 }
;; 151 succs { 152 154 }
;; 152 succs { 153 171 }
;; 153 succs { 171 }
;; 154 succs { 155 157 }
;; 155 succs { 156 157 }
;; 156 succs { 171 }
;; 157 succs { 158 160 }
;; 158 succs { 159 160 }
;; 159 succs { 171 }
;; 160 succs { 161 171 }
;; 161 succs { 162 171 }
;; 162 succs { 165 163 }
;; 163 succs { 165 164 }
;; 164 succs { 165 }
;; 165 succs { 166 171 }
;; 166 succs { 167 170 }
;; 167 succs { 168 170 }
;; 168 succs { 169 170 }
;; 169 succs { 420 }
;; 170 succs { 171 }
;; 171 succs { 172 }
;; 172 succs { 150 173 }
;; 173 succs { 174 176 }
;; 174 succs { 175 176 }
;; 175 succs { 420 }
;; 176 succs { 177 178 }
;; 177 succs { 178 }
;; 178 succs { 179 180 }
;; 179 succs { 420 }
;; 180 succs { 260 }
;; 181 succs { 182 183 }
;; 182 succs { 183 }
;; 183 succs { 184 188 }
;; 184 succs { 186 185 }
;; 185 succs { 186 187 }
;; 186 succs { 187 }
;; 187 succs { 259 }
;; 188 succs { 189 194 }
;; 189 succs { 190 194 }
;; 190 succs { 191 194 }
;; 191 succs { 192 193 }
;; 192 succs { 193 }
;; 193 succs { 259 }
;; 194 succs { 195 196 }
;; 195 succs { 259 }
;; 196 succs { 197 198 }
;; 197 succs { 259 }
;; 198 succs { 199 201 }
;; 199 succs { 200 201 }
;; 200 succs { 201 }
;; 201 succs { 202 203 }
;; 202 succs { 203 }
;; 203 succs { 205 204 }
;; 204 succs { 205 }
;; 205 succs { 206 208 }
;; 206 succs { 207 208 }
;; 207 succs { 208 }
;; 208 succs { 211 209 }
;; 209 succs { 211 210 }
;; 210 succs { 211 }
;; 211 succs { 212 215 }
;; 212 succs { 222 213 }
;; 213 succs { 222 214 }
;; 214 succs { 222 }
;; 215 succs { 216 222 }
;; 216 succs { 217 218 }
;; 217 succs { 218 }
;; 218 succs { 219 220 }
;; 219 succs { 220 }
;; 220 succs { 221 222 }
;; 221 succs { 222 }
;; 222 succs { 257 }
;; 223 succs { 224 225 }
;; 224 succs { 256 }
;; 225 succs { 228 226 }
;; 226 succs { 228 227 }
;; 227 succs { 228 }
;; 228 succs { 230 229 }
;; 229 succs { 230 232 }
;; 230 succs { 231 232 }
;; 231 succs { 238 }
;; 232 succs { 233 235 }
;; 233 succs { 236 234 }
;; 234 succs { 236 235 }
;; 235 succs { 236 }
;; 236 succs { 237 238 }
;; 237 succs { 238 }
;; 238 succs { 239 243 }
;; 239 succs { 240 243 }
;; 240 succs { 241 243 }
;; 241 succs { 242 243 }
;; 242 succs { 243 }
;; 243 succs { 244 248 }
;; 244 succs { 245 248 }
;; 245 succs { 247 246 }
;; 246 succs { 247 248 }
;; 247 succs { 248 }
;; 248 succs { 249 256 }
;; 249 succs { 250 251 }
;; 250 succs { 255 }
;; 251 succs { 252 253 }
;; 252 succs { 254 253 }
;; 253 succs { 254 255 }
;; 254 succs { 256 }
;; 255 succs { 258 256 }
;; 256 succs { 257 }
;; 257 succs { 223 258 }
;; 258 succs { 261 259 }
;; 259 succs { 260 }
;; 260 succs { 181 261 }
;; 261 succs { 262 263 }
;; 262 succs { 263 }
;; 263 succs { 264 274 }
;; 264 succs { 273 }
;; 265 succs { 266 267 }
;; 266 succs { 267 }
;; 267 succs { 268 269 }
;; 268 succs { 269 }
;; 269 succs { 271 270 }
;; 270 succs { 271 272 }
;; 271 succs { 274 }
;; 272 succs { 273 }
;; 273 succs { 265 274 }
;; 274 succs { 275 299 }
;; 275 succs { 276 277 }
;; 276 succs { 277 }
;; 277 succs { 298 }
;; 278 succs { 279 281 }
;; 279 succs { 280 281 }
;; 280 succs { 281 }
;; 281 succs { 282 283 }
;; 282 succs { 283 }
;; 283 succs { 284 285 }
;; 284 succs { 285 }
;; 285 succs { 286 296 }
;; 286 succs { 287 288 }
;; 287 succs { 289 }
;; 288 succs { 289 }
;; 289 succs { 292 290 }
;; 290 succs { 292 291 }
;; 291 succs { 292 }
;; 292 succs { 293 295 }
;; 293 succs { 294 295 }
;; 294 succs { 297 }
;; 295 succs { 297 }
;; 296 succs { 297 }
;; 297 succs { 298 }
;; 298 succs { 278 299 }
;; 299 succs { 300 310 }
;; 300 succs { 301 305 }
;; 301 succs { 302 305 }
;; 302 succs { 303 305 }
;; 303 succs { 304 305 }
;; 304 succs { 306 305 }
;; 305 succs { 306 }
;; 306 succs { 307 308 }
;; 307 succs { 308 }
;; 308 succs { 309 310 }
;; 309 succs { 310 }
;; 310 succs { 311 314 }
;; 311 succs { 313 312 }
;; 312 succs { 313 314 }
;; 313 succs { 314 }
;; 314 succs { 315 320 }
;; 315 succs { 316 318 }
;; 316 succs { 317 418 }
;; 317 succs { 418 }
;; 318 succs { 319 418 }
;; 319 succs { 418 }
;; 320 succs { 321 322 }
;; 321 succs { 418 }
;; 322 succs { 418 }
;; 323 succs { 324 418 }
;; 324 succs { 325 418 }
;; 325 succs { 326 327 }
;; 326 succs { 327 }
;; 327 succs { 328 329 }
;; 328 succs { 420 }
;; 329 succs { 394 }
;; 330 succs { 331 341 }
;; 331 succs { 332 341 }
;; 332 succs { 340 }
;; 333 succs { 334 339 }
;; 334 succs { 337 335 }
;; 335 succs { 337 336 }
;; 336 succs { 337 }
;; 337 succs { 338 339 }
;; 338 succs { 339 }
;; 339 succs { 340 }
;; 340 succs { 333 341 }
;; 341 succs { 371 }
;; 342 succs { 343 344 }
;; 343 succs { 370 344 }
;; 344 succs { 345 352 }
;; 345 succs { 348 346 }
;; 346 succs { 348 347 }
;; 347 succs { 348 }
;; 348 succs { 349 370 }
;; 349 succs { 350 351 }
;; 350 succs { 351 }
;; 351 succs { 370 }
;; 352 succs { 353 359 }
;; 353 succs { 354 359 }
;; 354 succs { 355 356 }
;; 355 succs { 356 }
;; 356 succs { 357 359 }
;; 357 succs { 358 370 }
;; 358 succs { 370 }
;; 359 succs { 360 370 }
;; 360 succs { 361 370 }
;; 361 succs { 364 362 }
;; 362 succs { 364 363 }
;; 363 succs { 364 }
;; 364 succs { 365 370 }
;; 365 succs { 366 369 }
;; 366 succs { 367 369 }
;; 367 succs { 368 369 }
;; 368 succs { 420 }
;; 369 succs { 370 }
;; 370 succs { 371 }
;; 371 succs { 342 372 }
;; 372 succs { 373 374 }
;; 373 succs { 374 }
;; 374 succs { 392 }
;; 375 succs { 376 377 }
;; 376 succs { 391 }
;; 377 succs { 378 380 }
;; 378 succs { 379 380 }
;; 379 succs { 391 }
;; 380 succs { 383 381 }
;; 381 succs { 383 382 }
;; 382 succs { 383 }
;; 383 succs { 385 384 }
;; 384 succs { 385 387 }
;; 385 succs { 386 387 }
;; 386 succs { 388 }
;; 387 succs { 388 }
;; 388 succs { 389 391 }
;; 389 succs { 390 391 }
;; 390 succs { 391 }
;; 391 succs { 392 }
;; 392 succs { 375 393 }
;; 393 succs { 394 }
;; 394 succs { 330 395 }
;; 395 succs { 396 397 }
;; 396 succs { 397 }
;; 397 succs { 398 418 }
;; 398 succs { 399 400 }
;; 399 succs { 400 }
;; 400 succs { 405 }
;; 401 succs { 402 404 }
;; 402 succs { 403 404 }
;; 403 succs { 404 }
;; 404 succs { 405 }
;; 405 succs { 401 406 }
;; 406 succs { 407 408 }
;; 407 succs { 408 }
;; 408 succs { 409 413 }
;; 409 succs { 410 413 }
;; 410 succs { 411 413 }
;; 411 succs { 412 413 }
;; 412 succs { 414 413 }
;; 413 succs { 414 }
;; 414 succs { 415 416 }
;; 415 succs { 416 }
;; 416 succs { 417 418 }
;; 417 succs { 418 }
;; 418 succs { 419 }
;; 419 succs { 89 420 }
;; 420 succs { 421 422 }
;; 421 succs { 422 }
;; 422 succs { 423 }
;; 423 succs { 1 }
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 419, latch 418
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 15
;;  header 298, latch 297
;;  depth 2, outer 4
;;  nodes: 298 297 295 296 294 293 292 289 290 291 287 288 286 285 284 283 281 282 278 279 280
;;
;; Loop 14
;;  header 273, latch 272
;;  depth 2, outer 4
;;  nodes: 273 272 270 269 268 267 266 265
;;
;; Loop 12
;;  header 260, latch 259
;;  depth 2, outer 4
;;  nodes: 260 259 187 193 195 197 258 255 257 222 256 224 248 254 252 253 251 249 243 244 246 247 245 238 239 240 241 242 231 236 237 234 235 233 232 229 230 228 225 226 227 223 213 215 220 221 212 214 211 208 209 210 205 206 207 203 204 201 202 198 199 200 196 194 188 189 190 183 181 182 218 219 216 217 250 191 192 185 186 184
;;
;; Loop 13
;;  header 257, latch 256
;;  depth 3, outer 12
;;  nodes: 257 256 224 248 254 255 250 253 251 252 249 243 244 246 247 245 238 239 240 241 242 231 236 237 234 235 233 232 229 230 228 225 226 227 223
;;
;; Loop 11
;;  header 172, latch 171
;;  depth 2, outer 4
;;  nodes: 172 171 153 156 159 160 161 165 170 152 151 150 166 167 168 162 163 164 157 158 154 155
;;
;; Loop 10
;;  header 148, latch 147
;;  depth 2, outer 4
;;  nodes: 148 147 141 145 146 142 143 144
;;
;; Loop 6
;;  header 405, latch 404
;;  depth 2, outer 4
;;  nodes: 405 404 401 402 403
;;
;; Loop 5
;;  header 394, latch 393
;;  depth 2, outer 4
;;  nodes: 394 393 392 374 391 376 379 389 388 390 386 387 384 385 383 380 381 382 377 378 375 372 373 371 341 370 343 351 358 359 360 364 369 348 357 356 354 355 353 352 344 342 345 346 347 365 366 367 361 362 363 349 350 330 331 340 332 339 333 337 338 334 335 336
;;
;; Loop 9
;;  header 392, latch 391
;;  depth 3, outer 5
;;  nodes: 392 391 376 379 389 388 390 386 387 384 385 383 380 381 382 377 378 375
;;
;; Loop 8
;;  header 371, latch 370
;;  depth 3, outer 5
;;  nodes: 371 370 343 351 358 359 360 364 369 348 357 356 354 355 353 352 344 342 345 346 347 365 366 367 361 362 363 349 350
;;
;; Loop 7
;;  header 340, latch 339
;;  depth 3, outer 5
;;  nodes: 340 339 333 337 338 334 335 336
;;
;; Loop 3
;;  header 64, latch 63
;;  depth 1, outer 0
;;  nodes: 64 63 48 50 52 56 58 60 61 62 55 54 53 51 49 47 44 45 46 59 57
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 19
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 15
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = m_28)
(get_scalar_evolution 
  (scalar = m_28)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_28 = PHI <m_370(88), m_1094(418)>
)
  (init_cond = m_370))
(analyze_evolution_in_loop 
  (loop_phi_node = m_28 = PHI <m_370(88), m_1094(418)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 88 
  (scalar = m_28)
  (scalar_evolution = m_28))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = m_28)
(get_scalar_evolution 
  (scalar = m_28)
  (scalar_evolution = m_28))
(set_scalar_evolution 
  instantiated_below = 88 
  (scalar = m_28)
  (scalar_evolution = m_28))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_135 = PHI <0(277), j_808(297)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_135 = PHI <0(277), j_808(297)>
)
(add_to_evolution 
  (loop_nb = 15)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_15))
  (evolution_function = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = m_idx_107)
(get_scalar_evolution 
  (scalar = m_idx_107)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 15
  exit condition [0, + , 1](no_overflow) < m_idx_107
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_107 < 0
    # of iterations (unsigned int) m_idx_107, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = m_idx_107)
(get_scalar_evolution 
  (scalar = m_idx_107)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 15
  exit condition [0, + , 1](no_overflow) < m_idx_107
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_107 < 0
    # of iterations (unsigned int) m_idx_107, bounded by 2147483647
Statement (exit)if (j_135 < m_idx_107)
 is executed at most m_idx_107 < 0 ? 0 : (unsigned int) m_idx_107 (bounded by 2147483647) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.44655_804)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.44655_804)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45090_805)
(get_scalar_evolution 
  (scalar = D.45090_805)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45090_805)
  (scalar_evolution = D.44655_804 + 1))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.44655_804 + 1)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.44655_804)
(get_scalar_evolution 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.44655_804)
  (scalar_evolution = D.44655_804))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_808)
(get_scalar_evolution 
  (scalar = j_808)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_808)
  (scalar_evolution = {1, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {1, +, 1}_15)
  (res = {1, +, 1}_15))
Induction variable (int) 1 + 1 * iteration does not wrap in statement j_808 = j_135 + 1;
 in loop 15.
Statement j_808 = j_135 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45061_779)
(get_scalar_evolution 
  (scalar = D.45061_779)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45061_779)
  (scalar_evolution = D.45061_779))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.45061_779)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45061_779)
(get_scalar_evolution 
  (scalar = D.45061_779)
  (scalar_evolution = D.45061_779))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45061_779)
  (scalar_evolution = D.45061_779))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45062_780)
(get_scalar_evolution 
  (scalar = D.45062_780)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45062_780)
  (scalar_evolution = D.45062_780))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.45062_780)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45062_780)
(get_scalar_evolution 
  (scalar = D.45062_780)
  (scalar_evolution = D.45062_780))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45062_780)
  (scalar_evolution = D.45062_780))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45064_782)
(get_scalar_evolution 
  (scalar = D.45064_782)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45064_782)
  (scalar_evolution = D.45064_782))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.45064_782)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45064_782)
(get_scalar_evolution 
  (scalar = D.45064_782)
  (scalar_evolution = D.45064_782))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45064_782)
  (scalar_evolution = D.45064_782))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45035_748 = matches[j_135].map;
 in loop 15.
Statement D.45035_748 = matches[j_135].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45035_750 = matches[j_135].map;
 in loop 15.
Statement D.45035_750 = matches[j_135].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45035_752 = matches[j_135].map;
 in loop 15.
Statement D.45035_752 = matches[j_135].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45040_755 = matches[j_135].imp;
 in loop 15.
Statement D.45040_755 = matches[j_135].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45040_757 = matches[j_135].imp;
 in loop 15.
Statement D.45040_757 = matches[j_135].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45042_758)
(get_scalar_evolution 
  (scalar = D.45042_758)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45042_758)
  (scalar_evolution = D.45042_758))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.45042_758)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45042_758)
(get_scalar_evolution 
  (scalar = D.45042_758)
  (scalar_evolution = D.45042_758))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45042_758)
  (scalar_evolution = D.45042_758))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45043_759)
(get_scalar_evolution 
  (scalar = D.45043_759)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45043_759)
  (scalar_evolution = D.45043_759))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = D.45043_759)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = D.45043_759)
(get_scalar_evolution 
  (scalar = D.45043_759)
  (scalar_evolution = D.45043_759))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.45043_759)
  (scalar_evolution = D.45043_759))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement mimp_762 = matches[j_135].imp;
 in loop 15.
Statement mimp_762 = matches[j_135].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(instantiate_scev 
  (instantiate_below = 277)
  (evolution_loop = 15)
  (chrec = {0, +, 1}_15)
  (res = {0, +, 1}_15))
Induction variable (int) 0 + 1 * iteration does not wrap in statement mmap_763 = matches[j_135].map;
 in loop 15.
Statement mmap_763 = matches[j_135].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 15.
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = j_133)
(get_scalar_evolution 
  (scalar = j_133)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_133 = PHI <j_1118(264), j_737(272)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_133 = PHI <j_1118(264), j_737(272)>
)
(add_to_evolution 
  (loop_nb = 14)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_14))
  (evolution_function = {0, +, 1}_14))
(set_scalar_evolution 
  instantiated_below = 264 
  (scalar = j_133)
  (scalar_evolution = {0, +, 1}_14))
)
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = nm_idx_120)
(get_scalar_evolution 
  (scalar = nm_idx_120)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 14
  exit condition [0, + , 1](no_overflow) < nm_idx_120
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if nm_idx_120 < 0
    # of iterations (unsigned int) nm_idx_120, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = D.45026_736)
(get_scalar_evolution 
  (scalar = D.45026_736)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 264 
  (scalar = D.45026_736)
  (scalar_evolution = D.45026_736))
)
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = D.45026_736)
(get_scalar_evolution 
  (scalar = D.45026_736)
  (scalar_evolution = D.45026_736))
(set_scalar_evolution 
  instantiated_below = 264 
  (scalar = D.45026_736)
  (scalar_evolution = D.45026_736))
)
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = maxptime_39)
(get_scalar_evolution 
  (scalar = maxptime_39)
  (scalar_evolution = ))
)
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = 0)
(get_scalar_evolution 
  (scalar = 0)
  (scalar_evolution = 0))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = map_128)
(get_scalar_evolution 
  (scalar = map_128)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_128 = PHI <map_559(180), map_712(259)>
)
  (init_cond = map_559))
(analyze_evolution_in_loop 
  (loop_phi_node = map_128 = PHI <map_559(180), map_712(259)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 180 
  (scalar = map_128)
  (scalar_evolution = map_128))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = map_128)
(get_scalar_evolution 
  (scalar = map_128)
  (scalar_evolution = map_128))
(set_scalar_evolution 
  instantiated_below = 180 
  (scalar = map_128)
  (scalar_evolution = map_128))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = attr_31)
(get_scalar_evolution 
  (scalar = attr_31)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_31 = PHI <attr_507(149), attr_548(171)>
)
  (init_cond = attr_507))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_31 = PHI <attr_507(149), attr_548(171)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 149 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = attr_31)
(get_scalar_evolution 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
(set_scalar_evolution 
  instantiated_below = 149 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_30 = PHI <attr_500(140), attr_506(147)>
)
  (init_cond = attr_500))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_30 = PHI <attr_500(140), attr_506(147)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 140 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
(set_scalar_evolution 
  instantiated_below = 140 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
(set_scalar_evolution 
  instantiated_below = 140 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
(set_scalar_evolution 
  instantiated_below = 140 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_141 = PHI <0(400), j_1068(404)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_141 = PHI <0(400), j_1068(404)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = m_idx_112)
(get_scalar_evolution 
  (scalar = m_idx_112)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < m_idx_112
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_112 < 0
    # of iterations (unsigned int) m_idx_112, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = m_idx_112)
(get_scalar_evolution 
  (scalar = m_idx_112)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < m_idx_112
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_112 < 0
    # of iterations (unsigned int) m_idx_112, bounded by 2147483647
Statement (exit)if (j_141 < m_idx_112)
 is executed at most m_idx_112 < 0 ? 0 : (unsigned int) m_idx_112 (bounded by 2147483647) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement mimp_1050 = matches[j_141].imp;
 in loop 6.
Statement mimp_1050 = matches[j_141].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement map_1051 = matches[j_141].map;
 in loop 6.
Statement map_1051 = matches[j_141].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45294_1057)
(get_scalar_evolution 
  (scalar = D.45294_1057)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45294_1057)
  (scalar_evolution = D.45294_1057))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = D.45294_1057)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45294_1057)
(get_scalar_evolution 
  (scalar = D.45294_1057)
  (scalar_evolution = D.45294_1057))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45294_1057)
  (scalar_evolution = D.45294_1057))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45295_1058)
(get_scalar_evolution 
  (scalar = D.45295_1058)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45295_1058)
  (scalar_evolution = D.45295_1058))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = D.45295_1058)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45295_1058)
(get_scalar_evolution 
  (scalar = D.45295_1058)
  (scalar_evolution = D.45295_1058))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45295_1058)
  (scalar_evolution = D.45295_1058))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_1068)
(get_scalar_evolution 
  (scalar = j_1068)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_1068)
  (scalar_evolution = {1, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {1, +, 1}_6)
  (res = {1, +, 1}_6))
Induction variable (int) 1 + 1 * iteration does not wrap in statement j_1068 = j_141 + 1;
 in loop 6.
Statement j_1068 = j_141 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45275_1032 = matches[j_141].map;
 in loop 6.
Statement D.45275_1032 = matches[j_141].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45275_1034 = matches[j_141].map;
 in loop 6.
Statement D.45275_1034 = matches[j_141].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45275_1036 = matches[j_141].map;
 in loop 6.
Statement D.45275_1036 = matches[j_141].map;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45280_1039 = matches[j_141].imp;
 in loop 6.
Statement D.45280_1039 = matches[j_141].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = {0, +, 1}_6)
  (res = {0, +, 1}_6))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.45280_1041 = matches[j_141].imp;
 in loop 6.
Statement D.45280_1041 = matches[j_141].imp;
 is executed at most 29 (bounded by 29) + 1 times in loop 6.
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45282_1042)
(get_scalar_evolution 
  (scalar = D.45282_1042)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45282_1042)
  (scalar_evolution = D.45282_1042))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = D.45282_1042)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45282_1042)
(get_scalar_evolution 
  (scalar = D.45282_1042)
  (scalar_evolution = D.45282_1042))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45282_1042)
  (scalar_evolution = D.45282_1042))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45283_1043)
(get_scalar_evolution 
  (scalar = D.45283_1043)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45283_1043)
  (scalar_evolution = D.45283_1043))
)
(instantiate_scev 
  (instantiate_below = 400)
  (evolution_loop = 6)
  (chrec = D.45283_1043)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.45283_1043)
(get_scalar_evolution 
  (scalar = D.45283_1043)
  (scalar_evolution = D.45283_1043))
(set_scalar_evolution 
  instantiated_below = 400 
  (scalar = D.45283_1043)
  (scalar_evolution = D.45283_1043))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_136)
(get_scalar_evolution 
  (scalar = map_136)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_136 = PHI <map_884(329), map_1022(393)>
)
  (init_cond = map_884))
(analyze_evolution_in_loop 
  (loop_phi_node = map_136 = PHI <map_884(329), map_1022(393)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 329 
  (scalar = map_136)
  (scalar_evolution = map_136))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_136)
(get_scalar_evolution 
  (scalar = map_136)
  (scalar_evolution = map_136))
(set_scalar_evolution 
  instantiated_below = 329 
  (scalar = map_136)
  (scalar_evolution = map_136))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_139)
(get_scalar_evolution 
  (scalar = i_139)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_139 = PHI <0(374), i_1021(391)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_139 = PHI <0(374), i_1021(391)>
)
(add_to_evolution 
  (loop_nb = 9)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_9))
  (evolution_function = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = total_codecs_85)
(get_scalar_evolution 
  (scalar = total_codecs_85)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 9
  exit condition [0, + , 1](no_overflow) < total_codecs_85
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if total_codecs_85 < 0
    # of iterations (unsigned int) total_codecs_85, bounded by 2147483647
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_139)
(get_scalar_evolution 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = total_codecs_85)
(get_scalar_evolution 
  (scalar = total_codecs_85)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 9
  exit condition [0, + , 1](no_overflow) < total_codecs_85
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if total_codecs_85 < 0
    # of iterations (unsigned int) total_codecs_85, bounded by 2147483647
Statement (exit)if (i_139 < total_codecs_85)
 is executed at most total_codecs_85 < 0 ? 0 : (unsigned int) total_codecs_85 (bounded by 2147483647) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_1021)
(get_scalar_evolution 
  (scalar = i_1021)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_139)
(get_scalar_evolution 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = i_1021)
  (scalar_evolution = {1, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 374)
  (evolution_loop = 9)
  (chrec = {1, +, 1}_9)
  (res = {1, +, 1}_9))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_1021 = i_139 + 1;
 in loop 9.
Statement i_1021 = i_139 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = m_idx_110)
(get_scalar_evolution 
  (scalar = m_idx_110)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_idx_110 = PHI <m_idx_111(374), m_idx_109(391)>
)
  (init_cond = m_idx_111))
(analyze_evolution_in_loop 
  (loop_phi_node = m_idx_110 = PHI <m_idx_111(374), m_idx_109(391)>
)
(add_to_evolution 
  (loop_nb = 9)
  (chrec_before = m_idx_111)
  (to_add = 1)
  (res = {m_idx_111, +, 1}_9))
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
)
(instantiate_scev 
  (instantiate_below = 374)
  (evolution_loop = 9)
  (chrec = m_idx_110)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = m_idx_110)
(get_scalar_evolution 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = m_idx_110)
(get_scalar_evolution 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
)
(instantiate_scev 
  (instantiate_below = 374)
  (evolution_loop = 9)
  (chrec = m_idx_110)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = m_idx_110)
(get_scalar_evolution 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
(set_scalar_evolution 
  instantiated_below = 374 
  (scalar = m_idx_110)
  (scalar_evolution = m_idx_110))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = attr_33)
(get_scalar_evolution 
  (scalar = attr_33)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_33 = PHI <attr_894(341), attr_979(370)>
)
  (init_cond = attr_894))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_33 = PHI <attr_894(341), attr_979(370)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 341 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = attr_33)
(get_scalar_evolution 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
(set_scalar_evolution 
  instantiated_below = 341 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_32 = PHI <attr_887(332), attr_893(339)>
)
  (init_cond = attr_887))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_32 = PHI <attr_887(332), attr_893(339)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 332 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
(set_scalar_evolution 
  instantiated_below = 332 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
(set_scalar_evolution 
  instantiated_below = 332 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
(set_scalar_evolution 
  instantiated_below = 332 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_29 = PHI <attr_303(43), attr_334(63)>
)
  (init_cond = attr_303))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_29 = PHI <attr_303(43), attr_334(63)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47875_1465)
(get_scalar_evolution 
  (scalar = D.47875_1465)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47875_1465)
(get_scalar_evolution 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_1463)
(get_scalar_evolution 
  (scalar = pmap_1463)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
)
  (init_cond = pmap_1462))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_1463)
(get_scalar_evolution 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47872_1461)
(get_scalar_evolution 
  (scalar = D.47872_1461)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47872_1461)
(get_scalar_evolution 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1459)
(get_scalar_evolution 
  (scalar = pmap_1459)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
)
  (init_cond = pmap_1458))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1459)
(get_scalar_evolution 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 15
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 16 predicted to even probabilities
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 19
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 20
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 23
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 25
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 29
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 35
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 38
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 39
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 40
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 41
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 42 predicted to even probabilities
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 45
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 54
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 55 predicted to even probabilities
1 edges in bb 56 predicted to even probabilities
Predictions for bb 57
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
Predictions for bb 58
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 59
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 60 predicted to even probabilities
Predictions for bb 61
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 62 predicted to even probabilities
1 edges in bb 63 predicted to even probabilities
Predictions for bb 64
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
Predictions for bb 65
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 66 predicted to even probabilities
Predictions for bb 67
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 68
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 69
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 70
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 71
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 72
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 73 predicted to even probabilities
Predictions for bb 74
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 75
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 76 predicted to even probabilities
Predictions for bb 77
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 78 predicted to even probabilities
Predictions for bb 79
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 80
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 81 predicted to even probabilities
Predictions for bb 82
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 85
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 86
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 87 predicted to even probabilities
1 edges in bb 88 predicted to even probabilities
Predictions for bb 89
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 90 predicted to even probabilities
Predictions for bb 91
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 92
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 93 predicted to even probabilities
Predictions for bb 94
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 95
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 96 predicted to even probabilities
Predictions for bb 97
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 98
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 99 predicted to even probabilities
Predictions for bb 100
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 101 predicted to even probabilities
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 103
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 104
  DS theory heuristics (ignored): 0.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 2.0%
Predictions for bb 105
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 106
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 107 predicted to even probabilities
Predictions for bb 108
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 109
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 110 predicted to even probabilities
Predictions for bb 111
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 112
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 113
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 114 predicted to even probabilities
Predictions for bb 115
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 116
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 117
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 118
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 119
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 120
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 121 predicted to even probabilities
Predictions for bb 122
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 123
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 124
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 125 predicted to even probabilities
Predictions for bb 126
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 127
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 128 predicted to even probabilities
Predictions for bb 129
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 130
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 131
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 132 predicted to even probabilities
Predictions for bb 133
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 134 predicted to even probabilities
1 edges in bb 135 predicted to even probabilities
Predictions for bb 136
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 137
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 138
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 139
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 140 predicted to even probabilities
Predictions for bb 141
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 142
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 143
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 144 predicted to even probabilities
Predictions for bb 145
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 146 predicted to even probabilities
1 edges in bb 147 predicted to even probabilities
Predictions for bb 148
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 149 predicted to even probabilities
Predictions for bb 150
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 151
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 152
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 153 predicted to even probabilities
Predictions for bb 154
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 155
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 156 predicted to even probabilities
Predictions for bb 157
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 158
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 159 predicted to even probabilities
Predictions for bb 160
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
Predictions for bb 161
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 162
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 163
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 164 predicted to even probabilities
Predictions for bb 165
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 166
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 167
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 168
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
  loop exit heuristics: 2.0%
1 edges in bb 169 predicted to even probabilities
1 edges in bb 170 predicted to even probabilities
1 edges in bb 171 predicted to even probabilities
Predictions for bb 172
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 173
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 174
  DS theory heuristics (ignored): 0.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 2.0%
1 edges in bb 175 predicted to even probabilities
Predictions for bb 176
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 177 predicted to even probabilities
Predictions for bb 178
  DS theory heuristics (ignored): 0.1%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 2.0%
1 edges in bb 179 predicted to even probabilities
1 edges in bb 180 predicted to even probabilities
Predictions for bb 181
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 182 predicted to even probabilities
Predictions for bb 183
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
Predictions for bb 184
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 185
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 186 predicted to even probabilities
1 edges in bb 187 predicted to even probabilities
Predictions for bb 188
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 189
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 190
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
Predictions for bb 191
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 192 predicted to even probabilities
1 edges in bb 193 predicted to even probabilities
Predictions for bb 194
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
  continue heuristics: 50.0%
1 edges in bb 195 predicted to even probabilities
Predictions for bb 196
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 197 predicted to even probabilities
Predictions for bb 198
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 199
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 200 predicted to even probabilities
Predictions for bb 201
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 202 predicted to even probabilities
Predictions for bb 203
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 204 predicted to even probabilities
Predictions for bb 205
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 206
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 207 predicted to even probabilities
Predictions for bb 208
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 209
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 210 predicted to even probabilities
Predictions for bb 211
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 212
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 213
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 214 predicted to even probabilities
Predictions for bb 215
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 216
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 217 predicted to even probabilities
Predictions for bb 218
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 219 predicted to even probabilities
Predictions for bb 220
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 221 predicted to even probabilities
1 edges in bb 222 predicted to even probabilities
Predictions for bb 223
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 224 predicted to even probabilities
Predictions for bb 225
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 226
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 227 predicted to even probabilities
Predictions for bb 228
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 229
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 230
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 231 predicted to even probabilities
Predictions for bb 232
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 233
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 234
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 235 predicted to even probabilities
Predictions for bb 236
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 237 predicted to even probabilities
Predictions for bb 238
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 239
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 240
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 241
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 242 predicted to even probabilities
Predictions for bb 243
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 244
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 245
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 246
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 247 predicted to even probabilities
Predictions for bb 248
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 249
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 250 predicted to even probabilities
Predictions for bb 251
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 252
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
Predictions for bb 253
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
1 edges in bb 254 predicted to even probabilities
Predictions for bb 255
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
1 edges in bb 256 predicted to even probabilities
Predictions for bb 257
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
Predictions for bb 258
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
1 edges in bb 259 predicted to even probabilities
Predictions for bb 260
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 261
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 262 predicted to even probabilities
Predictions for bb 263
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 264 predicted to even probabilities
Predictions for bb 265
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 266 predicted to even probabilities
Predictions for bb 267
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 268 predicted to even probabilities
Predictions for bb 269
  DS theory heuristics (ignored): 1.2%
  first match heuristics: 3.0%
  combined heuristics: 3.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 3.0%
Predictions for bb 270
  DS theory heuristics (ignored): 3.0%
  first match heuristics: 3.0%
  combined heuristics: 3.0%
  loop exit heuristics: 3.0%
1 edges in bb 271 predicted to even probabilities
1 edges in bb 272 predicted to even probabilities
Predictions for bb 273
  DS theory heuristics (ignored): 97.0%
  first match heuristics: 97.0%
  combined heuristics: 97.0%
  loop exit heuristics: 97.0%
Predictions for bb 274
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 275
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 276 predicted to even probabilities
1 edges in bb 277 predicted to even probabilities
Predictions for bb 278
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 279
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 280 predicted to even probabilities
Predictions for bb 281
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 282 predicted to even probabilities
Predictions for bb 283
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 284 predicted to even probabilities
Predictions for bb 285
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 286
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 287 predicted to even probabilities
1 edges in bb 288 predicted to even probabilities
Predictions for bb 289
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 290
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 291 predicted to even probabilities
Predictions for bb 292
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 293
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 294 predicted to even probabilities
1 edges in bb 295 predicted to even probabilities
1 edges in bb 296 predicted to even probabilities
1 edges in bb 297 predicted to even probabilities
Predictions for bb 298
  DS theory heuristics (ignored): 92.5%
  first match heuristics: 96.8%
  combined heuristics: 96.8%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 96.8%
Predictions for bb 299
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 300
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 301
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 302
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 303
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 304
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 305 predicted to even probabilities
Predictions for bb 306
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 307 predicted to even probabilities
Predictions for bb 308
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 309 predicted to even probabilities
Predictions for bb 310
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 311
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 312
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 313 predicted to even probabilities
Predictions for bb 314
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 315
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 316
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 317 predicted to even probabilities
Predictions for bb 318
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 319 predicted to even probabilities
Predictions for bb 320
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 321 predicted to even probabilities
1 edges in bb 322 predicted to even probabilities
Predictions for bb 323
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 324
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 325
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 326 predicted to even probabilities
Predictions for bb 327
  DS theory heuristics (ignored): 0.1%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 2.0%
1 edges in bb 328 predicted to even probabilities
1 edges in bb 329 predicted to even probabilities
Predictions for bb 330
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 331
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 332 predicted to even probabilities
Predictions for bb 333
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 334
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 335
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 336 predicted to even probabilities
Predictions for bb 337
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 338 predicted to even probabilities
1 edges in bb 339 predicted to even probabilities
Predictions for bb 340
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 341 predicted to even probabilities
Predictions for bb 342
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 343
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 344
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 345
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 346
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 347 predicted to even probabilities
Predictions for bb 348
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 349
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 350 predicted to even probabilities
1 edges in bb 351 predicted to even probabilities
Predictions for bb 352
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 353
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 354
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 355 predicted to even probabilities
Predictions for bb 356
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 357
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 358 predicted to even probabilities
Predictions for bb 359
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 360
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 361
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 362
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 363 predicted to even probabilities
Predictions for bb 364
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 365
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 366
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 367
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 4.5%
  loop exit heuristics: 4.5%
  loop exit heuristics: 2.0%
1 edges in bb 368 predicted to even probabilities
1 edges in bb 369 predicted to even probabilities
1 edges in bb 370 predicted to even probabilities
Predictions for bb 371
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 372
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 373 predicted to even probabilities
1 edges in bb 374 predicted to even probabilities
Predictions for bb 375
  DS theory heuristics: 86.3%
  first match heuristics (ignored): 50.0%
  combined heuristics: 86.3%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 376 predicted to even probabilities
Predictions for bb 377
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 378
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 379 predicted to even probabilities
Predictions for bb 380
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 381
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 382 predicted to even probabilities
Predictions for bb 383
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 384
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 385
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 386 predicted to even probabilities
1 edges in bb 387 predicted to even probabilities
Predictions for bb 388
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 389
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 390 predicted to even probabilities
1 edges in bb 391 predicted to even probabilities
Predictions for bb 392
  DS theory heuristics (ignored): 91.0%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  loop exit heuristics: 91.0%
1 edges in bb 393 predicted to even probabilities
Predictions for bb 394
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 95.5%
Predictions for bb 395
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 396 predicted to even probabilities
Predictions for bb 397
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 398
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 399 predicted to even probabilities
1 edges in bb 400 predicted to even probabilities
Predictions for bb 401
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 402
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 403 predicted to even probabilities
1 edges in bb 404 predicted to even probabilities
Predictions for bb 405
  DS theory heuristics (ignored): 92.5%
  first match heuristics: 96.8%
  combined heuristics: 96.8%
  call heuristics (ignored): 29.0%
  guessed loop iterations heuristics: 96.8%
Predictions for bb 406
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 407 predicted to even probabilities
Predictions for bb 408
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 409
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 410
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 411
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 412
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 413 predicted to even probabilities
Predictions for bb 414
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 415 predicted to even probabilities
Predictions for bb 416
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 417 predicted to even probabilities
1 edges in bb 418 predicted to even probabilities
Predictions for bb 419
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 98.0%
Predictions for bb 420
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 421 predicted to even probabilities
1 edges in bb 422 predicted to even probabilities
1 edges in bb 423 predicted to even probabilities

;; Function switch_core_media_negotiate_sdp

;; 
424 basic blocks, 689 edges, last basic block 424.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  423 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  423 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.4%]  (false,exec)
Successors:  7 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [10.1%]  (true,exec)
Successors:  423 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [89.9%]  (false,exec)
Successors:  9 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [29.0%]  (true,exec)
Successors:  10 [69.8%]  (true,exec) 12 [30.2%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [69.8%]  (true,exec)
Successors:  11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  8 [71.0%]  (false,exec) 9 [30.2%]  (false,exec) 10 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  15 [95.5%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,dfs_back,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,dfs_back,exec)
Successors:  15 [95.5%]  (true,exec) 16 [4.5%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [95.5%]  (true,exec)
Successors:  13 [95.5%]  (true,exec) 16 [4.5%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [4.5%]  (false,exec) 14 [4.5%]  (false,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  19 [95.5%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,dfs_back,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
Successors:  19 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [95.5%]  (true,exec)
Successors:  17 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [4.5%]  (false,exec) 18 [4.5%]  (false,exec)
Successors:  21 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [85.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [15.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [85.0%]  (true,exec)
Successors:  27 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [50.0%]  (false,exec)
Successors:  27 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  27 [71.0%]  (true,exec) 26 [29.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [29.0%]  (false,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  22 [15.0%]  (false,exec) 23 [50.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [71.0%]  (true,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec)
Successors:  29 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec)
Successors:  30 [69.8%]  (true,exec) 31 [30.2%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [69.8%]  (true,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  28 [50.0%]  (false,exec) 29 [30.2%]  (false,exec) 30 [100.0%]  (fallthru,exec)
Successors:  32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [69.8%]  (true,exec) 34 [30.2%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [69.8%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  27 [15.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [69.8%]  (true,exec) 37 [30.2%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [69.8%]  (true,exec)
Successors:  36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [29.0%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  34 [30.2%]  (false,exec) 35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
Successors:  38 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [85.0%]  (true,exec)
Successors:  42 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [50.0%]  (false,exec)
Successors:  40 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [85.0%]  (true,exec)
Successors:  41 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [85.0%]  (true,exec)
Successors:  42 [50.0%]  (true,exec) 43 [50.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  38 [50.0%]  (true,exec) 41 [50.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  37 [15.0%]  (false,exec) 39 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 41 [50.0%]  (false,exec) 42 [100.0%]  (fallthru,exec)
Successors:  64 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  64 [91.0%]  (true,exec)
Successors:  47 [15.0%]  (true,exec) 45 [85.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [85.0%]  (false,exec)
Successors:  47 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (false,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  44 [15.0%]  (true,exec) 45 [50.0%]  (true,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [50.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  47 [50.0%]  (false,exec)
Successors:  50 [29.0%]  (true,exec) 51 [71.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [29.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  49 [71.0%]  (false,exec)
Successors:  52 [29.0%]  (true,exec) 53 [71.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [29.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  51 [71.0%]  (false,exec)
Successors:  54 [29.0%]  (true,exec) 57 [71.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [29.0%]  (true,exec)
Successors:  55 [50.0%]  (true,exec) 56 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  53 [71.0%]  (false,exec)
Successors:  58 [27.0%]  (true,exec) 59 [73.0%]  (false,exec)

Basic block 58 (new, reachable)
Predecessors:  57 [27.0%]  (true,exec)
Successors:  63 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  57 [73.0%]  (false,exec) 58 [50.0%]  (false,exec)
Successors:  60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [29.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  59 [71.0%]  (false,exec)
Successors:  62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [29.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  48 [100.0%]  (fallthru,exec) 50 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec) 56 [100.0%]  (fallthru,exec) 58 [50.0%]  (true,exec) 60 [100.0%]  (fallthru,exec) 61 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec) 55 [100.0%]  (fallthru,exec)
Successors:  64 [100.0%]  (fallthru,dfs_back,exec)

Basic block 64 (new, reachable)
Predecessors:  43 [100.0%]  (fallthru,exec) 63 [100.0%]  (fallthru,dfs_back,exec)
Successors:  44 [91.0%]  (true,exec) 65 [9.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [9.0%]  (false,exec)
Successors:  66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
Successors:  68 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [29.0%]  (true,exec)
Successors:  70 [30.2%]  (true,exec) 69 [69.8%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [69.8%]  (false,exec)
Successors:  70 [50.0%]  (true,exec) 74 [50.0%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  68 [30.2%]  (true,exec) 69 [50.0%]  (true,exec)
Successors:  71 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [29.0%]  (true,exec)
Successors:  72 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [29.0%]  (true,exec)
Successors:  73 [69.8%]  (true,exec) 74 [30.2%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [69.8%]  (true,exec)
Successors:  74 [100.0%]  (fallthru,exec)

Basic block 74 (new, reachable)
Predecessors:  67 [71.0%]  (false,exec) 69 [50.0%]  (false,exec) 70 [71.0%]  (false,exec) 71 [71.0%]  (false,exec) 72 [30.2%]  (false,exec) 73 [100.0%]  (fallthru,exec)
Successors:  75 [29.0%]  (true,exec) 77 [71.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [29.0%]  (true,exec)
Successors:  76 [69.8%]  (true,exec) 77 [30.2%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [69.8%]  (true,exec)
Successors:  77 [100.0%]  (fallthru,exec)

Basic block 77 (new, reachable)
Predecessors:  74 [71.0%]  (false,exec) 75 [30.2%]  (false,exec) 76 [100.0%]  (fallthru,exec)
Successors:  78 [69.8%]  (true,exec) 79 [30.2%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [69.8%]  (true,exec)
Successors:  79 [100.0%]  (fallthru,exec)

Basic block 79 (new, reachable)
Predecessors:  77 [30.2%]  (false,exec) 78 [100.0%]  (fallthru,exec)
Successors:  80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [50.0%]  (true,exec)
Successors:  81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 82 (new, reachable)
Predecessors:  79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
Successors:  83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [29.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [100.0%]  (fallthru,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
Successors:  87 [85.0%]  (true,exec) 85 [15.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [15.0%]  (false,exec)
Successors:  87 [93.3%]  (true,exec) 86 [6.7%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [6.7%]  (false,exec)
Successors:  87 [85.0%]  (true,exec) 88 [15.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  84 [85.0%]  (true,exec) 85 [93.3%]  (true,exec) 86 [85.0%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 88 (new, reachable)
Predecessors:  86 [15.0%]  (false,exec) 87 [100.0%]  (fallthru,exec)
Successors:  419 [100.0%]  (fallthru,exec)

Basic block 89 (new, reachable)
Predecessors:  419 [98.0%]  (true,exec)
Successors:  90 [13.7%]  (true,exec) 91 [86.3%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [13.7%]  (true,exec)
Successors:  91 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  89 [86.3%]  (false,exec) 90 [100.0%]  (fallthru,exec)
Successors:  92 [85.0%]  (true,exec) 94 [15.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [85.0%]  (true,exec)
Successors:  93 [29.0%]  (true,exec) 94 [71.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [29.0%]  (true,exec)
Successors:  94 [100.0%]  (fallthru,exec)

Basic block 94 (new, reachable)
Predecessors:  91 [15.0%]  (false,exec) 92 [71.0%]  (false,exec) 93 [100.0%]  (fallthru,exec)
Successors:  95 [50.0%]  (true,exec) 97 [50.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [50.0%]  (true,exec)
Successors:  96 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [28.0%]  (true,exec)
Successors:  102 [100.0%]  (fallthru,exec)

Basic block 97 (new, reachable)
Predecessors:  94 [50.0%]  (false,exec)
Successors:  98 [28.0%]  (true,exec) 100 [72.0%]  (false,exec)

Basic block 98 (new, reachable)
Predecessors:  97 [28.0%]  (true,exec)
Successors:  99 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [28.0%]  (true,exec)
Successors:  102 [100.0%]  (fallthru,exec)

Basic block 100 (new, reachable)
Predecessors:  97 [72.0%]  (false,exec)
Successors:  101 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [28.0%]  (true,exec)
Successors:  102 [100.0%]  (fallthru,exec)

Basic block 102 (new, reachable)
Predecessors:  95 [72.0%]  (false,exec) 98 [72.0%]  (false,exec) 100 [72.0%]  (false,exec) 101 [100.0%]  (fallthru,exec) 96 [100.0%]  (fallthru,exec) 99 [100.0%]  (fallthru,exec)
Successors:  103 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  102 [50.0%]  (true,exec)
Successors:  104 [28.0%]  (true,exec) 136 [72.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [28.0%]  (true,exec)
Successors:  105 [2.0%]  (true,exec) 136 [98.0%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [2.0%]  (true,exec)
Successors:  420 [71.0%]  (true,exec) 106 [29.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [29.0%]  (false,exec)
Successors:  107 [50.0%]  (true,exec) 108 [50.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [50.0%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 108 (new, reachable)
Predecessors:  106 [50.0%]  (false,exec)
Successors:  109 [50.0%]  (true,exec) 111 [50.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [50.0%]  (true,exec)
Successors:  110 [85.0%]  (true,exec) 111 [15.0%]  (false,exec)

Basic block 110 (new, reachable)
Predecessors:  109 [85.0%]  (true,exec)
Successors:  111 [100.0%]  (fallthru,exec)

Basic block 111 (new, reachable)
Predecessors:  108 [50.0%]  (false,exec) 109 [15.0%]  (false,exec) 110 [100.0%]  (fallthru,exec)
Successors:  112 [69.8%]  (true,exec) 115 [30.2%]  (false,exec)

Basic block 112 (new, reachable)
Predecessors:  111 [69.8%]  (true,exec)
Successors:  113 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  112 [50.0%]  (true,exec)
Successors:  114 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [50.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 115 (new, reachable)
Predecessors:  111 [30.2%]  (false,exec) 112 [50.0%]  (false,exec) 113 [50.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
Successors:  116 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [28.0%]  (true,exec)
Successors:  122 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

Basic block 117 (new, reachable)
Predecessors:  115 [72.0%]  (false,exec) 116 [50.0%]  (false,exec)
Successors:  122 [71.0%]  (true,exec) 118 [29.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [29.0%]  (false,exec)
Successors:  122 [71.0%]  (true,exec) 119 [29.0%]  (false,exec)

Basic block 119 (new, reachable)
Predecessors:  118 [29.0%]  (false,exec)
Successors:  122 [71.0%]  (true,exec) 120 [29.0%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [29.0%]  (false,exec)
Successors:  121 [50.0%]  (true,exec) 122 [50.0%]  (false,exec)

Basic block 121 (new)
Predecessors:  120 [50.0%]  (true,exec)
Successors:  122 [100.0%]  (fallthru)

Basic block 122 (new, reachable)
Predecessors:  120 [50.0%]  (false,exec) 117 [71.0%]  (true,exec) 116 [50.0%]  (true,exec) 121 [100.0%]  (fallthru) 119 [71.0%]  (true,exec) 118 [71.0%]  (true,exec)
Successors:  123 [29.0%]  (true,exec) 420 [71.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  122 [29.0%]  (true,exec)
Successors:  124 [29.0%]  (true,exec) 420 [71.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [29.0%]  (true,exec)
Successors:  125 [50.0%]  (true,exec) 126 [50.0%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [50.0%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  124 [50.0%]  (false,exec)
Successors:  127 [29.0%]  (true,exec) 129 [71.0%]  (false,exec)

Basic block 127 (new, reachable)
Predecessors:  126 [29.0%]  (true,exec)
Successors:  128 [29.0%]  (true,exec) 129 [71.0%]  (false,exec)

Basic block 128 (new, reachable)
Predecessors:  127 [29.0%]  (true,exec)
Successors:  129 [100.0%]  (fallthru,exec)

Basic block 129 (new, reachable)
Predecessors:  126 [71.0%]  (false,exec) 127 [71.0%]  (false,exec) 128 [100.0%]  (fallthru,exec)
Successors:  130 [71.0%]  (true,exec) 133 [29.0%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  129 [71.0%]  (true,exec)
Successors:  131 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

Basic block 131 (new, reachable)
Predecessors:  130 [50.0%]  (true,exec)
Successors:  132 [13.7%]  (true,exec) 133 [86.3%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [13.7%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 133 (new, reachable)
Predecessors:  129 [29.0%]  (false,exec) 130 [50.0%]  (false,exec) 131 [86.3%]  (false,exec)
Successors:  134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 135 (new, reachable)
Predecessors:  132 [100.0%]  (fallthru,exec) 133 [71.0%]  (false,exec) 134 [100.0%]  (fallthru,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 136 (new, reachable)
Predecessors:  102 [50.0%]  (false,exec) 103 [72.0%]  (false,exec) 104 [98.0%]  (false,exec)
Successors:  137 [28.0%]  (true,exec) 323 [72.0%]  (false,exec)

Basic block 137 (new, reachable)
Predecessors:  136 [28.0%]  (true,exec)
Successors:  138 [29.0%]  (true,exec) 323 [71.0%]  (false,exec)

Basic block 138 (new, reachable)
Predecessors:  137 [29.0%]  (true,exec)
Successors:  139 [29.0%]  (true,exec) 149 [71.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [29.0%]  (true,exec)
Successors:  140 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

Basic block 140 (new, reachable)
Predecessors:  139 [50.0%]  (true,exec)
Successors:  148 [100.0%]  (fallthru,exec)

Basic block 141 (new, reachable)
Predecessors:  148 [91.0%]  (true,exec)
Successors:  142 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [50.0%]  (true,exec)
Successors:  145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

Basic block 143 (new, reachable)
Predecessors:  142 [85.0%]  (false,exec)
Successors:  145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

Basic block 144 (new, reachable)
Predecessors:  143 [50.0%]  (false,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
Successors:  146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 146 (new, reachable)
Predecessors:  145 [50.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 147 (new, reachable)
Predecessors:  141 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
Successors:  148 [100.0%]  (fallthru,dfs_back,exec)

Basic block 148 (new, reachable)
Predecessors:  140 [100.0%]  (fallthru,exec) 147 [100.0%]  (fallthru,dfs_back,exec)
Successors:  141 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  138 [71.0%]  (false,exec) 139 [50.0%]  (false,exec) 148 [9.0%]  (false,exec)
Successors:  172 [100.0%]  (fallthru,exec)

Basic block 150 (new, reachable)
Predecessors:  172 [95.5%]  (true,exec)
Successors:  151 [50.0%]  (true,exec) 154 [50.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [50.0%]  (true,exec)
Successors:  152 [69.8%]  (true,exec) 154 [30.2%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [69.8%]  (true,exec)
Successors:  153 [15.0%]  (true,exec) 171 [85.0%]  (false,exec)

Basic block 153 (new, reachable)
Predecessors:  152 [15.0%]  (true,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 154 (new, reachable)
Predecessors:  150 [50.0%]  (false,exec) 151 [30.2%]  (false,exec)
Successors:  155 [50.0%]  (true,exec) 157 [50.0%]  (false,exec)

Basic block 155 (new, reachable)
Predecessors:  154 [50.0%]  (true,exec)
Successors:  156 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

Basic block 156 (new, reachable)
Predecessors:  155 [69.8%]  (true,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 157 (new, reachable)
Predecessors:  154 [50.0%]  (false,exec) 155 [30.2%]  (false,exec)
Successors:  158 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [50.0%]  (true,exec)
Successors:  159 [69.8%]  (true,exec) 160 [30.2%]  (false,exec)

Basic block 159 (new, reachable)
Predecessors:  158 [69.8%]  (true,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 160 (new, reachable)
Predecessors:  157 [50.0%]  (false,exec) 158 [30.2%]  (false,exec)
Successors:  161 [27.0%]  (true,exec) 171 [73.0%]  (false,exec)

Basic block 161 (new, reachable)
Predecessors:  160 [27.0%]  (true,exec)
Successors:  162 [50.0%]  (true,exec) 171 [50.0%]  (false,exec)

Basic block 162 (new, reachable)
Predecessors:  161 [50.0%]  (true,exec)
Successors:  165 [15.0%]  (true,exec) 163 [85.0%]  (false,exec)

Basic block 163 (new, reachable)
Predecessors:  162 [85.0%]  (false,exec)
Successors:  165 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

Basic block 164 (new, reachable)
Predecessors:  163 [50.0%]  (false,exec)
Successors:  165 [100.0%]  (fallthru,exec)

Basic block 165 (new, reachable)
Predecessors:  162 [15.0%]  (true,exec) 163 [50.0%]  (true,exec) 164 [100.0%]  (fallthru,exec)
Successors:  166 [50.0%]  (true,exec) 171 [50.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  165 [50.0%]  (true,exec)
Successors:  167 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 167 (new, reachable)
Predecessors:  166 [50.0%]  (true,exec)
Successors:  168 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 168 (new, reachable)
Predecessors:  167 [50.0%]  (true,exec)
Successors:  169 [4.5%]  (true,exec) 170 [95.5%]  (false,exec)

Basic block 169 (new, reachable)
Predecessors:  168 [4.5%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 170 (new, reachable)
Predecessors:  166 [50.0%]  (false,exec) 167 [50.0%]  (false,exec) 168 [95.5%]  (false,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 171 (new, reachable)
Predecessors:  153 [100.0%]  (fallthru,exec) 156 [100.0%]  (fallthru,exec) 159 [100.0%]  (fallthru,exec) 160 [73.0%]  (false,exec) 161 [50.0%]  (false,exec) 165 [50.0%]  (false,exec) 170 [100.0%]  (fallthru,exec) 152 [85.0%]  (false,exec)
Successors:  172 [100.0%]  (fallthru,dfs_back,exec)

Basic block 172 (new, reachable)
Predecessors:  149 [100.0%]  (fallthru,exec) 171 [100.0%]  (fallthru,dfs_back,exec)
Successors:  150 [95.5%]  (true,exec) 173 [4.5%]  (false,exec)

Basic block 173 (new, reachable)
Predecessors:  172 [4.5%]  (false,exec)
Successors:  174 [50.0%]  (true,exec) 176 [50.0%]  (false,exec)

Basic block 174 (new, reachable)
Predecessors:  173 [50.0%]  (true,exec)
Successors:  175 [2.0%]  (true,exec) 176 [98.0%]  (false,exec)

Basic block 175 (new, reachable)
Predecessors:  174 [2.0%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 176 (new, reachable)
Predecessors:  173 [50.0%]  (false,exec) 174 [98.0%]  (false,exec)
Successors:  177 [85.0%]  (true,exec) 178 [15.0%]  (false,exec)

Basic block 177 (new, reachable)
Predecessors:  176 [85.0%]  (true,exec)
Successors:  178 [100.0%]  (fallthru,exec)

Basic block 178 (new, reachable)
Predecessors:  176 [15.0%]  (false,exec) 177 [100.0%]  (fallthru,exec)
Successors:  179 [2.0%]  (true,exec) 180 [98.0%]  (false,exec)

Basic block 179 (new, reachable)
Predecessors:  178 [2.0%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 180 (new, reachable)
Predecessors:  178 [98.0%]  (false,exec)
Successors:  260 [100.0%]  (fallthru,exec)

Basic block 181 (new, reachable)
Predecessors:  260 [95.5%]  (true,exec)
Successors:  182 [15.0%]  (true,exec) 183 [85.0%]  (false,exec)

Basic block 182 (new, reachable)
Predecessors:  181 [15.0%]  (true,exec)
Successors:  183 [100.0%]  (fallthru,exec)

Basic block 183 (new, reachable)
Predecessors:  181 [85.0%]  (false,exec) 182 [100.0%]  (fallthru,exec)
Successors:  184 [71.0%]  (true,exec) 188 [29.0%]  (false,exec)

Basic block 184 (new, reachable)
Predecessors:  183 [71.0%]  (true,exec)
Successors:  186 [29.0%]  (true,exec) 185 [71.0%]  (false,exec)

Basic block 185 (new, reachable)
Predecessors:  184 [71.0%]  (false,exec)
Successors:  186 [28.0%]  (true,exec) 187 [72.0%]  (false,exec)

Basic block 186 (new, reachable)
Predecessors:  184 [29.0%]  (true,exec) 185 [28.0%]  (true,exec)
Successors:  187 [100.0%]  (fallthru,exec)

Basic block 187 (new, reachable)
Predecessors:  185 [72.0%]  (false,exec) 186 [100.0%]  (fallthru,exec)
Successors:  259 [100.0%]  (fallthru,exec)

Basic block 188 (new, reachable)
Predecessors:  183 [29.0%]  (false,exec)
Successors:  189 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

Basic block 189 (new, reachable)
Predecessors:  188 [50.0%]  (true,exec)
Successors:  190 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

Basic block 190 (new, reachable)
Predecessors:  189 [50.0%]  (true,exec)
Successors:  191 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

Basic block 191 (new, reachable)
Predecessors:  190 [50.0%]  (true,exec)
Successors:  192 [69.8%]  (true,exec) 193 [30.2%]  (false,exec)

Basic block 192 (new, reachable)
Predecessors:  191 [69.8%]  (true,exec)
Successors:  193 [100.0%]  (fallthru,exec)

Basic block 193 (new, reachable)
Predecessors:  191 [30.2%]  (false,exec) 192 [100.0%]  (fallthru,exec)
Successors:  259 [100.0%]  (fallthru,exec)

Basic block 194 (new, reachable)
Predecessors:  188 [50.0%]  (false,exec) 189 [50.0%]  (false,exec) 190 [50.0%]  (false,exec)
Successors:  195 [27.0%]  (true,exec) 196 [73.0%]  (false,exec)

Basic block 195 (new, reachable)
Predecessors:  194 [27.0%]  (true,exec)
Successors:  259 [100.0%]  (fallthru,exec)

Basic block 196 (new, reachable)
Predecessors:  194 [73.0%]  (false,exec)
Successors:  197 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 197 (new, reachable)
Predecessors:  196 [50.0%]  (true,exec)
Successors:  259 [100.0%]  (fallthru,exec)

Basic block 198 (new, reachable)
Predecessors:  196 [50.0%]  (false,exec)
Successors:  199 [50.0%]  (true,exec) 201 [50.0%]  (false,exec)

Basic block 199 (new, reachable)
Predecessors:  198 [50.0%]  (true,exec)
Successors:  200 [50.0%]  (true,exec) 201 [50.0%]  (false,exec)

Basic block 200 (new, reachable)
Predecessors:  199 [50.0%]  (true,exec)
Successors:  201 [100.0%]  (fallthru,exec)

Basic block 201 (new, reachable)
Predecessors:  198 [50.0%]  (false,exec) 199 [50.0%]  (false,exec) 200 [100.0%]  (fallthru,exec)
Successors:  202 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

Basic block 202 (new, reachable)
Predecessors:  201 [29.0%]  (true,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 203 (new, reachable)
Predecessors:  201 [71.0%]  (false,exec) 202 [100.0%]  (fallthru,exec)
Successors:  205 [50.0%]  (false,exec) 204 [50.0%]  (true,exec)

Basic block 204 (new, reachable)
Predecessors:  203 [50.0%]  (true,exec)
Successors:  205 [100.0%]  (fallthru,exec)

Basic block 205 (new, reachable)
Predecessors:  203 [50.0%]  (false,exec) 204 [100.0%]  (fallthru,exec)
Successors:  206 [50.0%]  (true,exec) 208 [50.0%]  (false,exec)

Basic block 206 (new, reachable)
Predecessors:  205 [50.0%]  (true,exec)
Successors:  207 [50.0%]  (true,exec) 208 [50.0%]  (false,exec)

Basic block 207 (new, reachable)
Predecessors:  206 [50.0%]  (true,exec)
Successors:  208 [100.0%]  (fallthru,exec)

Basic block 208 (new, reachable)
Predecessors:  205 [50.0%]  (false,exec) 206 [50.0%]  (false,exec) 207 [100.0%]  (fallthru,exec)
Successors:  211 [15.0%]  (true,exec) 209 [85.0%]  (false,exec)

Basic block 209 (new, reachable)
Predecessors:  208 [85.0%]  (false,exec)
Successors:  211 [50.0%]  (true,exec) 210 [50.0%]  (false,exec)

Basic block 210 (new, reachable)
Predecessors:  209 [50.0%]  (false,exec)
Successors:  211 [100.0%]  (fallthru,exec)

Basic block 211 (new, reachable)
Predecessors:  208 [15.0%]  (true,exec) 209 [50.0%]  (true,exec) 210 [100.0%]  (fallthru,exec)
Successors:  212 [71.0%]  (true,exec) 215 [29.0%]  (false,exec)

Basic block 212 (new, reachable)
Predecessors:  211 [71.0%]  (true,exec)
Successors:  222 [50.0%]  (true,exec) 213 [50.0%]  (false,exec)

Basic block 213 (new, reachable)
Predecessors:  212 [50.0%]  (false,exec)
Successors:  222 [50.0%]  (true,exec) 214 [50.0%]  (false,exec)

Basic block 214 (new, reachable)
Predecessors:  213 [50.0%]  (false,exec)
Successors:  222 [100.0%]  (fallthru,exec)

Basic block 215 (new, reachable)
Predecessors:  211 [29.0%]  (false,exec)
Successors:  216 [50.0%]  (true,exec) 222 [50.0%]  (false,exec)

Basic block 216 (new, reachable)
Predecessors:  215 [50.0%]  (true,exec)
Successors:  217 [50.0%]  (true,exec) 218 [50.0%]  (false,exec)

Basic block 217 (new, reachable)
Predecessors:  216 [50.0%]  (true,exec)
Successors:  218 [100.0%]  (fallthru,exec)

Basic block 218 (new, reachable)
Predecessors:  216 [50.0%]  (false,exec) 217 [100.0%]  (fallthru,exec)
Successors:  219 [50.0%]  (true,exec) 220 [50.0%]  (false,exec)

Basic block 219 (new, reachable)
Predecessors:  218 [50.0%]  (true,exec)
Successors:  220 [100.0%]  (fallthru,exec)

Basic block 220 (new, reachable)
Predecessors:  218 [50.0%]  (false,exec) 219 [100.0%]  (fallthru,exec)
Successors:  221 [50.0%]  (true,exec) 222 [50.0%]  (false,exec)

Basic block 221 (new, reachable)
Predecessors:  220 [50.0%]  (true,exec)
Successors:  222 [100.0%]  (fallthru,exec)

Basic block 222 (new, reachable)
Predecessors:  213 [50.0%]  (true,exec) 215 [50.0%]  (false,exec) 220 [50.0%]  (false,exec) 221 [100.0%]  (fallthru,exec) 212 [50.0%]  (true,exec) 214 [100.0%]  (fallthru,exec)
Successors:  257 [100.0%]  (fallthru,exec)

Basic block 223 (new, reachable)
Predecessors:  257 [95.5%]  (true,exec)
Successors:  224 [71.0%]  (true,exec) 225 [29.0%]  (false,exec)

Basic block 224 (new, reachable)
Predecessors:  223 [71.0%]  (true,exec)
Successors:  256 [100.0%]  (fallthru,exec)

Basic block 225 (new, reachable)
Predecessors:  223 [29.0%]  (false,exec)
Successors:  228 [15.0%]  (true,exec) 226 [85.0%]  (false,exec)

Basic block 226 (new, reachable)
Predecessors:  225 [85.0%]  (false,exec)
Successors:  228 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

Basic block 227 (new, reachable)
Predecessors:  226 [50.0%]  (false,exec)
Successors:  228 [100.0%]  (fallthru,exec)

Basic block 228 (new, reachable)
Predecessors:  225 [15.0%]  (true,exec) 226 [50.0%]  (true,exec) 227 [100.0%]  (fallthru,exec)
Successors:  230 [50.0%]  (true,exec) 229 [50.0%]  (false,exec)

Basic block 229 (new, reachable)
Predecessors:  228 [50.0%]  (false,exec)
Successors:  230 [50.0%]  (true,exec) 232 [50.0%]  (false,exec)

Basic block 230 (new, reachable)
Predecessors:  228 [50.0%]  (true,exec) 229 [50.0%]  (true,exec)
Successors:  231 [50.0%]  (true,exec) 232 [50.0%]  (false,exec)

Basic block 231 (new, reachable)
Predecessors:  230 [50.0%]  (true,exec)
Successors:  238 [100.0%]  (fallthru,exec)

Basic block 232 (new, reachable)
Predecessors:  229 [50.0%]  (false,exec) 230 [50.0%]  (false,exec)
Successors:  233 [50.0%]  (true,exec) 235 [50.0%]  (false,exec)

Basic block 233 (new, reachable)
Predecessors:  232 [50.0%]  (true,exec)
Successors:  236 [28.0%]  (true,exec) 234 [72.0%]  (false,exec)

Basic block 234 (new, reachable)
Predecessors:  233 [72.0%]  (false,exec)
Successors:  236 [28.0%]  (true,exec) 235 [72.0%]  (false,exec)

Basic block 235 (new, reachable)
Predecessors:  232 [50.0%]  (false,exec) 234 [72.0%]  (false,exec)
Successors:  236 [100.0%]  (fallthru,exec)

Basic block 236 (new, reachable)
Predecessors:  234 [28.0%]  (true,exec) 235 [100.0%]  (fallthru,exec) 233 [28.0%]  (true,exec)
Successors:  237 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

Basic block 237 (new, reachable)
Predecessors:  236 [50.0%]  (true,exec)
Successors:  238 [100.0%]  (fallthru,exec)

Basic block 238 (new, reachable)
Predecessors:  231 [100.0%]  (fallthru,exec) 236 [50.0%]  (false,exec) 237 [100.0%]  (fallthru,exec)
Successors:  239 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

Basic block 239 (new, reachable)
Predecessors:  238 [50.0%]  (true,exec)
Successors:  240 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

Basic block 240 (new, reachable)
Predecessors:  239 [50.0%]  (true,exec)
Successors:  241 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

Basic block 241 (new, reachable)
Predecessors:  240 [50.0%]  (true,exec)
Successors:  242 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

Basic block 242 (new, reachable)
Predecessors:  241 [50.0%]  (true,exec)
Successors:  243 [100.0%]  (fallthru,exec)

Basic block 243 (new, reachable)
Predecessors:  238 [50.0%]  (false,exec) 239 [50.0%]  (false,exec) 240 [50.0%]  (false,exec) 241 [50.0%]  (false,exec) 242 [100.0%]  (fallthru,exec)
Successors:  244 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

Basic block 244 (new, reachable)
Predecessors:  243 [50.0%]  (true,exec)
Successors:  245 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

Basic block 245 (new, reachable)
Predecessors:  244 [50.0%]  (true,exec)
Successors:  247 [29.0%]  (true,exec) 246 [71.0%]  (false,exec)

Basic block 246 (new, reachable)
Predecessors:  245 [71.0%]  (false,exec)
Successors:  247 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

Basic block 247 (new, reachable)
Predecessors:  245 [29.0%]  (true,exec) 246 [50.0%]  (true,exec)
Successors:  248 [100.0%]  (fallthru,exec)

Basic block 248 (new, reachable)
Predecessors:  243 [50.0%]  (false,exec) 244 [50.0%]  (false,exec) 246 [50.0%]  (false,exec) 247 [100.0%]  (fallthru,exec)
Successors:  249 [50.0%]  (true,exec) 256 [50.0%]  (false,exec)

Basic block 249 (new, reachable)
Predecessors:  248 [50.0%]  (true,exec)
Successors:  250 [29.0%]  (true,exec) 251 [71.0%]  (false,exec)

Basic block 250 (new, reachable)
Predecessors:  249 [29.0%]  (true,exec)
Successors:  255 [100.0%]  (fallthru,exec)

Basic block 251 (new, reachable)
Predecessors:  249 [71.0%]  (false,exec)
Successors:  252 [50.0%]  (true,exec) 253 [50.0%]  (false,exec)

Basic block 252 (new, reachable)
Predecessors:  251 [50.0%]  (true,exec)
Successors:  254 [72.0%]  (true,exec) 253 [28.0%]  (false,exec)

Basic block 253 (new, reachable)
Predecessors:  251 [50.0%]  (false,exec) 252 [28.0%]  (false,exec)
Successors:  254 [72.0%]  (true,exec) 255 [28.0%]  (false,exec)

Basic block 254 (new, reachable)
Predecessors:  252 [72.0%]  (true,exec) 253 [72.0%]  (true,exec)
Successors:  256 [100.0%]  (fallthru,exec)

Basic block 255 (new, reachable)
Predecessors:  250 [100.0%]  (fallthru,exec) 253 [28.0%]  (false,exec)
Successors:  258 [4.5%]  (true,exec) 256 [95.5%]  (false,exec)

Basic block 256 (new, reachable)
Predecessors:  224 [100.0%]  (fallthru,exec) 248 [50.0%]  (false,exec) 254 [100.0%]  (fallthru,exec) 255 [95.5%]  (false,exec)
Successors:  257 [100.0%]  (fallthru,dfs_back,exec)

Basic block 257 (new, reachable)
Predecessors:  222 [100.0%]  (fallthru,exec) 256 [100.0%]  (fallthru,dfs_back,exec)
Successors:  223 [95.5%]  (true,exec) 258 [4.5%]  (false,exec)

Basic block 258 (new, reachable)
Predecessors:  255 [4.5%]  (true,exec) 257 [4.5%]  (false,exec)
Successors:  261 [4.5%]  (true,exec) 259 [95.5%]  (false,exec)

Basic block 259 (new, reachable)
Predecessors:  187 [100.0%]  (fallthru,exec) 193 [100.0%]  (fallthru,exec) 195 [100.0%]  (fallthru,exec) 197 [100.0%]  (fallthru,exec) 258 [95.5%]  (false,exec)
Successors:  260 [100.0%]  (fallthru,dfs_back,exec)

Basic block 260 (new, reachable)
Predecessors:  180 [100.0%]  (fallthru,exec) 259 [100.0%]  (fallthru,dfs_back,exec)
Successors:  181 [95.5%]  (true,exec) 261 [4.5%]  (false,exec)

Basic block 261 (new, reachable)
Predecessors:  258 [4.5%]  (true,exec) 260 [4.5%]  (false,exec)
Successors:  262 [29.0%]  (true,exec) 263 [71.0%]  (false,exec)

Basic block 262 (new, reachable)
Predecessors:  261 [29.0%]  (true,exec)
Successors:  263 [100.0%]  (fallthru,exec)

Basic block 263 (new, reachable)
Predecessors:  261 [71.0%]  (false,exec) 262 [100.0%]  (fallthru,exec)
Successors:  264 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

Basic block 264 (new, reachable)
Predecessors:  263 [50.0%]  (true,exec)
Successors:  273 [100.0%]  (fallthru)

Basic block 265 (new, reachable)
Predecessors:  273 [97.0%]  (true,exec)
Successors:  266 [50.0%]  (true,exec) 267 [50.0%]  (false,exec)

Basic block 266 (new, reachable)
Predecessors:  265 [50.0%]  (true,exec)
Successors:  267 [100.0%]  (fallthru,exec)

Basic block 267 (new, reachable)
Predecessors:  266 [100.0%]  (fallthru,exec) 265 [50.0%]  (false,exec)
Successors:  268 [50.0%]  (true,exec) 269 [50.0%]  (false,exec)

Basic block 268 (new, reachable)
Predecessors:  267 [50.0%]  (true,exec)
Successors:  269 [100.0%]  (fallthru,exec)

Basic block 269 (new, reachable)
Predecessors:  268 [100.0%]  (fallthru,exec) 267 [50.0%]  (false,exec)
Successors:  271 [3.0%]  (true,exec) 270 [97.0%]  (false,exec)

Basic block 270 (new, reachable)
Predecessors:  269 [97.0%]  (false,exec)
Successors:  271 [3.0%]  (true,exec) 272 [97.0%]  (false,exec)

Basic block 271 (new, reachable)
Predecessors:  269 [3.0%]  (true,exec) 270 [3.0%]  (true,exec)
Successors:  274 [100.0%]  (fallthru,exec)

Basic block 272 (new, reachable)
Predecessors:  270 [97.0%]  (false,exec)
Successors:  273 [100.0%]  (fallthru,dfs_back,exec)

Basic block 273 (new)
Predecessors:  264 [100.0%]  (fallthru) 272 [100.0%]  (fallthru,dfs_back,exec)
Successors:  265 [97.0%]  (true,exec) 274 [3.0%]  (false,exec)

Basic block 274 (new, reachable)
Predecessors:  263 [50.0%]  (false,exec) 271 [100.0%]  (fallthru,exec) 273 [3.0%]  (false,exec)
Successors:  275 [50.0%]  (true,exec) 299 [50.0%]  (false,exec)

Basic block 275 (new, reachable)
Predecessors:  274 [50.0%]  (true,exec)
Successors:  276 [29.0%]  (true,exec) 277 [71.0%]  (false,exec)

Basic block 276 (new, reachable)
Predecessors:  275 [29.0%]  (true,exec)
Successors:  277 [100.0%]  (fallthru,exec)

Basic block 277 (new, reachable)
Predecessors:  275 [71.0%]  (false,exec) 276 [100.0%]  (fallthru,exec)
Successors:  298 [100.0%]  (fallthru,exec)

Basic block 278 (new, reachable)
Predecessors:  298 [96.8%]  (true,exec)
Successors:  279 [50.0%]  (true,exec) 281 [50.0%]  (false,exec)

Basic block 279 (new, reachable)
Predecessors:  278 [50.0%]  (true,exec)
Successors:  280 [69.8%]  (true,exec) 281 [30.2%]  (false,exec)

Basic block 280 (new, reachable)
Predecessors:  279 [69.8%]  (true,exec)
Successors:  281 [100.0%]  (fallthru,exec)

Basic block 281 (new, reachable)
Predecessors:  278 [50.0%]  (false,exec) 279 [30.2%]  (false,exec) 280 [100.0%]  (fallthru,exec)
Successors:  282 [50.0%]  (true,exec) 283 [50.0%]  (false,exec)

Basic block 282 (new, reachable)
Predecessors:  281 [50.0%]  (true,exec)
Successors:  283 [100.0%]  (fallthru,exec)

Basic block 283 (new, reachable)
Predecessors:  281 [50.0%]  (false,exec) 282 [100.0%]  (fallthru,exec)
Successors:  284 [69.8%]  (true,exec) 285 [30.2%]  (false,exec)

Basic block 284 (new, reachable)
Predecessors:  283 [69.8%]  (true,exec)
Successors:  285 [100.0%]  (fallthru,exec)

Basic block 285 (new, reachable)
Predecessors:  284 [100.0%]  (fallthru,exec) 283 [30.2%]  (false,exec)
Successors:  286 [50.0%]  (true,exec) 296 [50.0%]  (false,exec)

Basic block 286 (new, reachable)
Predecessors:  285 [50.0%]  (true,exec)
Successors:  287 [13.7%]  (true,exec) 288 [86.3%]  (false,exec)

Basic block 287 (new, reachable)
Predecessors:  286 [13.7%]  (true,exec)
Successors:  289 [100.0%]  (fallthru,exec)

Basic block 288 (new, reachable)
Predecessors:  286 [86.3%]  (false,exec)
Successors:  289 [100.0%]  (fallthru,exec)

Basic block 289 (new, reachable)
Predecessors:  287 [100.0%]  (fallthru,exec) 288 [100.0%]  (fallthru,exec)
Successors:  292 [15.0%]  (true,exec) 290 [85.0%]  (false,exec)

Basic block 290 (new, reachable)
Predecessors:  289 [85.0%]  (false,exec)
Successors:  292 [50.0%]  (true,exec) 291 [50.0%]  (false,exec)

Basic block 291 (new, reachable)
Predecessors:  290 [50.0%]  (false,exec)
Successors:  292 [100.0%]  (fallthru,exec)

Basic block 292 (new, reachable)
Predecessors:  289 [15.0%]  (true,exec) 290 [50.0%]  (true,exec) 291 [100.0%]  (fallthru,exec)
Successors:  293 [29.0%]  (true,exec) 295 [71.0%]  (false,exec)

Basic block 293 (new, reachable)
Predecessors:  292 [29.0%]  (true,exec)
Successors:  294 [85.0%]  (true,exec) 295 [15.0%]  (false,exec)

Basic block 294 (new, reachable)
Predecessors:  293 [85.0%]  (true,exec)
Successors:  297 [100.0%]  (fallthru,exec)

Basic block 295 (new, reachable)
Predecessors:  292 [71.0%]  (false,exec) 293 [15.0%]  (false,exec)
Successors:  297 [100.0%]  (fallthru,exec)

Basic block 296 (new, reachable)
Predecessors:  285 [50.0%]  (false,exec)
Successors:  297 [100.0%]  (fallthru,exec)

Basic block 297 (new, reachable)
Predecessors:  295 [100.0%]  (fallthru,exec) 296 [100.0%]  (fallthru,exec) 294 [100.0%]  (fallthru,exec)
Successors:  298 [100.0%]  (fallthru,dfs_back,exec)

Basic block 298 (new, reachable)
Predecessors:  277 [100.0%]  (fallthru,exec) 297 [100.0%]  (fallthru,dfs_back,exec)
Successors:  278 [96.8%]  (true,exec) 299 [3.2%]  (false,exec)

Basic block 299 (new, reachable)
Predecessors:  274 [50.0%]  (false,exec) 298 [3.2%]  (false,exec)
Successors:  300 [29.0%]  (true,exec) 310 [71.0%]  (false,exec)

Basic block 300 (new, reachable)
Predecessors:  299 [29.0%]  (true,exec)
Successors:  301 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

Basic block 301 (new, reachable)
Predecessors:  300 [85.0%]  (true,exec)
Successors:  302 [50.0%]  (true,exec) 305 [50.0%]  (false,exec)

Basic block 302 (new, reachable)
Predecessors:  301 [50.0%]  (true,exec)
Successors:  303 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

Basic block 303 (new, reachable)
Predecessors:  302 [85.0%]  (true,exec)
Successors:  304 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

Basic block 304 (new, reachable)
Predecessors:  303 [85.0%]  (true,exec)
Successors:  306 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

Basic block 305 (new, reachable)
Predecessors:  300 [15.0%]  (false,exec) 301 [50.0%]  (false,exec) 302 [15.0%]  (false,exec) 303 [15.0%]  (false,exec) 304 [15.0%]  (false,exec)
Successors:  306 [100.0%]  (fallthru,exec)

Basic block 306 (new, reachable)
Predecessors:  304 [85.0%]  (true,exec) 305 [100.0%]  (fallthru,exec)
Successors:  307 [50.0%]  (true,exec) 308 [50.0%]  (false,exec)

Basic block 307 (new, reachable)
Predecessors:  306 [50.0%]  (true,exec)
Successors:  308 [100.0%]  (fallthru,exec)

Basic block 308 (new, reachable)
Predecessors:  306 [50.0%]  (false,exec) 307 [100.0%]  (fallthru,exec)
Successors:  309 [29.0%]  (true,exec) 310 [71.0%]  (false,exec)

Basic block 309 (new, reachable)
Predecessors:  308 [29.0%]  (true,exec)
Successors:  310 [100.0%]  (fallthru,exec)

Basic block 310 (new, reachable)
Predecessors:  299 [71.0%]  (false,exec) 309 [100.0%]  (fallthru,exec) 308 [71.0%]  (false,exec)
Successors:  311 [29.0%]  (true,exec) 314 [71.0%]  (false,exec)

Basic block 311 (new, reachable)
Predecessors:  310 [29.0%]  (true,exec)
Successors:  313 [50.0%]  (true,exec) 312 [50.0%]  (false,exec)

Basic block 312 (new, reachable)
Predecessors:  311 [50.0%]  (false,exec)
Successors:  313 [50.0%]  (true,exec) 314 [50.0%]  (false,exec)

Basic block 313 (new, reachable)
Predecessors:  311 [50.0%]  (true,exec) 312 [50.0%]  (true,exec)
Successors:  314 [100.0%]  (fallthru,exec)

Basic block 314 (new, reachable)
Predecessors:  310 [71.0%]  (false,exec) 312 [50.0%]  (false,exec) 313 [100.0%]  (fallthru,exec)
Successors:  315 [50.0%]  (true,exec) 320 [50.0%]  (false,exec)

Basic block 315 (new, reachable)
Predecessors:  314 [50.0%]  (true,exec)
Successors:  316 [28.0%]  (true,exec) 318 [72.0%]  (false,exec)

Basic block 316 (new, reachable)
Predecessors:  315 [28.0%]  (true,exec)
Successors:  317 [69.8%]  (true,exec) 418 [30.2%]  (false,exec)

Basic block 317 (new, reachable)
Predecessors:  316 [69.8%]  (true,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 318 (new, reachable)
Predecessors:  315 [72.0%]  (false,exec)
Successors:  319 [69.8%]  (true,exec) 418 [30.2%]  (false,exec)

Basic block 319 (new, reachable)
Predecessors:  318 [69.8%]  (true,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 320 (new, reachable)
Predecessors:  314 [50.0%]  (false,exec)
Successors:  321 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

Basic block 321 (new, reachable)
Predecessors:  320 [50.0%]  (true,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 322 (new, reachable)
Predecessors:  320 [50.0%]  (false,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 323 (new, reachable)
Predecessors:  136 [72.0%]  (false,exec) 137 [71.0%]  (false,exec)
Successors:  324 [28.0%]  (true,exec) 418 [72.0%]  (false,exec)

Basic block 324 (new, reachable)
Predecessors:  323 [28.0%]  (true,exec)
Successors:  325 [29.0%]  (true,exec) 418 [71.0%]  (false,exec)

Basic block 325 (new, reachable)
Predecessors:  324 [29.0%]  (true,exec)
Successors:  326 [85.0%]  (true,exec) 327 [15.0%]  (false,exec)

Basic block 326 (new, reachable)
Predecessors:  325 [85.0%]  (true,exec)
Successors:  327 [100.0%]  (fallthru,exec)

Basic block 327 (new, reachable)
Predecessors:  325 [15.0%]  (false,exec) 326 [100.0%]  (fallthru,exec)
Successors:  328 [2.0%]  (true,exec) 329 [98.0%]  (false,exec)

Basic block 328 (new, reachable)
Predecessors:  327 [2.0%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 329 (new, reachable)
Predecessors:  327 [98.0%]  (false,exec)
Successors:  394 [100.0%]  (fallthru,exec)

Basic block 330 (new, reachable)
Predecessors:  394 [95.5%]  (true,exec)
Successors:  331 [29.0%]  (true,exec) 341 [71.0%]  (false,exec)

Basic block 331 (new, reachable)
Predecessors:  330 [29.0%]  (true,exec)
Successors:  332 [50.0%]  (true,exec) 341 [50.0%]  (false,exec)

Basic block 332 (new, reachable)
Predecessors:  331 [50.0%]  (true,exec)
Successors:  340 [100.0%]  (fallthru,exec)

Basic block 333 (new, reachable)
Predecessors:  340 [91.0%]  (true,exec)
Successors:  334 [50.0%]  (true,exec) 339 [50.0%]  (false,exec)

Basic block 334 (new, reachable)
Predecessors:  333 [50.0%]  (true,exec)
Successors:  337 [15.0%]  (true,exec) 335 [85.0%]  (false,exec)

Basic block 335 (new, reachable)
Predecessors:  334 [85.0%]  (false,exec)
Successors:  337 [50.0%]  (true,exec) 336 [50.0%]  (false,exec)

Basic block 336 (new, reachable)
Predecessors:  335 [50.0%]  (false,exec)
Successors:  337 [100.0%]  (fallthru,exec)

Basic block 337 (new, reachable)
Predecessors:  334 [15.0%]  (true,exec) 335 [50.0%]  (true,exec) 336 [100.0%]  (fallthru,exec)
Successors:  338 [50.0%]  (true,exec) 339 [50.0%]  (false,exec)

Basic block 338 (new, reachable)
Predecessors:  337 [50.0%]  (true,exec)
Successors:  339 [100.0%]  (fallthru,exec)

Basic block 339 (new, reachable)
Predecessors:  333 [50.0%]  (false,exec) 337 [50.0%]  (false,exec) 338 [100.0%]  (fallthru,exec)
Successors:  340 [100.0%]  (fallthru,dfs_back,exec)

Basic block 340 (new, reachable)
Predecessors:  332 [100.0%]  (fallthru,exec) 339 [100.0%]  (fallthru,dfs_back,exec)
Successors:  333 [91.0%]  (true,exec) 341 [9.0%]  (false,exec)

Basic block 341 (new, reachable)
Predecessors:  330 [71.0%]  (false,exec) 331 [50.0%]  (false,exec) 340 [9.0%]  (false,exec)
Successors:  371 [100.0%]  (fallthru,exec)

Basic block 342 (new, reachable)
Predecessors:  371 [95.5%]  (true,exec)
Successors:  343 [50.0%]  (true,exec) 344 [50.0%]  (false,exec)

Basic block 343 (new, reachable)
Predecessors:  342 [50.0%]  (true,exec)
Successors:  370 [85.0%]  (true,exec) 344 [15.0%]  (false,exec)

Basic block 344 (new, reachable)
Predecessors:  342 [50.0%]  (false,exec) 343 [15.0%]  (false,exec)
Successors:  345 [50.0%]  (true,exec) 352 [50.0%]  (false,exec)

Basic block 345 (new, reachable)
Predecessors:  344 [50.0%]  (true,exec)
Successors:  348 [15.0%]  (true,exec) 346 [85.0%]  (false,exec)

Basic block 346 (new, reachable)
Predecessors:  345 [85.0%]  (false,exec)
Successors:  348 [50.0%]  (true,exec) 347 [50.0%]  (false,exec)

Basic block 347 (new, reachable)
Predecessors:  346 [50.0%]  (false,exec)
Successors:  348 [100.0%]  (fallthru,exec)

Basic block 348 (new, reachable)
Predecessors:  345 [15.0%]  (true,exec) 346 [50.0%]  (true,exec) 347 [100.0%]  (fallthru,exec)
Successors:  349 [29.0%]  (true,exec) 370 [71.0%]  (false,exec)

Basic block 349 (new, reachable)
Predecessors:  348 [29.0%]  (true,exec)
Successors:  350 [85.0%]  (true,exec) 351 [15.0%]  (false,exec)

Basic block 350 (new, reachable)
Predecessors:  349 [85.0%]  (true,exec)
Successors:  351 [100.0%]  (fallthru,exec)

Basic block 351 (new, reachable)
Predecessors:  349 [15.0%]  (false,exec) 350 [100.0%]  (fallthru,exec)
Successors:  370 [100.0%]  (fallthru,exec)

Basic block 352 (new, reachable)
Predecessors:  344 [50.0%]  (false,exec)
Successors:  353 [50.0%]  (true,exec) 359 [50.0%]  (false,exec)

Basic block 353 (new, reachable)
Predecessors:  352 [50.0%]  (true,exec)
Successors:  354 [85.0%]  (true,exec) 359 [15.0%]  (false,exec)

Basic block 354 (new, reachable)
Predecessors:  353 [85.0%]  (true,exec)
Successors:  355 [50.0%]  (true,exec) 356 [50.0%]  (false,exec)

Basic block 355 (new, reachable)
Predecessors:  354 [50.0%]  (true,exec)
Successors:  356 [100.0%]  (fallthru,exec)

Basic block 356 (new, reachable)
Predecessors:  354 [50.0%]  (false,exec) 355 [100.0%]  (fallthru,exec)
Successors:  357 [29.0%]  (true,exec) 359 [71.0%]  (false,exec)

Basic block 357 (new, reachable)
Predecessors:  356 [29.0%]  (true,exec)
Successors:  358 [15.0%]  (true,exec) 370 [85.0%]  (false,exec)

Basic block 358 (new, reachable)
Predecessors:  357 [15.0%]  (true,exec)
Successors:  370 [100.0%]  (fallthru,exec)

Basic block 359 (new, reachable)
Predecessors:  352 [50.0%]  (false,exec) 353 [15.0%]  (false,exec) 356 [71.0%]  (false,exec)
Successors:  360 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

Basic block 360 (new, reachable)
Predecessors:  359 [50.0%]  (true,exec)
Successors:  361 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

Basic block 361 (new, reachable)
Predecessors:  360 [50.0%]  (true,exec)
Successors:  364 [15.0%]  (true,exec) 362 [85.0%]  (false,exec)

Basic block 362 (new, reachable)
Predecessors:  361 [85.0%]  (false,exec)
Successors:  364 [50.0%]  (true,exec) 363 [50.0%]  (false,exec)

Basic block 363 (new, reachable)
Predecessors:  362 [50.0%]  (false,exec)
Successors:  364 [100.0%]  (fallthru,exec)

Basic block 364 (new, reachable)
Predecessors:  361 [15.0%]  (true,exec) 362 [50.0%]  (true,exec) 363 [100.0%]  (fallthru,exec)
Successors:  365 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

Basic block 365 (new, reachable)
Predecessors:  364 [50.0%]  (true,exec)
Successors:  366 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

Basic block 366 (new, reachable)
Predecessors:  365 [50.0%]  (true,exec)
Successors:  367 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

Basic block 367 (new, reachable)
Predecessors:  366 [50.0%]  (true,exec)
Successors:  368 [4.5%]  (true,exec) 369 [95.5%]  (false,exec)

Basic block 368 (new, reachable)
Predecessors:  367 [4.5%]  (true,exec)
Successors:  420 [100.0%]  (fallthru,exec)

Basic block 369 (new, reachable)
Predecessors:  365 [50.0%]  (false,exec) 366 [50.0%]  (false,exec) 367 [95.5%]  (false,exec)
Successors:  370 [100.0%]  (fallthru,exec)

Basic block 370 (new, reachable)
Predecessors:  343 [85.0%]  (true,exec) 351 [100.0%]  (fallthru,exec) 358 [100.0%]  (fallthru,exec) 359 [50.0%]  (false,exec) 360 [50.0%]  (false,exec) 364 [50.0%]  (false,exec) 369 [100.0%]  (fallthru,exec) 348 [71.0%]  (false,exec) 357 [85.0%]  (false,exec)
Successors:  371 [100.0%]  (fallthru,dfs_back,exec)

Basic block 371 (new, reachable)
Predecessors:  341 [100.0%]  (fallthru,exec) 370 [100.0%]  (fallthru,dfs_back,exec)
Successors:  342 [95.5%]  (true,exec) 372 [4.5%]  (false,exec)

Basic block 372 (new, reachable)
Predecessors:  371 [4.5%]  (false,exec)
Successors:  373 [15.0%]  (true,exec) 374 [85.0%]  (false,exec)

Basic block 373 (new, reachable)
Predecessors:  372 [15.0%]  (true,exec)
Successors:  374 [100.0%]  (fallthru,exec)

Basic block 374 (new, reachable)
Predecessors:  372 [85.0%]  (false,exec) 373 [100.0%]  (fallthru,exec)
Successors:  392 [100.0%]  (fallthru,exec)

Basic block 375 (new, reachable)
Predecessors:  392 [91.0%]  (true,exec)
Successors:  376 [86.3%]  (true,exec) 377 [13.7%]  (false,exec)

Basic block 376 (new, reachable)
Predecessors:  375 [86.3%]  (true,exec)
Successors:  391 [100.0%]  (fallthru,exec)

Basic block 377 (new, reachable)
Predecessors:  375 [13.7%]  (false,exec)
Successors:  378 [50.0%]  (true,exec) 380 [50.0%]  (false,exec)

Basic block 378 (new, reachable)
Predecessors:  377 [50.0%]  (true,exec)
Successors:  379 [50.0%]  (true,exec) 380 [50.0%]  (false,exec)

Basic block 379 (new, reachable)
Predecessors:  378 [50.0%]  (true,exec)
Successors:  391 [100.0%]  (fallthru,exec)

Basic block 380 (new, reachable)
Predecessors:  377 [50.0%]  (false,exec) 378 [50.0%]  (false,exec)
Successors:  383 [15.0%]  (true,exec) 381 [85.0%]  (false,exec)

Basic block 381 (new, reachable)
Predecessors:  380 [85.0%]  (false,exec)
Successors:  383 [50.0%]  (true,exec) 382 [50.0%]  (false,exec)

Basic block 382 (new, reachable)
Predecessors:  381 [50.0%]  (false,exec)
Successors:  383 [100.0%]  (fallthru,exec)

Basic block 383 (new, reachable)
Predecessors:  380 [15.0%]  (true,exec) 381 [50.0%]  (true,exec) 382 [100.0%]  (fallthru,exec)
Successors:  385 [50.0%]  (true,exec) 384 [50.0%]  (false,exec)

Basic block 384 (new, reachable)
Predecessors:  383 [50.0%]  (false,exec)
Successors:  385 [50.0%]  (true,exec) 387 [50.0%]  (false,exec)

Basic block 385 (new, reachable)
Predecessors:  383 [50.0%]  (true,exec) 384 [50.0%]  (true,exec)
Successors:  386 [50.0%]  (true,exec) 387 [50.0%]  (false,exec)

Basic block 386 (new, reachable)
Predecessors:  385 [50.0%]  (true,exec)
Successors:  388 [100.0%]  (fallthru,exec)

Basic block 387 (new, reachable)
Predecessors:  384 [50.0%]  (false,exec) 385 [50.0%]  (false,exec)
Successors:  388 [100.0%]  (fallthru,exec)

Basic block 388 (new, reachable)
Predecessors:  386 [100.0%]  (fallthru,exec) 387 [100.0%]  (fallthru,exec)
Successors:  389 [50.0%]  (true,exec) 391 [50.0%]  (false,exec)

Basic block 389 (new, reachable)
Predecessors:  388 [50.0%]  (true,exec)
Successors:  390 [13.7%]  (true,exec) 391 [86.3%]  (false,exec)

Basic block 390 (new, reachable)
Predecessors:  389 [13.7%]  (true,exec)
Successors:  391 [100.0%]  (fallthru,exec)

Basic block 391 (new, reachable)
Predecessors:  376 [100.0%]  (fallthru,exec) 379 [100.0%]  (fallthru,exec) 389 [86.3%]  (false,exec) 388 [50.0%]  (false,exec) 390 [100.0%]  (fallthru,exec)
Successors:  392 [100.0%]  (fallthru,dfs_back,exec)

Basic block 392 (new, reachable)
Predecessors:  374 [100.0%]  (fallthru,exec) 391 [100.0%]  (fallthru,dfs_back,exec)
Successors:  375 [91.0%]  (true,exec) 393 [9.0%]  (false,exec)

Basic block 393 (new, reachable)
Predecessors:  392 [9.0%]  (false,exec)
Successors:  394 [100.0%]  (fallthru,dfs_back,exec)

Basic block 394 (new, reachable)
Predecessors:  329 [100.0%]  (fallthru,exec) 393 [100.0%]  (fallthru,dfs_back,exec)
Successors:  330 [95.5%]  (true,exec) 395 [4.5%]  (false,exec)

Basic block 395 (new, reachable)
Predecessors:  394 [4.5%]  (false,exec)
Successors:  396 [29.0%]  (true,exec) 397 [71.0%]  (false,exec)

Basic block 396 (new, reachable)
Predecessors:  395 [29.0%]  (true,exec)
Successors:  397 [100.0%]  (fallthru,exec)

Basic block 397 (new, reachable)
Predecessors:  395 [71.0%]  (false,exec) 396 [100.0%]  (fallthru,exec)
Successors:  398 [50.0%]  (true,exec) 418 [50.0%]  (false,exec)

Basic block 398 (new, reachable)
Predecessors:  397 [50.0%]  (true,exec)
Successors:  399 [29.0%]  (true,exec) 400 [71.0%]  (false,exec)

Basic block 399 (new, reachable)
Predecessors:  398 [29.0%]  (true,exec)
Successors:  400 [100.0%]  (fallthru,exec)

Basic block 400 (new, reachable)
Predecessors:  398 [71.0%]  (false,exec) 399 [100.0%]  (fallthru,exec)
Successors:  405 [100.0%]  (fallthru,exec)

Basic block 401 (new, reachable)
Predecessors:  405 [96.8%]  (true,exec)
Successors:  402 [50.0%]  (true,exec) 404 [50.0%]  (false,exec)

Basic block 402 (new, reachable)
Predecessors:  401 [50.0%]  (true,exec)
Successors:  403 [69.8%]  (true,exec) 404 [30.2%]  (false,exec)

Basic block 403 (new, reachable)
Predecessors:  402 [69.8%]  (true,exec)
Successors:  404 [100.0%]  (fallthru,exec)

Basic block 404 (new, reachable)
Predecessors:  401 [50.0%]  (false,exec) 402 [30.2%]  (false,exec) 403 [100.0%]  (fallthru,exec)
Successors:  405 [100.0%]  (fallthru,dfs_back,exec)

Basic block 405 (new, reachable)
Predecessors:  400 [100.0%]  (fallthru,exec) 404 [100.0%]  (fallthru,dfs_back,exec)
Successors:  401 [96.8%]  (true,exec) 406 [3.2%]  (false,exec)

Basic block 406 (new, reachable)
Predecessors:  405 [3.2%]  (false,exec)
Successors:  407 [50.0%]  (true,exec) 408 [50.0%]  (false,exec)

Basic block 407 (new, reachable)
Predecessors:  406 [50.0%]  (true,exec)
Successors:  408 [100.0%]  (fallthru,exec)

Basic block 408 (new, reachable)
Predecessors:  406 [50.0%]  (false,exec) 407 [100.0%]  (fallthru,exec)
Successors:  409 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

Basic block 409 (new, reachable)
Predecessors:  408 [85.0%]  (true,exec)
Successors:  410 [50.0%]  (true,exec) 413 [50.0%]  (false,exec)

Basic block 410 (new, reachable)
Predecessors:  409 [50.0%]  (true,exec)
Successors:  411 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

Basic block 411 (new, reachable)
Predecessors:  410 [85.0%]  (true,exec)
Successors:  412 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

Basic block 412 (new, reachable)
Predecessors:  411 [85.0%]  (true,exec)
Successors:  414 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

Basic block 413 (new, reachable)
Predecessors:  408 [15.0%]  (false,exec) 409 [50.0%]  (false,exec) 410 [15.0%]  (false,exec) 411 [15.0%]  (false,exec) 412 [15.0%]  (false,exec)
Successors:  414 [100.0%]  (fallthru,exec)

Basic block 414 (new, reachable)
Predecessors:  412 [85.0%]  (true,exec) 413 [100.0%]  (fallthru,exec)
Successors:  415 [50.0%]  (true,exec) 416 [50.0%]  (false,exec)

Basic block 415 (new, reachable)
Predecessors:  414 [50.0%]  (true,exec)
Successors:  416 [100.0%]  (fallthru,exec)

Basic block 416 (new, reachable)
Predecessors:  414 [50.0%]  (false,exec) 415 [100.0%]  (fallthru,exec)
Successors:  417 [29.0%]  (true,exec) 418 [71.0%]  (false,exec)

Basic block 417 (new, reachable)
Predecessors:  416 [29.0%]  (true,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 418 (new, reachable)
Predecessors:  321 [100.0%]  (fallthru,exec) 323 [72.0%]  (false,exec) 324 [71.0%]  (false,exec) 397 [50.0%]  (false,exec) 416 [71.0%]  (false,exec) 417 [100.0%]  (fallthru,exec) 318 [30.2%]  (false,exec) 319 [100.0%]  (fallthru,exec) 316 [30.2%]  (false,exec) 317 [100.0%]  (fallthru,exec) 322 [100.0%]  (fallthru,exec)
Successors:  419 [100.0%]  (fallthru,dfs_back,exec)

Basic block 419 (new, reachable)
Predecessors:  88 [100.0%]  (fallthru,exec) 418 [100.0%]  (fallthru,dfs_back,exec)
Successors:  89 [98.0%]  (true,exec) 420 [2.0%]  (false,exec)

Basic block 420 (new, reachable)
Predecessors:  105 [71.0%]  (true,exec) 107 [100.0%]  (fallthru,exec) 125 [100.0%]  (fallthru,exec) 123 [71.0%]  (false,exec) 169 [100.0%]  (fallthru,exec) 175 [100.0%]  (fallthru,exec) 179 [100.0%]  (fallthru,exec) 328 [100.0%]  (fallthru,exec) 368 [100.0%]  (fallthru,exec) 419 [2.0%]  (false,exec) 122 [71.0%]  (false,exec) 135 [100.0%]  (fallthru,exec)
Successors:  421 [69.8%]  (true,exec) 422 [30.2%]  (false,exec)

Basic block 421 (new, reachable)
Predecessors:  420 [69.8%]  (true,exec)
Successors:  422 [100.0%]  (fallthru,exec)

Basic block 422 (new, reachable)
Predecessors:  420 [30.2%]  (false,exec) 421 [100.0%]  (fallthru,exec)
Successors:  423 [100.0%]  (fallthru,exec)

Basic block 423 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 422 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_negotiate_sdp (struct switch_core_session_t * session, const char * r_sdp, uint8_t * proceed, switch_sdp_type_t sdp_type)
{
  int iftmp.104;
  uint32_t D.47966;
  uint32_t D.47965;
  struct switch_mutex_t * D.47964;
  struct switch_codec_interface_t * D.47963;
  const struct switch_codec_implementation_t * D.47962;
  const char D.47958;
  int D.47957;
  const char D.47951;
  int D.47950;
  int D.47947;
  const char D.47944;
  int D.47943;
  const char D.47940;
  int D.47939;
  int iftmp.104;
  uint32_t D.47935;
  uint32_t D.47934;
  struct switch_mutex_t * D.47933;
  struct switch_codec_interface_t * D.47932;
  const struct switch_codec_implementation_t * D.47931;
  const char D.47927;
  int D.47926;
  int D.47923;
  const char D.47920;
  int D.47919;
  const char D.47916;
  int D.47915;
  unsigned char csui.173;
  const char D.47901;
  int D.47900;
  int D.47891;
  const char D.47888;
  int D.47887;
  const char D.47878;
  int D.47877;
  uint8_t D.47875;
  struct payload_map_t * pmap;
  uint8_t D.47872;
  struct payload_map_t * pmap;
  struct payload_map_t * pmap;
  int j;
  char tmp[50];
  const struct switch_codec_implementation_t * imp;
  int crypto_tag;
  register int __result;
  const unsigned char * __s1;
  int i;
  int vmatch;
  const struct switch_codec_implementation_t * mimp;
  const char * rm_encoding;
  struct sdp_rtpmap_t * map;
  char tmp[50];
  struct payload_map_t * pmap;
  int j;
  const struct switch_codec_implementation_t * timp;
  int num;
  char tmp[80];
  char * prefs[1];
  const struct switch_codec_implementation_t * search[1];
  int j;
  uint32_t codec_rate;
  uint32_t bit_rate;
  const struct switch_codec_implementation_t * imp;
  struct switch_codec_fmtp_t codec_fmtp;
  uint32_t map_bit_rate;
  const char * rm_encoding;
  int32_t i;
  int crypto_tag;
  struct sdp_rtpmap_t * map;
  const char * err;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  struct switch_core_session_message_t * msg;
  struct switch_channel_t * other_channel;
  int pass;
  const char * var;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * other_session;
  struct sdp_connection_t * connection;
  register int __result;
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  int nm_idx;
  int m_idx;
  const char * tmp;
  uint32_t fmtp_remote_codec_rate;
  uint32_t remote_codec_rate;
  int codec_ms;
  struct matches near_matches[30];
  struct matches matches[30];
  struct sdp_rtpmap_t * near_map;
  struct sdp_rtpmap_t * mmap;
  const struct switch_codec_implementation_t * near_match;
  const struct switch_codec_implementation_t * mimp;
  uint32_t near_rate;
  struct switch_media_handle_t * smh;
  int total_codecs;
  const struct switch_codec_implementation_t * * codec_array;
  int reneg;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  int scrooge;
  int got_webrtc;
  int got_udptl;
  int got_savp;
  int got_avp;
  int got_audio;
  int got_video_crypto;
  int got_crypto;
  const char * crypto;
  const char * val;
  struct switch_channel_t * channel;
  int x;
  int greedy;
  int recvonly;
  int sendonly;
  int dmaxptime;
  int maxptime;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  switch_payload_t cng_pt;
  switch_payload_t te;
  switch_payload_t best_te;
  uint8_t match;
  switch_status_t D.45317;
  struct switch_codec_t * D.45313;
  int D.45307;
  switch_payload_t D.45306;
  int D.45305;
  switch_payload_t D.45304;
  char * D.45303;
  char * D.45302;
  int D.45301;
  switch_port_t D.45300;
  char * D.45299;
  const char * D.45298;
  char * D.45297;
  uint32_t D.45296;
  int D.45295;
  const int D.45294;
  unsigned char D.45293;
  char * D.45292;
  switch_payload_t D.45291;
  struct switch_rtp_t * D.45288;
  struct payload_map_t * D.45287;
  uint32_t D.45284;
  int D.45283;
  const int D.45282;
  const uint32_t D.45281;
  const struct switch_codec_implementation_t * D.45280;
  uint32_t D.45279;
  <unnamed-unsigned:7> D.45278;
  const char * D.45277;
  const char * D.45276;
  struct sdp_rtpmap_t * D.45275;
  _Bool D.45268;
  _Bool D.45267;
  const uint32_t D.45264;
  long unsigned int D.45263;
  int D.45260;
  const char * D.45256;
  int D.45252;
  const switch_payload_t D.45251;
  char * const D.45250;
  int D.45249;
  <unnamed-unsigned:7> D.45248;
  uint32_t D.45245;
  switch_call_direction_t D.45242;
  const switch_codec_type_t D.45239;
  const struct switch_codec_implementation_t * * D.45238;
  unsigned int D.45237;
  unsigned int i.99;
  int D.45229;
  const char * D.45228;
  int D.45220;
  char * D.45215;
  short unsigned int D.45214;
  int D.45187;
  const unsigned char D.45186;
  int D.45176;
  const unsigned char D.45175;
  int D.45169;
  uint8_t D.45165;
  uint8_t D.45164;
  const char * D.45161;
  int D.45155;
  int D.45152;
  int D.45144;
  int D.45141;
  int D.45138;
  int D.45126;
  const char * D.45125;
  int D.45121;
  switch_call_direction_t D.45115;
  int D.45112;
  switch_payload_t D.45111;
  uint32_t D.45110;
  int32_t D.45108;
  switch_status_t D.45100;
  uint32_t D.45099;
  struct switch_codec_t * D.45095;
  int D.45094;
  switch_payload_t D.45093;
  int D.45090;
  char * D.45089;
  short unsigned int D.45088;
  char * D.45087;
  const char * D.45086;
  const char * D.45083;
  const char * D.45080;
  int D.45074;
  int D.45071;
  const char * D.45067;
  uint32_t D.45065;
  const int D.45064;
  uint32_t D.45063;
  int D.45062;
  const int D.45061;
  const uint32_t D.45060;
  int D.45057;
  const uint32_t D.45056;
  unsigned char D.45055;
  <unnamed-unsigned:7> D.45054;
  char * D.45053;
  char * const D.45052;
  char * D.45051;
  const char * D.45050;
  switch_payload_t D.45049;
  uint32_t D.45044;
  int D.45043;
  const int D.45042;
  const uint32_t D.45041;
  const struct switch_codec_implementation_t * D.45040;
  uint32_t D.45039;
  <unnamed-unsigned:7> D.45038;
  const char * D.45037;
  const char * D.45036;
  struct sdp_rtpmap_t * D.45035;
  int near_rate.96;
  int D.45029;
  const uint32_t D.45028;
  char * const D.45027;
  int D.45026;
  const int D.45025;
  char * const D.45014;
  int D.45013;
  _Bool D.45010;
  _Bool D.45009;
  _Bool D.45008;
  _Bool D.45005;
  _Bool D.45004;
  _Bool D.45003;
  switch_rtp_crypto_mode_t D.45002;
  _Bool D.45000;
  _Bool D.44999;
  _Bool D.44998;
  int D.44997;
  int codec_rate.94;
  int D.44994;
  _Bool D.44992;
  _Bool D.44991;
  _Bool D.44990;
  const uint32_t D.44985;
  int D.44980;
  int D.44978;
  _Bool D.44975;
  _Bool D.44974;
  _Bool D.44973;
  _Bool D.44970;
  _Bool D.44969;
  int D.44964;
  int D.44961;
  _Bool D.44958;
  _Bool D.44957;
  _Bool D.44956;
  _Bool D.44953;
  _Bool D.44952;
  _Bool D.44951;
  const uint32_t D.44948;
  int D.44945;
  int iftmp.93;
  int D.44938;
  int D.44937;
  int D.44931;
  const int D.44930;
  int D.44929;
  const switch_payload_t D.44928;
  char * const D.44927;
  int remote_codec_rate.92;
  int D.44925;
  const switch_codec_type_t D.44922;
  const int D.44921;
  const struct switch_codec_implementation_t * * D.44920;
  unsigned int D.44919;
  unsigned int i.91;
  uint32_t D.44915;
  int D.44912;
  int D.44909;
  switch_status_t D.44906;
  int D.44901;
  int D.44897;
  const char * D.44893;
  int D.44890;
  const char * D.44889;
  uint32_t D.44885;
  uint32_t D.44884;
  _Bool D.44879;
  _Bool D.44878;
  _Bool D.44877;
  switch_payload_t D.44869;
  int D.44868;
  int D.44863;
  int32_t D.44858;
  int D.44857;
  <unnamed-unsigned:7> D.44856;
  long unsigned int D.44855;
  long unsigned int D.44854;
  int D.44848;
  int D.44839;
  _Bool D.44836;
  _Bool D.44835;
  _Bool D.44834;
  _Bool D.44831;
  _Bool D.44830;
  _Bool D.44829;
  int D.44826;
  const char * D.44825;
  unsigned int D.44822;
  switch_core_media_NDLB_t D.44821;
  int D.44815;
  int D.44810;
  int D.44805;
  char * D.44800;
  short unsigned int D.44799;
  int D.44795;
  int D.44787;
  int D.44784;
  int D.44781;
  _Bool D.44779;
  _Bool D.44778;
  _Bool D.44777;
  char * D.44773;
  struct switch_channel_t * D.44772;
  const char * err.90;
  switch_status_t D.44768;
  int D.44767;
  int D.44766;
  char * D.44765;
  char * D.44764;
  switch_port_t D.44762;
  char * D.44760;
  int D.39032;
  _Bool D.44758;
  _Bool D.44757;
  _Bool D.44756;
  uint16_t D.44753;
  char * D.44752;
  const char * D.44751;
  struct payload_map_t * D.44750;
  int D.44747;
  const char * D.44746;
  int D.44743;
  const char * D.44742;
  char * D.44741;
  char * D.44740;
  uint32_t D.44737;
  struct switch_core_session_t * other_session.89;
  switch_status_t D.44733;
  uint8_t D.44730;
  uint32_t D.44728;
  uint32_t D.44726;
  uint32_t D.44724;
  uint32_t D.44723;
  int D.44716;
  int D.44707;
  uint32_t D.44706;
  int D.44703;
  const char * D.44702;
  int D.44699;
  long unsigned int D.44697;
  sdp_media_e D.44681;
  _Bool D.44678;
  _Bool D.44677;
  _Bool D.44676;
  sdp_proto_e D.44675;
  int D.44672;
  const char * D.44669;
  sdp_proto_e D.44666;
  const char * D.44665;
  const char * D.44663;
  const char * D.44661;
  int D.44655;
  struct switch_media_bug_t * D.44649;
  int D.44640;
  int D.44639;
  int D.44636;
  int D.44635;
  int32_t D.44631;
  _Bool D.44626;
  _Bool D.44625;
  _Bool D.44624;
  int D.44621;
  const char * D.44619;
  int D.44616;
  int D.44614;
  uint8_t D.44606;
  struct switch_rtp_t * D.44605;
  int D.44602;
  int D.44598;
  int D.44594;
  const char * D.44590;
  const char * D.44548;
  struct sdp_connection_t * D.44546;
  _Bool D.44544;
  _Bool D.44543;
  _Bool D.44542;
  unsigned char D.44541;
  unsigned char D.44540;
  int D.44533;
  struct switch_channel_t * D.44530;
  unsigned int D.44529;
  char * D.44526;
  unsigned int D.44523;
  unsigned int D.44522;
  switch_rtp_bug_flag_t D.44521;
  char * D.44518;
  int D.44514;
  int D.44513;
  switch_rtp_bug_flag_t D.44512;
  char * D.44509;
  char * D.44508;
  const char * D.44507;
  struct sdp_origin_t * D.44506;
  int D.44502;
  int D.44498;
  int D.44494;
  int32_t D.44491;
  int32_t D.44490;
  int D.44485;
  struct switch_channel_t * D.44482;
  struct switch_core_session_t * D.44481;
  int D.44478;
  int D.44473;
  size_t D.44472;
  struct switch_core_media_params_t * D.44471;

  # BLOCK 2 freq:23
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG match => 0
  # DEBUG best_te => 0
  # DEBUG te => 0
  # DEBUG cng_pt => 0
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG maxptime => 0
  # DEBUG dmaxptime => 0
  # DEBUG sendonly => 0
  # DEBUG recvonly => 0
  # DEBUG greedy => 0
  # DEBUG x => 0
  # DEBUG skip => 0
  channel_162 = switch_core_session_get_channel (session_161(D));
  # DEBUG channel => channel_162
  # DEBUG crypto => 0B
  # DEBUG got_crypto => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_audio => 0
  # DEBUG got_avp => 0
  # DEBUG got_video_avp => 0
  # DEBUG got_video_savp => 0
  # DEBUG got_savp => 0
  # DEBUG got_udptl => 0
  # DEBUG got_webrtc => 0
  # DEBUG scrooge => 0
  # DEBUG parser => 0B
  # DEBUG reneg => 1
  # DEBUG near_rate => 0
  # DEBUG mimp => 0B
  # DEBUG near_match => 0B
  # DEBUG mmap => 0B
  # DEBUG near_map => 0B
  matches = {};
  near_matches = {};
  # DEBUG codec_ms => 0
  # DEBUG remote_codec_rate => 0
  # DEBUG fmtp_remote_codec_rate => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  if (session_161(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:23
  # PRED: 2 [100.0%]  (false,exec)
  smh_186 = session_161(D)->media_handle;
  # DEBUG smh => smh_186
  if (smh_186 == 0B)
    goto <bb 423>;
  else
    goto <bb 5>;
  # SUCC: 423 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:18
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#15 => &smh_186->engines
  # DEBUG a_engine => D#15
  # DEBUG D#14 => &smh_186->engines[1]
  # DEBUG v_engine => D#14
  codec_array_190 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_190
  D.44471_191 = smh_186->mparams;
  total_codecs_192 = D.44471_191->num_codecs;
  # DEBUG total_codecs => total_codecs_192
  D.44472_194 = strlen (r_sdp_193(D));
  D.44473_195 = (int) D.44472_194;
  parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);
  # DEBUG parser => parser_196
  if (parser_196 == 0B)
    goto <bb 423>;
  else
    goto <bb 6>;
  # SUCC: 423 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

  # BLOCK 6 freq:14
  # PRED: 5 [78.4%]  (false,exec)
  sdp_198 = sdp_session (parser_196);
  # DEBUG sdp => sdp_198
  if (sdp_198 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

  # BLOCK 7 freq:1
  # PRED: 6 [10.1%]  (true,exec)
  sdp_parser_free (parser_196);
  goto <bb 423>;
  # SUCC: 423 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:13
  # PRED: 6 [89.9%]  (false,exec)
  D.44478_200 = dtls_ok (session_161(D));
  if (D.44478_200 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;
  # SUCC: 9 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 9 freq:4
  # PRED: 8 [29.0%]  (true,exec)
  D.44481_201 = smh_186->session;
  D.44482_202 = D.44481_201->channel;
  tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_203
  if (tmp_203 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [69.8%]  (true,exec) 12 [30.2%]  (false,exec)

  # BLOCK 10 freq:3
  # PRED: 9 [69.8%]  (true,exec)
  D.44485_204 = switch_false (tmp_203);
  if (D.44485_204 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 11 freq:1
  # PRED: 10 [29.0%]  (true,exec)
  D.44481_205 = smh_186->session;
  D.44482_206 = D.44481_205->channel;
  switch_channel_clear_flag (D.44482_206, 111);
  D.44481_207 = smh_186->session;
  D.44482_208 = D.44481_207->channel;
  switch_channel_clear_flag (D.44482_208, 109);
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:13
  # PRED: 8 [71.0%]  (false,exec) 9 [30.2%]  (false,exec) 10 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  switch_core_session_parse_crypto_prefs (session_161(D));
  # DEBUG engine => D#15
  pmap_1458 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;
  # DEBUG pmap => pmap_1458
  goto <bb 14>;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:132
  # PRED: 15 [95.5%]  (true,exec)
  pmap_1459->negotiated = 0;
  pmap_1459->current = 0;
  pmap_1460 = pmap_1459->next;
  # DEBUG pmap => pmap_1460
  # SUCC: 14 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 14 freq:144
  # PRED: 12 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
  # DEBUG pmap => pmap_1459
  if (pmap_1459 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [95.5%]  (true,exec) 16 [4.5%]  (false,exec)

  # BLOCK 15 freq:138
  # PRED: 14 [95.5%]  (true,exec)
  D.47872_1461 = pmap_1459->allocated;
  if (D.47872_1461 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [95.5%]  (true,exec) 16 [4.5%]  (false,exec)

  # BLOCK 16 freq:13
  # PRED: 15 [4.5%]  (false,exec) 14 [4.5%]  (false,exec)
  # DEBUG engine => D#14
  pmap_1462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;
  # DEBUG pmap => pmap_1462
  goto <bb 18>;
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:132
  # PRED: 19 [95.5%]  (true,exec)
  pmap_1463->negotiated = 0;
  pmap_1463->current = 0;
  pmap_1464 = pmap_1463->next;
  # DEBUG pmap => pmap_1464
  # SUCC: 18 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 18 freq:144
  # PRED: 16 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
  # DEBUG pmap => pmap_1463
  if (pmap_1463 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

  # BLOCK 19 freq:138
  # PRED: 18 [95.5%]  (true,exec)
  D.47875_1465 = pmap_1463->allocated;
  if (D.47875_1465 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;
  # SUCC: 17 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

  # BLOCK 20 freq:13
  # PRED: 19 [4.5%]  (false,exec) 18 [4.5%]  (false,exec)
  if (proceed_209(D) != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

  # BLOCK 21 freq:11
  # PRED: 20 [85.0%]  (true,exec)
  *proceed_209(D) = 1;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:13
  # PRED: 20 [15.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);
  greedy_211 = D.44490_210 != 0;
  # DEBUG greedy => greedy_211
  D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);
  scrooge_213 = D.44491_212 != 0;
  # DEBUG scrooge => scrooge_213
  val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);
  # DEBUG val => val_214
  if (val_214 != 0B)
    goto <bb 23>;
  else
    goto <bb 27>;
  # SUCC: 23 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

  # BLOCK 23 freq:11
  # PRED: 22 [85.0%]  (true,exec)
  D.44494_215 = strcasecmp (val_214, "generous");
  if (D.44494_215 == 0)
    goto <bb 27>;
  else
    goto <bb 24>;
  # SUCC: 27 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 24 freq:5
  # PRED: 23 [50.0%]  (false,exec)
  D.44498_218 = strcasecmp (val_214, "greedy");
  if (D.44498_218 == 0)
    goto <bb 27>;
  else
    goto <bb 25>;
  # SUCC: 27 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:3
  # PRED: 24 [50.0%]  (false,exec)
  D.44502_221 = strcasecmp (val_214, "scrooge");
  if (D.44502_221 == 0)
    goto <bb 27>;
  else
    goto <bb 26>;
  # SUCC: 27 [71.0%]  (true,exec) 26 [29.0%]  (false,exec)

  # BLOCK 26 freq:1
  # PRED: 25 [29.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:13
  # PRED: 22 [15.0%]  (false,exec) 23 [50.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [71.0%]  (true,exec) 26 [100.0%]  (fallthru,exec)
  # greedy_47 = PHI <greedy_211(22), 0(23), 1(24), 1(25), greedy_211(26)>
  # scrooge_80 = PHI <scrooge_213(22), 0(23), 0(24), 1(25), scrooge_213(26)>
  # DEBUG scrooge => scrooge_80
  # DEBUG greedy => greedy_47
  D.44506_224 = sdp_198->sdp_origin;
  D.44507_225 = D.44506_224->o_username;
  D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);
  smh_186->origin = D.44508_226;
  D.44509_227 = smh_186->origin;
  if (D.44509_227 != 0B)
    goto <bb 28>;
  else
    goto <bb 34>;
  # SUCC: 28 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 28 freq:11
  # PRED: 27 [85.0%]  (true,exec)
  D.44471_228 = smh_186->mparams;
  D.44512_229 = D.44471_228->auto_rtp_bugs;
  D.44513_230 = (int) D.44512_229;
  D.44514_231 = D.44513_230 & 1;
  if (D.44514_231 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;
  # SUCC: 29 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

  # BLOCK 29 freq:5
  # PRED: 28 [50.0%]  (true,exec)
  D.44509_233 = smh_186->origin;
  D.44518_234 = strstr (D.44509_233, "CiscoSystemsSIP-GW-UserAgent");
  if (D.44518_234 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 [69.8%]  (true,exec) 31 [30.2%]  (false,exec)

  # BLOCK 30 freq:4
  # PRED: 29 [69.8%]  (true,exec)
  D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44522_236 = D.44521_235 | 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:11
  # PRED: 28 [50.0%]  (false,exec) 29 [30.2%]  (false,exec) 30 [100.0%]  (fallthru,exec)
  D.44471_237 = smh_186->mparams;
  D.44512_238 = D.44471_237->auto_rtp_bugs;
  D.44523_239 = D.44512_238 & 2;
  if (D.44523_239 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 32 freq:5
  # PRED: 31 [50.0%]  (true,exec)
  D.44509_240 = smh_186->origin;
  D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
  if (D.44526_241 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [69.8%]  (true,exec) 34 [30.2%]  (false,exec)

  # BLOCK 33 freq:4
  # PRED: 32 [69.8%]  (true,exec)
  D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44529_243 = D.44521_242 | 2;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:13
  # PRED: 27 [15.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  D.44530_244 = session_161(D)->channel;
  val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);
  # DEBUG val => val_245
  if (val_245 != 0B)
    goto <bb 35>;
  else
    goto <bb 37>;
  # SUCC: 35 [69.8%]  (true,exec) 37 [30.2%]  (false,exec)

  # BLOCK 35 freq:9
  # PRED: 34 [69.8%]  (true,exec)
  D.44533_246 = switch_true (val_245);
  if (D.44533_246 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

  # BLOCK 36 freq:3
  # PRED: 35 [29.0%]  (true,exec)
  D.44530_247 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_247, 93, 1);
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:13
  # PRED: 34 [30.2%]  (false,exec) 35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
  m_248 = sdp_198->sdp_media;
  # DEBUG m => m_248
  if (m_248 != 0B)
    goto <bb 38>;
  else
    goto <bb 43>;
  # SUCC: 38 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 38 freq:11
  # PRED: 37 [85.0%]  (true,exec)
  D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
  D.44541_250 = D.44540_249 & 6;
  D.44542_251 = D.44541_250 == 2;
  D.44543_252 = D.44541_250 == 0;
  D.44544_253 = D.44542_251 || D.44543_252;
  if (D.44544_253 != 0)
    goto <bb 42>;
  else
    goto <bb 39>;
  # SUCC: 42 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 39 freq:5
  # PRED: 38 [50.0%]  (false,exec)
  D.44546_254 = m_248->m_connections;
  if (D.44546_254 != 0B)
    goto <bb 40>;
  else
    goto <bb 43>;
  # SUCC: 40 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 40 freq:5
  # PRED: 39 [85.0%]  (true,exec)
  D.44546_255 = m_248->m_connections;
  D.44548_256 = D.44546_255->c_address;
  if (D.44548_256 != 0B)
    goto <bb 41>;
  else
    goto <bb 43>;
  # SUCC: 41 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 41 freq:4
  # PRED: 40 [85.0%]  (true,exec)
  # DEBUG __s2_len => 7
  D.44546_298 = m_248->m_connections;
  D.44548_299 = D.44546_298->c_address;
  __result_300 = __builtin_strcmp (D.44548_299, "0.0.0.0");
  if (__result_300 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [50.0%]  (true,exec) 43 [50.0%]  (false,exec)

  # BLOCK 42 freq:7
  # PRED: 38 [50.0%]  (true,exec) 41 [50.0%]  (true,exec)
  # DEBUG sendonly => 2
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:13
  # PRED: 37 [15.0%]  (false,exec) 39 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 41 [50.0%]  (false,exec) 42 [100.0%]  (fallthru,exec)
  # sendonly_42 = PHI <0(37), 0(39), 0(40), 0(41), 2(42)>
  # DEBUG sendonly => sendonly_42
  attr_303 = sdp_198->sdp_attributes;
  # DEBUG attr => attr_303
  goto <bb 64>;
  # SUCC: 64 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:128
  # PRED: 64 [91.0%]  (true,exec)
  D.44590_304 = attr_29->a_name;
  # DEBUG s => D.44590_304
  if (D.44590_304 == 0B)
    goto <bb 47>;
  else
    goto <bb 45>;
  # SUCC: 47 [15.0%]  (true,exec) 45 [85.0%]  (false,exec)

  # BLOCK 45 freq:109
  # PRED: 44 [85.0%]  (false,exec)
  D.47878_1466 = *D.44590_304;
  if (D.47878_1466 == 0)
    goto <bb 47>;
  else
    goto <bb 46>;
  # SUCC: 47 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

  # BLOCK 46 freq:55
  # PRED: 45 [50.0%]  (false,exec)
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:128
  # PRED: 44 [15.0%]  (true,exec) 45 [50.0%]  (true,exec) 46 [100.0%]  (fallthru,exec)
  # D.47877_1467 = PHI <1(44), 1(45), 0(46)>
  if (D.47877_1467 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;
  # SUCC: 48 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

  # BLOCK 48 freq:64
  # PRED: 47 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:64
  # PRED: 47 [50.0%]  (false,exec)
  D.44590_306 = attr_29->a_name;
  D.44594_307 = strcasecmp (D.44590_306, "sendonly");
  if (D.44594_307 == 0)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 [29.0%]  (true,exec) 51 [71.0%]  (false,exec)

  # BLOCK 50 freq:19
  # PRED: 49 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_309 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:46
  # PRED: 49 [71.0%]  (false,exec)
  D.44590_310 = attr_29->a_name;
  D.44598_311 = strcasecmp (D.44590_310, "inactive");
  if (D.44598_311 == 0)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [29.0%]  (true,exec) 53 [71.0%]  (false,exec)

  # BLOCK 52 freq:13
  # PRED: 51 [29.0%]  (true,exec)
  # DEBUG sendonly => 1
  D.44530_313 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:32
  # PRED: 51 [71.0%]  (false,exec)
  D.44590_314 = attr_29->a_name;
  D.44602_315 = strcasecmp (D.44590_314, "recvonly");
  if (D.44602_315 == 0)
    goto <bb 54>;
  else
    goto <bb 57>;
  # SUCC: 54 [29.0%]  (true,exec) 57 [71.0%]  (false,exec)

  # BLOCK 54 freq:9
  # PRED: 53 [29.0%]  (true,exec)
  D.44530_316 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);
  # DEBUG recvonly => 1
  D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44606_319 = switch_rtp_ready (D.44605_318);
  if (D.44606_319 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;
  # SUCC: 55 [50.0%]  (true,exec) 56 [50.0%]  (false,exec)

  # BLOCK 55 freq:5
  # PRED: 54 [50.0%]  (true,exec)
  D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_max_missed_packets (D.44605_320, 0);
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:5
  # PRED: 54 [50.0%]  (false,exec)
  D.44530_321 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);
  D.44530_322 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:23
  # PRED: 53 [71.0%]  (false,exec)
  if (sendonly_44 <= 1)
    goto <bb 58>;
  else
    goto <bb 59>;
  # SUCC: 58 [27.0%]  (true,exec) 59 [73.0%]  (false,exec)

  # BLOCK 58 freq:6
  # PRED: 57 [27.0%]  (true,exec)
  D.44590_323 = attr_29->a_name;
  D.44614_324 = strcasecmp (D.44590_323, "sendrecv");
  if (D.44614_324 == 0)
    goto <bb 63>;
  else
    goto <bb 59>;
  # SUCC: 63 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

  # BLOCK 59 freq:20
  # PRED: 57 [73.0%]  (false,exec) 58 [50.0%]  (false,exec)
  D.44590_326 = attr_29->a_name;
  D.44616_327 = strcasecmp (D.44590_326, "ptime");
  if (D.44616_327 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

  # BLOCK 60 freq:6
  # PRED: 59 [29.0%]  (true,exec)
  D.44619_328 = attr_29->a_value;
  # DEBUG __nptr => D.44619_328
  dptime_1468 = strtol (D.44619_328, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:14
  # PRED: 59 [71.0%]  (false,exec)
  D.44590_330 = attr_29->a_name;
  D.44621_331 = strcasecmp (D.44590_330, "maxptime");
  if (D.44621_331 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 62 freq:4
  # PRED: 61 [29.0%]  (true,exec)
  D.44619_332 = attr_29->a_value;
  # DEBUG __nptr => D.44619_332
  dmaxptime_1469 = strtol (D.44619_332, 0B, 10);
  # DEBUG dmaxptime => NULL
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:128
  # PRED: 48 [100.0%]  (fallthru,exec) 50 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec) 56 [100.0%]  (fallthru,exec) 58 [50.0%]  (true,exec) 60 [100.0%]  (fallthru,exec) 61 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec) 55 [100.0%]  (fallthru,exec)
  # dptime_36 = PHI <dptime_37(48), dptime_37(50), dptime_37(52), dptime_37(56), dptime_37(58), dptime_1468(60), dptime_37(61), dptime_37(62), dptime_37(55)>
  # dmaxptime_40 = PHI <dmaxptime_41(48), dmaxptime_41(50), dmaxptime_41(52), dmaxptime_41(56), dmaxptime_41(58), dmaxptime_41(60), dmaxptime_41(61), dmaxptime_1469(62), dmaxptime_41(55)>
  # sendonly_43 = PHI <sendonly_44(48), 1(50), 1(52), sendonly_44(56), 0(58), sendonly_44(60), sendonly_44(61), sendonly_44(62), sendonly_44(55)>
  # recvonly_45 = PHI <recvonly_46(48), recvonly_46(50), recvonly_46(52), 1(56), recvonly_46(58), recvonly_46(60), recvonly_46(61), recvonly_46(62), 1(55)>
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  attr_334 = attr_29->a_next;
  # DEBUG attr => attr_334
  # SUCC: 64 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 64 freq:141
  # PRED: 43 [100.0%]  (fallthru,exec) 63 [100.0%]  (fallthru,dfs_back,exec)
  # attr_29 = PHI <attr_303(43), attr_334(63)>
  # dptime_37 = PHI <0(43), dptime_36(63)>
  # dmaxptime_41 = PHI <0(43), dmaxptime_40(63)>
  # sendonly_44 = PHI <sendonly_42(43), sendonly_43(63)>
  # recvonly_46 = PHI <0(43), recvonly_45(63)>
  # DEBUG recvonly => recvonly_46
  # DEBUG sendonly => sendonly_44
  # DEBUG dmaxptime => dmaxptime_41
  # DEBUG dptime => dptime_37
  # DEBUG attr => attr_29
  if (attr_29 != 0B)
    goto <bb 44>;
  else
    goto <bb 65>;
  # SUCC: 44 [91.0%]  (true,exec) 65 [9.0%]  (false,exec)

  # BLOCK 65 freq:13
  # PRED: 64 [9.0%]  (false,exec)
  D.44624_335 = sendonly_44 != 1;
  D.44625_336 = recvonly_46 != 1;
  D.44626_337 = D.44624_335 && D.44625_336;
  if (D.44626_337 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

  # BLOCK 66 freq:4
  # PRED: 65 [29.0%]  (true,exec)
  D.44530_338 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:13
  # PRED: 65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
  D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);
  if (D.44631_339 == 0)
    goto <bb 68>;
  else
    goto <bb 74>;
  # SUCC: 68 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

  # BLOCK 68 freq:4
  # PRED: 67 [29.0%]  (true,exec)
  D.44530_340 = session_161(D)->channel;
  val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);
  # DEBUG val => val_341
  if (val_341 == 0B)
    goto <bb 70>;
  else
    goto <bb 69>;
  # SUCC: 70 [30.2%]  (true,exec) 69 [69.8%]  (false,exec)

  # BLOCK 69 freq:3
  # PRED: 68 [69.8%]  (false,exec)
  D.44635_342 = switch_true (val_341);
  if (D.44635_342 == 0)
    goto <bb 70>;
  else
    goto <bb 74>;
  # SUCC: 70 [50.0%]  (true,exec) 74 [50.0%]  (false,exec)

  # BLOCK 70 freq:2
  # PRED: 68 [30.2%]  (true,exec) 69 [50.0%]  (true,exec)
  D.44471_343 = smh_186->mparams;
  D.44636_344 = D.44471_343->hold_laps;
  if (D.44636_344 == 0)
    goto <bb 71>;
  else
    goto <bb 74>;
  # SUCC: 71 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

  # BLOCK 71 freq:1
  # PRED: 70 [29.0%]  (true,exec)
  D.44471_345 = smh_186->mparams;
  D.44636_346 = D.44471_345->hold_laps;
  D.44639_347 = D.44636_346 + 1;
  D.44471_345->hold_laps = D.44639_347;
  D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_44);
  if (D.44640_348 != 0)
    goto <bb 72>;
  else
    goto <bb 74>;
  # SUCC: 72 [29.0%]  (true,exec) 74 [71.0%]  (false,exec)

  # BLOCK 72
  # PRED: 71 [29.0%]  (true,exec)
  reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);
  # DEBUG reneg => reneg_349
  D.44530_350 = session_161(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;
  # SUCC: 73 [69.8%]  (true,exec) 74 [30.2%]  (false,exec)

  # BLOCK 73
  # PRED: 72 [69.8%]  (true,exec)
  reneg_352 = switch_true (val_351);
  # DEBUG reneg => reneg_352
  # SUCC: 74 [100.0%]  (fallthru,exec)

  # BLOCK 74 freq:13
  # PRED: 67 [71.0%]  (false,exec) 69 [50.0%]  (false,exec) 70 [71.0%]  (false,exec) 71 [71.0%]  (false,exec) 72 [30.2%]  (false,exec) 73 [100.0%]  (fallthru,exec)
  # reneg_81 = PHI <1(67), 1(69), 1(70), 1(71), reneg_349(72), reneg_352(73)>
  # DEBUG reneg => reneg_81
  if (reneg_81 != 0)
    goto <bb 75>;
  else
    goto <bb 77>;
  # SUCC: 75 [29.0%]  (true,exec) 77 [71.0%]  (false,exec)

  # BLOCK 75 freq:4
  # PRED: 74 [29.0%]  (true,exec)
  reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);
  # DEBUG reneg => reneg_353
  D.44530_354 = session_161(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;
  # SUCC: 76 [69.8%]  (true,exec) 77 [30.2%]  (false,exec)

  # BLOCK 76 freq:3
  # PRED: 75 [69.8%]  (true,exec)
  reneg_356 = switch_true (val_355);
  # DEBUG reneg => reneg_356
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 77 freq:13
  # PRED: 74 [71.0%]  (false,exec) 75 [30.2%]  (false,exec) 76 [100.0%]  (fallthru,exec)
  # reneg_82 = PHI <reneg_81(74), reneg_353(75), reneg_356(76)>
  # DEBUG reneg => reneg_82
  D.44649_357 = session_161(D)->bugs;
  if (D.44649_357 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;
  # SUCC: 78 [69.8%]  (true,exec) 79 [30.2%]  (false,exec)

  # BLOCK 78 freq:9
  # PRED: 77 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");
  # DEBUG reneg => 0
  # SUCC: 79 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:13
  # PRED: 77 [30.2%]  (false,exec) 78 [100.0%]  (fallthru,exec)
  # reneg_83 = PHI <reneg_82(77), 0(78)>
  # DEBUG reneg => reneg_83
  if (reneg_83 == 0)
    goto <bb 80>;
  else
    goto <bb 82>;
  # SUCC: 80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 80 freq:6
  # PRED: 79 [50.0%]  (true,exec)
  D.44655_359 = smh_186->num_negotiated_codecs;
  if (D.44655_359 != 0)
    goto <bb 81>;
  else
    goto <bb 82>;
  # SUCC: 81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 81 freq:3
  # PRED: 80 [50.0%]  (true,exec)
  codec_array_360 = &smh_186->negotiated_codecs;
  # DEBUG codec_array => codec_array_360
  total_codecs_361 = smh_186->num_negotiated_codecs;
  # DEBUG total_codecs => total_codecs_361
  goto <bb 84>;
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 82 freq:10
  # PRED: 79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
  if (reneg_83 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 83 freq:3
  # PRED: 82 [29.0%]  (true,exec)
  D.44471_362 = smh_186->mparams;
  D.44471_362->num_codecs = 0;
  switch_core_media_prepare_codecs (session_161(D), 0);
  codec_array_363 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_363
  D.44471_364 = smh_186->mparams;
  total_codecs_365 = D.44471_364->num_codecs;
  # DEBUG total_codecs => total_codecs_365
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:13
  # PRED: 81 [100.0%]  (fallthru,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
  # codec_array_84 = PHI <codec_array_360(81), codec_array_190(82), codec_array_363(83)>
  # total_codecs_85 = PHI <total_codecs_361(81), total_codecs_192(82), total_codecs_365(83)>
  # DEBUG total_codecs => total_codecs_85
  # DEBUG codec_array => codec_array_84
  D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));
  if (D.44661_366 != 0B)
    goto <bb 87>;
  else
    goto <bb 85>;
  # SUCC: 87 [85.0%]  (true,exec) 85 [15.0%]  (false,exec)

  # BLOCK 85 freq:2
  # PRED: 84 [15.0%]  (false,exec)
  D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));
  if (D.44663_367 != 0B)
    goto <bb 87>;
  else
    goto <bb 86>;
  # SUCC: 87 [93.3%]  (true,exec) 86 [6.7%]  (false,exec)

  # BLOCK 86
  # PRED: 85 [6.7%]  (false,exec)
  D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));
  if (D.44665_368 != 0B)
    goto <bb 87>;
  else
    goto <bb 88>;
  # SUCC: 87 [85.0%]  (true,exec) 88 [15.0%]  (false,exec)

  # BLOCK 87 freq:13
  # PRED: 84 [85.0%]  (true,exec) 85 [93.3%]  (true,exec) 86 [85.0%]  (true,exec)
  D.44530_369 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 88 freq:13
  # PRED: 86 [15.0%]  (false,exec) 87 [100.0%]  (fallthru,exec)
  switch_core_media_find_zrtp_hash (session_161(D), sdp_198);
  switch_core_media_pass_zrtp_hash (session_161(D));
  check_ice (smh_186, 0, sdp_198, 0B);
  check_ice (smh_186, 1, sdp_198, 0B);
  m_370 = sdp_198->sdp_media;
  # DEBUG m => m_370
  goto <bb 419>;
  # SUCC: 419 [100.0%]  (fallthru,exec)

  # BLOCK 89 freq:339
  # PRED: 419 [98.0%]  (true,exec)
  # DEBUG ptime => dptime_37
  # DEBUG maxptime => dmaxptime_41
  D.44666_373 = m_28->m_proto;
  if (D.44666_373 == 261)
    goto <bb 90>;
  else
    goto <bb 91>;
  # SUCC: 90 [13.7%]  (true,exec) 91 [86.3%]  (false,exec)

  # BLOCK 90 freq:47
  # PRED: 89 [13.7%]  (true,exec)
  got_webrtc_374 = got_webrtc_79 + 1;
  # DEBUG got_webrtc => got_webrtc_374
  switch_core_session_set_ice (session_161(D));
  # SUCC: 91 [100.0%]  (fallthru,exec)

  # BLOCK 91 freq:339
  # PRED: 89 [86.3%]  (false,exec) 90 [100.0%]  (fallthru,exec)
  # got_webrtc_78 = PHI <got_webrtc_79(89), got_webrtc_374(90)>
  # DEBUG got_webrtc => got_webrtc_78
  D.44669_375 = m_28->m_proto_name;
  if (D.44669_375 != 0B)
    goto <bb 92>;
  else
    goto <bb 94>;
  # SUCC: 92 [85.0%]  (true,exec) 94 [15.0%]  (false,exec)

  # BLOCK 92 freq:289
  # PRED: 91 [85.0%]  (true,exec)
  D.44669_376 = m_28->m_proto_name;
  D.44672_377 = strcasecmp (D.44669_376, "UDP/TLS/RTP/SAVPF");
  if (D.44672_377 == 0)
    goto <bb 93>;
  else
    goto <bb 94>;
  # SUCC: 93 [29.0%]  (true,exec) 94 [71.0%]  (false,exec)

  # BLOCK 93 freq:84
  # PRED: 92 [29.0%]  (true,exec)
  D.44530_378 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_378, 107, 1);
  # SUCC: 94 [100.0%]  (fallthru,exec)

  # BLOCK 94 freq:339
  # PRED: 91 [15.0%]  (false,exec) 92 [71.0%]  (false,exec) 93 [100.0%]  (fallthru,exec)
  D.44675_379 = m_28->m_proto;
  D.44676_380 = D.44675_379 == 257;
  D.44677_381 = D.44675_379 == 261;
  D.44678_382 = D.44676_380 || D.44677_381;
  if (D.44678_382 != 0)
    goto <bb 95>;
  else
    goto <bb 97>;
  # SUCC: 95 [50.0%]  (true,exec) 97 [50.0%]  (false,exec)

  # BLOCK 95 freq:170
  # PRED: 94 [50.0%]  (true,exec)
  D.44681_383 = m_28->m_type;
  if (D.44681_383 == 2)
    goto <bb 96>;
  else
    goto <bb 102>;
  # SUCC: 96 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

  # BLOCK 96 freq:48
  # PRED: 95 [28.0%]  (true,exec)
  got_savp_384 = got_savp_75 + 1;
  # DEBUG got_savp => got_savp_384
  goto <bb 102>;
  # SUCC: 102 [100.0%]  (fallthru,exec)

  # BLOCK 97 freq:170
  # PRED: 94 [50.0%]  (false,exec)
  D.44666_386 = m_28->m_proto;
  if (D.44666_386 == 256)
    goto <bb 98>;
  else
    goto <bb 100>;
  # SUCC: 98 [28.0%]  (true,exec) 100 [72.0%]  (false,exec)

  # BLOCK 98 freq:48
  # PRED: 97 [28.0%]  (true,exec)
  D.44681_387 = m_28->m_type;
  if (D.44681_387 == 2)
    goto <bb 99>;
  else
    goto <bb 102>;
  # SUCC: 99 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

  # BLOCK 99 freq:13
  # PRED: 98 [28.0%]  (true,exec)
  got_avp_388 = got_avp_69 + 1;
  # DEBUG got_avp => got_avp_388
  goto <bb 102>;
  # SUCC: 102 [100.0%]  (fallthru,exec)

  # BLOCK 100 freq:122
  # PRED: 97 [72.0%]  (false,exec)
  D.44666_390 = m_28->m_proto;
  if (D.44666_390 == 258)
    goto <bb 101>;
  else
    goto <bb 102>;
  # SUCC: 101 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

  # BLOCK 101 freq:34
  # PRED: 100 [28.0%]  (true,exec)
  got_udptl_391 = got_udptl_77 + 1;
  # DEBUG got_udptl => got_udptl_391
  # SUCC: 102 [100.0%]  (fallthru,exec)

  # BLOCK 102 freq:339
  # PRED: 95 [72.0%]  (false,exec) 98 [72.0%]  (false,exec) 100 [72.0%]  (false,exec) 101 [100.0%]  (fallthru,exec) 96 [100.0%]  (fallthru,exec) 99 [100.0%]  (fallthru,exec)
  # got_avp_68 = PHI <got_avp_69(95), got_avp_69(98), got_avp_69(100), got_avp_69(101), got_avp_69(96), got_avp_388(99)>
  # got_savp_74 = PHI <got_savp_75(95), got_savp_75(98), got_savp_75(100), got_savp_75(101), got_savp_384(96), got_savp_75(99)>
  # got_udptl_76 = PHI <got_udptl_77(95), got_udptl_77(98), got_udptl_77(100), got_udptl_391(101), got_udptl_77(96), got_udptl_77(99)>
  # DEBUG got_udptl => got_udptl_76
  # DEBUG got_savp => got_savp_74
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_68
  if (got_udptl_76 != 0)
    goto <bb 103>;
  else
    goto <bb 136>;
  # SUCC: 103 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

  # BLOCK 103 freq:170
  # PRED: 102 [50.0%]  (true,exec)
  D.44681_392 = m_28->m_type;
  if (D.44681_392 == 8)
    goto <bb 104>;
  else
    goto <bb 136>;
  # SUCC: 104 [28.0%]  (true,exec) 136 [72.0%]  (false,exec)

  # BLOCK 104 freq:48
  # PRED: 103 [28.0%]  (true,exec)
  D.44697_393 = m_28->m_port;
  if (D.44697_393 != 0)
    goto <bb 105>;
  else
    goto <bb 136>;
  # SUCC: 105 [2.0%]  (true,exec) 136 [98.0%]  (false,exec)

  # BLOCK 105 freq:1
  # PRED: 104 [2.0%]  (true,exec)
  t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_28);
  # DEBUG t38_options => t38_options_394
  D.44530_395 = session_161(D)->channel;
  D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);
  if (D.44699_396 != 0)
    goto <bb 420> (done);
  else
    goto <bb 106>;
  # SUCC: 420 [71.0%]  (true,exec) 106 [29.0%]  (false,exec)

  # BLOCK 106
  # PRED: 105 [29.0%]  (false,exec)
  D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);
  D.44703_399 = switch_true (D.44702_398);
  if (D.44703_399 != 0)
    goto <bb 107>;
  else
    goto <bb 108>;
  # SUCC: 107 [50.0%]  (true,exec) 108 [50.0%]  (false,exec)

  # BLOCK 107
  # PRED: 106 [50.0%]  (true,exec)
  D.44530_400 = session_161(D)->channel;
  switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 108
  # PRED: 106 [50.0%]  (false,exec)
  var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);
  # DEBUG var => var_402
  D.44481_403 = smh_186->session;
  D.44482_404 = D.44481_403->channel;
  D.44706_405 = switch_channel_test_flag (D.44482_404, 101);
  pass_406 = (int) D.44706_405;
  # DEBUG pass => pass_406
  D.44530_407 = session_161(D)->channel;
  D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);
  if (D.44707_408 != 0)
    goto <bb 109>;
  else
    goto <bb 111>;
  # SUCC: 109 [50.0%]  (true,exec) 111 [50.0%]  (false,exec)

  # BLOCK 109
  # PRED: 108 [50.0%]  (true,exec)
  if (proceed_209(D) != 0B)
    goto <bb 110>;
  else
    goto <bb 111>;
  # SUCC: 110 [85.0%]  (true,exec) 111 [15.0%]  (false,exec)

  # BLOCK 110
  # PRED: 109 [85.0%]  (true,exec)
  *proceed_209(D) = 0;
  # SUCC: 111 [100.0%]  (fallthru,exec)

  # BLOCK 111
  # PRED: 108 [50.0%]  (false,exec) 109 [15.0%]  (false,exec) 110 [100.0%]  (fallthru,exec)
  if (var_402 != 0B)
    goto <bb 112>;
  else
    goto <bb 115>;
  # SUCC: 112 [69.8%]  (true,exec) 115 [30.2%]  (false,exec)

  # BLOCK 112
  # PRED: 111 [69.8%]  (true,exec)
  pass_409 = switch_true (var_402);
  # DEBUG pass => pass_409
  if (pass_409 == 0)
    goto <bb 113>;
  else
    goto <bb 115>;
  # SUCC: 113 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

  # BLOCK 113
  # PRED: 112 [50.0%]  (true,exec)
  D.44716_410 = strcasecmp (var_402, "once");
  if (D.44716_410 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;
  # SUCC: 114 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

  # BLOCK 114
  # PRED: 113 [50.0%]  (true,exec)
  # DEBUG pass => 2
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 115
  # PRED: 111 [30.2%]  (false,exec) 112 [50.0%]  (false,exec) 113 [50.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
  # pass_126 = PHI <pass_406(111), pass_409(112), pass_409(113), 2(114)>
  # DEBUG pass => pass_126
  if (pass_126 == 2)
    goto <bb 116>;
  else
    goto <bb 117>;
  # SUCC: 116 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

  # BLOCK 116
  # PRED: 115 [28.0%]  (true,exec)
  D.44481_412 = smh_186->session;
  D.44482_413 = D.44481_412->channel;
  D.44723_414 = switch_channel_test_flag (D.44482_413, 101);
  if (D.44723_414 != 0)
    goto <bb 122>;
  else
    goto <bb 117>;
  # SUCC: 122 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

  # BLOCK 117
  # PRED: 115 [72.0%]  (false,exec) 116 [50.0%]  (false,exec)
  D.44530_415 = session_161(D)->channel;
  D.44724_416 = switch_channel_test_flag (D.44530_415, 103);
  if (D.44724_416 == 0)
    goto <bb 122>;
  else
    goto <bb 118>;
  # SUCC: 122 [71.0%]  (true,exec) 118 [29.0%]  (false,exec)

  # BLOCK 118
  # PRED: 117 [29.0%]  (false,exec)
  D.44530_417 = session_161(D)->channel;
  D.44726_418 = switch_channel_test_flag (D.44530_417, 15);
  if (D.44726_418 != 0)
    goto <bb 122>;
  else
    goto <bb 119>;
  # SUCC: 122 [71.0%]  (true,exec) 119 [29.0%]  (false,exec)

  # BLOCK 119
  # PRED: 118 [29.0%]  (false,exec)
  D.44530_419 = session_161(D)->channel;
  D.44728_420 = switch_channel_test_flag (D.44530_419, 29);
  if (D.44728_420 != 0)
    goto <bb 122>;
  else
    goto <bb 120>;
  # SUCC: 122 [71.0%]  (true,exec) 120 [29.0%]  (false,exec)

  # BLOCK 120
  # PRED: 119 [29.0%]  (false,exec)
  D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44730_422 = switch_rtp_ready (D.44605_421);
  if (D.44730_422 == 0)
    goto <bb 121>;
  else
    goto <bb 122>;
  # SUCC: 121 [50.0%]  (true,exec) 122 [50.0%]  (false,exec)

  # BLOCK 121
  # PRED: 120 [50.0%]  (true,exec)
  # SUCC: 122 [100.0%]  (fallthru)

  # BLOCK 122
  # PRED: 120 [50.0%]  (false,exec) 117 [71.0%]  (true,exec) 116 [50.0%]  (true,exec) 121 [100.0%]  (fallthru) 119 [71.0%]  (true,exec) 118 [71.0%]  (true,exec)
  # pass_127 = PHI <pass_126(120), 0(117), 0(116), 0(121), 0(119), 0(118)>
  # DEBUG pass => pass_127
  if (pass_127 != 0)
    goto <bb 123>;
  else
    goto <bb 420> (done);
  # SUCC: 123 [29.0%]  (true,exec) 420 [71.0%]  (false,exec)

  # BLOCK 123
  # PRED: 122 [29.0%]  (true,exec)
  D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);
  if (D.44733_424 == 0)
    goto <bb 124>;
  else
    goto <bb 420> (done);
  # SUCC: 124 [29.0%]  (true,exec) 420 [71.0%]  (false,exec)

  # BLOCK 124
  # PRED: 123 [29.0%]  (true,exec)
  other_session.89_425 = other_session;
  other_channel_426 = switch_core_session_get_channel (other_session.89_425);
  # DEBUG other_channel => other_channel_426
  D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_host_428 = switch_rtp_get_remote_host (D.44605_427);
  # DEBUG remote_host => remote_host_428
  D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_port_430 = switch_rtp_get_remote_port (D.44605_429);
  # DEBUG remote_port => remote_port_430
  tmp = "";
  D.44737_431 = switch_channel_test_flag (other_channel_426, 1);
  if (D.44737_431 == 0)
    goto <bb 125>;
  else
    goto <bb 126>;
  # SUCC: 125 [50.0%]  (true,exec) 126 [50.0%]  (false,exec)

  # BLOCK 125
  # PRED: 124 [50.0%]  (true,exec)
  D.44530_432 = session_161(D)->channel;
  D.44740_433 = switch_channel_get_name (D.44530_432);
  D.44741_434 = switch_channel_get_name (other_channel_426);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);
  other_session.89_435 = other_session;
  switch_core_session_rwunlock (other_session.89_435);
  # DEBUG pass => 0
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 126
  # PRED: 124 [50.0%]  (false,exec)
  D.44530_438 = session_161(D)->channel;
  D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);
  D.44743_440 = switch_true (D.44742_439);
  if (D.44743_440 != 0)
    goto <bb 127>;
  else
    goto <bb 129>;
  # SUCC: 127 [29.0%]  (true,exec) 129 [71.0%]  (false,exec)

  # BLOCK 127
  # PRED: 126 [29.0%]  (true,exec)
  D.44530_441 = session_161(D)->channel;
  D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);
  D.44747_443 = switch_true (D.44746_442);
  if (D.44747_443 != 0)
    goto <bb 128>;
  else
    goto <bb 129>;
  # SUCC: 128 [29.0%]  (true,exec) 129 [71.0%]  (false,exec)

  # BLOCK 128
  # PRED: 127 [29.0%]  (true,exec)
  switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);
  # SUCC: 129 [100.0%]  (fallthru,exec)

  # BLOCK 129
  # PRED: 126 [71.0%]  (false,exec) 127 [71.0%]  (false,exec) 128 [100.0%]  (fallthru,exec)
  D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44751_445 = t38_options_394->remote_ip;
  D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);
  D.44750_444->remote_sdp_ip = D.44752_446;
  D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44753_448 = t38_options_394->remote_port;
  D.44750_447->remote_sdp_port = D.44753_448;
  D.44756_449 = remote_host_428 != 0B;
  D.44757_450 = remote_port_430 != 0;
  D.44758_451 = D.44756_449 && D.44757_450;
  if (D.44758_451 != 0)
    goto <bb 130>;
  else
    goto <bb 133>;
  # SUCC: 130 [71.0%]  (true,exec) 133 [29.0%]  (false,exec)

  # BLOCK 130
  # PRED: 129 [71.0%]  (true,exec)
  D.44750_452 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_453 = D.44750_452->remote_sdp_ip;
  D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
  if (D.39032_454 == 0)
    goto <bb 131>;
  else
    goto <bb 133>;
  # SUCC: 131 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

  # BLOCK 131
  # PRED: 130 [50.0%]  (true,exec)
  D.44750_455 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_456 = D.44750_455->remote_sdp_port;
  if (D.44762_456 == remote_port_430)
    goto <bb 132>;
  else
    goto <bb 133>;
  # SUCC: 132 [13.7%]  (true,exec) 133 [86.3%]  (false,exec)

  # BLOCK 132
  # PRED: 131 [13.7%]  (true,exec)
  D.44530_457 = session_161(D)->channel;
  D.44764_458 = switch_channel_get_name (D.44530_457);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);
  goto <bb 135>;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 133
  # PRED: 129 [29.0%]  (false,exec) 130 [50.0%]  (false,exec) 131 [86.3%]  (false,exec)
  err = 0B;
  D.44530_459 = session_161(D)->channel;
  D.44765_460 = switch_channel_get_name (D.44530_459);
  D.44766_461 = (int) remote_port_430;
  D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_463 = D.44750_462->remote_sdp_ip;
  D.44750_464 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_465 = D.44750_464->remote_sdp_port;
  D.44767_466 = (int) D.44762_465;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);
  D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_468 = D.44750_467->remote_sdp_port;
  D.44767_469 = (int) D.44762_468;
  switch_snprintf (&tmp, 32, "%d", D.44767_469);
  D.44530_470 = session_161(D)->channel;
  D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_472 = D.44750_471->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);
  D.44530_473 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);
  D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_476 = D.44750_475->remote_sdp_ip;
  D.44750_477 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_478 = D.44750_477->remote_sdp_port;
  D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);
  if (D.44768_479 != 0)
    goto <bb 134>;
  else
    goto <bb 135>;
  # SUCC: 134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 134
  # PRED: 133 [29.0%]  (true,exec)
  err.90_480 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);
  switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 135
  # PRED: 132 [100.0%]  (fallthru,exec) 133 [71.0%]  (false,exec) 134 [100.0%]  (fallthru,exec)
  other_session.89_481 = other_session;
  switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);
  D.44481_482 = smh_186->session;
  D.44482_483 = D.44481_482->channel;
  switch_channel_set_flag_value (D.44482_483, 101, 1);
  other_session.89_484 = other_session;
  D.44772_485 = other_session.89_484->channel;
  switch_channel_set_flag_value (D.44772_485, 101, 1);
  other_session.89_486 = other_session;
  msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);
  # DEBUG msg => msg_487
  msg_487->message_id = 21;
  msg_487->from = "src/switch_core_media.c";
  other_session.89_488 = other_session;
  D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);
  msg_487->string_arg = D.44773_489;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));
  other_session.89_490 = other_session;
  switch_core_session_queue_message (other_session.89_490, msg_487);
  other_session.89_491 = other_session;
  switch_core_session_rwunlock (other_session.89_491);
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 136 freq:338
  # PRED: 102 [50.0%]  (false,exec) 103 [72.0%]  (false,exec) 104 [98.0%]  (false,exec)
  D.44681_493 = m_28->m_type;
  if (D.44681_493 == 2)
    goto <bb 137>;
  else
    goto <bb 323>;
  # SUCC: 137 [28.0%]  (true,exec) 323 [72.0%]  (false,exec)

  # BLOCK 137 freq:95
  # PRED: 136 [28.0%]  (true,exec)
  D.44697_494 = m_28->m_port;
  D.44777_495 = D.44697_494 != 0;
  D.44778_496 = got_audio_67 == 0;
  D.44779_497 = D.44777_495 && D.44778_496;
  if (D.44779_497 != 0)
    goto <bb 138>;
  else
    goto <bb 323>;
  # SUCC: 138 [29.0%]  (true,exec) 323 [71.0%]  (false,exec)

  # BLOCK 138 freq:27
  # PRED: 137 [29.0%]  (true,exec)
  D.44781_498 = switch_rtp_has_dtls ();
  if (D.44781_498 != 0)
    goto <bb 139>;
  else
    goto <bb 149>;
  # SUCC: 139 [29.0%]  (true,exec) 149 [71.0%]  (false,exec)

  # BLOCK 139 freq:8
  # PRED: 138 [29.0%]  (true,exec)
  D.44784_499 = dtls_ok (session_161(D));
  if (D.44784_499 != 0)
    goto <bb 140>;
  else
    goto <bb 149>;
  # SUCC: 140 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

  # BLOCK 140 freq:4
  # PRED: 139 [50.0%]  (true,exec)
  attr_500 = m_28->m_attributes;
  # DEBUG attr => attr_500
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 141 freq:40
  # PRED: 148 [91.0%]  (true,exec)
  D.44590_501 = attr_30->a_name;
  D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
  if (D.44787_502 == 0)
    goto <bb 142>;
  else
    goto <bb 147>;
  # SUCC: 142 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 142 freq:20
  # PRED: 141 [50.0%]  (true,exec)
  D.44619_503 = attr_30->a_value;
  # DEBUG s => D.44619_503
  if (D.44619_503 == 0B)
    goto <bb 145>;
  else
    goto <bb 143>;
  # SUCC: 145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

  # BLOCK 143 freq:17
  # PRED: 142 [85.0%]  (false,exec)
  D.47888_1470 = *D.44619_503;
  if (D.47888_1470 == 0)
    goto <bb 145>;
  else
    goto <bb 144>;
  # SUCC: 145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

  # BLOCK 144 freq:9
  # PRED: 143 [50.0%]  (false,exec)
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:20
  # PRED: 142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
  # D.47887_1471 = PHI <1(142), 1(143), 0(144)>
  if (D.47887_1471 == 0)
    goto <bb 146>;
  else
    goto <bb 147>;
  # SUCC: 146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 146 freq:10
  # PRED: 145 [50.0%]  (true,exec)
  # DEBUG got_crypto => 1
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 147 freq:40
  # PRED: 141 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
  # got_crypto_50 = PHI <got_crypto_51(141), got_crypto_51(145), 1(146)>
  # DEBUG got_crypto => got_crypto_50
  attr_506 = attr_30->a_next;
  # DEBUG attr => attr_506
  # SUCC: 148 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 148 freq:44
  # PRED: 140 [100.0%]  (fallthru,exec) 147 [100.0%]  (fallthru,dfs_back,exec)
  # attr_30 = PHI <attr_500(140), attr_506(147)>
  # got_crypto_51 = PHI <got_crypto_56(140), got_crypto_50(147)>
  # DEBUG got_crypto => got_crypto_51
  # DEBUG attr => attr_30
  if (attr_30 != 0B)
    goto <bb 141>;
  else
    goto <bb 149>;
  # SUCC: 141 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

  # BLOCK 149 freq:27
  # PRED: 138 [71.0%]  (false,exec) 139 [50.0%]  (false,exec) 148 [9.0%]  (false,exec)
  # got_crypto_52 = PHI <got_crypto_56(138), got_crypto_56(139), got_crypto_51(148)>
  # DEBUG got_crypto => got_crypto_52
  attr_507 = m_28->m_attributes;
  # DEBUG attr => attr_507
  goto <bb 172>;
  # SUCC: 172 [100.0%]  (fallthru,exec)

  # BLOCK 150 freq:581
  # PRED: 172 [95.5%]  (true,exec)
  D.44590_508 = attr_31->a_name;
  D.44795_509 = strcasecmp (D.44590_508, "rtcp");
  if (D.44795_509 == 0)
    goto <bb 151>;
  else
    goto <bb 154>;
  # SUCC: 151 [50.0%]  (true,exec) 154 [50.0%]  (false,exec)

  # BLOCK 151 freq:290
  # PRED: 150 [50.0%]  (true,exec)
  D.44619_510 = attr_31->a_value;
  if (D.44619_510 != 0B)
    goto <bb 152>;
  else
    goto <bb 154>;
  # SUCC: 152 [69.8%]  (true,exec) 154 [30.2%]  (false,exec)

  # BLOCK 152 freq:203
  # PRED: 151 [69.8%]  (true,exec)
  D.44530_511 = session_161(D)->channel;
  D.44619_512 = attr_31->a_value;
  switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_512, 1);
  D.44619_513 = attr_31->a_value;
  # DEBUG __nptr => D.44619_513
  D.47891_1472 = strtol (D.44619_513, 0B, 10);
  D.44799_515 = (short unsigned int) D.47891_1472;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;
  D.44471_516 = smh_186->mparams;
  D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
  if (D.44800_517 == 0B)
    goto <bb 153>;
  else
    goto <bb 171>;
  # SUCC: 153 [15.0%]  (true,exec) 171 [85.0%]  (false,exec)

  # BLOCK 153 freq:30
  # PRED: 152 [15.0%]  (true,exec)
  D.44471_518 = smh_186->mparams;
  D.44471_518->rtcp_audio_interval_msec = "5000";
  goto <bb 171>;
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 154 freq:378
  # PRED: 150 [50.0%]  (false,exec) 151 [30.2%]  (false,exec)
  D.44590_519 = attr_31->a_name;
  D.44805_520 = strcasecmp (D.44590_519, "ptime");
  if (D.44805_520 == 0)
    goto <bb 155>;
  else
    goto <bb 157>;
  # SUCC: 155 [50.0%]  (true,exec) 157 [50.0%]  (false,exec)

  # BLOCK 155 freq:189
  # PRED: 154 [50.0%]  (true,exec)
  D.44619_521 = attr_31->a_value;
  if (D.44619_521 != 0B)
    goto <bb 156>;
  else
    goto <bb 157>;
  # SUCC: 156 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

  # BLOCK 156 freq:132
  # PRED: 155 [69.8%]  (true,exec)
  D.44619_522 = attr_31->a_value;
  # DEBUG __nptr => D.44619_522
  ptime_1473 = strtol (D.44619_522, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 171>;
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 157 freq:246
  # PRED: 154 [50.0%]  (false,exec) 155 [30.2%]  (false,exec)
  D.44590_524 = attr_31->a_name;
  D.44810_525 = strcasecmp (D.44590_524, "maxptime");
  if (D.44810_525 == 0)
    goto <bb 158>;
  else
    goto <bb 160>;
  # SUCC: 158 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

  # BLOCK 158 freq:123
  # PRED: 157 [50.0%]  (true,exec)
  D.44619_526 = attr_31->a_value;
  if (D.44619_526 != 0B)
    goto <bb 159>;
  else
    goto <bb 160>;
  # SUCC: 159 [69.8%]  (true,exec) 160 [30.2%]  (false,exec)

  # BLOCK 159 freq:86
  # PRED: 158 [69.8%]  (true,exec)
  D.44619_527 = attr_31->a_value;
  # DEBUG __nptr => D.44619_527
  maxptime_1474 = strtol (D.44619_527, 0B, 10);
  # DEBUG maxptime => NULL
  goto <bb 171>;
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 160 freq:160
  # PRED: 157 [50.0%]  (false,exec) 158 [30.2%]  (false,exec)
  if (got_crypto_54 <= 0)
    goto <bb 161>;
  else
    goto <bb 171>;
  # SUCC: 161 [27.0%]  (true,exec) 171 [73.0%]  (false,exec)

  # BLOCK 161 freq:43
  # PRED: 160 [27.0%]  (true,exec)
  D.44590_529 = attr_31->a_name;
  D.44815_530 = strcasecmp (D.44590_529, "crypto");
  if (D.44815_530 == 0)
    goto <bb 162>;
  else
    goto <bb 171>;
  # SUCC: 162 [50.0%]  (true,exec) 171 [50.0%]  (false,exec)

  # BLOCK 162 freq:22
  # PRED: 161 [50.0%]  (true,exec)
  D.44619_531 = attr_31->a_value;
  # DEBUG s => D.44619_531
  if (D.44619_531 == 0B)
    goto <bb 165>;
  else
    goto <bb 163>;
  # SUCC: 165 [15.0%]  (true,exec) 163 [85.0%]  (false,exec)

  # BLOCK 163 freq:18
  # PRED: 162 [85.0%]  (false,exec)
  D.47901_1475 = *D.44619_531;
  if (D.47901_1475 == 0)
    goto <bb 165>;
  else
    goto <bb 164>;
  # SUCC: 165 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

  # BLOCK 164 freq:9
  # PRED: 163 [50.0%]  (false,exec)
  # SUCC: 165 [100.0%]  (fallthru,exec)

  # BLOCK 165 freq:22
  # PRED: 162 [15.0%]  (true,exec) 163 [50.0%]  (true,exec) 164 [100.0%]  (fallthru,exec)
  # D.47900_1476 = PHI <1(162), 1(163), 0(164)>
  if (D.47900_1476 == 0)
    goto <bb 166>;
  else
    goto <bb 171>;
  # SUCC: 166 [50.0%]  (true,exec) 171 [50.0%]  (false,exec)

  # BLOCK 166 freq:11
  # PRED: 165 [50.0%]  (true,exec)
  D.44471_533 = smh_186->mparams;
  D.44821_534 = D.44471_533->ndlb;
  D.44822_535 = D.44821_534 & 4;
  if (D.44822_535 == 0)
    goto <bb 167>;
  else
    goto <bb 170>;
  # SUCC: 167 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 167 freq:5
  # PRED: 166 [50.0%]  (true,exec)
  D.44530_536 = session_161(D)->channel;
  D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);
  D.44826_538 = switch_true (D.44825_537);
  if (D.44826_538 == 0)
    goto <bb 168>;
  else
    goto <bb 170>;
  # SUCC: 168 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 168 freq:3
  # PRED: 167 [50.0%]  (true,exec)
  D.44666_539 = m_28->m_proto;
  D.44829_540 = D.44666_539 != 257;
  D.44830_541 = got_webrtc_78 == 0;
  D.44831_542 = D.44829_540 && D.44830_541;
  if (D.44831_542 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;
  # SUCC: 169 [4.5%]  (true,exec) 170 [95.5%]  (false,exec)

  # BLOCK 169
  # PRED: 168 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 170 freq:11
  # PRED: 166 [50.0%]  (false,exec) 167 [50.0%]  (false,exec) 168 [95.5%]  (false,exec)
  crypto_544 = attr_31->a_value;
  # DEBUG crypto => crypto_544
  # DEBUG __nptr => crypto_544
  crypto_tag_1477 = strtol (crypto_544, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, crypto_544, crypto_tag_1477, sdp_type_546(D));
  # DEBUG got_crypto => got_crypto_547
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 171 freq:581
  # PRED: 153 [100.0%]  (fallthru,exec) 156 [100.0%]  (fallthru,exec) 159 [100.0%]  (fallthru,exec) 160 [73.0%]  (false,exec) 161 [50.0%]  (false,exec) 165 [50.0%]  (false,exec) 170 [100.0%]  (fallthru,exec) 152 [85.0%]  (false,exec)
  # ptime_34 = PHI <ptime_35(153), ptime_1473(156), ptime_35(159), ptime_35(160), ptime_35(161), ptime_35(165), ptime_35(170), ptime_35(152)>
  # maxptime_38 = PHI <maxptime_39(153), maxptime_39(156), maxptime_1474(159), maxptime_39(160), maxptime_39(161), maxptime_39(165), maxptime_39(170), maxptime_39(152)>
  # got_crypto_53 = PHI <got_crypto_54(153), got_crypto_54(156), got_crypto_54(159), got_crypto_54(160), got_crypto_54(161), got_crypto_54(165), got_crypto_547(170), got_crypto_54(152)>
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  attr_548 = attr_31->a_next;
  # DEBUG attr => attr_548
  # SUCC: 172 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 172 freq:608
  # PRED: 149 [100.0%]  (fallthru,exec) 171 [100.0%]  (fallthru,dfs_back,exec)
  # attr_31 = PHI <attr_507(149), attr_548(171)>
  # ptime_35 = PHI <dptime_37(149), ptime_34(171)>
  # maxptime_39 = PHI <dmaxptime_41(149), maxptime_38(171)>
  # got_crypto_54 = PHI <got_crypto_52(149), got_crypto_53(171)>
  # DEBUG got_crypto => got_crypto_54
  # DEBUG maxptime => maxptime_39
  # DEBUG ptime => ptime_35
  # DEBUG attr => attr_31
  if (attr_31 != 0B)
    goto <bb 150>;
  else
    goto <bb 173>;
  # SUCC: 150 [95.5%]  (true,exec) 173 [4.5%]  (false,exec)

  # BLOCK 173 freq:27
  # PRED: 172 [4.5%]  (false,exec)
  D.44834_549 = got_crypto_54 == -1;
  D.44835_550 = got_savp_74 != 0;
  D.44836_551 = D.44834_549 && D.44835_550;
  if (D.44836_551 != 0)
    goto <bb 174>;
  else
    goto <bb 176>;
  # SUCC: 174 [50.0%]  (true,exec) 176 [50.0%]  (false,exec)

  # BLOCK 174 freq:14
  # PRED: 173 [50.0%]  (true,exec)
  D.44839_552 = got_avp_68 | got_webrtc_78;
  if (D.44839_552 == 0)
    goto <bb 175>;
  else
    goto <bb 176>;
  # SUCC: 175 [2.0%]  (true,exec) 176 [98.0%]  (false,exec)

  # BLOCK 175
  # PRED: 174 [2.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 176 freq:27
  # PRED: 173 [50.0%]  (false,exec) 174 [98.0%]  (false,exec)
  connection_554 = sdp_198->sdp_connection;
  # DEBUG connection => connection_554
  D.44546_555 = m_28->m_connections;
  if (D.44546_555 != 0B)
    goto <bb 177>;
  else
    goto <bb 178>;
  # SUCC: 177 [85.0%]  (true,exec) 178 [15.0%]  (false,exec)

  # BLOCK 177 freq:23
  # PRED: 176 [85.0%]  (true,exec)
  connection_556 = m_28->m_connections;
  # DEBUG connection => connection_556
  # SUCC: 178 [100.0%]  (fallthru,exec)

  # BLOCK 178 freq:27
  # PRED: 176 [15.0%]  (false,exec) 177 [100.0%]  (fallthru,exec)
  # connection_124 = PHI <connection_554(176), connection_556(177)>
  # DEBUG connection => connection_124
  if (connection_124 == 0B)
    goto <bb 179>;
  else
    goto <bb 180>;
  # SUCC: 179 [2.0%]  (true,exec) 180 [98.0%]  (false,exec)

  # BLOCK 179 freq:1
  # PRED: 178 [2.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 180 freq:27
  # PRED: 178 [98.0%]  (false,exec)
  # DEBUG x => 0
  map_559 = m_28->m_rtpmaps;
  # DEBUG map => map_559
  goto <bb 260>;
  # SUCC: 260 [100.0%]  (fallthru,exec)

  # BLOCK 181 freq:518
  # PRED: 260 [95.5%]  (true,exec)
  # DEBUG map_bit_rate => 0
  codec_fmtp = {};
  rm_encoding_561 = map_128->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_561
  if (rm_encoding_561 == 0B)
    goto <bb 182>;
  else
    goto <bb 183>;
  # SUCC: 182 [15.0%]  (true,exec) 183 [85.0%]  (false,exec)

  # BLOCK 182 freq:78
  # PRED: 181 [15.0%]  (true,exec)
  # DEBUG rm_encoding => ""
  # SUCC: 183 [100.0%]  (fallthru,exec)

  # BLOCK 183 freq:518
  # PRED: 181 [85.0%]  (false,exec) 182 [100.0%]  (fallthru,exec)
  # rm_encoding_130 = PHI <rm_encoding_561(181), ""(182)>
  # DEBUG rm_encoding => rm_encoding_130
  D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
  if (D.44848_563 == 0)
    goto <bb 184>;
  else
    goto <bb 188>;
  # SUCC: 184 [71.0%]  (true,exec) 188 [29.0%]  (false,exec)

  # BLOCK 184 freq:368
  # PRED: 183 [71.0%]  (true,exec)
  if (best_te_20 == 0)
    goto <bb 186>;
  else
    goto <bb 185>;
  # SUCC: 186 [29.0%]  (true,exec) 185 [71.0%]  (false,exec)

  # BLOCK 185 freq:261
  # PRED: 184 [71.0%]  (false,exec)
  D.44854_564 = map_128->rm_rate;
  D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44855_566 = D.44750_565->rm_rate;
  if (D.44854_564 == D.44855_566)
    goto <bb 186>;
  else
    goto <bb 187>;
  # SUCC: 186 [28.0%]  (true,exec) 187 [72.0%]  (false,exec)

  # BLOCK 186 freq:180
  # PRED: 184 [29.0%]  (true,exec) 185 [28.0%]  (true,exec)
  D.44856_567 = map_128->rm_pt;
  best_te_568 = (switch_payload_t) D.44856_567;
  # DEBUG best_te => best_te_568
  D.44857_569 = (int) best_te_568;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);
  # SUCC: 187 [100.0%]  (fallthru,exec)

  # BLOCK 187 freq:368
  # PRED: 185 [72.0%]  (false,exec) 186 [100.0%]  (fallthru,exec)
  # best_te_18 = PHI <best_te_20(185), best_te_568(186)>
  # DEBUG best_te => best_te_18
  // predicted unlikely by continue predictor.
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 188 freq:150
  # PRED: 183 [29.0%]  (false,exec)
  D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);
  if (D.44858_570 == 0)
    goto <bb 189>;
  else
    goto <bb 194>;
  # SUCC: 189 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

  # BLOCK 189 freq:75
  # PRED: 188 [50.0%]  (true,exec)
  if (cng_pt_25 == 0)
    goto <bb 190>;
  else
    goto <bb 194>;
  # SUCC: 190 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

  # BLOCK 190 freq:38
  # PRED: 189 [50.0%]  (true,exec)
  D.44863_571 = strcasecmp (rm_encoding_130, "CN");
  if (D.44863_571 == 0)
    goto <bb 191>;
  else
    goto <bb 194>;
  # SUCC: 191 [50.0%]  (true,exec) 194 [50.0%]  (false,exec)

  # BLOCK 191 freq:19
  # PRED: 190 [50.0%]  (true,exec)
  D.44856_572 = map_128->rm_pt;
  cng_pt_573 = (switch_payload_t) D.44856_572;
  # DEBUG cng_pt => cng_pt_573
  D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_574 != 0B)
    goto <bb 192>;
  else
    goto <bb 193>;
  # SUCC: 192 [69.8%]  (true,exec) 193 [30.2%]  (false,exec)

  # BLOCK 192 freq:13
  # PRED: 191 [69.8%]  (true,exec)
  D.44868_575 = (int) cng_pt_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);
  D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44471_577 = smh_186->mparams;
  D.44869_578 = D.44471_577->cng_pt;
  switch_rtp_set_cng_pt (D.44605_576, D.44869_578);
  # SUCC: 193 [100.0%]  (fallthru,exec)

  # BLOCK 193 freq:19
  # PRED: 191 [30.2%]  (false,exec) 192 [100.0%]  (fallthru,exec)
  // predicted unlikely by continue predictor.
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 194 freq:131
  # PRED: 188 [50.0%]  (false,exec) 189 [50.0%]  (false,exec) 190 [50.0%]  (false,exec)
  x_580 = x_49 + 1;
  # DEBUG x => x_580
  if (x_49 < 0)
    goto <bb 195>;
  else
    goto <bb 196>;
  # SUCC: 195 [27.0%]  (true,exec) 196 [73.0%]  (false,exec)

  # BLOCK 195 freq:35
  # PRED: 194 [27.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 196 freq:96
  # PRED: 194 [73.0%]  (false,exec)
  if (match_8 != 0)
    goto <bb 197>;
  else
    goto <bb 198>;
  # SUCC: 197 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 197 freq:48
  # PRED: 196 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 259>;
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 198 freq:48
  # PRED: 196 [50.0%]  (false,exec)
  # DEBUG codec_ms => ptime_35
  if (maxptime_39 != 0)
    goto <bb 199>;
  else
    goto <bb 201>;
  # SUCC: 199 [50.0%]  (true,exec) 201 [50.0%]  (false,exec)

  # BLOCK 199 freq:24
  # PRED: 198 [50.0%]  (true,exec)
  D.44877_582 = ptime_35 == 0;
  D.44878_583 = ptime_35 > maxptime_39;
  D.44879_584 = D.44877_582 || D.44878_583;
  if (D.44879_584 != 0)
    goto <bb 200>;
  else
    goto <bb 201>;
  # SUCC: 200 [50.0%]  (true,exec) 201 [50.0%]  (false,exec)

  # BLOCK 200 freq:12
  # PRED: 199 [50.0%]  (true,exec)
  # DEBUG codec_ms => maxptime_39
  # SUCC: 201 [100.0%]  (fallthru,exec)

  # BLOCK 201 freq:48
  # PRED: 198 [50.0%]  (false,exec) 199 [50.0%]  (false,exec) 200 [100.0%]  (fallthru,exec)
  # codec_ms_86 = PHI <ptime_35(198), ptime_35(199), maxptime_39(200)>
  # DEBUG codec_ms => codec_ms_86
  if (codec_ms_86 == 0)
    goto <bb 202>;
  else
    goto <bb 203>;
  # SUCC: 202 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

  # BLOCK 202 freq:14
  # PRED: 201 [29.0%]  (true,exec)
  D.44856_586 = map_128->rm_pt;
  D.44884_587 = (uint32_t) D.44856_586;
  D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);
  codec_ms_589 = (int) D.44885_588;
  # DEBUG codec_ms => codec_ms_589
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 203 freq:48
  # PRED: 201 [71.0%]  (false,exec) 202 [100.0%]  (fallthru,exec)
  # codec_ms_87 = PHI <codec_ms_86(201), codec_ms_589(202)>
  # DEBUG codec_ms => codec_ms_87
  D.44856_590 = map_128->rm_pt;
  csui.173_591 = (unsigned char) D.44856_590;
  # DEBUG payload => csui.173_591
  if (csui.173_591 <= 18)
    goto <bb 204> (<L500>);
  else
    goto <bb 205> (<L501>);
  # SUCC: 205 [50.0%]  (false,exec) 204 [50.0%]  (true,exec)

  # BLOCK 204 freq:24
  # PRED: 203 [50.0%]  (true,exec)
<L500>:
  map_bit_rate_1480 = CSWTCH.174[csui.173_591];
  # SUCC: 205 [100.0%]  (fallthru,exec)

  # BLOCK 205 freq:48
  # PRED: 203 [50.0%]  (false,exec) 204 [100.0%]  (fallthru,exec)
  # map_bit_rate_1481 = PHI <0(203), map_bit_rate_1480(204)>
<L501>:
<L502>:
  # DEBUG map_bit_rate => NULL
  if (ptime_35 == 0)
    goto <bb 206>;
  else
    goto <bb 208>;
  # SUCC: 206 [50.0%]  (true,exec) 208 [50.0%]  (false,exec)

  # BLOCK 206 freq:24
  # PRED: 205 [50.0%]  (true,exec)
  D.44889_593 = map_128->rm_encoding;
  D.44890_594 = strcasecmp (D.44889_593, "g723");
  if (D.44890_594 == 0)
    goto <bb 207>;
  else
    goto <bb 208>;
  # SUCC: 207 [50.0%]  (true,exec) 208 [50.0%]  (false,exec)

  # BLOCK 207 freq:12
  # PRED: 206 [50.0%]  (true,exec)
  # DEBUG codec_ms => 33
  # SUCC: 208 [100.0%]  (fallthru,exec)

  # BLOCK 208 freq:48
  # PRED: 205 [50.0%]  (false,exec) 206 [50.0%]  (false,exec) 207 [100.0%]  (fallthru,exec)
  # codec_ms_88 = PHI <codec_ms_87(205), codec_ms_87(206), 33(207)>
  # DEBUG codec_ms => codec_ms_88
  remote_codec_rate_596 = map_128->rm_rate;
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG fmtp_remote_codec_rate => 0
  memset (&codec_fmtp, 0, 16);
  D.44893_598 = map_128->rm_fmtp;
  # DEBUG s => D.44893_598
  if (D.44893_598 == 0B)
    goto <bb 211>;
  else
    goto <bb 209>;
  # SUCC: 211 [15.0%]  (true,exec) 209 [85.0%]  (false,exec)

  # BLOCK 209 freq:41
  # PRED: 208 [85.0%]  (false,exec)
  D.47916_1482 = *D.44893_598;
  if (D.47916_1482 == 0)
    goto <bb 211>;
  else
    goto <bb 210>;
  # SUCC: 211 [50.0%]  (true,exec) 210 [50.0%]  (false,exec)

  # BLOCK 210 freq:20
  # PRED: 209 [50.0%]  (false,exec)
  # SUCC: 211 [100.0%]  (fallthru,exec)

  # BLOCK 211 freq:48
  # PRED: 208 [15.0%]  (true,exec) 209 [50.0%]  (true,exec) 210 [100.0%]  (fallthru,exec)
  # D.47915_1483 = PHI <1(208), 1(209), 0(210)>
  if (D.47915_1483 != 0)
    goto <bb 212>;
  else
    goto <bb 215>;
  # SUCC: 212 [71.0%]  (true,exec) 215 [29.0%]  (false,exec)

  # BLOCK 212 freq:34
  # PRED: 211 [71.0%]  (true,exec)
  D.44889_600 = map_128->rm_encoding;
  D.44897_601 = strcasecmp (D.44889_600, "ilbc");
  if (D.44897_601 == 0)
    goto <bb 222>;
  else
    goto <bb 213>;
  # SUCC: 222 [50.0%]  (true,exec) 213 [50.0%]  (false,exec)

  # BLOCK 213 freq:17
  # PRED: 212 [50.0%]  (false,exec)
  D.44889_604 = map_128->rm_encoding;
  D.44901_605 = strcasecmp (D.44889_604, "isac");
  if (D.44901_605 == 0)
    goto <bb 222>;
  else
    goto <bb 214>;
  # SUCC: 222 [50.0%]  (true,exec) 214 [50.0%]  (false,exec)

  # BLOCK 214 freq:9
  # PRED: 213 [50.0%]  (false,exec)
  # DEBUG map_bit_rate => 32099
  goto <bb 222>;
  # SUCC: 222 [100.0%]  (fallthru,exec)

  # BLOCK 215 freq:14
  # PRED: 211 [29.0%]  (false,exec)
  D.44889_609 = map_128->rm_encoding;
  D.44893_610 = map_128->rm_fmtp;
  D.44854_611 = map_128->rm_rate;
  D.44906_612 = switch_core_codec_parse_fmtp (D.44889_609, D.44893_610, D.44854_611, &codec_fmtp);
  if (D.44906_612 == 0)
    goto <bb 216>;
  else
    goto <bb 222>;
  # SUCC: 216 [50.0%]  (true,exec) 222 [50.0%]  (false,exec)

  # BLOCK 216 freq:7
  # PRED: 215 [50.0%]  (true,exec)
  D.44909_613 = codec_fmtp.bits_per_second;
  if (D.44909_613 != 0)
    goto <bb 217>;
  else
    goto <bb 218>;
  # SUCC: 217 [50.0%]  (true,exec) 218 [50.0%]  (false,exec)

  # BLOCK 217 freq:3
  # PRED: 216 [50.0%]  (true,exec)
  D.44909_614 = codec_fmtp.bits_per_second;
  map_bit_rate_615 = (uint32_t) D.44909_614;
  # DEBUG map_bit_rate => map_bit_rate_615
  # SUCC: 218 [100.0%]  (fallthru,exec)

  # BLOCK 218 freq:7
  # PRED: 216 [50.0%]  (false,exec) 217 [100.0%]  (fallthru,exec)
  # map_bit_rate_131 = PHI <map_bit_rate_1481(216), map_bit_rate_615(217)>
  # DEBUG map_bit_rate => map_bit_rate_131
  D.44912_616 = codec_fmtp.microseconds_per_packet;
  if (D.44912_616 != 0)
    goto <bb 219>;
  else
    goto <bb 220>;
  # SUCC: 219 [50.0%]  (true,exec) 220 [50.0%]  (false,exec)

  # BLOCK 219 freq:3
  # PRED: 218 [50.0%]  (true,exec)
  D.44912_617 = codec_fmtp.microseconds_per_packet;
  codec_ms_618 = D.44912_617 / 1000;
  # DEBUG codec_ms => codec_ms_618
  # SUCC: 220 [100.0%]  (fallthru,exec)

  # BLOCK 220 freq:7
  # PRED: 218 [50.0%]  (false,exec) 219 [100.0%]  (fallthru,exec)
  # codec_ms_89 = PHI <codec_ms_88(218), codec_ms_618(219)>
  # DEBUG codec_ms => codec_ms_89
  D.44915_619 = codec_fmtp.actual_samples_per_second;
  if (D.44915_619 != 0)
    goto <bb 221>;
  else
    goto <bb 222>;
  # SUCC: 221 [50.0%]  (true,exec) 222 [50.0%]  (false,exec)

  # BLOCK 221 freq:3
  # PRED: 220 [50.0%]  (true,exec)
  fmtp_remote_codec_rate_620 = codec_fmtp.actual_samples_per_second;
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_620
  # SUCC: 222 [100.0%]  (fallthru,exec)

  # BLOCK 222 freq:48
  # PRED: 213 [50.0%]  (true,exec) 215 [50.0%]  (false,exec) 220 [50.0%]  (false,exec) 221 [100.0%]  (fallthru,exec) 212 [50.0%]  (true,exec) 214 [100.0%]  (fallthru,exec)
  # codec_ms_90 = PHI <39(213), codec_ms_88(215), codec_ms_89(220), codec_ms_89(221), 32(212), codec_ms_88(214)>
  # fmtp_remote_codec_rate_99 = PHI <0(213), 0(215), 0(220), fmtp_remote_codec_rate_620(221), 0(212), 0(214)>
  # map_bit_rate_132 = PHI <32001(213), map_bit_rate_1481(215), map_bit_rate_131(220), map_bit_rate_131(221), 13332(212), 32099(214)>
  # DEBUG map_bit_rate => map_bit_rate_132
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99
  # DEBUG codec_ms => codec_ms_90
  # DEBUG i => 0
  goto <bb 257>;
  # SUCC: 257 [100.0%]  (fallthru,exec)

  # BLOCK 223 freq:962
  # PRED: 257 [95.5%]  (true,exec)
  i.91_627 = (unsigned int) i_129;
  D.44919_628 = i.91_627 * 4;
  D.44920_629 = codec_array_84 + D.44919_628;
  imp_630 = *D.44920_629;
  # DEBUG imp => imp_630
  D.44921_631 = imp_630->bits_per_second;
  bit_rate_632 = (uint32_t) D.44921_631;
  # DEBUG bit_rate => bit_rate_632
  codec_rate_633 = imp_630->samples_per_second;
  # DEBUG codec_rate => codec_rate_633
  D.44922_634 = imp_630->codec_type;
  if (D.44922_634 != 0)
    goto <bb 224>;
  else
    goto <bb 225>;
  # SUCC: 224 [71.0%]  (true,exec) 225 [29.0%]  (false,exec)

  # BLOCK 224 freq:683
  # PRED: 223 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 256>;
  # SUCC: 256 [100.0%]  (fallthru,exec)

  # BLOCK 225 freq:279
  # PRED: 223 [29.0%]  (false,exec)
  D.44856_635 = map_128->rm_pt;
  D.44925_636 = (int) D.44856_635;
  remote_codec_rate.92_637 = (int) remote_codec_rate_98;
  D.44927_638 = imp_630->iananame;
  D.44928_639 = imp_630->ianacode;
  D.44929_640 = (int) D.44928_639;
  D.44930_641 = imp_630->microseconds_per_packet;
  D.44931_642 = D.44930_641 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44925_636, remote_codec_rate.92_637, codec_ms_90, map_bit_rate_132, D.44927_638, D.44929_640, codec_rate_633, D.44931_642, bit_rate_632);
  D.44889_643 = map_128->rm_encoding;
  # DEBUG s => D.44889_643
  if (D.44889_643 == 0B)
    goto <bb 228>;
  else
    goto <bb 226>;
  # SUCC: 228 [15.0%]  (true,exec) 226 [85.0%]  (false,exec)

  # BLOCK 226 freq:237
  # PRED: 225 [85.0%]  (false,exec)
  D.47920_1484 = *D.44889_643;
  if (D.47920_1484 == 0)
    goto <bb 228>;
  else
    goto <bb 227>;
  # SUCC: 228 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 227 freq:119
  # PRED: 226 [50.0%]  (false,exec)
  # SUCC: 228 [100.0%]  (fallthru,exec)

  # BLOCK 228 freq:279
  # PRED: 225 [15.0%]  (true,exec) 226 [50.0%]  (true,exec) 227 [100.0%]  (fallthru,exec)
  # D.47919_1485 = PHI <1(225), 1(226), 0(227)>
  if (D.47919_1485 != 0)
    goto <bb 230>;
  else
    goto <bb 229>;
  # SUCC: 230 [50.0%]  (true,exec) 229 [50.0%]  (false,exec)

  # BLOCK 229 freq:139
  # PRED: 228 [50.0%]  (false,exec)
  D.44471_645 = smh_186->mparams;
  D.44821_646 = D.44471_645->ndlb;
  D.44937_647 = (int) D.44821_646;
  D.44938_648 = D.44937_647 & 1;
  if (D.44938_648 != 0)
    goto <bb 230>;
  else
    goto <bb 232>;
  # SUCC: 230 [50.0%]  (true,exec) 232 [50.0%]  (false,exec)

  # BLOCK 230 freq:209
  # PRED: 228 [50.0%]  (true,exec) 229 [50.0%]  (true,exec)
  D.44856_650 = map_128->rm_pt;
  D.44925_651 = (int) D.44856_650;
  if (D.44925_651 <= 95)
    goto <bb 231>;
  else
    goto <bb 232>;
  # SUCC: 231 [50.0%]  (true,exec) 232 [50.0%]  (false,exec)

  # BLOCK 231 freq:105
  # PRED: 230 [50.0%]  (true,exec)
  D.44856_652 = map_128->rm_pt;
  D.44925_653 = (int) D.44856_652;
  D.44928_654 = imp_630->ianacode;
  D.44929_655 = (int) D.44928_654;
  match_656 = D.44925_653 == D.44929_655;
  # DEBUG match => match_656
  goto <bb 238>;
  # SUCC: 238 [100.0%]  (fallthru,exec)

  # BLOCK 232 freq:174
  # PRED: 229 [50.0%]  (false,exec) 230 [50.0%]  (false,exec)
  D.44927_657 = imp_630->iananame;
  D.44945_658 = strcasecmp (rm_encoding_130, D.44927_657);
  if (D.44945_658 == 0)
    goto <bb 233>;
  else
    goto <bb 235>;
  # SUCC: 233 [50.0%]  (true,exec) 235 [50.0%]  (false,exec)

  # BLOCK 233 freq:87
  # PRED: 232 [50.0%]  (true,exec)
  if (remote_codec_rate_98 == codec_rate_633)
    goto <bb 236>;
  else
    goto <bb 234>;
  # SUCC: 236 [28.0%]  (true,exec) 234 [72.0%]  (false,exec)

  # BLOCK 234 freq:63
  # PRED: 233 [72.0%]  (false,exec)
  D.44948_659 = imp_630->actual_samples_per_second;
  if (D.44948_659 == fmtp_remote_codec_rate_99)
    goto <bb 236>;
  else
    goto <bb 235>;
  # SUCC: 236 [28.0%]  (true,exec) 235 [72.0%]  (false,exec)

  # BLOCK 235 freq:132
  # PRED: 232 [50.0%]  (false,exec) 234 [72.0%]  (false,exec)
  # SUCC: 236 [100.0%]  (fallthru,exec)

  # BLOCK 236 freq:174
  # PRED: 234 [28.0%]  (true,exec) 235 [100.0%]  (fallthru,exec) 233 [28.0%]  (true,exec)
  # iftmp.93_144 = PHI <1(234), 0(235), 1(233)>
  match_662 = (uint8_t) iftmp.93_144;
  # DEBUG match => match_662
  if (fmtp_remote_codec_rate_99 != 0)
    goto <bb 237>;
  else
    goto <bb 238>;
  # SUCC: 237 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

  # BLOCK 237 freq:87
  # PRED: 236 [50.0%]  (true,exec)
  # DEBUG remote_codec_rate => fmtp_remote_codec_rate_99
  # SUCC: 238 [100.0%]  (fallthru,exec)

  # BLOCK 238 freq:279
  # PRED: 231 [100.0%]  (fallthru,exec) 236 [50.0%]  (false,exec) 237 [100.0%]  (fallthru,exec)
  # match_1 = PHI <match_656(231), match_662(236), match_662(237)>
  # remote_codec_rate_96 = PHI <remote_codec_rate_98(231), remote_codec_rate_98(236), fmtp_remote_codec_rate_99(237)>
  # DEBUG remote_codec_rate => remote_codec_rate_96
  # DEBUG match => match_1
  D.44951_664 = match_1 != 0;
  D.44952_665 = bit_rate_632 != 0;
  D.44953_666 = D.44951_664 && D.44952_665;
  if (D.44953_666 != 0)
    goto <bb 239>;
  else
    goto <bb 243>;
  # SUCC: 239 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

  # BLOCK 239 freq:139
  # PRED: 238 [50.0%]  (true,exec)
  D.44956_667 = map_bit_rate_132 != 0;
  D.44957_668 = map_bit_rate_132 != bit_rate_632;
  D.44958_669 = D.44956_667 && D.44957_668;
  if (D.44958_669 != 0)
    goto <bb 240>;
  else
    goto <bb 243>;
  # SUCC: 240 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

  # BLOCK 240 freq:70
  # PRED: 239 [50.0%]  (true,exec)
  D.44889_670 = map_128->rm_encoding;
  D.44961_671 = strcasecmp (D.44889_670, "ilbc");
  if (D.44961_671 != 0)
    goto <bb 241>;
  else
    goto <bb 243>;
  # SUCC: 241 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

  # BLOCK 241 freq:35
  # PRED: 240 [50.0%]  (true,exec)
  D.44889_672 = map_128->rm_encoding;
  D.44964_673 = strcasecmp (D.44889_672, "isac");
  if (D.44964_673 != 0)
    goto <bb 242>;
  else
    goto <bb 243>;
  # SUCC: 242 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

  # BLOCK 242 freq:17
  # PRED: 241 [50.0%]  (true,exec)
  # DEBUG match => 0
  # SUCC: 243 [100.0%]  (fallthru,exec)

  # BLOCK 243 freq:279
  # PRED: 238 [50.0%]  (false,exec) 239 [50.0%]  (false,exec) 240 [50.0%]  (false,exec) 241 [50.0%]  (false,exec) 242 [100.0%]  (fallthru,exec)
  # match_2 = PHI <match_1(238), match_1(239), match_1(240), match_1(241), 0(242)>
  # DEBUG match => match_2
  D.44951_675 = match_2 != 0;
  D.44969_676 = remote_codec_rate_96 != 0;
  D.44970_677 = D.44951_675 && D.44969_676;
  if (D.44970_677 != 0)
    goto <bb 244>;
  else
    goto <bb 248>;
  # SUCC: 244 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 244 freq:139
  # PRED: 243 [50.0%]  (true,exec)
  D.44973_678 = codec_rate_633 != 0;
  D.44974_679 = remote_codec_rate_96 != codec_rate_633;
  D.44975_680 = D.44973_678 && D.44974_679;
  if (D.44975_680 != 0)
    goto <bb 245>;
  else
    goto <bb 248>;
  # SUCC: 245 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 245 freq:70
  # PRED: 244 [50.0%]  (true,exec)
  D.44889_681 = map_128->rm_encoding;
  D.44978_682 = strcasecmp (D.44889_681, "pcma");
  if (D.44978_682 == 0)
    goto <bb 247>;
  else
    goto <bb 246>;
  # SUCC: 247 [29.0%]  (true,exec) 246 [71.0%]  (false,exec)

  # BLOCK 246 freq:50
  # PRED: 245 [71.0%]  (false,exec)
  D.44889_683 = map_128->rm_encoding;
  D.44980_684 = strcasecmp (D.44889_683, "pcmu");
  if (D.44980_684 == 0)
    goto <bb 247>;
  else
    goto <bb 248>;
  # SUCC: 247 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 247 freq:45
  # PRED: 245 [29.0%]  (true,exec) 246 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");
  # DEBUG match => 0
  # SUCC: 248 [100.0%]  (fallthru,exec)

  # BLOCK 248 freq:279
  # PRED: 243 [50.0%]  (false,exec) 244 [50.0%]  (false,exec) 246 [50.0%]  (false,exec) 247 [100.0%]  (fallthru,exec)
  # match_3 = PHI <match_2(243), match_2(244), match_2(246), 0(247)>
  # DEBUG match => match_3
  if (match_3 != 0)
    goto <bb 249>;
  else
    goto <bb 256>;
  # SUCC: 249 [50.0%]  (true,exec) 256 [50.0%]  (false,exec)

  # BLOCK 249 freq:139
  # PRED: 248 [50.0%]  (true,exec)
  if (scrooge_80 != 0)
    goto <bb 250>;
  else
    goto <bb 251>;
  # SUCC: 250 [29.0%]  (true,exec) 251 [71.0%]  (false,exec)

  # BLOCK 250 freq:40
  # PRED: 249 [29.0%]  (true,exec)
  D.44927_686 = imp_630->iananame;
  D.44985_687 = imp_630->samples_per_second;
  D.44930_688 = imp_630->microseconds_per_packet;
  D.44931_689 = D.44930_688 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44927_686, D.44985_687, D.44931_689);
  goto <bb 255>;
  # SUCC: 255 [100.0%]  (fallthru,exec)

  # BLOCK 251 freq:99
  # PRED: 249 [71.0%]  (false,exec)
  D.44990_690 = ptime_35 != 0;
  D.44991_691 = codec_ms_90 != 0;
  D.44992_692 = D.44990_690 && D.44991_691;
  if (D.44992_692 != 0)
    goto <bb 252>;
  else
    goto <bb 253>;
  # SUCC: 252 [50.0%]  (true,exec) 253 [50.0%]  (false,exec)

  # BLOCK 252 freq:50
  # PRED: 251 [50.0%]  (true,exec)
  D.44994_693 = codec_ms_90 * 1000;
  D.44930_694 = imp_630->microseconds_per_packet;
  if (D.44994_693 != D.44930_694)
    goto <bb 254>;
  else
    goto <bb 253>;
  # SUCC: 254 [72.0%]  (true,exec) 253 [28.0%]  (false,exec)

  # BLOCK 253 freq:63
  # PRED: 251 [50.0%]  (false,exec) 252 [28.0%]  (false,exec)
  if (remote_codec_rate_96 != codec_rate_633)
    goto <bb 254>;
  else
    goto <bb 255>;
  # SUCC: 254 [72.0%]  (true,exec) 255 [28.0%]  (false,exec)

  # BLOCK 254 freq:81
  # PRED: 252 [72.0%]  (true,exec) 253 [72.0%]  (true,exec)
  # DEBUG match => 0
  D.44927_696 = imp_630->iananame;
  D.44928_697 = imp_630->ianacode;
  D.44929_698 = (int) D.44928_697;
  D.44930_699 = imp_630->microseconds_per_packet;
  D.44931_700 = D.44930_699 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44927_696, D.44929_698, codec_rate_633, D.44931_700, bit_rate_632);
  near_matches[nm_idx_116].codec_idx = i_129;
  remote_codec_rate.92_701 = (int) remote_codec_rate_96;
  near_matches[nm_idx_116].rate = remote_codec_rate.92_701;
  near_matches[nm_idx_116].imp = imp_630;
  near_matches[nm_idx_116].map = map_128;
  nm_idx_702 = nm_idx_116 + 1;
  # DEBUG nm_idx => nm_idx_702
  // predicted unlikely by continue predictor.
  goto <bb 256>;
  # SUCC: 256 [100.0%]  (fallthru,exec)

  # BLOCK 255 freq:58
  # PRED: 250 [100.0%]  (fallthru,exec) 253 [28.0%]  (false,exec)
  matches[m_idx_101].codec_idx = i_129;
  codec_rate.94_703 = (int) codec_rate_633;
  matches[m_idx_101].rate = codec_rate.94_703;
  matches[m_idx_101].imp = imp_630;
  matches[m_idx_101].map = map_128;
  m_idx_704 = m_idx_101 + 1;
  # DEBUG m_idx => m_idx_704
  D.44927_705 = imp_630->iananame;
  D.44928_706 = imp_630->ianacode;
  D.44929_707 = (int) D.44928_706;
  D.44930_708 = imp_630->microseconds_per_packet;
  D.44931_709 = D.44930_708 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44927_705, D.44929_707, codec_rate_633, D.44931_709, bit_rate_632);
  if (m_idx_704 > 29)
    goto <bb 258>;
  else
    goto <bb 256>;
  # SUCC: 258 [4.5%]  (true,exec) 256 [95.5%]  (false,exec)

  # BLOCK 256 freq:959
  # PRED: 224 [100.0%]  (fallthru,exec) 248 [50.0%]  (false,exec) 254 [100.0%]  (fallthru,exec) 255 [95.5%]  (false,exec)
  # match_4 = PHI <match_5(224), match_3(248), 0(254), 0(255)>
  # remote_codec_rate_97 = PHI <remote_codec_rate_98(224), remote_codec_rate_96(248), remote_codec_rate_96(254), remote_codec_rate_96(255)>
  # m_idx_100 = PHI <m_idx_101(224), m_idx_101(248), m_idx_101(254), m_idx_704(255)>
  # nm_idx_115 = PHI <nm_idx_116(224), nm_idx_116(248), nm_idx_702(254), nm_idx_116(255)>
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => match_4
  i_711 = i_129 + 1;
  # DEBUG i => i_711
  # SUCC: 257 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 257 freq:1007
  # PRED: 222 [100.0%]  (fallthru,exec) 256 [100.0%]  (fallthru,dfs_back,exec)
  # match_5 = PHI <match_8(222), match_4(256)>
  # remote_codec_rate_98 = PHI <remote_codec_rate_596(222), remote_codec_rate_97(256)>
  # m_idx_101 = PHI <m_idx_104(222), m_idx_100(256)>
  # nm_idx_116 = PHI <nm_idx_118(222), nm_idx_115(256)>
  # i_129 = PHI <0(222), i_711(256)>
  # DEBUG i => i_129
  # DEBUG nm_idx => nm_idx_116
  # DEBUG m_idx => m_idx_101
  # DEBUG remote_codec_rate => remote_codec_rate_98
  # DEBUG match => match_5
  D.44471_622 = smh_186->mparams;
  D.44997_623 = D.44471_622->num_codecs;
  D.44998_624 = D.44997_623 > i_129;
  D.44999_625 = i_129 < total_codecs_85;
  D.45000_626 = D.44998_624 && D.44999_625;
  if (D.45000_626 != 0)
    goto <bb 223>;
  else
    goto <bb 258>;
  # SUCC: 223 [95.5%]  (true,exec) 258 [4.5%]  (false,exec)

  # BLOCK 258 freq:48
  # PRED: 255 [4.5%]  (true,exec) 257 [4.5%]  (false,exec)
  # match_6 = PHI <match_3(255), match_5(257)>
  # m_idx_102 = PHI <m_idx_704(255), m_idx_101(257)>
  # DEBUG m_idx => m_idx_102
  # DEBUG match => match_6
  if (m_idx_102 > 29)
    goto <bb 261>;
  else
    goto <bb 259>;
  # SUCC: 261 [4.5%]  (true,exec) 259 [95.5%]  (false,exec)

  # BLOCK 259 freq:515
  # PRED: 187 [100.0%]  (fallthru,exec) 193 [100.0%]  (fallthru,exec) 195 [100.0%]  (fallthru,exec) 197 [100.0%]  (fallthru,exec) 258 [95.5%]  (false,exec)
  # match_7 = PHI <match_8(187), match_8(193), match_8(195), match_8(197), match_6(258)>
  # best_te_19 = PHI <best_te_18(187), best_te_20(193), best_te_20(195), best_te_20(197), best_te_20(258)>
  # cng_pt_24 = PHI <cng_pt_25(187), cng_pt_573(193), cng_pt_25(195), cng_pt_25(197), cng_pt_25(258)>
  # x_48 = PHI <x_49(187), x_49(193), x_580(195), x_580(197), x_580(258)>
  # codec_ms_91 = PHI <codec_ms_92(187), codec_ms_92(193), codec_ms_92(195), codec_ms_92(197), codec_ms_90(258)>
  # m_idx_103 = PHI <m_idx_104(187), m_idx_104(193), m_idx_104(195), m_idx_104(197), m_idx_102(258)>
  # nm_idx_117 = PHI <nm_idx_118(187), nm_idx_118(193), nm_idx_118(195), nm_idx_118(197), nm_idx_116(258)>
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => x_48
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  map_712 = map_128->rm_next;
  # DEBUG map => map_712
  # SUCC: 260 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 260 freq:542
  # PRED: 180 [100.0%]  (fallthru,exec) 259 [100.0%]  (fallthru,dfs_back,exec)
  # match_8 = PHI <match_16(180), match_7(259)>
  # best_te_20 = PHI <best_te_23(180), best_te_19(259)>
  # cng_pt_25 = PHI <cng_pt_27(180), cng_pt_24(259)>
  # x_49 = PHI <0(180), x_48(259)>
  # codec_ms_92 = PHI <codec_ms_95(180), codec_ms_91(259)>
  # m_idx_104 = PHI <m_idx_114(180), m_idx_103(259)>
  # nm_idx_118 = PHI <nm_idx_122(180), nm_idx_117(259)>
  # map_128 = PHI <map_559(180), map_712(259)>
  # DEBUG map => map_128
  # DEBUG nm_idx => nm_idx_118
  # DEBUG m_idx => m_idx_104
  # DEBUG codec_ms => codec_ms_92
  # DEBUG x => x_49
  # DEBUG cng_pt => cng_pt_25
  # DEBUG best_te => best_te_20
  # DEBUG match => match_8
  if (map_128 != 0B)
    goto <bb 181>;
  else
    goto <bb 261>;
  # SUCC: 181 [95.5%]  (true,exec) 261 [4.5%]  (false,exec)

  # BLOCK 261 freq:27
  # PRED: 258 [4.5%]  (true,exec) 260 [4.5%]  (false,exec)
  # match_9 = PHI <match_6(258), match_8(260)>
  # codec_ms_93 = PHI <codec_ms_90(258), codec_ms_92(260)>
  # m_idx_105 = PHI <m_idx_102(258), m_idx_104(260)>
  # nm_idx_119 = PHI <nm_idx_116(258), nm_idx_118(260)>
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG codec_ms => codec_ms_93
  # DEBUG match => match_9
  D.45002_713 = smh_186->crypto_mode;
  D.45003_714 = D.45002_713 == 1;
  D.45004_715 = got_crypto_54 <= 0;
  D.45005_716 = D.45003_714 && D.45004_715;
  if (D.45005_716 != 0)
    goto <bb 262>;
  else
    goto <bb 263>;
  # SUCC: 262 [29.0%]  (true,exec) 263 [71.0%]  (false,exec)

  # BLOCK 262 freq:8
  # PRED: 261 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG match => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  # SUCC: 263 [100.0%]  (fallthru,exec)

  # BLOCK 263 freq:27
  # PRED: 261 [71.0%]  (false,exec) 262 [100.0%]  (fallthru,exec)
  # match_10 = PHI <match_9(261), 0(262)>
  # m_idx_106 = PHI <m_idx_105(261), 0(262)>
  # nm_idx_120 = PHI <nm_idx_119(261), 0(262)>
  # DEBUG nm_idx => nm_idx_120
  # DEBUG m_idx => m_idx_106
  # DEBUG match => match_10
  D.45008_720 = m_idx_106 == 0;
  D.45009_721 = nm_idx_120 != 0;
  D.45010_722 = D.45008_720 && D.45009_721;
  if (D.45010_722 != 0)
    goto <bb 264>;
  else
    goto <bb 274>;
  # SUCC: 264 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

  # BLOCK 264 freq:13
  # PRED: 263 [50.0%]  (true,exec)
  # j_1118 = PHI <0(263)>
  goto <bb 273>;
  # SUCC: 273 [100.0%]  (fallthru)

  # BLOCK 265 freq:147
  # PRED: 273 [97.0%]  (true,exec)
  # DEBUG timp => 0B
  D.45013_725 = near_matches[j_133].rate;
  near_rate_726 = (uint32_t) D.45013_725;
  # DEBUG near_rate => near_rate_726
  near_match_727 = near_matches[j_133].imp;
  # DEBUG near_match => near_match_727
  near_map_728 = near_matches[j_133].map;
  # DEBUG near_map => near_map_728
  D.45014_729 = near_match_727->iananame;
  if (near_rate_726 == 0)
    goto <bb 266>;
  else
    goto <bb 267>;
  # SUCC: 266 [50.0%]  (true,exec) 267 [50.0%]  (false,exec)

  # BLOCK 266 freq:74
  # PRED: 265 [50.0%]  (true,exec)
  near_rate_730 = near_match_727->samples_per_second;
  # SUCC: 267 [100.0%]  (fallthru,exec)

  # BLOCK 267 freq:147
  # PRED: 266 [100.0%]  (fallthru,exec) 265 [50.0%]  (false,exec)
  # near_rate_145 = PHI <near_rate_730(266), near_rate_726(265)>
  switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45014_729, near_rate_145, codec_ms_93);
  prefs[0] = &tmp;
  num_732 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);
  # DEBUG num => num_732
  if (num_732 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;
  # SUCC: 268 [50.0%]  (true,exec) 269 [50.0%]  (false,exec)

  # BLOCK 268 freq:74
  # PRED: 267 [50.0%]  (true,exec)
  timp_733 = search[0];
  # DEBUG timp => timp_733
  # SUCC: 269 [100.0%]  (fallthru,exec)

  # BLOCK 269 freq:147
  # PRED: 268 [100.0%]  (fallthru,exec) 267 [50.0%]  (false,exec)
  # timp_134 = PHI <timp_733(268), near_match_727(267)>
  # DEBUG timp => timp_134
  if (maxptime_39 == 0)
    goto <bb 271>;
  else
    goto <bb 270>;
  # SUCC: 271 [3.0%]  (true,exec) 270 [97.0%]  (false,exec)

  # BLOCK 270 freq:143
  # PRED: 269 [97.0%]  (false,exec)
  D.45025_735 = timp_134->microseconds_per_packet;
  D.45026_736 = D.45025_735 / 1000;
  if (D.45026_736 <= maxptime_39)
    goto <bb 271>;
  else
    goto <bb 272>;
  # SUCC: 271 [3.0%]  (true,exec) 272 [97.0%]  (false,exec)

  # BLOCK 271 freq:9
  # PRED: 269 [3.0%]  (true,exec) 270 [3.0%]  (true,exec)
  D.45027_738 = timp_134->iananame;
  D.45025_739 = timp_134->microseconds_per_packet;
  D.45026_740 = D.45025_739 / 1000;
  D.45028_741 = timp_134->actual_samples_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45027_738, D.45026_740, D.45028_741);
  # DEBUG match => 1
  D.45029_743 = near_matches[j_133].codec_idx;
  matches[m_idx_106].codec_idx = D.45029_743;
  near_rate.96_744 = (int) near_rate_726;
  matches[m_idx_106].rate = near_rate.96_744;
  matches[m_idx_106].imp = timp_134;
  matches[m_idx_106].map = near_map_728;
  m_idx_745 = m_idx_106 + 1;
  # DEBUG m_idx => m_idx_745
  goto <bb 274>;
  # SUCC: 274 [100.0%]  (fallthru,exec)

  # BLOCK 272 freq:139
  # PRED: 270 [97.0%]  (false,exec)
  j_737 = j_133 + 1;
  # DEBUG j => j_737
  # SUCC: 273 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 273 freq:152
  # PRED: 264 [100.0%]  (fallthru) 272 [100.0%]  (fallthru,dfs_back,exec)
  # j_133 = PHI <j_1118(264), j_737(272)>
  # DEBUG j => j_133
  if (j_133 < nm_idx_120)
    goto <bb 265>;
  else
    goto <bb 274>;
  # SUCC: 265 [97.0%]  (true,exec) 274 [3.0%]  (false,exec)

  # BLOCK 274 freq:27
  # PRED: 263 [50.0%]  (false,exec) 271 [100.0%]  (fallthru,exec) 273 [3.0%]  (false,exec)
  # match_11 = PHI <match_10(263), 1(271), match_10(273)>
  # m_idx_107 = PHI <m_idx_106(263), m_idx_745(271), m_idx_106(273)>
  # DEBUG m_idx => m_idx_107
  # DEBUG match => match_11
  if (m_idx_107 != 0)
    goto <bb 275>;
  else
    goto <bb 299>;
  # SUCC: 275 [50.0%]  (true,exec) 299 [50.0%]  (false,exec)

  # BLOCK 275 freq:13
  # PRED: 274 [50.0%]  (true,exec)
  if (greedy_47 != 0)
    goto <bb 276>;
  else
    goto <bb 277>;
  # SUCC: 276 [29.0%]  (true,exec) 277 [71.0%]  (false,exec)

  # BLOCK 276 freq:4
  # PRED: 275 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_107, codec_array_84, total_codecs_85);
  # SUCC: 277 [100.0%]  (fallthru,exec)

  # BLOCK 277 freq:13
  # PRED: 275 [71.0%]  (false,exec) 276 [100.0%]  (fallthru,exec)
  # DEBUG match => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;
  smh_186->num_negotiated_codecs = 0;
  # DEBUG j => 0
  goto <bb 298>;
  # SUCC: 298 [100.0%]  (fallthru,exec)

  # BLOCK 278 freq:398
  # PRED: 298 [96.8%]  (true,exec)
  D.45035_748 = matches[j_135].map;
  D.45036_749 = D.45035_748->rm_encoding;
  D.45035_750 = matches[j_135].map;
  D.45037_751 = D.45035_750->rm_fmtp;
  D.45035_752 = matches[j_135].map;
  D.45038_753 = D.45035_752->rm_pt;
  D.45039_754 = (uint32_t) D.45038_753;
  D.45040_755 = matches[j_135].imp;
  D.45041_756 = D.45040_755->samples_per_second;
  D.45040_757 = matches[j_135].imp;
  D.45042_758 = D.45040_757->microseconds_per_packet;
  D.45043_759 = D.45042_758 / 1000;
  D.45044_760 = (uint32_t) D.45043_759;
  pmap_761 = switch_core_media_add_payload_map (session_161(D), 0, D.45036_749, D.45037_751, sdp_type_546(D), D.45039_754, D.45041_756, D.45044_760, 1);
  # DEBUG pmap => pmap_761
  mimp_762 = matches[j_135].imp;
  # DEBUG mimp => mimp_762
  mmap_763 = matches[j_135].map;
  # DEBUG mmap => mmap_763
  if (j_135 == 0)
    goto <bb 279>;
  else
    goto <bb 281>;
  # SUCC: 279 [50.0%]  (true,exec) 281 [50.0%]  (false,exec)

  # BLOCK 279 freq:199
  # PRED: 278 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_761;
  D.44750_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44750_764->current = 1;
  D.44605_765 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_765 != 0B)
    goto <bb 280>;
  else
    goto <bb 281>;
  # SUCC: 280 [69.8%]  (true,exec) 281 [30.2%]  (false,exec)

  # BLOCK 280 freq:139
  # PRED: 279 [69.8%]  (true,exec)
  D.44605_766 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.45049_767 = pmap_761->pt;
  switch_rtp_set_default_payload (D.44605_766, D.45049_767);
  # SUCC: 281 [100.0%]  (fallthru,exec)

  # BLOCK 281 freq:398
  # PRED: 278 [50.0%]  (false,exec) 279 [30.2%]  (false,exec) 280 [100.0%]  (fallthru,exec)
  D.45050_768 = mmap_763->rm_encoding;
  D.45051_769 = switch_core_perform_session_strdup (session_161(D), D.45050_768, "src/switch_core_media.c", &__func__, 3535);
  pmap_761->rm_encoding = D.45051_769;
  D.45052_770 = mimp_762->iananame;
  D.45053_771 = switch_core_perform_session_strdup (session_161(D), D.45052_770, "src/switch_core_media.c", &__func__, 3536);
  pmap_761->iananame = D.45053_771;
  D.45054_772 = mmap_763->rm_pt;
  D.45055_773 = (unsigned char) D.45054_772;
  pmap_761->recv_pt = D.45055_773;
  D.45056_774 = mimp_762->samples_per_second;
  pmap_761->rm_rate = D.45056_774;
  D.45056_775 = mimp_762->samples_per_second;
  pmap_761->adv_rm_rate = D.45056_775;
  D.45052_776 = mimp_762->iananame;
  D.45057_777 = strcasecmp (D.45052_776, "g722");
  if (D.45057_777 != 0)
    goto <bb 282>;
  else
    goto <bb 283>;
  # SUCC: 282 [50.0%]  (true,exec) 283 [50.0%]  (false,exec)

  # BLOCK 282 freq:199
  # PRED: 281 [50.0%]  (true,exec)
  D.45060_778 = mimp_762->actual_samples_per_second;
  pmap_761->rm_rate = D.45060_778;
  # SUCC: 283 [100.0%]  (fallthru,exec)

  # BLOCK 283 freq:398
  # PRED: 281 [50.0%]  (false,exec) 282 [100.0%]  (fallthru,exec)
  D.45061_779 = mimp_762->microseconds_per_packet;
  D.45062_780 = D.45061_779 / 1000;
  D.45063_781 = (uint32_t) D.45062_780;
  pmap_761->codec_ms = D.45063_781;
  D.45064_782 = mimp_762->bits_per_second;
  D.45065_783 = (uint32_t) D.45064_782;
  pmap_761->bitrate = D.45065_783;
  D.45067_784 = mmap_763->rm_params;
  if (D.45067_784 != 0B)
    goto <bb 284>;
  else
    goto <bb 285>;
  # SUCC: 284 [69.8%]  (true,exec) 285 [30.2%]  (false,exec)

  # BLOCK 284 freq:278
  # PRED: 283 [69.8%]  (true,exec)
  D.45067_785 = mmap_763->rm_params;
  # DEBUG __nptr => D.45067_785
  D.47923_1486 = strtol (D.45067_785, 0B, 10);
  # SUCC: 285 [100.0%]  (fallthru,exec)

  # BLOCK 285 freq:398
  # PRED: 284 [100.0%]  (fallthru,exec) 283 [30.2%]  (false,exec)
  # D.47923_146 = PHI <D.47923_1486(284), 1(283)>
  pmap_761->channels = D.47923_146;
  D.45050_788 = mmap_763->rm_encoding;
  D.45071_789 = strcasecmp (D.45050_788, "opus");
  if (D.45071_789 == 0)
    goto <bb 286>;
  else
    goto <bb 296>;
  # SUCC: 286 [50.0%]  (true,exec) 296 [50.0%]  (false,exec)

  # BLOCK 286 freq:199
  # PRED: 285 [50.0%]  (true,exec)
  D.45074_790 = pmap_761->channels;
  if (D.45074_790 == 1)
    goto <bb 287>;
  else
    goto <bb 288>;
  # SUCC: 287 [13.7%]  (true,exec) 288 [86.3%]  (false,exec)

  # BLOCK 287 freq:27
  # PRED: 286 [13.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");
  pmap_761->adv_channels = 1;
  goto <bb 289>;
  # SUCC: 289 [100.0%]  (fallthru,exec)

  # BLOCK 288 freq:172
  # PRED: 286 [86.3%]  (false,exec)
  pmap_761->adv_channels = 2;
  # SUCC: 289 [100.0%]  (fallthru,exec)

  # BLOCK 289 freq:199
  # PRED: 287 [100.0%]  (fallthru,exec) 288 [100.0%]  (fallthru,exec)
  D.45080_791 = mmap_763->rm_fmtp;
  # DEBUG s => D.45080_791
  if (D.45080_791 == 0B)
    goto <bb 292>;
  else
    goto <bb 290>;
  # SUCC: 292 [15.0%]  (true,exec) 290 [85.0%]  (false,exec)

  # BLOCK 290 freq:169
  # PRED: 289 [85.0%]  (false,exec)
  D.47927_1487 = *D.45080_791;
  if (D.47927_1487 == 0)
    goto <bb 292>;
  else
    goto <bb 291>;
  # SUCC: 292 [50.0%]  (true,exec) 291 [50.0%]  (false,exec)

  # BLOCK 291 freq:85
  # PRED: 290 [50.0%]  (false,exec)
  # SUCC: 292 [100.0%]  (fallthru,exec)

  # BLOCK 292 freq:199
  # PRED: 289 [15.0%]  (true,exec) 290 [50.0%]  (true,exec) 291 [100.0%]  (fallthru,exec)
  # D.47926_1488 = PHI <1(289), 1(290), 0(291)>
  if (D.47926_1488 == 0)
    goto <bb 293>;
  else
    goto <bb 295>;
  # SUCC: 293 [29.0%]  (true,exec) 295 [71.0%]  (false,exec)

  # BLOCK 293 freq:58
  # PRED: 292 [29.0%]  (true,exec)
  D.45080_793 = mmap_763->rm_fmtp;
  D.45083_794 = switch_stristr ("stereo=1", D.45080_793);
  if (D.45083_794 != 0B)
    goto <bb 294>;
  else
    goto <bb 295>;
  # SUCC: 294 [85.0%]  (true,exec) 295 [15.0%]  (false,exec)

  # BLOCK 294 freq:49
  # PRED: 293 [85.0%]  (true,exec)
  pmap_761->channels = 2;
  goto <bb 297>;
  # SUCC: 297 [100.0%]  (fallthru,exec)

  # BLOCK 295 freq:150
  # PRED: 292 [71.0%]  (false,exec) 293 [15.0%]  (false,exec)
  pmap_761->channels = 1;
  goto <bb 297>;
  # SUCC: 297 [100.0%]  (fallthru,exec)

  # BLOCK 296 freq:199
  # PRED: 285 [50.0%]  (false,exec)
  D.45074_795 = pmap_761->channels;
  pmap_761->adv_channels = D.45074_795;
  # SUCC: 297 [100.0%]  (fallthru,exec)

  # BLOCK 297 freq:398
  # PRED: 295 [100.0%]  (fallthru,exec) 296 [100.0%]  (fallthru,exec) 294 [100.0%]  (fallthru,exec)
  D.45086_796 = connection_124->c_address;
  D.45087_797 = switch_core_perform_session_strdup (session_161(D), D.45086_796, "src/switch_core_media.c", &__func__, 3563);
  pmap_761->remote_sdp_ip = D.45087_797;
  D.44697_798 = m_28->m_port;
  D.45088_799 = (short unsigned int) D.44697_798;
  pmap_761->remote_sdp_port = D.45088_799;
  D.45080_800 = mmap_763->rm_fmtp;
  D.45089_801 = switch_core_perform_session_strdup (session_161(D), D.45080_800, "src/switch_core_media.c", &__func__, 3565);
  pmap_761->rm_fmtp = D.45089_801;
  D.45054_802 = mmap_763->rm_pt;
  D.45055_803 = (unsigned char) D.45054_802;
  pmap_761->agreed_pt = D.45055_803;
  D.44655_804 = smh_186->num_negotiated_codecs;
  smh_186->negotiated_codecs[D.44655_804] = mimp_762;
  D.45090_805 = D.44655_804 + 1;
  smh_186->num_negotiated_codecs = D.45090_805;
  D.45054_806 = mmap_763->rm_pt;
  D.45055_807 = (unsigned char) D.45054_806;
  pmap_761->recv_pt = D.45055_807;
  j_808 = j_135 + 1;
  # DEBUG j => j_808
  # SUCC: 298 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 298 freq:411
  # PRED: 277 [100.0%]  (fallthru,exec) 297 [100.0%]  (fallthru,dfs_back,exec)
  # j_135 = PHI <0(277), j_808(297)>
  # DEBUG j => j_135
  if (j_135 < m_idx_107)
    goto <bb 278>;
  else
    goto <bb 299>;
  # SUCC: 278 [96.8%]  (true,exec) 299 [3.2%]  (false,exec)

  # BLOCK 299 freq:27
  # PRED: 274 [50.0%]  (false,exec) 298 [3.2%]  (false,exec)
  # match_12 = PHI <match_11(274), 1(298)>
  # DEBUG match => match_12
  if (match_12 != 0)
    goto <bb 300>;
  else
    goto <bb 310>;
  # SUCC: 300 [29.0%]  (true,exec) 310 [71.0%]  (false,exec)

  # BLOCK 300 freq:8
  # PRED: 299 [29.0%]  (true,exec)
  D.44750_809 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_810 = D.44750_809->remote_sdp_port;
  D.44767_811 = (int) D.44762_810;
  switch_snprintf (&tmp, 50, "%d", D.44767_811);
  D.44530_812 = session_161(D)->channel;
  D.44750_813 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_814 = D.44750_813->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_812, "remote_media_ip", D.44760_814, 1);
  D.44530_815 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_815, "remote_media_port", &tmp, 1);
  D.44750_816 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.45093_817 = D.44750_816->recv_pt;
  D.45094_818 = (int) D.45093_817;
  switch_snprintf (&tmp, 50, "%d", D.45094_818);
  D.44530_819 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_819, "rtp_audio_recv_pt", &tmp, 1);
  D.45095_820 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec;
  # DEBUG codec => D.45095_820
  if (D.45095_820 != 0B)
    goto <bb 301>;
  else
    goto <bb 305>;
  # SUCC: 301 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

  # BLOCK 301 freq:7
  # PRED: 300 [85.0%]  (true,exec)
  D.47935_1489 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;
  D.47934_1490 = D.47935_1489 & 256;
  if (D.47934_1490 != 0)
    goto <bb 302>;
  else
    goto <bb 305>;
  # SUCC: 302 [50.0%]  (true,exec) 305 [50.0%]  (false,exec)

  # BLOCK 302 freq:3
  # PRED: 301 [50.0%]  (true,exec)
  D.47933_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;
  if (D.47933_1491 != 0B)
    goto <bb 303>;
  else
    goto <bb 305>;
  # SUCC: 303 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

  # BLOCK 303 freq:3
  # PRED: 302 [85.0%]  (true,exec)
  D.47932_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;
  if (D.47932_1492 != 0B)
    goto <bb 304>;
  else
    goto <bb 305>;
  # SUCC: 304 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

  # BLOCK 304 freq:2
  # PRED: 303 [85.0%]  (true,exec)
  D.47931_1493 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;
  if (D.47931_1493 != 0B)
    goto <bb 306>;
  else
    goto <bb 305>;
  # SUCC: 306 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

  # BLOCK 305 freq:6
  # PRED: 300 [15.0%]  (false,exec) 301 [50.0%]  (false,exec) 302 [15.0%]  (false,exec) 303 [15.0%]  (false,exec) 304 [15.0%]  (false,exec)
  # SUCC: 306 [100.0%]  (fallthru,exec)

  # BLOCK 306 freq:8
  # PRED: 304 [85.0%]  (true,exec) 305 [100.0%]  (fallthru,exec)
  # iftmp.104_1494 = PHI <1(304), 0(305)>
  if (iftmp.104_1494 != 0)
    goto <bb 307>;
  else
    goto <bb 308>;
  # SUCC: 307 [50.0%]  (true,exec) 308 [50.0%]  (false,exec)

  # BLOCK 307 freq:4
  # PRED: 306 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;
  # SUCC: 308 [100.0%]  (fallthru,exec)

  # BLOCK 308 freq:8
  # PRED: 306 [50.0%]  (false,exec) 307 [100.0%]  (fallthru,exec)
  D.44471_822 = smh_186->mparams;
  D.45099_823 = D.44471_822->codec_flags;
  D.45100_824 = switch_core_media_set_codec (session_161(D), 0, D.45099_823);
  if (D.45100_824 == 0)
    goto <bb 309>;
  else
    goto <bb 310>;
  # SUCC: 309 [29.0%]  (true,exec) 310 [71.0%]  (false,exec)

  # BLOCK 309 freq:2
  # PRED: 308 [29.0%]  (true,exec)
  # DEBUG got_audio => 1
  check_ice (smh_186, 0, sdp_198, m_28);
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 310 freq:27
  # PRED: 299 [71.0%]  (false,exec) 309 [100.0%]  (fallthru,exec) 308 [71.0%]  (false,exec)
  # match_13 = PHI <match_12(299), match_12(309), 0(308)>
  # got_audio_65 = PHI <got_audio_67(299), 1(309), got_audio_67(308)>
  # DEBUG got_audio => got_audio_65
  # DEBUG match => match_13
  if (best_te_20 == 0)
    goto <bb 311>;
  else
    goto <bb 314>;
  # SUCC: 311 [29.0%]  (true,exec) 314 [71.0%]  (false,exec)

  # BLOCK 311 freq:8
  # PRED: 310 [29.0%]  (true,exec)
  D.45108_827 = switch_media_handle_test_media_flag (smh_186, 8);
  if (D.45108_827 != 0)
    goto <bb 313>;
  else
    goto <bb 312>;
  # SUCC: 313 [50.0%]  (true,exec) 312 [50.0%]  (false,exec)

  # BLOCK 312 freq:4
  # PRED: 311 [50.0%]  (false,exec)
  D.44530_828 = session_161(D)->channel;
  D.45110_829 = switch_channel_test_flag (D.44530_828, 93);
  if (D.45110_829 != 0)
    goto <bb 313>;
  else
    goto <bb 314>;
  # SUCC: 313 [50.0%]  (true,exec) 314 [50.0%]  (false,exec)

  # BLOCK 313 freq:6
  # PRED: 311 [50.0%]  (true,exec) 312 [50.0%]  (true,exec)
  D.44471_830 = smh_186->mparams;
  D.45111_831 = D.44471_830->te;
  D.45112_832 = (int) D.45111_831;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45112_832);
  D.44471_833 = smh_186->mparams;
  best_te_834 = D.44471_833->te;
  # DEBUG best_te => best_te_834
  # SUCC: 314 [100.0%]  (fallthru,exec)

  # BLOCK 314 freq:27
  # PRED: 310 [71.0%]  (false,exec) 312 [50.0%]  (false,exec) 313 [100.0%]  (fallthru,exec)
  # best_te_21 = PHI <best_te_20(310), best_te_20(312), best_te_834(313)>
  # DEBUG best_te => best_te_21
  if (best_te_21 != 0)
    goto <bb 315>;
  else
    goto <bb 320>;
  # SUCC: 315 [50.0%]  (true,exec) 320 [50.0%]  (false,exec)

  # BLOCK 315 freq:13
  # PRED: 314 [50.0%]  (true,exec)
  D.45115_835 = switch_channel_direction (channel_162);
  if (D.45115_835 == 1)
    goto <bb 316>;
  else
    goto <bb 318>;
  # SUCC: 316 [28.0%]  (true,exec) 318 [72.0%]  (false,exec)

  # BLOCK 316 freq:4
  # PRED: 315 [28.0%]  (true,exec)
  D.44471_836 = smh_186->mparams;
  D.44471_836->te = best_te_21;
  # DEBUG D#11 => D.44471_836->te
  # DEBUG te => D#11
  D.44857_838 = (int) best_te_21;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_838);
  D.44530_839 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_839, "dtmf_type", "rfc2833", 1);
  D.44471_840 = smh_186->mparams;
  D.44471_840->dtmf_type = 0;
  D.44605_841 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_841 != 0B)
    goto <bb 317>;
  else
    goto <bb 418>;
  # SUCC: 317 [69.8%]  (true,exec) 418 [30.2%]  (false,exec)

  # BLOCK 317 freq:3
  # PRED: 316 [69.8%]  (true,exec)
  D.44605_842 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_event (D.44605_842, best_te_21);
  D.44530_843 = session_161(D)->channel;
  D.44857_844 = (int) best_te_21;
  switch_channel_set_variable_printf (D.44530_843, "rtp_2833_send_payload", "%d", D.44857_844);
  goto <bb 418>;
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 318 freq:10
  # PRED: 315 [72.0%]  (false,exec)
  D.44471_846 = smh_186->mparams;
  D.44471_846->te = best_te_21;
  D.45111_847 = D.44471_846->te;
  D.44471_846->recv_te = D.45111_847;
  te_848 = D.44471_846->recv_te;
  # DEBUG te => te_848
  D.45121_849 = (int) te_848;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45121_849);
  D.44530_850 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_850, "dtmf_type", "rfc2833", 1);
  D.44471_851 = smh_186->mparams;
  D.44471_851->dtmf_type = 0;
  D.44605_852 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_852 != 0B)
    goto <bb 319>;
  else
    goto <bb 418>;
  # SUCC: 319 [69.8%]  (true,exec) 418 [30.2%]  (false,exec)

  # BLOCK 319 freq:7
  # PRED: 318 [69.8%]  (true,exec)
  D.44605_853 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_event (D.44605_853, te_848);
  D.44530_854 = session_161(D)->channel;
  D.45121_855 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_854, "rtp_2833_send_payload", "%d", D.45121_855);
  D.44605_856 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_recv_event (D.44605_856, te_848);
  D.44530_857 = session_161(D)->channel;
  D.45121_858 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_857, "rtp_2833_recv_payload", "%d", D.45121_858);
  goto <bb 418>;
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 320 freq:13
  # PRED: 314 [50.0%]  (false,exec)
  D.45125_859 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);
  D.45126_860 = switch_false (D.45125_859);
  if (D.45126_860 == 0)
    goto <bb 321>;
  else
    goto <bb 322>;
  # SUCC: 321 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

  # BLOCK 321 freq:7
  # PRED: 320 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
  D.44530_861 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_861, "dtmf_type", "info", 1);
  D.44471_862 = smh_186->mparams;
  D.44471_862->dtmf_type = 1;
  D.44471_864 = smh_186->mparams;
  D.44471_864->te = 0;
  D.45111_865 = D.44471_864->te;
  D.44471_864->recv_te = D.45111_865;
  # DEBUG D#12 => D.44471_864->recv_te
  # DEBUG te => D#12
  goto <bb 418>;
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 322 freq:7
  # PRED: 320 [50.0%]  (false,exec)
  D.44530_867 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_867, "dtmf_type", "none", 1);
  D.44471_868 = smh_186->mparams;
  D.44471_868->dtmf_type = 2;
  D.44471_870 = smh_186->mparams;
  D.44471_870->te = 0;
  D.45111_871 = D.44471_870->te;
  D.44471_870->recv_te = D.45111_871;
  # DEBUG D#13 => D.44471_870->recv_te
  # DEBUG te => D#13
  goto <bb 418>;
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 323 freq:311
  # PRED: 136 [72.0%]  (false,exec) 137 [71.0%]  (false,exec)
  D.44681_873 = m_28->m_type;
  if (D.44681_873 == 3)
    goto <bb 324>;
  else
    goto <bb 418>;
  # SUCC: 324 [28.0%]  (true,exec) 418 [72.0%]  (false,exec)

  # BLOCK 324 freq:87
  # PRED: 323 [28.0%]  (true,exec)
  D.44697_874 = m_28->m_port;
  if (D.44697_874 != 0)
    goto <bb 325>;
  else
    goto <bb 418>;
  # SUCC: 325 [29.0%]  (true,exec) 418 [71.0%]  (false,exec)

  # BLOCK 325 freq:25
  # PRED: 324 [29.0%]  (true,exec)
  # DEBUG mimp => 0B
  # DEBUG vmatch => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  memset (&matches, 0, 480);
  memset (&near_matches, 0, 480);
  D.44530_879 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_879, "video_possible", "true", 1);
  connection_880 = sdp_198->sdp_connection;
  # DEBUG connection => connection_880
  D.44546_881 = m_28->m_connections;
  if (D.44546_881 != 0B)
    goto <bb 326>;
  else
    goto <bb 327>;
  # SUCC: 326 [85.0%]  (true,exec) 327 [15.0%]  (false,exec)

  # BLOCK 326 freq:21
  # PRED: 325 [85.0%]  (true,exec)
  connection_882 = m_28->m_connections;
  # DEBUG connection => connection_882
  # SUCC: 327 [100.0%]  (fallthru,exec)

  # BLOCK 327 freq:25
  # PRED: 325 [15.0%]  (false,exec) 326 [100.0%]  (fallthru,exec)
  # connection_125 = PHI <connection_880(325), connection_882(326)>
  # DEBUG connection => connection_125
  if (connection_125 == 0B)
    goto <bb 328>;
  else
    goto <bb 329>;
  # SUCC: 328 [2.0%]  (true,exec) 329 [98.0%]  (false,exec)

  # BLOCK 328 freq:1
  # PRED: 327 [2.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 329 freq:25
  # PRED: 327 [98.0%]  (false,exec)
  map_884 = m_28->m_rtpmaps;
  # DEBUG map => map_884
  goto <bb 394>;
  # SUCC: 394 [100.0%]  (fallthru,exec)

  # BLOCK 330 freq:453
  # PRED: 394 [95.5%]  (true,exec)
  D.45138_885 = switch_rtp_has_dtls ();
  if (D.45138_885 != 0)
    goto <bb 331>;
  else
    goto <bb 341>;
  # SUCC: 331 [29.0%]  (true,exec) 341 [71.0%]  (false,exec)

  # BLOCK 331 freq:131
  # PRED: 330 [29.0%]  (true,exec)
  D.45141_886 = dtls_ok (session_161(D));
  if (D.45141_886 != 0)
    goto <bb 332>;
  else
    goto <bb 341>;
  # SUCC: 332 [50.0%]  (true,exec) 341 [50.0%]  (false,exec)

  # BLOCK 332 freq:66
  # PRED: 331 [50.0%]  (true,exec)
  attr_887 = m_28->m_attributes;
  # DEBUG attr => attr_887
  goto <bb 340>;
  # SUCC: 340 [100.0%]  (fallthru,exec)

  # BLOCK 333 freq:665
  # PRED: 340 [91.0%]  (true,exec)
  D.44590_888 = attr_32->a_name;
  D.45144_889 = strcasecmp (D.44590_888, "fingerprint");
  if (D.45144_889 == 0)
    goto <bb 334>;
  else
    goto <bb 339>;
  # SUCC: 334 [50.0%]  (true,exec) 339 [50.0%]  (false,exec)

  # BLOCK 334 freq:332
  # PRED: 333 [50.0%]  (true,exec)
  D.44619_890 = attr_32->a_value;
  # DEBUG s => D.44619_890
  if (D.44619_890 == 0B)
    goto <bb 337>;
  else
    goto <bb 335>;
  # SUCC: 337 [15.0%]  (true,exec) 335 [85.0%]  (false,exec)

  # BLOCK 335 freq:283
  # PRED: 334 [85.0%]  (false,exec)
  D.47940_1496 = *D.44619_890;
  if (D.47940_1496 == 0)
    goto <bb 337>;
  else
    goto <bb 336>;
  # SUCC: 337 [50.0%]  (true,exec) 336 [50.0%]  (false,exec)

  # BLOCK 336 freq:141
  # PRED: 335 [50.0%]  (false,exec)
  # SUCC: 337 [100.0%]  (fallthru,exec)

  # BLOCK 337 freq:332
  # PRED: 334 [15.0%]  (true,exec) 335 [50.0%]  (true,exec) 336 [100.0%]  (fallthru,exec)
  # D.47939_1497 = PHI <1(334), 1(335), 0(336)>
  if (D.47939_1497 == 0)
    goto <bb 338>;
  else
    goto <bb 339>;
  # SUCC: 338 [50.0%]  (true,exec) 339 [50.0%]  (false,exec)

  # BLOCK 338 freq:166
  # PRED: 337 [50.0%]  (true,exec)
  # DEBUG got_video_crypto => 1
  # SUCC: 339 [100.0%]  (fallthru,exec)

  # BLOCK 339 freq:665
  # PRED: 333 [50.0%]  (false,exec) 337 [50.0%]  (false,exec) 338 [100.0%]  (fallthru,exec)
  # got_video_crypto_57 = PHI <got_video_crypto_58(333), got_video_crypto_58(337), 1(338)>
  # DEBUG got_video_crypto => got_video_crypto_57
  attr_893 = attr_32->a_next;
  # DEBUG attr => attr_893
  # SUCC: 340 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 340 freq:730
  # PRED: 332 [100.0%]  (fallthru,exec) 339 [100.0%]  (fallthru,dfs_back,exec)
  # attr_32 = PHI <attr_887(332), attr_893(339)>
  # got_video_crypto_58 = PHI <got_video_crypto_62(332), got_video_crypto_57(339)>
  # DEBUG got_video_crypto => got_video_crypto_58
  # DEBUG attr => attr_32
  if (attr_32 != 0B)
    goto <bb 333>;
  else
    goto <bb 341>;
  # SUCC: 333 [91.0%]  (true,exec) 341 [9.0%]  (false,exec)

  # BLOCK 341 freq:453
  # PRED: 330 [71.0%]  (false,exec) 331 [50.0%]  (false,exec) 340 [9.0%]  (false,exec)
  # got_video_crypto_59 = PHI <got_video_crypto_62(330), got_video_crypto_62(331), got_video_crypto_58(340)>
  # DEBUG got_video_crypto => got_video_crypto_59
  attr_894 = m_28->m_attributes;
  # DEBUG attr => attr_894
  goto <bb 371>;
  # SUCC: 371 [100.0%]  (fallthru,exec)

  # BLOCK 342 freq:9550
  # PRED: 371 [95.5%]  (true,exec)
  D.44590_895 = attr_33->a_name;
  D.45152_896 = strcasecmp (D.44590_895, "framerate");
  if (D.45152_896 == 0)
    goto <bb 343>;
  else
    goto <bb 344>;
  # SUCC: 343 [50.0%]  (true,exec) 344 [50.0%]  (false,exec)

  # BLOCK 343 freq:4775
  # PRED: 342 [50.0%]  (true,exec)
  D.44619_897 = attr_33->a_value;
  if (D.44619_897 != 0B)
    goto <bb 370>;
  else
    goto <bb 344>;
  # SUCC: 370 [85.0%]  (true,exec) 344 [15.0%]  (false,exec)

  # BLOCK 344 freq:5491
  # PRED: 342 [50.0%]  (false,exec) 343 [15.0%]  (false,exec)
  D.44590_898 = attr_33->a_name;
  D.45155_899 = strcasecmp (D.44590_898, "rtcp-fb");
  if (D.45155_899 == 0)
    goto <bb 345>;
  else
    goto <bb 352>;
  # SUCC: 345 [50.0%]  (true,exec) 352 [50.0%]  (false,exec)

  # BLOCK 345 freq:2746
  # PRED: 344 [50.0%]  (true,exec)
  D.44619_900 = attr_33->a_value;
  # DEBUG s => D.44619_900
  if (D.44619_900 == 0B)
    goto <bb 348>;
  else
    goto <bb 346>;
  # SUCC: 348 [15.0%]  (true,exec) 346 [85.0%]  (false,exec)

  # BLOCK 346 freq:2334
  # PRED: 345 [85.0%]  (false,exec)
  D.47944_1498 = *D.44619_900;
  if (D.47944_1498 == 0)
    goto <bb 348>;
  else
    goto <bb 347>;
  # SUCC: 348 [50.0%]  (true,exec) 347 [50.0%]  (false,exec)

  # BLOCK 347 freq:1167
  # PRED: 346 [50.0%]  (false,exec)
  # SUCC: 348 [100.0%]  (fallthru,exec)

  # BLOCK 348 freq:2746
  # PRED: 345 [15.0%]  (true,exec) 346 [50.0%]  (true,exec) 347 [100.0%]  (fallthru,exec)
  # D.47943_1499 = PHI <1(345), 1(346), 0(347)>
  if (D.47943_1499 == 0)
    goto <bb 349>;
  else
    goto <bb 370>;
  # SUCC: 349 [29.0%]  (true,exec) 370 [71.0%]  (false,exec)

  # BLOCK 349 freq:796
  # PRED: 348 [29.0%]  (true,exec)
  D.44619_902 = attr_33->a_value;
  D.45161_903 = switch_stristr ("fir", D.44619_902);
  if (D.45161_903 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;
  # SUCC: 350 [85.0%]  (true,exec) 351 [15.0%]  (false,exec)

  # BLOCK 350 freq:677
  # PRED: 349 [85.0%]  (true,exec)
  D.45164_904 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;
  D.45165_905 = D.45164_904 + 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45165_905;
  # SUCC: 351 [100.0%]  (fallthru,exec)

  # BLOCK 351 freq:796
  # PRED: 349 [15.0%]  (false,exec) 350 [100.0%]  (fallthru,exec)
  D.44471_906 = smh_186->mparams;
  D.44471_906->rtcp_video_interval_msec = "10000";
  goto <bb 370>;
  # SUCC: 370 [100.0%]  (fallthru,exec)

  # BLOCK 352 freq:2746
  # PRED: 344 [50.0%]  (false,exec)
  D.44590_907 = attr_33->a_name;
  D.45169_908 = strcasecmp (D.44590_907, "rtcp");
  if (D.45169_908 == 0)
    goto <bb 353>;
  else
    goto <bb 359>;
  # SUCC: 353 [50.0%]  (true,exec) 359 [50.0%]  (false,exec)

  # BLOCK 353 freq:1373
  # PRED: 352 [50.0%]  (true,exec)
  D.44619_909 = attr_33->a_value;
  if (D.44619_909 != 0B)
    goto <bb 354>;
  else
    goto <bb 359>;
  # SUCC: 354 [85.0%]  (true,exec) 359 [15.0%]  (false,exec)

  # BLOCK 354 freq:1167
  # PRED: 353 [85.0%]  (true,exec)
  # DEBUG __s2_len => 1
  __s1_911 = attr_33->a_value;
  # DEBUG __s1 => __s1_911
  D.45175_912 = *__s1_911;
  D.45176_913 = (int) D.45175_912;
  __result_917 = D.45176_913 + -49;
  # DEBUG __result => __result_917
  if (__result_917 == 0)
    goto <bb 355>;
  else
    goto <bb 356>;
  # SUCC: 355 [50.0%]  (true,exec) 356 [50.0%]  (false,exec)

  # BLOCK 355 freq:583
  # PRED: 354 [50.0%]  (true,exec)
  D.45186_922 = MEM[(const unsigned char *)__s1_911 + 1B];
  D.45187_923 = (int) D.45186_922;
  # DEBUG __result => D.45187_923
  # SUCC: 356 [100.0%]  (fallthru,exec)

  # BLOCK 356 freq:1167
  # PRED: 354 [50.0%]  (false,exec) 355 [100.0%]  (fallthru,exec)
  # __result_140 = PHI <__result_917(354), D.45187_923(355)>
  # DEBUG __result => __result_140
  if (__result_140 == 0)
    goto <bb 357>;
  else
    goto <bb 359>;
  # SUCC: 357 [29.0%]  (true,exec) 359 [71.0%]  (false,exec)

  # BLOCK 357 freq:338
  # PRED: 356 [29.0%]  (true,exec)
  D.44530_953 = session_161(D)->channel;
  D.44619_954 = attr_33->a_value;
  switch_channel_set_variable_var_check (D.44530_953, "rtp_remote_video_rtcp_port", D.44619_954, 1);
  D.44619_955 = attr_33->a_value;
  # DEBUG __nptr => D.44619_955
  D.47947_1500 = strtol (D.44619_955, 0B, 10);
  D.45214_957 = (short unsigned int) D.47947_1500;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45214_957;
  D.44471_958 = smh_186->mparams;
  D.45215_959 = D.44471_958->rtcp_video_interval_msec;
  if (D.45215_959 == 0B)
    goto <bb 358>;
  else
    goto <bb 370>;
  # SUCC: 358 [15.0%]  (true,exec) 370 [85.0%]  (false,exec)

  # BLOCK 358 freq:51
  # PRED: 357 [15.0%]  (true,exec)
  D.44471_960 = smh_186->mparams;
  D.44471_960->rtcp_video_interval_msec = "5000";
  goto <bb 370>;
  # SUCC: 370 [100.0%]  (fallthru,exec)

  # BLOCK 359 freq:2407
  # PRED: 352 [50.0%]  (false,exec) 353 [15.0%]  (false,exec) 356 [71.0%]  (false,exec)
  if (got_video_crypto_61 == 0)
    goto <bb 360>;
  else
    goto <bb 370>;
  # SUCC: 360 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

  # BLOCK 360 freq:1204
  # PRED: 359 [50.0%]  (true,exec)
  D.44590_961 = attr_33->a_name;
  D.45220_962 = strcasecmp (D.44590_961, "crypto");
  if (D.45220_962 == 0)
    goto <bb 361>;
  else
    goto <bb 370>;
  # SUCC: 361 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

  # BLOCK 361 freq:602
  # PRED: 360 [50.0%]  (true,exec)
  D.44619_963 = attr_33->a_value;
  # DEBUG s => D.44619_963
  if (D.44619_963 == 0B)
    goto <bb 364>;
  else
    goto <bb 362>;
  # SUCC: 364 [15.0%]  (true,exec) 362 [85.0%]  (false,exec)

  # BLOCK 362 freq:512
  # PRED: 361 [85.0%]  (false,exec)
  D.47951_1501 = *D.44619_963;
  if (D.47951_1501 == 0)
    goto <bb 364>;
  else
    goto <bb 363>;
  # SUCC: 364 [50.0%]  (true,exec) 363 [50.0%]  (false,exec)

  # BLOCK 363 freq:256
  # PRED: 362 [50.0%]  (false,exec)
  # SUCC: 364 [100.0%]  (fallthru,exec)

  # BLOCK 364 freq:602
  # PRED: 361 [15.0%]  (true,exec) 362 [50.0%]  (true,exec) 363 [100.0%]  (fallthru,exec)
  # D.47950_1502 = PHI <1(361), 1(362), 0(363)>
  if (D.47950_1502 == 0)
    goto <bb 365>;
  else
    goto <bb 370>;
  # SUCC: 365 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

  # BLOCK 365 freq:301
  # PRED: 364 [50.0%]  (true,exec)
  D.44471_965 = smh_186->mparams;
  D.44821_966 = D.44471_965->ndlb;
  D.44822_967 = D.44821_966 & 4;
  if (D.44822_967 == 0)
    goto <bb 366>;
  else
    goto <bb 369>;
  # SUCC: 366 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

  # BLOCK 366 freq:150
  # PRED: 365 [50.0%]  (true,exec)
  D.44530_968 = session_161(D)->channel;
  D.45228_969 = switch_channel_get_variable_dup (D.44530_968, "rtp_allow_crypto_in_avp", 1, -1);
  D.45229_970 = switch_true (D.45228_969);
  if (D.45229_970 == 0)
    goto <bb 367>;
  else
    goto <bb 369>;
  # SUCC: 367 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

  # BLOCK 367 freq:75
  # PRED: 366 [50.0%]  (true,exec)
  D.44666_971 = m_28->m_proto;
  D.44829_972 = D.44666_971 != 257;
  D.44830_973 = got_webrtc_78 == 0;
  D.44831_974 = D.44829_972 && D.44830_973;
  if (D.44831_974 != 0)
    goto <bb 368>;
  else
    goto <bb 369>;
  # SUCC: 368 [4.5%]  (true,exec) 369 [95.5%]  (false,exec)

  # BLOCK 368 freq:3
  # PRED: 367 [4.5%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 420> (done);
  # SUCC: 420 [100.0%]  (fallthru,exec)

  # BLOCK 369 freq:298
  # PRED: 365 [50.0%]  (false,exec) 366 [50.0%]  (false,exec) 367 [95.5%]  (false,exec)
  crypto_976 = attr_33->a_value;
  # DEBUG crypto => crypto_976
  # DEBUG __nptr => crypto_976
  crypto_tag_1503 = strtol (crypto_976, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_video_crypto_978 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, crypto_976, crypto_tag_1503, sdp_type_546(D));
  # DEBUG got_video_crypto => got_video_crypto_978
  # SUCC: 370 [100.0%]  (fallthru,exec)

  # BLOCK 370 freq:9547
  # PRED: 343 [85.0%]  (true,exec) 351 [100.0%]  (fallthru,exec) 358 [100.0%]  (fallthru,exec) 359 [50.0%]  (false,exec) 360 [50.0%]  (false,exec) 364 [50.0%]  (false,exec) 369 [100.0%]  (fallthru,exec) 348 [71.0%]  (false,exec) 357 [85.0%]  (false,exec)
  # got_video_crypto_60 = PHI <got_video_crypto_61(343), got_video_crypto_61(351), got_video_crypto_61(358), got_video_crypto_61(359), got_video_crypto_61(360), got_video_crypto_61(364), got_video_crypto_978(369), got_video_crypto_61(348), got_video_crypto_61(357)>
  # DEBUG got_video_crypto => got_video_crypto_60
  attr_979 = attr_33->a_next;
  # DEBUG attr => attr_979
  # SUCC: 371 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 371 freq:10000
  # PRED: 341 [100.0%]  (fallthru,exec) 370 [100.0%]  (fallthru,dfs_back,exec)
  # attr_33 = PHI <attr_894(341), attr_979(370)>
  # got_video_crypto_61 = PHI <got_video_crypto_59(341), got_video_crypto_60(370)>
  # DEBUG got_video_crypto => got_video_crypto_61
  # DEBUG attr => attr_33
  if (attr_33 != 0B)
    goto <bb 342>;
  else
    goto <bb 372>;
  # SUCC: 342 [95.5%]  (true,exec) 372 [4.5%]  (false,exec)

  # BLOCK 372 freq:450
  # PRED: 371 [4.5%]  (false,exec)
  rm_encoding_980 = map_136->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_980
  if (rm_encoding_980 == 0B)
    goto <bb 373>;
  else
    goto <bb 374>;
  # SUCC: 373 [15.0%]  (true,exec) 374 [85.0%]  (false,exec)

  # BLOCK 373 freq:67
  # PRED: 372 [15.0%]  (true,exec)
  # DEBUG rm_encoding => ""
  # SUCC: 374 [100.0%]  (fallthru,exec)

  # BLOCK 374 freq:450
  # PRED: 372 [85.0%]  (false,exec) 373 [100.0%]  (fallthru,exec)
  # rm_encoding_137 = PHI <rm_encoding_980(372), ""(373)>
  # DEBUG rm_encoding => rm_encoding_137
  # DEBUG i => 0
  goto <bb 392>;
  # SUCC: 392 [100.0%]  (fallthru,exec)

  # BLOCK 375 freq:4550
  # PRED: 392 [91.0%]  (true,exec)
  i.99_983 = (unsigned int) i_139;
  D.45237_984 = i.99_983 * 4;
  D.45238_985 = codec_array_84 + D.45237_984;
  imp_986 = *D.45238_985;
  # DEBUG imp => imp_986
  D.45239_987 = imp_986->codec_type;
  if (D.45239_987 != 1)
    goto <bb 376>;
  else
    goto <bb 377>;
  # SUCC: 376 [86.3%]  (true,exec) 377 [13.7%]  (false,exec)

  # BLOCK 376 freq:3926
  # PRED: 375 [86.3%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 391>;
  # SUCC: 391 [100.0%]  (fallthru,exec)

  # BLOCK 377 freq:624
  # PRED: 375 [13.7%]  (false,exec)
  D.44530_988 = session_161(D)->channel;
  D.45242_989 = switch_channel_direction (D.44530_988);
  if (D.45242_989 == 0)
    goto <bb 378>;
  else
    goto <bb 380>;
  # SUCC: 378 [50.0%]  (true,exec) 380 [50.0%]  (false,exec)

  # BLOCK 378 freq:312
  # PRED: 377 [50.0%]  (true,exec)
  D.44530_990 = session_161(D)->channel;
  D.45245_991 = switch_channel_test_flag (D.44530_990, 114);
  if (D.45245_991 != 0)
    goto <bb 379>;
  else
    goto <bb 380>;
  # SUCC: 379 [50.0%]  (true,exec) 380 [50.0%]  (false,exec)

  # BLOCK 379 freq:156
  # PRED: 378 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 391>;
  # SUCC: 391 [100.0%]  (fallthru,exec)

  # BLOCK 380 freq:468
  # PRED: 377 [50.0%]  (false,exec) 378 [50.0%]  (false,exec)
  D.45248_992 = map_136->rm_pt;
  D.45249_993 = (int) D.45248_992;
  D.45250_994 = imp_986->iananame;
  D.45251_995 = imp_986->ianacode;
  D.45252_996 = (int) D.45251_995;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45249_993, D.45250_994, D.45252_996);
  D.45256_997 = map_136->rm_encoding;
  # DEBUG s => D.45256_997
  if (D.45256_997 == 0B)
    goto <bb 383>;
  else
    goto <bb 381>;
  # SUCC: 383 [15.0%]  (true,exec) 381 [85.0%]  (false,exec)

  # BLOCK 381 freq:398
  # PRED: 380 [85.0%]  (false,exec)
  D.47958_1504 = *D.45256_997;
  if (D.47958_1504 == 0)
    goto <bb 383>;
  else
    goto <bb 382>;
  # SUCC: 383 [50.0%]  (true,exec) 382 [50.0%]  (false,exec)

  # BLOCK 382 freq:199
  # PRED: 381 [50.0%]  (false,exec)
  # SUCC: 383 [100.0%]  (fallthru,exec)

  # BLOCK 383 freq:468
  # PRED: 380 [15.0%]  (true,exec) 381 [50.0%]  (true,exec) 382 [100.0%]  (fallthru,exec)
  # D.47957_1505 = PHI <1(380), 1(381), 0(382)>
  if (D.47957_1505 != 0)
    goto <bb 385>;
  else
    goto <bb 384>;
  # SUCC: 385 [50.0%]  (true,exec) 384 [50.0%]  (false,exec)

  # BLOCK 384 freq:234
  # PRED: 383 [50.0%]  (false,exec)
  D.44471_999 = smh_186->mparams;
  D.44821_1000 = D.44471_999->ndlb;
  D.44937_1001 = (int) D.44821_1000;
  D.44938_1002 = D.44937_1001 & 1;
  if (D.44938_1002 != 0)
    goto <bb 385>;
  else
    goto <bb 387>;
  # SUCC: 385 [50.0%]  (true,exec) 387 [50.0%]  (false,exec)

  # BLOCK 385 freq:351
  # PRED: 383 [50.0%]  (true,exec) 384 [50.0%]  (true,exec)
  D.45248_1004 = map_136->rm_pt;
  D.45249_1005 = (int) D.45248_1004;
  if (D.45249_1005 <= 95)
    goto <bb 386>;
  else
    goto <bb 387>;
  # SUCC: 386 [50.0%]  (true,exec) 387 [50.0%]  (false,exec)

  # BLOCK 386 freq:175
  # PRED: 385 [50.0%]  (true,exec)
  D.45248_1006 = map_136->rm_pt;
  D.45249_1007 = (int) D.45248_1006;
  D.45251_1008 = imp_986->ianacode;
  D.45252_1009 = (int) D.45251_1008;
  vmatch_1010 = D.45249_1007 == D.45252_1009;
  # DEBUG vmatch => vmatch_1010
  goto <bb 388>;
  # SUCC: 388 [100.0%]  (fallthru,exec)

  # BLOCK 387 freq:292
  # PRED: 384 [50.0%]  (false,exec) 385 [50.0%]  (false,exec)
  D.45250_1011 = imp_986->iananame;
  D.45260_1012 = strcasecmp (rm_encoding_137, D.45250_1011);
  vmatch_1013 = D.45260_1012 == 0;
  # DEBUG vmatch => vmatch_1013
  # SUCC: 388 [100.0%]  (fallthru,exec)

  # BLOCK 388 freq:468
  # PRED: 386 [100.0%]  (fallthru,exec) 387 [100.0%]  (fallthru,exec)
  # vmatch_138 = PHI <vmatch_1010(386), vmatch_1013(387)>
  # DEBUG vmatch => vmatch_138
  if (vmatch_138 != 0)
    goto <bb 389>;
  else
    goto <bb 391>;
  # SUCC: 389 [50.0%]  (true,exec) 391 [50.0%]  (false,exec)

  # BLOCK 389 freq:234
  # PRED: 388 [50.0%]  (true,exec)
  D.45263_1014 = map_136->rm_rate;
  D.45264_1015 = imp_986->samples_per_second;
  if (D.45263_1014 == D.45264_1015)
    goto <bb 390>;
  else
    goto <bb 391>;
  # SUCC: 390 [13.7%]  (true,exec) 391 [86.3%]  (false,exec)

  # BLOCK 390 freq:32
  # PRED: 389 [13.7%]  (true,exec)
  matches[m_idx_110].imp = imp_986;
  matches[m_idx_110].map = map_136;
  D.45250_1016 = imp_986->iananame;
  D.45251_1017 = imp_986->ianacode;
  D.45252_1018 = (int) D.45251_1017;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45250_1016, D.45252_1018);
  m_idx_1019 = m_idx_110 + 1;
  # DEBUG m_idx => m_idx_1019
  # SUCC: 391 [100.0%]  (fallthru,exec)

  # BLOCK 391 freq:4550
  # PRED: 376 [100.0%]  (fallthru,exec) 379 [100.0%]  (fallthru,exec) 389 [86.3%]  (false,exec) 388 [50.0%]  (false,exec) 390 [100.0%]  (fallthru,exec)
  # m_idx_109 = PHI <m_idx_110(376), m_idx_110(379), m_idx_110(389), m_idx_110(388), m_idx_1019(390)>
  # DEBUG m_idx => m_idx_109
  i_1021 = i_139 + 1;
  # DEBUG i => i_1021
  # SUCC: 392 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 392 freq:5000
  # PRED: 374 [100.0%]  (fallthru,exec) 391 [100.0%]  (fallthru,dfs_back,exec)
  # m_idx_110 = PHI <m_idx_111(374), m_idx_109(391)>
  # i_139 = PHI <0(374), i_1021(391)>
  # DEBUG i => i_139
  # DEBUG m_idx => m_idx_110
  if (i_139 < total_codecs_85)
    goto <bb 375>;
  else
    goto <bb 393>;
  # SUCC: 375 [91.0%]  (true,exec) 393 [9.0%]  (false,exec)

  # BLOCK 393 freq:450
  # PRED: 392 [9.0%]  (false,exec)
  map_1022 = map_136->rm_next;
  # DEBUG map => map_1022
  # SUCC: 394 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 394 freq:475
  # PRED: 329 [100.0%]  (fallthru,exec) 393 [100.0%]  (fallthru,dfs_back,exec)
  # got_video_crypto_62 = PHI <got_video_crypto_64(329), got_video_crypto_61(393)>
  # m_idx_111 = PHI <0(329), m_idx_110(393)>
  # map_136 = PHI <map_884(329), map_1022(393)>
  # DEBUG map => map_136
  # DEBUG m_idx => m_idx_111
  # DEBUG got_video_crypto => got_video_crypto_62
  if (map_136 != 0B)
    goto <bb 330>;
  else
    goto <bb 395>;
  # SUCC: 330 [95.5%]  (true,exec) 395 [4.5%]  (false,exec)

  # BLOCK 395 freq:21
  # PRED: 394 [4.5%]  (false,exec)
  D.45002_1023 = smh_186->crypto_mode;
  D.45003_1024 = D.45002_1023 == 1;
  D.45267_1025 = got_video_crypto_62 <= 0;
  D.45268_1026 = D.45003_1024 && D.45267_1025;
  if (D.45268_1026 != 0)
    goto <bb 396>;
  else
    goto <bb 397>;
  # SUCC: 396 [29.0%]  (true,exec) 397 [71.0%]  (false,exec)

  # BLOCK 396 freq:6
  # PRED: 395 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG vmatch => 0
  # DEBUG m_idx => 0
  # SUCC: 397 [100.0%]  (fallthru,exec)

  # BLOCK 397 freq:21
  # PRED: 395 [71.0%]  (false,exec) 396 [100.0%]  (fallthru,exec)
  # m_idx_112 = PHI <m_idx_111(395), 0(396)>
  # DEBUG m_idx => m_idx_112
  if (m_idx_112 != 0)
    goto <bb 398>;
  else
    goto <bb 418>;
  # SUCC: 398 [50.0%]  (true,exec) 418 [50.0%]  (false,exec)

  # BLOCK 398 freq:11
  # PRED: 397 [50.0%]  (true,exec)
  # DEBUG j => 0
  if (greedy_47 != 0)
    goto <bb 399>;
  else
    goto <bb 400>;
  # SUCC: 399 [29.0%]  (true,exec) 400 [71.0%]  (false,exec)

  # BLOCK 399 freq:3
  # PRED: 398 [29.0%]  (true,exec)
  greedy_sort (smh_186, &matches, m_idx_112, codec_array_84, total_codecs_85);
  # SUCC: 400 [100.0%]  (fallthru,exec)

  # BLOCK 400 freq:11
  # PRED: 398 [71.0%]  (false,exec) 399 [100.0%]  (fallthru,exec)
  # DEBUG vmatch => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;
  # DEBUG j => 0
  goto <bb 405>;
  # SUCC: 405 [100.0%]  (fallthru,exec)

  # BLOCK 401 freq:320
  # PRED: 405 [96.8%]  (true,exec)
  D.45275_1032 = matches[j_141].map;
  D.45276_1033 = D.45275_1032->rm_encoding;
  D.45275_1034 = matches[j_141].map;
  D.45277_1035 = D.45275_1034->rm_fmtp;
  D.45275_1036 = matches[j_141].map;
  D.45278_1037 = D.45275_1036->rm_pt;
  D.45279_1038 = (uint32_t) D.45278_1037;
  D.45280_1039 = matches[j_141].imp;
  D.45281_1040 = D.45280_1039->samples_per_second;
  D.45280_1041 = matches[j_141].imp;
  D.45282_1042 = D.45280_1041->microseconds_per_packet;
  D.45283_1043 = D.45282_1042 / 1000;
  D.45284_1044 = (uint32_t) D.45283_1043;
  pmap_1045 = switch_core_media_add_payload_map (session_161(D), 1, D.45276_1033, D.45277_1035, sdp_type_546(D), D.45279_1038, D.45281_1040, D.45284_1044, 1);
  # DEBUG pmap => pmap_1045
  if (j_141 == 0)
    goto <bb 402>;
  else
    goto <bb 404>;
  # SUCC: 402 [50.0%]  (true,exec) 404 [50.0%]  (false,exec)

  # BLOCK 402 freq:160
  # PRED: 401 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1045;
  D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45287_1046->current = 1;
  D.45288_1047 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  if (D.45288_1047 != 0B)
    goto <bb 403>;
  else
    goto <bb 404>;
  # SUCC: 403 [69.8%]  (true,exec) 404 [30.2%]  (false,exec)

  # BLOCK 403 freq:112
  # PRED: 402 [69.8%]  (true,exec)
  D.45288_1048 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  D.45291_1049 = pmap_1045->pt;
  switch_rtp_set_default_payload (D.45288_1048, D.45291_1049);
  # SUCC: 404 [100.0%]  (fallthru,exec)

  # BLOCK 404 freq:320
  # PRED: 401 [50.0%]  (false,exec) 402 [30.2%]  (false,exec) 403 [100.0%]  (fallthru,exec)
  mimp_1050 = matches[j_141].imp;
  # DEBUG mimp => mimp_1050
  map_1051 = matches[j_141].map;
  # DEBUG map => map_1051
  D.45256_1052 = map_1051->rm_encoding;
  D.45292_1053 = switch_core_perform_session_strdup (session_161(D), D.45256_1052, "src/switch_core_media.c", &__func__, 3804);
  pmap_1045->rm_encoding = D.45292_1053;
  D.45248_1054 = map_1051->rm_pt;
  D.45293_1055 = (unsigned char) D.45248_1054;
  pmap_1045->recv_pt = D.45293_1055;
  D.45263_1056 = map_1051->rm_rate;
  pmap_1045->rm_rate = D.45263_1056;
  D.45294_1057 = mimp_1050->microseconds_per_packet;
  D.45295_1058 = D.45294_1057 / 1000;
  D.45296_1059 = (uint32_t) D.45295_1058;
  pmap_1045->codec_ms = D.45296_1059;
  D.45086_1060 = connection_125->c_address;
  D.45297_1061 = switch_core_perform_session_strdup (session_161(D), D.45086_1060, "src/switch_core_media.c", &__func__, 3810);
  pmap_1045->remote_sdp_ip = D.45297_1061;
  D.44697_1062 = m_28->m_port;
  D.45088_1063 = (short unsigned int) D.44697_1062;
  pmap_1045->remote_sdp_port = D.45088_1063;
  D.45298_1064 = map_1051->rm_fmtp;
  D.45299_1065 = switch_core_perform_session_strdup (session_161(D), D.45298_1064, "src/switch_core_media.c", &__func__, 3813);
  pmap_1045->rm_fmtp = D.45299_1065;
  D.45248_1066 = map_1051->rm_pt;
  D.45293_1067 = (unsigned char) D.45248_1066;
  pmap_1045->agreed_pt = D.45293_1067;
  j_1068 = j_141 + 1;
  # DEBUG j => j_1068
  # SUCC: 405 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 405 freq:331
  # PRED: 400 [100.0%]  (fallthru,exec) 404 [100.0%]  (fallthru,dfs_back,exec)
  # j_141 = PHI <0(400), j_1068(404)>
  # DEBUG j => j_141
  if (j_141 < m_idx_112)
    goto <bb 401>;
  else
    goto <bb 406>;
  # SUCC: 401 [96.8%]  (true,exec) 406 [3.2%]  (false,exec)

  # BLOCK 406 freq:11
  # PRED: 405 [3.2%]  (false,exec)
  D.45287_1069 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45300_1070 = D.45287_1069->remote_sdp_port;
  D.45301_1071 = (int) D.45300_1070;
  switch_snprintf (&tmp, 50, "%d", D.45301_1071);
  D.44530_1072 = session_161(D)->channel;
  D.45287_1073 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45302_1074 = D.45287_1073->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_1072, "remote_video_ip", D.45302_1074, 1);
  D.44530_1075 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1075, "remote_video_port", &tmp, 1);
  D.44530_1076 = session_161(D)->channel;
  D.45287_1077 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45303_1078 = D.45287_1077->rm_fmtp;
  switch_channel_set_variable_var_check (D.44530_1076, "rtp_video_fmtp", D.45303_1078, 1);
  D.45287_1079 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45304_1080 = D.45287_1079->agreed_pt;
  D.45305_1081 = (int) D.45304_1080;
  switch_snprintf (&tmp, 50, "%d", D.45305_1081);
  D.44530_1082 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1082, "rtp_video_pt", &tmp, 1);
  switch_core_media_check_video_codecs (session_161(D));
  D.45287_1083 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45306_1084 = D.45287_1083->recv_pt;
  D.45307_1085 = (int) D.45306_1084;
  switch_snprintf (&tmp, 50, "%d", D.45307_1085);
  D.44530_1086 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1086, "rtp_video_recv_pt", &tmp, 1);
  if (match_16 == 0)
    goto <bb 407>;
  else
    goto <bb 408>;
  # SUCC: 407 [50.0%]  (true,exec) 408 [50.0%]  (false,exec)

  # BLOCK 407 freq:5
  # PRED: 406 [50.0%]  (true,exec)
  # DEBUG match => 1
  # SUCC: 408 [100.0%]  (fallthru,exec)

  # BLOCK 408 freq:11
  # PRED: 406 [50.0%]  (false,exec) 407 [100.0%]  (fallthru,exec)
  # match_14 = PHI <match_16(406), 1(407)>
  # DEBUG match => match_14
  D.45313_1091 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec;
  # DEBUG codec => D.45313_1091
  if (D.45313_1091 != 0B)
    goto <bb 409>;
  else
    goto <bb 413>;
  # SUCC: 409 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

  # BLOCK 409 freq:9
  # PRED: 408 [85.0%]  (true,exec)
  D.47966_1506 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;
  D.47965_1507 = D.47966_1506 & 256;
  if (D.47965_1507 != 0)
    goto <bb 410>;
  else
    goto <bb 413>;
  # SUCC: 410 [50.0%]  (true,exec) 413 [50.0%]  (false,exec)

  # BLOCK 410 freq:5
  # PRED: 409 [50.0%]  (true,exec)
  D.47964_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;
  if (D.47964_1508 != 0B)
    goto <bb 411>;
  else
    goto <bb 413>;
  # SUCC: 411 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

  # BLOCK 411 freq:4
  # PRED: 410 [85.0%]  (true,exec)
  D.47963_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;
  if (D.47963_1509 != 0B)
    goto <bb 412>;
  else
    goto <bb 413>;
  # SUCC: 412 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

  # BLOCK 412 freq:3
  # PRED: 411 [85.0%]  (true,exec)
  D.47962_1510 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;
  if (D.47962_1510 != 0B)
    goto <bb 414>;
  else
    goto <bb 413>;
  # SUCC: 414 [85.0%]  (true,exec) 413 [15.0%]  (false,exec)

  # BLOCK 413 freq:8
  # PRED: 408 [15.0%]  (false,exec) 409 [50.0%]  (false,exec) 410 [15.0%]  (false,exec) 411 [15.0%]  (false,exec) 412 [15.0%]  (false,exec)
  # SUCC: 414 [100.0%]  (fallthru,exec)

  # BLOCK 414 freq:11
  # PRED: 412 [85.0%]  (true,exec) 413 [100.0%]  (fallthru,exec)
  # iftmp.104_1511 = PHI <1(412), 0(413)>
  if (iftmp.104_1511 != 0)
    goto <bb 415>;
  else
    goto <bb 416>;
  # SUCC: 415 [50.0%]  (true,exec) 416 [50.0%]  (false,exec)

  # BLOCK 415 freq:5
  # PRED: 414 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;
  # SUCC: 416 [100.0%]  (fallthru,exec)

  # BLOCK 416 freq:11
  # PRED: 414 [50.0%]  (false,exec) 415 [100.0%]  (fallthru,exec)
  D.45317_1093 = switch_core_media_set_video_codec (session_161(D), 0);
  if (D.45317_1093 == 0)
    goto <bb 417>;
  else
    goto <bb 418>;
  # SUCC: 417 [29.0%]  (true,exec) 418 [71.0%]  (false,exec)

  # BLOCK 417 freq:3
  # PRED: 416 [29.0%]  (true,exec)
  check_ice (smh_186, 1, sdp_198, m_28);
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 418 freq:334
  # PRED: 321 [100.0%]  (fallthru,exec) 323 [72.0%]  (false,exec) 324 [71.0%]  (false,exec) 397 [50.0%]  (false,exec) 416 [71.0%]  (false,exec) 417 [100.0%]  (fallthru,exec) 318 [30.2%]  (false,exec) 319 [100.0%]  (fallthru,exec) 316 [30.2%]  (false,exec) 317 [100.0%]  (fallthru,exec) 322 [100.0%]  (fallthru,exec)
  # match_15 = PHI <match_13(321), match_16(323), match_16(324), match_16(397), match_14(416), match_14(417), match_13(318), match_13(319), match_13(316), match_13(317), match_13(322)>
  # best_te_22 = PHI <best_te_21(321), best_te_23(323), best_te_23(324), best_te_23(397), best_te_23(416), best_te_23(417), best_te_21(318), best_te_21(319), best_te_21(316), best_te_21(317), best_te_21(322)>
  # cng_pt_26 = PHI <cng_pt_25(321), cng_pt_27(323), cng_pt_27(324), cng_pt_27(397), cng_pt_27(416), cng_pt_27(417), cng_pt_25(318), cng_pt_25(319), cng_pt_25(316), cng_pt_25(317), cng_pt_25(322)>
  # got_crypto_55 = PHI <got_crypto_54(321), got_crypto_56(323), got_crypto_56(324), got_crypto_56(397), got_crypto_56(416), got_crypto_56(417), got_crypto_54(318), got_crypto_54(319), got_crypto_54(316), got_crypto_54(317), got_crypto_54(322)>
  # got_video_crypto_63 = PHI <got_video_crypto_64(321), got_video_crypto_64(323), got_video_crypto_64(324), got_video_crypto_62(397), got_video_crypto_62(416), got_video_crypto_62(417), got_video_crypto_64(318), got_video_crypto_64(319), got_video_crypto_64(316), got_video_crypto_64(317), got_video_crypto_64(322)>
  # got_audio_66 = PHI <got_audio_65(321), got_audio_67(323), got_audio_67(324), got_audio_67(397), got_audio_67(416), got_audio_67(417), got_audio_65(318), got_audio_65(319), got_audio_65(316), got_audio_65(317), got_audio_65(322)>
  # codec_ms_94 = PHI <codec_ms_93(321), codec_ms_95(323), codec_ms_95(324), codec_ms_95(397), codec_ms_95(416), codec_ms_95(417), codec_ms_93(318), codec_ms_93(319), codec_ms_93(316), codec_ms_93(317), codec_ms_93(322)>
  # m_idx_113 = PHI <m_idx_107(321), m_idx_114(323), m_idx_114(324), m_idx_112(397), m_idx_112(416), m_idx_112(417), m_idx_107(318), m_idx_107(319), m_idx_107(316), m_idx_107(317), m_idx_107(322)>
  # nm_idx_121 = PHI <nm_idx_120(321), nm_idx_122(323), nm_idx_122(324), 0(397), 0(416), 0(417), nm_idx_120(318), nm_idx_120(319), nm_idx_120(316), nm_idx_120(317), nm_idx_120(322)>
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  m_1094 = m_28->m_next;
  # DEBUG m => m_1094
  # SUCC: 419 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 419 freq:346
  # PRED: 88 [100.0%]  (fallthru,exec) 418 [100.0%]  (fallthru,dfs_back,exec)
  # match_16 = PHI <0(88), match_15(418)>
  # best_te_23 = PHI <0(88), best_te_22(418)>
  # cng_pt_27 = PHI <0(88), cng_pt_26(418)>
  # m_28 = PHI <m_370(88), m_1094(418)>
  # got_crypto_56 = PHI <0(88), got_crypto_55(418)>
  # got_video_crypto_64 = PHI <0(88), got_video_crypto_63(418)>
  # got_audio_67 = PHI <0(88), got_audio_66(418)>
  # got_avp_69 = PHI <0(88), got_avp_68(418)>
  # got_savp_75 = PHI <0(88), got_savp_74(418)>
  # got_udptl_77 = PHI <0(88), got_udptl_76(418)>
  # got_webrtc_79 = PHI <0(88), got_webrtc_78(418)>
  # codec_ms_95 = PHI <0(88), codec_ms_94(418)>
  # m_idx_114 = PHI <0(88), m_idx_113(418)>
  # nm_idx_122 = PHI <0(88), nm_idx_121(418)>
  # DEBUG nm_idx => nm_idx_122
  # DEBUG m_idx => m_idx_114
  # DEBUG codec_ms => codec_ms_95
  # DEBUG got_webrtc => got_webrtc_79
  # DEBUG got_udptl => got_udptl_77
  # DEBUG got_savp => got_savp_75
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_69
  # DEBUG got_audio => got_audio_67
  # DEBUG got_video_crypto => got_video_crypto_64
  # DEBUG got_crypto => got_crypto_56
  # DEBUG m => m_28
  # DEBUG cng_pt => cng_pt_27
  # DEBUG best_te => best_te_23
  # DEBUG match => match_16
  if (m_28 != 0B)
    goto <bb 89>;
  else
    goto <bb 420> (done);
  # SUCC: 89 [98.0%]  (true,exec) 420 [2.0%]  (false,exec)

  # BLOCK 420 freq:13
  # PRED: 105 [71.0%]  (true,exec) 107 [100.0%]  (fallthru,exec) 125 [100.0%]  (fallthru,exec) 123 [71.0%]  (false,exec) 169 [100.0%]  (fallthru,exec) 175 [100.0%]  (fallthru,exec) 179 [100.0%]  (fallthru,exec) 328 [100.0%]  (fallthru,exec) 368 [100.0%]  (fallthru,exec) 419 [2.0%]  (false,exec) 122 [71.0%]  (false,exec) 135 [100.0%]  (fallthru,exec)
  # match_17 = PHI <1(105), 0(107), 0(125), 1(123), 0(169), 0(175), 0(179), 0(328), 0(368), match_16(419), 1(122), 1(135)>
done:
  # DEBUG match => match_17
  if (parser_196 != 0B)
    goto <bb 421>;
  else
    goto <bb 422>;
  # SUCC: 421 [69.8%]  (true,exec) 422 [30.2%]  (false,exec)

  # BLOCK 421 freq:9
  # PRED: 420 [69.8%]  (true,exec)
  sdp_parser_free (parser_196);
  # SUCC: 422 [100.0%]  (fallthru,exec)

  # BLOCK 422 freq:13
  # PRED: 420 [30.2%]  (false,exec) 421 [100.0%]  (fallthru,exec)
  D.44471_1095 = smh_186->mparams;
  D.44471_1095->cng_pt = cng_pt_27;
  # SUCC: 423 [100.0%]  (fallthru,exec)

  # BLOCK 423 freq:23
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 422 [100.0%]  (fallthru,exec)
  # match_142 = PHI <0(4), 0(5), 0(7), match_17(422)>
  return match_142;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_proxy_remote_addr (switch_core_media_proxy_remote_addr)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
;;
;; Loop 3
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 41 40
;;
;; Loop 2
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34 37 36
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 30 31 32 33 29
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 87 5 }
;; 5 succs { 8 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 86 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 23 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 86 26 }
;; 26 succs { 28 }
;; 27 succs { 86 28 }
;; 28 succs { 29 35 }
;; 29 succs { 30 35 }
;; 30 succs { 27 31 }
;; 31 succs { 27 32 }
;; 32 succs { 27 33 }
;; 33 succs { 27 35 }
;; 34 succs { 86 35 }
;; 35 succs { 36 39 }
;; 36 succs { 37 39 }
;; 37 succs { 34 39 }
;; 38 succs { 86 39 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 38 42 }
;; 42 succs { 44 43 }
;; 43 succs { 44 45 }
;; 44 succs { 86 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 66 }
;; 48 succs { 49 66 }
;; 49 succs { 50 52 }
;; 50 succs { 51 52 }
;; 51 succs { 66 }
;; 52 succs { 53 66 }
;; 53 succs { 54 56 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 66 }
;; 58 succs { 59 64 }
;; 59 succs { 60 64 }
;; 60 succs { 62 61 }
;; 61 succs { 62 64 }
;; 62 succs { 63 64 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 86 }
;; 67 succs { 68 71 }
;; 68 succs { 69 71 }
;; 69 succs { 70 71 }
;; 70 succs { 86 }
;; 71 succs { 72 75 }
;; 72 succs { 74 73 }
;; 73 succs { 74 75 }
;; 74 succs { 86 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 86 }
;; 79 succs { 80 84 }
;; 80 succs { 82 81 }
;; 81 succs { 82 84 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 }
;; 87 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
;;
;; Loop 3
;;  header 39, latch 38
;;  depth 1, outer 0
;;  nodes: 39 38 41 40
;;
;; Loop 2
;;  header 35, latch 34
;;  depth 1, outer 0
;;  nodes: 35 34 37 36
;;
;; Loop 1
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 30 31 32 33 29
Created preheader block for loop 3
Created preheader block for loop 2
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44184_91)
(get_scalar_evolution 
  (scalar = D.44184_91)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_90)
(get_scalar_evolution 
  (scalar = D.44163_90)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44184_91)
  (scalar_evolution = D.44163_90 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_90)
(get_scalar_evolution 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_89)
(get_scalar_evolution 
  (scalar = D.44163_89)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_89)
(get_scalar_evolution 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_94)
(get_scalar_evolution 
  (scalar = p_94)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_5 = PHI <p_296(39), p_94(38)>
)
  (init_cond = p_296))
(analyze_evolution_in_loop 
  (loop_phi_node = p_5 = PHI <p_296(39), p_94(38)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = p_296)
  (to_add = 1)
  (res = {p_296, +, 1}_3))
  (evolution_function = {p_296, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = p_5)
  (scalar_evolution = {p_296, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = p_94)
  (scalar_evolution = {p_296 + 1, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [p_296 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if p_296 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (p_296 + 1), bounded by 4294967294
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44184_79)
(get_scalar_evolution 
  (scalar = D.44184_79)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_78)
(get_scalar_evolution 
  (scalar = D.44163_78)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = D.44184_79)
  (scalar_evolution = D.44163_78 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_78)
(get_scalar_evolution 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_77)
(get_scalar_evolution 
  (scalar = D.44163_77)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_77)
(get_scalar_evolution 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_82)
(get_scalar_evolution 
  (scalar = p_82)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_71(35), p_82(34)>
)
  (init_cond = p_71))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_71(35), p_82(34)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = p_71)
  (to_add = 1)
  (res = {p_71, +, 1}_2))
  (evolution_function = {p_71, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = p_4)
  (scalar_evolution = {p_71, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 35 
  (scalar = p_82)
  (scalar_evolution = {p_71 + 1, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [p_71 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if p_71 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (p_71 + 1), bounded by 4294967294
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.44163_57)
(get_scalar_evolution 
  (scalar = D.44163_57)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.44163_57)
(get_scalar_evolution 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_70)
(get_scalar_evolution 
  (scalar = p_70)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <ip_ptr_6(26), p_70(27)>
)
  (init_cond = ip_ptr_6))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <ip_ptr_6(26), p_70(27)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = ip_ptr_6)
  (to_add = 1)
  (res = {ip_ptr_6, +, 1}_1))
  (evolution_function = {ip_ptr_6, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = p_3)
  (scalar_evolution = {ip_ptr_6, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = p_70)
  (scalar_evolution = {ip_ptr_6 + 1, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 1
  exit condition [ip_ptr_6 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if ip_ptr_6 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (ip_ptr_6 + 1), bounded by 4294967294
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 11
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 14
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 15
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 20
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 21
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics (ignored): 14.0%
  first match heuristics: 14.0%
  combined heuristics: 14.0%
  loop branch heuristics: 14.0%
Predictions for bb 28
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 29
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 31
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 32
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 33
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 34
  DS theory heuristics (ignored): 14.0%
  first match heuristics: 14.0%
  combined heuristics: 14.0%
  loop branch heuristics: 14.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 89
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 36
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 37
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 38
  DS theory heuristics (ignored): 14.0%
  first match heuristics: 14.0%
  combined heuristics: 14.0%
  loop branch heuristics: 14.0%
1 edges in bb 39 predicted to even probabilities
Predictions for bb 88
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 40
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 41
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 42
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 43
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 48
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 49
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 50
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 51 predicted to even probabilities
Predictions for bb 52
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 53
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 54
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 55 predicted to even probabilities
Predictions for bb 56
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 57 predicted to even probabilities
Predictions for bb 58
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 59
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 60
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 61
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 62
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 63 predicted to even probabilities
Predictions for bb 64
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 65 predicted to even probabilities
Predictions for bb 66
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 67
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 68
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 69
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 70 predicted to even probabilities
Predictions for bb 71
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
Predictions for bb 72
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 73
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 74 predicted to even probabilities
Predictions for bb 75
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 76 predicted to even probabilities
Predictions for bb 77
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 78 predicted to even probabilities
Predictions for bb 79
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 80
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 81
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 82
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 85 predicted to even probabilities
1 edges in bb 86 predicted to even probabilities
1 edges in bb 87 predicted to even probabilities

;; Function switch_core_media_proxy_remote_addr

;; 
90 basic blocks, 150 edges, last basic block 90.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  87 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  8 [15.0%]  (true,exec) 6 [85.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (false,exec)
Successors:  8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [15.0%]  (true,exec) 6 [50.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [50.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
Successors:  13 [15.0%]  (true,exec) 11 [85.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (false,exec)
Successors:  13 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  10 [15.0%]  (true,exec) 11 [50.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  86 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [29.0%]  (false,exec)
Successors:  16 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [6.7%]  (false,exec)
Successors:  16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [93.3%]  (true,exec) 15 [85.0%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [15.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [15.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (true,exec)
Successors:  21 [69.8%]  (true,exec) 23 [30.2%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [69.8%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  19 [15.0%]  (false,exec) 20 [30.2%]  (false,exec) 21 [50.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [15.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  86 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [50.0%]  (false,exec)
Successors:  28 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec) 31 [28.0%]  (true,exec) 32 [50.0%]  (true,exec) 33 [97.8%]  (true,exec)
Successors:  86 [14.0%]  (true,exec) 28 [86.0%]  (dfs_back,false,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [100.0%]  (fallthru,exec) 27 [86.0%]  (dfs_back,false,exec)
Successors:  29 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [97.8%]  (true,exec)
Successors:  30 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [97.8%]  (true,exec)
Successors:  27 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec)
Successors:  27 [28.0%]  (true,exec) 32 [72.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [72.0%]  (false,exec)
Successors:  27 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [50.0%]  (false,exec)
Successors:  27 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  37 [97.8%]  (true,exec)
Successors:  86 [14.0%]  (true,exec) 89 [86.0%]  (dfs_back,false,exec)

Basic block 35 (new, reachable)
Predecessors:  29 [2.2%]  (false,exec) 33 [2.2%]  (false,exec) 28 [2.2%]  (false,exec)
Successors:  89 [100.0%]  (fallthru)

Basic block 89 (new)
Predecessors:  35 [100.0%]  (fallthru) 34 [86.0%]  (dfs_back,false,exec)
Successors:  36 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  89 [97.8%]  (true,exec)
Successors:  37 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [97.8%]  (true,exec)
Successors:  34 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  41 [97.8%]  (true,exec)
Successors:  86 [14.0%]  (true,exec) 88 [86.0%]  (dfs_back,false,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [2.2%]  (false,exec) 37 [2.2%]  (false,exec) 89 [2.2%]  (false,exec)
Successors:  88 [100.0%]  (fallthru)

Basic block 88 (new)
Predecessors:  39 [100.0%]  (fallthru) 38 [86.0%]  (dfs_back,false,exec)
Successors:  40 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  88 [97.8%]  (true,exec)
Successors:  41 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [97.8%]  (true,exec)
Successors:  38 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  88 [2.2%]  (false,exec) 40 [2.2%]  (false,exec) 41 [2.2%]  (false,exec)
Successors:  44 [29.0%]  (true,exec) 43 [71.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [71.0%]  (false,exec)
Successors:  44 [71.0%]  (true,exec) 45 [29.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  42 [29.0%]  (true,exec) 43 [71.0%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  43 [29.0%]  (false,exec)
Successors:  46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [29.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [85.0%]  (true,exec) 66 [15.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [85.0%]  (true,exec)
Successors:  49 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [50.0%]  (true,exec)
Successors:  50 [50.0%]  (true,exec) 52 [50.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [50.0%]  (true,exec)
Successors:  51 [13.7%]  (true,exec) 52 [86.3%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [13.7%]  (true,exec)
Successors:  66 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  49 [50.0%]  (false,exec) 50 [86.3%]  (false,exec)
Successors:  53 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [50.0%]  (true,exec)
Successors:  54 [29.0%]  (true,exec) 56 [71.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [29.0%]  (true,exec)
Successors:  55 [69.8%]  (true,exec) 56 [30.2%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [69.8%]  (true,exec)
Successors:  56 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  53 [71.0%]  (false,exec) 54 [30.2%]  (false,exec) 55 [100.0%]  (fallthru,exec)
Successors:  57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [50.0%]  (true,exec)
Successors:  66 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [50.0%]  (false,exec)
Successors:  59 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [29.0%]  (true,exec)
Successors:  60 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [29.0%]  (true,exec)
Successors:  62 [15.0%]  (true,exec) 61 [85.0%]  (false,exec)

Basic block 61 (new, reachable)
Predecessors:  60 [85.0%]  (false,exec)
Successors:  62 [50.0%]  (true,exec) 64 [50.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  60 [15.0%]  (true,exec) 61 [50.0%]  (true,exec)
Successors:  63 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  62 [29.0%]  (true,exec)
Successors:  64 [100.0%]  (fallthru,exec)

Basic block 64 (new, reachable)
Predecessors:  58 [71.0%]  (false,exec) 59 [71.0%]  (false,exec) 61 [50.0%]  (false,exec) 62 [71.0%]  (false,exec) 63 [100.0%]  (fallthru,exec)
Successors:  65 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [50.0%]  (true,exec)
Successors:  66 [100.0%]  (fallthru,exec)

Basic block 66 (new, reachable)
Predecessors:  47 [15.0%]  (false,exec) 48 [50.0%]  (false,exec) 51 [100.0%]  (fallthru,exec) 52 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 64 [50.0%]  (false,exec) 65 [100.0%]  (fallthru,exec)
Successors:  67 [29.0%]  (true,exec) 86 [71.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [29.0%]  (true,exec)
Successors:  68 [50.0%]  (true,exec) 71 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  69 [50.0%]  (true,exec) 71 [50.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [50.0%]  (true,exec)
Successors:  70 [13.7%]  (true,exec) 71 [86.3%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  69 [13.7%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec) 68 [50.0%]  (false,exec) 69 [86.3%]  (false,exec)
Successors:  72 [93.3%]  (true,exec) 75 [6.7%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [93.3%]  (true,exec)
Successors:  74 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [71.0%]  (false,exec)
Successors:  74 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  72 [29.0%]  (true,exec) 73 [50.0%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 75 (new, reachable)
Predecessors:  71 [6.7%]  (false,exec) 73 [50.0%]  (false,exec)
Successors:  76 [69.8%]  (true,exec) 77 [30.2%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [69.8%]  (true,exec)
Successors:  77 [100.0%]  (fallthru,exec)

Basic block 77 (new, reachable)
Predecessors:  75 [30.2%]  (false,exec) 76 [100.0%]  (fallthru,exec)
Successors:  78 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [50.0%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 79 (new, reachable)
Predecessors:  77 [50.0%]  (false,exec)
Successors:  80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [29.0%]  (true,exec)
Successors:  82 [15.0%]  (true,exec) 81 [85.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [85.0%]  (false,exec)
Successors:  82 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  80 [15.0%]  (true,exec) 81 [50.0%]  (true,exec)
Successors:  83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [29.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  79 [71.0%]  (false,exec) 81 [50.0%]  (false,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [50.0%]  (true,exec) 86 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 86 (new, reachable)
Predecessors:  13 [71.0%]  (true,exec) 25 [50.0%]  (true,exec) 27 [14.0%]  (true,exec) 34 [14.0%]  (true,exec) 38 [14.0%]  (true,exec) 44 [100.0%]  (fallthru,exec) 66 [71.0%]  (false,exec) 70 [100.0%]  (fallthru,exec) 74 [100.0%]  (fallthru,exec) 78 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 84 [50.0%]  (false,exec)
Successors:  87 [100.0%]  (fallthru,exec)

Basic block 87 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 86 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_proxy_remote_addr (struct switch_core_session_t * session, const char * sdp_str)
{
  int D.47994;
  int D.47991;
  int D.47988;
  int D.47985;
  int D.47982;
  int D.47979;
  const char D.47976;
  int D.47975;
  const char D.47972;
  int D.47971;
  register int __result;
  register int __result;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char * tmp;
  static const char __func__[36] = "switch_core_media_proxy_remote_addr";
  static const char __PRETTY_FUNCTION__[36] = "switch_core_media_proxy_remote_addr";
  struct switch_media_handle_t * smh;
  switch_status_t status;
  const char * val;
  int x;
  char * pe;
  char * vid_port_ptr;
  char * port_ptr;
  char * ip_ptr;
  char * p;
  char rvp[512];
  char rp[512];
  char rip[512];
  const char * err;
  int32_t D.44351;
  uint32_t D.44348;
  int D.44347;
  int32_t D.44343;
  switch_status_t D.44337;
  int D.44260;
  switch_port_t D.44258;
  char * D.44256;
  int D.39206;
  _Bool D.44254;
  _Bool D.44253;
  _Bool D.44252;
  uint8_t D.44248;
  struct switch_rtp_t * D.44247;
  int32_t D.44244;
  uint32_t D.44241;
  int D.44240;
  uint32_t D.44236;
  int32_t D.44233;
  const char * err.83;
  switch_status_t D.44226;
  uint8_t D.44218;
  struct switch_rtp_t * D.44217;
  int D.44215;
  int D.39191;
  switch_port_t D.44208;
  char * D.44205;
  struct switch_channel_t * D.44204;
  short unsigned int D.44203;
  char * D.44201;
  struct payload_map_t * D.44200;
  char D.44197;
  short unsigned int D.44196;
  char * D.44194;
  struct payload_map_t * D.44193;
  char D.44192;
  char D.44190;
  char D.44184;
  char D.44180;
  char D.44178;
  _Bool D.44175;
  _Bool D.44174;
  _Bool D.44173;
  char D.44172;
  char D.44171;
  _Bool D.44168;
  _Bool D.44167;
  _Bool D.44166;
  unsigned int x.82;
  char D.44163;
  size_t D.44162;
  _Bool D.44160;
  _Bool D.44159;
  _Bool D.44158;
  struct switch_core_media_params_t * D.44141;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  rip = "";
  rp = "";
  rvp = "";
  # DEBUG ip_ptr => 0B
  # DEBUG port_ptr => 0B
  # DEBUG vid_port_ptr => 0B
  # DEBUG status => 1
  if (session_25(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4152, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_26 = session_25(D)->media_handle;
  # DEBUG smh => smh_26
  if (smh_26 == 0B)
    goto <bb 87>;
  else
    goto <bb 5>;
  # SUCC: 87 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#17 => &smh_26->engines
  # DEBUG a_engine => D#17
  # DEBUG D#16 => &smh_26->engines[1]
  # DEBUG v_engine => D#16
  # DEBUG s => sdp_str_30(D)
  if (sdp_str_30(D) == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;
  # SUCC: 8 [15.0%]  (true,exec) 6 [85.0%]  (false,exec)

  # BLOCK 6 freq:7635
  # PRED: 5 [85.0%]  (false,exec)
  D.47972_363 = *sdp_str_30(D);
  if (D.47972_363 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 7 freq:3818
  # PRED: 6 [50.0%]  (false,exec)
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:8982
  # PRED: 5 [15.0%]  (true,exec) 6 [50.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
  # D.47971_364 = PHI <1(5), 1(6), 0(7)>
  if (D.47971_364 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 9 freq:4491
  # PRED: 8 [50.0%]  (true,exec)
  D.44141_32 = smh_26->mparams;
  sdp_str_33 = D.44141_32->remote_sdp_str;
  # DEBUG sdp_str => sdp_str_33
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:8982
  # PRED: 8 [50.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
  # sdp_str_1 = PHI <sdp_str_30(D)(8), sdp_str_33(9)>
  # DEBUG sdp_str => sdp_str_1
  # DEBUG s => sdp_str_1
  if (sdp_str_1 == 0B)
    goto <bb 13>;
  else
    goto <bb 11>;
  # SUCC: 13 [15.0%]  (true,exec) 11 [85.0%]  (false,exec)

  # BLOCK 11 freq:7635
  # PRED: 10 [85.0%]  (false,exec)
  D.47976_365 = *sdp_str_1;
  if (D.47976_365 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 12 freq:3818
  # PRED: 11 [50.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:8982
  # PRED: 10 [15.0%]  (true,exec) 11 [50.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # D.47975_366 = PHI <1(10), 1(11), 0(12)>
  if (D.47975_366 != 0)
    goto <bb 86> (end);
  else
    goto <bb 14>;
  # SUCC: 86 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

  # BLOCK 14 freq:2605
  # PRED: 13 [29.0%]  (false,exec)
  p_35 = switch_stristr ("c=IN IP4 ", sdp_str_1);
  # DEBUG p => p_35
  if (p_35 != 0B)
    goto <bb 16>;
  else
    goto <bb 15>;
  # SUCC: 16 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

  # BLOCK 15 freq:175
  # PRED: 14 [6.7%]  (false,exec)
  p_36 = switch_stristr ("c=IN IP6 ", sdp_str_1);
  # DEBUG p => p_36
  if (p_36 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 16 freq:2579
  # PRED: 14 [93.3%]  (true,exec) 15 [85.0%]  (true,exec)
  # p_2 = PHI <p_35(14), p_36(15)>
  # DEBUG p => p_2
  ip_ptr_37 = p_2 + 9;
  # DEBUG ip_ptr => ip_ptr_37
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:2605
  # PRED: 15 [15.0%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  # ip_ptr_6 = PHI <0B(15), ip_ptr_37(16)>
  # DEBUG ip_ptr => ip_ptr_6
  p_38 = switch_stristr ("m=audio ", sdp_str_1);
  # DEBUG p => p_38
  if (p_38 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

  # BLOCK 18 freq:2214
  # PRED: 17 [85.0%]  (true,exec)
  port_ptr_39 = p_38 + 8;
  # DEBUG port_ptr => port_ptr_39
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:2605
  # PRED: 17 [15.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # port_ptr_7 = PHI <0B(17), port_ptr_39(18)>
  # DEBUG port_ptr => port_ptr_7
  p_40 = switch_stristr ("m=image ", sdp_str_1);
  # DEBUG p => p_40
  if (p_40 != 0B)
    goto <bb 20>;
  else
    goto <bb 23>;
  # SUCC: 20 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

  # BLOCK 20 freq:2214
  # PRED: 19 [85.0%]  (true,exec)
  tmp_41 = p_40 + 8;
  # DEBUG tmp => tmp_41
  if (tmp_41 != 0B)
    goto <bb 21>;
  else
    goto <bb 23>;
  # SUCC: 21 [69.8%]  (true,exec) 23 [30.2%]  (false,exec)

  # BLOCK 21 freq:1546
  # PRED: 20 [69.8%]  (true,exec)
  # DEBUG __nptr => tmp_41
  D.47979_367 = strtol (tmp_41, 0B, 10);
  if (D.47979_367 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 22 freq:773
  # PRED: 21 [50.0%]  (true,exec)
  # DEBUG port_ptr => tmp_41
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:2605
  # PRED: 19 [15.0%]  (false,exec) 20 [30.2%]  (false,exec) 21 [50.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  # port_ptr_8 = PHI <port_ptr_7(19), port_ptr_7(20), port_ptr_7(21), tmp_41(22)>
  # DEBUG port_ptr => port_ptr_8
  p_44 = switch_stristr ("m=video ", sdp_str_1);
  # DEBUG p => p_44
  if (p_44 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 24 freq:2214
  # PRED: 23 [85.0%]  (true,exec)
  vid_port_ptr_45 = p_44 + 8;
  # DEBUG vid_port_ptr => vid_port_ptr_45
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:2605
  # PRED: 23 [15.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  # vid_port_ptr_9 = PHI <0B(23), vid_port_ptr_45(24)>
  # DEBUG vid_port_ptr => vid_port_ptr_9
  D.44158_46 = ip_ptr_6 == 0B;
  D.44159_47 = port_ptr_8 == 0B;
  D.44160_48 = D.44158_46 || D.44159_47;
  if (D.44160_48 != 0)
    goto <bb 86> (end);
  else
    goto <bb 26>;
  # SUCC: 86 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 26 freq:1302
  # PRED: 25 [50.0%]  (false,exec)
  # DEBUG p => ip_ptr_6
  D.44162_50 = strlen (ip_ptr_6);
  pe_51 = ip_ptr_6 + D.44162_50;
  # DEBUG pe => pe_51
  # DEBUG x => 0
  goto <bb 28>;
  # SUCC: 28 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:6825
  # PRED: 30 [50.0%]  (true,exec) 31 [28.0%]  (true,exec) 32 [50.0%]  (true,exec) 33 [97.8%]  (true,exec)
  D.44163_68 = *p_3;
  rip[x_10] = D.44163_68;
  x_69 = x_10 + 1;
  # DEBUG x => x_69
  p_70 = p_3 + 1;
  # DEBUG p => p_70
  if (p_70 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 28>;
  # SUCC: 86 [14.0%]  (true,exec) 28 [86.0%]  (dfs_back,false,exec)

  # BLOCK 28 freq:7172
  # PRED: 26 [100.0%]  (fallthru,exec) 27 [86.0%]  (dfs_back,false,exec)
  # p_3 = PHI <ip_ptr_6(26), p_70(27)>
  # x_10 = PHI <0(26), x_69(27)>
  # DEBUG x => x_10
  # DEBUG p => p_3
  x.82_53 = (unsigned int) x_10;
  D.44166_54 = x.82_53 <= 510;
  D.44167_55 = p_3 != 0B;
  D.44168_56 = D.44166_54 && D.44167_55;
  if (D.44168_56 != 0)
    goto <bb 29>;
  else
    goto <bb 35>;
  # SUCC: 29 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

  # BLOCK 29 freq:7011
  # PRED: 28 [97.8%]  (true,exec)
  D.44163_57 = *p_3;
  if (D.44163_57 != 0)
    goto <bb 30>;
  else
    goto <bb 35>;
  # SUCC: 30 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

  # BLOCK 30 freq:6853
  # PRED: 29 [97.8%]  (true,exec)
  D.44171_58 = *p_3;
  D.44172_59 = D.44171_58 + 208;
  D.44173_60 = D.44172_59 <= 9;
  D.44174_61 = D.44171_58 == 46;
  D.44175_62 = D.44173_60 || D.44174_61;
  if (D.44175_62 != 0)
    goto <bb 27>;
  else
    goto <bb 31>;
  # SUCC: 27 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

  # BLOCK 31 freq:3427
  # PRED: 30 [50.0%]  (false,exec)
  D.44163_63 = *p_3;
  if (D.44163_63 == 58)
    goto <bb 27>;
  else
    goto <bb 32>;
  # SUCC: 27 [28.0%]  (true,exec) 32 [72.0%]  (false,exec)

  # BLOCK 32 freq:2467
  # PRED: 31 [72.0%]  (false,exec)
  D.44163_64 = *p_3;
  D.44178_65 = D.44163_64 + 159;
  if (D.44178_65 <= 5)
    goto <bb 27>;
  else
    goto <bb 33>;
  # SUCC: 27 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 33 freq:1234
  # PRED: 32 [50.0%]  (false,exec)
  D.44163_66 = *p_3;
  D.44180_67 = D.44163_66 + 191;
  if (D.44180_67 <= 5)
    goto <bb 27>;
  else
    goto <bb 35>;
  # SUCC: 27 [97.8%]  (true,exec) 35 [2.2%]  (false,exec)

  # BLOCK 34 freq:1647
  # PRED: 37 [97.8%]  (true,exec)
  D.44163_80 = *p_4;
  rp[x_11] = D.44163_80;
  x_81 = x_11 + 1;
  # DEBUG x => x_81
  p_82 = p_4 + 1;
  # DEBUG p => p_82
  if (p_82 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 89>;
  # SUCC: 86 [14.0%]  (true,exec) 89 [86.0%]  (dfs_back,false,exec)

  # BLOCK 35 freq:347
  # PRED: 29 [2.2%]  (false,exec) 33 [2.2%]  (false,exec) 28 [2.2%]  (false,exec)
  # p_71 = PHI <port_ptr_8(29), port_ptr_8(33), port_ptr_8(28)>
  # x_83 = PHI <0(29), 0(33), 0(28)>
  # SUCC: 89 [100.0%]  (fallthru)

  # BLOCK 89 freq:1763
  # PRED: 35 [100.0%]  (fallthru) 34 [86.0%]  (dfs_back,false,exec)
  # p_4 = PHI <p_71(35), p_82(34)>
  # x_11 = PHI <x_83(35), x_81(34)>
  # DEBUG x => x_11
  # DEBUG p => p_4
  x.82_73 = (unsigned int) x_11;
  D.44166_74 = x.82_73 <= 510;
  D.44167_75 = p_4 != 0B;
  D.44168_76 = D.44166_74 && D.44167_75;
  if (D.44168_76 != 0)
    goto <bb 36>;
  else
    goto <bb 39>;
  # SUCC: 36 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

  # BLOCK 36 freq:1723
  # PRED: 89 [97.8%]  (true,exec)
  D.44163_77 = *p_4;
  if (D.44163_77 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;
  # SUCC: 37 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

  # BLOCK 37 freq:1685
  # PRED: 36 [97.8%]  (true,exec)
  D.44163_78 = *p_4;
  D.44184_79 = D.44163_78 + 208;
  if (D.44184_79 <= 9)
    goto <bb 34>;
  else
    goto <bb 39>;
  # SUCC: 34 [97.8%]  (true,exec) 39 [2.2%]  (false,exec)

  # BLOCK 38 freq:552
  # PRED: 41 [97.8%]  (true,exec)
  D.44163_92 = *p_5;
  rvp[x_12] = D.44163_92;
  x_93 = x_12 + 1;
  # DEBUG x => x_93
  p_94 = p_5 + 1;
  # DEBUG p => p_94
  if (p_94 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 88>;
  # SUCC: 86 [14.0%]  (true,exec) 88 [86.0%]  (dfs_back,false,exec)

  # BLOCK 39 freq:116
  # PRED: 36 [2.2%]  (false,exec) 37 [2.2%]  (false,exec) 89 [2.2%]  (false,exec)
  # p_296 = PHI <vid_port_ptr_9(36), vid_port_ptr_9(37), vid_port_ptr_9(89)>
  # x_49 = PHI <0(36), 0(37), 0(89)>
  # SUCC: 88 [100.0%]  (fallthru)

  # BLOCK 88 freq:591
  # PRED: 39 [100.0%]  (fallthru) 38 [86.0%]  (dfs_back,false,exec)
  # p_5 = PHI <p_296(39), p_94(38)>
  # x_12 = PHI <x_49(39), x_93(38)>
  # DEBUG x => x_12
  # DEBUG p => p_5
  x.82_85 = (unsigned int) x_12;
  D.44166_86 = x.82_85 <= 510;
  D.44167_87 = p_5 != 0B;
  D.44168_88 = D.44166_86 && D.44167_87;
  if (D.44168_88 != 0)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

  # BLOCK 40 freq:578
  # PRED: 88 [97.8%]  (true,exec)
  D.44163_89 = *p_5;
  if (D.44163_89 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

  # BLOCK 41 freq:565
  # PRED: 40 [97.8%]  (true,exec)
  D.44163_90 = *p_5;
  D.44184_91 = D.44163_90 + 208;
  if (D.44184_91 <= 9)
    goto <bb 38>;
  else
    goto <bb 42>;
  # SUCC: 38 [97.8%]  (true,exec) 42 [2.2%]  (false,exec)

  # BLOCK 42 freq:39
  # PRED: 88 [2.2%]  (false,exec) 40 [2.2%]  (false,exec) 41 [2.2%]  (false,exec)
  D.44190_95 = rip[0];
  if (D.44190_95 == 0)
    goto <bb 44>;
  else
    goto <bb 43>;
  # SUCC: 44 [29.0%]  (true,exec) 43 [71.0%]  (false,exec)

  # BLOCK 43 freq:28
  # PRED: 42 [71.0%]  (false,exec)
  D.44192_96 = rp[0];
  if (D.44192_96 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [71.0%]  (true,exec) 45 [29.0%]  (false,exec)

  # BLOCK 44 freq:31
  # PRED: 42 [29.0%]  (true,exec) 43 [71.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4225, session_25(D), 3, "invalid SDP\n");
  goto <bb 86> (end);
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:8
  # PRED: 43 [29.0%]  (false,exec)
  D.44193_97 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44194_98 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4229);
  D.44193_97->remote_sdp_ip = D.44194_98;
  D.44193_99 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  # DEBUG __nptr => &rp
  D.47982_368 = strtol (&rp, 0B, 10);
  D.44196_101 = (short unsigned int) D.47982_368;
  D.44193_99->remote_sdp_port = D.44196_101;
  D.44197_102 = rvp[0];
  if (D.44197_102 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

  # BLOCK 46 freq:2
  # PRED: 45 [29.0%]  (true,exec)
  D.44200_103 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44201_104 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4233);
  D.44200_103->remote_sdp_ip = D.44201_104;
  D.44200_105 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  # DEBUG __nptr => &rvp
  D.47985_369 = strtol (&rvp, 0B, 10);
  D.44203_107 = (short unsigned int) D.47985_369;
  D.44200_105->remote_sdp_port = D.44203_107;
  D.44204_108 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_108, 98, 1);
  D.44204_109 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_109, 23, 1);
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:8
  # PRED: 45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  D.44200_110 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_111 = D.44200_110->remote_sdp_ip;
  if (D.44205_111 != 0B)
    goto <bb 48>;
  else
    goto <bb 66>;
  # SUCC: 48 [85.0%]  (true,exec) 66 [15.0%]  (false,exec)

  # BLOCK 48 freq:7
  # PRED: 47 [85.0%]  (true,exec)
  D.44200_112 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_113 = D.44200_112->remote_sdp_port;
  if (D.44208_113 != 0)
    goto <bb 49>;
  else
    goto <bb 66>;
  # SUCC: 49 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

  # BLOCK 49 freq:3
  # PRED: 48 [50.0%]  (true,exec)
  D.44200_114 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_115 = D.44200_114->remote_sdp_ip;
  D.39191_116 = __builtin_strcmp (D.44205_115, &rip);
  if (D.39191_116 == 0)
    goto <bb 50>;
  else
    goto <bb 52>;
  # SUCC: 50 [50.0%]  (true,exec) 52 [50.0%]  (false,exec)

  # BLOCK 50 freq:2
  # PRED: 49 [50.0%]  (true,exec)
  # DEBUG __nptr => &rvp
  D.47988_370 = strtol (&rvp, 0B, 10);
  D.44200_118 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_119 = D.44200_118->remote_sdp_port;
  D.44215_120 = (int) D.44208_119;
  if (D.44215_120 == D.47988_370)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [13.7%]  (true,exec) 52 [86.3%]  (false,exec)

  # BLOCK 51
  # PRED: 50 [13.7%]  (true,exec)
  D.44200_121 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_122 = D.44200_121->remote_sdp_ip;
  D.44200_123 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_124 = D.44200_123->remote_sdp_port;
  D.44215_125 = (int) D.44208_124;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4241, session_25(D), 7, "Remote video address:port [%s:%d] has not changed.\n", D.44205_122, D.44215_125);
  goto <bb 66>;
  # SUCC: 66 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:3
  # PRED: 49 [50.0%]  (false,exec) 50 [86.3%]  (false,exec)
  D.44204_126 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_126, 98, 1);
  D.44204_127 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_127, 23, 1);
  D.44217_128 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  D.44218_129 = switch_rtp_ready (D.44217_128);
  if (D.44218_129 != 0)
    goto <bb 53>;
  else
    goto <bb 66>;
  # SUCC: 53 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

  # BLOCK 53 freq:2
  # PRED: 52 [50.0%]  (true,exec)
  # DEBUG rport => 0B
  remote_rtcp_port_131 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_131
  if (remote_rtcp_port_131 == 0)
    goto <bb 54>;
  else
    goto <bb 56>;
  # SUCC: 54 [29.0%]  (true,exec) 56 [71.0%]  (false,exec)

  # BLOCK 54
  # PRED: 53 [29.0%]  (true,exec)
  D.44204_132 = session_25(D)->channel;
  rport_133 = switch_channel_get_variable_dup (D.44204_132, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_133
  if (rport_133 != 0B)
    goto <bb 55>;
  else
    goto <bb 56>;
  # SUCC: 55 [69.8%]  (true,exec) 56 [30.2%]  (false,exec)

  # BLOCK 55
  # PRED: 54 [69.8%]  (true,exec)
  # DEBUG __nptr => rport_133
  D.47991_371 = strtol (rport_133, 0B, 10);
  remote_rtcp_port_135 = (switch_port_t) D.47991_371;
  # DEBUG remote_rtcp_port => remote_rtcp_port_135
  # SUCC: 56 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:2
  # PRED: 53 [71.0%]  (false,exec) 54 [30.2%]  (false,exec) 55 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_14 = PHI <remote_rtcp_port_131(53), remote_rtcp_port_131(54), remote_rtcp_port_135(55)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_14
  D.44217_136 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  D.44200_137 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_138 = D.44200_137->remote_sdp_ip;
  D.44200_139 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_140 = D.44200_139->remote_sdp_port;
  D.44226_141 = switch_rtp_set_remote_address (D.44217_136, D.44205_138, D.44208_140, remote_rtcp_port_14, 1, &err);
  if (D.44226_141 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

  # BLOCK 57 freq:1
  # PRED: 56 [50.0%]  (true,exec)
  err.83_142 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4259, session_25(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.83_142);
  goto <bb 66>;
  # SUCC: 66 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:1
  # PRED: 56 [50.0%]  (false,exec)
  D.44200_143 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_144 = D.44200_143->remote_sdp_ip;
  D.44200_145 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_146 = D.44200_145->remote_sdp_port;
  D.44215_147 = (int) D.44208_146;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4261, session_25(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.44205_144, D.44215_147);
  D.44233_148 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44233_148 == 0)
    goto <bb 59>;
  else
    goto <bb 64>;
  # SUCC: 59 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

  # BLOCK 59
  # PRED: 58 [29.0%]  (true,exec)
  D.44204_149 = session_25(D)->channel;
  D.44236_150 = switch_channel_test_flag (D.44204_149, 15);
  if (D.44236_150 == 0)
    goto <bb 60>;
  else
    goto <bb 64>;
  # SUCC: 60 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

  # BLOCK 60
  # PRED: 59 [29.0%]  (true,exec)
  D.44204_151 = session_25(D)->channel;
  val_152 = switch_channel_get_variable_dup (D.44204_151, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_152
  if (val_152 == 0B)
    goto <bb 62>;
  else
    goto <bb 61>;
  # SUCC: 62 [15.0%]  (true,exec) 61 [85.0%]  (false,exec)

  # BLOCK 61
  # PRED: 60 [85.0%]  (false,exec)
  D.44240_153 = switch_true (val_152);
  if (D.44240_153 == 0)
    goto <bb 62>;
  else
    goto <bb 64>;
  # SUCC: 62 [50.0%]  (true,exec) 64 [50.0%]  (false,exec)

  # BLOCK 62
  # PRED: 60 [15.0%]  (true,exec) 61 [50.0%]  (true,exec)
  D.44204_154 = session_25(D)->channel;
  D.44241_155 = switch_channel_test_flag (D.44204_154, 106);
  if (D.44241_155 == 0)
    goto <bb 63>;
  else
    goto <bb 64>;
  # SUCC: 63 [29.0%]  (true,exec) 64 [71.0%]  (false,exec)

  # BLOCK 63
  # PRED: 62 [29.0%]  (true,exec)
  D.44217_156 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44217_156, 7);
  start_video_thread (session_25(D));
  # SUCC: 64 [100.0%]  (fallthru,exec)

  # BLOCK 64 freq:1
  # PRED: 58 [71.0%]  (false,exec) 59 [71.0%]  (false,exec) 61 [50.0%]  (false,exec) 62 [71.0%]  (false,exec) 63 [100.0%]  (fallthru,exec)
  D.44244_157 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44244_157 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
  # SUCC: 65 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

  # BLOCK 65
  # PRED: 64 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].check_frames = 0;
  # SUCC: 66 [100.0%]  (fallthru,exec)

  # BLOCK 66 freq:8
  # PRED: 47 [15.0%]  (false,exec) 48 [50.0%]  (false,exec) 51 [100.0%]  (fallthru,exec) 52 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 64 [50.0%]  (false,exec) 65 [100.0%]  (fallthru,exec)
  D.44247_158 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  D.44248_159 = switch_rtp_ready (D.44247_158);
  if (D.44248_159 != 0)
    goto <bb 67>;
  else
    goto <bb 86> (end);
  # SUCC: 67 [29.0%]  (true,exec) 86 [71.0%]  (false,exec)

  # BLOCK 67 freq:2
  # PRED: 66 [29.0%]  (true,exec)
  D.44247_160 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  remote_host_161 = switch_rtp_get_remote_host (D.44247_160);
  # DEBUG remote_host => remote_host_161
  D.44247_162 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  remote_port_163 = switch_rtp_get_remote_port (D.44247_162);
  # DEBUG remote_port => remote_port_163
  # DEBUG rport => 0B
  # DEBUG remote_rtcp_port => 0
  D.44252_166 = remote_host_161 != 0B;
  D.44253_167 = remote_port_163 != 0;
  D.44254_168 = D.44252_166 && D.44253_167;
  if (D.44254_168 != 0)
    goto <bb 68>;
  else
    goto <bb 71>;
  # SUCC: 68 [50.0%]  (true,exec) 71 [50.0%]  (false,exec)

  # BLOCK 68 freq:1
  # PRED: 67 [50.0%]  (true,exec)
  D.44193_169 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_170 = D.44193_169->remote_sdp_ip;
  D.39206_171 = __builtin_strcmp (remote_host_161, D.44256_170);
  if (D.39206_171 == 0)
    goto <bb 69>;
  else
    goto <bb 71>;
  # SUCC: 69 [50.0%]  (true,exec) 71 [50.0%]  (false,exec)

  # BLOCK 69 freq:1
  # PRED: 68 [50.0%]  (true,exec)
  D.44193_172 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_173 = D.44193_172->remote_sdp_port;
  if (D.44258_173 == remote_port_163)
    goto <bb 70>;
  else
    goto <bb 71>;
  # SUCC: 70 [13.7%]  (true,exec) 71 [86.3%]  (false,exec)

  # BLOCK 70
  # PRED: 69 [13.7%]  (true,exec)
  D.44193_174 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_175 = D.44193_174->remote_sdp_ip;
  D.44193_176 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_177 = D.44193_176->remote_sdp_port;
  D.44260_178 = (int) D.44258_177;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4286, session_25(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.44256_175, D.44260_178);
  # DEBUG status => 11
  goto <bb 86> (end);
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:2
  # PRED: 67 [50.0%]  (false,exec) 68 [50.0%]  (false,exec) 69 [86.3%]  (false,exec)
  if (remote_host_161 != 0B)
    goto <bb 72>;
  else
    goto <bb 75>;
  # SUCC: 72 [93.3%]  (true,exec) 75 [6.7%]  (false,exec)

  # BLOCK 72 freq:2
  # PRED: 71 [93.3%]  (true,exec)
  # DEBUG __s2_len => 7
  __result_220 = __builtin_strcmp (remote_host_161, "0.0.0.0");
  if (__result_220 == 0)
    goto <bb 74>;
  else
    goto <bb 73>;
  # SUCC: 74 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

  # BLOCK 73 freq:1
  # PRED: 72 [71.0%]  (false,exec)
  # DEBUG __s2_len => 7
  D.44193_263 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_264 = D.44193_263->remote_sdp_ip;
  __result_265 = __builtin_strcmp (D.44256_264, "0.0.0.0");
  if (__result_265 == 0)
    goto <bb 74>;
  else
    goto <bb 75>;
  # SUCC: 74 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

  # BLOCK 74 freq:1
  # PRED: 72 [29.0%]  (true,exec) 73 [50.0%]  (true,exec)
  D.44193_267 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_268 = D.44193_267->remote_sdp_ip;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4292, session_25(D), 7, "Remote address changed from [%s] to [%s]. Ignoring...\n", D.44256_268, remote_host_161);
  # DEBUG status => 11
  goto <bb 86> (end);
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 75 freq:1
  # PRED: 71 [6.7%]  (false,exec) 73 [50.0%]  (false,exec)
  D.44204_270 = session_25(D)->channel;
  rport_271 = switch_channel_get_variable_dup (D.44204_270, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_271
  if (rport_271 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;
  # SUCC: 76 [69.8%]  (true,exec) 77 [30.2%]  (false,exec)

  # BLOCK 76 freq:1
  # PRED: 75 [69.8%]  (true,exec)
  # DEBUG __nptr => rport_271
  D.47994_372 = strtol (rport_271, 0B, 10);
  remote_rtcp_port_273 = (switch_port_t) D.47994_372;
  # DEBUG remote_rtcp_port => remote_rtcp_port_273
  # SUCC: 77 [100.0%]  (fallthru,exec)

  # BLOCK 77 freq:1
  # PRED: 75 [30.2%]  (false,exec) 76 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_15 = PHI <0(75), remote_rtcp_port_273(76)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_15
  D.44247_274 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  D.44193_275 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_276 = D.44193_275->remote_sdp_ip;
  D.44193_277 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_278 = D.44193_277->remote_sdp_port;
  D.44337_279 = switch_rtp_set_remote_address (D.44247_274, D.44256_276, D.44258_278, remote_rtcp_port_15, 1, &err);
  if (D.44337_279 != 0)
    goto <bb 78>;
  else
    goto <bb 79>;
  # SUCC: 78 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

  # BLOCK 78
  # PRED: 77 [50.0%]  (true,exec)
  err.83_280 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4305, session_25(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.83_280);
  # DEBUG status => 9
  goto <bb 86> (end);
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 79
  # PRED: 77 [50.0%]  (false,exec)
  D.44193_282 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_283 = D.44193_282->remote_sdp_ip;
  D.44193_284 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_285 = D.44193_284->remote_sdp_port;
  D.44260_286 = (int) D.44258_285;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4308, session_25(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.44256_283, D.44260_286);
  D.44343_287 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44343_287 == 0)
    goto <bb 80>;
  else
    goto <bb 84>;
  # SUCC: 80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 80
  # PRED: 79 [29.0%]  (true,exec)
  D.44204_288 = session_25(D)->channel;
  val_289 = switch_channel_get_variable_dup (D.44204_288, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_289
  if (val_289 == 0B)
    goto <bb 82>;
  else
    goto <bb 81>;
  # SUCC: 82 [15.0%]  (true,exec) 81 [85.0%]  (false,exec)

  # BLOCK 81
  # PRED: 80 [85.0%]  (false,exec)
  D.44347_290 = switch_true (val_289);
  if (D.44347_290 == 0)
    goto <bb 82>;
  else
    goto <bb 84>;
  # SUCC: 82 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 82
  # PRED: 80 [15.0%]  (true,exec) 81 [50.0%]  (true,exec)
  D.44204_291 = session_25(D)->channel;
  D.44348_292 = switch_channel_test_flag (D.44204_291, 106);
  if (D.44348_292 == 0)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 83
  # PRED: 82 [29.0%]  (true,exec)
  D.44247_293 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  switch_rtp_set_flag (D.44247_293, 7);
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84
  # PRED: 79 [71.0%]  (false,exec) 81 [50.0%]  (false,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
  D.44351_294 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44351_294 != 0)
    goto <bb 85>;
  else
    goto <bb 86> (end);
  # SUCC: 85 [50.0%]  (true,exec) 86 [50.0%]  (false,exec)

  # BLOCK 85
  # PRED: 84 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].check_frames = 0;
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 86 freq:8982
  # PRED: 13 [71.0%]  (true,exec) 25 [50.0%]  (true,exec) 27 [14.0%]  (true,exec) 34 [14.0%]  (true,exec) 38 [14.0%]  (true,exec) 44 [100.0%]  (fallthru,exec) 66 [71.0%]  (false,exec) 70 [100.0%]  (fallthru,exec) 74 [100.0%]  (fallthru,exec) 78 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 84 [50.0%]  (false,exec)
  # status_13 = PHI <1(13), 1(25), 1(27), 1(34), 1(38), 1(44), 1(66), 11(70), 11(74), 9(78), 0(85), 0(84)>
end:
  # DEBUG status => status_13
  # SUCC: 87 [100.0%]  (fallthru,exec)

  # BLOCK 87 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 86 [100.0%]  (fallthru,exec)
  # status_18 = PHI <1(4), status_13(86)>
  return status_18;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_check_nat (switch_core_media_check_nat)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 5
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities

;; Function switch_core_media_check_nat

;; 
9 basic blocks, 11 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [69.8%]  (true,exec)
Successors:  6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [29.0%]  (true,exec)
Successors:  8 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [30.2%]  (false,exec) 5 [71.0%]  (false,exec) 6 [61.0%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [39.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_check_nat (struct switch_media_handle_t * smh, const char * network_ip)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_check_nat";
  switch_bool_t D.44130;
  char * D.44129;
  switch_bool_t D.44127;
  char * D.44125;
  struct switch_core_media_params_t * D.44124;
  int D.44120;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (network_ip_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("network_ip", "src/switch_core_media.c", 4331, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.44124_4 = smh_3(D)->mparams;
  D.44125_5 = D.44124_4->extsipip;
  if (D.44125_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

  # BLOCK 5 freq:6980
  # PRED: 4 [69.8%]  (true,exec)
  D.44127_6 = switch_check_network_list_ip_token (network_ip_2(D), "loopback.auto", 0B);
  if (D.44127_6 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 6 freq:2024
  # PRED: 5 [29.0%]  (true,exec)
  D.44124_7 = smh_3(D)->mparams;
  D.44129_8 = D.44124_7->local_network;
  D.44130_9 = switch_check_network_list_ip_token (network_ip_2(D), D.44129_8, 0B);
  if (D.44130_9 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:9207
  # PRED: 4 [30.2%]  (false,exec) 5 [71.0%]  (false,exec) 6 [61.0%]  (false,exec)
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:9996
  # PRED: 6 [39.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
  # D.44120_1 = PHI <1(6), 0(7)>
  return D.44120_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_ext_address_lookup (switch_core_media_ext_address_lookup)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 18
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 32 5 }
;; 5 succs { 32 6 }
;; 6 succs { 7 8 }
;; 7 succs { 30 }
;; 8 succs { 9 29 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 17 16 }
;; 16 succs { 20 }
;; 17 succs { 30 }
;; 18 succs { 19 21 }
;; 19 succs { 20 }
;; 20 succs { 18 21 }
;; 21 succs { 22 23 }
;; 22 succs { 30 }
;; 23 succs { 24 25 }
;; 24 succs { 30 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 30 }
;; 28 succs { 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 18
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = x_4)
(get_scalar_evolution 
  (scalar = x_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
x_4 = PHI <x_44(16), x_37(19)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = x_4 = PHI <x_44(16), x_37(19)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = x_4)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 4
  bounds on difference of bases: 4 ... 4
  result:
    # of iterations 5, bounded by 5
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics (ignored): 89.7%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  call heuristics (ignored): 29.0%
  loop exit heuristics: 95.5%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics (ignored): 67.1%
  first match heuristics: 83.3%
  combined heuristics: 83.3%
  call heuristics (ignored): 29.0%
  loop iterations heuristics: 83.3%
Predictions for bb 21
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 48.8%
  first match heuristics (ignored): 28.0%
  combined heuristics: 48.8%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 71.0%
Predictions for bb 26
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 27 predicted to even probabilities
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 31 predicted to even probabilities
1 edges in bb 32 predicted to even probabilities

;; Function switch_core_media_ext_address_lookup

;; 
33 basic blocks, 48 edges, last basic block 33.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  32 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  32 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [89.9%]  (false,exec)
Successors:  7 [29.0%]  (true,exec) 8 [71.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [71.0%]  (false,exec)
Successors:  9 [29.0%]  (true,exec) 29 [71.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [29.0%]  (true,exec)
Successors:  10 [69.8%]  (true,exec) 12 [30.2%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [69.8%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [30.2%]  (false,exec) 10 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  15 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec) 14 [100.0%]  (fallthru,exec)
Successors:  17 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [71.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru)

Basic block 17 (new, reachable)
Predecessors:  15 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  20 [83.3%]  (true,exec)
Successors:  19 [95.5%]  (true,exec) 21 [4.5%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [95.5%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,dfs_back,exec)

Basic block 20 (new)
Predecessors:  16 [100.0%]  (fallthru) 19 [100.0%]  (fallthru,dfs_back,exec)
Successors:  18 [83.3%]  (true,exec) 21 [16.7%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [4.5%]  (false,exec) 20 [16.7%]  (false,exec)
Successors:  22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [71.0%]  (false,exec)
Successors:  24 [15.0%]  (true,exec) 25 [85.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [15.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [85.0%]  (false,exec)
Successors:  26 [48.8%]  (true,exec) 28 [51.2%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [48.8%]  (true,exec)
Successors:  27 [29.0%]  (true,exec) 28 [71.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  25 [51.2%]  (false,exec) 26 [71.0%]  (false,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  8 [71.0%]  (false,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 27 [100.0%]  (fallthru,exec)
Successors:  31 [78.3%]  (true,exec) 32 [21.6%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [78.3%]  (true,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [10.1%]  (true,exec) 31 [100.0%]  (fallthru,exec) 30 [21.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_ext_address_lookup (struct switch_core_session_t * session, char * * ip, switch_port_t * port, const char * sourceip)
{
  const char D.48014;
  int D.48013;
  int iport;
  char * p;
  static const char __func__[37] = "switch_core_media_ext_address_lookup";
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_ext_address_lookup";
  struct switch_memory_pool_t * pool;
  struct switch_media_handle_t * smh;
  char * stun_ip;
  switch_port_t stun_port;
  switch_port_t myport;
  int x;
  switch_status_t status;
  char * error;
  uint32_t D.44113;
  uint32_t D.44112;
  char * D.44111;
  char * D.44109;
  struct switch_core_media_params_t * D.44108;
  int D.39263;
  int D.44104;
  switch_port_t D.44103;
  char * error.80;
  int D.44099;
  unsigned int D.44090;
  unsigned int iport.79;
  int D.44084;
  char * D.44082;
  char * D.44081;
  const char * D.44080;
  int D.44077;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  error = "";
  # DEBUG status => 1
  myport_10 = *port_9(D);
  # DEBUG myport => myport_10
  # DEBUG stun_port => 3478
  # DEBUG stun_ip => 0B
  pool_14 = switch_core_session_get_pool (session_13(D));
  # DEBUG pool => pool_14
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4351, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_15 = session_13(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 32>;
  else
    goto <bb 5>;
  # SUCC: 32 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  if (sourceip_17(D) == 0B)
    goto <bb 32>;
  else
    goto <bb 6>;
  # SUCC: 32 [10.1%]  (true,exec) 6 [89.9%]  (false,exec)

  # BLOCK 6 freq:8072
  # PRED: 5 [89.9%]  (false,exec)
  D.44077_19 = strncasecmp (sourceip_17(D), "host:", 5);
  if (D.44077_19 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [29.0%]  (true,exec) 8 [71.0%]  (false,exec)

  # BLOCK 7 freq:2341
  # PRED: 6 [29.0%]  (true,exec)
  D.44080_20 = sourceip_17(D) + 5;
  D.44081_21 = switch_stun_host_lookup (D.44080_20, pool_14);
  *ip_22(D) = D.44081_21;
  D.44082_23 = *ip_22(D);
  status_24 = D.44082_23 == 0B;
  # DEBUG status => status_24
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:5731
  # PRED: 6 [71.0%]  (false,exec)
  D.44084_25 = strncasecmp (sourceip_17(D), "stun:", 5);
  if (D.44084_25 == 0)
    goto <bb 9>;
  else
    goto <bb 29>;
  # SUCC: 9 [29.0%]  (true,exec) 29 [71.0%]  (false,exec)

  # BLOCK 9 freq:1662
  # PRED: 8 [29.0%]  (true,exec)
  D.44080_26 = sourceip_17(D) + 5;
  stun_ip_27 = __strdup (D.44080_26);
  # DEBUG stun_ip => stun_ip_27
  p_28 = __builtin_strchr (stun_ip_27, 58);
  # DEBUG p => p_28
  if (p_28 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [69.8%]  (true,exec) 12 [30.2%]  (false,exec)

  # BLOCK 10 freq:1161
  # PRED: 9 [69.8%]  (true,exec)
  *p_28 = 0;
  p_29 = p_28 + 1;
  # DEBUG p => p_29
  # DEBUG __nptr => p_29
  iport_87 = strtol (p_29, 0B, 10);
  # DEBUG iport => NULL
  iport.79_31 = (unsigned int) iport_87;
  D.44090_32 = iport.79_31 + 4294967295;
  if (D.44090_32 <= 65533)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 11 freq:580
  # PRED: 10 [50.0%]  (true,exec)
  stun_port_33 = (switch_port_t) iport_87;
  # DEBUG stun_port => stun_port_33
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:1662
  # PRED: 9 [30.2%]  (false,exec) 10 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  # stun_port_5 = PHI <3478(9), 3478(10), stun_port_33(11)>
  # DEBUG stun_port => stun_port_5
  # DEBUG s => stun_ip_27
  if (stun_ip_27 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;
  # SUCC: 15 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

  # BLOCK 13 freq:1413
  # PRED: 12 [85.0%]  (false,exec)
  D.48014_88 = MEM[(const char *)stun_ip_27];
  if (D.48014_88 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;
  # SUCC: 15 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 14 freq:706
  # PRED: 13 [50.0%]  (false,exec)
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:1662
  # PRED: 12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec) 14 [100.0%]  (fallthru,exec)
  # D.48013_89 = PHI <1(12), 1(13), 0(14)>
  if (D.48013_89 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;
  # SUCC: 17 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 16 freq:1180
  # PRED: 15 [71.0%]  (false,exec)
  # status_60 = PHI <1(15)>
  # x_44 = PHI <0(15)>
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru)

  # BLOCK 17 freq:482
  # PRED: 15 [29.0%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4378, 0B, 3, "STUN Failed! NO STUN SERVER\n");
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:4815
  # PRED: 20 [83.3%]  (true,exec)
  status_36 = switch_stun_lookup (ip_22(D), port_9(D), stun_ip_27, stun_port_5, &error, pool_14);
  # DEBUG status => status_36
  if (status_36 != 0)
    goto <bb 19>;
  else
    goto <bb 21>;
  # SUCC: 19 [95.5%]  (true,exec) 21 [4.5%]  (false,exec)

  # BLOCK 19 freq:4599
  # PRED: 18 [95.5%]  (true,exec)
  switch_sleep (100000);
  x_37 = x_4 + 1;
  # DEBUG x => x_37
  # SUCC: 20 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 20 freq:5779
  # PRED: 16 [100.0%]  (fallthru) 19 [100.0%]  (fallthru,dfs_back,exec)
  # status_1 = PHI <status_60(16), status_36(19)>
  # x_4 = PHI <x_44(16), x_37(19)>
  # DEBUG x => x_4
  # DEBUG status => status_1
  if (x_4 <= 4)
    goto <bb 18>;
  else
    goto <bb 21>;
  # SUCC: 18 [83.3%]  (true,exec) 21 [16.7%]  (false,exec)

  # BLOCK 21 freq:1180
  # PRED: 18 [4.5%]  (false,exec) 20 [16.7%]  (false,exec)
  # status_2 = PHI <status_36(18), status_1(20)>
  # DEBUG status => status_2
  if (status_2 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

  # BLOCK 22 freq:342
  # PRED: 21 [29.0%]  (true,exec)
  D.44099_38 = (int) stun_port_5;
  error.80_39 = error;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4390, 0B, 3, "STUN Failed! %s:%d [%s]\n", stun_ip_27, D.44099_38, error.80_39);
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:838
  # PRED: 21 [71.0%]  (false,exec)
  D.44082_40 = *ip_22(D);
  if (D.44082_40 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [15.0%]  (true,exec) 25 [85.0%]  (false,exec)

  # BLOCK 24 freq:126
  # PRED: 23 [15.0%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4394, 0B, 3, "STUN Failed! No IP returned\n");
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:712
  # PRED: 23 [85.0%]  (false,exec)
  D.44082_41 = *ip_22(D);
  D.44103_42 = *port_9(D);
  D.44104_43 = (int) D.44103_42;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4397, 0B, 7, "STUN Success [%s]:[%d]\n", D.44082_41, D.44104_43);
  # DEBUG status => 0
  D.44103_45 = *port_9(D);
  if (D.44103_45 == myport_10)
    goto <bb 26>;
  else
    goto <bb 28>;
  # SUCC: 26 [48.8%]  (true,exec) 28 [51.2%]  (false,exec)

  # BLOCK 26 freq:347
  # PRED: 25 [48.8%]  (true,exec)
  D.44082_46 = *ip_22(D);
  D.44108_47 = smh_15->mparams;
  D.44109_48 = D.44108_47->rtpip;
  D.39263_49 = __builtin_strcmp (D.44082_46, D.44109_48);
  if (D.39263_49 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [29.0%]  (true,exec) 28 [71.0%]  (false,exec)

  # BLOCK 27 freq:101
  # PRED: 26 [29.0%]  (true,exec)
  D.44082_50 = *ip_22(D);
  D.44103_51 = *port_9(D);
  D.44104_52 = (int) D.44103_51;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4401, 0B, 7, "STUN Not Required ip and port match. [%s]:[%d]\n", D.44082_50, D.44104_52);
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:611
  # PRED: 25 [51.2%]  (false,exec) 26 [71.0%]  (false,exec)
  D.44108_53 = smh_15->mparams;
  D.44111_54 = switch_core_perform_session_strdup (session_13(D), stun_ip_27, "src/switch_core_media.c", &__func__, 4403);
  D.44108_53->stun_ip = D.44111_54;
  D.44108_55 = smh_15->mparams;
  D.44108_55->stun_port = stun_port_5;
  D.44108_57 = smh_15->mparams;
  D.44112_58 = D.44108_57->stun_flags;
  D.44113_59 = D.44112_58 | 1;
  D.44108_57->stun_flags = D.44113_59;
  goto <bb 30> (out);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:4069
  # PRED: 8 [71.0%]  (false,exec)
  *ip_22(D) = sourceip_17(D);
  # DEBUG status => 0
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:8072
  # PRED: 7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 27 [100.0%]  (fallthru,exec)
  # status_3 = PHI <status_24(7), 1(17), status_2(22), status_2(24), 0(28), 0(29), 0(27)>
  # stun_ip_6 = PHI <0B(7), stun_ip_27(17), stun_ip_27(22), stun_ip_27(24), stun_ip_27(28), 0B(29), stun_ip_27(27)>
out:
  # DEBUG stun_ip => stun_ip_6
  # DEBUG status => status_3
  if (stun_ip_6 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [78.3%]  (true,exec) 32 [21.6%]  (false,exec)

  # BLOCK 31 freq:6324
  # PRED: 30 [78.3%]  (true,exec)
  free (stun_ip_6);
  # DEBUG stun_ip => 0B
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 5 [10.1%]  (true,exec) 31 [100.0%]  (fallthru,exec) 30 [21.6%]  (false,exec)
  # status_7 = PHI <1(4), 1(5), status_3(31), status_3(30)>
  return status_7;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_reset_autofix (switch_core_media_reset_autofix)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_media_reset_autofix

;; 
7 basic blocks, 7 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  6 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_reset_autofix (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_reset_autofix";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  unsigned int D.44068;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4425, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_6
  engine_6->check_frames = 0;
  engine_6->last_ts = 0;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_choose_port (switch_core_media_choose_port)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;; 2 succs { 4 5 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 35 8 }
;; 8 succs { 9 12 }
;; 9 succs { 35 10 }
;; 10 succs { 35 11 }
;; 11 succs { 35 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 35 }
;; 16 succs { 19 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 31 }
;; 20 succs { 21 31 }
;; 21 succs { 22 27 }
;; 22 succs { 25 23 }
;; 23 succs { 25 24 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 30 }
;; 28 succs { 35 29 }
;; 29 succs { 32 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
3 edges in bb 2 predicted to even probabilities
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 8
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 10
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 11
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 12
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 20.7%
  first match heuristics (ignored): 29.0%
  combined heuristics: 20.7%
  early return (on trees) heuristics: 39.0%
  call heuristics: 29.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 17
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 21
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 22
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 23
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 28
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 29 predicted to even probabilities
1 edges in bb 30 predicted to even probabilities
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
1 edges in bb 34 predicted to even probabilities
1 edges in bb 35 predicted to even probabilities

;; Function switch_core_media_choose_port

;; 
36 basic blocks, 55 edges, last basic block 36.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

Basic block 3 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
Successors:  6 [0.0%]  (true,exec) 7 [100.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [0.0%]  (true,exec)
Successors: 

Basic block 7 (new, reachable)
Predecessors:  5 [100.0%]  (false,exec)
Successors:  35 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [89.9%]  (false,exec)
Successors:  9 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [29.0%]  (true,exec)
Successors:  35 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [39.0%]  (false,exec)
Successors:  35 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [61.0%]  (false,exec)
Successors:  35 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  8 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
Successors:  13 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [29.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [71.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  15 [20.7%]  (true,exec) 16 [79.3%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [20.7%]  (true,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [79.3%]  (false,exec)
Successors:  19 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [85.0%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  16 [15.0%]  (true,exec) 17 [50.0%]  (true,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [29.0%]  (true,exec) 31 [71.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [29.0%]  (true,exec)
Successors:  21 [29.0%]  (true,exec) 31 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [15.0%]  (true,exec) 27 [85.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [15.0%]  (true,exec)
Successors:  25 [15.0%]  (true,exec) 23 [85.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [85.0%]  (false,exec)
Successors:  25 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [50.0%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [15.0%]  (true,exec) 23 [50.0%]  (true,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [50.0%]  (true,exec) 27 [50.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [50.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  21 [85.0%]  (false,exec) 25 [50.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [69.8%]  (true,exec)
Successors:  35 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [61.0%]  (false,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  27 [30.2%]  (false,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  19 [71.0%]  (false,exec) 20 [71.0%]  (false,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [100.0%]  (fallthru,exec) 31 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec)
Successors:  33 [39.0%]  (true,exec) 34 [61.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [39.0%]  (true,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [61.0%]  (false,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  7 [10.1%]  (true,exec) 10 [39.0%]  (true,exec) 15 [100.0%]  (fallthru,exec) 28 [39.0%]  (true,exec) 34 [100.0%]  (fallthru,exec) 9 [61.0%]  (true,exec) 11 [39.0%]  (true,exec) 33 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_choose_port (struct switch_core_session_t * session, switch_media_type_t type, int force)
{
  const char D.48031;
  int D.48030;
  const char D.48027;
  int D.48026;
  static const char __func__[30] = "switch_core_media_choose_port";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_choose_port";
  char vname[128];
  const char * tstr;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * use_ip;
  switch_port_t sdp_port;
  char * lookup_rtpip;
  char * D.44058;
  int D.44057;
  char * D.44056;
  char * D.44053;
  char * D.44052;
  switch_port_t sdp_port.78;
  switch_status_t D.44047;
  char * D.44041;
  int D.44037;
  char * D.44034;
  switch_port_t D.44029;
  switch_port_t sdp_port.77;
  switch_port_t D.44025;
  uint32_t D.44023;
  uint32_t D.44021;
  struct switch_channel_t * D.44020;
  char * lookup_rtpip.76;
  struct switch_core_media_params_t * D.44014;
  switch_status_t D.44011;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG use_ip => 0B
  # DEBUG type => type_5(D)
  switch (type_5(D)) <default: <L32>, case 0: <L33>, case 1: <L31>>
  # SUCC: 4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

  # BLOCK 3 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L31>:
  goto <bb 5> (<L33>);
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L32>:
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:9999
  # PRED: 2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
  # tstr_104 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L33>:
  # DEBUG tstr => NULL
  vname = "";
  if (session_7(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [0.0%]  (true,exec) 7 [100.0%]  (false,exec)

  # BLOCK 6 freq:4
  # PRED: 5 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4450, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 7 freq:9995
  # PRED: 5 [100.0%]  (false,exec)
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 35>;
  else
    goto <bb 8>;
  # SUCC: 35 [10.1%]  (true,exec) 8 [89.9%]  (false,exec)

  # BLOCK 8 freq:8982
  # PRED: 7 [89.9%]  (false,exec)
  engine_12 = &smh_8->engines[type_5(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_12
  D.44014_13 = smh_8->mparams;
  lookup_rtpip.76_14 = D.44014_13->rtpip;
  lookup_rtpip = lookup_rtpip.76_14;
  if (force_15(D) == 0)
    goto <bb 9>;
  else
    goto <bb 12>;
  # SUCC: 9 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 9 freq:2605
  # PRED: 8 [29.0%]  (true,exec)
  D.44020_16 = session_7(D)->channel;
  D.44021_17 = switch_channel_test_flag (D.44020_16, 15);
  if (D.44021_17 != 0)
    goto <bb 35>;
  else
    goto <bb 10>;
  # SUCC: 35 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

  # BLOCK 10 freq:1015
  # PRED: 9 [39.0%]  (false,exec)
  D.44020_18 = session_7(D)->channel;
  D.44023_19 = switch_channel_test_flag (D.44020_18, 29);
  if (D.44023_19 != 0)
    goto <bb 35>;
  else
    goto <bb 11>;
  # SUCC: 35 [39.0%]  (true,exec) 11 [61.0%]  (false,exec)

  # BLOCK 11 freq:619
  # PRED: 10 [61.0%]  (false,exec)
  D.44025_20 = engine_12->adv_sdp_port;
  if (D.44025_20 != 0)
    goto <bb 35>;
  else
    goto <bb 12>;
  # SUCC: 35 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:6755
  # PRED: 8 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
  sdp_port.77_22 = engine_12->local_sdp_port;
  if (sdp_port.77_22 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

  # BLOCK 13 freq:1959
  # PRED: 12 [29.0%]  (true,exec)
  D.44014_23 = smh_8->mparams;
  lookup_rtpip.76_24 = D.44014_23->rtpip;
  sdp_port.77_25 = engine_12->local_sdp_port;
  switch_rtp_release_port (lookup_rtpip.76_24, sdp_port.77_25);
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:6755
  # PRED: 12 [71.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  D.44014_26 = smh_8->mparams;
  lookup_rtpip.76_27 = D.44014_26->rtpip;
  D.44029_28 = switch_rtp_request_port (lookup_rtpip.76_27);
  engine_12->local_sdp_port = D.44029_28;
  sdp_port.77_29 = engine_12->local_sdp_port;
  if (sdp_port.77_29 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [20.7%]  (true,exec) 16 [79.3%]  (false,exec)

  # BLOCK 15 freq:1399
  # PRED: 14 [20.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4475, session_7(D), 2, "No %s RTP ports available!\n", tstr_104);
  goto <bb 35>;
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:5356
  # PRED: 14 [79.3%]  (false,exec)
  D.44014_31 = smh_8->mparams;
  lookup_rtpip.76_32 = D.44014_31->rtpip;
  engine_12->local_sdp_ip = lookup_rtpip.76_32;
  sdp_port.77_33 = engine_12->local_sdp_port;
  sdp_port = sdp_port.77_33;
  D.44014_34 = smh_8->mparams;
  D.44034_35 = D.44014_34->remote_ip;
  # DEBUG s => D.44034_35
  if (D.44034_35 == 0B)
    goto <bb 19>;
  else
    goto <bb 17>;
  # SUCC: 19 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

  # BLOCK 17 freq:4552
  # PRED: 16 [85.0%]  (false,exec)
  D.48027_105 = MEM[(const char *)D.44034_35];
  if (D.48027_105 == 0)
    goto <bb 19>;
  else
    goto <bb 18>;
  # SUCC: 19 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 18 freq:2276
  # PRED: 17 [50.0%]  (false,exec)
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:5356
  # PRED: 16 [15.0%]  (true,exec) 17 [50.0%]  (true,exec) 18 [100.0%]  (fallthru,exec)
  # D.48026_106 = PHI <1(16), 1(17), 0(18)>
  if (D.48026_106 == 0)
    goto <bb 20>;
  else
    goto <bb 31>;
  # SUCC: 20 [29.0%]  (true,exec) 31 [71.0%]  (false,exec)

  # BLOCK 20 freq:1553
  # PRED: 19 [29.0%]  (true,exec)
  D.44014_37 = smh_8->mparams;
  D.44034_38 = D.44014_37->remote_ip;
  D.44037_39 = switch_core_media_check_nat (smh_8, D.44034_38);
  if (D.44037_39 != 0)
    goto <bb 21>;
  else
    goto <bb 31>;
  # SUCC: 21 [29.0%]  (true,exec) 31 [71.0%]  (false,exec)

  # BLOCK 21 freq:450
  # PRED: 20 [29.0%]  (true,exec)
  sdp_port.77_40 = engine_12->local_sdp_port;
  switch_nat_add_mapping (sdp_port.77_40, 0, &sdp_port, 0);
  switch_snprintf (&vname, 128, "rtp_adv_%s_ip", tstr_104);
  D.44020_41 = session_7(D)->channel;
  use_ip_42 = switch_channel_get_variable_dup (D.44020_41, &vname, 1, -1);
  # DEBUG use_ip => use_ip_42
  if (use_ip_42 == 0B)
    goto <bb 22>;
  else
    goto <bb 27>;
  # SUCC: 22 [15.0%]  (true,exec) 27 [85.0%]  (false,exec)

  # BLOCK 22 freq:68
  # PRED: 21 [15.0%]  (true,exec)
  D.44014_43 = smh_8->mparams;
  D.44041_44 = D.44014_43->extrtpip;
  # DEBUG s => D.44041_44
  if (D.44041_44 == 0B)
    goto <bb 25>;
  else
    goto <bb 23>;
  # SUCC: 25 [15.0%]  (true,exec) 23 [85.0%]  (false,exec)

  # BLOCK 23 freq:57
  # PRED: 22 [85.0%]  (false,exec)
  D.48031_107 = MEM[(const char *)D.44041_44];
  if (D.48031_107 == 0)
    goto <bb 25>;
  else
    goto <bb 24>;
  # SUCC: 25 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 24 freq:29
  # PRED: 23 [50.0%]  (false,exec)
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:68
  # PRED: 22 [15.0%]  (true,exec) 23 [50.0%]  (true,exec) 24 [100.0%]  (fallthru,exec)
  # D.48030_108 = PHI <1(22), 1(23), 0(24)>
  if (D.48030_108 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [50.0%]  (true,exec) 27 [50.0%]  (false,exec)

  # BLOCK 26 freq:34
  # PRED: 25 [50.0%]  (true,exec)
  D.44014_46 = smh_8->mparams;
  use_ip_47 = D.44014_46->extrtpip;
  # DEBUG use_ip => use_ip_47
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:450
  # PRED: 21 [85.0%]  (false,exec) 25 [50.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  # use_ip_1 = PHI <use_ip_42(21), use_ip_42(25), use_ip_47(26)>
  # DEBUG use_ip => use_ip_1
  if (use_ip_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

  # BLOCK 28 freq:315
  # PRED: 27 [69.8%]  (true,exec)
  D.44047_48 = switch_core_media_ext_address_lookup (session_7(D), &lookup_rtpip, &sdp_port, use_ip_1);
  if (D.44047_48 != 0)
    goto <bb 35>;
  else
    goto <bb 29>;
  # SUCC: 35 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

  # BLOCK 29 freq:192
  # PRED: 28 [61.0%]  (false,exec)
  use_ip_50 = lookup_rtpip;
  # DEBUG use_ip => use_ip_50
  goto <bb 32>;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:136
  # PRED: 27 [30.2%]  (false,exec)
  D.44014_51 = smh_8->mparams;
  use_ip_52 = D.44014_51->rtpip;
  # DEBUG use_ip => use_ip_52
  goto <bb 32>;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:4905
  # PRED: 19 [71.0%]  (false,exec) 20 [71.0%]  (false,exec)
  D.44014_53 = smh_8->mparams;
  use_ip_54 = D.44014_53->rtpip;
  # DEBUG use_ip => use_ip_54
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:5233
  # PRED: 30 [100.0%]  (fallthru,exec) 31 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec)
  # use_ip_2 = PHI <use_ip_52(30), use_ip_54(31), use_ip_50(29)>
  # DEBUG use_ip => use_ip_2
  sdp_port.78_55 = sdp_port;
  engine_12->adv_sdp_port = sdp_port.78_55;
  D.44014_57 = smh_8->mparams;
  D.44052_58 = switch_core_perform_session_strdup (session_7(D), use_ip_2, "src/switch_core_media.c", &__func__, 4515);
  D.44014_57->extrtpip = D.44052_58;
  D.44041_59 = D.44014_57->extrtpip;
  D.44014_57->adv_sdp_audio_ip = D.44041_59;
  D.44053_60 = D.44014_57->adv_sdp_audio_ip;
  engine_12->adv_sdp_ip = D.44053_60;
  if (type_5(D) == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [39.0%]  (true,exec) 34 [61.0%]  (false,exec)

  # BLOCK 33 freq:2041
  # PRED: 32 [39.0%]  (true,exec)
  D.44020_61 = session_7(D)->channel;
  D.44056_62 = engine_12->local_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_61, "local_media_ip", D.44056_62, 1);
  D.44020_63 = session_7(D)->channel;
  sdp_port.78_64 = sdp_port;
  D.44057_65 = (int) sdp_port.78_64;
  switch_channel_set_variable_printf (D.44020_63, "local_media_port", "%d", D.44057_65);
  D.44020_66 = session_7(D)->channel;
  D.44058_67 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_66, "advertised_media_ip", D.44058_67, 1);
  goto <bb 35>;
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:3192
  # PRED: 32 [61.0%]  (false,exec)
  D.44020_68 = session_7(D)->channel;
  D.44058_69 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_68, "local_video_ip", D.44058_69, 1);
  D.44020_70 = session_7(D)->channel;
  sdp_port.78_71 = sdp_port;
  D.44057_72 = (int) sdp_port.78_71;
  switch_channel_set_variable_printf (D.44020_70, "local_video_port", "%d", D.44057_72);
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:9995
  # PRED: 7 [10.1%]  (true,exec) 10 [39.0%]  (true,exec) 15 [100.0%]  (fallthru,exec) 28 [39.0%]  (true,exec) 34 [100.0%]  (fallthru,exec) 9 [61.0%]  (true,exec) 11 [39.0%]  (true,exec) 33 [100.0%]  (fallthru,exec)
  # D.44011_3 = PHI <1(7), 0(10), 1(15), 1(28), 0(34), 0(9), 0(11), 0(33)>
  return D.44011_3;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_choose_ports (switch_core_media_choose_ports)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 3
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_choose_ports

;; 
8 basic blocks, 11 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [39.0%]  (true,exec)
Successors:  4 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (true,exec)
Successors:  5 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  2 [61.0%]  (false,exec) 3 [39.0%]  (false,exec) 4 [61.0%]  (false,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_choose_ports (struct switch_core_session_t * session, switch_bool_t audio, switch_bool_t video)
{
  switch_status_t status;
  uint32_t D.44002;
  struct switch_channel_t * D.44001;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG status => 0
  if (audio_3(D) != 0)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 3 freq:3898
  # PRED: 2 [39.0%]  (true,exec)
  status_5 = switch_core_media_choose_port (session_4(D), 0, 0);
  # DEBUG status => status_5
  if (status_5 == 0)
    goto <bb 4>;
  else
    goto <bb 7>;
  # SUCC: 4 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 4 freq:2378
  # PRED: 3 [61.0%]  (true,exec)
  if (video_6(D) != 0)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 5 freq:927
  # PRED: 4 [39.0%]  (true,exec)
  switch_core_media_check_video_codecs (session_4(D));
  D.44001_7 = session_4(D)->channel;
  D.44002_8 = switch_channel_test_flag (D.44001_7, 98);
  if (D.44002_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:361
  # PRED: 5 [39.0%]  (true,exec)
  switch_core_media_choose_port (session_4(D), 1, 0);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 2 [61.0%]  (false,exec) 3 [39.0%]  (false,exec) 4 [61.0%]  (false,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  # status_1 = PHI <0(2), status_5(3), status_5(4), status_5(5), status_5(6)>
  # DEBUG status => status_1
  return status_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_deactivate_rtp (switch_core_media_deactivate_rtp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 29 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 18 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 29 }
;; 23 succs { 26 24 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 27 29 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 12
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 16
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 23
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 27
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities

;; Function switch_core_media_deactivate_rtp

;; 
30 basic blocks, 45 edges, last basic block 30.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  29 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [69.8%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [30.2%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [69.8%]  (true,exec) 9 [30.2%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [69.8%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [30.2%]  (false,exec)
Successors:  10 [29.0%]  (true,exec) 11 [71.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [29.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (true,exec)
Successors:  15 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [29.0%]  (true,exec)
Successors:  17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [29.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 15 [71.0%]  (false,exec) 16 [71.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
Successors:  19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [69.8%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [30.2%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  19 [100.0%]  (fallthru,exec) 20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [61.0%]  (true,exec) 29 [39.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [61.0%]  (true,exec)
Successors:  26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (false,exec)
Successors:  26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [39.0%]  (true,exec)
Successors:  28 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [39.0%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 22 [39.0%]  (false,exec) 26 [61.0%]  (false,exec) 27 [61.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_deactivate_rtp (struct switch_core_session_t * session)
{
  const char D.48041;
  int D.48040;
  const char D.48037;
  int D.48036;
  switch_status_t st;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_deactivate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  switch_port_t D.43993;
  int D.43990;
  switch_port_t D.43982;
  struct switch_rtp_t * * D.43980;
  struct switch_rtp_t * D.43977;
  switch_port_t D.43976;
  int D.43973;
  char * D.43969;
  char * D.43966;
  struct switch_core_media_params_t * D.43965;
  switch_port_t D.43962;
  struct switch_rtp_t * * D.43960;
  struct switch_rtp_t * D.43957;
  struct switch_channel_t * D.43956;
  struct switch_thread_t * D.43953;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4554, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 29>;
  else
    goto <bb 5>;
  # SUCC: 29 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#18 => &smh_2->engines
  # DEBUG a_engine => D#18
  # DEBUG D#19 => &smh_2->engines[1]
  # DEBUG v_engine => D#19
  D.43953_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
  if (D.43953_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

  # BLOCK 6 freq:6272
  # PRED: 5 [69.8%]  (true,exec)
  D.43956_6 = session_1(D)->channel;
  switch_channel_clear_flag (D.43956_6, 113);
  MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.up = 0;
  D.43953_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
  switch_thread_join (&st, D.43953_7);
  MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread = 0B;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:8982
  # PRED: 5 [30.2%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.43957_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  if (D.43957_8 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [69.8%]  (true,exec) 9 [30.2%]  (false,exec)

  # BLOCK 8 freq:6272
  # PRED: 7 [69.8%]  (true,exec)
  D.43960_9 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  switch_rtp_destroy (D.43960_9);
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:2710
  # PRED: 7 [30.2%]  (false,exec)
  D.43962_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  if (D.43962_10 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [29.0%]  (true,exec) 11 [71.0%]  (false,exec)

  # BLOCK 10 freq:786
  # PRED: 9 [29.0%]  (true,exec)
  D.43965_11 = smh_2->mparams;
  D.43966_12 = D.43965_11->rtpip;
  D.43962_13 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  switch_rtp_release_port (D.43966_12, D.43962_13);
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:8982
  # PRED: 8 [100.0%]  (fallthru,exec) 9 [71.0%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  D.43962_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  if (D.43962_14 != 0)
    goto <bb 12>;
  else
    goto <bb 18>;
  # SUCC: 12 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 12 freq:4491
  # PRED: 11 [50.0%]  (true,exec)
  D.43965_15 = smh_2->mparams;
  D.43969_16 = D.43965_15->remote_ip;
  # DEBUG s => D.43969_16
  if (D.43969_16 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;
  # SUCC: 15 [15.0%]  (true,exec) 13 [85.0%]  (false,exec)

  # BLOCK 13 freq:3818
  # PRED: 12 [85.0%]  (false,exec)
  D.48037_59 = MEM[(const char *)D.43969_16];
  if (D.48037_59 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;
  # SUCC: 15 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 14 freq:1909
  # PRED: 13 [50.0%]  (false,exec)
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:4491
  # PRED: 12 [15.0%]  (true,exec) 13 [50.0%]  (true,exec) 14 [100.0%]  (fallthru,exec)
  # D.48036_60 = PHI <1(12), 1(13), 0(14)>
  if (D.48036_60 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

  # BLOCK 16 freq:1302
  # PRED: 15 [29.0%]  (true,exec)
  D.43965_18 = smh_2->mparams;
  D.43969_19 = D.43965_18->remote_ip;
  D.43973_20 = switch_core_media_check_nat (smh_2, D.43969_19);
  if (D.43973_20 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

  # BLOCK 17 freq:378
  # PRED: 16 [29.0%]  (true,exec)
  D.43962_21 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  switch_nat_del_mapping (D.43962_21, 0);
  D.43962_22 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  D.43976_23 = D.43962_22 + 1;
  switch_nat_del_mapping (D.43976_23, 0);
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:8982
  # PRED: 11 [50.0%]  (false,exec) 15 [71.0%]  (false,exec) 16 [71.0%]  (false,exec) 17 [100.0%]  (fallthru,exec)
  D.43977_24 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  if (D.43977_24 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [69.8%]  (true,exec) 20 [30.2%]  (false,exec)

  # BLOCK 19 freq:6272
  # PRED: 18 [69.8%]  (true,exec)
  D.43980_25 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_destroy (D.43980_25);
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:2710
  # PRED: 18 [30.2%]  (false,exec)
  D.43982_26 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  if (D.43982_26 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 21 freq:786
  # PRED: 20 [29.0%]  (true,exec)
  D.43965_27 = smh_2->mparams;
  D.43966_28 = D.43965_27->rtpip;
  D.43982_29 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  switch_rtp_release_port (D.43966_28, D.43982_29);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:8982
  # PRED: 19 [100.0%]  (fallthru,exec) 20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  D.43982_30 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  if (D.43982_30 != 0)
    goto <bb 23>;
  else
    goto <bb 29>;
  # SUCC: 23 [61.0%]  (true,exec) 29 [39.0%]  (false,exec)

  # BLOCK 23 freq:5479
  # PRED: 22 [61.0%]  (true,exec)
  D.43965_31 = smh_2->mparams;
  D.43969_32 = D.43965_31->remote_ip;
  # DEBUG s => D.43969_32
  if (D.43969_32 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;
  # SUCC: 26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

  # BLOCK 24 freq:4657
  # PRED: 23 [85.0%]  (false,exec)
  D.48041_61 = MEM[(const char *)D.43969_32];
  if (D.48041_61 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:2329
  # PRED: 24 [50.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:5479
  # PRED: 23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
  # D.48040_62 = PHI <1(23), 1(24), 0(25)>
  if (D.48040_62 == 0)
    goto <bb 27>;
  else
    goto <bb 29>;
  # SUCC: 27 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

  # BLOCK 27 freq:2136
  # PRED: 26 [39.0%]  (true,exec)
  D.43965_34 = smh_2->mparams;
  D.43969_35 = D.43965_34->remote_ip;
  D.43990_36 = switch_core_media_check_nat (smh_2, D.43969_35);
  if (D.43990_36 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [39.0%]  (true,exec) 29 [61.0%]  (false,exec)

  # BLOCK 28 freq:833
  # PRED: 27 [39.0%]  (true,exec)
  D.43982_37 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  switch_nat_del_mapping (D.43982_37, 0);
  D.43982_38 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.43993_39 = D.43982_38 + 1;
  switch_nat_del_mapping (D.43993_39, 0);
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 22 [39.0%]  (false,exec) 26 [61.0%]  (false,exec) 27 [61.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_handle_destroy (switch_media_handle_destroy)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 38 5 }
;; 5 succs { 6 10 }
;; 6 succs { 7 10 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 18 }
;; 14 succs { 15 18 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 26 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 26 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 34 }
;; 30 succs { 31 34 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 8
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 14
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 15
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 16
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 17
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 22
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 23
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 24
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 25
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 31
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 32
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 33
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
1 edges in bb 37 predicted to even probabilities
1 edges in bb 38 predicted to even probabilities

;; Function switch_media_handle_destroy

;; 
39 basic blocks, 63 edges, last basic block 39.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  38 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  5 [15.0%]  (false,exec) 6 [50.0%]  (false,exec) 7 [15.0%]  (false,exec) 8 [15.0%]  (false,exec) 9 [15.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [29.0%]  (true,exec) 13 [71.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [29.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [71.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [85.0%]  (true,exec)
Successors:  15 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  16 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [85.0%]  (true,exec)
Successors:  17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [85.0%]  (true,exec)
Successors:  19 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  13 [15.0%]  (false,exec) 14 [50.0%]  (false,exec) 15 [15.0%]  (false,exec) 16 [15.0%]  (false,exec) 17 [15.0%]  (false,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [85.0%]  (true,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [29.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [71.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [85.0%]  (true,exec)
Successors:  23 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [50.0%]  (true,exec)
Successors:  24 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  25 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [85.0%]  (true,exec)
Successors:  27 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  21 [15.0%]  (false,exec) 22 [50.0%]  (false,exec) 23 [15.0%]  (false,exec) 24 [15.0%]  (false,exec) 25 [15.0%]  (false,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [85.0%]  (true,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [29.0%]  (true,exec) 29 [71.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [29.0%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [71.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  30 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [85.0%]  (true,exec)
Successors:  31 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec)
Successors:  32 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [85.0%]  (true,exec)
Successors:  33 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [85.0%]  (true,exec)
Successors:  35 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  29 [15.0%]  (false,exec) 30 [50.0%]  (false,exec) 31 [15.0%]  (false,exec) 32 [15.0%]  (false,exec) 33 [15.0%]  (false,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  33 [85.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
Successors:  36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [29.0%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 37 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_media_handle_destroy (struct switch_core_session_t * session)
{
  int iftmp.104;
  uint32_t D.48077;
  uint32_t D.48076;
  struct switch_mutex_t * D.48075;
  struct switch_codec_interface_t * D.48074;
  const struct switch_codec_implementation_t * D.48073;
  int iftmp.104;
  uint32_t D.48068;
  uint32_t D.48067;
  struct switch_mutex_t * D.48066;
  struct switch_codec_interface_t * D.48065;
  const struct switch_codec_implementation_t * D.48064;
  int iftmp.104;
  uint32_t D.48059;
  uint32_t D.48058;
  struct switch_mutex_t * D.48057;
  struct switch_codec_interface_t * D.48056;
  const struct switch_codec_implementation_t * D.48055;
  int iftmp.104;
  uint32_t D.48050;
  uint32_t D.48049;
  struct switch_mutex_t * D.48048;
  struct switch_codec_interface_t * D.48047;
  const struct switch_codec_implementation_t * D.48046;
  static const char __PRETTY_FUNCTION__[28] = "switch_media_handle_destroy";
  struct switch_media_handle_t * smh;
  struct switch_codec_t * D.46515;
  struct switch_codec_t * D.46511;
  struct switch_codec_t * D.46507;
  struct switch_codec_t * D.46503;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 1378, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 38>;
  else
    goto <bb 5>;
  # SUCC: 38 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#20 => &smh_2->engines
  # DEBUG a_engine => D#20
  # DEBUG D#21 => &smh_2->engines[1]
  # DEBUG v_engine => D#21
  D.46503_5 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
  # DEBUG codec => D.46503_5
  if (D.46503_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 10>;
  # SUCC: 6 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 6 freq:7635
  # PRED: 5 [85.0%]  (true,exec)
  D.48050_29 = MEM[(struct switch_codec_t *)smh_2 + 1604B].flags;
  D.48049_30 = D.48050_29 & 256;
  if (D.48049_30 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;
  # SUCC: 7 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 7 freq:3818
  # PRED: 6 [50.0%]  (true,exec)
  D.48048_31 = MEM[(struct switch_codec_t *)smh_2 + 1604B].mutex;
  if (D.48048_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
  # SUCC: 8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 8 freq:3245
  # PRED: 7 [85.0%]  (true,exec)
  D.48047_32 = MEM[(struct switch_codec_t *)smh_2 + 1604B].codec_interface;
  if (D.48047_32 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 9 freq:2758
  # PRED: 8 [85.0%]  (true,exec)
  D.48046_33 = MEM[(struct switch_codec_t *)smh_2 + 1604B].implementation;
  if (D.48046_33 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 10 freq:6638
  # PRED: 5 [15.0%]  (false,exec) 6 [50.0%]  (false,exec) 7 [15.0%]  (false,exec) 8 [15.0%]  (false,exec) 9 [15.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:8982
  # PRED: 9 [85.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # iftmp.104_34 = PHI <1(9), 0(10)>
  if (iftmp.104_34 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [29.0%]  (true,exec) 13 [71.0%]  (false,exec)

  # BLOCK 12 freq:2605
  # PRED: 11 [29.0%]  (true,exec)
  D.46503_7 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
  switch_core_codec_destroy (D.46503_7);
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:8982
  # PRED: 11 [71.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
  D.46507_8 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
  # DEBUG codec => D.46507_8
  if (D.46507_8 != 0B)
    goto <bb 14>;
  else
    goto <bb 18>;
  # SUCC: 14 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 14 freq:7635
  # PRED: 13 [85.0%]  (true,exec)
  D.48059_36 = MEM[(struct switch_codec_t *)smh_2 + 1652B].flags;
  D.48058_37 = D.48059_36 & 256;
  if (D.48058_37 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;
  # SUCC: 15 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 15 freq:3818
  # PRED: 14 [50.0%]  (true,exec)
  D.48057_38 = MEM[(struct switch_codec_t *)smh_2 + 1652B].mutex;
  if (D.48057_38 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 16 freq:3245
  # PRED: 15 [85.0%]  (true,exec)
  D.48056_39 = MEM[(struct switch_codec_t *)smh_2 + 1652B].codec_interface;
  if (D.48056_39 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 17 freq:2758
  # PRED: 16 [85.0%]  (true,exec)
  D.48055_40 = MEM[(struct switch_codec_t *)smh_2 + 1652B].implementation;
  if (D.48055_40 != 0B)
    goto <bb 19>;
  else
    goto <bb 18>;
  # SUCC: 19 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 18 freq:6638
  # PRED: 13 [15.0%]  (false,exec) 14 [50.0%]  (false,exec) 15 [15.0%]  (false,exec) 16 [15.0%]  (false,exec) 17 [15.0%]  (false,exec)
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:8982
  # PRED: 17 [85.0%]  (true,exec) 18 [100.0%]  (fallthru,exec)
  # iftmp.104_41 = PHI <1(17), 0(18)>
  if (iftmp.104_41 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

  # BLOCK 20 freq:2605
  # PRED: 19 [29.0%]  (true,exec)
  D.46507_10 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
  switch_core_codec_destroy (D.46507_10);
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:8982
  # PRED: 19 [71.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  D.46511_11 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
  # DEBUG codec => D.46511_11
  if (D.46511_11 != 0B)
    goto <bb 22>;
  else
    goto <bb 26>;
  # SUCC: 22 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

  # BLOCK 22 freq:7635
  # PRED: 21 [85.0%]  (true,exec)
  D.48068_43 = MEM[(struct switch_codec_t *)smh_2 + 13020B].flags;
  D.48067_44 = D.48068_43 & 256;
  if (D.48067_44 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;
  # SUCC: 23 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 23 freq:3818
  # PRED: 22 [50.0%]  (true,exec)
  D.48066_45 = MEM[(struct switch_codec_t *)smh_2 + 13020B].mutex;
  if (D.48066_45 != 0B)
    goto <bb 24>;
  else
    goto <bb 26>;
  # SUCC: 24 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

  # BLOCK 24 freq:3245
  # PRED: 23 [85.0%]  (true,exec)
  D.48065_46 = MEM[(struct switch_codec_t *)smh_2 + 13020B].codec_interface;
  if (D.48065_46 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

  # BLOCK 25 freq:2758
  # PRED: 24 [85.0%]  (true,exec)
  D.48064_47 = MEM[(struct switch_codec_t *)smh_2 + 13020B].implementation;
  if (D.48064_47 != 0B)
    goto <bb 27>;
  else
    goto <bb 26>;
  # SUCC: 27 [85.0%]  (true,exec) 26 [15.0%]  (false,exec)

  # BLOCK 26 freq:6638
  # PRED: 21 [15.0%]  (false,exec) 22 [50.0%]  (false,exec) 23 [15.0%]  (false,exec) 24 [15.0%]  (false,exec) 25 [15.0%]  (false,exec)
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:8982
  # PRED: 25 [85.0%]  (true,exec) 26 [100.0%]  (fallthru,exec)
  # iftmp.104_48 = PHI <1(25), 0(26)>
  if (iftmp.104_48 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [29.0%]  (true,exec) 29 [71.0%]  (false,exec)

  # BLOCK 28 freq:2605
  # PRED: 27 [29.0%]  (true,exec)
  D.46511_13 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
  switch_core_codec_destroy (D.46511_13);
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:8982
  # PRED: 27 [71.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  D.46515_14 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
  # DEBUG codec => D.46515_14
  if (D.46515_14 != 0B)
    goto <bb 30>;
  else
    goto <bb 34>;
  # SUCC: 30 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 30 freq:7635
  # PRED: 29 [85.0%]  (true,exec)
  D.48077_50 = MEM[(struct switch_codec_t *)smh_2 + 13068B].flags;
  D.48076_51 = D.48077_50 & 256;
  if (D.48076_51 != 0)
    goto <bb 31>;
  else
    goto <bb 34>;
  # SUCC: 31 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 31 freq:3818
  # PRED: 30 [50.0%]  (true,exec)
  D.48075_52 = MEM[(struct switch_codec_t *)smh_2 + 13068B].mutex;
  if (D.48075_52 != 0B)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 32 freq:3245
  # PRED: 31 [85.0%]  (true,exec)
  D.48074_53 = MEM[(struct switch_codec_t *)smh_2 + 13068B].codec_interface;
  if (D.48074_53 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 33 freq:2758
  # PRED: 32 [85.0%]  (true,exec)
  D.48073_54 = MEM[(struct switch_codec_t *)smh_2 + 13068B].implementation;
  if (D.48073_54 != 0B)
    goto <bb 35>;
  else
    goto <bb 34>;
  # SUCC: 35 [85.0%]  (true,exec) 34 [15.0%]  (false,exec)

  # BLOCK 34 freq:6638
  # PRED: 29 [15.0%]  (false,exec) 30 [50.0%]  (false,exec) 31 [15.0%]  (false,exec) 32 [15.0%]  (false,exec) 33 [15.0%]  (false,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:8982
  # PRED: 33 [85.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
  # iftmp.104_55 = PHI <1(33), 0(34)>
  if (iftmp.104_55 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

  # BLOCK 36 freq:2605
  # PRED: 35 [29.0%]  (true,exec)
  D.46515_16 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
  switch_core_codec_destroy (D.46515_16);
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:8982
  # PRED: 35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
  switch_core_session_unset_read_codec (session_1(D));
  switch_core_session_unset_write_codec (session_1(D));
  switch_core_media_deactivate_rtp (session_1(D));
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 37 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_wake_video_thread (switch_core_session_wake_video_thread)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_session_wake_video_thread

;; 
7 basic blocks, 9 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  6 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  6 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [78.4%]  (false,exec)
Successors:  5 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [21.6%]  (true,exec) 4 [61.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_wake_video_thread (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * smh;
  struct switch_thread_cond_t * D.43947;
  switch_status_t D.43944;
  struct switch_mutex_t * D.43943;
  struct switch_rtp_t * D.43940;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 3>;
  # SUCC: 6 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  # DEBUG D#22 => &smh_2->engines[1]
  # DEBUG v_engine => D#22
  D.43940_4 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  if (D.43940_4 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;
  # SUCC: 6 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

  # BLOCK 4 freq:7041
  # PRED: 3 [78.4%]  (false,exec)
  D.43943_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
  D.43944_6 = switch_mutex_trylock (D.43943_5);
  if (D.43944_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 5 freq:2745
  # PRED: 4 [39.0%]  (true,exec)
  D.43947_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond;
  switch_thread_cond_broadcast (D.43947_7);
  D.43943_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
  switch_mutex_unlock (D.43943_8);
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 3 [21.6%]  (true,exec) 4 [61.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_activate_rtp (switch_core_media_activate_rtp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 312 5 }
;; 5 succs { 312 6 }
;; 6 succs { 312 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 311 12 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 15 311 }
;; 15 succs { 203 311 }
;; 16 succs { 311 17 }
;; 17 succs { 18 22 }
;; 18 succs { 19 22 }
;; 19 succs { 21 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 25 23 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 29 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 34 }
;; 31 succs { 33 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 44 }
;; 41 succs { 42 44 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 51 }
;; 45 succs { 46 51 }
;; 46 succs { 47 50 }
;; 47 succs { 48 50 }
;; 48 succs { 49 50 }
;; 49 succs { 203 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 70 }
;; 54 succs { 55 70 }
;; 55 succs { 56 58 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 68 }
;; 60 succs { 61 63 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 68 }
;; 64 succs { 66 65 }
;; 65 succs { 66 68 }
;; 66 succs { 67 68 }
;; 67 succs { 68 }
;; 68 succs { 69 203 }
;; 69 succs { 203 }
;; 70 succs { 71 78 }
;; 71 succs { 72 76 }
;; 72 succs { 73 76 }
;; 73 succs { 75 74 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 77 80 }
;; 77 succs { 80 }
;; 78 succs { 79 80 }
;; 79 succs { 80 }
;; 80 succs { 82 81 }
;; 81 succs { 82 84 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 85 306 }
;; 85 succs { 86 87 }
;; 86 succs { 88 }
;; 87 succs { 88 }
;; 88 succs { 89 90 }
;; 89 succs { 90 }
;; 90 succs { 91 93 }
;; 91 succs { 92 93 }
;; 92 succs { 93 }
;; 93 succs { 94 96 }
;; 94 succs { 95 96 }
;; 95 succs { 96 }
;; 96 succs { 97 99 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 102 }
;; 100 succs { 101 102 }
;; 101 succs { 102 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 106 }
;; 105 succs { 106 }
;; 106 succs { 108 107 }
;; 107 succs { 108 113 }
;; 108 succs { 110 109 }
;; 109 succs { 110 }
;; 110 succs { 112 111 }
;; 111 succs { 112 }
;; 112 succs { 113 }
;; 113 succs { 114 117 }
;; 114 succs { 116 115 }
;; 115 succs { 116 }
;; 116 succs { 117 }
;; 117 succs { 119 118 }
;; 118 succs { 119 134 }
;; 119 succs { 120 121 }
;; 120 succs { 121 }
;; 121 succs { 122 123 }
;; 122 succs { 126 }
;; 123 succs { 124 125 }
;; 124 succs { 125 }
;; 125 succs { 126 }
;; 126 succs { 127 134 }
;; 127 succs { 128 131 }
;; 128 succs { 129 131 }
;; 129 succs { 130 131 }
;; 130 succs { 134 }
;; 131 succs { 133 132 }
;; 132 succs { 133 }
;; 133 succs { 134 }
;; 134 succs { 137 135 }
;; 135 succs { 137 136 }
;; 136 succs { 137 }
;; 137 succs { 138 152 }
;; 138 succs { 139 152 }
;; 139 succs { 140 152 }
;; 140 succs { 142 141 }
;; 141 succs { 142 }
;; 142 succs { 143 146 }
;; 143 succs { 145 144 }
;; 144 succs { 145 }
;; 145 succs { 146 }
;; 146 succs { 147 149 }
;; 147 succs { 148 149 }
;; 148 succs { 149 }
;; 149 succs { 150 152 }
;; 150 succs { 151 152 }
;; 151 succs { 152 }
;; 152 succs { 154 153 }
;; 153 succs { 154 171 }
;; 154 succs { 155 157 }
;; 155 succs { 156 157 }
;; 156 succs { 157 }
;; 157 succs { 158 159 }
;; 158 succs { 159 }
;; 159 succs { 160 161 }
;; 160 succs { 171 }
;; 161 succs { 162 163 }
;; 162 succs { 163 }
;; 163 succs { 164 165 }
;; 164 succs { 165 }
;; 165 succs { 166 167 }
;; 166 succs { 167 }
;; 167 succs { 168 170 }
;; 168 succs { 169 171 }
;; 169 succs { 171 }
;; 170 succs { 171 }
;; 171 succs { 172 174 }
;; 172 succs { 173 174 }
;; 173 succs { 174 }
;; 174 succs { 175 177 }
;; 175 succs { 176 177 }
;; 176 succs { 177 }
;; 177 succs { 178 180 }
;; 178 succs { 179 180 }
;; 179 succs { 180 }
;; 180 succs { 181 182 }
;; 181 succs { 182 }
;; 182 succs { 183 184 }
;; 183 succs { 184 }
;; 184 succs { 185 186 }
;; 185 succs { 186 }
;; 186 succs { 191 187 }
;; 187 succs { 188 189 }
;; 188 succs { 191 189 }
;; 189 succs { 190 192 }
;; 190 succs { 191 192 }
;; 191 succs { 192 }
;; 192 succs { 193 196 }
;; 193 succs { 194 195 }
;; 194 succs { 195 }
;; 195 succs { 196 }
;; 196 succs { 197 198 }
;; 197 succs { 198 }
;; 198 succs { 199 201 }
;; 199 succs { 200 201 }
;; 200 succs { 201 }
;; 201 succs { 202 203 }
;; 202 succs { 203 }
;; 203 succs { 204 205 }
;; 204 succs { 205 }
;; 205 succs { 206 309 }
;; 206 succs { 207 309 }
;; 207 succs { 208 309 }
;; 208 succs { 209 215 }
;; 209 succs { 210 215 }
;; 210 succs { 211 214 }
;; 211 succs { 212 214 }
;; 212 succs { 213 214 }
;; 213 succs { 309 }
;; 214 succs { 215 }
;; 215 succs { 216 218 }
;; 216 succs { 217 218 }
;; 217 succs { 218 }
;; 218 succs { 219 230 }
;; 219 succs { 220 230 }
;; 220 succs { 221 223 }
;; 221 succs { 222 223 }
;; 222 succs { 223 }
;; 223 succs { 224 225 }
;; 224 succs { 309 }
;; 225 succs { 226 309 }
;; 226 succs { 227 309 }
;; 227 succs { 229 228 }
;; 228 succs { 229 309 }
;; 229 succs { 309 }
;; 230 succs { 231 238 }
;; 231 succs { 232 236 }
;; 232 succs { 233 236 }
;; 233 succs { 235 234 }
;; 234 succs { 235 236 }
;; 235 succs { 236 }
;; 236 succs { 237 239 }
;; 237 succs { 239 }
;; 238 succs { 239 }
;; 239 succs { 309 240 }
;; 240 succs { 241 242 }
;; 241 succs { 242 }
;; 242 succs { 243 248 }
;; 243 succs { 244 248 }
;; 244 succs { 246 245 }
;; 245 succs { 246 248 }
;; 246 succs { 247 248 }
;; 247 succs { 248 }
;; 248 succs { 249 250 }
;; 249 succs { 250 }
;; 250 succs { 252 251 }
;; 251 succs { 252 }
;; 252 succs { 253 254 }
;; 253 succs { 254 }
;; 254 succs { 255 303 }
;; 255 succs { 256 257 }
;; 256 succs { 257 }
;; 257 succs { 258 259 }
;; 258 succs { 259 }
;; 259 succs { 260 261 }
;; 260 succs { 262 }
;; 261 succs { 262 }
;; 262 succs { 263 264 }
;; 263 succs { 264 }
;; 264 succs { 265 268 }
;; 265 succs { 267 266 }
;; 266 succs { 267 }
;; 267 succs { 268 }
;; 268 succs { 270 269 }
;; 269 succs { 270 285 }
;; 270 succs { 271 272 }
;; 271 succs { 272 }
;; 272 succs { 273 274 }
;; 273 succs { 277 }
;; 274 succs { 275 276 }
;; 275 succs { 276 }
;; 276 succs { 277 }
;; 277 succs { 278 285 }
;; 278 succs { 279 282 }
;; 279 succs { 280 282 }
;; 280 succs { 281 282 }
;; 281 succs { 285 }
;; 282 succs { 284 283 }
;; 283 succs { 284 }
;; 284 succs { 285 }
;; 285 succs { 288 286 }
;; 286 succs { 288 287 }
;; 287 succs { 288 }
;; 288 succs { 289 299 }
;; 289 succs { 290 299 }
;; 290 succs { 291 299 }
;; 291 succs { 293 292 }
;; 292 succs { 293 }
;; 293 succs { 294 296 }
;; 294 succs { 295 296 }
;; 295 succs { 296 }
;; 296 succs { 297 299 }
;; 297 succs { 298 299 }
;; 298 succs { 299 }
;; 299 succs { 300 301 }
;; 300 succs { 301 }
;; 301 succs { 302 309 }
;; 302 succs { 309 }
;; 303 succs { 304 305 }
;; 304 succs { 305 }
;; 305 succs { 311 }
;; 306 succs { 307 308 }
;; 307 succs { 308 }
;; 308 succs { 311 }
;; 309 succs { 310 311 }
;; 310 succs { 311 }
;; 311 succs { 312 }
;; 312 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 12
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 13
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 14
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 16
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 17
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 18
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 19
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 20
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 23
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
Predictions for bb 26
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 27
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 31
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 32
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 35 predicted to even probabilities
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 39 predicted to even probabilities
Predictions for bb 40
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 41
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 42
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 45
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 46
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 47
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 48
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 49 predicted to even probabilities
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 54
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 55
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 56
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 57 predicted to even probabilities
Predictions for bb 58
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 59 predicted to even probabilities
Predictions for bb 60
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 61
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 62 predicted to even probabilities
Predictions for bb 63
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 64
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 65
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 66
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 67 predicted to even probabilities
Predictions for bb 68
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 69 predicted to even probabilities
Predictions for bb 70
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 71
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 72
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 73
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 74
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 75 predicted to even probabilities
Predictions for bb 76
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 77 predicted to even probabilities
Predictions for bb 78
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 79 predicted to even probabilities
Predictions for bb 80
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 81
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 82
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 83 predicted to even probabilities
Predictions for bb 84
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 85
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 86 predicted to even probabilities
1 edges in bb 87 predicted to even probabilities
Predictions for bb 88
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 89 predicted to even probabilities
Predictions for bb 90
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 91
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 92 predicted to even probabilities
Predictions for bb 93
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 94
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 95 predicted to even probabilities
Predictions for bb 96
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 97
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 98 predicted to even probabilities
Predictions for bb 99
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 100
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 101 predicted to even probabilities
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 103 predicted to even probabilities
Predictions for bb 104
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 105 predicted to even probabilities
Predictions for bb 106
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 107
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 108
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 109 predicted to even probabilities
Predictions for bb 110
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 111 predicted to even probabilities
1 edges in bb 112 predicted to even probabilities
Predictions for bb 113
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 114
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 115 predicted to even probabilities
1 edges in bb 116 predicted to even probabilities
Predictions for bb 117
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 118
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 119
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 120 predicted to even probabilities
Predictions for bb 121
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 122 predicted to even probabilities
Predictions for bb 123
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 124 predicted to even probabilities
1 edges in bb 125 predicted to even probabilities
Predictions for bb 126
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 127
  DS theory heuristics: 86.9%
  first match heuristics (ignored): 73.0%
  combined heuristics: 86.9%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
Predictions for bb 128
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 129
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 130 predicted to even probabilities
Predictions for bb 131
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 132 predicted to even probabilities
1 edges in bb 133 predicted to even probabilities
Predictions for bb 134
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 135
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 136 predicted to even probabilities
Predictions for bb 137
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 138
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 139
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 140
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 141 predicted to even probabilities
Predictions for bb 142
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 143
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 144 predicted to even probabilities
1 edges in bb 145 predicted to even probabilities
Predictions for bb 146
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
Predictions for bb 147
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 148 predicted to even probabilities
Predictions for bb 149
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
Predictions for bb 150
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 151 predicted to even probabilities
Predictions for bb 152
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 153
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 154
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 155
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 156 predicted to even probabilities
Predictions for bb 157
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 158 predicted to even probabilities
Predictions for bb 159
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 160 predicted to even probabilities
Predictions for bb 161
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
1 edges in bb 162 predicted to even probabilities
Predictions for bb 163
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 164 predicted to even probabilities
Predictions for bb 165
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 166 predicted to even probabilities
Predictions for bb 167
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 168
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 169 predicted to even probabilities
1 edges in bb 170 predicted to even probabilities
Predictions for bb 171
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 172
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
1 edges in bb 173 predicted to even probabilities
Predictions for bb 174
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 175
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
1 edges in bb 176 predicted to even probabilities
Predictions for bb 177
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 178
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 179 predicted to even probabilities
Predictions for bb 180
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 181 predicted to even probabilities
Predictions for bb 182
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 183 predicted to even probabilities
Predictions for bb 184
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 185 predicted to even probabilities
Predictions for bb 186
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 187
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 188
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 189
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 190
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 191 predicted to even probabilities
Predictions for bb 192
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 193
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
1 edges in bb 194 predicted to even probabilities
1 edges in bb 195 predicted to even probabilities
Predictions for bb 196
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 197 predicted to even probabilities
Predictions for bb 198
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 199
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 200 predicted to even probabilities
Predictions for bb 201
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 202 predicted to even probabilities
Predictions for bb 203
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 204 predicted to even probabilities
Predictions for bb 205
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 206
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 207
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 208
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 209
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 210
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 211
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 212
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 213 predicted to even probabilities
1 edges in bb 214 predicted to even probabilities
Predictions for bb 215
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 216
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 217 predicted to even probabilities
Predictions for bb 218
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 219
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 220
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 221
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 222 predicted to even probabilities
Predictions for bb 223
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 224 predicted to even probabilities
Predictions for bb 225
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 226
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 227
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 228
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 229 predicted to even probabilities
Predictions for bb 230
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 231
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 232
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 233
  DS theory heuristics: 30.2%
  first match heuristics (ignored): 15.0%
  combined heuristics: 30.2%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
Predictions for bb 234
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 235 predicted to even probabilities
Predictions for bb 236
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 237 predicted to even probabilities
1 edges in bb 238 predicted to even probabilities
Predictions for bb 239
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 240
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 241 predicted to even probabilities
Predictions for bb 242
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 243
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 244
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 245
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 246
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 247 predicted to even probabilities
Predictions for bb 248
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 249 predicted to even probabilities
Predictions for bb 250
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 251 predicted to even probabilities
Predictions for bb 252
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 253 predicted to even probabilities
Predictions for bb 254
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 255
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 256 predicted to even probabilities
Predictions for bb 257
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 258 predicted to even probabilities
Predictions for bb 259
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 260 predicted to even probabilities
1 edges in bb 261 predicted to even probabilities
Predictions for bb 262
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 263 predicted to even probabilities
Predictions for bb 264
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 265
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 266 predicted to even probabilities
1 edges in bb 267 predicted to even probabilities
Predictions for bb 268
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 269
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 270
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 271 predicted to even probabilities
Predictions for bb 272
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 273 predicted to even probabilities
Predictions for bb 274
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 275 predicted to even probabilities
1 edges in bb 276 predicted to even probabilities
Predictions for bb 277
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 278
  DS theory heuristics: 86.9%
  first match heuristics (ignored): 73.0%
  combined heuristics: 86.9%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
Predictions for bb 279
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 280
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 281 predicted to even probabilities
Predictions for bb 282
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 283 predicted to even probabilities
1 edges in bb 284 predicted to even probabilities
Predictions for bb 285
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 286
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 287 predicted to even probabilities
Predictions for bb 288
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 289
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 290
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 291
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 292 predicted to even probabilities
Predictions for bb 293
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
Predictions for bb 294
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 295 predicted to even probabilities
Predictions for bb 296
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
Predictions for bb 297
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 298 predicted to even probabilities
Predictions for bb 299
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 300 predicted to even probabilities
Predictions for bb 301
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 302 predicted to even probabilities
Predictions for bb 303
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 304 predicted to even probabilities
1 edges in bb 305 predicted to even probabilities
Predictions for bb 306
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 307 predicted to even probabilities
1 edges in bb 308 predicted to even probabilities
Predictions for bb 309
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 310 predicted to even probabilities
1 edges in bb 311 predicted to even probabilities
1 edges in bb 312 predicted to even probabilities

;; Function switch_core_media_activate_rtp

;; 
313 basic blocks, 510 edges, last basic block 313.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  312 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  312 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (false,exec)
Successors:  312 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (false,exec)
Successors:  8 [29.0%]  (true,exec) 9 [71.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [29.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [71.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [51.2%]  (true,exec) 11 [48.8%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [51.2%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [48.8%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  311 [71.0%]  (true,exec) 12 [29.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [29.0%]  (false,exec)
Successors:  13 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  14 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [29.0%]  (true,exec)
Successors:  15 [29.0%]  (true,exec) 311 [71.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [29.0%]  (true,exec)
Successors:  203 [50.0%]  (true,exec) 311 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec) 13 [71.0%]  (false,exec)
Successors:  311 [71.0%]  (true,exec) 17 [29.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [29.0%]  (false,exec)
Successors:  18 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [29.0%]  (true,exec)
Successors:  19 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [29.0%]  (true,exec)
Successors:  21 [30.2%]  (true,exec) 20 [69.8%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [69.8%]  (false,exec)
Successors:  21 [50.0%]  (true,exec) 22 [50.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [30.2%]  (true,exec) 20 [50.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  17 [71.0%]  (false,exec) 18 [71.0%]  (false,exec) 20 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  25 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [50.0%]  (false,exec)
Successors:  24 [69.8%]  (true,exec) 26 [30.2%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [69.8%]  (true,exec)
Successors:  25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [50.0%]  (true,exec) 24 [50.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  23 [30.2%]  (false,exec) 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
Successors:  29 [71.0%]  (true,exec) 27 [29.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (false,exec)
Successors:  28 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [69.8%]  (true,exec)
Successors:  29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  26 [71.0%]  (true,exec) 28 [50.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  27 [30.2%]  (false,exec) 28 [50.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
Successors:  31 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [29.0%]  (true,exec)
Successors:  33 [30.2%]  (true,exec) 32 [69.8%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [69.8%]  (false,exec)
Successors:  33 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  31 [30.2%]  (true,exec) 32 [50.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  30 [71.0%]  (false,exec) 32 [50.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  35 [100.0%]  (fallthru,exec) 36 [50.0%]  (false,exec) 37 [100.0%]  (fallthru,exec)
Successors:  39 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [50.0%]  (true,exec)
Successors:  40 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  38 [50.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
Successors:  41 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [29.0%]  (true,exec)
Successors:  42 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [69.8%]  (true,exec)
Successors:  43 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [50.0%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  40 [71.0%]  (false,exec) 41 [30.2%]  (false,exec) 42 [50.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
Successors:  45 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [85.0%]  (true,exec)
Successors:  46 [29.0%]  (true,exec) 51 [71.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [29.0%]  (true,exec)
Successors:  47 [71.0%]  (true,exec) 50 [29.0%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [71.0%]  (true,exec)
Successors:  48 [50.0%]  (true,exec) 50 [50.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [50.0%]  (true,exec)
Successors:  49 [13.7%]  (true,exec) 50 [86.3%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [13.7%]  (true,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  46 [29.0%]  (false,exec) 47 [50.0%]  (false,exec) 48 [86.3%]  (false,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  44 [15.0%]  (false,exec) 45 [71.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
Successors:  52 [29.0%]  (true,exec) 53 [71.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [29.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  51 [71.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
Successors:  54 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (true,exec)
Successors:  55 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec)
Successors:  56 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [29.0%]  (true,exec)
Successors:  57 [69.8%]  (true,exec) 58 [30.2%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [69.8%]  (true,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  55 [71.0%]  (false,exec) 56 [30.2%]  (false,exec) 57 [100.0%]  (fallthru,exec)
Successors:  59 [50.0%]  (true,exec) 60 [50.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [50.0%]  (true,exec)
Successors:  68 [100.0%]  (fallthru,exec)

Basic block 60 (new, reachable)
Predecessors:  58 [50.0%]  (false,exec)
Successors:  61 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

Basic block 61 (new, reachable)
Predecessors:  60 [50.0%]  (true,exec)
Successors:  62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [29.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  60 [50.0%]  (false,exec) 61 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec)
Successors:  64 [29.0%]  (true,exec) 68 [71.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [29.0%]  (true,exec)
Successors:  66 [15.0%]  (true,exec) 65 [85.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [85.0%]  (false,exec)
Successors:  66 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  64 [15.0%]  (true,exec) 65 [50.0%]  (true,exec)
Successors:  67 [29.0%]  (true,exec) 68 [71.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [29.0%]  (true,exec)
Successors:  68 [100.0%]  (fallthru,exec)

Basic block 68 (new, reachable)
Predecessors:  59 [100.0%]  (fallthru,exec) 63 [71.0%]  (false,exec) 65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 67 [100.0%]  (fallthru,exec)
Successors:  69 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [29.0%]  (true,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 70 (new, reachable)
Predecessors:  53 [15.0%]  (false,exec) 54 [50.0%]  (false,exec)
Successors:  71 [50.0%]  (true,exec) 78 [50.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [50.0%]  (true,exec)
Successors:  72 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [29.0%]  (true,exec)
Successors:  73 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [29.0%]  (true,exec)
Successors:  75 [30.2%]  (true,exec) 74 [69.8%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [69.8%]  (false,exec)
Successors:  75 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  73 [30.2%]  (true,exec) 74 [50.0%]  (true,exec)
Successors:  76 [100.0%]  (fallthru,exec)

Basic block 76 (new, reachable)
Predecessors:  71 [71.0%]  (false,exec) 72 [71.0%]  (false,exec) 74 [50.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
Successors:  77 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [29.0%]  (true,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 78 (new, reachable)
Predecessors:  70 [50.0%]  (false,exec)
Successors:  79 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [85.0%]  (true,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 80 (new, reachable)
Predecessors:  77 [100.0%]  (fallthru,exec) 78 [15.0%]  (false,exec) 79 [100.0%]  (fallthru,exec) 76 [71.0%]  (false,exec)
Successors:  82 [50.0%]  (true,exec) 81 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (false,exec)
Successors:  82 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec) 81 [50.0%]  (true,exec)
Successors:  83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [29.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [50.0%]  (false,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [29.0%]  (true,exec) 306 [71.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [29.0%]  (true,exec)
Successors:  86 [85.0%]  (true,exec) 87 [15.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [85.0%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 87 (new, reachable)
Predecessors:  85 [15.0%]  (false,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 88 (new, reachable)
Predecessors:  86 [100.0%]  (fallthru,exec) 87 [100.0%]  (fallthru,exec)
Successors:  89 [29.0%]  (true,exec) 90 [71.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [29.0%]  (true,exec)
Successors:  90 [100.0%]  (fallthru,exec)

Basic block 90 (new, reachable)
Predecessors:  88 [71.0%]  (false,exec) 89 [100.0%]  (fallthru,exec)
Successors:  91 [69.8%]  (true,exec) 93 [30.2%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [69.8%]  (true,exec)
Successors:  92 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [50.0%]  (true,exec)
Successors:  93 [100.0%]  (fallthru,exec)

Basic block 93 (new, reachable)
Predecessors:  90 [30.2%]  (false,exec) 91 [50.0%]  (false,exec) 92 [100.0%]  (fallthru,exec)
Successors:  94 [69.8%]  (true,exec) 96 [30.2%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  93 [69.8%]  (true,exec)
Successors:  95 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [50.0%]  (true,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 96 (new, reachable)
Predecessors:  93 [30.2%]  (false,exec) 94 [50.0%]  (false,exec) 95 [100.0%]  (fallthru,exec)
Successors:  97 [69.8%]  (true,exec) 99 [30.2%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [69.8%]  (true,exec)
Successors:  98 [50.0%]  (true,exec) 99 [50.0%]  (false,exec)

Basic block 98 (new, reachable)
Predecessors:  97 [50.0%]  (true,exec)
Successors:  99 [100.0%]  (fallthru,exec)

Basic block 99 (new, reachable)
Predecessors:  96 [30.2%]  (false,exec) 97 [50.0%]  (false,exec) 98 [100.0%]  (fallthru,exec)
Successors:  100 [69.8%]  (true,exec) 102 [30.2%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [69.8%]  (true,exec)
Successors:  101 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [50.0%]  (true,exec)
Successors:  102 [100.0%]  (fallthru,exec)

Basic block 102 (new, reachable)
Predecessors:  99 [30.2%]  (false,exec) 100 [50.0%]  (false,exec) 101 [100.0%]  (fallthru,exec)
Successors:  103 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  102 [50.0%]  (true,exec)
Successors:  104 [100.0%]  (fallthru,exec)

Basic block 104 (new, reachable)
Predecessors:  102 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
Successors:  105 [69.8%]  (true,exec) 106 [30.2%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [69.8%]  (true,exec)
Successors:  106 [100.0%]  (fallthru,exec)

Basic block 106 (new, reachable)
Predecessors:  104 [30.2%]  (false,exec) 105 [100.0%]  (fallthru,exec)
Successors:  108 [29.0%]  (true,exec) 107 [71.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [71.0%]  (false,exec)
Successors:  108 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  106 [29.0%]  (true,exec) 107 [50.0%]  (true,exec)
Successors:  110 [50.0%]  (true,exec) 109 [50.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [50.0%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 110 (new, reachable)
Predecessors:  108 [50.0%]  (true,exec) 109 [100.0%]  (fallthru,exec)
Successors:  112 [50.0%]  (true,exec) 111 [50.0%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  110 [50.0%]  (false,exec)
Successors:  112 [100.0%]  (fallthru,exec)

Basic block 112 (new, reachable)
Predecessors:  110 [50.0%]  (true,exec) 111 [100.0%]  (fallthru,exec)
Successors:  113 [100.0%]  (fallthru,exec)

Basic block 113 (new, reachable)
Predecessors:  107 [50.0%]  (false,exec) 112 [100.0%]  (fallthru,exec)
Successors:  114 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  116 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [72.0%]  (false,exec)
Successors:  116 [100.0%]  (fallthru,exec)

Basic block 116 (new, reachable)
Predecessors:  114 [28.0%]  (true,exec) 115 [100.0%]  (fallthru,exec)
Successors:  117 [100.0%]  (fallthru,exec)

Basic block 117 (new, reachable)
Predecessors:  113 [71.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
Successors:  119 [69.8%]  (true,exec) 118 [30.2%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [30.2%]  (false,exec)
Successors:  119 [85.0%]  (true,exec) 134 [15.0%]  (false,exec)

Basic block 119 (new, reachable)
Predecessors:  117 [69.8%]  (true,exec) 118 [85.0%]  (true,exec)
Successors:  120 [29.0%]  (true,exec) 121 [71.0%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [29.0%]  (true,exec)
Successors:  121 [100.0%]  (fallthru,exec)

Basic block 121 (new, reachable)
Predecessors:  119 [71.0%]  (false,exec) 120 [100.0%]  (fallthru,exec)
Successors:  122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [50.0%]  (true,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 123 (new, reachable)
Predecessors:  121 [50.0%]  (false,exec)
Successors:  124 [29.0%]  (true,exec) 125 [71.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [29.0%]  (true,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 125 (new, reachable)
Predecessors:  123 [71.0%]  (false,exec) 124 [100.0%]  (fallthru,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  122 [100.0%]  (fallthru,exec) 125 [100.0%]  (fallthru,exec)
Successors:  127 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

Basic block 127 (new, reachable)
Predecessors:  126 [50.0%]  (true,exec)
Successors:  128 [86.9%]  (true,exec) 131 [13.1%]  (false,exec)

Basic block 128 (new, reachable)
Predecessors:  127 [86.9%]  (true,exec)
Successors:  129 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [50.0%]  (true,exec)
Successors:  130 [13.7%]  (true,exec) 131 [86.3%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  129 [13.7%]  (true,exec)
Successors:  134 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  127 [13.1%]  (false,exec) 128 [50.0%]  (false,exec) 129 [86.3%]  (false,exec)
Successors:  133 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [72.0%]  (false,exec)
Successors:  133 [100.0%]  (fallthru,exec)

Basic block 133 (new, reachable)
Predecessors:  131 [28.0%]  (true,exec) 132 [100.0%]  (fallthru,exec)
Successors:  134 [100.0%]  (fallthru,exec)

Basic block 134 (new, reachable)
Predecessors:  118 [15.0%]  (false,exec) 126 [50.0%]  (false,exec) 130 [100.0%]  (fallthru,exec) 133 [100.0%]  (fallthru,exec)
Successors:  137 [15.0%]  (true,exec) 135 [85.0%]  (false,exec)

Basic block 135 (new, reachable)
Predecessors:  134 [85.0%]  (false,exec)
Successors:  137 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [50.0%]  (false,exec)
Successors:  137 [100.0%]  (fallthru,exec)

Basic block 137 (new, reachable)
Predecessors:  134 [15.0%]  (true,exec) 135 [50.0%]  (true,exec) 136 [100.0%]  (fallthru,exec)
Successors:  138 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

Basic block 138 (new, reachable)
Predecessors:  137 [29.0%]  (true,exec)
Successors:  139 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [29.0%]  (true,exec)
Successors:  140 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

Basic block 140 (new, reachable)
Predecessors:  139 [29.0%]  (true,exec)
Successors:  142 [50.0%]  (true,exec) 141 [50.0%]  (false,exec)

Basic block 141 (new, reachable)
Predecessors:  140 [50.0%]  (false,exec)
Successors:  142 [100.0%]  (fallthru,exec)

Basic block 142 (new, reachable)
Predecessors:  140 [50.0%]  (true,exec) 141 [100.0%]  (fallthru,exec)
Successors:  143 [50.0%]  (true,exec) 146 [50.0%]  (false,exec)

Basic block 143 (new, reachable)
Predecessors:  142 [50.0%]  (true,exec)
Successors:  145 [28.0%]  (true,exec) 144 [72.0%]  (false,exec)

Basic block 144 (new, reachable)
Predecessors:  143 [72.0%]  (false,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  143 [28.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
Successors:  146 [100.0%]  (fallthru,exec)

Basic block 146 (new, reachable)
Predecessors:  142 [50.0%]  (false,exec) 145 [100.0%]  (fallthru,exec)
Successors:  147 [73.0%]  (true,exec) 149 [27.0%]  (false,exec)

Basic block 147 (new, reachable)
Predecessors:  146 [73.0%]  (true,exec)
Successors:  148 [85.0%]  (true,exec) 149 [15.0%]  (false,exec)

Basic block 148 (new, reachable)
Predecessors:  147 [85.0%]  (true,exec)
Successors:  149 [100.0%]  (fallthru,exec)

Basic block 149 (new, reachable)
Predecessors:  146 [27.0%]  (false,exec) 147 [15.0%]  (false,exec) 148 [100.0%]  (fallthru,exec)
Successors:  150 [27.0%]  (true,exec) 152 [73.0%]  (false,exec)

Basic block 150 (new, reachable)
Predecessors:  149 [27.0%]  (true,exec)
Successors:  151 [69.8%]  (true,exec) 152 [30.2%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [69.8%]  (true,exec)
Successors:  152 [100.0%]  (fallthru,exec)

Basic block 152 (new, reachable)
Predecessors:  137 [71.0%]  (false,exec) 138 [71.0%]  (false,exec) 139 [71.0%]  (false,exec) 149 [73.0%]  (false,exec) 150 [30.2%]  (false,exec) 151 [100.0%]  (fallthru,exec)
Successors:  154 [69.8%]  (true,exec) 153 [30.2%]  (false,exec)

Basic block 153 (new, reachable)
Predecessors:  152 [30.2%]  (false,exec)
Successors:  154 [85.0%]  (true,exec) 171 [15.0%]  (false,exec)

Basic block 154 (new, reachable)
Predecessors:  152 [69.8%]  (true,exec) 153 [85.0%]  (true,exec)
Successors:  155 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

Basic block 155 (new, reachable)
Predecessors:  154 [69.8%]  (true,exec)
Successors:  156 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

Basic block 156 (new, reachable)
Predecessors:  155 [69.8%]  (true,exec)
Successors:  157 [100.0%]  (fallthru,exec)

Basic block 157 (new, reachable)
Predecessors:  154 [30.2%]  (false,exec) 155 [30.2%]  (false,exec) 156 [100.0%]  (fallthru,exec)
Successors:  158 [50.0%]  (true,exec) 159 [50.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [50.0%]  (true,exec)
Successors:  159 [100.0%]  (fallthru,exec)

Basic block 159 (new, reachable)
Predecessors:  157 [50.0%]  (false,exec) 158 [100.0%]  (fallthru,exec)
Successors:  160 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

Basic block 160 (new, reachable)
Predecessors:  159 [29.0%]  (true,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 161 (new, reachable)
Predecessors:  159 [71.0%]  (false,exec)
Successors:  162 [27.0%]  (true,exec) 163 [73.0%]  (false,exec)

Basic block 162 (new, reachable)
Predecessors:  161 [27.0%]  (true,exec)
Successors:  163 [100.0%]  (fallthru,exec)

Basic block 163 (new, reachable)
Predecessors:  161 [73.0%]  (false,exec) 162 [100.0%]  (fallthru,exec)
Successors:  164 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

Basic block 164 (new, reachable)
Predecessors:  163 [50.0%]  (true,exec)
Successors:  165 [100.0%]  (fallthru,exec)

Basic block 165 (new, reachable)
Predecessors:  163 [50.0%]  (false,exec) 164 [100.0%]  (fallthru,exec)
Successors:  166 [50.0%]  (true,exec) 167 [50.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  165 [50.0%]  (true,exec)
Successors:  167 [100.0%]  (fallthru,exec)

Basic block 167 (new, reachable)
Predecessors:  165 [50.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
Successors:  168 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 168 (new, reachable)
Predecessors:  167 [50.0%]  (true,exec)
Successors:  169 [29.0%]  (true,exec) 171 [71.0%]  (false,exec)

Basic block 169 (new, reachable)
Predecessors:  168 [29.0%]  (true,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 170 (new, reachable)
Predecessors:  167 [50.0%]  (false,exec)
Successors:  171 [100.0%]  (fallthru,exec)

Basic block 171 (new, reachable)
Predecessors:  153 [15.0%]  (false,exec) 160 [100.0%]  (fallthru,exec) 169 [100.0%]  (fallthru,exec) 170 [100.0%]  (fallthru,exec) 168 [71.0%]  (false,exec)
Successors:  172 [69.8%]  (true,exec) 174 [30.2%]  (false,exec)

Basic block 172 (new, reachable)
Predecessors:  171 [69.8%]  (true,exec)
Successors:  173 [73.0%]  (true,exec) 174 [27.0%]  (false,exec)

Basic block 173 (new, reachable)
Predecessors:  172 [73.0%]  (true,exec)
Successors:  174 [100.0%]  (fallthru,exec)

Basic block 174 (new, reachable)
Predecessors:  171 [30.2%]  (false,exec) 172 [27.0%]  (false,exec) 173 [100.0%]  (fallthru,exec)
Successors:  175 [69.8%]  (true,exec) 177 [30.2%]  (false,exec)

Basic block 175 (new, reachable)
Predecessors:  174 [69.8%]  (true,exec)
Successors:  176 [73.0%]  (true,exec) 177 [27.0%]  (false,exec)

Basic block 176 (new, reachable)
Predecessors:  175 [73.0%]  (true,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 177 (new, reachable)
Predecessors:  174 [30.2%]  (false,exec) 175 [27.0%]  (false,exec) 176 [100.0%]  (fallthru,exec)
Successors:  178 [29.0%]  (true,exec) 180 [71.0%]  (false,exec)

Basic block 178 (new, reachable)
Predecessors:  177 [29.0%]  (true,exec)
Successors:  179 [50.0%]  (true,exec) 180 [50.0%]  (false,exec)

Basic block 179 (new, reachable)
Predecessors:  178 [50.0%]  (true,exec)
Successors:  180 [100.0%]  (fallthru,exec)

Basic block 180 (new, reachable)
Predecessors:  177 [71.0%]  (false,exec) 178 [50.0%]  (false,exec) 179 [100.0%]  (fallthru,exec)
Successors:  181 [50.0%]  (true,exec) 182 [50.0%]  (false,exec)

Basic block 181 (new, reachable)
Predecessors:  180 [50.0%]  (true,exec)
Successors:  182 [100.0%]  (fallthru,exec)

Basic block 182 (new, reachable)
Predecessors:  180 [50.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
Successors:  183 [29.0%]  (true,exec) 184 [71.0%]  (false,exec)

Basic block 183 (new, reachable)
Predecessors:  182 [29.0%]  (true,exec)
Successors:  184 [100.0%]  (fallthru,exec)

Basic block 184 (new, reachable)
Predecessors:  182 [71.0%]  (false,exec) 183 [100.0%]  (fallthru,exec)
Successors:  185 [29.0%]  (true,exec) 186 [71.0%]  (false,exec)

Basic block 185 (new, reachable)
Predecessors:  184 [29.0%]  (true,exec)
Successors:  186 [100.0%]  (fallthru,exec)

Basic block 186 (new, reachable)
Predecessors:  184 [71.0%]  (false,exec) 185 [100.0%]  (fallthru,exec)
Successors:  191 [71.0%]  (true,exec) 187 [29.0%]  (false,exec)

Basic block 187 (new, reachable)
Predecessors:  186 [29.0%]  (false,exec)
Successors:  188 [85.0%]  (true,exec) 189 [15.0%]  (false,exec)

Basic block 188 (new, reachable)
Predecessors:  187 [85.0%]  (true,exec)
Successors:  191 [50.0%]  (true,exec) 189 [50.0%]  (false,exec)

Basic block 189 (new, reachable)
Predecessors:  187 [15.0%]  (false,exec) 188 [50.0%]  (false,exec)
Successors:  190 [69.8%]  (true,exec) 192 [30.2%]  (false,exec)

Basic block 190 (new, reachable)
Predecessors:  189 [69.8%]  (true,exec)
Successors:  191 [50.0%]  (true,exec) 192 [50.0%]  (false,exec)

Basic block 191 (new, reachable)
Predecessors:  186 [71.0%]  (true,exec) 188 [50.0%]  (true,exec) 190 [50.0%]  (true,exec)
Successors:  192 [100.0%]  (fallthru,exec)

Basic block 192 (new, reachable)
Predecessors:  189 [30.2%]  (false,exec) 190 [50.0%]  (false,exec) 191 [100.0%]  (fallthru,exec)
Successors:  193 [69.8%]  (true,exec) 196 [30.2%]  (false,exec)

Basic block 193 (new, reachable)
Predecessors:  192 [69.8%]  (true,exec)
Successors:  194 [27.0%]  (true,exec) 195 [73.0%]  (false,exec)

Basic block 194 (new, reachable)
Predecessors:  193 [27.0%]  (true,exec)
Successors:  195 [100.0%]  (fallthru,exec)

Basic block 195 (new, reachable)
Predecessors:  193 [73.0%]  (false,exec) 194 [100.0%]  (fallthru,exec)
Successors:  196 [100.0%]  (fallthru,exec)

Basic block 196 (new, reachable)
Predecessors:  192 [30.2%]  (false,exec) 195 [100.0%]  (fallthru,exec)
Successors:  197 [29.0%]  (true,exec) 198 [71.0%]  (false,exec)

Basic block 197 (new, reachable)
Predecessors:  196 [29.0%]  (true,exec)
Successors:  198 [100.0%]  (fallthru,exec)

Basic block 198 (new, reachable)
Predecessors:  196 [71.0%]  (false,exec) 197 [100.0%]  (fallthru,exec)
Successors:  199 [29.0%]  (true,exec) 201 [71.0%]  (false,exec)

Basic block 199 (new, reachable)
Predecessors:  198 [29.0%]  (true,exec)
Successors:  200 [29.0%]  (true,exec) 201 [71.0%]  (false,exec)

Basic block 200 (new, reachable)
Predecessors:  199 [29.0%]  (true,exec)
Successors:  201 [100.0%]  (fallthru,exec)

Basic block 201 (new, reachable)
Predecessors:  198 [71.0%]  (false,exec) 199 [71.0%]  (false,exec) 200 [100.0%]  (fallthru,exec)
Successors:  202 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

Basic block 202 (new, reachable)
Predecessors:  201 [29.0%]  (true,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 203 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec) 49 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 201 [71.0%]  (false,exec) 202 [100.0%]  (fallthru,exec) 68 [71.0%]  (false,exec)
Successors:  204 [13.7%]  (true,exec) 205 [86.3%]  (false,exec)

Basic block 204 (new, reachable)
Predecessors:  203 [13.7%]  (true,exec)
Successors:  205 [100.0%]  (fallthru,exec)

Basic block 205 (new, reachable)
Predecessors:  203 [86.3%]  (false,exec) 204 [100.0%]  (fallthru,exec)
Successors:  206 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

Basic block 206 (new, reachable)
Predecessors:  205 [50.0%]  (true,exec)
Successors:  207 [85.0%]  (true,exec) 309 [15.0%]  (false,exec)

Basic block 207 (new, reachable)
Predecessors:  206 [85.0%]  (true,exec)
Successors:  208 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

Basic block 208 (new, reachable)
Predecessors:  207 [50.0%]  (true,exec)
Successors:  209 [85.0%]  (true,exec) 215 [15.0%]  (false,exec)

Basic block 209 (new, reachable)
Predecessors:  208 [85.0%]  (true,exec)
Successors:  210 [29.0%]  (true,exec) 215 [71.0%]  (false,exec)

Basic block 210 (new, reachable)
Predecessors:  209 [29.0%]  (true,exec)
Successors:  211 [71.0%]  (true,exec) 214 [29.0%]  (false,exec)

Basic block 211 (new, reachable)
Predecessors:  210 [71.0%]  (true,exec)
Successors:  212 [50.0%]  (true,exec) 214 [50.0%]  (false,exec)

Basic block 212 (new, reachable)
Predecessors:  211 [50.0%]  (true,exec)
Successors:  213 [13.7%]  (true,exec) 214 [86.3%]  (false,exec)

Basic block 213 (new, reachable)
Predecessors:  212 [13.7%]  (true,exec)
Successors:  309 [100.0%]  (fallthru,exec)

Basic block 214 (new, reachable)
Predecessors:  210 [29.0%]  (false,exec) 211 [50.0%]  (false,exec) 212 [86.3%]  (false,exec)
Successors:  215 [100.0%]  (fallthru,exec)

Basic block 215 (new, reachable)
Predecessors:  208 [15.0%]  (false,exec) 209 [71.0%]  (false,exec) 214 [100.0%]  (fallthru,exec)
Successors:  216 [29.0%]  (true,exec) 218 [71.0%]  (false,exec)

Basic block 216 (new, reachable)
Predecessors:  215 [29.0%]  (true,exec)
Successors:  217 [29.0%]  (true,exec) 218 [71.0%]  (false,exec)

Basic block 217 (new, reachable)
Predecessors:  216 [29.0%]  (true,exec)
Successors:  218 [100.0%]  (fallthru,exec)

Basic block 218 (new, reachable)
Predecessors:  215 [71.0%]  (false,exec) 216 [71.0%]  (false,exec) 217 [100.0%]  (fallthru,exec)
Successors:  219 [85.0%]  (true,exec) 230 [15.0%]  (false,exec)

Basic block 219 (new, reachable)
Predecessors:  218 [85.0%]  (true,exec)
Successors:  220 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

Basic block 220 (new, reachable)
Predecessors:  219 [50.0%]  (true,exec)
Successors:  221 [29.0%]  (true,exec) 223 [71.0%]  (false,exec)

Basic block 221 (new, reachable)
Predecessors:  220 [29.0%]  (true,exec)
Successors:  222 [69.8%]  (true,exec) 223 [30.2%]  (false,exec)

Basic block 222 (new, reachable)
Predecessors:  221 [69.8%]  (true,exec)
Successors:  223 [100.0%]  (fallthru,exec)

Basic block 223 (new, reachable)
Predecessors:  220 [71.0%]  (false,exec) 221 [30.2%]  (false,exec) 222 [100.0%]  (fallthru,exec)
Successors:  224 [50.0%]  (true,exec) 225 [50.0%]  (false,exec)

Basic block 224 (new, reachable)
Predecessors:  223 [50.0%]  (true,exec)
Successors:  309 [100.0%]  (fallthru,exec)

Basic block 225 (new, reachable)
Predecessors:  223 [50.0%]  (false,exec)
Successors:  226 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

Basic block 226 (new, reachable)
Predecessors:  225 [29.0%]  (true,exec)
Successors:  227 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

Basic block 227 (new, reachable)
Predecessors:  226 [29.0%]  (true,exec)
Successors:  229 [15.0%]  (true,exec) 228 [85.0%]  (false,exec)

Basic block 228 (new, reachable)
Predecessors:  227 [85.0%]  (false,exec)
Successors:  229 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

Basic block 229 (new, reachable)
Predecessors:  227 [15.0%]  (true,exec) 228 [50.0%]  (true,exec)
Successors:  309 [100.0%]  (fallthru,exec)

Basic block 230 (new, reachable)
Predecessors:  218 [15.0%]  (false,exec) 219 [50.0%]  (false,exec)
Successors:  231 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

Basic block 231 (new, reachable)
Predecessors:  230 [50.0%]  (true,exec)
Successors:  232 [29.0%]  (true,exec) 236 [71.0%]  (false,exec)

Basic block 232 (new, reachable)
Predecessors:  231 [29.0%]  (true,exec)
Successors:  233 [29.0%]  (true,exec) 236 [71.0%]  (false,exec)

Basic block 233 (new, reachable)
Predecessors:  232 [29.0%]  (true,exec)
Successors:  235 [30.2%]  (true,exec) 234 [69.8%]  (false,exec)

Basic block 234 (new, reachable)
Predecessors:  233 [69.8%]  (false,exec)
Successors:  235 [50.0%]  (true,exec) 236 [50.0%]  (false,exec)

Basic block 235 (new, reachable)
Predecessors:  233 [30.2%]  (true,exec) 234 [50.0%]  (true,exec)
Successors:  236 [100.0%]  (fallthru,exec)

Basic block 236 (new, reachable)
Predecessors:  231 [71.0%]  (false,exec) 232 [71.0%]  (false,exec) 234 [50.0%]  (false,exec) 235 [100.0%]  (fallthru,exec)
Successors:  237 [29.0%]  (true,exec) 239 [71.0%]  (false,exec)

Basic block 237 (new, reachable)
Predecessors:  236 [29.0%]  (true,exec)
Successors:  239 [100.0%]  (fallthru,exec)

Basic block 238 (new, reachable)
Predecessors:  230 [50.0%]  (false,exec)
Successors:  239 [100.0%]  (fallthru,exec)

Basic block 239 (new, reachable)
Predecessors:  237 [100.0%]  (fallthru,exec) 238 [100.0%]  (fallthru,exec) 236 [71.0%]  (false,exec)
Successors:  309 [85.0%]  (true,exec) 240 [15.0%]  (false,exec)

Basic block 240 (new, reachable)
Predecessors:  239 [15.0%]  (false,exec)
Successors:  241 [29.0%]  (true,exec) 242 [71.0%]  (false,exec)

Basic block 241 (new, reachable)
Predecessors:  240 [29.0%]  (true,exec)
Successors:  242 [100.0%]  (fallthru,exec)

Basic block 242 (new, reachable)
Predecessors:  240 [71.0%]  (false,exec) 241 [100.0%]  (fallthru,exec)
Successors:  243 [29.0%]  (true,exec) 248 [71.0%]  (false,exec)

Basic block 243 (new, reachable)
Predecessors:  242 [29.0%]  (true,exec)
Successors:  244 [29.0%]  (true,exec) 248 [71.0%]  (false,exec)

Basic block 244 (new, reachable)
Predecessors:  243 [29.0%]  (true,exec)
Successors:  246 [15.0%]  (true,exec) 245 [85.0%]  (false,exec)

Basic block 245 (new, reachable)
Predecessors:  244 [85.0%]  (false,exec)
Successors:  246 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

Basic block 246 (new, reachable)
Predecessors:  244 [15.0%]  (true,exec) 245 [50.0%]  (true,exec)
Successors:  247 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

Basic block 247 (new, reachable)
Predecessors:  246 [50.0%]  (true,exec)
Successors:  248 [100.0%]  (fallthru,exec)

Basic block 248 (new, reachable)
Predecessors:  242 [71.0%]  (false,exec) 243 [71.0%]  (false,exec) 245 [50.0%]  (false,exec) 246 [50.0%]  (false,exec) 247 [100.0%]  (fallthru,exec)
Successors:  249 [50.0%]  (true,exec) 250 [50.0%]  (false,exec)

Basic block 249 (new, reachable)
Predecessors:  248 [50.0%]  (true,exec)
Successors:  250 [100.0%]  (fallthru,exec)

Basic block 250 (new, reachable)
Predecessors:  248 [50.0%]  (false,exec) 249 [100.0%]  (fallthru,exec)
Successors:  252 [50.0%]  (true,exec) 251 [50.0%]  (false,exec)

Basic block 251 (new, reachable)
Predecessors:  250 [50.0%]  (false,exec)
Successors:  252 [100.0%]  (fallthru,exec)

Basic block 252 (new, reachable)
Predecessors:  250 [50.0%]  (true,exec) 251 [100.0%]  (fallthru,exec)
Successors:  253 [50.0%]  (true,exec) 254 [50.0%]  (false,exec)

Basic block 253 (new, reachable)
Predecessors:  252 [50.0%]  (true,exec)
Successors:  254 [100.0%]  (fallthru,exec)

Basic block 254 (new, reachable)
Predecessors:  253 [100.0%]  (fallthru,exec) 252 [50.0%]  (false,exec)
Successors:  255 [50.0%]  (true,exec) 303 [50.0%]  (false,exec)

Basic block 255 (new, reachable)
Predecessors:  254 [50.0%]  (true,exec)
Successors:  256 [29.0%]  (true,exec) 257 [71.0%]  (false,exec)

Basic block 256 (new, reachable)
Predecessors:  255 [29.0%]  (true,exec)
Successors:  257 [100.0%]  (fallthru,exec)

Basic block 257 (new, reachable)
Predecessors:  255 [71.0%]  (false,exec) 256 [100.0%]  (fallthru,exec)
Successors:  258 [29.0%]  (true,exec) 259 [71.0%]  (false,exec)

Basic block 258 (new, reachable)
Predecessors:  257 [29.0%]  (true,exec)
Successors:  259 [100.0%]  (fallthru,exec)

Basic block 259 (new, reachable)
Predecessors:  257 [71.0%]  (false,exec) 258 [100.0%]  (fallthru,exec)
Successors:  260 [85.0%]  (true,exec) 261 [15.0%]  (false,exec)

Basic block 260 (new, reachable)
Predecessors:  259 [85.0%]  (true,exec)
Successors:  262 [100.0%]  (fallthru,exec)

Basic block 261 (new, reachable)
Predecessors:  259 [15.0%]  (false,exec)
Successors:  262 [100.0%]  (fallthru,exec)

Basic block 262 (new, reachable)
Predecessors:  260 [100.0%]  (fallthru,exec) 261 [100.0%]  (fallthru,exec)
Successors:  263 [29.0%]  (true,exec) 264 [71.0%]  (false,exec)

Basic block 263 (new, reachable)
Predecessors:  262 [29.0%]  (true,exec)
Successors:  264 [100.0%]  (fallthru,exec)

Basic block 264 (new, reachable)
Predecessors:  262 [71.0%]  (false,exec) 263 [100.0%]  (fallthru,exec)
Successors:  265 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

Basic block 265 (new, reachable)
Predecessors:  264 [29.0%]  (true,exec)
Successors:  267 [28.0%]  (true,exec) 266 [72.0%]  (false,exec)

Basic block 266 (new, reachable)
Predecessors:  265 [72.0%]  (false,exec)
Successors:  267 [100.0%]  (fallthru,exec)

Basic block 267 (new, reachable)
Predecessors:  265 [28.0%]  (true,exec) 266 [100.0%]  (fallthru,exec)
Successors:  268 [100.0%]  (fallthru,exec)

Basic block 268 (new, reachable)
Predecessors:  264 [71.0%]  (false,exec) 267 [100.0%]  (fallthru,exec)
Successors:  270 [69.8%]  (true,exec) 269 [30.2%]  (false,exec)

Basic block 269 (new, reachable)
Predecessors:  268 [30.2%]  (false,exec)
Successors:  270 [85.0%]  (true,exec) 285 [15.0%]  (false,exec)

Basic block 270 (new, reachable)
Predecessors:  268 [69.8%]  (true,exec) 269 [85.0%]  (true,exec)
Successors:  271 [69.8%]  (true,exec) 272 [30.2%]  (false,exec)

Basic block 271 (new, reachable)
Predecessors:  270 [69.8%]  (true,exec)
Successors:  272 [100.0%]  (fallthru,exec)

Basic block 272 (new, reachable)
Predecessors:  270 [30.2%]  (false,exec) 271 [100.0%]  (fallthru,exec)
Successors:  273 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

Basic block 273 (new, reachable)
Predecessors:  272 [50.0%]  (true,exec)
Successors:  277 [100.0%]  (fallthru,exec)

Basic block 274 (new, reachable)
Predecessors:  272 [50.0%]  (false,exec)
Successors:  275 [29.0%]  (true,exec) 276 [71.0%]  (false,exec)

Basic block 275 (new, reachable)
Predecessors:  274 [29.0%]  (true,exec)
Successors:  276 [100.0%]  (fallthru,exec)

Basic block 276 (new, reachable)
Predecessors:  274 [71.0%]  (false,exec) 275 [100.0%]  (fallthru,exec)
Successors:  277 [100.0%]  (fallthru,exec)

Basic block 277 (new, reachable)
Predecessors:  273 [100.0%]  (fallthru,exec) 276 [100.0%]  (fallthru,exec)
Successors:  278 [50.0%]  (true,exec) 285 [50.0%]  (false,exec)

Basic block 278 (new, reachable)
Predecessors:  277 [50.0%]  (true,exec)
Successors:  279 [86.9%]  (true,exec) 282 [13.1%]  (false,exec)

Basic block 279 (new, reachable)
Predecessors:  278 [86.9%]  (true,exec)
Successors:  280 [50.0%]  (true,exec) 282 [50.0%]  (false,exec)

Basic block 280 (new, reachable)
Predecessors:  279 [50.0%]  (true,exec)
Successors:  281 [13.7%]  (true,exec) 282 [86.3%]  (false,exec)

Basic block 281 (new, reachable)
Predecessors:  280 [13.7%]  (true,exec)
Successors:  285 [100.0%]  (fallthru,exec)

Basic block 282 (new, reachable)
Predecessors:  278 [13.1%]  (false,exec) 279 [50.0%]  (false,exec) 280 [86.3%]  (false,exec)
Successors:  284 [28.0%]  (true,exec) 283 [72.0%]  (false,exec)

Basic block 283 (new, reachable)
Predecessors:  282 [72.0%]  (false,exec)
Successors:  284 [100.0%]  (fallthru,exec)

Basic block 284 (new, reachable)
Predecessors:  282 [28.0%]  (true,exec) 283 [100.0%]  (fallthru,exec)
Successors:  285 [100.0%]  (fallthru,exec)

Basic block 285 (new, reachable)
Predecessors:  269 [15.0%]  (false,exec) 277 [50.0%]  (false,exec) 281 [100.0%]  (fallthru,exec) 284 [100.0%]  (fallthru,exec)
Successors:  288 [15.0%]  (true,exec) 286 [85.0%]  (false,exec)

Basic block 286 (new, reachable)
Predecessors:  285 [85.0%]  (false,exec)
Successors:  288 [50.0%]  (true,exec) 287 [50.0%]  (false,exec)

Basic block 287 (new, reachable)
Predecessors:  286 [50.0%]  (false,exec)
Successors:  288 [100.0%]  (fallthru,exec)

Basic block 288 (new, reachable)
Predecessors:  285 [15.0%]  (true,exec) 286 [50.0%]  (true,exec) 287 [100.0%]  (fallthru,exec)
Successors:  289 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

Basic block 289 (new, reachable)
Predecessors:  288 [29.0%]  (true,exec)
Successors:  290 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

Basic block 290 (new, reachable)
Predecessors:  289 [29.0%]  (true,exec)
Successors:  291 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

Basic block 291 (new, reachable)
Predecessors:  290 [29.0%]  (true,exec)
Successors:  293 [50.0%]  (true,exec) 292 [50.0%]  (false,exec)

Basic block 292 (new, reachable)
Predecessors:  291 [50.0%]  (false,exec)
Successors:  293 [100.0%]  (fallthru,exec)

Basic block 293 (new, reachable)
Predecessors:  291 [50.0%]  (true,exec) 292 [100.0%]  (fallthru,exec)
Successors:  294 [73.0%]  (true,exec) 296 [27.0%]  (false,exec)

Basic block 294 (new, reachable)
Predecessors:  293 [73.0%]  (true,exec)
Successors:  295 [85.0%]  (true,exec) 296 [15.0%]  (false,exec)

Basic block 295 (new, reachable)
Predecessors:  294 [85.0%]  (true,exec)
Successors:  296 [100.0%]  (fallthru,exec)

Basic block 296 (new, reachable)
Predecessors:  293 [27.0%]  (false,exec) 294 [15.0%]  (false,exec) 295 [100.0%]  (fallthru,exec)
Successors:  297 [27.0%]  (true,exec) 299 [73.0%]  (false,exec)

Basic block 297 (new, reachable)
Predecessors:  296 [27.0%]  (true,exec)
Successors:  298 [69.8%]  (true,exec) 299 [30.2%]  (false,exec)

Basic block 298 (new, reachable)
Predecessors:  297 [69.8%]  (true,exec)
Successors:  299 [100.0%]  (fallthru,exec)

Basic block 299 (new, reachable)
Predecessors:  288 [71.0%]  (false,exec) 289 [71.0%]  (false,exec) 290 [71.0%]  (false,exec) 296 [73.0%]  (false,exec) 297 [30.2%]  (false,exec) 298 [100.0%]  (fallthru,exec)
Successors:  300 [69.8%]  (true,exec) 301 [30.2%]  (false,exec)

Basic block 300 (new, reachable)
Predecessors:  299 [69.8%]  (true,exec)
Successors:  301 [100.0%]  (fallthru,exec)

Basic block 301 (new, reachable)
Predecessors:  299 [30.2%]  (false,exec) 300 [100.0%]  (fallthru,exec)
Successors:  302 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

Basic block 302 (new, reachable)
Predecessors:  301 [29.0%]  (true,exec)
Successors:  309 [100.0%]  (fallthru,exec)

Basic block 303 (new, reachable)
Predecessors:  254 [50.0%]  (false,exec)
Successors:  304 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

Basic block 304 (new, reachable)
Predecessors:  303 [85.0%]  (true,exec)
Successors:  305 [100.0%]  (fallthru,exec)

Basic block 305 (new, reachable)
Predecessors:  304 [100.0%]  (fallthru,exec) 303 [15.0%]  (false,exec)
Successors:  311 [100.0%]  (fallthru,exec)

Basic block 306 (new, reachable)
Predecessors:  84 [71.0%]  (false,exec)
Successors:  307 [85.0%]  (true,exec) 308 [15.0%]  (false,exec)

Basic block 307 (new, reachable)
Predecessors:  306 [85.0%]  (true,exec)
Successors:  308 [100.0%]  (fallthru,exec)

Basic block 308 (new, reachable)
Predecessors:  307 [100.0%]  (fallthru,exec) 306 [15.0%]  (false,exec)
Successors:  311 [100.0%]  (fallthru,exec)

Basic block 309 (new, reachable)
Predecessors:  213 [100.0%]  (fallthru,exec) 225 [71.0%]  (false,exec) 239 [85.0%]  (true,exec) 206 [15.0%]  (false,exec) 224 [100.0%]  (fallthru,exec) 229 [100.0%]  (fallthru,exec) 228 [50.0%]  (false,exec) 226 [71.0%]  (false,exec) 205 [50.0%]  (false,exec) 301 [71.0%]  (false,exec) 302 [100.0%]  (fallthru,exec) 207 [50.0%]  (false,exec)
Successors:  310 [29.0%]  (true,exec) 311 [71.0%]  (false,exec)

Basic block 310 (new, reachable)
Predecessors:  309 [29.0%]  (true,exec)
Successors:  311 [100.0%]  (fallthru,exec)

Basic block 311 (new, reachable)
Predecessors:  11 [71.0%]  (true,exec) 15 [50.0%]  (false,exec) 16 [71.0%]  (true,exec) 305 [100.0%]  (fallthru,exec) 308 [100.0%]  (fallthru,exec) 310 [100.0%]  (fallthru,exec) 309 [71.0%]  (false,exec) 14 [71.0%]  (false,exec)
Successors:  312 [100.0%]  (fallthru,exec)

Basic block 312 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 311 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_activate_rtp (struct switch_core_session_t * session)
{
  const char D.48124;
  int D.48123;
  int D.48117;
  int D.48114;
  int D.48102;
  const char D.48093;
  int D.48092;
  int D.48086;
  int D.48083;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  int delayi;
  int v;
  int v;
  int maxqlen;
  int qlen;
  char * q;
  char * p;
  int max_drift;
  int maxlen;
  int jb_msec;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  uint8_t inb;
  uint8_t vad_out;
  uint8_t vad_in;
  register int __result;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[31] = "switch_core_media_activate_rtp";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_activate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  const char * var;
  char * timer_name;
  char tmp[50];
  switch_status_t status;
  switch_rtp_flag_t flags[39];
  const char * val;
  const char * err;
  _Bool D.43791;
  _Bool D.43790;
  const char * iftmp.68;
  const char * iftmp.67;
  uint32_t D.43777;
  uint32_t D.43776;
  unsigned int D.43775;
  switch_rtp_bug_flag_t D.43774;
  switch_rtp_bug_flag_t D.43773;
  switch_rtp_bug_flag_t * D.43772;
  unsigned int D.43765;
  struct dtls_fingerprint_t * D.43764;
  struct dtls_fingerprint_t * D.43763;
  char * D.43760;
  switch_call_direction_t D.43754;
  int D.43750;
  int D.43747;
  char[192] * D.43743;
  switch_call_direction_t D.43739;
  switch_core_media_ice_type_t iftmp.65;
  switch_port_t D.43736;
  switch_port_t D.43735;
  char * D.43733;
  char * D.43732;
  int D.39417;
  uint8_t D.43726;
  int D.43725;
  int D.43724;
  unsigned int D.43721;
  unsigned int interval.64;
  switch_bool_t D.43718;
  int8_t D.43717;
  int D.43716;
  int D.43713;
  struct ice_t * D.43706;
  switch_call_direction_t D.43702;
  switch_core_media_ice_type_t iftmp.63;
  char * D.43700;
  char * D.43699;
  char * D.43698;
  char * D.43697;
  uint8_t D.43694;
  int D.43693;
  uint32_t D.43690;
  uint32_t D.43689;
  struct payload_map_t * * D.43685;
  uint8_t D.43682;
  uint8_t D.43679;
  uint8_t D.43676;
  uint8_t D.43672;
  const char * iftmp.62;
  char * D.43670;
  uint32_t D.43666;
  char * iftmp.61;
  struct switch_rtp_t * D.43664;
  struct switch_memory_pool_t * D.43663;
  switch_rtp_flag_t D.43662;
  switch_rtp_flag_t D.43661;
  uint32_t D.43658;
  uint32_t D.43655;
  int D.43654;
  uint32_t D.43650;
  int32_t D.43647;
  uint8_t D.43636;
  int D.43635;
  int D.43634;
  char * D.43633;
  int D.43632;
  uint32_t D.43628;
  int32_t D.43625;
  uint32_t D.43620;
  int D.43619;
  uint32_t D.43615;
  int32_t D.43612;
  switch_status_t D.43606;
  uint32_t D.43598;
  int D.43595;
  switch_payload_t D.43594;
  int D.43593;
  switch_port_t D.43592;
  char * D.43591;
  uint8_t D.43588;
  uint32_t D.43585;
  int D.43584;
  int D.43583;
  char * D.43582;
  char * D.43581;
  char * D.43578;
  int D.39400;
  _Bool D.43576;
  _Bool D.43575;
  _Bool D.43574;
  uint32_t D.43570;
  switch_port_t D.43565;
  char * D.43562;
  struct payload_map_t * D.43561;
  uint32_t D.43558;
  switch_call_direction_t D.43555;
  uint32_t D.43552;
  int D.43551;
  int32_t D.43548;
  char * D.43545;
  uint32_t D.43542;
  unsigned int delayi.60;
  int D.43536;
  int D.43534;
  int32_t D.43531;
  int D.43527;
  switch_payload_t D.43524;
  int D.43523;
  switch_payload_t D.43520;
  uint32_t D.43519;
  uint32_t D.43518;
  uint32_t D.43515;
  uint32_t D.43512;
  uint32_t D.43511;
  uint32_t D.43510;
  uint32_t D.43509;
  uint32_t D.43506;
  uint32_t v.59;
  uint32_t v.58;
  int D.43492;
  const char * D.43491;
  switch_status_t D.43488;
  uint32_t max_drift.57;
  uint32_t D.43486;
  uint32_t maxqlen.56;
  uint32_t qlen.55;
  unsigned int D.43474;
  int D.43473;
  int D.43472;
  const int D.43471;
  const struct switch_codec_implementation_t * D.43470;
  unsigned int D.43467;
  unsigned int jb_msec.54;
  unsigned int D.43453;
  struct dtls_fingerprint_t * D.43452;
  struct dtls_fingerprint_t * D.43451;
  char * D.43448;
  uint32_t D.43439;
  switch_call_direction_t D.43435;
  struct switch_channel_t * D.43434;
  int D.43430;
  struct switch_core_session_t * D.43429;
  int D.43426;
  char[192] * D.43422;
  switch_call_direction_t D.43418;
  switch_core_media_ice_type_t iftmp.51;
  switch_port_t D.43415;
  switch_port_t D.43414;
  char * D.43412;
  char * D.43411;
  int D.39377;
  uint8_t D.43405;
  int D.43404;
  unsigned int D.43401;
  unsigned int interval.50;
  switch_bool_t D.43398;
  int8_t D.43397;
  int D.43396;
  int D.43393;
  _Bool D.43389;
  _Bool D.43388;
  _Bool D.43387;
  struct ice_t * D.43383;
  switch_call_direction_t D.43379;
  switch_core_media_ice_type_t iftmp.49;
  char * D.43377;
  char * D.43376;
  char * D.43375;
  char * D.43374;
  uint8_t D.43371;
  int D.43370;
  char * iftmp.48;
  char * iftmp.47;
  char * D.43361;
  struct switch_channel_t * D.43360;
  struct switch_codec_t * D.43359;
  _Bool D.43358;
  _Bool D.43357;
  _Bool D.43356;
  _Bool D.43354;
  _Bool D.43353;
  _Bool D.43352;
  unsigned int D.43349;
  switch_rtp_bug_flag_t D.43348;
  switch_rtp_bug_flag_t * D.43347;
  unsigned int D.43344;
  switch_rtp_bug_flag_t D.43343;
  unsigned int D.43340;
  switch_rtp_bug_flag_t D.43339;
  uint32_t D.43338;
  int D.43335;
  int D.43330;
  int D.43325;
  int D.43320;
  uint32_t D.43315;
  uint32_t D.43314;
  struct switch_memory_pool_t * D.43310;
  struct switch_mutex_t *[2] * D.43309;
  switch_call_direction_t D.43308;
  uint8_t D.43307;
  switch_core_media_vflag_t D.43306;
  uint8_t D.43303;
  struct payload_map_t * * D.43302;
  uint8_t D.43299;
  struct switch_rtp_t * D.43298;
  struct switch_memory_pool_t * D.43297;
  uint32_t D.43296;
  uint32_t D.43295;
  uint32_t D.43294;
  switch_channel_state_t D.43293;
  int D.43291;
  uint8_t D.43283;
  char * D.43282;
  int D.43281;
  uint32_t D.43277;
  int32_t D.43274;
  switch_rtp_flag_t D.43271;
  switch_rtp_flag_t D.43270;
  uint32_t D.43267;
  _Bool D.43264;
  _Bool D.43263;
  _Bool D.43262;
  uint32_t D.43259;
  int D.43258;
  int32_t D.43254;
  uint32_t D.43207;
  const char * err.45;
  switch_status_t D.43202;
  uint32_t D.43194;
  char * D.43191;
  int D.43190;
  int D.43189;
  int D.43188;
  switch_payload_t D.43187;
  int D.43186;
  switch_port_t D.43185;
  char * D.43184;
  char * D.43183;
  uint32_t D.43180;
  int D.43179;
  int D.43178;
  char * D.43177;
  char * D.43176;
  switch_port_t D.43174;
  char * D.43172;
  struct payload_map_t * D.43171;
  int D.39348;
  _Bool D.43169;
  _Bool D.43168;
  _Bool D.43167;
  uint32_t D.43163;
  int D.43158;
  switch_rtp_flag_t D.43153;
  switch_rtp_flag_t D.43152;
  int D.43149;
  char * D.43148;
  switch_rtp_flag_t D.43147;
  switch_rtp_flag_t D.43146;
  switch_payload_t D.43143;
  int32_t D.43139;
  switch_rtp_flag_t D.43138;
  switch_rtp_flag_t D.43137;
  int D.43136;
  int32_t D.43132;
  switch_rtp_flag_t D.43129;
  switch_rtp_flag_t D.43128;
  int D.43127;
  int32_t D.43124;
  int D.43121;
  int32_t D.43118;
  switch_rtp_flag_t D.43115;
  switch_rtp_flag_t D.43114;
  int D.43113;
  uint32_t D.43109;
  int32_t D.43106;
  switch_rtp_flag_t D.43103;
  switch_rtp_flag_t D.43102;
  uint32_t D.43100;
  struct switch_core_media_params_t * D.43099;
  uint8_t D.43097;
  struct switch_rtp_t * D.43096;
  uint32_t D.43093;
  uint8_t D.43090;
  uint32_t D.43087;
  uint32_t D.43084;
  switch_rtp_crypto_key_type_t D.43081;
  uint8_t D.43078;
  struct switch_rtp_t * D.43077;
  switch_channel_state_t D.43076;
  int D.43074;
  struct switch_channel_t * D.43073;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  err = 0B;
  # DEBUG val => 0B
  flags = {};
  # DEBUG status => 0
  # DEBUG timer_name => 0B
  if (session_45(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4731, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_46 = session_45(D)->media_handle;
  # DEBUG smh => smh_46
  if (smh_46 == 0B)
    goto <bb 312>;
  else
    goto <bb 5>;
  # SUCC: 312 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  a_engine_48 = &smh_46->engines;
  # DEBUG a_engine => a_engine_48
  v_engine_49 = &smh_46->engines[1];
  # DEBUG v_engine => v_engine_49
  D.43073_50 = session_45(D)->channel;
  D.43074_51 = switch_channel_check_signal (D.43073_50, 1);
  if (D.43074_51 != 0)
    goto <bb 312>;
  else
    goto <bb 6>;
  # SUCC: 312 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (false,exec)
  D.43073_52 = session_45(D)->channel;
  D.43076_53 = switch_channel_get_state (D.43073_52);
  if (D.43076_53 > 9)
    goto <bb 312>;
  else
    goto <bb 7>;
  # SUCC: 312 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 7 freq:1190
  # PRED: 6 [39.0%]  (false,exec)
  D.43077_54 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43078_55 = switch_rtp_ready (D.43077_54);
  if (D.43078_55 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [29.0%]  (true,exec) 9 [71.0%]  (false,exec)

  # BLOCK 8 freq:345
  # PRED: 7 [29.0%]  (true,exec)
  D.43077_56 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_reset_media_timer (D.43077_56);
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:1190
  # PRED: 7 [71.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  D.43081_57 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].crypto_type;
  if (D.43081_57 != 9)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [51.2%]  (true,exec) 11 [48.8%]  (false,exec)

  # BLOCK 10 freq:610
  # PRED: 9 [51.2%]  (true,exec)
  D.43073_58 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_58, 92, 1);
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:1190
  # PRED: 9 [48.8%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  D.43073_59 = session_45(D)->channel;
  D.43084_60 = switch_channel_test_flag (D.43073_59, 15);
  if (D.43084_60 != 0)
    goto <bb 311> (end);
  else
    goto <bb 12>;
  # SUCC: 311 [71.0%]  (true,exec) 12 [29.0%]  (false,exec)

  # BLOCK 12 freq:345
  # PRED: 11 [29.0%]  (false,exec)
  D.43073_62 = session_45(D)->channel;
  D.43087_63 = switch_channel_test_flag (D.43073_62, 103);
  if (D.43087_63 == 0)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 13 freq:173
  # PRED: 12 [50.0%]  (true,exec)
  D.43077_64 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43090_65 = switch_rtp_ready (D.43077_64);
  if (D.43090_65 != 0)
    goto <bb 14>;
  else
    goto <bb 16>;
  # SUCC: 14 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 14 freq:50
  # PRED: 13 [29.0%]  (true,exec)
  D.43073_66 = session_45(D)->channel;
  D.43093_67 = switch_channel_test_flag (D.43073_66, 98);
  if (D.43093_67 != 0)
    goto <bb 15>;
  else
    goto <bb 311> (end);
  # SUCC: 15 [29.0%]  (true,exec) 311 [71.0%]  (false,exec)

  # BLOCK 15 freq:15
  # PRED: 14 [29.0%]  (true,exec)
  D.43096_68 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43097_69 = switch_rtp_ready (D.43096_68);
  if (D.43097_69 == 0)
    goto <bb 203> (video);
  else
    goto <bb 311> (end);
  # SUCC: 203 [50.0%]  (true,exec) 311 [50.0%]  (false,exec)

  # BLOCK 16 freq:295
  # PRED: 12 [50.0%]  (false,exec) 13 [71.0%]  (false,exec)
  D.43099_71 = smh_46->mparams;
  D.43100_72 = D.43099_71->codec_flags;
  status_73 = switch_core_media_set_codec (session_45(D), 0, D.43100_72);
  # DEBUG status => status_73
  if (status_73 != 0)
    goto <bb 311> (end);
  else
    goto <bb 17>;
  # SUCC: 311 [71.0%]  (true,exec) 17 [29.0%]  (false,exec)

  # BLOCK 17 freq:86
  # PRED: 16 [29.0%]  (false,exec)
  switch_core_media_set_video_codec (session_45(D), 0);
  memset (&flags, 0, 156);
  D.43102_74 = flags[13];
  D.43103_75 = D.43102_74 + 1;
  flags[13] = D.43103_75;
  D.43106_76 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43106_76 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;
  # SUCC: 18 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 18 freq:25
  # PRED: 17 [29.0%]  (true,exec)
  D.43073_77 = session_45(D)->channel;
  D.43109_78 = switch_channel_test_flag (D.43073_77, 106);
  if (D.43109_78 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
  # SUCC: 19 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 19 freq:7
  # PRED: 18 [29.0%]  (true,exec)
  D.43073_79 = session_45(D)->channel;
  val_80 = switch_channel_get_variable_dup (D.43073_79, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_80
  if (val_80 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;
  # SUCC: 21 [30.2%]  (true,exec) 20 [69.8%]  (false,exec)

  # BLOCK 20 freq:5
  # PRED: 19 [69.8%]  (false,exec)
  D.43113_81 = switch_true (val_80);
  if (D.43113_81 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [50.0%]  (true,exec) 22 [50.0%]  (false,exec)

  # BLOCK 21 freq:5
  # PRED: 19 [30.2%]  (true,exec) 20 [50.0%]  (true,exec)
  D.43114_82 = flags[7];
  D.43115_83 = D.43114_82 + 1;
  flags[7] = D.43115_83;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:86
  # PRED: 17 [71.0%]  (false,exec) 18 [71.0%]  (false,exec) 20 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  D.43118_84 = switch_media_handle_test_media_flag (smh_46, 11);
  if (D.43118_84 != 0)
    goto <bb 25>;
  else
    goto <bb 23>;
  # SUCC: 25 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 23 freq:43
  # PRED: 22 [50.0%]  (false,exec)
  D.43073_85 = session_45(D)->channel;
  val_86 = switch_channel_get_variable_dup (D.43073_85, "pass_rfc2833", 1, -1);
  # DEBUG val => val_86
  if (val_86 != 0B)
    goto <bb 24>;
  else
    goto <bb 26>;
  # SUCC: 24 [69.8%]  (true,exec) 26 [30.2%]  (false,exec)

  # BLOCK 24 freq:30
  # PRED: 23 [69.8%]  (true,exec)
  D.43121_87 = switch_true (val_86);
  if (D.43121_87 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 25 freq:58
  # PRED: 22 [50.0%]  (true,exec) 24 [50.0%]  (true,exec)
  D.43073_88 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_88, 100, 1);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:86
  # PRED: 23 [30.2%]  (false,exec) 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
  D.43124_89 = switch_media_handle_test_media_flag (smh_46, 12);
  if (D.43124_89 != 0)
    goto <bb 29>;
  else
    goto <bb 27>;
  # SUCC: 29 [71.0%]  (true,exec) 27 [29.0%]  (false,exec)

  # BLOCK 27 freq:25
  # PRED: 26 [29.0%]  (false,exec)
  D.43073_90 = session_45(D)->channel;
  val_91 = switch_channel_get_variable_dup (D.43073_90, "rtp_autoflush", 1, -1);
  # DEBUG val => val_91
  if (val_91 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

  # BLOCK 28 freq:17
  # PRED: 27 [69.8%]  (true,exec)
  D.43127_92 = switch_true (val_91);
  if (D.43127_92 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 29 freq:69
  # PRED: 26 [71.0%]  (true,exec) 28 [50.0%]  (true,exec)
  D.43128_93 = flags[22];
  D.43129_94 = D.43128_93 + 1;
  flags[22] = D.43129_94;
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:86
  # PRED: 27 [30.2%]  (false,exec) 28 [50.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
  D.43132_95 = switch_media_handle_test_media_flag (smh_46, 13);
  if (D.43132_95 == 0)
    goto <bb 31>;
  else
    goto <bb 34>;
  # SUCC: 31 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 31 freq:25
  # PRED: 30 [29.0%]  (true,exec)
  D.43073_96 = session_45(D)->channel;
  val_97 = switch_channel_get_variable_dup (D.43073_96, "rtp_rewrite_timestamps", 1, -1);
  # DEBUG val => val_97
  if (val_97 == 0B)
    goto <bb 33>;
  else
    goto <bb 32>;
  # SUCC: 33 [30.2%]  (true,exec) 32 [69.8%]  (false,exec)

  # BLOCK 32 freq:17
  # PRED: 31 [69.8%]  (false,exec)
  D.43136_98 = switch_true (val_97);
  if (D.43136_98 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 33 freq:16
  # PRED: 31 [30.2%]  (true,exec) 32 [50.0%]  (true,exec)
  D.43137_99 = flags[8];
  D.43138_100 = D.43137_99 + 1;
  flags[8] = D.43138_100;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:86
  # PRED: 30 [71.0%]  (false,exec) 32 [50.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  D.43139_101 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43139_101 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 35 freq:43
  # PRED: 34 [50.0%]  (true,exec)
  D.43099_102 = smh_46->mparams;
  D.43099_102->cng_pt = 0;
  goto <bb 38>;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:43
  # PRED: 34 [50.0%]  (false,exec)
  D.43099_103 = smh_46->mparams;
  D.43143_104 = D.43099_103->cng_pt;
  if (D.43143_104 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 37 freq:21
  # PRED: 36 [50.0%]  (true,exec)
  D.43146_105 = flags[16];
  D.43147_106 = D.43146_105 + 1;
  flags[16] = D.43147_106;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:86
  # PRED: 35 [100.0%]  (fallthru,exec) 36 [50.0%]  (false,exec) 37 [100.0%]  (fallthru,exec)
  D.43148_107 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.iananame;
  D.43149_108 = strcasecmp (D.43148_107, "L16");
  if (D.43149_108 == 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

  # BLOCK 39 freq:43
  # PRED: 38 [50.0%]  (true,exec)
  D.43152_109 = flags[14];
  D.43153_110 = D.43152_109 + 1;
  flags[14] = D.43153_110;
  # SUCC: 40 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:86
  # PRED: 38 [50.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
  D.43152_111 = flags[14];
  if (D.43152_111 != 0)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

  # BLOCK 41 freq:25
  # PRED: 40 [29.0%]  (true,exec)
  D.43073_112 = session_45(D)->channel;
  val_113 = switch_channel_get_variable_dup (D.43073_112, "rtp_disable_byteswap", 1, -1);
  # DEBUG val => val_113
  if (val_113 != 0B)
    goto <bb 42>;
  else
    goto <bb 44>;
  # SUCC: 42 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

  # BLOCK 42 freq:17
  # PRED: 41 [69.8%]  (true,exec)
  D.43158_114 = switch_true (val_113);
  if (D.43158_114 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 43 freq:9
  # PRED: 42 [50.0%]  (true,exec)
  flags[14] = 0;
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:86
  # PRED: 40 [71.0%]  (false,exec) 41 [30.2%]  (false,exec) 42 [50.0%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.43077_115 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  if (D.43077_115 != 0B)
    goto <bb 45>;
  else
    goto <bb 51>;
  # SUCC: 45 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

  # BLOCK 45 freq:73
  # PRED: 44 [85.0%]  (true,exec)
  D.43073_116 = session_45(D)->channel;
  D.43163_117 = switch_channel_test_flag (D.43073_116, 103);
  if (D.43163_117 != 0)
    goto <bb 46>;
  else
    goto <bb 51>;
  # SUCC: 46 [29.0%]  (true,exec) 51 [71.0%]  (false,exec)

  # BLOCK 46 freq:21
  # PRED: 45 [29.0%]  (true,exec)
  D.43077_118 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  remote_host_119 = switch_rtp_get_remote_host (D.43077_118);
  # DEBUG remote_host => remote_host_119
  D.43077_120 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  remote_port_121 = switch_rtp_get_remote_port (D.43077_120);
  # DEBUG remote_port => remote_port_121
  D.43167_122 = remote_host_119 != 0B;
  D.43168_123 = remote_port_121 != 0;
  D.43169_124 = D.43167_122 && D.43168_123;
  if (D.43169_124 != 0)
    goto <bb 47>;
  else
    goto <bb 50>;
  # SUCC: 47 [71.0%]  (true,exec) 50 [29.0%]  (false,exec)

  # BLOCK 47 freq:15
  # PRED: 46 [71.0%]  (true,exec)
  D.43171_125 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_126 = D.43171_125->remote_sdp_ip;
  D.39348_127 = __builtin_strcmp (remote_host_119, D.43172_126);
  if (D.39348_127 == 0)
    goto <bb 48>;
  else
    goto <bb 50>;
  # SUCC: 48 [50.0%]  (true,exec) 50 [50.0%]  (false,exec)

  # BLOCK 48 freq:7
  # PRED: 47 [50.0%]  (true,exec)
  D.43171_128 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_129 = D.43171_128->remote_sdp_port;
  if (D.43174_129 == remote_port_121)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [13.7%]  (true,exec) 50 [86.3%]  (false,exec)

  # BLOCK 49 freq:1
  # PRED: 48 [13.7%]  (true,exec)
  D.43073_130 = session_45(D)->channel;
  D.43176_131 = switch_channel_get_name (D.43073_130);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4825, session_45(D), 7, "Audio params are unchanged for %s.\n", D.43176_131);
  goto <bb 203> (video);
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:20
  # PRED: 46 [29.0%]  (false,exec) 47 [50.0%]  (false,exec) 48 [86.3%]  (false,exec)
  D.43073_132 = session_45(D)->channel;
  D.43177_133 = switch_channel_get_name (D.43073_132);
  D.43178_134 = (int) remote_port_121;
  D.43171_135 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_136 = D.43171_135->remote_sdp_ip;
  D.43171_137 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_138 = D.43171_137->remote_sdp_port;
  D.43179_139 = (int) D.43174_138;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4830, session_45(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.43177_133, remote_host_119, D.43178_134, D.43172_136, D.43179_139);
  D.43171_140 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_141 = D.43171_140->remote_sdp_port;
  D.43179_142 = (int) D.43174_141;
  switch_snprintf (&tmp, 50, "%d", D.43179_142);
  D.43073_143 = session_45(D)->channel;
  D.43171_144 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_145 = D.43171_144->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_143, "remote_media_ip", D.43172_145, 1);
  D.43073_146 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_146, "remote_media_port", &tmp, 1);
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:85
  # PRED: 44 [15.0%]  (false,exec) 45 [71.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
  D.43073_147 = session_45(D)->channel;
  D.43180_148 = switch_channel_test_flag (D.43073_147, 29);
  if (D.43180_148 == 0)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [29.0%]  (true,exec) 53 [71.0%]  (false,exec)

  # BLOCK 52 freq:25
  # PRED: 51 [29.0%]  (true,exec)
  D.43073_149 = session_45(D)->channel;
  D.43183_150 = switch_channel_get_name (D.43073_149);
  D.43184_151 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43185_152 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43186_153 = (int) D.43185_152;
  D.43171_154 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_155 = D.43171_154->remote_sdp_ip;
  D.43171_156 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_157 = D.43171_156->remote_sdp_port;
  D.43179_158 = (int) D.43174_157;
  D.43171_159 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_160 = D.43171_159->agreed_pt;
  D.43188_161 = (int) D.43187_160;
  D.43189_162 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_163 = D.43189_162 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4841, session_45(D), 7, "AUDIO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43183_150, D.43184_151, D.43186_153, D.43172_155, D.43179_158, D.43188_161, D.43190_163);
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:85
  # PRED: 51 [71.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
  D.43185_164 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43186_165 = (int) D.43185_164;
  switch_snprintf (&tmp, 50, "%d", D.43186_165);
  D.43073_166 = session_45(D)->channel;
  D.43184_167 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_166, "local_media_ip", D.43184_167, 1);
  D.43073_168 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_168, "local_media_port", &tmp, 1);
  D.43073_169 = session_45(D)->channel;
  D.43191_170 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_169, "advertised_media_ip", D.43191_170, 1);
  D.43077_171 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  if (D.43077_171 != 0B)
    goto <bb 54>;
  else
    goto <bb 70>;
  # SUCC: 54 [85.0%]  (true,exec) 70 [15.0%]  (false,exec)

  # BLOCK 54 freq:72
  # PRED: 53 [85.0%]  (true,exec)
  D.43073_172 = session_45(D)->channel;
  D.43194_173 = switch_channel_test_flag (D.43073_172, 103);
  if (D.43194_173 != 0)
    goto <bb 55>;
  else
    goto <bb 70>;
  # SUCC: 55 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 55 freq:36
  # PRED: 54 [50.0%]  (true,exec)
  # DEBUG rport => 0B
  remote_rtcp_port_175 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_175
  if (remote_rtcp_port_175 == 0)
    goto <bb 56>;
  else
    goto <bb 58>;
  # SUCC: 56 [29.0%]  (true,exec) 58 [71.0%]  (false,exec)

  # BLOCK 56 freq:10
  # PRED: 55 [29.0%]  (true,exec)
  D.43073_176 = session_45(D)->channel;
  rport_177 = switch_channel_get_variable_dup (D.43073_176, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_177
  if (rport_177 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [69.8%]  (true,exec) 58 [30.2%]  (false,exec)

  # BLOCK 57 freq:7
  # PRED: 56 [69.8%]  (true,exec)
  # DEBUG __nptr => rport_177
  D.48083_1337 = strtol (rport_177, 0B, 10);
  remote_rtcp_port_179 = (switch_port_t) D.48083_1337;
  # DEBUG remote_rtcp_port => remote_rtcp_port_179
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:36
  # PRED: 55 [71.0%]  (false,exec) 56 [30.2%]  (false,exec) 57 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_7 = PHI <remote_rtcp_port_175(55), remote_rtcp_port_175(56), remote_rtcp_port_179(57)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_7
  D.43077_180 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43171_181 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_182 = D.43171_181->remote_sdp_ip;
  D.43171_183 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_184 = D.43171_183->remote_sdp_port;
  D.43202_185 = switch_rtp_set_remote_address (D.43077_180, D.43172_182, D.43174_184, remote_rtcp_port_7, 1, &err);
  if (D.43202_185 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;
  # SUCC: 59 [50.0%]  (true,exec) 60 [50.0%]  (false,exec)

  # BLOCK 59 freq:18
  # PRED: 58 [50.0%]  (true,exec)
  err.45_186 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4868, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.45_186);
  goto <bb 68>;
  # SUCC: 68 [100.0%]  (fallthru,exec)

  # BLOCK 60 freq:18
  # PRED: 58 [50.0%]  (false,exec)
  D.43171_187 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_188 = D.43171_187->remote_sdp_ip;
  D.43171_189 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_190 = D.43171_189->remote_sdp_port;
  D.43179_191 = (int) D.43174_190;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4870, session_45(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.43172_188, D.43179_191);
  D.43073_192 = session_45(D)->channel;
  D.43207_193 = switch_channel_test_flag (D.43073_192, 96);
  if (D.43207_193 != 0)
    goto <bb 61>;
  else
    goto <bb 63>;
  # SUCC: 61 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

  # BLOCK 61 freq:9
  # PRED: 60 [50.0%]  (true,exec)
  # DEBUG __s2_len => 7
  D.43171_235 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_236 = D.43171_235->remote_sdp_ip;
  __result_237 = __builtin_strcmp (D.43172_236, "0.0.0.0");
  if (__result_237 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 62 freq:3
  # PRED: 61 [29.0%]  (true,exec)
  switch_core_media_toggle_hold (session_45(D), 0);
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:18
  # PRED: 60 [50.0%]  (false,exec) 61 [71.0%]  (false,exec) 62 [100.0%]  (fallthru,exec)
  D.43254_239 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43254_239 == 0)
    goto <bb 64>;
  else
    goto <bb 68>;
  # SUCC: 64 [29.0%]  (true,exec) 68 [71.0%]  (false,exec)

  # BLOCK 64 freq:5
  # PRED: 63 [29.0%]  (true,exec)
  D.43073_240 = session_45(D)->channel;
  val_241 = switch_channel_get_variable_dup (D.43073_240, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_241
  if (val_241 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;
  # SUCC: 66 [15.0%]  (true,exec) 65 [85.0%]  (false,exec)

  # BLOCK 65 freq:4
  # PRED: 64 [85.0%]  (false,exec)
  D.43258_242 = switch_true (val_241);
  if (D.43258_242 == 0)
    goto <bb 66>;
  else
    goto <bb 68>;
  # SUCC: 66 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

  # BLOCK 66 freq:3
  # PRED: 64 [15.0%]  (true,exec) 65 [50.0%]  (true,exec)
  D.43073_243 = session_45(D)->channel;
  D.43259_244 = switch_channel_test_flag (D.43073_243, 106);
  if (D.43259_244 == 0)
    goto <bb 67>;
  else
    goto <bb 68>;
  # SUCC: 67 [29.0%]  (true,exec) 68 [71.0%]  (false,exec)

  # BLOCK 67 freq:1
  # PRED: 66 [29.0%]  (true,exec)
  D.43077_245 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_set_flag (D.43077_245, 7);
  # SUCC: 68 [100.0%]  (fallthru,exec)

  # BLOCK 68 freq:36
  # PRED: 59 [100.0%]  (fallthru,exec) 63 [71.0%]  (false,exec) 65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 67 [100.0%]  (fallthru,exec)
  D.43262_246 = session_45(D) != 0B;
  D.43263_247 = a_engine_48 != 0B;
  D.43264_248 = D.43262_246 && D.43263_247;
  if (D.43264_248 != 0)
    goto <bb 69>;
  else
    goto <bb 203> (video);
  # SUCC: 69 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

  # BLOCK 69 freq:10
  # PRED: 68 [29.0%]  (true,exec)
  check_dtls_reinvite (session_45(D), a_engine_48);
  goto <bb 203> (video);
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:49
  # PRED: 53 [15.0%]  (false,exec) 54 [50.0%]  (false,exec)
  D.43073_249 = session_45(D)->channel;
  D.43267_250 = switch_channel_test_flag (D.43073_249, 29);
  if (D.43267_250 != 0)
    goto <bb 71>;
  else
    goto <bb 78>;
  # SUCC: 71 [50.0%]  (true,exec) 78 [50.0%]  (false,exec)

  # BLOCK 71 freq:24
  # PRED: 70 [50.0%]  (true,exec)
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43102_251 = flags[13];
  D.43103_252 = D.43102_251 + 1;
  flags[13] = D.43103_252;
  D.43270_253 = flags[19];
  D.43271_254 = D.43270_253 + 1;
  flags[19] = D.43271_254;
  D.43274_255 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43274_255 == 0)
    goto <bb 72>;
  else
    goto <bb 76>;
  # SUCC: 72 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

  # BLOCK 72 freq:7
  # PRED: 71 [29.0%]  (true,exec)
  D.43073_256 = session_45(D)->channel;
  D.43277_257 = switch_channel_test_flag (D.43073_256, 106);
  if (D.43277_257 == 0)
    goto <bb 73>;
  else
    goto <bb 76>;
  # SUCC: 73 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

  # BLOCK 73 freq:2
  # PRED: 72 [29.0%]  (true,exec)
  D.43073_258 = session_45(D)->channel;
  val_259 = switch_channel_get_variable_dup (D.43073_258, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_259
  if (val_259 == 0B)
    goto <bb 75>;
  else
    goto <bb 74>;
  # SUCC: 75 [30.2%]  (true,exec) 74 [69.8%]  (false,exec)

  # BLOCK 74 freq:1
  # PRED: 73 [69.8%]  (false,exec)
  D.43281_260 = switch_true (val_259);
  if (D.43281_260 == 0)
    goto <bb 75>;
  else
    goto <bb 76>;
  # SUCC: 75 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

  # BLOCK 75 freq:1
  # PRED: 73 [30.2%]  (true,exec) 74 [50.0%]  (true,exec)
  D.43114_261 = flags[7];
  D.43115_262 = D.43114_261 + 1;
  flags[7] = D.43115_262;
  # SUCC: 76 [100.0%]  (fallthru,exec)

  # BLOCK 76 freq:24
  # PRED: 71 [71.0%]  (false,exec) 72 [71.0%]  (false,exec) 74 [50.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
  # DEBUG timer_name => 0B
  D.43073_264 = session_45(D)->channel;
  D.43282_265 = switch_channel_get_name (D.43073_264);
  D.43171_271 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_272 = D.43171_271->remote_sdp_ip;
  D.43171_273 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_274 = D.43171_273->remote_sdp_port;
  D.43179_275 = (int) D.43174_274;
  D.43171_276 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_277 = D.43171_276->agreed_pt;
  D.43188_278 = (int) D.43187_277;
  D.43189_279 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_280 = D.43189_279 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4906, session_45(D), 7, "PROXY AUDIO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43282_265, D.43172_272, D.43179_275, D.43172_272, D.43179_275, D.43188_278, D.43190_280);
  D.43077_281 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43283_282 = switch_rtp_ready (D.43077_281);
  if (D.43283_282 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;
  # SUCC: 77 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

  # BLOCK 77 freq:7
  # PRED: 76 [29.0%]  (true,exec)
  D.43077_283 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43171_284 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_285 = D.43171_284->agreed_pt;
  switch_rtp_set_default_payload (D.43077_283, D.43187_285);
  goto <bb 80>;
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 78 freq:24
  # PRED: 70 [50.0%]  (false,exec)
  D.43099_286 = smh_46->mparams;
  timer_name_287 = D.43099_286->timer_name;
  # DEBUG timer_name => timer_name_287
  D.43073_288 = session_45(D)->channel;
  var_289 = switch_channel_get_variable_dup (D.43073_288, "rtp_timer_name", 1, -1);
  # DEBUG var => var_289
  if (var_289 != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;
  # SUCC: 79 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

  # BLOCK 79 freq:21
  # PRED: 78 [85.0%]  (true,exec)
  # DEBUG timer_name => var_289
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 80 freq:49
  # PRED: 77 [100.0%]  (fallthru,exec) 78 [15.0%]  (false,exec) 79 [100.0%]  (fallthru,exec) 76 [71.0%]  (false,exec)
  # timer_name_6 = PHI <0B(77), timer_name_287(78), var_289(79), 0B(76)>
  # DEBUG timer_name => timer_name_6
  D.43073_291 = session_45(D)->channel;
  D.43291_292 = switch_channel_check_signal (D.43073_291, 1);
  if (D.43291_292 != 0)
    goto <bb 82>;
  else
    goto <bb 81>;
  # SUCC: 82 [50.0%]  (true,exec) 81 [50.0%]  (false,exec)

  # BLOCK 81 freq:24
  # PRED: 80 [50.0%]  (false,exec)
  D.43073_293 = session_45(D)->channel;
  D.43293_294 = switch_channel_get_state (D.43073_293);
  if (D.43293_294 <= 9)
    goto <bb 82>;
  else
    goto <bb 84>;
  # SUCC: 82 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 82 freq:36
  # PRED: 80 [50.0%]  (true,exec) 81 [50.0%]  (true,exec)
  D.43184_295 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43185_296 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43171_297 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_298 = D.43171_297->remote_sdp_ip;
  D.43171_299 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_300 = D.43171_299->remote_sdp_port;
  D.43171_301 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_302 = D.43171_301->agreed_pt;
  D.43294_303 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43171_304 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43295_305 = D.43171_304->codec_ms;
  D.43296_306 = D.43295_305 * 1000;
  D.43297_307 = switch_core_session_get_pool (session_45(D));
  D.43298_308 = switch_rtp_new (D.43184_295, D.43185_296, D.43172_298, D.43174_300, D.43187_302, D.43294_303, D.43296_306, &flags, timer_name_6, &err, D.43297_307);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session = D.43298_308;
  D.43077_309 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43299_310 = switch_rtp_ready (D.43077_309);
  if (D.43299_310 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 83 freq:11
  # PRED: 82 [29.0%]  (true,exec)
  D.43077_311 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43302_312 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].payload_map;
  switch_rtp_set_payload_map (D.43077_311, D.43302_312);
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:49
  # PRED: 81 [50.0%]  (false,exec) 82 [71.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
  D.43077_313 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43303_314 = switch_rtp_ready (D.43077_313);
  if (D.43303_314 != 0)
    goto <bb 85>;
  else
    goto <bb 306>;
  # SUCC: 85 [29.0%]  (true,exec) 306 [71.0%]  (false,exec)

  # BLOCK 85 freq:14
  # PRED: 84 [29.0%]  (true,exec)
  D.43099_315 = smh_46->mparams;
  D.43306_316 = D.43099_315->vflags;
  D.43307_317 = (uint8_t) D.43306_316;
  vad_in_318 = D.43307_317 & 1;
  # DEBUG vad_in => vad_in_318
  D.43099_319 = smh_46->mparams;
  D.43306_320 = D.43099_319->vflags;
  D.43307_321 = (uint8_t) D.43306_320;
  vad_out_322 = D.43307_321 & 2;
  # DEBUG vad_out => vad_out_322
  D.43073_323 = session_45(D)->channel;
  D.43308_324 = switch_channel_direction (D.43073_323);
  inb_325 = D.43308_324 == 0;
  # DEBUG inb => inb_325
  D.43309_326 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_mutex;
  D.43310_327 = switch_core_session_get_pool (session_45(D));
  switch_mutex_init (D.43309_326, 1, D.43310_327);
  D.43073_328 = session_45(D)->channel;
  ssrc_329 = switch_channel_get_variable_dup (D.43073_328, "rtp_use_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_329
  if (ssrc_329 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;
  # SUCC: 86 [85.0%]  (true,exec) 87 [15.0%]  (false,exec)

  # BLOCK 86 freq:12
  # PRED: 85 [85.0%]  (true,exec)
  ssrc_ul_330 = strtoul (ssrc_329, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_330
  D.43077_331 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_set_ssrc (D.43077_331, ssrc_ul_330);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = ssrc_ul_330;
  goto <bb 88>;
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 87 freq:2
  # PRED: 85 [15.0%]  (false,exec)
  D.43077_332 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43314_333 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
  switch_rtp_set_ssrc (D.43077_332, D.43314_333);
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 88 freq:14
  # PRED: 86 [100.0%]  (fallthru,exec) 87 [100.0%]  (fallthru,exec)
  D.43315_334 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
  if (D.43315_334 != 0)
    goto <bb 89>;
  else
    goto <bb 90>;
  # SUCC: 89 [29.0%]  (true,exec) 90 [71.0%]  (false,exec)

  # BLOCK 89 freq:4
  # PRED: 88 [29.0%]  (true,exec)
  D.43077_335 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43315_336 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43077_335, D.43315_336);
  # SUCC: 90 [100.0%]  (fallthru,exec)

  # BLOCK 90 freq:14
  # PRED: 88 [71.0%]  (false,exec) 89 [100.0%]  (fallthru,exec)
  D.43073_337 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_337, 36, 1);
  D.43073_338 = session_45(D)->channel;
  D.43171_339 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_340 = D.43171_339->agreed_pt;
  D.43188_341 = (int) D.43187_340;
  switch_channel_set_variable_printf (D.43073_338, "rtp_use_pt", "%d", D.43188_341);
  D.43073_342 = session_45(D)->channel;
  val_343 = switch_channel_get_variable_dup (D.43073_342, "rtp_enable_vad_in", 1, -1);
  # DEBUG val => val_343
  if (val_343 != 0B)
    goto <bb 91>;
  else
    goto <bb 93>;
  # SUCC: 91 [69.8%]  (true,exec) 93 [30.2%]  (false,exec)

  # BLOCK 91 freq:10
  # PRED: 90 [69.8%]  (true,exec)
  D.43320_344 = switch_true (val_343);
  if (D.43320_344 != 0)
    goto <bb 92>;
  else
    goto <bb 93>;
  # SUCC: 92 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

  # BLOCK 92 freq:5
  # PRED: 91 [50.0%]  (true,exec)
  # DEBUG vad_in => 1
  # SUCC: 93 [100.0%]  (fallthru,exec)

  # BLOCK 93 freq:14
  # PRED: 90 [30.2%]  (false,exec) 91 [50.0%]  (false,exec) 92 [100.0%]  (fallthru,exec)
  # vad_in_9 = PHI <vad_in_318(90), vad_in_318(91), 1(92)>
  # DEBUG vad_in => vad_in_9
  D.43073_346 = session_45(D)->channel;
  val_347 = switch_channel_get_variable_dup (D.43073_346, "rtp_enable_vad_out", 1, -1);
  # DEBUG val => val_347
  if (val_347 != 0B)
    goto <bb 94>;
  else
    goto <bb 96>;
  # SUCC: 94 [69.8%]  (true,exec) 96 [30.2%]  (false,exec)

  # BLOCK 94 freq:10
  # PRED: 93 [69.8%]  (true,exec)
  D.43325_348 = switch_true (val_347);
  if (D.43325_348 != 0)
    goto <bb 95>;
  else
    goto <bb 96>;
  # SUCC: 95 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 95 freq:5
  # PRED: 94 [50.0%]  (true,exec)
  # DEBUG vad_out => 1
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 96 freq:14
  # PRED: 93 [30.2%]  (false,exec) 94 [50.0%]  (false,exec) 95 [100.0%]  (fallthru,exec)
  # vad_out_11 = PHI <vad_out_322(93), vad_out_322(94), 1(95)>
  # DEBUG vad_out => vad_out_11
  D.43073_350 = session_45(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.43073_350, "rtp_disable_vad_in", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 97>;
  else
    goto <bb 99>;
  # SUCC: 97 [69.8%]  (true,exec) 99 [30.2%]  (false,exec)

  # BLOCK 97 freq:10
  # PRED: 96 [69.8%]  (true,exec)
  D.43330_352 = switch_true (val_351);
  if (D.43330_352 != 0)
    goto <bb 98>;
  else
    goto <bb 99>;
  # SUCC: 98 [50.0%]  (true,exec) 99 [50.0%]  (false,exec)

  # BLOCK 98 freq:5
  # PRED: 97 [50.0%]  (true,exec)
  # DEBUG vad_in => 0
  # SUCC: 99 [100.0%]  (fallthru,exec)

  # BLOCK 99 freq:14
  # PRED: 96 [30.2%]  (false,exec) 97 [50.0%]  (false,exec) 98 [100.0%]  (fallthru,exec)
  # vad_in_10 = PHI <vad_in_9(96), vad_in_9(97), 0(98)>
  # DEBUG vad_in => vad_in_10
  D.43073_354 = session_45(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.43073_354, "rtp_disable_vad_out", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 100>;
  else
    goto <bb 102>;
  # SUCC: 100 [69.8%]  (true,exec) 102 [30.2%]  (false,exec)

  # BLOCK 100 freq:10
  # PRED: 99 [69.8%]  (true,exec)
  D.43335_356 = switch_true (val_355);
  if (D.43335_356 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;
  # SUCC: 101 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

  # BLOCK 101 freq:5
  # PRED: 100 [50.0%]  (true,exec)
  # DEBUG vad_out => 0
  # SUCC: 102 [100.0%]  (fallthru,exec)

  # BLOCK 102 freq:14
  # PRED: 99 [30.2%]  (false,exec) 100 [50.0%]  (false,exec) 101 [100.0%]  (fallthru,exec)
  # vad_out_12 = PHI <vad_out_11(99), vad_out_11(100), 0(101)>
  # DEBUG vad_out => vad_out_12
  D.43077_358 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43338_359 = switch_rtp_get_ssrc (D.43077_358);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = D.43338_359;
  D.43073_360 = session_45(D)->channel;
  D.43314_361 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
  switch_channel_set_variable_printf (D.43073_360, "rtp_use_ssrc", "%u", D.43314_361);
  D.43099_362 = smh_46->mparams;
  D.43339_363 = D.43099_362->auto_rtp_bugs;
  D.43340_364 = D.43339_363 & 4;
  if (D.43340_364 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;
  # SUCC: 103 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

  # BLOCK 103 freq:7
  # PRED: 102 [50.0%]  (true,exec)
  D.43343_365 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  D.43344_366 = D.43343_365 | 4;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs = D.43344_366;
  # SUCC: 104 [100.0%]  (fallthru,exec)

  # BLOCK 104 freq:14
  # PRED: 102 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
  D.43073_367 = session_45(D)->channel;
  val_368 = switch_channel_get_variable_dup (D.43073_367, "rtp_manual_rtp_bugs", 1, -1);
  # DEBUG val => val_368
  if (val_368 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;
  # SUCC: 105 [69.8%]  (true,exec) 106 [30.2%]  (false,exec)

  # BLOCK 105 freq:10
  # PRED: 104 [69.8%]  (true,exec)
  D.43347_369 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43347_369, val_368);
  # SUCC: 106 [100.0%]  (fallthru,exec)

  # BLOCK 106 freq:14
  # PRED: 104 [30.2%]  (false,exec) 105 [100.0%]  (fallthru,exec)
  D.43077_370 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43343_371 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  D.43099_372 = smh_46->mparams;
  D.43348_373 = D.43099_372->manual_rtp_bugs;
  D.43349_374 = D.43343_371 | D.43348_373;
  switch_rtp_intentional_bugs (D.43077_370, D.43349_374);
  D.43352_375 = vad_in_10 != 0;
  D.43353_376 = inb_325 != 0;
  D.43354_377 = D.43352_375 && D.43353_376;
  if (D.43354_377 != 0)
    goto <bb 108>;
  else
    goto <bb 107>;
  # SUCC: 108 [29.0%]  (true,exec) 107 [71.0%]  (false,exec)

  # BLOCK 107 freq:10
  # PRED: 106 [71.0%]  (false,exec)
  D.43356_378 = vad_out_12 != 0;
  D.43357_379 = inb_325 == 0;
  D.43358_380 = D.43356_378 && D.43357_379;
  if (D.43358_380 != 0)
    goto <bb 108>;
  else
    goto <bb 113>;
  # SUCC: 108 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

  # BLOCK 108 freq:9
  # PRED: 106 [29.0%]  (true,exec) 107 [50.0%]  (true,exec)
  D.43077_381 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43359_382 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec;
  switch_rtp_enable_vad (D.43077_381, session_45(D), D.43359_382, 7);
  D.43360_383 = switch_core_session_get_channel (session_45(D));
  D.43361_384 = switch_channel_get_name (D.43360_383);
  if (vad_in_10 != 0)
    goto <bb 110>;
  else
    goto <bb 109>;
  # SUCC: 110 [50.0%]  (true,exec) 109 [50.0%]  (false,exec)

  # BLOCK 109 freq:5
  # PRED: 108 [50.0%]  (false,exec)
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:9
  # PRED: 108 [50.0%]  (true,exec) 109 [100.0%]  (fallthru,exec)
  # iftmp.47_29 = PHI <"in"(108), ""(109)>
  if (vad_out_12 != 0)
    goto <bb 112>;
  else
    goto <bb 111>;
  # SUCC: 112 [50.0%]  (true,exec) 111 [50.0%]  (false,exec)

  # BLOCK 111 freq:5
  # PRED: 110 [50.0%]  (false,exec)
  # SUCC: 112 [100.0%]  (fallthru,exec)

  # BLOCK 112 freq:9
  # PRED: 110 [50.0%]  (true,exec) 111 [100.0%]  (fallthru,exec)
  # iftmp.48_30 = PHI <"out"(110), ""(111)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5001, session_45(D), 7, "AUDIO RTP Engage VAD for %s ( %s %s )\n", D.43361_384, iftmp.47_29, iftmp.48_30);
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 113 freq:14
  # PRED: 107 [50.0%]  (false,exec) 112 [100.0%]  (fallthru,exec)
  D.43370_389 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43371_390 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_389][0].ready;
  if (D.43371_390 != 0)
    goto <bb 114>;
  else
    goto <bb 117>;
  # SUCC: 114 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

  # BLOCK 114 freq:4
  # PRED: 113 [29.0%]  (true,exec)
  gen_ice (session_45(D), 0, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5010, session_45(D), 6, "Activating Audio ICE\n");
  D.43077_391 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43374_392 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
  D.43375_393 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
  D.43376_394 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
  D.43377_395 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
  D.43379_396 = switch_ice_direction (session_45(D));
  if (D.43379_396 == 1)
    goto <bb 116>;
  else
    goto <bb 115>;
  # SUCC: 116 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

  # BLOCK 115 freq:3
  # PRED: 114 [72.0%]  (false,exec)
  # SUCC: 116 [100.0%]  (fallthru,exec)

  # BLOCK 116 freq:4
  # PRED: 114 [28.0%]  (true,exec) 115 [100.0%]  (fallthru,exec)
  # iftmp.49_31 = PHI <2(114), 6(115)>
  D.43383_399 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
  switch_rtp_activate_ice (D.43077_391, D.43374_392, D.43375_393, D.43376_394, D.43377_395, 0, iftmp.49_31, D.43383_399);
  # SUCC: 117 [100.0%]  (fallthru,exec)

  # BLOCK 117 freq:14
  # PRED: 113 [71.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
  D.43073_400 = session_45(D)->channel;
  val_401 = switch_channel_get_variable_dup (D.43073_400, "rtcp_audio_interval_msec", 1, -1);
  # DEBUG val => val_401
  if (val_401 != 0B)
    goto <bb 119>;
  else
    goto <bb 118>;
  # SUCC: 119 [69.8%]  (true,exec) 118 [30.2%]  (false,exec)

  # BLOCK 118 freq:4
  # PRED: 117 [30.2%]  (false,exec)
  D.43099_402 = smh_46->mparams;
  val_403 = D.43099_402->rtcp_audio_interval_msec;
  # DEBUG val => val_403
  if (val_403 != 0B)
    goto <bb 119>;
  else
    goto <bb 134>;
  # SUCC: 119 [85.0%]  (true,exec) 134 [15.0%]  (false,exec)

  # BLOCK 119 freq:13
  # PRED: 117 [69.8%]  (true,exec) 118 [85.0%]  (true,exec)
  # val_1 = PHI <val_401(117), val_403(118)>
  # DEBUG val => val_1
  D.43073_404 = session_45(D)->channel;
  rport_405 = switch_channel_get_variable_dup (D.43073_404, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_405
  remote_rtcp_port_406 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_406
  D.43387_407 = remote_rtcp_port_406 == 0;
  D.43388_408 = rport_405 != 0B;
  D.43389_409 = D.43387_407 && D.43388_408;
  if (D.43389_409 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;
  # SUCC: 120 [29.0%]  (true,exec) 121 [71.0%]  (false,exec)

  # BLOCK 120 freq:4
  # PRED: 119 [29.0%]  (true,exec)
  # DEBUG __nptr => rport_405
  D.48086_1338 = strtol (rport_405, 0B, 10);
  remote_rtcp_port_411 = (switch_port_t) D.48086_1338;
  # DEBUG remote_rtcp_port => remote_rtcp_port_411
  # SUCC: 121 [100.0%]  (fallthru,exec)

  # BLOCK 121 freq:13
  # PRED: 119 [71.0%]  (false,exec) 120 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_13 = PHI <remote_rtcp_port_406(119), remote_rtcp_port_411(120)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_13
  D.43393_412 = strcasecmp (val_1, "passthru");
  if (D.43393_412 == 0)
    goto <bb 122>;
  else
    goto <bb 123>;
  # SUCC: 122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

  # BLOCK 122 freq:7
  # PRED: 121 [50.0%]  (true,exec)
  D.43396_413 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5043, session_45(D), 6, "Activating RTCP PASSTHRU PORT %d\n", D.43396_413);
  D.43077_414 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43397_415 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  D.43398_416 = D.43397_415 > 0;
  switch_rtp_activate_rtcp (D.43077_414, -1, remote_rtcp_port_13, D.43398_416);
  goto <bb 126>;
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:7
  # PRED: 121 [50.0%]  (false,exec)
  # DEBUG __nptr => val_1
  interval_1339 = strtol (val_1, 0B, 10);
  # DEBUG interval => NULL
  interval.50_418 = (unsigned int) interval_1339;
  D.43401_419 = interval.50_418 + 4294967196;
  if (D.43401_419 > 499900)
    goto <bb 124>;
  else
    goto <bb 125>;
  # SUCC: 124 [29.0%]  (true,exec) 125 [71.0%]  (false,exec)

  # BLOCK 124 freq:2
  # PRED: 123 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5048, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1339);
  # DEBUG interval => 10000
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 125 freq:7
  # PRED: 123 [71.0%]  (false,exec) 124 [100.0%]  (fallthru,exec)
  # interval_14 = PHI <interval_1339(123), 10000(124)>
  # DEBUG interval => interval_14
  D.43396_421 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5053, session_45(D), 6, "Activating RTCP PORT %d\n", D.43396_421);
  D.43077_422 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43397_423 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  D.43398_424 = D.43397_423 > 0;
  switch_rtp_activate_rtcp (D.43077_422, interval_14, remote_rtcp_port_13, D.43398_424);
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:13
  # PRED: 122 [100.0%]  (fallthru,exec) 125 [100.0%]  (fallthru,exec)
  D.43404_425 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43405_426 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_425][1].ready;
  if (D.43405_426 != 0)
    goto <bb 127>;
  else
    goto <bb 134>;
  # SUCC: 127 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

  # BLOCK 127 freq:7
  # PRED: 126 [50.0%]  (true,exec)
  D.43397_427 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_427 > 0)
    goto <bb 128>;
  else
    goto <bb 131>;
  # SUCC: 128 [86.9%]  (true,exec) 131 [13.1%]  (false,exec)

  # BLOCK 128 freq:6
  # PRED: 127 [86.9%]  (true,exec)
  D.43404_428 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43411_429 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_428][1].con_addr;
  D.43370_430 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43412_431 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_430][0].con_addr;
  D.39377_432 = __builtin_strcmp (D.43411_429, D.43412_431);
  if (D.39377_432 == 0)
    goto <bb 129>;
  else
    goto <bb 131>;
  # SUCC: 129 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

  # BLOCK 129 freq:3
  # PRED: 128 [50.0%]  (true,exec)
  D.43404_433 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43414_434 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_433][1].con_port;
  D.43370_435 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43415_436 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_435][0].con_port;
  if (D.43414_434 == D.43415_436)
    goto <bb 130>;
  else
    goto <bb 131>;
  # SUCC: 130 [13.7%]  (true,exec) 131 [86.3%]  (false,exec)

  # BLOCK 130
  # PRED: 129 [13.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5061, session_45(D), 6, "Skipping RTCP ICE (Same as RTP)\n");
  goto <bb 134>;
  # SUCC: 134 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:6
  # PRED: 127 [13.1%]  (false,exec) 128 [50.0%]  (false,exec) 129 [86.3%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5063, session_45(D), 6, "Activating RTCP ICE\n");
  D.43077_437 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43374_438 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
  D.43375_439 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
  D.43376_440 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
  D.43377_441 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
  D.43418_442 = switch_ice_direction (session_45(D));
  if (D.43418_442 == 1)
    goto <bb 133>;
  else
    goto <bb 132>;
  # SUCC: 133 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

  # BLOCK 132 freq:5
  # PRED: 131 [72.0%]  (false,exec)
  # SUCC: 133 [100.0%]  (fallthru,exec)

  # BLOCK 133 freq:6
  # PRED: 131 [28.0%]  (true,exec) 132 [100.0%]  (fallthru,exec)
  # iftmp.51_32 = PHI <2(131), 6(132)>
  D.43383_445 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
  switch_rtp_activate_ice (D.43077_437, D.43374_438, D.43375_439, D.43376_440, D.43377_441, 1, iftmp.51_32, D.43383_445);
  # SUCC: 134 [100.0%]  (fallthru,exec)

  # BLOCK 134 freq:14
  # PRED: 118 [15.0%]  (false,exec) 126 [50.0%]  (false,exec) 130 [100.0%]  (fallthru,exec) 133 [100.0%]  (fallthru,exec)
  D.43422_446 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint.str;
  # DEBUG s => D.43422_446
  if (D.43422_446 == 0B)
    goto <bb 137>;
  else
    goto <bb 135>;
  # SUCC: 137 [15.0%]  (true,exec) 135 [85.0%]  (false,exec)

  # BLOCK 135 freq:12
  # PRED: 134 [85.0%]  (false,exec)
  D.48093_1340 = MEM[(const char *)smh_46 + 10984B];
  if (D.48093_1340 == 0)
    goto <bb 137>;
  else
    goto <bb 136>;
  # SUCC: 137 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

  # BLOCK 136 freq:6
  # PRED: 135 [50.0%]  (false,exec)
  # SUCC: 137 [100.0%]  (fallthru,exec)

  # BLOCK 137 freq:14
  # PRED: 134 [15.0%]  (true,exec) 135 [50.0%]  (true,exec) 136 [100.0%]  (fallthru,exec)
  # D.48092_1341 = PHI <1(134), 1(135), 0(136)>
  if (D.48092_1341 == 0)
    goto <bb 138>;
  else
    goto <bb 152>;
  # SUCC: 138 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

  # BLOCK 138 freq:4
  # PRED: 137 [29.0%]  (true,exec)
  D.43426_448 = switch_rtp_has_dtls ();
  if (D.43426_448 != 0)
    goto <bb 139>;
  else
    goto <bb 152>;
  # SUCC: 139 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

  # BLOCK 139 freq:1
  # PRED: 138 [29.0%]  (true,exec)
  D.43429_449 = smh_46->session;
  D.43430_450 = dtls_ok (D.43429_449);
  if (D.43430_450 != 0)
    goto <bb 140>;
  else
    goto <bb 152>;
  # SUCC: 140 [29.0%]  (true,exec) 152 [71.0%]  (false,exec)

  # BLOCK 140
  # PRED: 139 [29.0%]  (true,exec)
  D.43429_451 = smh_46->session;
  D.43434_452 = D.43429_451->channel;
  D.43435_453 = switch_channel_direction (D.43434_452);
  if (D.43435_453 == 0)
    goto <bb 142>;
  else
    goto <bb 141>;
  # SUCC: 142 [50.0%]  (true,exec) 141 [50.0%]  (false,exec)

  # BLOCK 141
  # PRED: 140 [50.0%]  (false,exec)
  # SUCC: 142 [100.0%]  (fallthru,exec)

  # BLOCK 142
  # PRED: 140 [50.0%]  (true,exec) 141 [100.0%]  (fallthru,exec)
  # dtype_33 = PHI <1(140), 2(141)>
  # DEBUG dtype => dtype_33
  D.43429_457 = smh_46->session;
  D.43434_458 = D.43429_457->channel;
  D.43439_459 = switch_channel_test_flag (D.43434_458, 112);
  if (D.43439_459 != 0)
    goto <bb 143>;
  else
    goto <bb 146>;
  # SUCC: 143 [50.0%]  (true,exec) 146 [50.0%]  (false,exec)

  # BLOCK 143
  # PRED: 142 [50.0%]  (true,exec)
  if (dtype_33 == 1)
    goto <bb 145>;
  else
    goto <bb 144>;
  # SUCC: 145 [28.0%]  (true,exec) 144 [72.0%]  (false,exec)

  # BLOCK 144
  # PRED: 143 [72.0%]  (false,exec)
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 145
  # PRED: 143 [28.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
  # dtype_34 = PHI <2(143), 1(144)>
  # DEBUG dtype => dtype_34
  # SUCC: 146 [100.0%]  (fallthru,exec)

  # BLOCK 146
  # PRED: 142 [50.0%]  (false,exec) 145 [100.0%]  (fallthru,exec)
  # dtype_16 = PHI <dtype_33(142), dtype_34(145)>
  # DEBUG dtype => dtype_16
  # DEBUG xtype => 4
  D.43397_464 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_464 > 0)
    goto <bb 147>;
  else
    goto <bb 149>;
  # SUCC: 147 [73.0%]  (true,exec) 149 [27.0%]  (false,exec)

  # BLOCK 147
  # PRED: 146 [73.0%]  (true,exec)
  D.43099_465 = smh_46->mparams;
  D.43448_466 = D.43099_465->rtcp_audio_interval_msec;
  if (D.43448_466 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;
  # SUCC: 148 [85.0%]  (true,exec) 149 [15.0%]  (false,exec)

  # BLOCK 148
  # PRED: 147 [85.0%]  (true,exec)
  # DEBUG xtype => 12
  # SUCC: 149 [100.0%]  (fallthru,exec)

  # BLOCK 149
  # PRED: 146 [27.0%]  (false,exec) 147 [15.0%]  (false,exec) 148 [100.0%]  (fallthru,exec)
  # xtype_15 = PHI <4(146), 4(147), 12(148)>
  # DEBUG xtype => xtype_15
  D.43077_468 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43451_469 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
  D.43452_470 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
  D.43453_471 = dtype_16 | xtype_15;
  switch_rtp_add_dtls (D.43077_468, D.43451_469, D.43452_470, D.43453_471);
  D.43397_472 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_472 <= 0)
    goto <bb 150>;
  else
    goto <bb 152>;
  # SUCC: 150 [27.0%]  (true,exec) 152 [73.0%]  (false,exec)

  # BLOCK 150
  # PRED: 149 [27.0%]  (true,exec)
  D.43099_473 = smh_46->mparams;
  D.43448_474 = D.43099_473->rtcp_audio_interval_msec;
  if (D.43448_474 != 0B)
    goto <bb 151>;
  else
    goto <bb 152>;
  # SUCC: 151 [69.8%]  (true,exec) 152 [30.2%]  (false,exec)

  # BLOCK 151
  # PRED: 150 [69.8%]  (true,exec)
  # DEBUG xtype => 8
  D.43077_476 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43451_477 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
  D.43452_478 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
  D.43453_479 = dtype_16 | 8;
  switch_rtp_add_dtls (D.43077_476, D.43451_477, D.43452_478, D.43453_479);
  # SUCC: 152 [100.0%]  (fallthru,exec)

  # BLOCK 152 freq:14
  # PRED: 137 [71.0%]  (false,exec) 138 [71.0%]  (false,exec) 139 [71.0%]  (false,exec) 149 [73.0%]  (false,exec) 150 [30.2%]  (false,exec) 151 [100.0%]  (fallthru,exec)
  D.43073_480 = session_45(D)->channel;
  val_481 = switch_channel_get_variable_dup (D.43073_480, "jitterbuffer_msec", 1, -1);
  # DEBUG val => val_481
  if (val_481 != 0B)
    goto <bb 154>;
  else
    goto <bb 153>;
  # SUCC: 154 [69.8%]  (true,exec) 153 [30.2%]  (false,exec)

  # BLOCK 153 freq:4
  # PRED: 152 [30.2%]  (false,exec)
  D.43099_482 = smh_46->mparams;
  val_483 = D.43099_482->jb_msec;
  # DEBUG val => val_483
  if (val_483 != 0B)
    goto <bb 154>;
  else
    goto <bb 171>;
  # SUCC: 154 [85.0%]  (true,exec) 171 [15.0%]  (false,exec)

  # BLOCK 154 freq:13
  # PRED: 152 [69.8%]  (true,exec) 153 [85.0%]  (true,exec)
  # val_2 = PHI <val_481(152), val_483(153)>
  # DEBUG val => val_2
  # DEBUG __nptr => val_2
  jb_msec_1342 = strtol (val_2, 0B, 10);
  # DEBUG jb_msec => NULL
  # DEBUG maxlen => 0
  # DEBUG max_drift => 0
  p_487 = __builtin_strchr (val_2, 58);
  # DEBUG p => p_487
  if (p_487 != 0B)
    goto <bb 155>;
  else
    goto <bb 157>;
  # SUCC: 155 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

  # BLOCK 155 freq:9
  # PRED: 154 [69.8%]  (true,exec)
  p_488 = p_487 + 1;
  # DEBUG p => p_488
  # DEBUG __nptr => p_488
  maxlen_1343 = strtol (p_488, 0B, 10);
  # DEBUG maxlen => NULL
  q_490 = __builtin_strchr (p_488, 58);
  # DEBUG q => q_490
  if (q_490 != 0B)
    goto <bb 156>;
  else
    goto <bb 157>;
  # SUCC: 156 [69.8%]  (true,exec) 157 [30.2%]  (false,exec)

  # BLOCK 156 freq:7
  # PRED: 155 [69.8%]  (true,exec)
  q_491 = q_490 + 1;
  # DEBUG q => q_491
  # DEBUG __nptr => q_491
  D.48102_1344 = strtol (q_491, 0B, 10);
  max_drift_493 = ABS_EXPR <D.48102_1344>;
  # DEBUG max_drift => max_drift_493
  # SUCC: 157 [100.0%]  (fallthru,exec)

  # BLOCK 157 freq:13
  # PRED: 154 [30.2%]  (false,exec) 155 [30.2%]  (false,exec) 156 [100.0%]  (fallthru,exec)
  # maxlen_18 = PHI <0(154), maxlen_1343(155), maxlen_1343(156)>
  # max_drift_19 = PHI <0(154), 0(155), max_drift_493(156)>
  # DEBUG max_drift => max_drift_19
  # DEBUG maxlen => maxlen_18
  jb_msec.54_494 = (unsigned int) jb_msec_1342;
  D.43467_495 = jb_msec.54_494 + 9;
  if (D.43467_495 <= 8)
    goto <bb 158>;
  else
    goto <bb 159>;
  # SUCC: 158 [50.0%]  (true,exec) 159 [50.0%]  (false,exec)

  # BLOCK 158 freq:7
  # PRED: 157 [50.0%]  (true,exec)
  D.43470_496 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec.implementation;
  D.43471_497 = D.43470_496->microseconds_per_packet;
  D.43472_498 = D.43471_497 / 1000;
  D.43473_499 = ABS_EXPR <jb_msec_1342>;
  jb_msec_500 = D.43472_498 * D.43473_499;
  # DEBUG jb_msec => jb_msec_500
  # SUCC: 159 [100.0%]  (fallthru,exec)

  # BLOCK 159 freq:13
  # PRED: 157 [50.0%]  (false,exec) 158 [100.0%]  (fallthru,exec)
  # jb_msec_17 = PHI <jb_msec_1342(157), jb_msec_500(158)>
  # DEBUG jb_msec => jb_msec_17
  jb_msec.54_501 = (unsigned int) jb_msec_17;
  D.43474_502 = jb_msec.54_501 + 4294967276;
  if (D.43474_502 > 9980)
    goto <bb 160>;
  else
    goto <bb 161>;
  # SUCC: 160 [29.0%]  (true,exec) 161 [71.0%]  (false,exec)

  # BLOCK 160 freq:4
  # PRED: 159 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5125, session_45(D), 3, "Invalid Jitterbuffer spec [%d] must be between 20 and 10000\n", jb_msec_17);
  goto <bb 171>;
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 161 freq:10
  # PRED: 159 [71.0%]  (false,exec)
  # DEBUG maxqlen => 50
  D.43189_504 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_505 = D.43189_504 / 1000;
  qlen_506 = jb_msec_17 / D.43190_505;
  # DEBUG qlen => qlen_506
  if (qlen_506 <= 0)
    goto <bb 162>;
  else
    goto <bb 163>;
  # SUCC: 162 [27.0%]  (true,exec) 163 [73.0%]  (false,exec)

  # BLOCK 162 freq:3
  # PRED: 161 [27.0%]  (true,exec)
  # DEBUG qlen => 3
  # SUCC: 163 [100.0%]  (fallthru,exec)

  # BLOCK 163 freq:10
  # PRED: 161 [73.0%]  (false,exec) 162 [100.0%]  (fallthru,exec)
  # qlen_20 = PHI <qlen_506(161), 3(162)>
  # DEBUG qlen => qlen_20
  if (maxlen_18 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;
  # SUCC: 164 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

  # BLOCK 164 freq:5
  # PRED: 163 [50.0%]  (true,exec)
  D.43189_508 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_509 = D.43189_508 / 1000;
  maxqlen_510 = maxlen_18 / D.43190_509;
  # DEBUG maxqlen => maxqlen_510
  # SUCC: 165 [100.0%]  (fallthru,exec)

  # BLOCK 165 freq:10
  # PRED: 163 [50.0%]  (false,exec) 164 [100.0%]  (fallthru,exec)
  # maxqlen_21 = PHI <50(163), maxqlen_510(164)>
  # DEBUG maxqlen => maxqlen_21
  if (maxqlen_21 < qlen_20)
    goto <bb 166>;
  else
    goto <bb 167>;
  # SUCC: 166 [50.0%]  (true,exec) 167 [50.0%]  (false,exec)

  # BLOCK 166 freq:5
  # PRED: 165 [50.0%]  (true,exec)
  maxqlen_511 = qlen_20 * 5;
  # DEBUG maxqlen => maxqlen_511
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167 freq:10
  # PRED: 165 [50.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
  # maxqlen_22 = PHI <maxqlen_21(165), maxqlen_511(166)>
  # DEBUG maxqlen => maxqlen_22
  D.43077_512 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  qlen.55_513 = (uint32_t) qlen_20;
  maxqlen.56_514 = (uint32_t) maxqlen_22;
  D.43294_515 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43486_516 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  max_drift.57_517 = (uint32_t) max_drift_19;
  D.43488_518 = switch_rtp_activate_jitter_buffer (D.43077_512, qlen.55_513, maxqlen.56_514, D.43294_515, D.43486_516, max_drift.57_517);
  if (D.43488_518 == 0)
    goto <bb 168>;
  else
    goto <bb 170>;
  # SUCC: 168 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 168 freq:5
  # PRED: 167 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5146, session_45(D), 7, "Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);
  D.43073_519 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_519, 57, 1);
  D.43073_520 = session_45(D)->channel;
  D.43491_521 = switch_channel_get_variable_dup (D.43073_520, "rtp_jitter_buffer_plc", 1, -1);
  D.43492_522 = switch_false (D.43491_521);
  if (D.43492_522 == 0)
    goto <bb 169>;
  else
    goto <bb 171>;
  # SUCC: 169 [29.0%]  (true,exec) 171 [71.0%]  (false,exec)

  # BLOCK 169 freq:1
  # PRED: 168 [29.0%]  (true,exec)
  D.43073_523 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_523, 58, 1);
  goto <bb 171>;
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 170 freq:5
  # PRED: 167 [50.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5153, session_45(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);
  # SUCC: 171 [100.0%]  (fallthru,exec)

  # BLOCK 171 freq:14
  # PRED: 153 [15.0%]  (false,exec) 160 [100.0%]  (fallthru,exec) 169 [100.0%]  (fallthru,exec) 170 [100.0%]  (fallthru,exec) 168 [71.0%]  (false,exec)
  D.43073_524 = session_45(D)->channel;
  val_525 = switch_channel_get_variable_dup (D.43073_524, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_525
  if (val_525 != 0B)
    goto <bb 172>;
  else
    goto <bb 174>;
  # SUCC: 172 [69.8%]  (true,exec) 174 [30.2%]  (false,exec)

  # BLOCK 172 freq:10
  # PRED: 171 [69.8%]  (true,exec)
  # DEBUG __nptr => val_525
  v_1345 = strtol (val_525, 0B, 10);
  # DEBUG v => NULL
  if (v_1345 >= 0)
    goto <bb 173>;
  else
    goto <bb 174>;
  # SUCC: 173 [73.0%]  (true,exec) 174 [27.0%]  (false,exec)

  # BLOCK 173 freq:7
  # PRED: 172 [73.0%]  (true,exec)
  D.43099_527 = smh_46->mparams;
  v.58_528 = (uint32_t) v_1345;
  D.43099_527->rtp_timeout_sec = v.58_528;
  # SUCC: 174 [100.0%]  (fallthru,exec)

  # BLOCK 174 freq:14
  # PRED: 171 [30.2%]  (false,exec) 172 [27.0%]  (false,exec) 173 [100.0%]  (fallthru,exec)
  D.43073_529 = session_45(D)->channel;
  val_530 = switch_channel_get_variable_dup (D.43073_529, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_530
  if (val_530 != 0B)
    goto <bb 175>;
  else
    goto <bb 177>;
  # SUCC: 175 [69.8%]  (true,exec) 177 [30.2%]  (false,exec)

  # BLOCK 175 freq:10
  # PRED: 174 [69.8%]  (true,exec)
  # DEBUG __nptr => val_530
  v_1346 = strtol (val_530, 0B, 10);
  # DEBUG v => NULL
  if (v_1346 >= 0)
    goto <bb 176>;
  else
    goto <bb 177>;
  # SUCC: 176 [73.0%]  (true,exec) 177 [27.0%]  (false,exec)

  # BLOCK 176 freq:7
  # PRED: 175 [73.0%]  (true,exec)
  D.43099_532 = smh_46->mparams;
  v.59_533 = (uint32_t) v_1346;
  D.43099_532->rtp_hold_timeout_sec = v.59_533;
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 177 freq:14
  # PRED: 174 [30.2%]  (false,exec) 175 [27.0%]  (false,exec) 176 [100.0%]  (fallthru,exec)
  D.43099_534 = smh_46->mparams;
  D.43506_535 = D.43099_534->rtp_timeout_sec;
  if (D.43506_535 != 0)
    goto <bb 178>;
  else
    goto <bb 180>;
  # SUCC: 178 [29.0%]  (true,exec) 180 [71.0%]  (false,exec)

  # BLOCK 178 freq:4
  # PRED: 177 [29.0%]  (true,exec)
  D.43486_536 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  D.43099_537 = smh_46->mparams;
  D.43506_538 = D.43099_537->rtp_timeout_sec;
  D.43509_539 = D.43486_536 * D.43506_538;
  D.43294_540 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43510_541 = D.43509_539 / D.43294_540;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets = D.43510_541;
  D.43077_542 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43511_543 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets;
  switch_rtp_set_max_missed_packets (D.43077_542, D.43511_543);
  D.43099_544 = smh_46->mparams;
  D.43512_545 = D.43099_544->rtp_hold_timeout_sec;
  if (D.43512_545 == 0)
    goto <bb 179>;
  else
    goto <bb 180>;
  # SUCC: 179 [50.0%]  (true,exec) 180 [50.0%]  (false,exec)

  # BLOCK 179 freq:2
  # PRED: 178 [50.0%]  (true,exec)
  D.43099_547 = smh_46->mparams;
  D.43506_548 = D.43099_547->rtp_timeout_sec;
  D.43515_549 = D.43506_548 * 10;
  D.43099_547->rtp_hold_timeout_sec = D.43515_549;
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 180 freq:14
  # PRED: 177 [71.0%]  (false,exec) 178 [50.0%]  (false,exec) 179 [100.0%]  (fallthru,exec)
  D.43099_550 = smh_46->mparams;
  D.43512_551 = D.43099_550->rtp_hold_timeout_sec;
  if (D.43512_551 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;
  # SUCC: 181 [50.0%]  (true,exec) 182 [50.0%]  (false,exec)

  # BLOCK 181 freq:7
  # PRED: 180 [50.0%]  (true,exec)
  D.43486_552 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  D.43099_553 = smh_46->mparams;
  D.43512_554 = D.43099_553->rtp_hold_timeout_sec;
  D.43518_555 = D.43486_552 * D.43512_554;
  D.43294_556 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43519_557 = D.43518_555 / D.43294_556;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_hold_packets = D.43519_557;
  # SUCC: 182 [100.0%]  (fallthru,exec)

  # BLOCK 182 freq:14
  # PRED: 180 [50.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
  D.43099_558 = smh_46->mparams;
  D.43520_559 = D.43099_558->te;
  if (D.43520_559 != 0)
    goto <bb 183>;
  else
    goto <bb 184>;
  # SUCC: 183 [29.0%]  (true,exec) 184 [71.0%]  (false,exec)

  # BLOCK 183 freq:4
  # PRED: 182 [29.0%]  (true,exec)
  D.43099_560 = smh_46->mparams;
  D.43520_561 = D.43099_560->te;
  D.43523_562 = (int) D.43520_561;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5188, session_45(D), 7, "Set 2833 dtmf send payload to %u\n", D.43523_562);
  D.43077_563 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_564 = smh_46->mparams;
  D.43520_565 = D.43099_564->te;
  switch_rtp_set_telephony_event (D.43077_563, D.43520_565);
  D.43073_566 = session_45(D)->channel;
  D.43099_567 = smh_46->mparams;
  D.43520_568 = D.43099_567->te;
  D.43523_569 = (int) D.43520_568;
  switch_channel_set_variable_printf (D.43073_566, "rtp_2833_send_payload", "%d", D.43523_569);
  # SUCC: 184 [100.0%]  (fallthru,exec)

  # BLOCK 184 freq:14
  # PRED: 182 [71.0%]  (false,exec) 183 [100.0%]  (fallthru,exec)
  D.43099_570 = smh_46->mparams;
  D.43524_571 = D.43099_570->recv_te;
  if (D.43524_571 != 0)
    goto <bb 185>;
  else
    goto <bb 186>;
  # SUCC: 185 [29.0%]  (true,exec) 186 [71.0%]  (false,exec)

  # BLOCK 185 freq:4
  # PRED: 184 [29.0%]  (true,exec)
  D.43099_572 = smh_46->mparams;
  D.43524_573 = D.43099_572->recv_te;
  D.43527_574 = (int) D.43524_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5194, session_45(D), 7, "Set 2833 dtmf receive payload to %u\n", D.43527_574);
  D.43077_575 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_576 = smh_46->mparams;
  D.43524_577 = D.43099_576->recv_te;
  switch_rtp_set_telephony_recv_event (D.43077_575, D.43524_577);
  D.43073_578 = session_45(D)->channel;
  D.43099_579 = smh_46->mparams;
  D.43524_580 = D.43099_579->recv_te;
  D.43527_581 = (int) D.43524_580;
  switch_channel_set_variable_printf (D.43073_578, "rtp_2833_recv_payload", "%d", D.43527_581);
  # SUCC: 186 [100.0%]  (fallthru,exec)

  # BLOCK 186 freq:14
  # PRED: 184 [71.0%]  (false,exec) 185 [100.0%]  (fallthru,exec)
  D.43531_582 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43531_582 != 0)
    goto <bb 191>;
  else
    goto <bb 187>;
  # SUCC: 191 [71.0%]  (true,exec) 187 [29.0%]  (false,exec)

  # BLOCK 187 freq:4
  # PRED: 186 [29.0%]  (false,exec)
  D.43073_583 = session_45(D)->channel;
  val_584 = switch_channel_get_variable_dup (D.43073_583, "supress_cng", 1, -1);
  # DEBUG val => val_584
  if (val_584 != 0B)
    goto <bb 188>;
  else
    goto <bb 189>;
  # SUCC: 188 [85.0%]  (true,exec) 189 [15.0%]  (false,exec)

  # BLOCK 188 freq:3
  # PRED: 187 [85.0%]  (true,exec)
  D.43534_585 = switch_true (val_584);
  if (D.43534_585 != 0)
    goto <bb 191>;
  else
    goto <bb 189>;
  # SUCC: 191 [50.0%]  (true,exec) 189 [50.0%]  (false,exec)

  # BLOCK 189 freq:2
  # PRED: 187 [15.0%]  (false,exec) 188 [50.0%]  (false,exec)
  D.43073_586 = session_45(D)->channel;
  val_587 = switch_channel_get_variable_dup (D.43073_586, "suppress_cng", 1, -1);
  # DEBUG val => val_587
  if (val_587 != 0B)
    goto <bb 190>;
  else
    goto <bb 192>;
  # SUCC: 190 [69.8%]  (true,exec) 192 [30.2%]  (false,exec)

  # BLOCK 190 freq:2
  # PRED: 189 [69.8%]  (true,exec)
  D.43536_588 = switch_true (val_587);
  if (D.43536_588 != 0)
    goto <bb 191>;
  else
    goto <bb 192>;
  # SUCC: 191 [50.0%]  (true,exec) 192 [50.0%]  (false,exec)

  # BLOCK 191 freq:13
  # PRED: 186 [71.0%]  (true,exec) 188 [50.0%]  (true,exec) 190 [50.0%]  (true,exec)
  D.43099_589 = smh_46->mparams;
  D.43099_589->cng_pt = 0;
  # SUCC: 192 [100.0%]  (fallthru,exec)

  # BLOCK 192 freq:14
  # PRED: 189 [30.2%]  (false,exec) 190 [50.0%]  (false,exec) 191 [100.0%]  (fallthru,exec)
  D.43073_590 = session_45(D)->channel;
  val_591 = switch_channel_get_variable_dup (D.43073_590, "rtp_digit_delay", 1, -1);
  # DEBUG val => val_591
  if (val_591 != 0B)
    goto <bb 193>;
  else
    goto <bb 196>;
  # SUCC: 193 [69.8%]  (true,exec) 196 [30.2%]  (false,exec)

  # BLOCK 193 freq:10
  # PRED: 192 [69.8%]  (true,exec)
  # DEBUG __nptr => val_591
  delayi_1347 = strtol (val_591, 0B, 10);
  # DEBUG delayi => NULL
  if (delayi_1347 < 0)
    goto <bb 194>;
  else
    goto <bb 195>;
  # SUCC: 194 [27.0%]  (true,exec) 195 [73.0%]  (false,exec)

  # BLOCK 194 freq:3
  # PRED: 193 [27.0%]  (true,exec)
  # DEBUG delayi => 0
  # SUCC: 195 [100.0%]  (fallthru,exec)

  # BLOCK 195 freq:10
  # PRED: 193 [73.0%]  (false,exec) 194 [100.0%]  (fallthru,exec)
  # delayi_23 = PHI <delayi_1347(193), 0(194)>
  # DEBUG delayi => delayi_23
  D.43099_594 = smh_46->mparams;
  delayi.60_595 = (unsigned int) delayi_23;
  D.43099_594->dtmf_delay = delayi.60_595;
  # SUCC: 196 [100.0%]  (fallthru,exec)

  # BLOCK 196 freq:14
  # PRED: 192 [30.2%]  (false,exec) 195 [100.0%]  (fallthru,exec)
  D.43099_596 = smh_46->mparams;
  D.43542_597 = D.43099_596->dtmf_delay;
  if (D.43542_597 != 0)
    goto <bb 197>;
  else
    goto <bb 198>;
  # SUCC: 197 [29.0%]  (true,exec) 198 [71.0%]  (false,exec)

  # BLOCK 197 freq:4
  # PRED: 196 [29.0%]  (true,exec)
  D.43077_598 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_599 = smh_46->mparams;
  D.43542_600 = D.43099_599->dtmf_delay;
  switch_rtp_set_interdigit_delay (D.43077_598, D.43542_600);
  D.43073_601 = session_45(D)->channel;
  D.43545_602 = switch_channel_get_name (D.43073_601);
  D.43099_603 = smh_46->mparams;
  D.43542_604 = D.43099_603->dtmf_delay;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5216, session_45(D), 7, "%s Set rtp dtmf delay to %u\n", D.43545_602, D.43542_604);
  # SUCC: 198 [100.0%]  (fallthru,exec)

  # BLOCK 198 freq:14
  # PRED: 196 [71.0%]  (false,exec) 197 [100.0%]  (fallthru,exec)
  D.43099_605 = smh_46->mparams;
  D.43143_606 = D.43099_605->cng_pt;
  if (D.43143_606 != 0)
    goto <bb 199>;
  else
    goto <bb 201>;
  # SUCC: 199 [29.0%]  (true,exec) 201 [71.0%]  (false,exec)

  # BLOCK 199 freq:4
  # PRED: 198 [29.0%]  (true,exec)
  D.43548_607 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43548_607 == 0)
    goto <bb 200>;
  else
    goto <bb 201>;
  # SUCC: 200 [29.0%]  (true,exec) 201 [71.0%]  (false,exec)

  # BLOCK 200 freq:1
  # PRED: 199 [29.0%]  (true,exec)
  D.43099_608 = smh_46->mparams;
  D.43143_609 = D.43099_608->cng_pt;
  D.43551_610 = (int) D.43143_609;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5222, session_45(D), 7, "Set comfort noise payload to %u\n", D.43551_610);
  D.43077_611 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_612 = smh_46->mparams;
  D.43143_613 = D.43099_612->cng_pt;
  switch_rtp_set_cng_pt (D.43077_611, D.43143_613);
  # SUCC: 201 [100.0%]  (fallthru,exec)

  # BLOCK 201 freq:14
  # PRED: 198 [71.0%]  (false,exec) 199 [71.0%]  (false,exec) 200 [100.0%]  (fallthru,exec)
  switch_core_session_apply_crypto (session_45(D), 0);
  D.43171_614 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_615 = D.43171_614->remote_sdp_port;
  D.43179_616 = (int) D.43174_615;
  switch_snprintf (&tmp, 50, "%d", D.43179_616);
  D.43073_617 = session_45(D)->channel;
  D.43171_618 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_619 = D.43171_618->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_617, "remote_media_ip", D.43172_619, 1);
  D.43073_620 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_620, "remote_media_port", &tmp, 1);
  D.43073_621 = session_45(D)->channel;
  D.43552_622 = switch_channel_test_flag (D.43073_621, 74);
  if (D.43552_622 != 0)
    goto <bb 202>;
  else
    goto <bb 203> (video);
  # SUCC: 202 [29.0%]  (true,exec) 203 [71.0%]  (false,exec)

  # BLOCK 202 freq:4
  # PRED: 201 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5234, session_45(D), 6, "Activating ZRTP PROXY MODE\n");
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5235, session_45(D), 7, "Disable NOTIMER_DURING_BRIDGE\n");
  D.43073_623 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_623, 99);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5237, session_45(D), 7, "Activating audio UDPTL mode\n");
  D.43077_624 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_udptl_mode (D.43077_624);
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 203 freq:58
  # PRED: 15 [50.0%]  (true,exec) 49 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 201 [71.0%]  (false,exec) 202 [100.0%]  (fallthru,exec) 68 [71.0%]  (false,exec)
  # status_4 = PHI <0(15), status_73(49), status_73(69), status_73(201), status_73(202), status_73(68)>
video:
  # DEBUG status => status_4
  D.43073_630 = session_45(D)->channel;
  D.43555_631 = switch_channel_direction (D.43073_630);
  if (D.43555_631 == 1)
    goto <bb 204>;
  else
    goto <bb 205>;
  # SUCC: 204 [13.7%]  (true,exec) 205 [86.3%]  (false,exec)

  # BLOCK 204 freq:8
  # PRED: 203 [13.7%]  (true,exec)
  switch_core_media_check_video_codecs (session_45(D));
  # SUCC: 205 [100.0%]  (fallthru,exec)

  # BLOCK 205 freq:58
  # PRED: 203 [86.3%]  (false,exec) 204 [100.0%]  (fallthru,exec)
  D.43073_632 = session_45(D)->channel;
  D.43558_633 = switch_channel_test_flag (D.43073_632, 98);
  if (D.43558_633 != 0)
    goto <bb 206>;
  else
    goto <bb 309> (video_up);
  # SUCC: 206 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

  # BLOCK 206 freq:29
  # PRED: 205 [50.0%]  (true,exec)
  D.43561_634 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43562_635 = D.43561_634->rm_encoding;
  if (D.43562_635 != 0B)
    goto <bb 207>;
  else
    goto <bb 309> (video_up);
  # SUCC: 207 [85.0%]  (true,exec) 309 [15.0%]  (false,exec)

  # BLOCK 207 freq:25
  # PRED: 206 [85.0%]  (true,exec)
  D.43561_636 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_637 = D.43561_636->remote_sdp_port;
  if (D.43565_637 != 0)
    goto <bb 208>;
  else
    goto <bb 309> (video_up);
  # SUCC: 208 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

  # BLOCK 208 freq:12
  # PRED: 207 [50.0%]  (true,exec)
  D.43096_638 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_638 != 0B)
    goto <bb 209>;
  else
    goto <bb 215>;
  # SUCC: 209 [85.0%]  (true,exec) 215 [15.0%]  (false,exec)

  # BLOCK 209 freq:11
  # PRED: 208 [85.0%]  (true,exec)
  D.43073_639 = session_45(D)->channel;
  D.43570_640 = switch_channel_test_flag (D.43073_639, 103);
  if (D.43570_640 != 0)
    goto <bb 210>;
  else
    goto <bb 215>;
  # SUCC: 210 [29.0%]  (true,exec) 215 [71.0%]  (false,exec)

  # BLOCK 210 freq:3
  # PRED: 209 [29.0%]  (true,exec)
  D.43096_641 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  remote_host_642 = switch_rtp_get_remote_host (D.43096_641);
  # DEBUG remote_host => remote_host_642
  D.43096_643 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  remote_port_644 = switch_rtp_get_remote_port (D.43096_643);
  # DEBUG remote_port => remote_port_644
  D.43574_645 = remote_host_642 != 0B;
  D.43575_646 = remote_port_644 != 0;
  D.43576_647 = D.43574_645 && D.43575_646;
  if (D.43576_647 != 0)
    goto <bb 211>;
  else
    goto <bb 214>;
  # SUCC: 211 [71.0%]  (true,exec) 214 [29.0%]  (false,exec)

  # BLOCK 211 freq:2
  # PRED: 210 [71.0%]  (true,exec)
  D.43561_648 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_649 = D.43561_648->remote_sdp_ip;
  D.39400_650 = __builtin_strcmp (remote_host_642, D.43578_649);
  if (D.39400_650 == 0)
    goto <bb 212>;
  else
    goto <bb 214>;
  # SUCC: 212 [50.0%]  (true,exec) 214 [50.0%]  (false,exec)

  # BLOCK 212 freq:1
  # PRED: 211 [50.0%]  (true,exec)
  D.43561_651 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_652 = D.43561_651->remote_sdp_port;
  if (D.43565_652 == remote_port_644)
    goto <bb 213>;
  else
    goto <bb 214>;
  # SUCC: 213 [13.7%]  (true,exec) 214 [86.3%]  (false,exec)

  # BLOCK 213
  # PRED: 212 [13.7%]  (true,exec)
  D.43073_653 = session_45(D)->channel;
  D.43581_654 = switch_channel_get_name (D.43073_653);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5263, session_45(D), 7, "Video params are unchanged for %s.\n", D.43581_654);
  goto <bb 309> (video_up);
  # SUCC: 309 [100.0%]  (fallthru,exec)

  # BLOCK 214 freq:3
  # PRED: 210 [29.0%]  (false,exec) 211 [50.0%]  (false,exec) 212 [86.3%]  (false,exec)
  D.43073_655 = session_45(D)->channel;
  D.43582_656 = switch_channel_get_name (D.43073_655);
  D.43583_657 = (int) remote_port_644;
  D.43561_658 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_659 = D.43561_658->remote_sdp_ip;
  D.43561_660 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_661 = D.43561_660->remote_sdp_port;
  D.43584_662 = (int) D.43565_661;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5267, session_45(D), 7, "Video params changed for %s from %s:%d to %s:%d\n", D.43582_656, remote_host_642, D.43583_657, D.43578_659, D.43584_662);
  # SUCC: 215 [100.0%]  (fallthru,exec)

  # BLOCK 215 freq:12
  # PRED: 208 [15.0%]  (false,exec) 209 [71.0%]  (false,exec) 214 [100.0%]  (fallthru,exec)
  D.43073_663 = session_45(D)->channel;
  D.43585_664 = switch_channel_test_flag (D.43073_663, 29);
  if (D.43585_664 == 0)
    goto <bb 216>;
  else
    goto <bb 218>;
  # SUCC: 216 [29.0%]  (true,exec) 218 [71.0%]  (false,exec)

  # BLOCK 216 freq:4
  # PRED: 215 [29.0%]  (true,exec)
  D.43096_665 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43588_666 = switch_rtp_ready (D.43096_665);
  if (D.43588_666 != 0)
    goto <bb 217>;
  else
    goto <bb 218>;
  # SUCC: 217 [29.0%]  (true,exec) 218 [71.0%]  (false,exec)

  # BLOCK 217 freq:1
  # PRED: 216 [29.0%]  (true,exec)
  D.43073_667 = session_45(D)->channel;
  D.43591_668 = switch_channel_get_name (D.43073_667);
  D.43171_669 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_670 = D.43171_669->remote_sdp_ip;
  D.43592_671 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_672 = (int) D.43592_671;
  D.43561_673 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_674 = D.43561_673->remote_sdp_ip;
  D.43561_675 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_676 = D.43561_675->remote_sdp_port;
  D.43584_677 = (int) D.43565_676;
  D.43561_678 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_679 = D.43561_678->agreed_pt;
  D.43595_680 = (int) D.43594_679;
  D.43189_681 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_682 = D.43189_681 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5275, session_45(D), 7, "VIDEO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43591_668, D.43172_670, D.43593_672, D.43578_674, D.43584_677, D.43595_680, D.43190_682);
  start_video_thread (session_45(D));
  D.43096_683 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_684 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_685 = D.43561_684->agreed_pt;
  switch_rtp_set_default_payload (D.43096_683, D.43594_685);
  # SUCC: 218 [100.0%]  (fallthru,exec)

  # BLOCK 218 freq:12
  # PRED: 215 [71.0%]  (false,exec) 216 [71.0%]  (false,exec) 217 [100.0%]  (fallthru,exec)
  D.43592_686 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_687 = (int) D.43592_686;
  switch_snprintf (&tmp, 50, "%d", D.43593_687);
  D.43073_688 = session_45(D)->channel;
  D.43191_689 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_688, "local_video_ip", D.43191_689, 1);
  D.43073_690 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_690, "local_video_port", &tmp, 1);
  D.43096_691 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_691 != 0B)
    goto <bb 219>;
  else
    goto <bb 230>;
  # SUCC: 219 [85.0%]  (true,exec) 230 [15.0%]  (false,exec)

  # BLOCK 219 freq:10
  # PRED: 218 [85.0%]  (true,exec)
  D.43073_692 = session_45(D)->channel;
  D.43598_693 = switch_channel_test_flag (D.43073_692, 103);
  if (D.43598_693 != 0)
    goto <bb 220>;
  else
    goto <bb 230>;
  # SUCC: 220 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

  # BLOCK 220 freq:5
  # PRED: 219 [50.0%]  (true,exec)
  # DEBUG rport => 0B
  remote_rtcp_port_695 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_695
  if (remote_rtcp_port_695 == 0)
    goto <bb 221>;
  else
    goto <bb 223>;
  # SUCC: 221 [29.0%]  (true,exec) 223 [71.0%]  (false,exec)

  # BLOCK 221 freq:2
  # PRED: 220 [29.0%]  (true,exec)
  D.43073_696 = session_45(D)->channel;
  rport_697 = switch_channel_get_variable_dup (D.43073_696, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_697
  if (rport_697 != 0B)
    goto <bb 222>;
  else
    goto <bb 223>;
  # SUCC: 222 [69.8%]  (true,exec) 223 [30.2%]  (false,exec)

  # BLOCK 222 freq:1
  # PRED: 221 [69.8%]  (true,exec)
  # DEBUG __nptr => rport_697
  D.48114_1348 = strtol (rport_697, 0B, 10);
  remote_rtcp_port_699 = (switch_port_t) D.48114_1348;
  # DEBUG remote_rtcp_port => remote_rtcp_port_699
  # SUCC: 223 [100.0%]  (fallthru,exec)

  # BLOCK 223 freq:5
  # PRED: 220 [71.0%]  (false,exec) 221 [30.2%]  (false,exec) 222 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_24 = PHI <remote_rtcp_port_695(220), remote_rtcp_port_695(221), remote_rtcp_port_699(222)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_24
  D.43096_700 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_701 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_702 = D.43561_701->remote_sdp_ip;
  D.43561_703 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_704 = D.43561_703->remote_sdp_port;
  D.43606_705 = switch_rtp_set_remote_address (D.43096_700, D.43578_702, D.43565_704, remote_rtcp_port_24, 1, &err);
  if (D.43606_705 != 0)
    goto <bb 224>;
  else
    goto <bb 225>;
  # SUCC: 224 [50.0%]  (true,exec) 225 [50.0%]  (false,exec)

  # BLOCK 224 freq:3
  # PRED: 223 [50.0%]  (true,exec)
  err.45_706 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5306, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.45_706);
  goto <bb 309> (video_up);
  # SUCC: 309 [100.0%]  (fallthru,exec)

  # BLOCK 225 freq:3
  # PRED: 223 [50.0%]  (false,exec)
  D.43561_707 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_708 = D.43561_707->remote_sdp_ip;
  D.43561_709 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_710 = D.43561_709->remote_sdp_port;
  D.43584_711 = (int) D.43565_710;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5308, session_45(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.43578_708, D.43584_711);
  D.43612_712 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43612_712 == 0)
    goto <bb 226>;
  else
    goto <bb 309> (video_up);
  # SUCC: 226 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

  # BLOCK 226 freq:1
  # PRED: 225 [29.0%]  (true,exec)
  D.43073_713 = session_45(D)->channel;
  D.43615_714 = switch_channel_test_flag (D.43073_713, 106);
  if (D.43615_714 == 0)
    goto <bb 227>;
  else
    goto <bb 309> (video_up);
  # SUCC: 227 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

  # BLOCK 227
  # PRED: 226 [29.0%]  (true,exec)
  D.43073_715 = session_45(D)->channel;
  val_716 = switch_channel_get_variable_dup (D.43073_715, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_716
  if (val_716 == 0B)
    goto <bb 229>;
  else
    goto <bb 228>;
  # SUCC: 229 [15.0%]  (true,exec) 228 [85.0%]  (false,exec)

  # BLOCK 228
  # PRED: 227 [85.0%]  (false,exec)
  D.43619_717 = switch_true (val_716);
  if (D.43619_717 == 0)
    goto <bb 229>;
  else
    goto <bb 309> (video_up);
  # SUCC: 229 [50.0%]  (true,exec) 309 [50.0%]  (false,exec)

  # BLOCK 229
  # PRED: 227 [15.0%]  (true,exec) 228 [50.0%]  (true,exec)
  D.43096_718 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_718, 7);
  start_video_thread (session_45(D));
  goto <bb 309> (video_up);
  # SUCC: 309 [100.0%]  (fallthru,exec)

  # BLOCK 230 freq:7
  # PRED: 218 [15.0%]  (false,exec) 219 [50.0%]  (false,exec)
  D.43073_719 = session_45(D)->channel;
  D.43620_720 = switch_channel_test_flag (D.43073_719, 29);
  if (D.43620_720 != 0)
    goto <bb 231>;
  else
    goto <bb 238>;
  # SUCC: 231 [50.0%]  (true,exec) 238 [50.0%]  (false,exec)

  # BLOCK 231 freq:4
  # PRED: 230 [50.0%]  (true,exec)
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43270_721 = flags[19];
  D.43271_722 = D.43270_721 + 1;
  flags[19] = D.43271_722;
  D.43102_723 = flags[13];
  D.43103_724 = D.43102_723 + 1;
  flags[13] = D.43103_724;
  D.43625_725 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43625_725 == 0)
    goto <bb 232>;
  else
    goto <bb 236>;
  # SUCC: 232 [29.0%]  (true,exec) 236 [71.0%]  (false,exec)

  # BLOCK 232 freq:1
  # PRED: 231 [29.0%]  (true,exec)
  D.43073_726 = session_45(D)->channel;
  D.43628_727 = switch_channel_test_flag (D.43073_726, 106);
  if (D.43628_727 == 0)
    goto <bb 233>;
  else
    goto <bb 236>;
  # SUCC: 233 [29.0%]  (true,exec) 236 [71.0%]  (false,exec)

  # BLOCK 233
  # PRED: 232 [29.0%]  (true,exec)
  D.43073_728 = session_45(D)->channel;
  val_729 = switch_channel_get_variable_dup (D.43073_728, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_729
  if (val_729 == 0B)
    goto <bb 235>;
  else
    goto <bb 234>;
  # SUCC: 235 [30.2%]  (true,exec) 234 [69.8%]  (false,exec)

  # BLOCK 234
  # PRED: 233 [69.8%]  (false,exec)
  D.43632_730 = switch_true (val_729);
  if (D.43632_730 == 0)
    goto <bb 235>;
  else
    goto <bb 236>;
  # SUCC: 235 [50.0%]  (true,exec) 236 [50.0%]  (false,exec)

  # BLOCK 235
  # PRED: 233 [30.2%]  (true,exec) 234 [50.0%]  (true,exec)
  D.43114_731 = flags[7];
  D.43115_732 = D.43114_731 + 1;
  flags[7] = D.43115_732;
  # SUCC: 236 [100.0%]  (fallthru,exec)

  # BLOCK 236 freq:4
  # PRED: 231 [71.0%]  (false,exec) 232 [71.0%]  (false,exec) 234 [50.0%]  (false,exec) 235 [100.0%]  (fallthru,exec)
  # DEBUG timer_name => 0B
  D.43073_734 = session_45(D)->channel;
  D.43633_735 = switch_channel_get_name (D.43073_734);
  D.43171_736 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_737 = D.43171_736->remote_sdp_ip;
  D.43592_738 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_739 = (int) D.43592_738;
  D.43561_740 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_741 = D.43561_740->remote_sdp_ip;
  D.43561_742 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_743 = D.43561_742->remote_sdp_port;
  D.43584_744 = (int) D.43565_743;
  D.43561_745 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_746 = D.43561_745->agreed_pt;
  D.43595_747 = (int) D.43594_746;
  D.43634_748 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].read_impl.microseconds_per_packet;
  D.43635_749 = D.43634_748 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5334, session_45(D), 7, "PROXY VIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43633_735, D.43172_737, D.43593_739, D.43578_741, D.43584_744, D.43595_747, D.43635_749);
  D.43096_750 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43636_751 = switch_rtp_ready (D.43096_750);
  if (D.43636_751 != 0)
    goto <bb 237>;
  else
    goto <bb 239>;
  # SUCC: 237 [29.0%]  (true,exec) 239 [71.0%]  (false,exec)

  # BLOCK 237 freq:1
  # PRED: 236 [29.0%]  (true,exec)
  D.43096_752 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_753 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_754 = D.43561_753->agreed_pt;
  switch_rtp_set_default_payload (D.43096_752, D.43594_754);
  goto <bb 239>;
  # SUCC: 239 [100.0%]  (fallthru,exec)

  # BLOCK 238 freq:4
  # PRED: 230 [50.0%]  (false,exec)
  # DEBUG D#24 => smh_46->mparams
  # DEBUG D#23 => D#24->timer_name
  # DEBUG timer_name => D#23
  D.43073_757 = session_45(D)->channel;
  switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);
  # DEBUG var => NULL
  # SUCC: 239 [100.0%]  (fallthru,exec)

  # BLOCK 239 freq:7
  # PRED: 237 [100.0%]  (fallthru,exec) 238 [100.0%]  (fallthru,exec) 236 [71.0%]  (false,exec)
  D.43096_760 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_760 != 0B)
    goto <bb 309> (video_up);
  else
    goto <bb 240>;
  # SUCC: 309 [85.0%]  (true,exec) 240 [15.0%]  (false,exec)

  # BLOCK 240 freq:1
  # PRED: 239 [15.0%]  (false,exec)
  D.43592_761 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  if (D.43592_761 == 0)
    goto <bb 241>;
  else
    goto <bb 242>;
  # SUCC: 241 [29.0%]  (true,exec) 242 [71.0%]  (false,exec)

  # BLOCK 241
  # PRED: 240 [29.0%]  (true,exec)
  switch_core_media_choose_port (session_45(D), 1, 1);
  # SUCC: 242 [100.0%]  (fallthru,exec)

  # BLOCK 242 freq:1
  # PRED: 240 [71.0%]  (false,exec) 241 [100.0%]  (fallthru,exec)
  memset (&flags, 0, 156);
  D.43102_762 = flags[13];
  D.43103_763 = D.43102_762 + 1;
  flags[13] = D.43103_763;
  D.43137_764 = flags[8];
  D.43138_765 = D.43137_764 + 1;
  flags[8] = D.43138_765;
  D.43647_766 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43647_766 == 0)
    goto <bb 243>;
  else
    goto <bb 248>;
  # SUCC: 243 [29.0%]  (true,exec) 248 [71.0%]  (false,exec)

  # BLOCK 243
  # PRED: 242 [29.0%]  (true,exec)
  D.43073_767 = session_45(D)->channel;
  D.43650_768 = switch_channel_test_flag (D.43073_767, 15);
  if (D.43650_768 == 0)
    goto <bb 244>;
  else
    goto <bb 248>;
  # SUCC: 244 [29.0%]  (true,exec) 248 [71.0%]  (false,exec)

  # BLOCK 244
  # PRED: 243 [29.0%]  (true,exec)
  D.43073_769 = session_45(D)->channel;
  val_770 = switch_channel_get_variable_dup (D.43073_769, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_770
  if (val_770 == 0B)
    goto <bb 246>;
  else
    goto <bb 245>;
  # SUCC: 246 [15.0%]  (true,exec) 245 [85.0%]  (false,exec)

  # BLOCK 245
  # PRED: 244 [85.0%]  (false,exec)
  D.43654_771 = switch_true (val_770);
  if (D.43654_771 == 0)
    goto <bb 246>;
  else
    goto <bb 248>;
  # SUCC: 246 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 246
  # PRED: 244 [15.0%]  (true,exec) 245 [50.0%]  (true,exec)
  D.43073_772 = session_45(D)->channel;
  D.43655_773 = switch_channel_test_flag (D.43073_772, 106);
  if (D.43655_773 == 0)
    goto <bb 247>;
  else
    goto <bb 248>;
  # SUCC: 247 [50.0%]  (true,exec) 248 [50.0%]  (false,exec)

  # BLOCK 247
  # PRED: 246 [50.0%]  (true,exec)
  D.43114_774 = flags[7];
  D.43115_775 = D.43114_774 + 1;
  flags[7] = D.43115_775;
  # SUCC: 248 [100.0%]  (fallthru,exec)

  # BLOCK 248 freq:1
  # PRED: 242 [71.0%]  (false,exec) 243 [71.0%]  (false,exec) 245 [50.0%]  (false,exec) 246 [50.0%]  (false,exec) 247 [100.0%]  (fallthru,exec)
  D.43073_776 = session_45(D)->channel;
  D.43658_777 = switch_channel_test_flag (D.43073_776, 29);
  if (D.43658_777 != 0)
    goto <bb 249>;
  else
    goto <bb 250>;
  # SUCC: 249 [50.0%]  (true,exec) 250 [50.0%]  (false,exec)

  # BLOCK 249 freq:1
  # PRED: 248 [50.0%]  (true,exec)
  D.43270_778 = flags[19];
  D.43271_779 = D.43270_778 + 1;
  flags[19] = D.43271_779;
  # SUCC: 250 [100.0%]  (fallthru,exec)

  # BLOCK 250 freq:1
  # PRED: 248 [50.0%]  (false,exec) 249 [100.0%]  (fallthru,exec)
  switch_core_media_set_video_codec (session_45(D), 0);
  flags[3] = 0;
  flags[0] = 0;
  D.43661_780 = flags[30];
  D.43662_781 = D.43661_780 + 1;
  flags[30] = D.43662_781;
  D.43184_782 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43592_783 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43561_784 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_785 = D.43561_784->remote_sdp_ip;
  D.43561_786 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_787 = D.43561_786->remote_sdp_port;
  D.43561_788 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_789 = D.43561_788->agreed_pt;
  D.43663_790 = switch_core_session_get_pool (session_45(D));
  D.43664_791 = switch_rtp_new (D.43184_782, D.43592_783, D.43578_785, D.43565_787, D.43594_789, 1, 90000, &flags, 0B, &err, D.43663_790);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session = D.43664_791;
  D.43073_792 = session_45(D)->channel;
  D.43666_793 = switch_channel_test_flag (D.43073_792, 29);
  if (D.43666_793 != 0)
    goto <bb 252>;
  else
    goto <bb 251>;
  # SUCC: 252 [50.0%]  (true,exec) 251 [50.0%]  (false,exec)

  # BLOCK 251 freq:1
  # PRED: 250 [50.0%]  (false,exec)
  # SUCC: 252 [100.0%]  (fallthru,exec)

  # BLOCK 252 freq:1
  # PRED: 250 [50.0%]  (true,exec) 251 [100.0%]  (fallthru,exec)
  # iftmp.61_35 = PHI <"PROXY "(250), ""(251)>
  D.43073_796 = session_45(D)->channel;
  D.43670_797 = switch_channel_get_name (D.43073_796);
  D.43171_798 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_799 = D.43171_798->remote_sdp_ip;
  D.43592_800 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_801 = (int) D.43592_800;
  D.43561_802 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_803 = D.43561_802->remote_sdp_ip;
  D.43561_804 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_805 = D.43561_804->remote_sdp_port;
  D.43584_806 = (int) D.43565_805;
  D.43561_807 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_808 = D.43561_807->agreed_pt;
  D.43595_809 = (int) D.43594_808;
  D.43096_810 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43672_811 = switch_rtp_ready (D.43096_810);
  if (D.43672_811 == 0)
    goto <bb 253>;
  else
    goto <bb 254>;
  # SUCC: 253 [50.0%]  (true,exec) 254 [50.0%]  (false,exec)

  # BLOCK 253 freq:1
  # PRED: 252 [50.0%]  (true,exec)
  iftmp.62_812 = err;
  # SUCC: 254 [100.0%]  (fallthru,exec)

  # BLOCK 254 freq:1
  # PRED: 253 [100.0%]  (fallthru,exec) 252 [50.0%]  (false,exec)
  # iftmp.62_36 = PHI <iftmp.62_812(253), "SUCCESS"(252)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5391, session_45(D), 7, "%sVIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d [%s]\n", iftmp.61_35, D.43670_797, D.43172_799, D.43593_801, D.43578_803, D.43584_806, D.43595_809, 0, iftmp.62_36);
  D.43096_814 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43676_815 = switch_rtp_ready (D.43096_814);
  if (D.43676_815 != 0)
    goto <bb 255>;
  else
    goto <bb 303>;
  # SUCC: 255 [50.0%]  (true,exec) 303 [50.0%]  (false,exec)

  # BLOCK 255 freq:1
  # PRED: 254 [50.0%]  (true,exec)
  D.43679_816 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].fir;
  if (D.43679_816 != 0)
    goto <bb 256>;
  else
    goto <bb 257>;
  # SUCC: 256 [29.0%]  (true,exec) 257 [71.0%]  (false,exec)

  # BLOCK 256
  # PRED: 255 [29.0%]  (true,exec)
  D.43096_817 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_817, 36);
  # SUCC: 257 [100.0%]  (fallthru,exec)

  # BLOCK 257 freq:1
  # PRED: 255 [71.0%]  (false,exec) 256 [100.0%]  (fallthru,exec)
  D.43682_818 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].pli;
  if (D.43682_818 != 0)
    goto <bb 258>;
  else
    goto <bb 259>;
  # SUCC: 258 [29.0%]  (true,exec) 259 [71.0%]  (false,exec)

  # BLOCK 258
  # PRED: 257 [29.0%]  (true,exec)
  D.43096_819 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_819, 37);
  # SUCC: 259 [100.0%]  (fallthru,exec)

  # BLOCK 259 freq:1
  # PRED: 257 [71.0%]  (false,exec) 258 [100.0%]  (fallthru,exec)
  D.43096_820 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43685_821 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].payload_map;
  switch_rtp_set_payload_map (D.43096_820, D.43685_821);
  start_video_thread (session_45(D));
  D.43073_822 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_822, 23, 1);
  D.43073_823 = session_45(D)->channel;
  ssrc_824 = switch_channel_get_variable_dup (D.43073_823, "rtp_use_video_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_824
  if (ssrc_824 != 0B)
    goto <bb 260>;
  else
    goto <bb 261>;
  # SUCC: 260 [85.0%]  (true,exec) 261 [15.0%]  (false,exec)

  # BLOCK 260
  # PRED: 259 [85.0%]  (true,exec)
  ssrc_ul_825 = strtoul (ssrc_824, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_825
  D.43096_826 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_ssrc (D.43096_826, ssrc_ul_825);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = ssrc_ul_825;
  goto <bb 262>;
  # SUCC: 262 [100.0%]  (fallthru,exec)

  # BLOCK 261
  # PRED: 259 [15.0%]  (false,exec)
  D.43096_827 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43689_828 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
  switch_rtp_set_ssrc (D.43096_827, D.43689_828);
  # SUCC: 262 [100.0%]  (fallthru,exec)

  # BLOCK 262 freq:1
  # PRED: 260 [100.0%]  (fallthru,exec) 261 [100.0%]  (fallthru,exec)
  D.43690_829 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
  if (D.43690_829 != 0)
    goto <bb 263>;
  else
    goto <bb 264>;
  # SUCC: 263 [29.0%]  (true,exec) 264 [71.0%]  (false,exec)

  # BLOCK 263
  # PRED: 262 [29.0%]  (true,exec)
  D.43096_830 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43690_831 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43096_830, D.43690_831);
  # SUCC: 264 [100.0%]  (fallthru,exec)

  # BLOCK 264 freq:1
  # PRED: 262 [71.0%]  (false,exec) 263 [100.0%]  (fallthru,exec)
  D.43693_832 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43694_833 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_832][0].ready;
  if (D.43694_833 != 0)
    goto <bb 265>;
  else
    goto <bb 268>;
  # SUCC: 265 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

  # BLOCK 265
  # PRED: 264 [29.0%]  (true,exec)
  gen_ice (session_45(D), 1, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5433, session_45(D), 6, "Activating Video ICE\n");
  D.43096_834 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43697_835 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
  D.43698_836 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
  D.43699_837 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
  D.43700_838 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
  D.43702_839 = switch_ice_direction (session_45(D));
  if (D.43702_839 == 1)
    goto <bb 267>;
  else
    goto <bb 266>;
  # SUCC: 267 [28.0%]  (true,exec) 266 [72.0%]  (false,exec)

  # BLOCK 266
  # PRED: 265 [72.0%]  (false,exec)
  # SUCC: 267 [100.0%]  (fallthru,exec)

  # BLOCK 267
  # PRED: 265 [28.0%]  (true,exec) 266 [100.0%]  (fallthru,exec)
  # iftmp.63_37 = PHI <2(265), 6(266)>
  D.43706_842 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
  switch_rtp_activate_ice (D.43096_834, D.43697_835, D.43698_836, D.43699_837, D.43700_838, 0, iftmp.63_37, D.43706_842);
  # SUCC: 268 [100.0%]  (fallthru,exec)

  # BLOCK 268 freq:1
  # PRED: 264 [71.0%]  (false,exec) 267 [100.0%]  (fallthru,exec)
  D.43073_843 = session_45(D)->channel;
  val_844 = switch_channel_get_variable_dup (D.43073_843, "rtcp_video_interval_msec", 1, -1);
  # DEBUG val => val_844
  if (val_844 != 0B)
    goto <bb 270>;
  else
    goto <bb 269>;
  # SUCC: 270 [69.8%]  (true,exec) 269 [30.2%]  (false,exec)

  # BLOCK 269
  # PRED: 268 [30.2%]  (false,exec)
  D.43099_845 = smh_46->mparams;
  val_846 = D.43099_845->rtcp_video_interval_msec;
  # DEBUG val => val_846
  if (val_846 != 0B)
    goto <bb 270>;
  else
    goto <bb 285>;
  # SUCC: 270 [85.0%]  (true,exec) 285 [15.0%]  (false,exec)

  # BLOCK 270 freq:1
  # PRED: 268 [69.8%]  (true,exec) 269 [85.0%]  (true,exec)
  # val_3 = PHI <val_844(268), val_846(269)>
  # DEBUG val => val_3
  D.43073_847 = session_45(D)->channel;
  rport_848 = switch_channel_get_variable_dup (D.43073_847, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_848
  remote_port_849 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
  # DEBUG remote_port => remote_port_849
  if (rport_848 != 0B)
    goto <bb 271>;
  else
    goto <bb 272>;
  # SUCC: 271 [69.8%]  (true,exec) 272 [30.2%]  (false,exec)

  # BLOCK 271
  # PRED: 270 [69.8%]  (true,exec)
  # DEBUG __nptr => rport_848
  D.48117_1349 = strtol (rport_848, 0B, 10);
  remote_port_851 = (switch_port_t) D.48117_1349;
  # DEBUG remote_port => remote_port_851
  # SUCC: 272 [100.0%]  (fallthru,exec)

  # BLOCK 272 freq:1
  # PRED: 270 [30.2%]  (false,exec) 271 [100.0%]  (fallthru,exec)
  # remote_port_25 = PHI <remote_port_849(270), remote_port_851(271)>
  # DEBUG remote_port => remote_port_25
  D.43713_852 = strcasecmp (val_3, "passthru");
  if (D.43713_852 == 0)
    goto <bb 273>;
  else
    goto <bb 274>;
  # SUCC: 273 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

  # BLOCK 273
  # PRED: 272 [50.0%]  (true,exec)
  D.43716_853 = (int) remote_port_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5462, session_45(D), 6, "Activating VIDEO RTCP PASSTHRU PORT %d\n", D.43716_853);
  D.43096_854 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43717_855 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43718_856 = D.43717_855 > 0;
  switch_rtp_activate_rtcp (D.43096_854, -1, remote_port_25, D.43718_856);
  goto <bb 277>;
  # SUCC: 277 [100.0%]  (fallthru,exec)

  # BLOCK 274
  # PRED: 272 [50.0%]  (false,exec)
  # DEBUG __nptr => val_3
  interval_1350 = strtol (val_3, 0B, 10);
  # DEBUG interval => NULL
  interval.64_858 = (unsigned int) interval_1350;
  D.43721_859 = interval.64_858 + 4294967196;
  if (D.43721_859 > 499900)
    goto <bb 275>;
  else
    goto <bb 276>;
  # SUCC: 275 [29.0%]  (true,exec) 276 [71.0%]  (false,exec)

  # BLOCK 275
  # PRED: 274 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5467, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1350);
  # SUCC: 276 [100.0%]  (fallthru,exec)

  # BLOCK 276
  # PRED: 274 [71.0%]  (false,exec) 275 [100.0%]  (fallthru,exec)
  # DEBUG interval => 10000
  D.43716_861 = (int) remote_port_25;
  D.43717_862 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43724_863 = (int) D.43717_862;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5471, session_45(D), 6, "Activating VIDEO RTCP PORT %d mux %d\n", D.43716_861, D.43724_863);
  D.43096_864 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43717_865 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43718_866 = D.43717_865 > 0;
  switch_rtp_activate_rtcp (D.43096_864, 10000, remote_port_25, D.43718_866);
  # SUCC: 277 [100.0%]  (fallthru,exec)

  # BLOCK 277 freq:1
  # PRED: 273 [100.0%]  (fallthru,exec) 276 [100.0%]  (fallthru,exec)
  D.43725_867 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43726_868 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_867][1].ready;
  if (D.43726_868 != 0)
    goto <bb 278>;
  else
    goto <bb 285>;
  # SUCC: 278 [50.0%]  (true,exec) 285 [50.0%]  (false,exec)

  # BLOCK 278
  # PRED: 277 [50.0%]  (true,exec)
  D.43717_869 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_869 > 0)
    goto <bb 279>;
  else
    goto <bb 282>;
  # SUCC: 279 [86.9%]  (true,exec) 282 [13.1%]  (false,exec)

  # BLOCK 279
  # PRED: 278 [86.9%]  (true,exec)
  D.43725_870 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43732_871 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_870][1].con_addr;
  D.43693_872 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43733_873 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_872][0].con_addr;
  D.39417_874 = __builtin_strcmp (D.43732_871, D.43733_873);
  if (D.39417_874 == 0)
    goto <bb 280>;
  else
    goto <bb 282>;
  # SUCC: 280 [50.0%]  (true,exec) 282 [50.0%]  (false,exec)

  # BLOCK 280
  # PRED: 279 [50.0%]  (true,exec)
  D.43725_875 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43735_876 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_875][1].con_port;
  D.43693_877 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43736_878 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_877][0].con_port;
  if (D.43735_876 == D.43736_878)
    goto <bb 281>;
  else
    goto <bb 282>;
  # SUCC: 281 [13.7%]  (true,exec) 282 [86.3%]  (false,exec)

  # BLOCK 281
  # PRED: 280 [13.7%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5481, session_45(D), 6, "Skipping VIDEO RTCP ICE (Same as VIDEO RTP)\n");
  goto <bb 285>;
  # SUCC: 285 [100.0%]  (fallthru,exec)

  # BLOCK 282
  # PRED: 278 [13.1%]  (false,exec) 279 [50.0%]  (false,exec) 280 [86.3%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5484, session_45(D), 6, "Activating VIDEO RTCP ICE\n");
  D.43096_879 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43697_880 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
  D.43698_881 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
  D.43699_882 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
  D.43700_883 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
  D.43739_884 = switch_ice_direction (session_45(D));
  if (D.43739_884 == 1)
    goto <bb 284>;
  else
    goto <bb 283>;
  # SUCC: 284 [28.0%]  (true,exec) 283 [72.0%]  (false,exec)

  # BLOCK 283
  # PRED: 282 [72.0%]  (false,exec)
  # SUCC: 284 [100.0%]  (fallthru,exec)

  # BLOCK 284
  # PRED: 282 [28.0%]  (true,exec) 283 [100.0%]  (fallthru,exec)
  # iftmp.65_38 = PHI <2(282), 6(283)>
  D.43706_887 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
  switch_rtp_activate_ice (D.43096_879, D.43697_880, D.43698_881, D.43699_882, D.43700_883, 1, iftmp.65_38, D.43706_887);
  # SUCC: 285 [100.0%]  (fallthru,exec)

  # BLOCK 285 freq:1
  # PRED: 269 [15.0%]  (false,exec) 277 [50.0%]  (false,exec) 281 [100.0%]  (fallthru,exec) 284 [100.0%]  (fallthru,exec)
  D.43743_888 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint.str;
  # DEBUG s => D.43743_888
  if (D.43743_888 == 0B)
    goto <bb 288>;
  else
    goto <bb 286>;
  # SUCC: 288 [15.0%]  (true,exec) 286 [85.0%]  (false,exec)

  # BLOCK 286
  # PRED: 285 [85.0%]  (false,exec)
  D.48124_1351 = MEM[(const char *)smh_46 + 22400B];
  if (D.48124_1351 == 0)
    goto <bb 288>;
  else
    goto <bb 287>;
  # SUCC: 288 [50.0%]  (true,exec) 287 [50.0%]  (false,exec)

  # BLOCK 287
  # PRED: 286 [50.0%]  (false,exec)
  # SUCC: 288 [100.0%]  (fallthru,exec)

  # BLOCK 288 freq:1
  # PRED: 285 [15.0%]  (true,exec) 286 [50.0%]  (true,exec) 287 [100.0%]  (fallthru,exec)
  # D.48123_1352 = PHI <1(285), 1(286), 0(287)>
  if (D.48123_1352 == 0)
    goto <bb 289>;
  else
    goto <bb 299>;
  # SUCC: 289 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

  # BLOCK 289
  # PRED: 288 [29.0%]  (true,exec)
  D.43747_890 = switch_rtp_has_dtls ();
  if (D.43747_890 != 0)
    goto <bb 290>;
  else
    goto <bb 299>;
  # SUCC: 290 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

  # BLOCK 290
  # PRED: 289 [29.0%]  (true,exec)
  D.43429_891 = smh_46->session;
  D.43750_892 = dtls_ok (D.43429_891);
  if (D.43750_892 != 0)
    goto <bb 291>;
  else
    goto <bb 299>;
  # SUCC: 291 [29.0%]  (true,exec) 299 [71.0%]  (false,exec)

  # BLOCK 291
  # PRED: 290 [29.0%]  (true,exec)
  D.43429_893 = smh_46->session;
  D.43434_894 = D.43429_893->channel;
  D.43754_895 = switch_channel_direction (D.43434_894);
  if (D.43754_895 == 0)
    goto <bb 293>;
  else
    goto <bb 292>;
  # SUCC: 293 [50.0%]  (true,exec) 292 [50.0%]  (false,exec)

  # BLOCK 292
  # PRED: 291 [50.0%]  (false,exec)
  # SUCC: 293 [100.0%]  (fallthru,exec)

  # BLOCK 293
  # PRED: 291 [50.0%]  (true,exec) 292 [100.0%]  (fallthru,exec)
  # dtype_39 = PHI <1(291), 2(292)>
  # DEBUG dtype => dtype_39
  # DEBUG xtype => 4
  D.43717_900 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_900 > 0)
    goto <bb 294>;
  else
    goto <bb 296>;
  # SUCC: 294 [73.0%]  (true,exec) 296 [27.0%]  (false,exec)

  # BLOCK 294
  # PRED: 293 [73.0%]  (true,exec)
  D.43099_901 = smh_46->mparams;
  D.43760_902 = D.43099_901->rtcp_video_interval_msec;
  if (D.43760_902 != 0B)
    goto <bb 295>;
  else
    goto <bb 296>;
  # SUCC: 295 [85.0%]  (true,exec) 296 [15.0%]  (false,exec)

  # BLOCK 295
  # PRED: 294 [85.0%]  (true,exec)
  # DEBUG xtype => 12
  # SUCC: 296 [100.0%]  (fallthru,exec)

  # BLOCK 296
  # PRED: 293 [27.0%]  (false,exec) 294 [15.0%]  (false,exec) 295 [100.0%]  (fallthru,exec)
  # xtype_26 = PHI <4(293), 4(294), 12(295)>
  # DEBUG xtype => xtype_26
  D.43096_904 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43763_905 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
  D.43764_906 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
  D.43765_907 = xtype_26 | dtype_39;
  switch_rtp_add_dtls (D.43096_904, D.43763_905, D.43764_906, D.43765_907);
  D.43717_908 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_908 <= 0)
    goto <bb 297>;
  else
    goto <bb 299>;
  # SUCC: 297 [27.0%]  (true,exec) 299 [73.0%]  (false,exec)

  # BLOCK 297
  # PRED: 296 [27.0%]  (true,exec)
  D.43099_909 = smh_46->mparams;
  D.43760_910 = D.43099_909->rtcp_video_interval_msec;
  if (D.43760_910 != 0B)
    goto <bb 298>;
  else
    goto <bb 299>;
  # SUCC: 298 [69.8%]  (true,exec) 299 [30.2%]  (false,exec)

  # BLOCK 298
  # PRED: 297 [69.8%]  (true,exec)
  # DEBUG xtype => 8
  D.43096_912 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43763_913 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
  D.43764_914 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
  D.43765_915 = dtype_39 | 8;
  switch_rtp_add_dtls (D.43096_912, D.43763_913, D.43764_914, D.43765_915);
  # SUCC: 299 [100.0%]  (fallthru,exec)

  # BLOCK 299 freq:1
  # PRED: 288 [71.0%]  (false,exec) 289 [71.0%]  (false,exec) 290 [71.0%]  (false,exec) 296 [73.0%]  (false,exec) 297 [30.2%]  (false,exec) 298 [100.0%]  (fallthru,exec)
  D.43073_916 = session_45(D)->channel;
  val_917 = switch_channel_get_variable_dup (D.43073_916, "rtp_manual_video_rtp_bugs", 1, -1);
  # DEBUG val => val_917
  if (val_917 != 0B)
    goto <bb 300>;
  else
    goto <bb 301>;
  # SUCC: 300 [69.8%]  (true,exec) 301 [30.2%]  (false,exec)

  # BLOCK 300
  # PRED: 299 [69.8%]  (true,exec)
  D.43772_918 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43772_918, val_917);
  # SUCC: 301 [100.0%]  (fallthru,exec)

  # BLOCK 301 freq:1
  # PRED: 299 [30.2%]  (false,exec) 300 [100.0%]  (fallthru,exec)
  D.43096_919 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43773_920 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
  D.43099_921 = smh_46->mparams;
  D.43774_922 = D.43099_921->manual_video_rtp_bugs;
  D.43775_923 = D.43773_920 | D.43774_922;
  switch_rtp_intentional_bugs (D.43096_919, D.43775_923);
  D.43073_924 = session_45(D)->channel;
  D.43561_925 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_926 = D.43561_925->agreed_pt;
  D.43595_927 = (int) D.43594_926;
  switch_channel_set_variable_printf (D.43073_924, "rtp_use_video_pt", "%d", D.43595_927);
  D.43096_928 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43776_929 = switch_rtp_get_ssrc (D.43096_928);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = D.43776_929;
  D.43073_930 = session_45(D)->channel;
  D.43689_931 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
  switch_channel_set_variable_printf (D.43073_930, "rtp_use_video_ssrc", "%u", D.43689_931);
  switch_core_session_apply_crypto (session_45(D), 1);
  D.43073_932 = session_45(D)->channel;
  D.43777_933 = switch_channel_test_flag (D.43073_932, 74);
  if (D.43777_933 != 0)
    goto <bb 302>;
  else
    goto <bb 309> (video_up);
  # SUCC: 302 [29.0%]  (true,exec) 309 [71.0%]  (false,exec)

  # BLOCK 302
  # PRED: 301 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5542, session_45(D), 7, "Activating video UDPTL mode\n");
  D.43096_934 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_udptl_mode (D.43096_934);
  goto <bb 309> (video_up);
  # SUCC: 309 [100.0%]  (fallthru,exec)

  # BLOCK 303 freq:1
  # PRED: 254 [50.0%]  (false,exec)
  err.45_935 = err;
  if (err.45_935 != 0B)
    goto <bb 304>;
  else
    goto <bb 305>;
  # SUCC: 304 [85.0%]  (true,exec) 305 [15.0%]  (false,exec)

  # BLOCK 304
  # PRED: 303 [85.0%]  (true,exec)
  iftmp.67_936 = err;
  # SUCC: 305 [100.0%]  (fallthru,exec)

  # BLOCK 305 freq:1
  # PRED: 304 [100.0%]  (fallthru,exec) 303 [15.0%]  (false,exec)
  # iftmp.67_40 = PHI <iftmp.67_936(304), ""(303)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5547, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", iftmp.67_40);
  D.43073_938 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_938, "src/switch_core_media.c", &__func__, 5548, 27);
  goto <bb 311> (end);
  # SUCC: 311 [100.0%]  (fallthru,exec)

  # BLOCK 306 freq:35
  # PRED: 84 [71.0%]  (false,exec)
  err.45_625 = err;
  if (err.45_625 != 0B)
    goto <bb 307>;
  else
    goto <bb 308>;
  # SUCC: 307 [85.0%]  (true,exec) 308 [15.0%]  (false,exec)

  # BLOCK 307 freq:29
  # PRED: 306 [85.0%]  (true,exec)
  iftmp.68_626 = err;
  # SUCC: 308 [100.0%]  (fallthru,exec)

  # BLOCK 308 freq:35
  # PRED: 307 [100.0%]  (fallthru,exec) 306 [15.0%]  (false,exec)
  # iftmp.68_41 = PHI <iftmp.68_626(307), ""(306)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5554, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", iftmp.68_41);
  D.43073_628 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_628, "src/switch_core_media.c", &__func__, 5555, 27);
  # DEBUG status => 1
  goto <bb 311> (end);
  # SUCC: 311 [100.0%]  (fallthru,exec)

  # BLOCK 309 freq:58
  # PRED: 213 [100.0%]  (fallthru,exec) 225 [71.0%]  (false,exec) 239 [85.0%]  (true,exec) 206 [15.0%]  (false,exec) 224 [100.0%]  (fallthru,exec) 229 [100.0%]  (fallthru,exec) 228 [50.0%]  (false,exec) 226 [71.0%]  (false,exec) 205 [50.0%]  (false,exec) 301 [71.0%]  (false,exec) 302 [100.0%]  (fallthru,exec) 207 [50.0%]  (false,exec)
video_up:
  D.43262_939 = session_45(D) != 0B;
  D.43790_940 = v_engine_49 != 0B;
  D.43791_941 = D.43262_939 && D.43790_940;
  if (D.43791_941 != 0)
    goto <bb 310>;
  else
    goto <bb 311> (end);
  # SUCC: 310 [29.0%]  (true,exec) 311 [71.0%]  (false,exec)

  # BLOCK 310 freq:17
  # PRED: 309 [29.0%]  (true,exec)
  check_dtls_reinvite (session_45(D), v_engine_49);
  # SUCC: 311 [100.0%]  (fallthru,exec)

  # BLOCK 311 freq:1190
  # PRED: 11 [71.0%]  (true,exec) 15 [50.0%]  (false,exec) 16 [71.0%]  (true,exec) 305 [100.0%]  (fallthru,exec) 308 [100.0%]  (fallthru,exec) 310 [100.0%]  (fallthru,exec) 309 [71.0%]  (false,exec) 14 [71.0%]  (false,exec)
  # status_5 = PHI <0(11), 0(15), status_73(16), status_4(305), 1(308), 0(310), 0(309), 0(14)>
end:
  # DEBUG status => status_5
  D.43073_943 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_943, 103);
  switch_core_recovery_track (session_45(D));
  # SUCC: 312 [100.0%]  (fallthru,exec)

  # BLOCK 312 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 311 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
  # status_27 = PHI <1(4), 1(6), status_5(311), 1(5)>
  return status_27;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_check_dtmf_type (switch_core_media_check_dtmf_type)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 12 5 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 89.9%
  first match heuristics (ignored): 85.0%
  combined heuristics: 89.9%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 11 predicted to even probabilities
1 edges in bb 12 predicted to even probabilities

;; Function switch_core_media_check_dtmf_type

;; 
13 basic blocks, 17 edges, last basic block 13.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  12 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [89.9%]  (true,exec) 12 [10.1%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [89.9%]  (true,exec)
Successors:  7 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  9 [39.0%]  (true,exec) 10 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [39.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  11 [61.0%]  (true,exec) 12 [39.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [61.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [10.1%]  (false,exec) 7 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,exec) 10 [39.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_check_dtmf_type (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_check_dtmf_type";
  struct switch_media_handle_t * smh;
  const char * val;
  int D.43062;
  int D.43058;
  struct switch_core_media_params_t * D.43056;
  int D.43053;
  struct switch_channel_t * D.43050;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5897, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;
  # SUCC: 12 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.43050_3 = session_1(D)->channel;
  val_4 = switch_channel_get_variable_dup (D.43050_3, "dtmf_type", 1, -1);
  # DEBUG val => val_4
  if (val_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 [89.9%]  (true,exec) 12 [10.1%]  (false,exec)

  # BLOCK 6 freq:7039
  # PRED: 5 [89.9%]  (true,exec)
  D.43053_5 = strcasecmp (val_4, "rfc2833");
  if (D.43053_5 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 7 freq:2745
  # PRED: 6 [39.0%]  (true,exec)
  D.43056_6 = smh_2->mparams;
  D.43056_6->dtmf_type = 0;
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:4294
  # PRED: 6 [61.0%]  (false,exec)
  D.43058_7 = strcasecmp (val_4, "info");
  if (D.43058_7 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [39.0%]  (true,exec) 10 [61.0%]  (false,exec)

  # BLOCK 9 freq:1674
  # PRED: 8 [39.0%]  (true,exec)
  D.43056_8 = smh_2->mparams;
  D.43056_8->dtmf_type = 1;
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:2619
  # PRED: 8 [61.0%]  (false,exec)
  D.43062_9 = strcasecmp (val_4, "none");
  if (D.43062_9 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [61.0%]  (true,exec) 12 [39.0%]  (false,exec)

  # BLOCK 11 freq:1598
  # PRED: 10 [61.0%]  (true,exec)
  D.43056_10 = smh_2->mparams;
  D.43056_10->dtmf_type = 2;
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [10.1%]  (false,exec) 7 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,exec) 10 [39.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_sdp_map (switch_core_media_sdp_map)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 6 18 7 17 8 15 16 13 14 12 9 10 11
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 2, outer 1
;;  nodes: 18 17 8 15 16 13 14 12 9 10 11
;; 2 succs { 22 3 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 20 }
;; 6 succs { 7 19 }
;; 7 succs { 18 }
;; 8 succs { 9 17 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 8 19 }
;; 19 succs { 20 }
;; 20 succs { 6 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 6 18 7 17 8 15 16 13 14 12 9 10 11
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 2, outer 1
;;  nodes: 18 17 8 15 16 13 14 12 9 10 11
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_15(5), m_33(19)>
)
  (init_cond = m_15))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_15(5), m_33(19)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_2 = PHI <map_17(7), map_32(17)>
)
  (init_cond = map_17))
(analyze_evolution_in_loop 
  (loop_phi_node = map_2 = PHI <map_17(7), map_32(17)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = map_2))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = map_2))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = map_2))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
Predictions for bb 2
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 3
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 4 predicted to even probabilities
1 edges in bb 5 predicted to even probabilities
Predictions for bb 6
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 13 predicted to even probabilities
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
1 edges in bb 17 predicted to even probabilities
Predictions for bb 18
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities

;; Function switch_core_media_sdp_map

;; 
23 basic blocks, 32 edges, last basic block 23.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  22 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  4 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [10.1%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [89.9%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  20 [91.0%]  (true,exec)
Successors:  7 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [28.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  18 [91.0%]  (true,exec)
Successors:  9 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (true,exec)
Successors:  10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [15.0%]  (false,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [69.8%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  8 [15.0%]  (false,exec) 15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [100.0%]  (fallthru,dfs_back,exec)

Basic block 18 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
Successors:  8 [91.0%]  (true,exec) 19 [9.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  6 [72.0%]  (false,exec) 18 [9.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,dfs_back,exec)

Basic block 20 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [91.0%]  (true,exec) 21 [9.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [9.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_sdp_map (const char * r_sdp, struct switch_event_t * * fmtp, struct switch_event_t * * pt)
{
  char * br;
  char key[128];
  char buf[25];
  struct sdp_rtpmap_t * map;
  static const char __func__[26] = "switch_core_media_sdp_map";
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  struct switch_event_t * D.43044;
  struct switch_event_t * D.43041;
  int D.43037;
  <unnamed-unsigned:7> D.43036;
  const char * D.43031;
  const char * D.43028;
  sdp_proto_e D.43025;
  switch_status_t D.43022;
  int D.43019;
  size_t D.43018;

  # BLOCK 2 freq:451
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG parser => 0B
  D.43018_7 = strlen (r_sdp_6(D));
  D.43019_8 = (int) D.43018_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 22>;
  else
    goto <bb 3>;
  # SUCC: 22 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:354
  # PRED: 2 [78.4%]  (false,exec)
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 4 freq:36
  # PRED: 3 [10.1%]  (true,exec)
  sdp_parser_free (parser_9);
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:318
  # PRED: 3 [89.9%]  (false,exec)
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);
  m_15 = sdp_11->sdp_media;
  # DEBUG m => m_15
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:3214
  # PRED: 20 [91.0%]  (true,exec)
  D.43025_16 = m_1->m_proto;
  if (D.43025_16 == 256)
    goto <bb 7>;
  else
    goto <bb 19>;
  # SUCC: 7 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

  # BLOCK 7 freq:900
  # PRED: 6 [28.0%]  (true,exec)
  map_17 = m_1->m_rtpmaps;
  # DEBUG map => map_17
  goto <bb 18>;
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:9100
  # PRED: 18 [91.0%]  (true,exec)
  D.43028_18 = map_2->rm_encoding;
  if (D.43028_18 != 0B)
    goto <bb 9>;
  else
    goto <bb 17>;
  # SUCC: 9 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 9 freq:7735
  # PRED: 8 [85.0%]  (true,exec)
  buf = "";
  key = "";
  # DEBUG br => 0B
  D.43031_20 = map_2->rm_fmtp;
  if (D.43031_20 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 10 freq:6575
  # PRED: 9 [85.0%]  (true,exec)
  D.43031_21 = map_2->rm_fmtp;
  br_22 = strstr (D.43031_21, "bitrate=");
  # DEBUG br => br_22
  if (br_22 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:5589
  # PRED: 10 [85.0%]  (true,exec)
  br_23 = br_22 + 8;
  # DEBUG br => br_23
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:7735
  # PRED: 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  # br_3 = PHI <0B(9), br_22(10), br_23(11)>
  # DEBUG br => br_3
  D.43036_24 = map_2->rm_pt;
  D.43037_25 = (int) D.43036_24;
  switch_snprintf (&buf, 25, "%d", D.43037_25);
  if (br_3 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:6576
  # PRED: 12 [85.0%]  (true,exec)
  D.43028_26 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);
  goto <bb 15>;
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:1159
  # PRED: 12 [15.0%]  (false,exec)
  D.43028_27 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s", D.43028_27);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:7735
  # PRED: 13 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec)
  D.43041_28 = *pt_14(D);
  switch_event_add_header_string (D.43041_28, 1, &key, &buf);
  D.43031_29 = map_2->rm_fmtp;
  if (D.43031_29 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

  # BLOCK 16 freq:5401
  # PRED: 15 [69.8%]  (true,exec)
  D.43044_30 = *fmtp_13(D);
  D.43031_31 = map_2->rm_fmtp;
  switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:9100
  # PRED: 8 [15.0%]  (false,exec) 15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  map_32 = map_2->rm_next;
  # DEBUG map => map_32
  # SUCC: 18 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 18 freq:10000
  # PRED: 7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
  # map_2 = PHI <map_17(7), map_32(17)>
  # DEBUG map => map_2
  if (map_2 != 0B)
    goto <bb 8>;
  else
    goto <bb 19>;
  # SUCC: 8 [91.0%]  (true,exec) 19 [9.0%]  (false,exec)

  # BLOCK 19 freq:3214
  # PRED: 6 [72.0%]  (false,exec) 18 [9.0%]  (false,exec)
  m_33 = m_1->m_next;
  # DEBUG m => m_33
  # SUCC: 20 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 20 freq:3532
  # PRED: 5 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_15(5), m_33(19)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 21>;
  # SUCC: 6 [91.0%]  (true,exec) 21 [9.0%]  (false,exec)

  # BLOCK 21 freq:318
  # PRED: 20 [9.0%]  (false,exec)
  sdp_parser_free (parser_9);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:451
  # PRED: 2 [21.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec)
  # D.43022_4 = PHI <1(2), 1(4), 0(21)>
  return D.43022_4;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_local_sdp (switch_core_media_set_local_sdp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
1 edges in bb 11 predicted to even probabilities

;; Function switch_core_media_set_local_sdp

;; 
12 basic blocks, 15 edges, last basic block 12.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  11 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [69.8%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [30.2%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [29.0%]  (true,exec) 9 [71.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [29.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 7 [71.0%]  (false,exec)
Successors:  10 [78.3%]  (true,exec) 11 [21.6%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [78.3%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 9 [21.6%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_local_sdp (struct switch_core_session_t * session, const char * sdp_str, switch_bool_t dup)
{
  static const char __func__[32] = "switch_core_media_set_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_set_local_sdp";
  struct switch_media_handle_t * smh;
  char * D.43014;
  struct switch_channel_t * D.43013;
  struct switch_core_media_params_t * D.43008;
  struct switch_mutex_t * D.43005;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5978, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;
  # SUCC: 11 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  D.43005_4 = smh_3->sdp_mutex;
  if (D.43005_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [69.8%]  (true,exec) 7 [30.2%]  (false,exec)

  # BLOCK 6 freq:6272
  # PRED: 5 [69.8%]  (true,exec)
  D.43005_5 = smh_3->sdp_mutex;
  switch_mutex_lock (D.43005_5);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:8982
  # PRED: 5 [30.2%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.43008_6 = smh_3->mparams;
  if (dup_7(D) != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [29.0%]  (true,exec) 9 [71.0%]  (false,exec)

  # BLOCK 8 freq:2605
  # PRED: 7 [29.0%]  (true,exec)
  sdp_str_9 = switch_core_perform_session_strdup (session_2(D), sdp_str_8(D), "src/switch_core_media.c", &__func__, 5985);
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8982
  # PRED: 8 [100.0%]  (fallthru,exec) 7 [71.0%]  (false,exec)
  # sdp_str_1 = PHI <sdp_str_9(8), sdp_str_8(D)(7)>
  D.43008_6->local_sdp_str = sdp_str_1;
  D.43013_11 = session_2(D)->channel;
  D.43008_12 = smh_3->mparams;
  D.43014_13 = D.43008_12->local_sdp_str;
  switch_channel_set_variable_var_check (D.43013_11, "rtp_local_sdp_str", D.43014_13, 1);
  D.43005_14 = smh_3->sdp_mutex;
  if (D.43005_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [78.3%]  (true,exec) 11 [21.6%]  (false,exec)

  # BLOCK 10 freq:7038
  # PRED: 9 [78.3%]  (true,exec)
  D.43005_15 = smh_3->sdp_mutex;
  switch_mutex_unlock (D.43005_15);
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 9 [21.6%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_gen_local_sdp (switch_core_media_gen_local_sdp)

;; 12 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 442, latch 441
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 11
;;  header 434, latch 433
;;  depth 2, outer 6
;;  nodes: 434 433 427 431 432 428 429 430 426
;;
;; Loop 10
;;  header 316, latch 315
;;  depth 2, outer 6
;;  nodes: 316 315 312 313 314 317
;;
;; Loop 9
;;  header 368, latch 367
;;  depth 2, outer 6
;;  nodes: 368 367 328 331 334 364 365 366 361 362 363 346 359 360 356 357 358 354 355 351 352 353 349 350 347 348 343 344 345 341 342 340 338 339 336 337 332 335 333 329 330 327
;;
;; Loop 8
;;  header 280, latch 279
;;  depth 2, outer 6
;;  nodes: 280 279 277 278 281
;;
;; Loop 7
;;  header 296, latch 295
;;  depth 2, outer 6
;;  nodes: 296 295 286 289 292 294 290 293 291 287 288 285
;;
;; Loop 5
;;  header 145, latch 144
;;  depth 1, outer 0
;;  nodes: 145 144 142 143 146
;;
;; Loop 4
;;  header 122, latch 121
;;  depth 1, outer 0
;;  nodes: 122 121 119 120 123
;;
;; Loop 3
;;  header 255, latch 254
;;  depth 1, outer 0
;;  nodes: 255 254 239 243 252 253 250 251 249 246 247 248 245 244 241 242 240 238
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 1, outer 0
;;  nodes: 59 58 44 56 57 55 54 53 49 50 51 52 45 46 47 48
;;
;; Loop 1
;;  header 41, latch 40
;;  depth 1, outer 0
;;  nodes: 41 40
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 449 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 18 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 27 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 26 }
;; 22 succs { 23 26 }
;; 23 succs { 25 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { }
;; 29 succs { 34 30 }
;; 30 succs { 31 32 }
;; 31 succs { 34 32 }
;; 32 succs { 33 35 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 62 }
;; 36 succs { 37 39 }
;; 37 succs { 38 }
;; 38 succs { 41 }
;; 39 succs { 38 }
;; 40 succs { 41 }
;; 41 succs { 40 42 }
;; 42 succs { 43 62 }
;; 43 succs { 59 }
;; 44 succs { 45 58 }
;; 45 succs { 46 49 }
;; 46 succs { 47 49 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 53 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 57 }
;; 54 succs { 55 57 }
;; 55 succs { 56 58 }
;; 56 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 44 60 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 64 }
;; 63 succs { 64 }
;; 64 succs { 66 65 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 76 }
;; 68 succs { 71 69 }
;; 69 succs { 71 70 }
;; 70 succs { 71 }
;; 71 succs { 72 76 }
;; 72 succs { 74 73 }
;; 73 succs { 74 76 }
;; 74 succs { 75 449 }
;; 75 succs { 449 }
;; 76 succs { 77 79 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 449 }
;; 81 succs { 449 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 86 88 }
;; 86 succs { 87 449 }
;; 87 succs { 449 }
;; 88 succs { 91 89 }
;; 89 succs { 91 90 }
;; 90 succs { 91 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 94 }
;; 94 succs { 95 96 }
;; 95 succs { 96 }
;; 96 succs { 97 98 }
;; 97 succs { 98 }
;; 98 succs { 99 100 }
;; 99 succs { 100 }
;; 100 succs { 103 101 }
;; 101 succs { 102 108 }
;; 102 succs { 103 108 }
;; 103 succs { 106 104 }
;; 104 succs { 106 105 }
;; 105 succs { 106 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 110 109 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 112 }
;; 112 succs { 113 219 }
;; 113 succs { 114 117 }
;; 114 succs { 117 115 }
;; 115 succs { 117 116 }
;; 116 succs { 117 }
;; 117 succs { 118 125 }
;; 118 succs { 122 }
;; 119 succs { 120 121 }
;; 120 succs { 121 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 119 124 }
;; 124 succs { 125 }
;; 125 succs { 128 126 }
;; 126 succs { 128 127 }
;; 127 succs { 128 130 }
;; 128 succs { 129 130 }
;; 129 succs { 130 }
;; 130 succs { 131 133 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 138 }
;; 137 succs { 138 }
;; 138 succs { 139 140 }
;; 139 succs { 140 }
;; 140 succs { 141 148 }
;; 141 succs { 145 }
;; 142 succs { 143 144 }
;; 143 succs { 144 }
;; 144 succs { 145 }
;; 145 succs { 146 147 }
;; 146 succs { 142 147 }
;; 147 succs { 148 }
;; 148 succs { 149 150 }
;; 149 succs { 150 }
;; 150 succs { 153 151 }
;; 151 succs { 153 152 }
;; 152 succs { 153 157 }
;; 153 succs { 154 157 }
;; 154 succs { 155 156 }
;; 155 succs { 157 }
;; 156 succs { 157 }
;; 157 succs { 158 159 }
;; 158 succs { 162 }
;; 159 succs { 160 162 }
;; 160 succs { 161 162 }
;; 161 succs { 162 }
;; 162 succs { 163 168 }
;; 163 succs { 164 165 }
;; 164 succs { 165 }
;; 165 succs { 167 166 }
;; 166 succs { 167 }
;; 167 succs { 168 }
;; 168 succs { 169 170 }
;; 169 succs { 170 }
;; 170 succs { 171 172 }
;; 171 succs { 172 }
;; 172 succs { 175 173 }
;; 173 succs { 175 174 }
;; 174 succs { 175 }
;; 175 succs { 176 177 }
;; 176 succs { 177 }
;; 177 succs { 180 178 }
;; 178 succs { 180 179 }
;; 179 succs { 180 }
;; 180 succs { 181 182 }
;; 181 succs { 182 }
;; 182 succs { 183 186 }
;; 183 succs { 184 185 }
;; 184 succs { 186 }
;; 185 succs { 186 }
;; 186 succs { 187 211 }
;; 187 succs { 190 188 }
;; 188 succs { 190 189 }
;; 189 succs { 190 }
;; 190 succs { 191 198 }
;; 191 succs { 194 192 }
;; 192 succs { 194 193 }
;; 193 succs { 194 }
;; 194 succs { 195 198 }
;; 195 succs { 196 198 }
;; 196 succs { 197 198 }
;; 197 succs { 198 }
;; 198 succs { 200 199 }
;; 199 succs { 200 211 }
;; 200 succs { 203 201 }
;; 201 succs { 203 202 }
;; 202 succs { 203 }
;; 203 succs { 204 211 }
;; 204 succs { 207 205 }
;; 205 succs { 207 206 }
;; 206 succs { 207 }
;; 207 succs { 208 211 }
;; 208 succs { 209 211 }
;; 209 succs { 210 211 }
;; 210 succs { 211 }
;; 211 succs { 212 256 }
;; 212 succs { 213 256 }
;; 213 succs { 216 214 }
;; 214 succs { 216 215 }
;; 215 succs { 216 }
;; 216 succs { 217 256 }
;; 217 succs { 218 256 }
;; 218 succs { 256 }
;; 219 succs { 220 256 }
;; 220 succs { 221 224 }
;; 221 succs { 222 224 }
;; 222 succs { 223 224 }
;; 223 succs { 224 }
;; 224 succs { 228 225 }
;; 225 succs { 226 227 }
;; 226 succs { 228 227 }
;; 227 succs { 255 }
;; 228 succs { 229 231 }
;; 229 succs { 231 230 }
;; 230 succs { 231 }
;; 231 succs { 232 233 }
;; 232 succs { 234 233 }
;; 233 succs { 234 236 }
;; 234 succs { 235 236 }
;; 235 succs { 236 }
;; 236 succs { 237 256 }
;; 237 succs { 256 }
;; 238 succs { 239 240 }
;; 239 succs { 254 }
;; 240 succs { 242 241 }
;; 241 succs { 242 243 }
;; 242 succs { 243 }
;; 243 succs { 244 254 }
;; 244 succs { 245 246 }
;; 245 succs { 247 246 }
;; 246 succs { 247 249 }
;; 247 succs { 248 249 }
;; 248 succs { 249 }
;; 249 succs { 252 250 }
;; 250 succs { 251 252 }
;; 251 succs { 252 }
;; 252 succs { 253 254 }
;; 253 succs { 254 }
;; 254 succs { 255 }
;; 255 succs { 238 256 }
;; 256 succs { 257 443 }
;; 257 succs { 258 260 }
;; 258 succs { 259 260 }
;; 259 succs { 260 }
;; 260 succs { 261 262 }
;; 261 succs { 262 }
;; 262 succs { 263 264 }
;; 263 succs { 264 }
;; 264 succs { 265 443 }
;; 265 succs { 442 }
;; 266 succs { 267 268 }
;; 267 succs { 268 }
;; 268 succs { 269 271 }
;; 269 succs { 270 271 }
;; 270 succs { 274 271 }
;; 271 succs { 274 272 }
;; 272 succs { 273 274 }
;; 273 succs { 274 }
;; 274 succs { 275 283 }
;; 275 succs { 276 297 }
;; 276 succs { 280 }
;; 277 succs { 278 279 }
;; 278 succs { 279 }
;; 279 succs { 280 }
;; 280 succs { 281 282 }
;; 281 succs { 277 282 }
;; 282 succs { 297 }
;; 283 succs { 284 297 }
;; 284 succs { 296 }
;; 285 succs { 286 287 }
;; 286 succs { 295 }
;; 287 succs { 288 290 }
;; 288 succs { 289 290 }
;; 289 succs { 295 }
;; 290 succs { 291 294 }
;; 291 succs { 292 293 }
;; 292 succs { 295 }
;; 293 succs { 294 }
;; 294 succs { 295 }
;; 295 succs { 296 }
;; 296 succs { 285 297 }
;; 297 succs { 298 325 }
;; 298 succs { 299 300 }
;; 299 succs { 300 }
;; 300 succs { 301 302 }
;; 301 succs { 302 }
;; 302 succs { 303 304 }
;; 303 succs { 308 }
;; 304 succs { 305 306 }
;; 305 succs { 306 }
;; 306 succs { 308 307 }
;; 307 succs { 308 }
;; 308 succs { 309 310 }
;; 309 succs { 310 }
;; 310 succs { 311 319 }
;; 311 succs { 316 }
;; 312 succs { 313 315 }
;; 313 succs { 314 315 }
;; 314 succs { 315 }
;; 315 succs { 316 }
;; 316 succs { 317 318 }
;; 317 succs { 312 318 }
;; 318 succs { 319 }
;; 319 succs { 320 369 }
;; 320 succs { 321 322 }
;; 321 succs { 322 }
;; 322 succs { 324 323 }
;; 323 succs { 324 }
;; 324 succs { 369 }
;; 325 succs { 326 369 }
;; 326 succs { 368 }
;; 327 succs { 328 329 }
;; 328 succs { 367 }
;; 329 succs { 330 332 }
;; 330 succs { 331 332 }
;; 331 succs { 367 }
;; 332 succs { 333 336 }
;; 333 succs { 334 335 }
;; 334 succs { 367 }
;; 335 succs { 336 }
;; 336 succs { 337 338 }
;; 337 succs { 338 }
;; 338 succs { 339 340 }
;; 339 succs { 340 }
;; 340 succs { 341 342 }
;; 341 succs { 343 }
;; 342 succs { 343 }
;; 343 succs { 346 344 }
;; 344 succs { 346 345 }
;; 345 succs { 346 }
;; 346 succs { 361 347 }
;; 347 succs { 348 349 }
;; 348 succs { 349 }
;; 349 succs { 350 351 }
;; 350 succs { 351 }
;; 351 succs { 354 352 }
;; 352 succs { 354 353 }
;; 353 succs { 354 }
;; 354 succs { 355 356 }
;; 355 succs { 356 }
;; 356 succs { 359 357 }
;; 357 succs { 359 358 }
;; 358 succs { 359 }
;; 359 succs { 360 361 }
;; 360 succs { 361 }
;; 361 succs { 364 362 }
;; 362 succs { 364 363 }
;; 363 succs { 364 }
;; 364 succs { 365 367 }
;; 365 succs { 366 367 }
;; 366 succs { 367 }
;; 367 succs { 368 }
;; 368 succs { 327 369 }
;; 369 succs { 371 370 }
;; 370 succs { 371 373 }
;; 371 succs { 372 373 }
;; 372 succs { 373 }
;; 373 succs { 376 374 }
;; 374 succs { 376 375 }
;; 375 succs { 376 }
;; 376 succs { 377 378 }
;; 377 succs { 378 }
;; 378 succs { 379 382 }
;; 379 succs { 380 381 }
;; 380 succs { 382 }
;; 381 succs { 382 }
;; 382 succs { 383 388 }
;; 383 succs { 385 384 }
;; 384 succs { 385 }
;; 385 succs { 387 386 }
;; 386 succs { 387 }
;; 387 succs { 388 }
;; 388 succs { 389 422 }
;; 389 succs { 390 391 }
;; 390 succs { 391 }
;; 391 succs { 392 393 }
;; 392 succs { 393 }
;; 393 succs { 394 396 }
;; 394 succs { 395 396 }
;; 395 succs { 396 }
;; 396 succs { 397 398 }
;; 397 succs { 398 }
;; 398 succs { 401 399 }
;; 399 succs { 401 400 }
;; 400 succs { 401 }
;; 401 succs { 402 409 }
;; 402 succs { 405 403 }
;; 403 succs { 405 404 }
;; 404 succs { 405 }
;; 405 succs { 406 409 }
;; 406 succs { 407 409 }
;; 407 succs { 408 409 }
;; 408 succs { 409 }
;; 409 succs { 411 410 }
;; 410 succs { 411 422 }
;; 411 succs { 414 412 }
;; 412 succs { 414 413 }
;; 413 succs { 414 }
;; 414 succs { 415 422 }
;; 415 succs { 418 416 }
;; 416 succs { 418 417 }
;; 417 succs { 418 }
;; 418 succs { 419 422 }
;; 419 succs { 420 422 }
;; 420 succs { 421 422 }
;; 421 succs { 422 }
;; 422 succs { 423 435 }
;; 423 succs { 424 435 }
;; 424 succs { 425 435 }
;; 425 succs { 434 }
;; 426 succs { 428 427 }
;; 427 succs { 428 433 }
;; 428 succs { 431 429 }
;; 429 succs { 431 430 }
;; 430 succs { 431 }
;; 431 succs { 432 433 }
;; 432 succs { 433 }
;; 433 succs { 434 }
;; 434 succs { 426 435 }
;; 435 succs { 436 437 }
;; 436 succs { 437 }
;; 437 succs { 443 438 }
;; 438 succs { 443 439 }
;; 439 succs { 443 440 }
;; 440 succs { 443 441 }
;; 441 succs { 442 }
;; 442 succs { 266 443 }
;; 443 succs { 444 445 }
;; 444 succs { 445 }
;; 445 succs { 446 447 }
;; 446 succs { 447 }
;; 447 succs { 448 449 }
;; 448 succs { 449 }
;; 449 succs { 1 }
;; 12 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 442, latch 441
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 11
;;  header 434, latch 433
;;  depth 2, outer 6
;;  nodes: 434 433 427 431 432 428 429 430 426
;;
;; Loop 10
;;  header 316, latch 315
;;  depth 2, outer 6
;;  nodes: 316 315 312 313 314 317
;;
;; Loop 9
;;  header 368, latch 367
;;  depth 2, outer 6
;;  nodes: 368 367 328 331 334 364 365 366 361 362 363 346 359 360 356 357 358 354 355 351 352 353 349 350 347 348 343 344 345 341 342 340 338 339 336 337 332 335 333 329 330 327
;;
;; Loop 8
;;  header 280, latch 279
;;  depth 2, outer 6
;;  nodes: 280 279 277 278 281
;;
;; Loop 7
;;  header 296, latch 295
;;  depth 2, outer 6
;;  nodes: 296 295 286 289 292 294 290 293 291 287 288 285
;;
;; Loop 5
;;  header 145, latch 144
;;  depth 1, outer 0
;;  nodes: 145 144 142 143 146
;;
;; Loop 4
;;  header 122, latch 121
;;  depth 1, outer 0
;;  nodes: 122 121 119 120 123
;;
;; Loop 3
;;  header 255, latch 254
;;  depth 1, outer 0
;;  nodes: 255 254 239 243 252 253 250 251 249 246 247 248 245 244 241 242 240 238
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 1, outer 0
;;  nodes: 59 58 44 56 57 55 54 53 49 50 51 52 45 46 47 48
;;
;; Loop 1
;;  header 41, latch 40
;;  depth 1, outer 0
;;  nodes: 41 40
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = loops_48)
(get_scalar_evolution 
  (scalar = loops_48)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
loops_48 = PHI <loops_1201(265), loops_1128(441)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = loops_48 = PHI <loops_1201(265), loops_1128(441)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 265 
  (scalar = loops_48)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) <= 1
  bounds on difference of bases: 1 ... 1
  result:
    # of iterations 2, bounded by 2
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.42507_1125)
(get_scalar_evolution 
  (scalar = D.42507_1125)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 265 
  (scalar = D.42507_1125)
  (scalar_evolution = D.42507_1125))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = D.42507_1125)
(get_scalar_evolution 
  (scalar = D.42507_1125)
  (scalar_evolution = D.42507_1125))
(set_scalar_evolution 
  instantiated_below = 265 
  (scalar = D.42507_1125)
  (scalar_evolution = D.42507_1125))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = i_58)
(get_scalar_evolution 
  (scalar = i_58)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_58 = PHI <i_1579(425), i_1117(433)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_58 = PHI <i_1579(425), i_1117(433)>
)
(add_to_evolution 
  (loop_nb = 11)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_11))
  (evolution_function = {0, +, 1}_11))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = i_58)
  (scalar_evolution = {0, +, 1}_11))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = {0, +, 1}_11)
  (res = {0, +, 1}_11))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42486_1105 = smh_90->crypto_suite_order[i_58];
 in loop 11.
Statement D.42486_1105 = smh_90->crypto_suite_order[i_58];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 11.
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = i_1117)
(get_scalar_evolution 
  (scalar = i_1117)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = i_58)
(get_scalar_evolution 
  (scalar = i_58)
  (scalar_evolution = {0, +, 1}_11))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = i_58)
  (scalar_evolution = {0, +, 1}_11))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = i_1117)
  (scalar_evolution = {1, +, 1}_11))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = {1, +, 1}_11)
  (res = {1, +, 1}_11))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_1117 = i_58 + 1;
 in loop 11.
Statement i_1117 = i_58 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 11.
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = j_1107)
(get_scalar_evolution 
  (scalar = j_1107)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = j_1107)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = j_1107)
(get_scalar_evolution 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = j_1107)
(get_scalar_evolution 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = j_1107)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = j_1107)
(get_scalar_evolution 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = j_1107)
  (scalar_evolution = j_1107))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = i_58)
(get_scalar_evolution 
  (scalar = i_58)
  (scalar_evolution = {0, +, 1}_11))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = i_58)
  (scalar_evolution = {0, +, 1}_11))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = {0, +, 1}_11)
  (res = {0, +, 1}_11))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42486_1106 = smh_90->crypto_suite_order[i_58];
 in loop 11.
Statement D.42486_1106 = smh_90->crypto_suite_order[i_58];
 is probably executed at most 9 (bounded by 9) + 1 times in loop 11.
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = D.42486_1106)
(get_scalar_evolution 
  (scalar = D.42486_1106)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = D.42486_1106)
  (scalar_evolution = D.42486_1106))
)
(instantiate_scev 
  (instantiate_below = 425)
  (evolution_loop = 11)
  (chrec = D.42486_1106)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = D.42486_1106)
(get_scalar_evolution 
  (scalar = D.42486_1106)
  (scalar_evolution = D.42486_1106))
(set_scalar_evolution 
  instantiated_below = 425 
  (scalar = D.42486_1106)
  (scalar_evolution = D.42486_1106))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = D.42240_844)
(get_scalar_evolution 
  (scalar = D.42240_844)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 311 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = D.42240_844)
(get_scalar_evolution 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
(set_scalar_evolution 
  instantiated_below = 311 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = pmap_51)
(get_scalar_evolution 
  (scalar = pmap_51)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_51 = PHI <pmap_843(311), pmap_857(315)>
)
  (init_cond = pmap_843))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_51 = PHI <pmap_843(311), pmap_857(315)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 311 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = pmap_51)
(get_scalar_evolution 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
(set_scalar_evolution 
  instantiated_below = 311 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = D.41587_875)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_927)
(get_scalar_evolution 
  (scalar = i_927)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_52)
(get_scalar_evolution 
  (scalar = i_52)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_52 = PHI <0(326), i_927(367)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_52 = PHI <0(326), i_927(367)>
)
(add_to_evolution 
  (loop_nb = 9)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_9))
  (evolution_function = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_927)
  (scalar_evolution = {1, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = {1, +, 1}_9)
  (res = {1, +, 1}_9))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_927 = i_52 + 1;
 in loop 9.
Statement i_927 = i_52 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_52)
(get_scalar_evolution 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = {0, +, 1}_9)
  (res = {0, +, 1}_9))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42306_915 = smh_90->fmtps[i_52];
 in loop 9.
Statement D.42306_915 = smh_90->fmtps[i_52];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_52)
(get_scalar_evolution 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = {0, +, 1}_9)
  (res = {0, +, 1}_9))
Induction variable (int) 0 + 1 * iteration does not wrap in statement fmtp_916 = smh_90->fmtps[i_52];
 in loop 9.
Statement fmtp_916 = smh_90->fmtps[i_52];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = ianacode_879)
(get_scalar_evolution 
  (scalar = ianacode_879)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.42262_878)
(get_scalar_evolution 
  (scalar = D.42262_878)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.42262_878)
  (scalar_evolution = D.42262_878))
)
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = ianacode_879)
  (scalar_evolution = (uint32_t) D.42262_878))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = (uint32_t) D.42262_878)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.42262_878)
(get_scalar_evolution 
  (scalar = D.42262_878)
  (scalar_evolution = D.42262_878))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.42262_878)
  (scalar_evolution = D.42262_878))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = ianacode_879)
(get_scalar_evolution 
  (scalar = ianacode_879)
  (scalar_evolution = (uint32_t) D.42262_878))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = ianacode_879)
  (scalar_evolution = (uint32_t) D.42262_878))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = (uint32_t) D.42262_878)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.42262_878)
(get_scalar_evolution 
  (scalar = D.42262_878)
  (scalar_evolution = D.42262_878))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = D.42262_878)
  (scalar_evolution = D.42262_878))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_52)
(get_scalar_evolution 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = {0, +, 1}_9)
  (res = {0, +, 1}_9))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_876 = smh_90->codecs[i_52];
 in loop 9.
Statement imp_876 = smh_90->codecs[i_52];
 is executed at most 49 (bounded by 49) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_52)
(get_scalar_evolution 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 326 
  (scalar = i_52)
  (scalar_evolution = {0, +, 1}_9))
)
(instantiate_scev 
  (instantiate_below = 326)
  (evolution_loop = 9)
  (chrec = {0, +, 1}_9)
  (res = {0, +, 1}_9))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42262_878 = smh_90->ianacodes[i_52];
 in loop 9.
Statement D.42262_878 = smh_90->ianacodes[i_52];
 is executed at most 49 (bounded by 49) + 1 times in loop 9.
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.42158_752)
(get_scalar_evolution 
  (scalar = D.42158_752)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 276 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.42158_752)
(get_scalar_evolution 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
(set_scalar_evolution 
  instantiated_below = 276 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = pmap_49)
(get_scalar_evolution 
  (scalar = pmap_49)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_49 = PHI <pmap_751(276), pmap_762(279)>
)
  (init_cond = pmap_751))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_49 = PHI <pmap_751(276), pmap_762(279)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 276 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = pmap_49)
(get_scalar_evolution 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
(set_scalar_evolution 
  instantiated_below = 276 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = D.41587_768)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_790)
(get_scalar_evolution 
  (scalar = i_790)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_50 = PHI <0(284), i_790(295)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_50 = PHI <0(284), i_790(295)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_7))
  (evolution_function = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_790)
  (scalar_evolution = {1, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {1, +, 1}_7)
  (res = {1, +, 1}_7))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_790 = i_50 + 1;
 in loop 7.
Statement i_790 = i_50 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42171_786 = smh_90->ianacodes[i_50];
 in loop 7.
Statement D.42171_786 = smh_90->ianacodes[i_50];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42171_775 = smh_90->ianacodes[i_50];
 in loop 7.
Statement D.42171_775 = smh_90->ianacodes[i_50];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42171_780 = smh_90->ianacodes[i_50];
 in loop 7.
Statement D.42171_780 = smh_90->ianacodes[i_50];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42175_781)
(get_scalar_evolution 
  (scalar = D.42175_781)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42171_780)
(get_scalar_evolution 
  (scalar = D.42171_780)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42171_780)
  (scalar_evolution = D.42171_780))
)
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42175_781)
  (scalar_evolution = (int) D.42171_780))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = (int) D.42171_780)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42171_780)
(get_scalar_evolution 
  (scalar = D.42171_780)
  (scalar_evolution = D.42171_780))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42171_780)
  (scalar_evolution = D.42171_780))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.42171_777 = smh_90->ianacodes[i_50];
 in loop 7.
Statement D.42171_777 = smh_90->ianacodes[i_50];
 is probably executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42175_778)
(get_scalar_evolution 
  (scalar = D.42175_778)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42171_777)
(get_scalar_evolution 
  (scalar = D.42171_777)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42171_777)
  (scalar_evolution = D.42171_777))
)
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42175_778)
  (scalar_evolution = (int) D.42171_777))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = (int) D.42171_777)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.42171_777)
(get_scalar_evolution 
  (scalar = D.42171_777)
  (scalar_evolution = D.42171_777))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = D.42171_777)
  (scalar_evolution = D.42171_777))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_50)
(get_scalar_evolution 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 284 
  (scalar = i_50)
  (scalar_evolution = {0, +, 1}_7))
)
(instantiate_scev 
  (instantiate_below = 284)
  (evolution_loop = 7)
  (chrec = {0, +, 1}_7)
  (res = {0, +, 1}_7))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_769 = smh_90->codecs[i_50];
 in loop 7.
Statement imp_769 = smh_90->codecs[i_50];
 is executed at most 49 (bounded by 49) + 1 times in loop 7.
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41757_390)
(get_scalar_evolution 
  (scalar = D.41757_390)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 141 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41757_390)
(get_scalar_evolution 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
(set_scalar_evolution 
  instantiated_below = 141 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = pmap_35)
(get_scalar_evolution 
  (scalar = pmap_35)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_35 = PHI <pmap_389(141), pmap_402(144)>
)
  (init_cond = pmap_389))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_35 = PHI <pmap_389(141), pmap_402(144)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 141 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = pmap_35)
(get_scalar_evolution 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
(set_scalar_evolution 
  instantiated_below = 141 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41757_307)
(get_scalar_evolution 
  (scalar = D.41757_307)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41757_307)
(get_scalar_evolution 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = pmap_34)
(get_scalar_evolution 
  (scalar = pmap_34)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_34 = PHI <pmap_306(118), pmap_317(121)>
)
  (init_cond = pmap_306))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_34 = PHI <pmap_306(118), pmap_317(121)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = pmap_34)
(get_scalar_evolution 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
(set_scalar_evolution 
  instantiated_below = 118 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(instantiate_scev 
  (instantiate_below = 227)
  (evolution_loop = 3)
  (chrec = D.41587_655)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_688)
(get_scalar_evolution 
  (scalar = i_688)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_38)
(get_scalar_evolution 
  (scalar = i_38)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_38 = PHI <i_1104(227), i_688(254)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_38 = PHI <i_1104(227), i_688(254)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = i_38)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = i_688)
  (scalar_evolution = {1, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 227)
  (evolution_loop = 3)
  (chrec = {1, +, 1}_3)
  (res = {1, +, 1}_3))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_688 = i_38 + 1;
 in loop 3.
Statement i_688 = i_38 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_38)
(get_scalar_evolution 
  (scalar = i_38)
  (scalar_evolution = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 227 
  (scalar = i_38)
  (scalar_evolution = {0, +, 1}_3))
)
(instantiate_scev 
  (instantiate_below = 227)
  (evolution_loop = 3)
  (chrec = {0, +, 1}_3)
  (res = {0, +, 1}_3))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_656 = smh_90->codecs[i_38];
 in loop 3.
Statement imp_656 = smh_90->codecs[i_38];
 is executed at most 49 (bounded by 49) + 1 times in loop 3.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = D.41587_166)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_37 = PHI <0(43), i_213(58)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_37 = PHI <0(43), i_213(58)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.41590_207 = smh_90->ianacodes[i_37];
 in loop 2.
Statement D.41590_207 = smh_90->ianacodes[i_37];
 is executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41632_210)
(get_scalar_evolution 
  (scalar = D.41632_210)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41632_210)
  (scalar_evolution = D.41632_210))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = D.41632_210)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41632_210)
(get_scalar_evolution 
  (scalar = D.41632_210)
  (scalar_evolution = D.41632_210))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41632_210)
  (scalar_evolution = D.41632_210))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41633_211)
(get_scalar_evolution 
  (scalar = D.41633_211)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41633_211)
  (scalar_evolution = D.41633_211))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = D.41633_211)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41633_211)
(get_scalar_evolution 
  (scalar = D.41633_211)
  (scalar_evolution = D.41633_211))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41633_211)
  (scalar_evolution = D.41633_211))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_213)
(get_scalar_evolution 
  (scalar = i_213)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_213)
  (scalar_evolution = {1, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {1, +, 1}_2)
  (res = {1, +, 1}_2))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_213 = i_37 + 1;
 in loop 2.
Statement i_213 = i_37 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement imp_167 = smh_90->codecs[i_37];
 in loop 2.
Statement imp_167 = smh_90->codecs[i_37];
 is executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.41590_168 = smh_90->ianacodes[i_37];
 in loop 2.
Statement D.41590_168 = smh_90->ianacodes[i_37];
 is executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement smh_90->fmtps[i_37] = D.41628_200;
 in loop 2.
Statement smh_90->fmtps[i_37] = D.41628_200;
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement smh_90->ianacodes[i_37] = D.41629_202;
 in loop 2.
Statement smh_90->ianacodes[i_37] = D.41629_202;
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_37)
(get_scalar_evolution 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = i_37)
  (scalar_evolution = {0, +, 1}_2))
)
(instantiate_scev 
  (instantiate_below = 43)
  (evolution_loop = 2)
  (chrec = {0, +, 1}_2)
  (res = {0, +, 1}_2))
Induction variable (int) 0 + 1 * iteration does not wrap in statement smh_90->ianacodes[i_37] = orig_pt.26_197;
 in loop 2.
Statement smh_90->ianacodes[i_37] = orig_pt.26_197;
 is probably executed at most 49 (bounded by 49) + 1 times in loop 2.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(instantiate_scev 
  (instantiate_below = 38)
  (evolution_loop = 1)
  (chrec = D.41587_159)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
  (res = scev_not_known))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_36)
(get_scalar_evolution 
  (scalar = i_36)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_36 = PHI <i_1577(38), i_162(40)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_36 = PHI <i_1577(38), i_162(40)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = i_36)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 38)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement D.41585_160 = smh_90->codecs[i_36];
 in loop 1.
Statement D.41585_160 = smh_90->codecs[i_36];
 is executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_36)
(get_scalar_evolution 
  (scalar = i_36)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = i_36)
  (scalar_evolution = {0, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 38)
  (evolution_loop = 1)
  (chrec = {0, +, 1}_1)
  (res = {0, +, 1}_1))
Induction variable (int) 0 + 1 * iteration does not wrap in statement smh_90->ianacodes[i_36] = D.41586_161;
 in loop 1.
Statement smh_90->ianacodes[i_36] = D.41586_161;
 is executed at most 49 (bounded by 49) + 1 times in loop 1.
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_162)
(get_scalar_evolution 
  (scalar = i_162)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_36)
(get_scalar_evolution 
  (scalar = i_36)
  (scalar_evolution = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = i_36)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 38 
  (scalar = i_162)
  (scalar_evolution = {1, +, 1}_1))
)
(instantiate_scev 
  (instantiate_below = 38)
  (evolution_loop = 1)
  (chrec = {1, +, 1}_1)
  (res = {1, +, 1}_1))
Induction variable (int) 1 + 1 * iteration does not wrap in statement i_162 = i_36 + 1;
 in loop 1.
Statement i_162 = i_36 + 1;
 is executed at most 2147483646 (bounded by 2147483646) + 1 times in loop 1.
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 12
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 13
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 16
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 17
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 18
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 19
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 22
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 23
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 25 predicted to even probabilities
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 30
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 33
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 37 predicted to even probabilities
1 edges in bb 38 predicted to even probabilities
1 edges in bb 39 predicted to even probabilities
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 42
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 45
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 46
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 47
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 50
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 51
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 54
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 55
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 56 predicted to even probabilities
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities
Predictions for bb 59
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 60
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 61 predicted to even probabilities
Predictions for bb 62
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 63 predicted to even probabilities
Predictions for bb 64
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 65
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 66 predicted to even probabilities
Predictions for bb 67
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 68
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 69
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 70 predicted to even probabilities
Predictions for bb 71
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 72
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 73
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 74
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 75 predicted to even probabilities
Predictions for bb 76
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 77
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 78 predicted to even probabilities
Predictions for bb 79
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
Predictions for bb 80
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 81 predicted to even probabilities
Predictions for bb 82
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 83
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 84 predicted to even probabilities
Predictions for bb 85
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 86
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 87 predicted to even probabilities
Predictions for bb 88
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 89
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 90 predicted to even probabilities
Predictions for bb 91
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 92
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 93 predicted to even probabilities
Predictions for bb 94
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 95 predicted to even probabilities
Predictions for bb 96
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 97 predicted to even probabilities
Predictions for bb 98
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 99 predicted to even probabilities
Predictions for bb 100
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 101
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 102
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 103
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 104
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 105 predicted to even probabilities
Predictions for bb 106
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 107 predicted to even probabilities
Predictions for bb 108
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 109 predicted to even probabilities
Predictions for bb 110
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 111 predicted to even probabilities
Predictions for bb 112
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 113
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 114
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 115
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
1 edges in bb 116 predicted to even probabilities
Predictions for bb 117
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 118 predicted to even probabilities
Predictions for bb 119
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 120 predicted to even probabilities
1 edges in bb 121 predicted to even probabilities
Predictions for bb 122
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 123
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 124 predicted to even probabilities
Predictions for bb 125
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 126
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 127
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 128
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 129 predicted to even probabilities
Predictions for bb 130
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 131
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 132 predicted to even probabilities
Predictions for bb 133
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 134 predicted to even probabilities
Predictions for bb 135
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 136 predicted to even probabilities
1 edges in bb 137 predicted to even probabilities
Predictions for bb 138
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 139 predicted to even probabilities
Predictions for bb 140
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 141 predicted to even probabilities
Predictions for bb 142
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 143 predicted to even probabilities
1 edges in bb 144 predicted to even probabilities
Predictions for bb 145
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 146
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 147 predicted to even probabilities
Predictions for bb 148
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 149 predicted to even probabilities
Predictions for bb 150
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 151
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 152
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 153
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 154
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 155 predicted to even probabilities
1 edges in bb 156 predicted to even probabilities
Predictions for bb 157
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 158 predicted to even probabilities
Predictions for bb 159
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 160
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 161 predicted to even probabilities
Predictions for bb 162
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 163
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 164 predicted to even probabilities
Predictions for bb 165
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 166 predicted to even probabilities
1 edges in bb 167 predicted to even probabilities
Predictions for bb 168
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 169 predicted to even probabilities
Predictions for bb 170
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 171 predicted to even probabilities
Predictions for bb 172
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 173
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 174 predicted to even probabilities
Predictions for bb 175
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 176 predicted to even probabilities
Predictions for bb 177
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 178
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 179 predicted to even probabilities
Predictions for bb 180
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 181 predicted to even probabilities
Predictions for bb 182
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 183
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 184 predicted to even probabilities
1 edges in bb 185 predicted to even probabilities
Predictions for bb 186
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 187
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 188
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 189 predicted to even probabilities
Predictions for bb 190
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 191
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 192
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 193 predicted to even probabilities
Predictions for bb 194
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 195
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 196
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 197 predicted to even probabilities
Predictions for bb 198
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 199
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 200
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 201
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 202 predicted to even probabilities
Predictions for bb 203
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 204
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 205
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 206 predicted to even probabilities
Predictions for bb 207
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 208
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 209
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 210 predicted to even probabilities
Predictions for bb 211
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
Predictions for bb 212
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 213
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 214
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 215 predicted to even probabilities
Predictions for bb 216
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 217
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 218 predicted to even probabilities
Predictions for bb 219
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 220
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 221
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 222
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 223 predicted to even probabilities
Predictions for bb 224
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 225
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 226
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 227 predicted to even probabilities
Predictions for bb 228
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 229
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 230 predicted to even probabilities
Predictions for bb 231
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 232
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 233
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 234
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 235 predicted to even probabilities
Predictions for bb 236
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 237 predicted to even probabilities
Predictions for bb 238
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 239 predicted to even probabilities
Predictions for bb 240
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 241
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 242 predicted to even probabilities
Predictions for bb 243
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 244
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 245
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 246
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 247
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 248 predicted to even probabilities
Predictions for bb 249
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 250
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 251 predicted to even probabilities
Predictions for bb 252
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 253 predicted to even probabilities
1 edges in bb 254 predicted to even probabilities
Predictions for bb 255
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 256
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 257
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 258
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 259 predicted to even probabilities
Predictions for bb 260
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 261 predicted to even probabilities
Predictions for bb 262
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 263 predicted to even probabilities
Predictions for bb 264
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 265 predicted to even probabilities
Predictions for bb 266
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 267 predicted to even probabilities
Predictions for bb 268
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 269
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 270
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 271
  DS theory heuristics: 86.3%
  first match heuristics (ignored): 72.0%
  combined heuristics: 86.3%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
Predictions for bb 272
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 273 predicted to even probabilities
Predictions for bb 274
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 275
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 276 predicted to even probabilities
Predictions for bb 277
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 278 predicted to even probabilities
1 edges in bb 279 predicted to even probabilities
Predictions for bb 280
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 281
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 282 predicted to even probabilities
Predictions for bb 283
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 284 predicted to even probabilities
Predictions for bb 285
  DS theory heuristics: 86.3%
  first match heuristics (ignored): 50.0%
  combined heuristics: 86.3%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 286 predicted to even probabilities
Predictions for bb 287
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 288
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 289 predicted to even probabilities
Predictions for bb 290
  DS theory heuristics: 86.9%
  first match heuristics (ignored): 73.0%
  combined heuristics: 86.9%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
Predictions for bb 291
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 292 predicted to even probabilities
1 edges in bb 293 predicted to even probabilities
1 edges in bb 294 predicted to even probabilities
1 edges in bb 295 predicted to even probabilities
Predictions for bb 296
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 297
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 298
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 299 predicted to even probabilities
Predictions for bb 300
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 301 predicted to even probabilities
Predictions for bb 302
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
1 edges in bb 303 predicted to even probabilities
Predictions for bb 304
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 305 predicted to even probabilities
Predictions for bb 306
  DS theory heuristics: 93.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 93.3%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
1 edges in bb 307 predicted to even probabilities
Predictions for bb 308
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 309 predicted to even probabilities
Predictions for bb 310
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 311 predicted to even probabilities
Predictions for bb 312
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 313
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 314 predicted to even probabilities
1 edges in bb 315 predicted to even probabilities
Predictions for bb 316
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 317
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 318 predicted to even probabilities
Predictions for bb 319
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 320
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 321 predicted to even probabilities
Predictions for bb 322
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 323 predicted to even probabilities
1 edges in bb 324 predicted to even probabilities
Predictions for bb 325
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 326 predicted to even probabilities
Predictions for bb 327
  DS theory heuristics: 86.3%
  first match heuristics (ignored): 50.0%
  combined heuristics: 86.3%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 71.0%
  continue heuristics: 50.0%
1 edges in bb 328 predicted to even probabilities
Predictions for bb 329
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 330
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 331 predicted to even probabilities
Predictions for bb 332
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 333
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 334 predicted to even probabilities
1 edges in bb 335 predicted to even probabilities
Predictions for bb 336
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 337 predicted to even probabilities
Predictions for bb 338
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 339 predicted to even probabilities
Predictions for bb 340
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 341 predicted to even probabilities
1 edges in bb 342 predicted to even probabilities
Predictions for bb 343
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 344
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 345 predicted to even probabilities
Predictions for bb 346
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 347
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 348 predicted to even probabilities
Predictions for bb 349
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 350 predicted to even probabilities
Predictions for bb 351
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 352
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 353 predicted to even probabilities
Predictions for bb 354
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 355 predicted to even probabilities
Predictions for bb 356
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 357
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 358 predicted to even probabilities
Predictions for bb 359
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 360 predicted to even probabilities
Predictions for bb 361
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 362
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 363 predicted to even probabilities
Predictions for bb 364
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 365
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 366 predicted to even probabilities
1 edges in bb 367 predicted to even probabilities
Predictions for bb 368
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  guessed loop iterations heuristics: 98.0%
Predictions for bb 369
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 370
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 371
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 372 predicted to even probabilities
Predictions for bb 373
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 374
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 375 predicted to even probabilities
Predictions for bb 376
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 377 predicted to even probabilities
Predictions for bb 378
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 379
  DS theory heuristics: 73.0%
  first match heuristics (ignored): 73.0%
  combined heuristics: 73.0%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 380 predicted to even probabilities
1 edges in bb 381 predicted to even probabilities
Predictions for bb 382
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 383
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 384 predicted to even probabilities
Predictions for bb 385
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 386 predicted to even probabilities
1 edges in bb 387 predicted to even probabilities
Predictions for bb 388
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 389
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 390 predicted to even probabilities
Predictions for bb 391
  DS theory heuristics: 52.5%
  first match heuristics (ignored): 73.0%
  combined heuristics: 52.5%
  opcode values positive (on trees) heuristics: 73.0%
  call heuristics: 29.0%
1 edges in bb 392 predicted to even probabilities
Predictions for bb 393
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 394
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 395 predicted to even probabilities
Predictions for bb 396
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 397 predicted to even probabilities
Predictions for bb 398
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 399
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 400 predicted to even probabilities
Predictions for bb 401
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 402
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 403
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 404 predicted to even probabilities
Predictions for bb 405
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 406
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 407
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 408 predicted to even probabilities
Predictions for bb 409
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 410
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 411
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 412
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 413 predicted to even probabilities
Predictions for bb 414
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 415
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 416
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 417 predicted to even probabilities
Predictions for bb 418
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 419
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 420
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
1 edges in bb 421 predicted to even probabilities
Predictions for bb 422
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 423
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 424
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 425 predicted to even probabilities
Predictions for bb 426
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 427
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 428
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 429
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 430 predicted to even probabilities
Predictions for bb 431
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 432 predicted to even probabilities
1 edges in bb 433 predicted to even probabilities
Predictions for bb 434
  DS theory heuristics (ignored): 95.9%
  first match heuristics: 90.0%
  combined heuristics: 90.0%
  opcode values nonequal (on trees) heuristics (ignored): 72.0%
  guessed loop iterations heuristics: 90.0%
Predictions for bb 435
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 436 predicted to even probabilities
Predictions for bb 437
  DS theory heuristics (ignored): 4.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  loop exit heuristics: 2.0%
Predictions for bb 438
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 439
  DS theory heuristics (ignored): 0.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  opcode values nonequal (on trees) heuristics (ignored): 28.0%
  loop exit heuristics: 2.0%
Predictions for bb 440
  DS theory heuristics (ignored): 0.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  opcode values nonequal (on trees) heuristics (ignored): 28.0%
  loop exit heuristics: 2.0%
1 edges in bb 441 predicted to even probabilities
Predictions for bb 442
  DS theory heuristics (ignored): 23.2%
  first match heuristics: 66.7%
  combined heuristics: 66.7%
  opcode values positive (on trees) heuristics (ignored): 27.0%
  call heuristics (ignored): 29.0%
  loop iterations heuristics: 66.7%
Predictions for bb 443
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 444 predicted to even probabilities
Predictions for bb 445
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 446 predicted to even probabilities
Predictions for bb 447
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 448 predicted to even probabilities
1 edges in bb 449 predicted to even probabilities

;; Function switch_core_media_gen_local_sdp

;; 
450 basic blocks, 730 edges, last basic block 450.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  449 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [6.7%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [6.7%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [29.0%]  (true,exec)
Successors:  13 [69.8%]  (true,exec) 15 [30.2%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [69.8%]  (true,exec)
Successors:  14 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [29.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [71.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [71.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  18 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  18 [71.0%]  (true,exec) 17 [29.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [29.0%]  (false,exec)
Successors:  18 [50.0%]  (true,exec) 27 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec) 16 [71.0%]  (true,exec) 17 [50.0%]  (true,exec)
Successors:  19 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [29.0%]  (true,exec)
Successors:  20 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [29.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [71.0%]  (false,exec) 19 [71.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (true,exec)
Successors:  23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [29.0%]  (true,exec)
Successors:  25 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [50.0%]  (false,exec)
Successors:  25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [50.0%]  (true,exec) 24 [50.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  21 [71.0%]  (false,exec) 22 [71.0%]  (false,exec) 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [0.0%]  (true,exec) 29 [100.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [0.0%]  (true,exec)
Successors: 

Basic block 29 (new, reachable)
Predecessors:  27 [100.0%]  (false,exec)
Successors:  34 [71.0%]  (true,exec) 30 [29.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [29.0%]  (false,exec)
Successors:  31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [85.0%]  (true,exec)
Successors:  34 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [15.0%]  (false,exec) 31 [50.0%]  (false,exec)
Successors:  33 [69.8%]  (true,exec) 35 [30.2%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [69.8%]  (true,exec)
Successors:  34 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  29 [71.0%]  (true,exec) 31 [50.0%]  (true,exec) 33 [50.0%]  (true,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  32 [30.2%]  (false,exec) 33 [50.0%]  (false,exec) 34 [100.0%]  (fallthru,exec)
Successors:  36 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [29.0%]  (true,exec)
Successors:  37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  39 [100.0%]  (fallthru,exec) 37 [100.0%]  (fallthru,exec)
Successors:  41 [100.0%]  (fallthru)

Basic block 39 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  41 [98.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,dfs_back,exec)

Basic block 41 (new, reachable)
Predecessors:  38 [100.0%]  (fallthru) 40 [100.0%]  (fallthru,dfs_back,exec)
Successors:  40 [98.0%]  (true,exec) 42 [2.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [2.0%]  (false,exec)
Successors:  43 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [29.0%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  59 [98.0%]  (true,exec)
Successors:  45 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [50.0%]  (true,exec)
Successors:  46 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  47 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [50.0%]  (true,exec)
Successors:  48 [28.0%]  (true,exec) 49 [72.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [28.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  45 [50.0%]  (false,exec) 46 [50.0%]  (false,exec) 47 [72.0%]  (false,exec) 48 [100.0%]  (fallthru,exec)
Successors:  50 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [50.0%]  (true,exec)
Successors:  51 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [50.0%]  (true,exec)
Successors:  52 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [28.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  49 [50.0%]  (false,exec) 50 [50.0%]  (false,exec) 51 [72.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
Successors:  54 [69.8%]  (true,exec) 57 [30.2%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [69.8%]  (true,exec)
Successors:  55 [50.0%]  (true,exec) 57 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec)
Successors:  56 [69.8%]  (true,exec) 58 [30.2%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [69.8%]  (true,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  53 [30.2%]  (false,exec) 54 [50.0%]  (false,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  44 [50.0%]  (false,exec) 56 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec) 55 [30.2%]  (false,exec)
Successors:  59 [100.0%]  (fallthru,dfs_back,exec)

Basic block 59 (new, reachable)
Predecessors:  43 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,dfs_back,exec)
Successors:  44 [98.0%]  (true,exec) 60 [2.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [2.0%]  (false,exec)
Successors:  61 [69.8%]  (true,exec) 62 [30.2%]  (false,exec)

Basic block 61 (new, reachable)
Predecessors:  60 [69.8%]  (true,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 62 (new, reachable)
Predecessors:  35 [71.0%]  (false,exec) 42 [71.0%]  (false,exec) 60 [30.2%]  (false,exec) 61 [100.0%]  (fallthru,exec)
Successors:  63 [85.0%]  (true,exec) 64 [15.0%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  62 [85.0%]  (true,exec)
Successors:  64 [100.0%]  (fallthru,exec)

Basic block 64 (new, reachable)
Predecessors:  62 [15.0%]  (false,exec) 63 [100.0%]  (fallthru,exec)
Successors:  66 [15.0%]  (true,exec) 65 [85.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [85.0%]  (false,exec)
Successors:  66 [50.0%]  (true,exec) 67 [50.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  64 [15.0%]  (true,exec) 65 [50.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  65 [50.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
Successors:  68 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  71 [15.0%]  (true,exec) 69 [85.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [85.0%]  (false,exec)
Successors:  71 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  69 [50.0%]  (false,exec)
Successors:  71 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  68 [15.0%]  (true,exec) 69 [50.0%]  (true,exec) 70 [100.0%]  (fallthru,exec)
Successors:  72 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [29.0%]  (true,exec)
Successors:  74 [71.0%]  (true,exec) 73 [29.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [29.0%]  (false,exec)
Successors:  74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  72 [71.0%]  (true,exec) 73 [50.0%]  (true,exec)
Successors:  75 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [69.8%]  (true,exec)
Successors:  449 [100.0%]  (fallthru,exec)

Basic block 76 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec) 71 [71.0%]  (false,exec) 73 [50.0%]  (false,exec)
Successors:  77 [15.0%]  (true,exec) 79 [85.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [15.0%]  (true,exec)
Successors:  78 [15.0%]  (true,exec) 79 [85.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [15.0%]  (true,exec)
Successors:  79 [100.0%]  (fallthru,exec)

Basic block 79 (new, reachable)
Predecessors:  76 [85.0%]  (false,exec) 77 [85.0%]  (false,exec) 78 [100.0%]  (fallthru,exec)
Successors:  80 [6.7%]  (true,exec) 82 [93.3%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [6.7%]  (true,exec)
Successors:  81 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [69.8%]  (true,exec)
Successors:  449 [100.0%]  (fallthru,exec)

Basic block 82 (new, reachable)
Predecessors:  79 [93.3%]  (false,exec)
Successors:  83 [50.0%]  (true,exec) 85 [50.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [50.0%]  (true,exec)
Successors:  84 [50.0%]  (true,exec) 85 [50.0%]  (false,exec)

Basic block 84 (new, reachable)
Predecessors:  83 [50.0%]  (true,exec)
Successors:  85 [100.0%]  (fallthru,exec)

Basic block 85 (new, reachable)
Predecessors:  82 [50.0%]  (false,exec) 83 [50.0%]  (false,exec) 84 [100.0%]  (fallthru,exec)
Successors:  86 [29.0%]  (true,exec) 88 [71.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [29.0%]  (true,exec)
Successors:  87 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [69.8%]  (true,exec)
Successors:  449 [100.0%]  (fallthru,exec)

Basic block 88 (new, reachable)
Predecessors:  85 [71.0%]  (false,exec)
Successors:  91 [15.0%]  (true,exec) 89 [85.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [85.0%]  (false,exec)
Successors:  91 [50.0%]  (true,exec) 90 [50.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [50.0%]  (false,exec)
Successors:  91 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  88 [15.0%]  (true,exec) 89 [50.0%]  (true,exec) 90 [100.0%]  (fallthru,exec)
Successors:  92 [29.0%]  (true,exec) 94 [71.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [29.0%]  (true,exec)
Successors:  93 [85.0%]  (true,exec) 94 [15.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [85.0%]  (true,exec)
Successors:  94 [100.0%]  (fallthru,exec)

Basic block 94 (new, reachable)
Predecessors:  91 [71.0%]  (false,exec) 93 [100.0%]  (fallthru,exec) 92 [15.0%]  (false,exec)
Successors:  95 [29.0%]  (true,exec) 96 [71.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [29.0%]  (true,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 96 (new, reachable)
Predecessors:  94 [71.0%]  (false,exec) 95 [100.0%]  (fallthru,exec)
Successors:  97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [50.0%]  (true,exec)
Successors:  98 [100.0%]  (fallthru,exec)

Basic block 98 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec) 97 [100.0%]  (fallthru,exec)
Successors:  99 [29.0%]  (true,exec) 100 [71.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [29.0%]  (true,exec)
Successors:  100 [100.0%]  (fallthru,exec)

Basic block 100 (new, reachable)
Predecessors:  98 [71.0%]  (false,exec) 99 [100.0%]  (fallthru,exec)
Successors:  103 [71.0%]  (true,exec) 101 [29.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [29.0%]  (false,exec)
Successors:  102 [69.8%]  (true,exec) 108 [30.2%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [69.8%]  (true,exec)
Successors:  103 [50.0%]  (true,exec) 108 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  100 [71.0%]  (true,exec) 102 [50.0%]  (true,exec)
Successors:  106 [15.0%]  (true,exec) 104 [85.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [85.0%]  (false,exec)
Successors:  106 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [50.0%]  (false,exec)
Successors:  106 [100.0%]  (fallthru,exec)

Basic block 106 (new, reachable)
Predecessors:  103 [15.0%]  (true,exec) 104 [50.0%]  (true,exec) 105 [100.0%]  (fallthru,exec)
Successors:  107 [29.0%]  (true,exec) 108 [71.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [29.0%]  (true,exec)
Successors:  108 [100.0%]  (fallthru,exec)

Basic block 108 (new, reachable)
Predecessors:  101 [30.2%]  (false,exec) 102 [50.0%]  (false,exec) 107 [100.0%]  (fallthru,exec) 106 [71.0%]  (false,exec)
Successors:  110 [85.0%]  (true,exec) 109 [15.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [15.0%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 110 (new, reachable)
Predecessors:  108 [85.0%]  (true,exec) 109 [100.0%]  (fallthru,exec)
Successors:  111 [29.0%]  (true,exec) 112 [71.0%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  110 [29.0%]  (true,exec)
Successors:  112 [100.0%]  (fallthru,exec)

Basic block 112 (new, reachable)
Predecessors:  110 [71.0%]  (false,exec) 111 [100.0%]  (fallthru,exec)
Successors:  113 [50.0%]  (true,exec) 219 [50.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  112 [50.0%]  (true,exec)
Successors:  114 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  117 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [50.0%]  (false,exec)
Successors:  117 [72.0%]  (true,exec) 116 [28.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [28.0%]  (false,exec)
Successors:  117 [100.0%]  (fallthru)

Basic block 117 (new, reachable)
Predecessors:  115 [72.0%]  (true,exec) 116 [100.0%]  (fallthru) 114 [50.0%]  (true,exec) 113 [71.0%]  (false,exec)
Successors:  118 [29.0%]  (true,exec) 125 [71.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [29.0%]  (true,exec)
Successors:  122 [100.0%]  (fallthru,exec)

Basic block 119 (new, reachable)
Predecessors:  123 [95.5%]  (true,exec)
Successors:  120 [51.2%]  (true,exec) 121 [48.8%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [51.2%]  (true,exec)
Successors:  121 [100.0%]  (fallthru,exec)

Basic block 121 (new, reachable)
Predecessors:  119 [48.8%]  (false,exec) 120 [100.0%]  (fallthru,exec)
Successors:  122 [100.0%]  (fallthru,dfs_back,exec)

Basic block 122 (new, reachable)
Predecessors:  118 [100.0%]  (fallthru,exec) 121 [100.0%]  (fallthru,dfs_back,exec)
Successors:  123 [95.5%]  (true,exec) 124 [4.5%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  122 [95.5%]  (true,exec)
Successors:  119 [95.5%]  (true,exec) 124 [4.5%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  122 [4.5%]  (false,exec) 123 [4.5%]  (false,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 125 (new, reachable)
Predecessors:  117 [71.0%]  (false,exec) 124 [100.0%]  (fallthru,exec)
Successors:  128 [71.0%]  (true,exec) 126 [29.0%]  (false,exec)

Basic block 126 (new, reachable)
Predecessors:  125 [29.0%]  (false,exec)
Successors:  128 [71.0%]  (true,exec) 127 [29.0%]  (false,exec)

Basic block 127 (new, reachable)
Predecessors:  126 [29.0%]  (false,exec)
Successors:  128 [50.0%]  (true,exec) 130 [50.0%]  (false,exec)

Basic block 128 (new, reachable)
Predecessors:  125 [71.0%]  (true,exec) 126 [71.0%]  (true,exec) 127 [50.0%]  (true,exec)
Successors:  129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [29.0%]  (true,exec)
Successors:  130 [100.0%]  (fallthru,exec)

Basic block 130 (new, reachable)
Predecessors:  127 [50.0%]  (false,exec) 128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
Successors:  131 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

Basic block 131 (new, reachable)
Predecessors:  130 [50.0%]  (true,exec)
Successors:  132 [29.0%]  (true,exec) 133 [71.0%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [29.0%]  (true,exec)
Successors:  133 [100.0%]  (fallthru,exec)

Basic block 133 (new, reachable)
Predecessors:  130 [50.0%]  (false,exec) 131 [71.0%]  (false,exec) 132 [100.0%]  (fallthru,exec)
Successors:  134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 135 (new, reachable)
Predecessors:  133 [71.0%]  (false,exec) 134 [100.0%]  (fallthru,exec)
Successors:  136 [73.0%]  (true,exec) 137 [27.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [73.0%]  (true,exec)
Successors:  138 [100.0%]  (fallthru,exec)

Basic block 137 (new, reachable)
Predecessors:  135 [27.0%]  (false,exec)
Successors:  138 [100.0%]  (fallthru,exec)

Basic block 138 (new, reachable)
Predecessors:  136 [100.0%]  (fallthru,exec) 137 [100.0%]  (fallthru,exec)
Successors:  139 [69.8%]  (true,exec) 140 [30.2%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [69.8%]  (true,exec)
Successors:  140 [100.0%]  (fallthru,exec)

Basic block 140 (new, reachable)
Predecessors:  138 [30.2%]  (false,exec) 139 [100.0%]  (fallthru,exec)
Successors:  141 [29.0%]  (true,exec) 148 [71.0%]  (false,exec)

Basic block 141 (new, reachable)
Predecessors:  140 [29.0%]  (true,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 142 (new, reachable)
Predecessors:  146 [95.5%]  (true,exec)
Successors:  143 [51.2%]  (true,exec) 144 [48.8%]  (false,exec)

Basic block 143 (new, reachable)
Predecessors:  142 [51.2%]  (true,exec)
Successors:  144 [100.0%]  (fallthru,exec)

Basic block 144 (new, reachable)
Predecessors:  142 [48.8%]  (false,exec) 143 [100.0%]  (fallthru,exec)
Successors:  145 [100.0%]  (fallthru,dfs_back,exec)

Basic block 145 (new, reachable)
Predecessors:  141 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,dfs_back,exec)
Successors:  146 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

Basic block 146 (new, reachable)
Predecessors:  145 [95.5%]  (true,exec)
Successors:  142 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

Basic block 147 (new, reachable)
Predecessors:  145 [4.5%]  (false,exec) 146 [4.5%]  (false,exec)
Successors:  148 [100.0%]  (fallthru,exec)

Basic block 148 (new, reachable)
Predecessors:  140 [71.0%]  (false,exec) 147 [100.0%]  (fallthru,exec)
Successors:  149 [85.0%]  (true,exec) 150 [15.0%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  148 [85.0%]  (true,exec)
Successors:  150 [100.0%]  (fallthru,exec)

Basic block 150 (new, reachable)
Predecessors:  148 [15.0%]  (false,exec) 149 [100.0%]  (fallthru,exec)
Successors:  153 [71.0%]  (true,exec) 151 [29.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [29.0%]  (false,exec)
Successors:  153 [71.0%]  (true,exec) 152 [29.0%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [29.0%]  (false,exec)
Successors:  153 [50.0%]  (true,exec) 157 [50.0%]  (false,exec)

Basic block 153 (new, reachable)
Predecessors:  150 [71.0%]  (true,exec) 151 [71.0%]  (true,exec) 152 [50.0%]  (true,exec)
Successors:  154 [29.0%]  (true,exec) 157 [71.0%]  (false,exec)

Basic block 154 (new, reachable)
Predecessors:  153 [29.0%]  (true,exec)
Successors:  155 [50.0%]  (true,exec) 156 [50.0%]  (false,exec)

Basic block 155 (new, reachable)
Predecessors:  154 [50.0%]  (true,exec)
Successors:  157 [100.0%]  (fallthru,exec)

Basic block 156 (new, reachable)
Predecessors:  154 [50.0%]  (false,exec)
Successors:  157 [100.0%]  (fallthru,exec)

Basic block 157 (new, reachable)
Predecessors:  152 [50.0%]  (false,exec) 153 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec) 156 [100.0%]  (fallthru,exec)
Successors:  158 [29.0%]  (true,exec) 159 [71.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [29.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 159 (new, reachable)
Predecessors:  157 [71.0%]  (false,exec)
Successors:  160 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

Basic block 160 (new, reachable)
Predecessors:  159 [29.0%]  (true,exec)
Successors:  161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

Basic block 161 (new, reachable)
Predecessors:  160 [50.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 162 (new, reachable)
Predecessors:  158 [100.0%]  (fallthru,exec) 159 [71.0%]  (false,exec) 160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
Successors:  163 [85.0%]  (true,exec) 168 [15.0%]  (false,exec)

Basic block 163 (new, reachable)
Predecessors:  162 [85.0%]  (true,exec)
Successors:  164 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

Basic block 164 (new, reachable)
Predecessors:  163 [50.0%]  (true,exec)
Successors:  165 [100.0%]  (fallthru,exec)

Basic block 165 (new, reachable)
Predecessors:  164 [100.0%]  (fallthru,exec) 163 [50.0%]  (false,exec)
Successors:  167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  165 [72.0%]  (false,exec)
Successors:  167 [100.0%]  (fallthru,exec)

Basic block 167 (new, reachable)
Predecessors:  165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
Successors:  168 [100.0%]  (fallthru,exec)

Basic block 168 (new, reachable)
Predecessors:  162 [15.0%]  (false,exec) 167 [100.0%]  (fallthru,exec)
Successors:  169 [29.0%]  (true,exec) 170 [71.0%]  (false,exec)

Basic block 169 (new, reachable)
Predecessors:  168 [29.0%]  (true,exec)
Successors:  170 [100.0%]  (fallthru,exec)

Basic block 170 (new, reachable)
Predecessors:  168 [71.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
Successors:  171 [69.8%]  (true,exec) 172 [30.2%]  (false,exec)

Basic block 171 (new, reachable)
Predecessors:  170 [69.8%]  (true,exec)
Successors:  172 [100.0%]  (fallthru,exec)

Basic block 172 (new, reachable)
Predecessors:  170 [30.2%]  (false,exec) 171 [100.0%]  (fallthru,exec)
Successors:  175 [15.0%]  (true,exec) 173 [85.0%]  (false,exec)

Basic block 173 (new, reachable)
Predecessors:  172 [85.0%]  (false,exec)
Successors:  175 [50.0%]  (true,exec) 174 [50.0%]  (false,exec)

Basic block 174 (new, reachable)
Predecessors:  173 [50.0%]  (false,exec)
Successors:  175 [100.0%]  (fallthru,exec)

Basic block 175 (new, reachable)
Predecessors:  172 [15.0%]  (true,exec) 173 [50.0%]  (true,exec) 174 [100.0%]  (fallthru,exec)
Successors:  176 [29.0%]  (true,exec) 177 [71.0%]  (false,exec)

Basic block 176 (new, reachable)
Predecessors:  175 [29.0%]  (true,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 177 (new, reachable)
Predecessors:  175 [71.0%]  (false,exec) 176 [100.0%]  (fallthru,exec)
Successors:  180 [15.0%]  (true,exec) 178 [85.0%]  (false,exec)

Basic block 178 (new, reachable)
Predecessors:  177 [85.0%]  (false,exec)
Successors:  180 [50.0%]  (true,exec) 179 [50.0%]  (false,exec)

Basic block 179 (new, reachable)
Predecessors:  178 [50.0%]  (false,exec)
Successors:  180 [100.0%]  (fallthru,exec)

Basic block 180 (new, reachable)
Predecessors:  177 [15.0%]  (true,exec) 178 [50.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
Successors:  181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

Basic block 181 (new, reachable)
Predecessors:  180 [29.0%]  (true,exec)
Successors:  182 [100.0%]  (fallthru,exec)

Basic block 182 (new, reachable)
Predecessors:  180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
Successors:  183 [85.0%]  (true,exec) 186 [15.0%]  (false,exec)

Basic block 183 (new, reachable)
Predecessors:  182 [85.0%]  (true,exec)
Successors:  184 [73.0%]  (true,exec) 185 [27.0%]  (false,exec)

Basic block 184 (new, reachable)
Predecessors:  183 [73.0%]  (true,exec)
Successors:  186 [100.0%]  (fallthru,exec)

Basic block 185 (new, reachable)
Predecessors:  183 [27.0%]  (false,exec)
Successors:  186 [100.0%]  (fallthru,exec)

Basic block 186 (new, reachable)
Predecessors:  182 [15.0%]  (false,exec) 184 [100.0%]  (fallthru,exec) 185 [100.0%]  (fallthru,exec)
Successors:  187 [29.0%]  (true,exec) 211 [71.0%]  (false,exec)

Basic block 187 (new, reachable)
Predecessors:  186 [29.0%]  (true,exec)
Successors:  190 [15.0%]  (true,exec) 188 [85.0%]  (false,exec)

Basic block 188 (new, reachable)
Predecessors:  187 [85.0%]  (false,exec)
Successors:  190 [50.0%]  (true,exec) 189 [50.0%]  (false,exec)

Basic block 189 (new, reachable)
Predecessors:  188 [50.0%]  (false,exec)
Successors:  190 [100.0%]  (fallthru,exec)

Basic block 190 (new, reachable)
Predecessors:  187 [15.0%]  (true,exec) 188 [50.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
Successors:  191 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 191 (new, reachable)
Predecessors:  190 [50.0%]  (true,exec)
Successors:  194 [15.0%]  (true,exec) 192 [85.0%]  (false,exec)

Basic block 192 (new, reachable)
Predecessors:  191 [85.0%]  (false,exec)
Successors:  194 [50.0%]  (true,exec) 193 [50.0%]  (false,exec)

Basic block 193 (new, reachable)
Predecessors:  192 [50.0%]  (false,exec)
Successors:  194 [100.0%]  (fallthru,exec)

Basic block 194 (new, reachable)
Predecessors:  191 [15.0%]  (true,exec) 192 [50.0%]  (true,exec) 193 [100.0%]  (fallthru,exec)
Successors:  195 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 195 (new, reachable)
Predecessors:  194 [50.0%]  (true,exec)
Successors:  196 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 196 (new, reachable)
Predecessors:  195 [50.0%]  (true,exec)
Successors:  197 [51.2%]  (true,exec) 198 [48.8%]  (false,exec)

Basic block 197 (new, reachable)
Predecessors:  196 [51.2%]  (true,exec)
Successors:  198 [100.0%]  (fallthru,exec)

Basic block 198 (new, reachable)
Predecessors:  190 [50.0%]  (false,exec) 194 [50.0%]  (false,exec) 195 [50.0%]  (false,exec) 196 [48.8%]  (false,exec) 197 [100.0%]  (fallthru,exec)
Successors:  200 [50.0%]  (true,exec) 199 [50.0%]  (false,exec)

Basic block 199 (new, reachable)
Predecessors:  198 [50.0%]  (false,exec)
Successors:  200 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

Basic block 200 (new, reachable)
Predecessors:  198 [50.0%]  (true,exec) 199 [50.0%]  (true,exec)
Successors:  203 [15.0%]  (true,exec) 201 [85.0%]  (false,exec)

Basic block 201 (new, reachable)
Predecessors:  200 [85.0%]  (false,exec)
Successors:  203 [50.0%]  (true,exec) 202 [50.0%]  (false,exec)

Basic block 202 (new, reachable)
Predecessors:  201 [50.0%]  (false,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 203 (new, reachable)
Predecessors:  200 [15.0%]  (true,exec) 201 [50.0%]  (true,exec) 202 [100.0%]  (fallthru,exec)
Successors:  204 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

Basic block 204 (new, reachable)
Predecessors:  203 [50.0%]  (true,exec)
Successors:  207 [15.0%]  (true,exec) 205 [85.0%]  (false,exec)

Basic block 205 (new, reachable)
Predecessors:  204 [85.0%]  (false,exec)
Successors:  207 [50.0%]  (true,exec) 206 [50.0%]  (false,exec)

Basic block 206 (new, reachable)
Predecessors:  205 [50.0%]  (false,exec)
Successors:  207 [100.0%]  (fallthru,exec)

Basic block 207 (new, reachable)
Predecessors:  204 [15.0%]  (true,exec) 205 [50.0%]  (true,exec) 206 [100.0%]  (fallthru,exec)
Successors:  208 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

Basic block 208 (new, reachable)
Predecessors:  207 [50.0%]  (true,exec)
Successors:  209 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

Basic block 209 (new, reachable)
Predecessors:  208 [50.0%]  (true,exec)
Successors:  210 [51.2%]  (true,exec) 211 [48.8%]  (false,exec)

Basic block 210 (new, reachable)
Predecessors:  209 [51.2%]  (true,exec)
Successors:  211 [100.0%]  (fallthru,exec)

Basic block 211 (new, reachable)
Predecessors:  186 [71.0%]  (false,exec) 199 [50.0%]  (false,exec) 203 [50.0%]  (false,exec) 207 [50.0%]  (false,exec) 208 [50.0%]  (false,exec) 209 [48.8%]  (false,exec) 210 [100.0%]  (fallthru,exec)
Successors:  212 [51.2%]  (true,exec) 256 [48.8%]  (false,exec)

Basic block 212 (new, reachable)
Predecessors:  211 [51.2%]  (true,exec)
Successors:  213 [50.0%]  (true,exec) 256 [50.0%]  (false,exec)

Basic block 213 (new, reachable)
Predecessors:  212 [50.0%]  (true,exec)
Successors:  216 [15.0%]  (true,exec) 214 [85.0%]  (false,exec)

Basic block 214 (new, reachable)
Predecessors:  213 [85.0%]  (false,exec)
Successors:  216 [50.0%]  (true,exec) 215 [50.0%]  (false,exec)

Basic block 215 (new, reachable)
Predecessors:  214 [50.0%]  (false,exec)
Successors:  216 [100.0%]  (fallthru,exec)

Basic block 216 (new, reachable)
Predecessors:  213 [15.0%]  (true,exec) 214 [50.0%]  (true,exec) 215 [100.0%]  (fallthru,exec)
Successors:  217 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

Basic block 217 (new, reachable)
Predecessors:  216 [29.0%]  (true,exec)
Successors:  218 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

Basic block 218 (new, reachable)
Predecessors:  217 [29.0%]  (true,exec)
Successors:  256 [100.0%]  (fallthru,exec)

Basic block 219 (new, reachable)
Predecessors:  112 [50.0%]  (false,exec)
Successors:  220 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

Basic block 220 (new, reachable)
Predecessors:  219 [29.0%]  (true,exec)
Successors:  221 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

Basic block 221 (new, reachable)
Predecessors:  220 [50.0%]  (true,exec)
Successors:  222 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

Basic block 222 (new, reachable)
Predecessors:  221 [50.0%]  (true,exec)
Successors:  223 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

Basic block 223 (new, reachable)
Predecessors:  222 [50.0%]  (true,exec)
Successors:  224 [100.0%]  (fallthru,exec)

Basic block 224 (new, reachable)
Predecessors:  220 [50.0%]  (false,exec) 221 [50.0%]  (false,exec) 222 [50.0%]  (false,exec) 223 [100.0%]  (fallthru,exec)
Successors:  228 [29.0%]  (true,exec) 225 [71.0%]  (false,exec)

Basic block 225 (new, reachable)
Predecessors:  224 [71.0%]  (false,exec)
Successors:  226 [69.8%]  (true,exec) 227 [30.2%]  (false,exec)

Basic block 226 (new, reachable)
Predecessors:  225 [69.8%]  (true,exec)
Successors:  228 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

Basic block 227 (new, reachable)
Predecessors:  226 [50.0%]  (false,exec) 225 [30.2%]  (false,exec)
Successors:  255 [100.0%]  (fallthru)

Basic block 228 (new, reachable)
Predecessors:  224 [29.0%]  (true,exec) 226 [50.0%]  (true,exec)
Successors:  229 [29.0%]  (true,exec) 231 [71.0%]  (false,exec)

Basic block 229 (new, reachable)
Predecessors:  228 [29.0%]  (true,exec)
Successors:  231 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

Basic block 230 (new, reachable)
Predecessors:  229 [50.0%]  (false,exec)
Successors:  231 [100.0%]  (fallthru)

Basic block 231 (new, reachable)
Predecessors:  229 [50.0%]  (true,exec) 230 [100.0%]  (fallthru) 228 [71.0%]  (false,exec)
Successors:  232 [50.0%]  (true,exec) 233 [50.0%]  (false,exec)

Basic block 232 (new, reachable)
Predecessors:  231 [50.0%]  (true,exec)
Successors:  234 [50.0%]  (true,exec) 233 [50.0%]  (false,exec)

Basic block 233 (new, reachable)
Predecessors:  231 [50.0%]  (false,exec) 232 [50.0%]  (false,exec)
Successors:  234 [50.0%]  (true,exec) 236 [50.0%]  (false,exec)

Basic block 234 (new, reachable)
Predecessors:  232 [50.0%]  (true,exec) 233 [50.0%]  (true,exec)
Successors:  235 [28.0%]  (true,exec) 236 [72.0%]  (false,exec)

Basic block 235 (new, reachable)
Predecessors:  234 [28.0%]  (true,exec)
Successors:  236 [100.0%]  (fallthru,exec)

Basic block 236 (new, reachable)
Predecessors:  233 [50.0%]  (false,exec) 234 [72.0%]  (false,exec) 235 [100.0%]  (fallthru,exec)
Successors:  237 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

Basic block 237 (new, reachable)
Predecessors:  236 [29.0%]  (true,exec)
Successors:  256 [100.0%]  (fallthru,exec)

Basic block 238 (new, reachable)
Predecessors:  255 [98.0%]  (true,exec)
Successors:  239 [50.0%]  (true,exec) 240 [50.0%]  (false,exec)

Basic block 239 (new, reachable)
Predecessors:  238 [50.0%]  (true,exec)
Successors:  254 [100.0%]  (fallthru,exec)

Basic block 240 (new, reachable)
Predecessors:  238 [50.0%]  (false,exec)
Successors:  242 [50.0%]  (true,exec) 241 [50.0%]  (false,exec)

Basic block 241 (new, reachable)
Predecessors:  240 [50.0%]  (false,exec)
Successors:  242 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

Basic block 242 (new, reachable)
Predecessors:  240 [50.0%]  (true,exec) 241 [50.0%]  (true,exec)
Successors:  243 [100.0%]  (fallthru,exec)

Basic block 243 (new, reachable)
Predecessors:  241 [50.0%]  (false,exec) 242 [100.0%]  (fallthru,exec)
Successors:  244 [72.0%]  (true,exec) 254 [28.0%]  (false,exec)

Basic block 244 (new, reachable)
Predecessors:  243 [72.0%]  (true,exec)
Successors:  245 [50.0%]  (true,exec) 246 [50.0%]  (false,exec)

Basic block 245 (new, reachable)
Predecessors:  244 [50.0%]  (true,exec)
Successors:  247 [50.0%]  (true,exec) 246 [50.0%]  (false,exec)

Basic block 246 (new, reachable)
Predecessors:  244 [50.0%]  (false,exec) 245 [50.0%]  (false,exec)
Successors:  247 [50.0%]  (true,exec) 249 [50.0%]  (false,exec)

Basic block 247 (new, reachable)
Predecessors:  245 [50.0%]  (true,exec) 246 [50.0%]  (true,exec)
Successors:  248 [28.0%]  (true,exec) 249 [72.0%]  (false,exec)

Basic block 248 (new, reachable)
Predecessors:  247 [28.0%]  (true,exec)
Successors:  249 [100.0%]  (fallthru,exec)

Basic block 249 (new, reachable)
Predecessors:  246 [50.0%]  (false,exec) 247 [72.0%]  (false,exec) 248 [100.0%]  (fallthru,exec)
Successors:  252 [71.0%]  (true,exec) 250 [29.0%]  (false,exec)

Basic block 250 (new, reachable)
Predecessors:  249 [29.0%]  (false,exec)
Successors:  251 [50.0%]  (true,exec) 252 [50.0%]  (false,exec)

Basic block 251 (new, reachable)
Predecessors:  250 [50.0%]  (true,exec)
Successors:  252 [100.0%]  (fallthru)

Basic block 252 (new, reachable)
Predecessors:  250 [50.0%]  (false,exec) 251 [100.0%]  (fallthru) 249 [71.0%]  (true,exec)
Successors:  253 [29.0%]  (true,exec) 254 [71.0%]  (false,exec)

Basic block 253 (new, reachable)
Predecessors:  252 [29.0%]  (true,exec)
Successors:  254 [100.0%]  (fallthru,exec)

Basic block 254 (new, reachable)
Predecessors:  239 [100.0%]  (fallthru,exec) 243 [28.0%]  (false,exec) 252 [71.0%]  (false,exec) 253 [100.0%]  (fallthru,exec)
Successors:  255 [100.0%]  (fallthru,dfs_back,exec)

Basic block 255 (new, reachable)
Predecessors:  227 [100.0%]  (fallthru) 254 [100.0%]  (fallthru,dfs_back,exec)
Successors:  238 [98.0%]  (true,exec) 256 [2.0%]  (false,exec)

Basic block 256 (new, reachable)
Predecessors:  212 [50.0%]  (false,exec) 219 [71.0%]  (false,exec) 237 [100.0%]  (fallthru,exec) 255 [2.0%]  (false,exec) 211 [48.8%]  (false,exec) 218 [100.0%]  (fallthru,exec) 217 [71.0%]  (false,exec) 216 [71.0%]  (false,exec) 236 [71.0%]  (false,exec)
Successors:  257 [29.0%]  (true,exec) 443 [71.0%]  (false,exec)

Basic block 257 (new, reachable)
Predecessors:  256 [29.0%]  (true,exec)
Successors:  258 [29.0%]  (true,exec) 260 [71.0%]  (false,exec)

Basic block 258 (new, reachable)
Predecessors:  257 [29.0%]  (true,exec)
Successors:  259 [50.0%]  (true,exec) 260 [50.0%]  (false,exec)

Basic block 259 (new, reachable)
Predecessors:  258 [50.0%]  (true,exec)
Successors:  260 [100.0%]  (fallthru,exec)

Basic block 260 (new, reachable)
Predecessors:  257 [71.0%]  (false,exec) 258 [50.0%]  (false,exec) 259 [100.0%]  (fallthru,exec)
Successors:  261 [29.0%]  (true,exec) 262 [71.0%]  (false,exec)

Basic block 261 (new, reachable)
Predecessors:  260 [29.0%]  (true,exec)
Successors:  262 [100.0%]  (fallthru,exec)

Basic block 262 (new, reachable)
Predecessors:  260 [71.0%]  (false,exec) 261 [100.0%]  (fallthru,exec)
Successors:  263 [29.0%]  (true,exec) 264 [71.0%]  (false,exec)

Basic block 263 (new, reachable)
Predecessors:  262 [29.0%]  (true,exec)
Successors:  264 [100.0%]  (fallthru,exec)

Basic block 264 (new, reachable)
Predecessors:  262 [71.0%]  (false,exec) 263 [100.0%]  (fallthru,exec)
Successors:  265 [50.0%]  (true,exec) 443 [50.0%]  (false,exec)

Basic block 265 (new, reachable)
Predecessors:  264 [50.0%]  (true,exec)
Successors:  442 [100.0%]  (fallthru)

Basic block 266 (new, reachable)
Predecessors:  442 [66.7%]  (true,exec)
Successors:  267 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

Basic block 267 (new, reachable)
Predecessors:  266 [29.0%]  (true,exec)
Successors:  268 [100.0%]  (fallthru,exec)

Basic block 268 (new, reachable)
Predecessors:  266 [71.0%]  (false,exec) 267 [100.0%]  (fallthru,exec)
Successors:  269 [29.0%]  (true,exec) 271 [71.0%]  (false,exec)

Basic block 269 (new, reachable)
Predecessors:  268 [29.0%]  (true,exec)
Successors:  270 [29.0%]  (true,exec) 271 [71.0%]  (false,exec)

Basic block 270 (new, reachable)
Predecessors:  269 [29.0%]  (true,exec)
Successors:  274 [28.0%]  (true,exec) 271 [72.0%]  (false,exec)

Basic block 271 (new, reachable)
Predecessors:  268 [71.0%]  (false,exec) 269 [71.0%]  (false,exec) 270 [72.0%]  (false,exec)
Successors:  274 [86.3%]  (true,exec) 272 [13.7%]  (false,exec)

Basic block 272 (new, reachable)
Predecessors:  271 [13.7%]  (false,exec)
Successors:  273 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

Basic block 273 (new, reachable)
Predecessors:  272 [50.0%]  (true,exec)
Successors:  274 [100.0%]  (fallthru)

Basic block 274 (new, reachable)
Predecessors:  271 [86.3%]  (true,exec) 272 [50.0%]  (false,exec) 270 [28.0%]  (true,exec) 273 [100.0%]  (fallthru)
Successors:  275 [29.0%]  (true,exec) 283 [71.0%]  (false,exec)

Basic block 275 (new, reachable)
Predecessors:  274 [29.0%]  (true,exec)
Successors:  276 [29.0%]  (true,exec) 297 [71.0%]  (false,exec)

Basic block 276 (new, reachable)
Predecessors:  275 [29.0%]  (true,exec)
Successors:  280 [100.0%]  (fallthru,exec)

Basic block 277 (new, reachable)
Predecessors:  281 [95.5%]  (true,exec)
Successors:  278 [51.2%]  (true,exec) 279 [48.8%]  (false,exec)

Basic block 278 (new, reachable)
Predecessors:  277 [51.2%]  (true,exec)
Successors:  279 [100.0%]  (fallthru,exec)

Basic block 279 (new, reachable)
Predecessors:  277 [48.8%]  (false,exec) 278 [100.0%]  (fallthru,exec)
Successors:  280 [100.0%]  (fallthru,dfs_back,exec)

Basic block 280 (new, reachable)
Predecessors:  276 [100.0%]  (fallthru,exec) 279 [100.0%]  (fallthru,dfs_back,exec)
Successors:  281 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

Basic block 281 (new, reachable)
Predecessors:  280 [95.5%]  (true,exec)
Successors:  277 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

Basic block 282 (new, reachable)
Predecessors:  280 [4.5%]  (false,exec) 281 [4.5%]  (false,exec)
Successors:  297 [100.0%]  (fallthru,exec)

Basic block 283 (new, reachable)
Predecessors:  274 [71.0%]  (false,exec)
Successors:  284 [50.0%]  (true,exec) 297 [50.0%]  (false,exec)

Basic block 284 (new, reachable)
Predecessors:  283 [50.0%]  (true,exec)
Successors:  296 [100.0%]  (fallthru,exec)

Basic block 285 (new, reachable)
Predecessors:  296 [98.0%]  (true,exec)
Successors:  286 [86.3%]  (true,exec) 287 [13.7%]  (false,exec)

Basic block 286 (new, reachable)
Predecessors:  285 [86.3%]  (true,exec)
Successors:  295 [100.0%]  (fallthru,exec)

Basic block 287 (new, reachable)
Predecessors:  285 [13.7%]  (false,exec)
Successors:  288 [29.0%]  (true,exec) 290 [71.0%]  (false,exec)

Basic block 288 (new, reachable)
Predecessors:  287 [29.0%]  (true,exec)
Successors:  289 [50.0%]  (true,exec) 290 [50.0%]  (false,exec)

Basic block 289 (new, reachable)
Predecessors:  288 [50.0%]  (true,exec)
Successors:  295 [100.0%]  (fallthru,exec)

Basic block 290 (new, reachable)
Predecessors:  287 [71.0%]  (false,exec) 288 [50.0%]  (false,exec)
Successors:  291 [86.9%]  (true,exec) 294 [13.1%]  (false,exec)

Basic block 291 (new, reachable)
Predecessors:  290 [86.9%]  (true,exec)
Successors:  292 [50.0%]  (true,exec) 293 [50.0%]  (false,exec)

Basic block 292 (new, reachable)
Predecessors:  291 [50.0%]  (true,exec)
Successors:  295 [100.0%]  (fallthru,exec)

Basic block 293 (new, reachable)
Predecessors:  291 [50.0%]  (false,exec)
Successors:  294 [100.0%]  (fallthru,exec)

Basic block 294 (new, reachable)
Predecessors:  290 [13.1%]  (false,exec) 293 [100.0%]  (fallthru,exec)
Successors:  295 [100.0%]  (fallthru,exec)

Basic block 295 (new, reachable)
Predecessors:  286 [100.0%]  (fallthru,exec) 289 [100.0%]  (fallthru,exec) 292 [100.0%]  (fallthru,exec) 294 [100.0%]  (fallthru,exec)
Successors:  296 [100.0%]  (fallthru,dfs_back,exec)

Basic block 296 (new, reachable)
Predecessors:  284 [100.0%]  (fallthru,exec) 295 [100.0%]  (fallthru,dfs_back,exec)
Successors:  285 [98.0%]  (true,exec) 297 [2.0%]  (false,exec)

Basic block 297 (new, reachable)
Predecessors:  282 [100.0%]  (fallthru,exec) 283 [50.0%]  (false,exec) 296 [2.0%]  (false,exec) 275 [71.0%]  (false,exec)
Successors:  298 [50.0%]  (true,exec) 325 [50.0%]  (false,exec)

Basic block 298 (new, reachable)
Predecessors:  297 [50.0%]  (true,exec)
Successors:  299 [50.0%]  (true,exec) 300 [50.0%]  (false,exec)

Basic block 299 (new, reachable)
Predecessors:  298 [50.0%]  (true,exec)
Successors:  300 [100.0%]  (fallthru,exec)

Basic block 300 (new, reachable)
Predecessors:  298 [50.0%]  (false,exec) 299 [100.0%]  (fallthru,exec)
Successors:  301 [50.0%]  (true,exec) 302 [50.0%]  (false,exec)

Basic block 301 (new, reachable)
Predecessors:  300 [50.0%]  (true,exec)
Successors:  302 [100.0%]  (fallthru,exec)

Basic block 302 (new, reachable)
Predecessors:  300 [50.0%]  (false,exec) 301 [100.0%]  (fallthru,exec)
Successors:  303 [71.0%]  (true,exec) 304 [29.0%]  (false,exec)

Basic block 303 (new, reachable)
Predecessors:  302 [71.0%]  (true,exec)
Successors:  308 [100.0%]  (fallthru,exec)

Basic block 304 (new, reachable)
Predecessors:  302 [29.0%]  (false,exec)
Successors:  305 [69.8%]  (true,exec) 306 [30.2%]  (false,exec)

Basic block 305 (new, reachable)
Predecessors:  304 [69.8%]  (true,exec)
Successors:  306 [100.0%]  (fallthru,exec)

Basic block 306 (new, reachable)
Predecessors:  304 [30.2%]  (false,exec) 305 [100.0%]  (fallthru,exec)
Successors:  308 [93.3%]  (true,exec) 307 [6.7%]  (false,exec)

Basic block 307 (new, reachable)
Predecessors:  306 [6.7%]  (false,exec)
Successors:  308 [100.0%]  (fallthru,exec)

Basic block 308 (new, reachable)
Predecessors:  303 [100.0%]  (fallthru,exec) 306 [93.3%]  (true,exec) 307 [100.0%]  (fallthru,exec)
Successors:  309 [69.8%]  (true,exec) 310 [30.2%]  (false,exec)

Basic block 309 (new, reachable)
Predecessors:  308 [69.8%]  (true,exec)
Successors:  310 [100.0%]  (fallthru,exec)

Basic block 310 (new, reachable)
Predecessors:  308 [30.2%]  (false,exec) 309 [100.0%]  (fallthru,exec)
Successors:  311 [29.0%]  (true,exec) 319 [71.0%]  (false,exec)

Basic block 311 (new, reachable)
Predecessors:  310 [29.0%]  (true,exec)
Successors:  316 [100.0%]  (fallthru,exec)

Basic block 312 (new, reachable)
Predecessors:  317 [95.5%]  (true,exec)
Successors:  313 [72.0%]  (true,exec) 315 [28.0%]  (false,exec)

Basic block 313 (new, reachable)
Predecessors:  312 [72.0%]  (true,exec)
Successors:  314 [29.0%]  (true,exec) 315 [71.0%]  (false,exec)

Basic block 314 (new, reachable)
Predecessors:  313 [29.0%]  (true,exec)
Successors:  315 [100.0%]  (fallthru,exec)

Basic block 315 (new, reachable)
Predecessors:  312 [28.0%]  (false,exec) 313 [71.0%]  (false,exec) 314 [100.0%]  (fallthru,exec)
Successors:  316 [100.0%]  (fallthru,dfs_back,exec)

Basic block 316 (new, reachable)
Predecessors:  311 [100.0%]  (fallthru,exec) 315 [100.0%]  (fallthru,dfs_back,exec)
Successors:  317 [95.5%]  (true,exec) 318 [4.5%]  (false,exec)

Basic block 317 (new, reachable)
Predecessors:  316 [95.5%]  (true,exec)
Successors:  312 [95.5%]  (true,exec) 318 [4.5%]  (false,exec)

Basic block 318 (new, reachable)
Predecessors:  316 [4.5%]  (false,exec) 317 [4.5%]  (false,exec)
Successors:  319 [100.0%]  (fallthru,exec)

Basic block 319 (new, reachable)
Predecessors:  310 [71.0%]  (false,exec) 318 [100.0%]  (fallthru,exec)
Successors:  320 [85.0%]  (true,exec) 369 [15.0%]  (false,exec)

Basic block 320 (new, reachable)
Predecessors:  319 [85.0%]  (true,exec)
Successors:  321 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

Basic block 321 (new, reachable)
Predecessors:  320 [50.0%]  (true,exec)
Successors:  322 [100.0%]  (fallthru,exec)

Basic block 322 (new, reachable)
Predecessors:  321 [100.0%]  (fallthru,exec) 320 [50.0%]  (false,exec)
Successors:  324 [28.0%]  (true,exec) 323 [72.0%]  (false,exec)

Basic block 323 (new, reachable)
Predecessors:  322 [72.0%]  (false,exec)
Successors:  324 [100.0%]  (fallthru,exec)

Basic block 324 (new, reachable)
Predecessors:  322 [28.0%]  (true,exec) 323 [100.0%]  (fallthru,exec)
Successors:  369 [100.0%]  (fallthru,exec)

Basic block 325 (new, reachable)
Predecessors:  297 [50.0%]  (false,exec)
Successors:  326 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

Basic block 326 (new, reachable)
Predecessors:  325 [50.0%]  (true,exec)
Successors:  368 [100.0%]  (fallthru,exec)

Basic block 327 (new, reachable)
Predecessors:  368 [98.0%]  (true,exec)
Successors:  328 [86.3%]  (true,exec) 329 [13.7%]  (false,exec)

Basic block 328 (new, reachable)
Predecessors:  327 [86.3%]  (true,exec)
Successors:  367 [100.0%]  (fallthru,exec)

Basic block 329 (new, reachable)
Predecessors:  327 [13.7%]  (false,exec)
Successors:  330 [29.0%]  (true,exec) 332 [71.0%]  (false,exec)

Basic block 330 (new, reachable)
Predecessors:  329 [29.0%]  (true,exec)
Successors:  331 [50.0%]  (true,exec) 332 [50.0%]  (false,exec)

Basic block 331 (new, reachable)
Predecessors:  330 [50.0%]  (true,exec)
Successors:  367 [100.0%]  (fallthru,exec)

Basic block 332 (new, reachable)
Predecessors:  329 [71.0%]  (false,exec) 330 [50.0%]  (false,exec)
Successors:  333 [71.0%]  (true,exec) 336 [29.0%]  (false,exec)

Basic block 333 (new, reachable)
Predecessors:  332 [71.0%]  (true,exec)
Successors:  334 [50.0%]  (true,exec) 335 [50.0%]  (false,exec)

Basic block 334 (new, reachable)
Predecessors:  333 [50.0%]  (true,exec)
Successors:  367 [100.0%]  (fallthru,exec)

Basic block 335 (new, reachable)
Predecessors:  333 [50.0%]  (false,exec)
Successors:  336 [100.0%]  (fallthru,exec)

Basic block 336 (new, reachable)
Predecessors:  332 [29.0%]  (false,exec) 335 [100.0%]  (fallthru,exec)
Successors:  337 [50.0%]  (true,exec) 338 [50.0%]  (false,exec)

Basic block 337 (new, reachable)
Predecessors:  336 [50.0%]  (true,exec)
Successors:  338 [100.0%]  (fallthru,exec)

Basic block 338 (new, reachable)
Predecessors:  336 [50.0%]  (false,exec) 337 [100.0%]  (fallthru,exec)
Successors:  339 [50.0%]  (true,exec) 340 [50.0%]  (false,exec)

Basic block 339 (new, reachable)
Predecessors:  338 [50.0%]  (true,exec)
Successors:  340 [100.0%]  (fallthru,exec)

Basic block 340 (new, reachable)
Predecessors:  338 [50.0%]  (false,exec) 339 [100.0%]  (fallthru,exec)
Successors:  341 [73.0%]  (true,exec) 342 [27.0%]  (false,exec)

Basic block 341 (new, reachable)
Predecessors:  340 [73.0%]  (true,exec)
Successors:  343 [100.0%]  (fallthru,exec)

Basic block 342 (new, reachable)
Predecessors:  340 [27.0%]  (false,exec)
Successors:  343 [100.0%]  (fallthru,exec)

Basic block 343 (new, reachable)
Predecessors:  341 [100.0%]  (fallthru,exec) 342 [100.0%]  (fallthru,exec)
Successors:  346 [15.0%]  (true,exec) 344 [85.0%]  (false,exec)

Basic block 344 (new, reachable)
Predecessors:  343 [85.0%]  (false,exec)
Successors:  346 [50.0%]  (true,exec) 345 [50.0%]  (false,exec)

Basic block 345 (new, reachable)
Predecessors:  344 [50.0%]  (false,exec)
Successors:  346 [100.0%]  (fallthru,exec)

Basic block 346 (new, reachable)
Predecessors:  343 [15.0%]  (true,exec) 344 [50.0%]  (true,exec) 345 [100.0%]  (fallthru,exec)
Successors:  361 [50.0%]  (true,exec) 347 [50.0%]  (false,exec)

Basic block 347 (new, reachable)
Predecessors:  346 [50.0%]  (false,exec)
Successors:  348 [69.8%]  (true,exec) 349 [30.2%]  (false,exec)

Basic block 348 (new, reachable)
Predecessors:  347 [69.8%]  (true,exec)
Successors:  349 [100.0%]  (fallthru,exec)

Basic block 349 (new, reachable)
Predecessors:  347 [30.2%]  (false,exec) 348 [100.0%]  (fallthru,exec)
Successors:  350 [85.0%]  (true,exec) 351 [15.0%]  (false,exec)

Basic block 350 (new, reachable)
Predecessors:  349 [85.0%]  (true,exec)
Successors:  351 [100.0%]  (fallthru,exec)

Basic block 351 (new, reachable)
Predecessors:  349 [15.0%]  (false,exec) 350 [100.0%]  (fallthru,exec)
Successors:  354 [15.0%]  (true,exec) 352 [85.0%]  (false,exec)

Basic block 352 (new, reachable)
Predecessors:  351 [85.0%]  (false,exec)
Successors:  354 [50.0%]  (true,exec) 353 [50.0%]  (false,exec)

Basic block 353 (new, reachable)
Predecessors:  352 [50.0%]  (false,exec)
Successors:  354 [100.0%]  (fallthru,exec)

Basic block 354 (new, reachable)
Predecessors:  351 [15.0%]  (true,exec) 352 [50.0%]  (true,exec) 353 [100.0%]  (fallthru,exec)
Successors:  355 [50.0%]  (true,exec) 356 [50.0%]  (false,exec)

Basic block 355 (new, reachable)
Predecessors:  354 [50.0%]  (true,exec)
Successors:  356 [100.0%]  (fallthru,exec)

Basic block 356 (new, reachable)
Predecessors:  354 [50.0%]  (false,exec) 355 [100.0%]  (fallthru,exec)
Successors:  359 [15.0%]  (true,exec) 357 [85.0%]  (false,exec)

Basic block 357 (new, reachable)
Predecessors:  356 [85.0%]  (false,exec)
Successors:  359 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

Basic block 358 (new, reachable)
Predecessors:  357 [50.0%]  (false,exec)
Successors:  359 [100.0%]  (fallthru,exec)

Basic block 359 (new, reachable)
Predecessors:  356 [15.0%]  (true,exec) 357 [50.0%]  (true,exec) 358 [100.0%]  (fallthru,exec)
Successors:  360 [50.0%]  (true,exec) 361 [50.0%]  (false,exec)

Basic block 360 (new, reachable)
Predecessors:  359 [50.0%]  (true,exec)
Successors:  361 [100.0%]  (fallthru,exec)

Basic block 361 (new, reachable)
Predecessors:  346 [50.0%]  (true,exec) 359 [50.0%]  (false,exec) 360 [100.0%]  (fallthru,exec)
Successors:  364 [15.0%]  (true,exec) 362 [85.0%]  (false,exec)

Basic block 362 (new, reachable)
Predecessors:  361 [85.0%]  (false,exec)
Successors:  364 [50.0%]  (true,exec) 363 [50.0%]  (false,exec)

Basic block 363 (new, reachable)
Predecessors:  362 [50.0%]  (false,exec)
Successors:  364 [100.0%]  (fallthru,exec)

Basic block 364 (new, reachable)
Predecessors:  361 [15.0%]  (true,exec) 362 [50.0%]  (true,exec) 363 [100.0%]  (fallthru,exec)
Successors:  365 [50.0%]  (true,exec) 367 [50.0%]  (false,exec)

Basic block 365 (new, reachable)
Predecessors:  364 [50.0%]  (true,exec)
Successors:  366 [29.0%]  (true,exec) 367 [71.0%]  (false,exec)

Basic block 366 (new, reachable)
Predecessors:  365 [29.0%]  (true,exec)
Successors:  367 [100.0%]  (fallthru,exec)

Basic block 367 (new, reachable)
Predecessors:  328 [100.0%]  (fallthru,exec) 331 [100.0%]  (fallthru,exec) 334 [100.0%]  (fallthru,exec) 364 [50.0%]  (false,exec) 365 [71.0%]  (false,exec) 366 [100.0%]  (fallthru,exec)
Successors:  368 [100.0%]  (fallthru,dfs_back,exec)

Basic block 368 (new, reachable)
Predecessors:  326 [100.0%]  (fallthru,exec) 367 [100.0%]  (fallthru,dfs_back,exec)
Successors:  327 [98.0%]  (true,exec) 369 [2.0%]  (false,exec)

Basic block 369 (new, reachable)
Predecessors:  324 [100.0%]  (fallthru,exec) 325 [50.0%]  (false,exec) 368 [2.0%]  (false,exec) 319 [15.0%]  (false,exec)
Successors:  371 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

Basic block 370 (new, reachable)
Predecessors:  369 [50.0%]  (false,exec)
Successors:  371 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

Basic block 371 (new, reachable)
Predecessors:  369 [50.0%]  (true,exec) 370 [50.0%]  (true,exec)
Successors:  372 [29.0%]  (true,exec) 373 [71.0%]  (false,exec)

Basic block 372 (new, reachable)
Predecessors:  371 [29.0%]  (true,exec)
Successors:  373 [100.0%]  (fallthru,exec)

Basic block 373 (new, reachable)
Predecessors:  370 [50.0%]  (false,exec) 371 [71.0%]  (false,exec) 372 [100.0%]  (fallthru,exec)
Successors:  376 [15.0%]  (true,exec) 374 [85.0%]  (false,exec)

Basic block 374 (new, reachable)
Predecessors:  373 [85.0%]  (false,exec)
Successors:  376 [50.0%]  (true,exec) 375 [50.0%]  (false,exec)

Basic block 375 (new, reachable)
Predecessors:  374 [50.0%]  (false,exec)
Successors:  376 [100.0%]  (fallthru,exec)

Basic block 376 (new, reachable)
Predecessors:  373 [15.0%]  (true,exec) 374 [50.0%]  (true,exec) 375 [100.0%]  (fallthru,exec)
Successors:  377 [29.0%]  (true,exec) 378 [71.0%]  (false,exec)

Basic block 377 (new, reachable)
Predecessors:  376 [29.0%]  (true,exec)
Successors:  378 [100.0%]  (fallthru,exec)

Basic block 378 (new, reachable)
Predecessors:  376 [71.0%]  (false,exec) 377 [100.0%]  (fallthru,exec)
Successors:  379 [85.0%]  (true,exec) 382 [15.0%]  (false,exec)

Basic block 379 (new, reachable)
Predecessors:  378 [85.0%]  (true,exec)
Successors:  380 [73.0%]  (true,exec) 381 [27.0%]  (false,exec)

Basic block 380 (new, reachable)
Predecessors:  379 [73.0%]  (true,exec)
Successors:  382 [100.0%]  (fallthru,exec)

Basic block 381 (new, reachable)
Predecessors:  379 [27.0%]  (false,exec)
Successors:  382 [100.0%]  (fallthru,exec)

Basic block 382 (new, reachable)
Predecessors:  378 [15.0%]  (false,exec) 380 [100.0%]  (fallthru,exec) 381 [100.0%]  (fallthru,exec)
Successors:  383 [50.0%]  (true,exec) 388 [50.0%]  (false,exec)

Basic block 383 (new, reachable)
Predecessors:  382 [50.0%]  (true,exec)
Successors:  385 [50.0%]  (true,exec) 384 [50.0%]  (false,exec)

Basic block 384 (new, reachable)
Predecessors:  383 [50.0%]  (false,exec)
Successors:  385 [100.0%]  (fallthru,exec)

Basic block 385 (new, reachable)
Predecessors:  383 [50.0%]  (true,exec) 384 [100.0%]  (fallthru,exec)
Successors:  387 [50.0%]  (true,exec) 386 [50.0%]  (false,exec)

Basic block 386 (new, reachable)
Predecessors:  385 [50.0%]  (false,exec)
Successors:  387 [100.0%]  (fallthru,exec)

Basic block 387 (new, reachable)
Predecessors:  385 [50.0%]  (true,exec) 386 [100.0%]  (fallthru,exec)
Successors:  388 [100.0%]  (fallthru,exec)

Basic block 388 (new, reachable)
Predecessors:  382 [50.0%]  (false,exec) 387 [100.0%]  (fallthru,exec)
Successors:  389 [29.0%]  (true,exec) 422 [71.0%]  (false,exec)

Basic block 389 (new, reachable)
Predecessors:  388 [29.0%]  (true,exec)
Successors:  390 [69.8%]  (true,exec) 391 [30.2%]  (false,exec)

Basic block 390 (new, reachable)
Predecessors:  389 [69.8%]  (true,exec)
Successors:  391 [100.0%]  (fallthru,exec)

Basic block 391 (new, reachable)
Predecessors:  389 [30.2%]  (false,exec) 390 [100.0%]  (fallthru,exec)
Successors:  392 [52.5%]  (true,exec) 393 [47.5%]  (false,exec)

Basic block 392 (new, reachable)
Predecessors:  391 [52.5%]  (true,exec)
Successors:  393 [100.0%]  (fallthru,exec)

Basic block 393 (new, reachable)
Predecessors:  391 [47.5%]  (false,exec) 392 [100.0%]  (fallthru,exec)
Successors:  394 [29.0%]  (true,exec) 396 [71.0%]  (false,exec)

Basic block 394 (new, reachable)
Predecessors:  393 [29.0%]  (true,exec)
Successors:  395 [29.0%]  (true,exec) 396 [71.0%]  (false,exec)

Basic block 395 (new, reachable)
Predecessors:  394 [29.0%]  (true,exec)
Successors:  396 [100.0%]  (fallthru,exec)

Basic block 396 (new, reachable)
Predecessors:  393 [71.0%]  (false,exec) 394 [71.0%]  (false,exec) 395 [100.0%]  (fallthru,exec)
Successors:  397 [29.0%]  (true,exec) 398 [71.0%]  (false,exec)

Basic block 397 (new, reachable)
Predecessors:  396 [29.0%]  (true,exec)
Successors:  398 [100.0%]  (fallthru,exec)

Basic block 398 (new, reachable)
Predecessors:  396 [71.0%]  (false,exec) 397 [100.0%]  (fallthru,exec)
Successors:  401 [15.0%]  (true,exec) 399 [85.0%]  (false,exec)

Basic block 399 (new, reachable)
Predecessors:  398 [85.0%]  (false,exec)
Successors:  401 [50.0%]  (true,exec) 400 [50.0%]  (false,exec)

Basic block 400 (new, reachable)
Predecessors:  399 [50.0%]  (false,exec)
Successors:  401 [100.0%]  (fallthru,exec)

Basic block 401 (new, reachable)
Predecessors:  398 [15.0%]  (true,exec) 399 [50.0%]  (true,exec) 400 [100.0%]  (fallthru,exec)
Successors:  402 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

Basic block 402 (new, reachable)
Predecessors:  401 [50.0%]  (true,exec)
Successors:  405 [15.0%]  (true,exec) 403 [85.0%]  (false,exec)

Basic block 403 (new, reachable)
Predecessors:  402 [85.0%]  (false,exec)
Successors:  405 [50.0%]  (true,exec) 404 [50.0%]  (false,exec)

Basic block 404 (new, reachable)
Predecessors:  403 [50.0%]  (false,exec)
Successors:  405 [100.0%]  (fallthru,exec)

Basic block 405 (new, reachable)
Predecessors:  402 [15.0%]  (true,exec) 403 [50.0%]  (true,exec) 404 [100.0%]  (fallthru,exec)
Successors:  406 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

Basic block 406 (new, reachable)
Predecessors:  405 [50.0%]  (true,exec)
Successors:  407 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

Basic block 407 (new, reachable)
Predecessors:  406 [50.0%]  (true,exec)
Successors:  408 [51.2%]  (true,exec) 409 [48.8%]  (false,exec)

Basic block 408 (new, reachable)
Predecessors:  407 [51.2%]  (true,exec)
Successors:  409 [100.0%]  (fallthru,exec)

Basic block 409 (new, reachable)
Predecessors:  401 [50.0%]  (false,exec) 405 [50.0%]  (false,exec) 406 [50.0%]  (false,exec) 407 [48.8%]  (false,exec) 408 [100.0%]  (fallthru,exec)
Successors:  411 [50.0%]  (true,exec) 410 [50.0%]  (false,exec)

Basic block 410 (new, reachable)
Predecessors:  409 [50.0%]  (false,exec)
Successors:  411 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

Basic block 411 (new, reachable)
Predecessors:  409 [50.0%]  (true,exec) 410 [50.0%]  (true,exec)
Successors:  414 [15.0%]  (true,exec) 412 [85.0%]  (false,exec)

Basic block 412 (new, reachable)
Predecessors:  411 [85.0%]  (false,exec)
Successors:  414 [50.0%]  (true,exec) 413 [50.0%]  (false,exec)

Basic block 413 (new, reachable)
Predecessors:  412 [50.0%]  (false,exec)
Successors:  414 [100.0%]  (fallthru,exec)

Basic block 414 (new, reachable)
Predecessors:  411 [15.0%]  (true,exec) 412 [50.0%]  (true,exec) 413 [100.0%]  (fallthru,exec)
Successors:  415 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

Basic block 415 (new, reachable)
Predecessors:  414 [50.0%]  (true,exec)
Successors:  418 [15.0%]  (true,exec) 416 [85.0%]  (false,exec)

Basic block 416 (new, reachable)
Predecessors:  415 [85.0%]  (false,exec)
Successors:  418 [50.0%]  (true,exec) 417 [50.0%]  (false,exec)

Basic block 417 (new, reachable)
Predecessors:  416 [50.0%]  (false,exec)
Successors:  418 [100.0%]  (fallthru,exec)

Basic block 418 (new, reachable)
Predecessors:  415 [15.0%]  (true,exec) 416 [50.0%]  (true,exec) 417 [100.0%]  (fallthru,exec)
Successors:  419 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

Basic block 419 (new, reachable)
Predecessors:  418 [50.0%]  (true,exec)
Successors:  420 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

Basic block 420 (new, reachable)
Predecessors:  419 [50.0%]  (true,exec)
Successors:  421 [51.2%]  (true,exec) 422 [48.8%]  (false,exec)

Basic block 421 (new, reachable)
Predecessors:  420 [51.2%]  (true,exec)
Successors:  422 [100.0%]  (fallthru,exec)

Basic block 422 (new, reachable)
Predecessors:  388 [71.0%]  (false,exec) 410 [50.0%]  (false,exec) 414 [50.0%]  (false,exec) 418 [50.0%]  (false,exec) 419 [50.0%]  (false,exec) 420 [48.8%]  (false,exec) 421 [100.0%]  (fallthru,exec)
Successors:  423 [29.0%]  (true,exec) 435 [71.0%]  (false,exec)

Basic block 423 (new, reachable)
Predecessors:  422 [29.0%]  (true,exec)
Successors:  424 [29.0%]  (true,exec) 435 [71.0%]  (false,exec)

Basic block 424 (new, reachable)
Predecessors:  423 [29.0%]  (true,exec)
Successors:  425 [50.0%]  (true,exec) 435 [50.0%]  (false,exec)

Basic block 425 (new, reachable)
Predecessors:  424 [50.0%]  (true,exec)
Successors:  434 [100.0%]  (fallthru)

Basic block 426 (new, reachable)
Predecessors:  434 [90.0%]  (true,exec)
Successors:  428 [28.0%]  (true,exec) 427 [72.0%]  (false,exec)

Basic block 427 (new, reachable)
Predecessors:  426 [72.0%]  (false,exec)
Successors:  428 [28.0%]  (true,exec) 433 [72.0%]  (false,exec)

Basic block 428 (new, reachable)
Predecessors:  426 [28.0%]  (true,exec) 427 [28.0%]  (true,exec)
Successors:  431 [15.0%]  (true,exec) 429 [85.0%]  (false,exec)

Basic block 429 (new, reachable)
Predecessors:  428 [85.0%]  (false,exec)
Successors:  431 [50.0%]  (true,exec) 430 [50.0%]  (false,exec)

Basic block 430 (new, reachable)
Predecessors:  429 [50.0%]  (false,exec)
Successors:  431 [100.0%]  (fallthru,exec)

Basic block 431 (new, reachable)
Predecessors:  428 [15.0%]  (true,exec) 429 [50.0%]  (true,exec) 430 [100.0%]  (fallthru,exec)
Successors:  432 [29.0%]  (true,exec) 433 [71.0%]  (false,exec)

Basic block 432 (new, reachable)
Predecessors:  431 [29.0%]  (true,exec)
Successors:  433 [100.0%]  (fallthru,exec)

Basic block 433 (new, reachable)
Predecessors:  427 [72.0%]  (false,exec) 431 [71.0%]  (false,exec) 432 [100.0%]  (fallthru,exec)
Successors:  434 [100.0%]  (fallthru,dfs_back,exec)

Basic block 434 (new, reachable)
Predecessors:  425 [100.0%]  (fallthru) 433 [100.0%]  (fallthru,dfs_back,exec)
Successors:  426 [90.0%]  (true,exec) 435 [10.0%]  (false,exec)

Basic block 435 (new, reachable)
Predecessors:  422 [71.0%]  (false,exec) 423 [71.0%]  (false,exec) 424 [50.0%]  (false,exec) 434 [10.0%]  (false,exec)
Successors:  436 [69.8%]  (true,exec) 437 [30.2%]  (false,exec)

Basic block 436 (new, reachable)
Predecessors:  435 [69.8%]  (true,exec)
Successors:  437 [100.0%]  (fallthru,exec)

Basic block 437 (new, reachable)
Predecessors:  435 [30.2%]  (false,exec) 436 [100.0%]  (fallthru,exec)
Successors:  443 [2.0%]  (true,exec) 438 [98.0%]  (false,exec)

Basic block 438 (new, reachable)
Predecessors:  437 [98.0%]  (false,exec)
Successors:  443 [2.0%]  (true,exec) 439 [98.0%]  (false,exec)

Basic block 439 (new, reachable)
Predecessors:  438 [98.0%]  (false,exec)
Successors:  443 [2.0%]  (true,exec) 440 [98.0%]  (false,exec)

Basic block 440 (new, reachable)
Predecessors:  439 [98.0%]  (false,exec)
Successors:  443 [2.0%]  (true,exec) 441 [98.0%]  (false,exec)

Basic block 441 (new, reachable)
Predecessors:  440 [98.0%]  (false,exec)
Successors:  442 [100.0%]  (fallthru,dfs_back,exec)

Basic block 442 (new, reachable)
Predecessors:  265 [100.0%]  (fallthru) 441 [100.0%]  (fallthru,dfs_back,exec)
Successors:  266 [66.7%]  (true,exec) 443 [33.3%]  (false,exec)

Basic block 443 (new, reachable)
Predecessors:  256 [71.0%]  (false,exec) 264 [50.0%]  (false,exec) 437 [2.0%]  (true,exec) 438 [2.0%]  (true,exec) 439 [2.0%]  (true,exec) 440 [2.0%]  (true,exec) 442 [33.3%]  (false,exec)
Successors:  444 [69.8%]  (true,exec) 445 [30.2%]  (false,exec)

Basic block 444 (new, reachable)
Predecessors:  443 [69.8%]  (true,exec)
Successors:  445 [100.0%]  (fallthru,exec)

Basic block 445 (new, reachable)
Predecessors:  443 [30.2%]  (false,exec) 444 [100.0%]  (fallthru,exec)
Successors:  446 [69.8%]  (true,exec) 447 [30.2%]  (false,exec)

Basic block 446 (new, reachable)
Predecessors:  445 [69.8%]  (true,exec)
Successors:  447 [100.0%]  (fallthru,exec)

Basic block 447 (new, reachable)
Predecessors:  445 [30.2%]  (false,exec) 446 [100.0%]  (fallthru,exec)
Successors:  448 [78.3%]  (true,exec) 449 [21.6%]  (false,exec)

Basic block 448 (new, reachable)
Predecessors:  447 [78.3%]  (true,exec)
Successors:  449 [100.0%]  (fallthru,exec)

Basic block 449 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 75 [100.0%]  (fallthru,exec) 81 [100.0%]  (fallthru,exec) 87 [100.0%]  (fallthru,exec) 447 [21.6%]  (false,exec) 448 [100.0%]  (fallthru,exec) 74 [30.2%]  (false,exec) 80 [30.2%]  (false,exec) 86 [30.2%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_gen_local_sdp (struct switch_core_session_t * session, switch_sdp_type_t sdp_type, const char * ip, switch_port_t port, const char * sr, int force)
{
  const char D.48211;
  int D.48210;
  const char D.48207;
  int D.48206;
  const char D.48203;
  int D.48202;
  const char D.48199;
  int D.48198;
  const char D.48195;
  int D.48194;
  const char D.48188;
  int D.48187;
  const char D.48184;
  int D.48183;
  const char D.48180;
  int D.48179;
  const char D.48176;
  int D.48175;
  const char D.48172;
  int D.48171;
  const char D.48168;
  int D.48167;
  const char D.48164;
  int D.48163;
  const char D.48160;
  int D.48159;
  const char D.48156;
  int D.48155;
  const char D.48152;
  int D.48151;
  const char D.48148;
  int D.48147;
  const char D.48144;
  int D.48143;
  const char D.48140;
  int D.48139;
  const char D.48136;
  int D.48135;
  const char D.48132;
  int D.48131;
  switch_rtp_crypto_key_type_t j;
  int i;
  int v;
  int bw;
  const char * vbw;
  char tmp2[11];
  char tmp1[11];
  int channels;
  uint32_t ianacode;
  char * fmtp;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  int loops;
  int both;
  char * bp;
  const struct switch_codec_implementation_t * imp;
  int both;
  char * bp;
  const char * mult;
  int cng_type;
  int this_ptime;
  int cur_ptime;
  int i;
  char tmp2[11];
  char tmp1[11];
  char * orig_fmtp;
  switch_payload_t orig_pt;
  const struct switch_codec_implementation_t * imp;
  struct switch_core_session_t * orig_session;
  int i;
  static const char __func__[32] = "switch_core_media_gen_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_gen_local_sdp";
  int is_outbound;
  struct payload_map_t * pmap;
  int red;
  int vp8;
  struct switch_media_handle_t * smh;
  const char * tmp;
  const char * local_sdp_video_zrtp_hash;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_event_t * ptmap;
  struct switch_event_t * map;
  const char * fmtp_out_var;
  const char * fmtp_out;
  const char * username;
  const char * var_val;
  char srbuf[128];
  const char * append_video;
  const char * append_audio;
  const char * ov_fmtp;
  const char * pass_fmtp;
  const char * family;
  const char * val;
  int use_cng;
  uint32_t v_port;
  uint32_t rate;
  int ptime;
  char * buf;
  struct switch_event_t * ptmap.39;
  uint32_t D.42507;
  uint32_t D.42505;
  size_t D.42504;
  size_t D.42503;
  char * D.42502;
  size_t D.42501;
  char * D.42498;
  size_t D.42497;
  size_t D.42496;
  char * D.42495;
  size_t D.42494;
  char * D.42490;
  switch_rtp_crypto_key_type_t D.42486;
  uint32_t D.42483;
  uint32_t D.42480;
  int D.42477;
  size_t D.42476;
  size_t D.42475;
  char * D.42474;
  size_t D.42473;
  switch_port_t D.42470;
  int D.39675;
  char * D.42464;
  int D.42460;
  int D.42459;
  size_t D.42458;
  size_t D.42457;
  char * D.42456;
  size_t D.42455;
  uint32_t D.42454;
  _Bool D.42452;
  _Bool D.42451;
  int D.42448;
  size_t D.42447;
  size_t D.42446;
  char * D.42445;
  size_t D.42444;
  int D.39666;
  char * D.42433;
  size_t D.42432;
  size_t D.42431;
  char * D.42430;
  size_t D.42429;
  size_t D.42428;
  size_t D.42427;
  char * D.42426;
  size_t D.42425;
  size_t D.42424;
  size_t D.42423;
  char * D.42422;
  size_t D.42421;
  size_t D.42420;
  size_t D.42419;
  char * D.42418;
  size_t D.42417;
  size_t D.42416;
  size_t D.42415;
  char * D.42414;
  size_t D.42413;
  size_t D.42412;
  size_t D.42411;
  char * D.42410;
  size_t D.42409;
  uint32_t D.42408;
  size_t D.42407;
  size_t D.42406;
  char * D.42405;
  size_t D.42404;
  size_t D.42403;
  size_t D.42402;
  char * D.42401;
  size_t D.42400;
  size_t D.42397;
  size_t D.42396;
  char * D.42395;
  size_t D.42394;
  uint32_t D.42391;
  size_t D.42388;
  size_t D.42387;
  char * D.42386;
  size_t D.42385;
  uint8_t D.42378;
  uint8_t D.42374;
  char * iftmp.38;
  uint8_t D.42369;
  char * iftmp.37;
  size_t D.42367;
  size_t D.42366;
  char * D.42365;
  size_t D.42364;
  short unsigned int D.42361;
  short unsigned int D.42360;
  uint32_t D.42359;
  size_t D.42358;
  size_t D.42357;
  char * D.42356;
  size_t D.42355;
  size_t D.42353;
  size_t D.42352;
  char * D.42351;
  size_t D.42350;
  size_t D.42349;
  size_t D.42348;
  char * D.42347;
  size_t D.42346;
  int8_t D.42343;
  char[192] * D.42340;
  size_t D.42339;
  size_t D.42338;
  char * D.42337;
  size_t D.42336;
  char * D.42332;
  uint32_t D.42329;
  uint32_t D.42328;
  size_t D.42324;
  size_t D.42323;
  char * D.42322;
  size_t D.42321;
  int D.42318;
  char * D.42306;
  size_t D.42299;
  size_t D.42298;
  char * D.42297;
  size_t D.42296;
  const uint32_t D.42294;
  size_t D.42293;
  size_t D.42292;
  char * D.42291;
  size_t D.42290;
  int D.42285;
  int D.42282;
  int D.42281;
  const uint8_t D.42280;
  char * const D.42279;
  int D.42274;
  uint32_t D.42269;
  switch_call_direction_t D.42266;
  const switch_codec_type_t D.42263;
  switch_payload_t D.42262;
  const char D.42255;
  unsigned int D.42253;
  size_t D.42252;
  const char D.42249;
  char * iftmp.35;
  size_t D.42246;
  size_t D.42245;
  char * D.42244;
  size_t D.42243;
  uint8_t D.42240;
  uint32_t D.42238;
  char * D.42237;
  int D.42236;
  size_t D.42235;
  size_t D.42234;
  char * D.42233;
  size_t D.42232;
  uint8_t D.42229;
  switch_payload_t D.42226;
  int32_t D.42223;
  size_t D.42222;
  size_t D.42221;
  char * D.42220;
  size_t D.42219;
  const char * D.42209;
  uint32_t D.42205;
  long unsigned int D.42204;
  int D.42203;
  size_t D.42202;
  size_t D.42201;
  char * D.42200;
  size_t D.42199;
  int D.42196;
  int D.42193;
  char * D.42192;
  size_t D.42189;
  size_t D.42188;
  char * D.42187;
  size_t D.42186;
  size_t D.42182;
  size_t D.42181;
  char * D.42180;
  size_t D.42179;
  int D.42176;
  int D.42175;
  signed char D.42172;
  switch_payload_t D.42171;
  uint32_t D.42168;
  switch_call_direction_t D.42165;
  const switch_codec_type_t D.42162;
  uint8_t D.42158;
  int D.42156;
  size_t D.42155;
  size_t D.42154;
  char * D.42153;
  size_t D.42152;
  switch_payload_t D.42149;
  switch_payload_t D.42148;
  int32_t D.42145;
  int D.42144;
  switch_payload_t D.42143;
  struct payload_map_t * D.42142;
  size_t D.42141;
  size_t D.42140;
  char * D.42139;
  size_t D.42138;
  uint8_t D.42135;
  const char * D.42134;
  uint32_t D.42133;
  switch_call_direction_t D.42131;
  uint32_t D.42129;
  int iftmp.34;
  size_t D.42122;
  size_t D.42121;
  char * D.42120;
  size_t D.42119;
  short unsigned int D.42118;
  uint32_t D.42115;
  switch_port_t D.42112;
  uint32_t D.42109;
  switch_port_t D.42106;
  uint32_t D.42103;
  switch_call_direction_t D.42100;
  uint32_t D.42097;
  size_t D.42096;
  size_t D.42095;
  uint32_t D.42092;
  uint32_t D.42090;
  size_t D.42085;
  size_t D.42084;
  size_t D.42083;
  uint32_t D.42082;
  uint32_t D.42081;
  int D.42074;
  int D.42072;
  char * const D.42071;
  const int D.42068;
  const switch_codec_type_t D.42065;
  size_t D.42064;
  size_t D.42063;
  switch_rtp_crypto_mode_t D.42058;
  size_t D.42057;
  struct switch_event_t * map.33;
  uint32_t D.42055;
  uint32_t D.42054;
  uint32_t D.42048;
  uint32_t D.42046;
  int D.42042;
  uint32_t D.42039;
  int32_t D.42030;
  size_t D.42026;
  size_t D.42025;
  char * D.42024;
  size_t D.42023;
  uint32_t D.42020;
  char * D.42016;
  uint32_t D.42013;
  int D.42010;
  size_t D.42009;
  size_t D.42008;
  char * D.42007;
  size_t D.42006;
  int D.39607;
  int D.41995;
  int D.41994;
  size_t D.41993;
  size_t D.41992;
  char * D.41991;
  size_t D.41990;
  uint32_t D.41989;
  _Bool D.41987;
  _Bool D.41986;
  _Bool D.41985;
  int D.41982;
  size_t D.41981;
  size_t D.41980;
  char * D.41979;
  size_t D.41978;
  switch_port_t D.41975;
  int D.39598;
  char * D.41966;
  int D.41965;
  switch_port_t D.41964;
  char * D.41963;
  char * D.41962;
  size_t D.41961;
  size_t D.41960;
  char * D.41959;
  size_t D.41958;
  char * D.41957;
  size_t D.41956;
  size_t D.41955;
  char * D.41954;
  size_t D.41953;
  char * D.41952;
  size_t D.41951;
  size_t D.41950;
  char * D.41949;
  size_t D.41948;
  size_t D.41947;
  size_t D.41946;
  char * D.41945;
  size_t D.41944;
  size_t D.41943;
  size_t D.41942;
  char * D.41941;
  size_t D.41940;
  size_t D.41939;
  size_t D.41938;
  char * D.41937;
  size_t D.41936;
  char * D.41935;
  uint32_t D.41934;
  size_t D.41933;
  size_t D.41932;
  char * D.41931;
  size_t D.41930;
  uint8_t D.41927;
  int D.41926;
  size_t D.41925;
  size_t D.41924;
  char * D.41923;
  size_t D.41922;
  size_t D.41920;
  size_t D.41919;
  char * D.41918;
  size_t D.41917;
  size_t D.41916;
  size_t D.41915;
  char * D.41914;
  size_t D.41913;
  int8_t D.41910;
  char[192] * D.41907;
  size_t D.41906;
  size_t D.41905;
  char * D.41904;
  size_t D.41903;
  char * D.41899;
  size_t D.41898;
  size_t D.41897;
  char * D.41896;
  size_t D.41895;
  size_t D.41891;
  size_t D.41890;
  char * D.41889;
  size_t D.41888;
  size_t D.41885;
  size_t D.41884;
  char * D.41883;
  size_t D.41882;
  const char D.41876;
  unsigned int D.41874;
  size_t D.41873;
  const char D.41870;
  char * iftmp.30;
  size_t D.41867;
  size_t D.41866;
  char * D.41865;
  size_t D.41864;
  size_t D.41859;
  size_t D.41858;
  char * D.41857;
  size_t D.41856;
  size_t D.41852;
  size_t D.41851;
  char * D.41850;
  size_t D.41849;
  int32_t D.41846;
  size_t D.41845;
  size_t D.41844;
  char * D.41843;
  size_t D.41842;
  size_t D.41840;
  size_t D.41839;
  char * D.41838;
  size_t D.41837;
  uint32_t D.41834;
  uint32_t D.41831;
  int32_t D.41829;
  const int D.41825;
  const struct switch_codec_implementation_t * D.41819;
  uint32_t D.41817;
  char * D.41816;
  size_t D.41815;
  size_t D.41814;
  char * D.41813;
  size_t D.41812;
  int32_t D.41807;
  size_t D.41806;
  size_t D.41805;
  char * D.41804;
  size_t D.41803;
  size_t D.41800;
  size_t D.41799;
  char * D.41798;
  size_t D.41797;
  int D.41795;
  switch_payload_t D.41794;
  size_t D.41793;
  size_t D.41792;
  char * D.41791;
  size_t D.41790;
  int D.41787;
  char * D.41786;
  int D.41783;
  size_t D.41782;
  size_t D.41781;
  char * D.41780;
  size_t D.41779;
  size_t D.41778;
  size_t D.41777;
  char * D.41776;
  size_t D.41775;
  int32_t D.41770;
  size_t D.41769;
  size_t D.41768;
  char * D.41767;
  size_t D.41766;
  uint32_t D.41763;
  int32_t D.41761;
  uint8_t D.41757;
  int D.41755;
  size_t D.41754;
  size_t D.41753;
  char * D.41752;
  size_t D.41751;
  switch_payload_t D.41748;
  struct switch_mutex_t * D.41747;
  int32_t D.41744;
  int D.41743;
  switch_payload_t D.41742;
  size_t D.41741;
  size_t D.41740;
  char * D.41739;
  size_t D.41738;
  const char * D.41737;
  switch_rtp_crypto_key_type_t D.41736;
  uint32_t D.41734;
  uint8_t D.41732;
  int iftmp.29;
  int D.41727;
  size_t D.41726;
  size_t D.41725;
  char * D.41724;
  size_t D.41723;
  uint8_t D.41720;
  char * D.41719;
  size_t D.41718;
  size_t D.41717;
  char * D.41716;
  size_t D.41715;
  uint32_t D.41712;
  char * D.41708;
  int D.41703;
  unsigned int D.41700;
  switch_core_media_NDLB_t D.41699;
  uint32_t D.41696;
  int D.41693;
  const char * D.41692;
  uint32_t D.41689;
  unsigned int D.41688;
  unsigned int D.41687;
  unsigned int D.41686;
  time_t D.41685;
  uint32_t D.41682;
  char * D.41673;
  char * D.41664;
  uint32_t D.41655;
  uint32_t D.41653;
  _Bool D.41647;
  _Bool D.41646;
  _Bool D.41645;
  int D.41642;
  uint32_t D.41634;
  int D.41633;
  const int D.41632;
  const uint32_t D.41631;
  uint32_t D.41630;
  unsigned char D.41629;
  char * D.41628;
  char * orig_fmtp.27;
  switch_payload_t orig_pt.26;
  switch_status_t D.41622;
  char * const D.41621;
  switch_media_type_t D.41620;
  const switch_codec_type_t D.41619;
  struct switch_core_session_t * orig_session.25;
  int D.41612;
  _Bool D.41609;
  _Bool D.41608;
  _Bool D.41607;
  switch_payload_t D.41606;
  int32_t D.41603;
  int D.41602;
  int D.41599;
  switch_payload_t D.41596;
  switch_core_media_dtmf_t D.41593;
  switch_payload_t D.41590;
  int D.41587;
  const switch_payload_t D.41586;
  const struct switch_codec_implementation_t * D.41585;
  uint32_t D.41581;
  int D.41578;
  int D.41577;
  int D.41575;
  int32_t D.41572;
  struct payload_map_t * D.41566;
  int D.41565;
  const char * D.41564;
  uint32_t D.41562;
  int D.41557;
  int D.41554;
  int D.41551;
  const char * D.41550;
  uint32_t D.41547;
  uint32_t D.41546;
  uint32_t D.41544;
  int D.41538;
  struct switch_channel_t * D.41535;
  struct switch_core_session_t * D.41534;
  int D.41531;
  const char * D.41530;
  char * D.41527;
  const char * D.41526;
  char * D.41523;
  struct switch_core_media_params_t * D.41522;
  int D.41519;
  const char * D.41518;
  switch_call_direction_t D.41513;
  struct switch_channel_t * D.41512;

  # BLOCK 2 freq:863
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG ptime => 0
  # DEBUG rate => 0
  # DEBUG use_cng => 1
  D.41512_73 = session_72(D)->channel;
  pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_74
  D.41512_75 = session_72(D)->channel;
  ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);
  # DEBUG ov_fmtp => ov_fmtp_76
  D.41512_77 = session_72(D)->channel;
  append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);
  # DEBUG append_audio => append_audio_78
  D.41512_79 = session_72(D)->channel;
  append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);
  # DEBUG append_video => append_video_80
  srbuf = "";
  D.41512_81 = session_72(D)->channel;
  fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);
  # DEBUG fmtp_out_var => fmtp_out_var_82
  map = 0B;
  ptmap = 0B;
  local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_83
  local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);
  # DEBUG local_sdp_video_zrtp_hash => local_sdp_video_zrtp_hash_84
  # DEBUG vp8 => 0
  # DEBUG red => 0
  D.41512_87 = session_72(D)->channel;
  D.41513_88 = switch_channel_direction (D.41512_87);
  is_outbound_89 = D.41513_88 == 1;
  # DEBUG is_outbound => is_outbound_89
  if (session_72(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:863
  # PRED: 2 [100.0%]  (false,exec)
  smh_90 = session_72(D)->media_handle;
  # DEBUG smh => smh_90
  if (smh_90 == 0B)
    goto <bb 449>;
  else
    goto <bb 5>;
  # SUCC: 449 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:676
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#28 => &smh_90->engines
  # DEBUG a_engine => D#28
  # DEBUG D#27 => &smh_90->engines[1]
  # DEBUG v_engine => D#27
  D.41512_93 = session_72(D)->channel;
  D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);
  D.41519_95 = switch_true (D.41518_94);
  if (D.41519_95 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 6 freq:338
  # PRED: 5 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux = 1;
  MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux = 1;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:676
  # PRED: 5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.41522_96 = smh_90->mparams;
  D.41523_97 = D.41522_96->rtcp_audio_interval_msec;
  if (D.41523_97 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

  # BLOCK 8 freq:45
  # PRED: 7 [6.7%]  (true,exec)
  D.41522_98 = smh_90->mparams;
  D.41512_99 = session_72(D)->channel;
  D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);
  D.41522_98->rtcp_audio_interval_msec = D.41526_100;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:676
  # PRED: 7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  D.41522_101 = smh_90->mparams;
  D.41527_102 = D.41522_101->rtcp_video_interval_msec;
  if (D.41527_102 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

  # BLOCK 10 freq:45
  # PRED: 9 [6.7%]  (true,exec)
  D.41522_103 = smh_90->mparams;
  D.41512_104 = session_72(D)->channel;
  D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);
  D.41522_103->rtcp_video_interval_msec = D.41530_105;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:676
  # PRED: 9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  D.41531_106 = dtls_ok (session_72(D));
  if (D.41531_106 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

  # BLOCK 12 freq:196
  # PRED: 11 [29.0%]  (true,exec)
  D.41534_107 = smh_90->session;
  D.41535_108 = D.41534_107->channel;
  tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_109
  if (tmp_109 != 0B)
    goto <bb 13>;
  else
    goto <bb 15>;
  # SUCC: 13 [69.8%]  (true,exec) 15 [30.2%]  (false,exec)

  # BLOCK 13 freq:137
  # PRED: 12 [69.8%]  (true,exec)
  D.41538_110 = switch_false (tmp_109);
  if (D.41538_110 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

  # BLOCK 14 freq:40
  # PRED: 13 [29.0%]  (true,exec)
  D.41534_111 = smh_90->session;
  D.41535_112 = D.41534_111->channel;
  switch_channel_clear_flag (D.41535_112, 111);
  D.41534_113 = smh_90->session;
  D.41535_114 = D.41534_113->channel;
  switch_channel_clear_flag (D.41535_114, 109);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:676
  # PRED: 11 [71.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [71.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  if (is_outbound_89 != 0)
    goto <bb 18>;
  else
    goto <bb 16>;
  # SUCC: 18 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 16 freq:338
  # PRED: 15 [50.0%]  (false,exec)
  D.41512_115 = session_72(D)->channel;
  D.41544_116 = switch_channel_test_flag (D.41512_115, 84);
  if (D.41544_116 != 0)
    goto <bb 18>;
  else
    goto <bb 17>;
  # SUCC: 18 [71.0%]  (true,exec) 17 [29.0%]  (false,exec)

  # BLOCK 17 freq:98
  # PRED: 16 [29.0%]  (false,exec)
  D.41512_117 = session_72(D)->channel;
  D.41546_118 = switch_channel_test_flag (D.41512_117, 112);
  if (D.41546_118 != 0)
    goto <bb 18>;
  else
    goto <bb 27>;
  # SUCC: 18 [50.0%]  (true,exec) 27 [50.0%]  (false,exec)

  # BLOCK 18 freq:627
  # PRED: 15 [50.0%]  (true,exec) 16 [71.0%]  (true,exec) 17 [50.0%]  (true,exec)
  D.41512_119 = session_72(D)->channel;
  D.41547_120 = switch_channel_test_flag (D.41512_119, 106);
  if (D.41547_120 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;
  # SUCC: 19 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

  # BLOCK 19 freq:182
  # PRED: 18 [29.0%]  (true,exec)
  D.41512_121 = session_72(D)->channel;
  D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);
  D.41551_123 = switch_true (D.41550_122);
  if (D.41551_123 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [29.0%]  (true,exec) 21 [71.0%]  (false,exec)

  # BLOCK 20 freq:53
  # PRED: 19 [29.0%]  (true,exec)
  D.41512_124 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_124, 106, 1);
  D.41512_125 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_125, 108, 1);
  D.41522_126 = smh_90->mparams;
  D.41522_126->rtcp_audio_interval_msec = "5000";
  D.41522_127 = smh_90->mparams;
  D.41522_127->rtcp_video_interval_msec = "5000";
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:627
  # PRED: 18 [71.0%]  (false,exec) 19 [71.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  D.41554_128 = switch_rtp_has_dtls ();
  if (D.41554_128 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;
  # SUCC: 22 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 22 freq:182
  # PRED: 21 [29.0%]  (true,exec)
  D.41557_129 = dtls_ok (session_72(D));
  if (D.41557_129 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;
  # SUCC: 23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 23 freq:53
  # PRED: 22 [29.0%]  (true,exec)
  D.41512_130 = session_72(D)->channel;
  D.41562_131 = switch_channel_test_flag (D.41512_130, 106);
  if (D.41562_131 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;
  # SUCC: 25 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 24 freq:26
  # PRED: 23 [50.0%]  (false,exec)
  D.41534_132 = smh_90->session;
  D.41535_133 = D.41534_132->channel;
  D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);
  D.41565_135 = switch_true (D.41564_134);
  if (D.41565_135 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 25 freq:40
  # PRED: 23 [50.0%]  (true,exec) 24 [50.0%]  (true,exec)
  D.41534_136 = smh_90->session;
  D.41535_137 = D.41534_136->channel;
  switch_channel_set_flag_value (D.41535_137, 109, 1);
  D.41534_138 = smh_90->session;
  D.41535_139 = D.41534_138->channel;
  switch_channel_set_flag_value (D.41535_139, 92, 1);
  generate_local_fingerprint (smh_90, 0);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:627
  # PRED: 21 [71.0%]  (false,exec) 22 [71.0%]  (false,exec) 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
  switch_core_session_parse_crypto_prefs (session_72(D));
  switch_core_session_check_outgoing_crypto (session_72(D));
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:676
  # PRED: 17 [50.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  D.41566_140 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  fmtp_out_141 = D.41566_140->fmtp_out;
  # DEBUG fmtp_out => fmtp_out_141
  D.41522_142 = smh_90->mparams;
  username_143 = D.41522_142->sdp_username;
  # DEBUG username => username_143
  buf_144 = calloc (1, 65536);
  # DEBUG buf => buf_144
  if (buf_144 == 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [0.0%]  (true,exec) 29 [100.0%]  (false,exec)

  # BLOCK 28
  # PRED: 27 [0.0%]  (true,exec)
  __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 29 freq:676
  # PRED: 27 [100.0%]  (false,exec)
  switch_core_media_check_dtmf_type (session_72(D));
  D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41572_145 != 0)
    goto <bb 34>;
  else
    goto <bb 30>;
  # SUCC: 34 [71.0%]  (true,exec) 30 [29.0%]  (false,exec)

  # BLOCK 30 freq:196
  # PRED: 29 [29.0%]  (false,exec)
  D.41512_146 = session_72(D)->channel;
  val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);
  # DEBUG val => val_147
  if (val_147 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [85.0%]  (true,exec) 32 [15.0%]  (false,exec)

  # BLOCK 31 freq:167
  # PRED: 30 [85.0%]  (true,exec)
  D.41575_148 = switch_true (val_147);
  if (D.41575_148 != 0)
    goto <bb 34>;
  else
    goto <bb 32>;
  # SUCC: 34 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

  # BLOCK 32 freq:113
  # PRED: 30 [15.0%]  (false,exec) 31 [50.0%]  (false,exec)
  D.41512_149 = session_72(D)->channel;
  val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);
  # DEBUG val => val_150
  if (val_150 != 0B)
    goto <bb 33>;
  else
    goto <bb 35>;
  # SUCC: 33 [69.8%]  (true,exec) 35 [30.2%]  (false,exec)

  # BLOCK 33 freq:79
  # PRED: 32 [69.8%]  (true,exec)
  D.41577_151 = switch_true (val_150);
  if (D.41577_151 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

  # BLOCK 34 freq:603
  # PRED: 29 [71.0%]  (true,exec) 31 [50.0%]  (true,exec) 33 [50.0%]  (true,exec)
  # DEBUG use_cng => 0
  D.41522_153 = smh_90->mparams;
  D.41522_153->cng_pt = 0;
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:676
  # PRED: 32 [30.2%]  (false,exec) 33 [50.0%]  (false,exec) 34 [100.0%]  (fallthru,exec)
  # use_cng_17 = PHI <1(32), 1(33), 0(34)>
  # DEBUG use_cng => use_cng_17
  D.41578_154 = smh_90->payload_space;
  if (D.41578_154 == 0)
    goto <bb 36>;
  else
    goto <bb 62>;
  # SUCC: 36 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

  # BLOCK 36 freq:196
  # PRED: 35 [29.0%]  (true,exec)
  D.41512_155 = session_72(D)->channel;
  D.41581_156 = switch_channel_test_flag (D.41512_155, 106);
  if (D.41581_156 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;
  # SUCC: 37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 37 freq:98
  # PRED: 36 [50.0%]  (true,exec)
  smh_90->payload_space = 102;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:196
  # PRED: 39 [100.0%]  (fallthru,exec) 37 [100.0%]  (fallthru,exec)
  # i_1577 = PHI <0(39), 0(37)>
  goto <bb 41>;
  # SUCC: 41 [100.0%]  (fallthru)

  # BLOCK 39 freq:98
  # PRED: 36 [50.0%]  (false,exec)
  smh_90->payload_space = 98;
  goto <bb 38>;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:9804
  # PRED: 41 [98.0%]  (true,exec)
  D.41585_160 = smh_90->codecs[i_36];
  D.41586_161 = D.41585_160->ianacode;
  smh_90->ianacodes[i_36] = D.41586_161;
  i_162 = i_36 + 1;
  # DEBUG i => i_162
  # SUCC: 41 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 41 freq:10000
  # PRED: 38 [100.0%]  (fallthru) 40 [100.0%]  (fallthru,dfs_back,exec)
  # i_36 = PHI <i_1577(38), i_162(40)>
  # DEBUG i => i_36
  D.41522_158 = smh_90->mparams;
  D.41587_159 = D.41522_158->num_codecs;
  if (D.41587_159 > i_36)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [98.0%]  (true,exec) 42 [2.0%]  (false,exec)

  # BLOCK 42 freq:196
  # PRED: 41 [2.0%]  (false,exec)
  if (sdp_type_163(D) == 0)
    goto <bb 43>;
  else
    goto <bb 62>;
  # SUCC: 43 [29.0%]  (true,exec) 62 [71.0%]  (false,exec)

  # BLOCK 43 freq:57
  # PRED: 42 [29.0%]  (true,exec)
  orig_session = 0B;
  switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);
  # DEBUG i => 0
  goto <bb 59>;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:2843
  # PRED: 59 [98.0%]  (true,exec)
  imp_167 = smh_90->codecs[i_37];
  # DEBUG imp => imp_167
  orig_pt = 0;
  orig_fmtp = 0B;
  D.41590_168 = smh_90->ianacodes[i_37];
  if (D.41590_168 > 64)
    goto <bb 45>;
  else
    goto <bb 58>;
  # SUCC: 45 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

  # BLOCK 45 freq:1422
  # PRED: 44 [50.0%]  (true,exec)
  D.41522_169 = smh_90->mparams;
  D.41593_170 = D.41522_169->dtmf_type;
  if (D.41593_170 == 0)
    goto <bb 46>;
  else
    goto <bb 49>;
  # SUCC: 46 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

  # BLOCK 46 freq:711
  # PRED: 45 [50.0%]  (true,exec)
  D.41522_171 = smh_90->mparams;
  D.41596_172 = D.41522_171->te;
  if (D.41596_172 > 95)
    goto <bb 47>;
  else
    goto <bb 49>;
  # SUCC: 47 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

  # BLOCK 47 freq:355
  # PRED: 46 [50.0%]  (true,exec)
  D.41522_173 = smh_90->mparams;
  D.41596_174 = D.41522_173->te;
  D.41599_175 = (int) D.41596_174;
  D.41578_176 = smh_90->payload_space;
  if (D.41599_175 == D.41578_176)
    goto <bb 48>;
  else
    goto <bb 49>;
  # SUCC: 48 [28.0%]  (true,exec) 49 [72.0%]  (false,exec)

  # BLOCK 48 freq:100
  # PRED: 47 [28.0%]  (true,exec)
  D.41578_177 = smh_90->payload_space;
  D.41602_178 = D.41578_177 + 1;
  smh_90->payload_space = D.41602_178;
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:1422
  # PRED: 45 [50.0%]  (false,exec) 46 [50.0%]  (false,exec) 47 [72.0%]  (false,exec) 48 [100.0%]  (fallthru,exec)
  D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41603_179 == 0)
    goto <bb 50>;
  else
    goto <bb 53>;
  # SUCC: 50 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

  # BLOCK 50 freq:711
  # PRED: 49 [50.0%]  (true,exec)
  D.41522_180 = smh_90->mparams;
  D.41606_181 = D.41522_180->cng_pt;
  D.41607_182 = D.41606_181 != 0;
  D.41608_183 = use_cng_17 != 0;
  D.41609_184 = D.41607_182 && D.41608_183;
  if (D.41609_184 != 0)
    goto <bb 51>;
  else
    goto <bb 53>;
  # SUCC: 51 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

  # BLOCK 51 freq:355
  # PRED: 50 [50.0%]  (true,exec)
  D.41522_185 = smh_90->mparams;
  D.41606_186 = D.41522_185->cng_pt;
  D.41612_187 = (int) D.41606_186;
  D.41578_188 = smh_90->payload_space;
  if (D.41612_187 == D.41578_188)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

  # BLOCK 52 freq:100
  # PRED: 51 [28.0%]  (true,exec)
  D.41578_189 = smh_90->payload_space;
  D.41602_190 = D.41578_189 + 1;
  smh_90->payload_space = D.41602_190;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:1422
  # PRED: 49 [50.0%]  (false,exec) 50 [50.0%]  (false,exec) 51 [72.0%]  (false,exec) 52 [100.0%]  (fallthru,exec)
  orig_session.25_191 = orig_session;
  if (orig_session.25_191 != 0B)
    goto <bb 54>;
  else
    goto <bb 57>;
  # SUCC: 54 [69.8%]  (true,exec) 57 [30.2%]  (false,exec)

  # BLOCK 54 freq:993
  # PRED: 53 [69.8%]  (true,exec)
  orig_session.25_192 = orig_session;
  D.41619_193 = imp_167->codec_type;
  D.41620_194 = D.41619_193 != 0;
  D.41621_195 = imp_167->iananame;
  D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);
  if (D.41622_196 == 0)
    goto <bb 55>;
  else
    goto <bb 57>;
  # SUCC: 55 [50.0%]  (true,exec) 57 [50.0%]  (false,exec)

  # BLOCK 55 freq:496
  # PRED: 54 [50.0%]  (true,exec)
  orig_pt.26_197 = orig_pt;
  smh_90->ianacodes[i_37] = orig_pt.26_197;
  orig_fmtp.27_198 = orig_fmtp;
  if (orig_fmtp.27_198 != 0B)
    goto <bb 56>;
  else
    goto <bb 58>;
  # SUCC: 56 [69.8%]  (true,exec) 58 [30.2%]  (false,exec)

  # BLOCK 56 freq:347
  # PRED: 55 [69.8%]  (true,exec)
  orig_fmtp.27_199 = orig_fmtp;
  D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);
  smh_90->fmtps[i_37] = D.41628_200;
  goto <bb 58>;
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:925
  # PRED: 53 [30.2%]  (false,exec) 54 [50.0%]  (false,exec)
  D.41578_201 = smh_90->payload_space;
  D.41629_202 = (unsigned char) D.41578_201;
  smh_90->ianacodes[i_37] = D.41629_202;
  D.41602_203 = D.41578_201 + 1;
  smh_90->payload_space = D.41602_203;
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:2843
  # PRED: 44 [50.0%]  (false,exec) 56 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec) 55 [30.2%]  (false,exec)
  D.41619_204 = imp_167->codec_type;
  D.41620_205 = D.41619_204 != 0;
  D.41621_206 = imp_167->iananame;
  D.41590_207 = smh_90->ianacodes[i_37];
  D.41630_208 = (uint32_t) D.41590_207;
  D.41631_209 = imp_167->samples_per_second;
  D.41632_210 = imp_167->microseconds_per_packet;
  D.41633_211 = D.41632_210 / 1000;
  D.41634_212 = (uint32_t) D.41633_211;
  switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);
  i_213 = i_37 + 1;
  # DEBUG i => i_213
  # SUCC: 59 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 59 freq:2900
  # PRED: 43 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,dfs_back,exec)
  # i_37 = PHI <0(43), i_213(58)>
  # DEBUG i => i_37
  D.41522_165 = smh_90->mparams;
  D.41587_166 = D.41522_165->num_codecs;
  if (D.41587_166 > i_37)
    goto <bb 44>;
  else
    goto <bb 60>;
  # SUCC: 44 [98.0%]  (true,exec) 60 [2.0%]  (false,exec)

  # BLOCK 60 freq:57
  # PRED: 59 [2.0%]  (false,exec)
  orig_session.25_214 = orig_session;
  if (orig_session.25_214 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;
  # SUCC: 61 [69.8%]  (true,exec) 62 [30.2%]  (false,exec)

  # BLOCK 61 freq:40
  # PRED: 60 [69.8%]  (true,exec)
  orig_session.25_215 = orig_session;
  switch_core_session_rwunlock (orig_session.25_215);
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 62 freq:676
  # PRED: 35 [71.0%]  (false,exec) 42 [71.0%]  (false,exec) 60 [30.2%]  (false,exec) 61 [100.0%]  (fallthru,exec)
  if (fmtp_out_var_82 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;
  # SUCC: 63 [85.0%]  (true,exec) 64 [15.0%]  (false,exec)

  # BLOCK 63 freq:574
  # PRED: 62 [85.0%]  (true,exec)
  # DEBUG fmtp_out => fmtp_out_var_82
  # SUCC: 64 [100.0%]  (fallthru,exec)

  # BLOCK 64 freq:676
  # PRED: 62 [15.0%]  (false,exec) 63 [100.0%]  (fallthru,exec)
  # fmtp_out_21 = PHI <fmtp_out_141(62), fmtp_out_var_82(63)>
  # DEBUG fmtp_out => fmtp_out_21
  D.41512_217 = session_72(D)->channel;
  val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);
  # DEBUG val => val_218
  if (val_218 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;
  # SUCC: 66 [15.0%]  (true,exec) 65 [85.0%]  (false,exec)

  # BLOCK 65 freq:574
  # PRED: 64 [85.0%]  (false,exec)
  D.41642_219 = switch_true (val_218);
  if (D.41642_219 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [50.0%]  (true,exec) 67 [50.0%]  (false,exec)

  # BLOCK 66 freq:389
  # PRED: 64 [15.0%]  (true,exec) 65 [50.0%]  (true,exec)
  D.41512_220 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_220, 110, 1);
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:676
  # PRED: 65 [50.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
  D.41645_222 = force_221(D) == 0;
  D.41646_224 = ip_223(D) == 0B;
  D.41647_225 = D.41645_222 && D.41646_224;
  if (D.41647_225 != 0)
    goto <bb 68>;
  else
    goto <bb 76>;
  # SUCC: 68 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

  # BLOCK 68 freq:338
  # PRED: 67 [50.0%]  (true,exec)
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 71>;
  else
    goto <bb 69>;
  # SUCC: 71 [15.0%]  (true,exec) 69 [85.0%]  (false,exec)

  # BLOCK 69 freq:287
  # PRED: 68 [85.0%]  (false,exec)
  D.48132_1516 = *sr_226(D);
  if (D.48132_1516 == 0)
    goto <bb 71>;
  else
    goto <bb 70>;
  # SUCC: 71 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 70 freq:144
  # PRED: 69 [50.0%]  (false,exec)
  # SUCC: 71 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:338
  # PRED: 68 [15.0%]  (true,exec) 69 [50.0%]  (true,exec) 70 [100.0%]  (fallthru,exec)
  # D.48131_1517 = PHI <1(68), 1(69), 0(70)>
  if (D.48131_1517 != 0)
    goto <bb 72>;
  else
    goto <bb 76>;
  # SUCC: 72 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

  # BLOCK 72 freq:98
  # PRED: 71 [29.0%]  (true,exec)
  D.41512_228 = session_72(D)->channel;
  D.41653_229 = switch_channel_test_flag (D.41512_228, 15);
  if (D.41653_229 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;
  # SUCC: 74 [71.0%]  (true,exec) 73 [29.0%]  (false,exec)

  # BLOCK 73 freq:28
  # PRED: 72 [29.0%]  (false,exec)
  D.41512_230 = session_72(D)->channel;
  D.41655_231 = switch_channel_test_flag (D.41512_230, 29);
  if (D.41655_231 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;
  # SUCC: 74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

  # BLOCK 74 freq:84
  # PRED: 72 [71.0%]  (true,exec) 73 [50.0%]  (true,exec)
  if (buf_144 != 0B)
    goto <bb 75>;
  else
    goto <bb 449>;
  # SUCC: 75 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

  # BLOCK 75 freq:59
  # PRED: 74 [69.8%]  (true,exec)
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;
  # SUCC: 449 [100.0%]  (fallthru,exec)

  # BLOCK 76 freq:592
  # PRED: 67 [50.0%]  (false,exec) 71 [71.0%]  (false,exec) 73 [50.0%]  (false,exec)
  if (ip_223(D) == 0B)
    goto <bb 77>;
  else
    goto <bb 79>;
  # SUCC: 77 [15.0%]  (true,exec) 79 [85.0%]  (false,exec)

  # BLOCK 77 freq:89
  # PRED: 76 [15.0%]  (true,exec)
  ip_233 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_ip;
  # DEBUG ip => ip_233
  if (ip_233 == 0B)
    goto <bb 78>;
  else
    goto <bb 79>;
  # SUCC: 78 [15.0%]  (true,exec) 79 [85.0%]  (false,exec)

  # BLOCK 78 freq:13
  # PRED: 77 [15.0%]  (true,exec)
  ip_234 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_ip;
  # DEBUG ip => ip_234
  # SUCC: 79 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:592
  # PRED: 76 [85.0%]  (false,exec) 77 [85.0%]  (false,exec) 78 [100.0%]  (fallthru,exec)
  # ip_1 = PHI <ip_223(D)(76), ip_233(77), ip_234(78)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 80>;
  else
    goto <bb 82>;
  # SUCC: 80 [6.7%]  (true,exec) 82 [93.3%]  (false,exec)

  # BLOCK 80 freq:40
  # PRED: 79 [6.7%]  (true,exec)
  D.41512_235 = session_72(D)->channel;
  D.41664_236 = switch_channel_get_name (D.41512_235);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);
  if (buf_144 != 0B)
    goto <bb 81>;
  else
    goto <bb 449>;
  # SUCC: 81 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

  # BLOCK 81 freq:28
  # PRED: 80 [69.8%]  (true,exec)
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;
  # SUCC: 449 [100.0%]  (fallthru,exec)

  # BLOCK 82 freq:552
  # PRED: 79 [93.3%]  (false,exec)
  if (port_238(D) == 0)
    goto <bb 83>;
  else
    goto <bb 85>;
  # SUCC: 83 [50.0%]  (true,exec) 85 [50.0%]  (false,exec)

  # BLOCK 83 freq:276
  # PRED: 82 [50.0%]  (true,exec)
  port_239 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_port;
  # DEBUG port => port_239
  if (port_239 == 0)
    goto <bb 84>;
  else
    goto <bb 85>;
  # SUCC: 84 [50.0%]  (true,exec) 85 [50.0%]  (false,exec)

  # BLOCK 84 freq:138
  # PRED: 83 [50.0%]  (true,exec)
  port_240 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_port;
  # DEBUG port => port_240
  # SUCC: 85 [100.0%]  (fallthru,exec)

  # BLOCK 85 freq:552
  # PRED: 82 [50.0%]  (false,exec) 83 [50.0%]  (false,exec) 84 [100.0%]  (fallthru,exec)
  # port_2 = PHI <port_238(D)(82), port_239(83), port_240(84)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 86>;
  else
    goto <bb 88>;
  # SUCC: 86 [29.0%]  (true,exec) 88 [71.0%]  (false,exec)

  # BLOCK 86 freq:160
  # PRED: 85 [29.0%]  (true,exec)
  D.41512_241 = session_72(D)->channel;
  D.41673_242 = switch_channel_get_name (D.41512_241);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);
  if (buf_144 != 0B)
    goto <bb 87>;
  else
    goto <bb 449>;
  # SUCC: 87 [69.8%]  (true,exec) 449 [30.2%]  (false,exec)

  # BLOCK 87 freq:112
  # PRED: 86 [69.8%]  (true,exec)
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;
  # SUCC: 449 [100.0%]  (fallthru,exec)

  # BLOCK 88 freq:392
  # PRED: 85 [71.0%]  (false,exec)
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 91>;
  else
    goto <bb 89>;
  # SUCC: 91 [15.0%]  (true,exec) 89 [85.0%]  (false,exec)

  # BLOCK 89 freq:333
  # PRED: 88 [85.0%]  (false,exec)
  D.48136_1518 = *sr_226(D);
  if (D.48136_1518 == 0)
    goto <bb 91>;
  else
    goto <bb 90>;
  # SUCC: 91 [50.0%]  (true,exec) 90 [50.0%]  (false,exec)

  # BLOCK 90 freq:167
  # PRED: 89 [50.0%]  (false,exec)
  # SUCC: 91 [100.0%]  (fallthru,exec)

  # BLOCK 91 freq:392
  # PRED: 88 [15.0%]  (true,exec) 89 [50.0%]  (true,exec) 90 [100.0%]  (fallthru,exec)
  # D.48135_1519 = PHI <1(88), 1(89), 0(90)>
  if (D.48135_1519 != 0)
    goto <bb 92>;
  else
    goto <bb 94>;
  # SUCC: 92 [29.0%]  (true,exec) 94 [71.0%]  (false,exec)

  # BLOCK 92 freq:114
  # PRED: 91 [29.0%]  (true,exec)
  D.41512_245 = session_72(D)->channel;
  var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);
  # DEBUG var_val => var_val_246
  if (var_val_246 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;
  # SUCC: 93 [85.0%]  (true,exec) 94 [15.0%]  (false,exec)

  # BLOCK 93 freq:97
  # PRED: 92 [85.0%]  (true,exec)
  # DEBUG sr => var_val_246
  # SUCC: 94 [100.0%]  (fallthru,exec)

  # BLOCK 94 freq:392
  # PRED: 91 [71.0%]  (false,exec) 93 [100.0%]  (fallthru,exec) 92 [15.0%]  (false,exec)
  # sr_3 = PHI <sr_226(D)(91), var_val_246(93), "sendrecv"(92)>
  # DEBUG sr => sr_3
  D.41682_249 = smh_90->owner_id;
  if (D.41682_249 == 0)
    goto <bb 95>;
  else
    goto <bb 96>;
  # SUCC: 95 [29.0%]  (true,exec) 96 [71.0%]  (false,exec)

  # BLOCK 95 freq:114
  # PRED: 94 [29.0%]  (true,exec)
  D.41685_250 = switch_epoch_time_now (0B);
  D.41686_251 = (unsigned int) D.41685_250;
  D.41687_252 = (unsigned int) port_2;
  D.41688_253 = D.41686_251 - D.41687_252;
  smh_90->owner_id = D.41688_253;
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 96 freq:392
  # PRED: 94 [71.0%]  (false,exec) 95 [100.0%]  (fallthru,exec)
  D.41689_254 = smh_90->session_id;
  if (D.41689_254 == 0)
    goto <bb 97>;
  else
    goto <bb 98>;
  # SUCC: 97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

  # BLOCK 97 freq:196
  # PRED: 96 [50.0%]  (true,exec)
  D.41682_255 = smh_90->owner_id;
  smh_90->session_id = D.41682_255;
  # SUCC: 98 [100.0%]  (fallthru,exec)

  # BLOCK 98 freq:392
  # PRED: 96 [50.0%]  (false,exec) 97 [100.0%]  (fallthru,exec)
  D.41512_256 = session_72(D)->channel;
  D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);
  D.41693_258 = switch_true (D.41692_257);
  if (D.41693_258 != 0)
    goto <bb 99>;
  else
    goto <bb 100>;
  # SUCC: 99 [29.0%]  (true,exec) 100 [71.0%]  (false,exec)

  # BLOCK 99 freq:114
  # PRED: 98 [29.0%]  (true,exec)
  D.41512_259 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_259, 102, 1);
  # SUCC: 100 [100.0%]  (fallthru,exec)

  # BLOCK 100 freq:392
  # PRED: 98 [71.0%]  (false,exec) 99 [100.0%]  (fallthru,exec)
  D.41689_260 = smh_90->session_id;
  D.41696_261 = D.41689_260 + 1;
  smh_90->session_id = D.41696_261;
  D.41522_262 = smh_90->mparams;
  D.41699_263 = D.41522_262->ndlb;
  D.41700_264 = D.41699_263 & 16;
  if (D.41700_264 != 0)
    goto <bb 103>;
  else
    goto <bb 101>;
  # SUCC: 103 [71.0%]  (true,exec) 101 [29.0%]  (false,exec)

  # BLOCK 101 freq:114
  # PRED: 100 [29.0%]  (false,exec)
  D.41512_265 = session_72(D)->channel;
  var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);
  # DEBUG var_val => var_val_266
  if (var_val_266 != 0B)
    goto <bb 102>;
  else
    goto <bb 108>;
  # SUCC: 102 [69.8%]  (true,exec) 108 [30.2%]  (false,exec)

  # BLOCK 102 freq:79
  # PRED: 101 [69.8%]  (true,exec)
  D.41703_267 = switch_true (var_val_266);
  if (D.41703_267 != 0)
    goto <bb 103>;
  else
    goto <bb 108>;
  # SUCC: 103 [50.0%]  (true,exec) 108 [50.0%]  (false,exec)

  # BLOCK 103 freq:318
  # PRED: 100 [71.0%]  (true,exec) 102 [50.0%]  (true,exec)
  # DEBUG s => sr_3
  if (sr_3 == 0B)
    goto <bb 106>;
  else
    goto <bb 104>;
  # SUCC: 106 [15.0%]  (true,exec) 104 [85.0%]  (false,exec)

  # BLOCK 104 freq:270
  # PRED: 103 [85.0%]  (false,exec)
  D.48140_1520 = *sr_3;
  if (D.48140_1520 == 0)
    goto <bb 106>;
  else
    goto <bb 105>;
  # SUCC: 106 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 105 freq:135
  # PRED: 104 [50.0%]  (false,exec)
  # SUCC: 106 [100.0%]  (fallthru,exec)

  # BLOCK 106 freq:318
  # PRED: 103 [15.0%]  (true,exec) 104 [50.0%]  (true,exec) 105 [100.0%]  (fallthru,exec)
  # D.48139_1521 = PHI <1(103), 1(104), 0(105)>
  if (D.48139_1521 == 0)
    goto <bb 107>;
  else
    goto <bb 108>;
  # SUCC: 107 [29.0%]  (true,exec) 108 [71.0%]  (false,exec)

  # BLOCK 107 freq:92
  # PRED: 106 [29.0%]  (true,exec)
  switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);
  # SUCC: 108 [100.0%]  (fallthru,exec)

  # BLOCK 108 freq:392
  # PRED: 101 [30.2%]  (false,exec) 102 [50.0%]  (false,exec) 107 [100.0%]  (fallthru,exec) 106 [71.0%]  (false,exec)
  # sr_4 = PHI <sr_3(101), sr_3(102), 0B(107), 0B(106)>
  # DEBUG sr => sr_4
  D.41708_270 = __builtin_strchr (ip_1, 58);
  if (D.41708_270 != 0B)
    goto <bb 110>;
  else
    goto <bb 109>;
  # SUCC: 110 [85.0%]  (true,exec) 109 [15.0%]  (false,exec)

  # BLOCK 109 freq:59
  # PRED: 108 [15.0%]  (false,exec)
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:392
  # PRED: 108 [85.0%]  (true,exec) 109 [100.0%]  (fallthru,exec)
  # family_59 = PHI <"IP6"(108), "IP4"(109)>
  # DEBUG family => family_59
  D.41682_274 = smh_90->owner_id;
  D.41689_275 = smh_90->session_id;
  switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_59, ip_1, username_143, family_59, ip_1, &srbuf);
  D.41534_276 = smh_90->session;
  D.41535_277 = D.41534_276->channel;
  D.41712_278 = switch_channel_test_flag (D.41535_277, 108);
  if (D.41712_278 != 0)
    goto <bb 111>;
  else
    goto <bb 112>;
  # SUCC: 111 [29.0%]  (true,exec) 112 [71.0%]  (false,exec)

  # BLOCK 111 freq:114
  # PRED: 110 [29.0%]  (true,exec)
  gen_ice (session_72(D), 0, ip_1, port_2);
  D.41715_279 = strlen (buf_144);
  D.41716_280 = buf_144 + D.41715_279;
  D.41717_281 = strlen (buf_144);
  D.41718_282 = 65536 - D.41717_281;
  D.41719_283 = smh_90->msid;
  switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);
  # SUCC: 112 [100.0%]  (fallthru,exec)

  # BLOCK 112 freq:392
  # PRED: 110 [71.0%]  (false,exec) 111 [100.0%]  (fallthru,exec)
  D.41720_284 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_284 != 0)
    goto <bb 113>;
  else
    goto <bb 219>;
  # SUCC: 113 [50.0%]  (true,exec) 219 [50.0%]  (false,exec)

  # BLOCK 113 freq:196
  # PRED: 112 [50.0%]  (true,exec)
  D.41723_285 = strlen (buf_144);
  D.41724_286 = buf_144 + D.41723_285;
  D.41725_287 = strlen (buf_144);
  D.41726_288 = 65536 - D.41725_287;
  D.41727_289 = (int) port_2;
  D.41732_290 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_290 == 0)
    goto <bb 114>;
  else
    goto <bb 117>;
  # SUCC: 114 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

  # BLOCK 114 freq:57
  # PRED: 113 [29.0%]  (true,exec)
  D.41512_291 = session_72(D)->channel;
  D.41734_292 = switch_channel_test_flag (D.41512_291, 109);
  if (D.41734_292 != 0)
    goto <bb 117>;
  else
    goto <bb 115>;
  # SUCC: 117 [50.0%]  (true,exec) 115 [50.0%]  (false,exec)

  # BLOCK 115 freq:28
  # PRED: 114 [50.0%]  (false,exec)
  D.41736_293 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_293 != 9)
    goto <bb 117>;
  else
    goto <bb 116>;
  # SUCC: 117 [72.0%]  (true,exec) 116 [28.0%]  (false,exec)

  # BLOCK 116 freq:8
  # PRED: 115 [28.0%]  (false,exec)
  # SUCC: 117 [100.0%]  (fallthru)

  # BLOCK 117 freq:196
  # PRED: 115 [72.0%]  (true,exec) 116 [100.0%]  (fallthru) 114 [50.0%]  (true,exec) 113 [71.0%]  (false,exec)
  # iftmp.29_60 = PHI <1(115), 0(116), 1(114), 0(113)>
  D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);
  switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);
  D.41738_297 = strlen (buf_144);
  D.41739_298 = buf_144 + D.41738_297;
  D.41740_299 = strlen (buf_144);
  D.41741_300 = 65536 - D.41740_299;
  D.41566_301 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_302 = D.41566_301->pt;
  D.41743_303 = (int) D.41742_302;
  switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);
  D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41744_304 != 0)
    goto <bb 118>;
  else
    goto <bb 125>;
  # SUCC: 118 [29.0%]  (true,exec) 125 [71.0%]  (false,exec)

  # BLOCK 118 freq:57
  # PRED: 117 [29.0%]  (true,exec)
  D.41747_305 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_305);
  pmap_306 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  # DEBUG pmap => pmap_306
  goto <bb 122>;
  # SUCC: 122 [100.0%]  (fallthru,exec)

  # BLOCK 119 freq:589
  # PRED: 123 [95.5%]  (true,exec)
  D.41748_308 = pmap_34->pt;
  D.41566_309 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_310 = D.41566_309->pt;
  if (D.41748_308 != D.41742_310)
    goto <bb 120>;
  else
    goto <bb 121>;
  # SUCC: 120 [51.2%]  (true,exec) 121 [48.8%]  (false,exec)

  # BLOCK 120 freq:302
  # PRED: 119 [51.2%]  (true,exec)
  D.41751_311 = strlen (buf_144);
  D.41752_312 = buf_144 + D.41751_311;
  D.41753_313 = strlen (buf_144);
  D.41754_314 = 65536 - D.41753_313;
  D.41748_315 = pmap_34->pt;
  D.41755_316 = (int) D.41748_315;
  switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);
  # SUCC: 121 [100.0%]  (fallthru,exec)

  # BLOCK 121 freq:589
  # PRED: 119 [48.8%]  (false,exec) 120 [100.0%]  (fallthru,exec)
  pmap_317 = pmap_34->next;
  # DEBUG pmap => pmap_317
  # SUCC: 122 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 122 freq:646
  # PRED: 118 [100.0%]  (fallthru,exec) 121 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_34 = PHI <pmap_306(118), pmap_317(121)>
  # DEBUG pmap => pmap_34
  if (pmap_34 != 0B)
    goto <bb 123>;
  else
    goto <bb 124>;
  # SUCC: 123 [95.5%]  (true,exec) 124 [4.5%]  (false,exec)

  # BLOCK 123 freq:617
  # PRED: 122 [95.5%]  (true,exec)
  D.41757_307 = pmap_34->allocated;
  if (D.41757_307 != 0)
    goto <bb 119>;
  else
    goto <bb 124>;
  # SUCC: 119 [95.5%]  (true,exec) 124 [4.5%]  (false,exec)

  # BLOCK 124 freq:57
  # PRED: 122 [4.5%]  (false,exec) 123 [4.5%]  (false,exec)
  D.41747_318 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_318);
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 125 freq:196
  # PRED: 117 [71.0%]  (false,exec) 124 [100.0%]  (fallthru,exec)
  D.41522_319 = smh_90->mparams;
  D.41593_320 = D.41522_319->dtmf_type;
  if (D.41593_320 == 0)
    goto <bb 128>;
  else
    goto <bb 126>;
  # SUCC: 128 [71.0%]  (true,exec) 126 [29.0%]  (false,exec)

  # BLOCK 126 freq:57
  # PRED: 125 [29.0%]  (false,exec)
  D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41761_321 != 0)
    goto <bb 128>;
  else
    goto <bb 127>;
  # SUCC: 128 [71.0%]  (true,exec) 127 [29.0%]  (false,exec)

  # BLOCK 127 freq:16
  # PRED: 126 [29.0%]  (false,exec)
  D.41512_322 = session_72(D)->channel;
  D.41763_323 = switch_channel_test_flag (D.41512_322, 93);
  if (D.41763_323 != 0)
    goto <bb 128>;
  else
    goto <bb 130>;
  # SUCC: 128 [50.0%]  (true,exec) 130 [50.0%]  (false,exec)

  # BLOCK 128 freq:188
  # PRED: 125 [71.0%]  (true,exec) 126 [71.0%]  (true,exec) 127 [50.0%]  (true,exec)
  D.41522_324 = smh_90->mparams;
  D.41596_325 = D.41522_324->te;
  if (D.41596_325 > 95)
    goto <bb 129>;
  else
    goto <bb 130>;
  # SUCC: 129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

  # BLOCK 129 freq:54
  # PRED: 128 [29.0%]  (true,exec)
  D.41766_326 = strlen (buf_144);
  D.41767_327 = buf_144 + D.41766_326;
  D.41768_328 = strlen (buf_144);
  D.41769_329 = 65536 - D.41768_328;
  D.41522_330 = smh_90->mparams;
  D.41596_331 = D.41522_330->te;
  D.41599_332 = (int) D.41596_331;
  switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);
  # SUCC: 130 [100.0%]  (fallthru,exec)

  # BLOCK 130 freq:196
  # PRED: 127 [50.0%]  (false,exec) 128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
  D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41770_333 == 0)
    goto <bb 131>;
  else
    goto <bb 133>;
  # SUCC: 131 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

  # BLOCK 131 freq:98
  # PRED: 130 [50.0%]  (true,exec)
  D.41522_334 = smh_90->mparams;
  D.41606_335 = D.41522_334->cng_pt;
  D.41607_336 = D.41606_335 != 0;
  D.41608_337 = use_cng_17 != 0;
  D.41609_338 = D.41607_336 && D.41608_337;
  if (D.41609_338 != 0)
    goto <bb 132>;
  else
    goto <bb 133>;
  # SUCC: 132 [29.0%]  (true,exec) 133 [71.0%]  (false,exec)

  # BLOCK 132 freq:28
  # PRED: 131 [29.0%]  (true,exec)
  D.41775_339 = strlen (buf_144);
  D.41776_340 = buf_144 + D.41775_339;
  D.41777_341 = strlen (buf_144);
  D.41778_342 = 65536 - D.41777_341;
  D.41522_343 = smh_90->mparams;
  D.41606_344 = D.41522_343->cng_pt;
  D.41612_345 = (int) D.41606_344;
  switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);
  # SUCC: 133 [100.0%]  (fallthru,exec)

  # BLOCK 133 freq:196
  # PRED: 130 [50.0%]  (false,exec) 131 [71.0%]  (false,exec) 132 [100.0%]  (fallthru,exec)
  D.41779_346 = strlen (buf_144);
  D.41780_347 = buf_144 + D.41779_346;
  D.41781_348 = strlen (buf_144);
  D.41782_349 = 65536 - D.41781_348;
  switch_snprintf (D.41780_347, D.41782_349, "\n");
  D.41566_350 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  rate_351 = D.41566_350->adv_rm_rate;
  # DEBUG rate => rate_351
  D.41566_352 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_353 = D.41566_352->adv_channels;
  if (D.41783_353 == 0)
    goto <bb 134>;
  else
    goto <bb 135>;
  # SUCC: 134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 134 freq:57
  # PRED: 133 [29.0%]  (true,exec)
  D.41566_355 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_356 = D.41566_355->rm_encoding;
  D.41787_357 = get_channels (D.41786_356, 1);
  D.41566_355->adv_channels = D.41787_357;
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:196
  # PRED: 133 [71.0%]  (false,exec) 134 [100.0%]  (fallthru,exec)
  D.41566_358 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_359 = D.41566_358->adv_channels;
  if (D.41783_359 > 1)
    goto <bb 136>;
  else
    goto <bb 137>;
  # SUCC: 136 [73.0%]  (true,exec) 137 [27.0%]  (false,exec)

  # BLOCK 136 freq:143
  # PRED: 135 [73.0%]  (true,exec)
  D.41790_360 = strlen (buf_144);
  D.41791_361 = buf_144 + D.41790_360;
  D.41792_362 = strlen (buf_144);
  D.41793_363 = 65536 - D.41792_362;
  D.41566_364 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_365 = D.41566_364->agreed_pt;
  D.41795_366 = (int) D.41794_365;
  D.41566_367 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_368 = D.41566_367->rm_encoding;
  D.41566_369 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_370 = D.41566_369->adv_channels;
  switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);
  goto <bb 138>;
  # SUCC: 138 [100.0%]  (fallthru,exec)

  # BLOCK 137 freq:53
  # PRED: 135 [27.0%]  (false,exec)
  D.41797_371 = strlen (buf_144);
  D.41798_372 = buf_144 + D.41797_371;
  D.41799_373 = strlen (buf_144);
  D.41800_374 = 65536 - D.41799_373;
  D.41566_375 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_376 = D.41566_375->agreed_pt;
  D.41795_377 = (int) D.41794_376;
  D.41566_378 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_379 = D.41566_378->rm_encoding;
  switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);
  # SUCC: 138 [100.0%]  (fallthru,exec)

  # BLOCK 138 freq:196
  # PRED: 136 [100.0%]  (fallthru,exec) 137 [100.0%]  (fallthru,exec)
  if (fmtp_out_21 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;
  # SUCC: 139 [69.8%]  (true,exec) 140 [30.2%]  (false,exec)

  # BLOCK 139 freq:137
  # PRED: 138 [69.8%]  (true,exec)
  D.41803_380 = strlen (buf_144);
  D.41804_381 = buf_144 + D.41803_380;
  D.41805_382 = strlen (buf_144);
  D.41806_383 = 65536 - D.41805_382;
  D.41566_384 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_385 = D.41566_384->agreed_pt;
  D.41795_386 = (int) D.41794_385;
  switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);
  # SUCC: 140 [100.0%]  (fallthru,exec)

  # BLOCK 140 freq:196
  # PRED: 138 [30.2%]  (false,exec) 139 [100.0%]  (fallthru,exec)
  D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41807_387 != 0)
    goto <bb 141>;
  else
    goto <bb 148>;
  # SUCC: 141 [29.0%]  (true,exec) 148 [71.0%]  (false,exec)

  # BLOCK 141 freq:57
  # PRED: 140 [29.0%]  (true,exec)
  D.41747_388 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_388);
  pmap_389 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  # DEBUG pmap => pmap_389
  goto <bb 145>;
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 142 freq:589
  # PRED: 146 [95.5%]  (true,exec)
  D.41748_391 = pmap_35->pt;
  D.41566_392 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_393 = D.41566_392->pt;
  if (D.41748_391 != D.41742_393)
    goto <bb 143>;
  else
    goto <bb 144>;
  # SUCC: 143 [51.2%]  (true,exec) 144 [48.8%]  (false,exec)

  # BLOCK 143 freq:302
  # PRED: 142 [51.2%]  (true,exec)
  D.41812_394 = strlen (buf_144);
  D.41813_395 = buf_144 + D.41812_394;
  D.41814_396 = strlen (buf_144);
  D.41815_397 = 65536 - D.41814_396;
  D.41748_398 = pmap_35->pt;
  D.41755_399 = (int) D.41748_398;
  D.41816_400 = pmap_35->iananame;
  D.41817_401 = pmap_35->rate;
  switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 144 freq:589
  # PRED: 142 [48.8%]  (false,exec) 143 [100.0%]  (fallthru,exec)
  pmap_402 = pmap_35->next;
  # DEBUG pmap => pmap_402
  # SUCC: 145 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 145 freq:646
  # PRED: 141 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_35 = PHI <pmap_389(141), pmap_402(144)>
  # DEBUG pmap => pmap_35
  if (pmap_35 != 0B)
    goto <bb 146>;
  else
    goto <bb 147>;
  # SUCC: 146 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

  # BLOCK 146 freq:617
  # PRED: 145 [95.5%]  (true,exec)
  D.41757_390 = pmap_35->allocated;
  if (D.41757_390 != 0)
    goto <bb 142>;
  else
    goto <bb 147>;
  # SUCC: 142 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

  # BLOCK 147 freq:57
  # PRED: 145 [4.5%]  (false,exec) 146 [4.5%]  (false,exec)
  D.41747_403 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_403);
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 148 freq:196
  # PRED: 140 [71.0%]  (false,exec) 147 [100.0%]  (fallthru,exec)
  D.41819_404 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
  if (D.41819_404 != 0B)
    goto <bb 149>;
  else
    goto <bb 150>;
  # SUCC: 149 [85.0%]  (true,exec) 150 [15.0%]  (false,exec)

  # BLOCK 149 freq:167
  # PRED: 148 [85.0%]  (true,exec)
  D.41819_408 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
  D.41825_409 = D.41819_408->microseconds_per_packet;
  ptime_410 = D.41825_409 / 1000;
  # DEBUG ptime => ptime_410
  # SUCC: 150 [100.0%]  (fallthru,exec)

  # BLOCK 150 freq:196
  # PRED: 148 [15.0%]  (false,exec) 149 [100.0%]  (fallthru,exec)
  # ptime_5 = PHI <0(148), ptime_410(149)>
  # DEBUG ptime => ptime_5
  D.41522_411 = smh_90->mparams;
  D.41593_412 = D.41522_411->dtmf_type;
  if (D.41593_412 == 0)
    goto <bb 153>;
  else
    goto <bb 151>;
  # SUCC: 153 [71.0%]  (true,exec) 151 [29.0%]  (false,exec)

  # BLOCK 151 freq:57
  # PRED: 150 [29.0%]  (false,exec)
  D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41829_413 != 0)
    goto <bb 153>;
  else
    goto <bb 152>;
  # SUCC: 153 [71.0%]  (true,exec) 152 [29.0%]  (false,exec)

  # BLOCK 152 freq:16
  # PRED: 151 [29.0%]  (false,exec)
  D.41512_414 = session_72(D)->channel;
  D.41831_415 = switch_channel_test_flag (D.41512_414, 93);
  if (D.41831_415 != 0)
    goto <bb 153>;
  else
    goto <bb 157>;
  # SUCC: 153 [50.0%]  (true,exec) 157 [50.0%]  (false,exec)

  # BLOCK 153 freq:188
  # PRED: 150 [71.0%]  (true,exec) 151 [71.0%]  (true,exec) 152 [50.0%]  (true,exec)
  D.41522_416 = smh_90->mparams;
  D.41596_417 = D.41522_416->te;
  if (D.41596_417 > 95)
    goto <bb 154>;
  else
    goto <bb 157>;
  # SUCC: 154 [29.0%]  (true,exec) 157 [71.0%]  (false,exec)

  # BLOCK 154 freq:54
  # PRED: 153 [29.0%]  (true,exec)
  D.41512_418 = session_72(D)->channel;
  D.41834_419 = switch_channel_test_flag (D.41512_418, 106);
  if (D.41834_419 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;
  # SUCC: 155 [50.0%]  (true,exec) 156 [50.0%]  (false,exec)

  # BLOCK 155 freq:27
  # PRED: 154 [50.0%]  (true,exec)
  D.41837_420 = strlen (buf_144);
  D.41838_421 = buf_144 + D.41837_420;
  D.41839_422 = strlen (buf_144);
  D.41840_423 = 65536 - D.41839_422;
  D.41522_424 = smh_90->mparams;
  D.41596_425 = D.41522_424->te;
  D.41599_426 = (int) D.41596_425;
  switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);
  goto <bb 157>;
  # SUCC: 157 [100.0%]  (fallthru,exec)

  # BLOCK 156 freq:27
  # PRED: 154 [50.0%]  (false,exec)
  D.41842_427 = strlen (buf_144);
  D.41843_428 = buf_144 + D.41842_427;
  D.41844_429 = strlen (buf_144);
  D.41845_430 = 65536 - D.41844_429;
  D.41522_434 = smh_90->mparams;
  D.41596_435 = D.41522_434->te;
  D.41599_436 = (int) D.41596_435;
  switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);
  # SUCC: 157 [100.0%]  (fallthru,exec)

  # BLOCK 157 freq:196
  # PRED: 152 [50.0%]  (false,exec) 153 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec) 156 [100.0%]  (fallthru,exec)
  D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41846_437 != 0)
    goto <bb 158>;
  else
    goto <bb 159>;
  # SUCC: 158 [29.0%]  (true,exec) 159 [71.0%]  (false,exec)

  # BLOCK 158 freq:57
  # PRED: 157 [29.0%]  (true,exec)
  D.41849_438 = strlen (buf_144);
  D.41850_439 = buf_144 + D.41849_438;
  D.41851_440 = strlen (buf_144);
  D.41852_441 = 65536 - D.41851_440;
  switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");
  goto <bb 162>;
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 159 freq:139
  # PRED: 157 [71.0%]  (false,exec)
  D.41522_442 = smh_90->mparams;
  D.41606_443 = D.41522_442->cng_pt;
  D.41607_444 = D.41606_443 != 0;
  D.41608_445 = use_cng_17 != 0;
  D.41609_446 = D.41607_444 && D.41608_445;
  if (D.41609_446 != 0)
    goto <bb 160>;
  else
    goto <bb 162>;
  # SUCC: 160 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

  # BLOCK 160 freq:40
  # PRED: 159 [29.0%]  (true,exec)
  D.41856_447 = strlen (buf_144);
  D.41857_448 = buf_144 + D.41856_447;
  D.41858_449 = strlen (buf_144);
  D.41859_450 = 65536 - D.41858_449;
  D.41522_451 = smh_90->mparams;
  D.41606_452 = D.41522_451->cng_pt;
  D.41612_453 = (int) D.41606_452;
  switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);
  D.41720_454 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_454 == 0)
    goto <bb 161>;
  else
    goto <bb 162>;
  # SUCC: 161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

  # BLOCK 161 freq:20
  # PRED: 160 [50.0%]  (true,exec)
  D.41522_455 = smh_90->mparams;
  D.41522_455->cng_pt = 0;
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 162 freq:196
  # PRED: 158 [100.0%]  (fallthru,exec) 159 [71.0%]  (false,exec) 160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
  if (append_audio_78 != 0B)
    goto <bb 163>;
  else
    goto <bb 168>;
  # SUCC: 163 [85.0%]  (true,exec) 168 [15.0%]  (false,exec)

  # BLOCK 163 freq:167
  # PRED: 162 [85.0%]  (true,exec)
  D.41864_456 = strlen (buf_144);
  D.41865_457 = buf_144 + D.41864_456;
  D.41866_458 = strlen (buf_144);
  D.41867_459 = 65536 - D.41866_458;
  D.41870_460 = *append_audio_78;
  if (D.41870_460 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;
  # SUCC: 164 [50.0%]  (true,exec) 165 [50.0%]  (false,exec)

  # BLOCK 164 freq:83
  # PRED: 163 [50.0%]  (true,exec)
  D.41873_461 = strlen (append_audio_78);
  D.41874_462 = D.41873_461 + -1;
  append_audio_463 = append_audio_78 + D.41874_462;
  # SUCC: 165 [100.0%]  (fallthru,exec)

  # BLOCK 165 freq:167
  # PRED: 164 [100.0%]  (fallthru,exec) 163 [50.0%]  (false,exec)
  # append_audio_62 = PHI <append_audio_463(164), append_audio_78(163)>
  D.41876_465 = *append_audio_62;
  if (D.41876_465 == 10)
    goto <bb 167>;
  else
    goto <bb 166>;
  # SUCC: 167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

  # BLOCK 166 freq:120
  # PRED: 165 [72.0%]  (false,exec)
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167 freq:167
  # PRED: 165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
  # iftmp.30_61 = PHI <""(165), "\n"(166)>
  switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);
  # SUCC: 168 [100.0%]  (fallthru,exec)

  # BLOCK 168 freq:196
  # PRED: 162 [15.0%]  (false,exec) 167 [100.0%]  (fallthru,exec)
  if (ptime_5 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;
  # SUCC: 169 [29.0%]  (true,exec) 170 [71.0%]  (false,exec)

  # BLOCK 169 freq:57
  # PRED: 168 [29.0%]  (true,exec)
  D.41882_468 = strlen (buf_144);
  D.41883_469 = buf_144 + D.41882_468;
  D.41884_470 = strlen (buf_144);
  D.41885_471 = 65536 - D.41884_470;
  switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);
  # SUCC: 170 [100.0%]  (fallthru,exec)

  # BLOCK 170 freq:196
  # PRED: 168 [71.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
  if (local_sdp_audio_zrtp_hash_83 != 0B)
    goto <bb 171>;
  else
    goto <bb 172>;
  # SUCC: 171 [69.8%]  (true,exec) 172 [30.2%]  (false,exec)

  # BLOCK 171 freq:137
  # PRED: 170 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);
  D.41888_472 = strlen (buf_144);
  D.41889_473 = buf_144 + D.41888_472;
  D.41890_474 = strlen (buf_144);
  D.41891_475 = 65536 - D.41890_474;
  switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);
  # SUCC: 172 [100.0%]  (fallthru,exec)

  # BLOCK 172 freq:196
  # PRED: 170 [30.2%]  (false,exec) 171 [100.0%]  (fallthru,exec)
  # DEBUG s => sr_4
  if (sr_4 == 0B)
    goto <bb 175>;
  else
    goto <bb 173>;
  # SUCC: 175 [15.0%]  (true,exec) 173 [85.0%]  (false,exec)

  # BLOCK 173 freq:167
  # PRED: 172 [85.0%]  (false,exec)
  D.48144_1522 = *sr_4;
  if (D.48144_1522 == 0)
    goto <bb 175>;
  else
    goto <bb 174>;
  # SUCC: 175 [50.0%]  (true,exec) 174 [50.0%]  (false,exec)

  # BLOCK 174 freq:83
  # PRED: 173 [50.0%]  (false,exec)
  # SUCC: 175 [100.0%]  (fallthru,exec)

  # BLOCK 175 freq:196
  # PRED: 172 [15.0%]  (true,exec) 173 [50.0%]  (true,exec) 174 [100.0%]  (fallthru,exec)
  # D.48143_1523 = PHI <1(172), 1(173), 0(174)>
  if (D.48143_1523 == 0)
    goto <bb 176>;
  else
    goto <bb 177>;
  # SUCC: 176 [29.0%]  (true,exec) 177 [71.0%]  (false,exec)

  # BLOCK 176 freq:57
  # PRED: 175 [29.0%]  (true,exec)
  D.41895_477 = strlen (buf_144);
  D.41896_478 = buf_144 + D.41895_477;
  D.41897_479 = strlen (buf_144);
  D.41898_480 = 65536 - D.41897_479;
  switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 177 freq:196
  # PRED: 175 [71.0%]  (false,exec) 176 [100.0%]  (fallthru,exec)
  D.41899_481 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
  # DEBUG s => D.41899_481
  if (D.41899_481 == 0B)
    goto <bb 180>;
  else
    goto <bb 178>;
  # SUCC: 180 [15.0%]  (true,exec) 178 [85.0%]  (false,exec)

  # BLOCK 178 freq:167
  # PRED: 177 [85.0%]  (false,exec)
  D.48148_1524 = MEM[(const char *)D.41899_481];
  if (D.48148_1524 == 0)
    goto <bb 180>;
  else
    goto <bb 179>;
  # SUCC: 180 [50.0%]  (true,exec) 179 [50.0%]  (false,exec)

  # BLOCK 179 freq:83
  # PRED: 178 [50.0%]  (false,exec)
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 180 freq:196
  # PRED: 177 [15.0%]  (true,exec) 178 [50.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
  # D.48147_1525 = PHI <1(177), 1(178), 0(179)>
  if (D.48147_1525 == 0)
    goto <bb 181>;
  else
    goto <bb 182>;
  # SUCC: 181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

  # BLOCK 181 freq:57
  # PRED: 180 [29.0%]  (true,exec)
  D.41903_483 = strlen (buf_144);
  D.41904_484 = buf_144 + D.41903_483;
  D.41905_485 = strlen (buf_144);
  D.41906_486 = 65536 - D.41905_485;
  D.41899_487 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
  D.41907_488 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.str;
  switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);
  # SUCC: 182 [100.0%]  (fallthru,exec)

  # BLOCK 182 freq:196
  # PRED: 180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
  D.41522_489 = smh_90->mparams;
  D.41523_490 = D.41522_489->rtcp_audio_interval_msec;
  if (D.41523_490 != 0B)
    goto <bb 183>;
  else
    goto <bb 186>;
  # SUCC: 183 [85.0%]  (true,exec) 186 [15.0%]  (false,exec)

  # BLOCK 183 freq:167
  # PRED: 182 [85.0%]  (true,exec)
  D.41910_491 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  if (D.41910_491 > 0)
    goto <bb 184>;
  else
    goto <bb 185>;
  # SUCC: 184 [73.0%]  (true,exec) 185 [27.0%]  (false,exec)

  # BLOCK 184 freq:122
  # PRED: 183 [73.0%]  (true,exec)
  D.41913_492 = strlen (buf_144);
  D.41914_493 = buf_144 + D.41913_492;
  D.41915_494 = strlen (buf_144);
  D.41916_495 = 65536 - D.41915_494;
  switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");
  D.41917_496 = strlen (buf_144);
  D.41918_497 = buf_144 + D.41917_496;
  D.41919_498 = strlen (buf_144);
  D.41920_499 = 65536 - D.41919_498;
  D.41727_500 = (int) port_2;
  switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_59, ip_1);
  goto <bb 186>;
  # SUCC: 186 [100.0%]  (fallthru,exec)

  # BLOCK 185 freq:45
  # PRED: 183 [27.0%]  (false,exec)
  D.41922_501 = strlen (buf_144);
  D.41923_502 = buf_144 + D.41922_501;
  D.41924_503 = strlen (buf_144);
  D.41925_504 = 65536 - D.41924_503;
  D.41727_505 = (int) port_2;
  D.41926_506 = D.41727_505 + 1;
  switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_59, ip_1);
  # SUCC: 186 [100.0%]  (fallthru,exec)

  # BLOCK 186 freq:196
  # PRED: 182 [15.0%]  (false,exec) 184 [100.0%]  (fallthru,exec) 185 [100.0%]  (fallthru,exec)
  D.41927_507 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out.cands[0][0].ready;
  if (D.41927_507 != 0)
    goto <bb 187>;
  else
    goto <bb 211>;
  # SUCC: 187 [29.0%]  (true,exec) 211 [71.0%]  (false,exec)

  # BLOCK 187 freq:57
  # PRED: 186 [29.0%]  (true,exec)
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  # DEBUG c3 => 659126
  # DEBUG c4 => 659124
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  # DEBUG D#25 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out
  # DEBUG ice_out => D#25
  D.41930_513 = strlen (buf_144);
  D.41931_514 = buf_144 + D.41930_513;
  D.41932_515 = strlen (buf_144);
  D.41933_516 = 65536 - D.41932_515;
  D.41934_517 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41935_518 = smh_90->cname;
  switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);
  D.41936_519 = strlen (buf_144);
  D.41937_520 = buf_144 + D.41936_519;
  D.41938_521 = strlen (buf_144);
  D.41939_522 = 65536 - D.41938_521;
  D.41934_523 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_524 = smh_90->msid;
  switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);
  D.41940_525 = strlen (buf_144);
  D.41941_526 = buf_144 + D.41940_525;
  D.41942_527 = strlen (buf_144);
  D.41943_528 = 65536 - D.41942_527;
  D.41934_529 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_530 = smh_90->msid;
  switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);
  D.41944_531 = strlen (buf_144);
  D.41945_532 = buf_144 + D.41944_531;
  D.41946_533 = strlen (buf_144);
  D.41947_534 = 65536 - D.41946_533;
  D.41934_535 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_536 = smh_90->msid;
  switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);
  D.41948_537 = strlen (buf_144);
  D.41949_538 = buf_144 + D.41948_537;
  D.41950_539 = strlen (buf_144);
  D.41951_540 = 65536 - D.41950_539;
  D.41952_541 = MEM[(struct ice_t *)smh_90 + 6480B].ufrag;
  switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);
  D.41953_542 = strlen (buf_144);
  D.41954_543 = buf_144 + D.41953_542;
  D.41955_544 = strlen (buf_144);
  D.41956_545 = 65536 - D.41955_544;
  D.41957_546 = MEM[(struct ice_t *)smh_90 + 6480B].pwd;
  switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);
  D.41958_547 = strlen (buf_144);
  D.41959_548 = buf_144 + D.41958_547;
  D.41960_549 = strlen (buf_144);
  D.41961_550 = 65536 - D.41960_549;
  D.41962_551 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_552 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_553 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_554 = (int) D.41964_553;
  switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, 659136, D.41963_552, D.41965_554);
  D.41966_555 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  # DEBUG s => D.41966_555
  if (D.41966_555 == 0B)
    goto <bb 190>;
  else
    goto <bb 188>;
  # SUCC: 190 [15.0%]  (true,exec) 188 [85.0%]  (false,exec)

  # BLOCK 188 freq:48
  # PRED: 187 [85.0%]  (false,exec)
  D.48152_1526 = MEM[(const char *)D.41966_555];
  if (D.48152_1526 == 0)
    goto <bb 190>;
  else
    goto <bb 189>;
  # SUCC: 190 [50.0%]  (true,exec) 189 [50.0%]  (false,exec)

  # BLOCK 189 freq:24
  # PRED: 188 [50.0%]  (false,exec)
  # SUCC: 190 [100.0%]  (fallthru,exec)

  # BLOCK 190 freq:57
  # PRED: 187 [15.0%]  (true,exec) 188 [50.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
  # D.48151_1527 = PHI <1(187), 1(188), 0(189)>
  if (D.48151_1527 == 0)
    goto <bb 191>;
  else
    goto <bb 198>;
  # SUCC: 191 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 191 freq:28
  # PRED: 190 [50.0%]  (true,exec)
  D.41963_557 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.41963_557
  if (D.41963_557 == 0B)
    goto <bb 194>;
  else
    goto <bb 192>;
  # SUCC: 194 [15.0%]  (true,exec) 192 [85.0%]  (false,exec)

  # BLOCK 192 freq:24
  # PRED: 191 [85.0%]  (false,exec)
  D.48156_1528 = MEM[(const char *)D.41963_557];
  if (D.48156_1528 == 0)
    goto <bb 194>;
  else
    goto <bb 193>;
  # SUCC: 194 [50.0%]  (true,exec) 193 [50.0%]  (false,exec)

  # BLOCK 193 freq:12
  # PRED: 192 [50.0%]  (false,exec)
  # SUCC: 194 [100.0%]  (fallthru,exec)

  # BLOCK 194 freq:28
  # PRED: 191 [15.0%]  (true,exec) 192 [50.0%]  (true,exec) 193 [100.0%]  (fallthru,exec)
  # D.48155_1529 = PHI <1(191), 1(192), 0(193)>
  if (D.48155_1529 == 0)
    goto <bb 195>;
  else
    goto <bb 198>;
  # SUCC: 195 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 195 freq:14
  # PRED: 194 [50.0%]  (true,exec)
  D.41966_559 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41963_560 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);
  if (D.39598_561 != 0)
    goto <bb 196>;
  else
    goto <bb 198>;
  # SUCC: 196 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 196 freq:7
  # PRED: 195 [50.0%]  (true,exec)
  D.41975_562 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41964_563 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  if (D.41975_562 != D.41964_563)
    goto <bb 197>;
  else
    goto <bb 198>;
  # SUCC: 197 [51.2%]  (true,exec) 198 [48.8%]  (false,exec)

  # BLOCK 197 freq:4
  # PRED: 196 [51.2%]  (true,exec)
  D.41978_564 = strlen (buf_144);
  D.41979_565 = buf_144 + D.41978_564;
  D.41980_566 = strlen (buf_144);
  D.41981_567 = 65536 - D.41980_566;
  D.41962_568 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_569 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_570 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_571 = (int) D.41964_570;
  D.41966_572 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41975_573 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41982_574 = (int) D.41975_573;
  switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, 659126, D.41963_569, D.41965_571, D.41966_572, D.41982_574);
  # SUCC: 198 [100.0%]  (fallthru,exec)

  # BLOCK 198 freq:57
  # PRED: 190 [50.0%]  (false,exec) 194 [50.0%]  (false,exec) 195 [50.0%]  (false,exec) 196 [48.8%]  (false,exec) 197 [100.0%]  (fallthru,exec)
  D.41910_575 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41985_576 = D.41910_575 <= 0;
  D.41986_577 = is_outbound_89 != 0;
  D.41987_578 = D.41985_576 || D.41986_577;
  if (D.41987_578 != 0)
    goto <bb 200>;
  else
    goto <bb 199>;
  # SUCC: 200 [50.0%]  (true,exec) 199 [50.0%]  (false,exec)

  # BLOCK 199 freq:28
  # PRED: 198 [50.0%]  (false,exec)
  D.41512_579 = session_72(D)->channel;
  D.41989_580 = switch_channel_test_flag (D.41512_579, 84);
  if (D.41989_580 != 0)
    goto <bb 200>;
  else
    goto <bb 211>;
  # SUCC: 200 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 200 freq:43
  # PRED: 198 [50.0%]  (true,exec) 199 [50.0%]  (true,exec)
  D.41990_581 = strlen (buf_144);
  D.41991_582 = buf_144 + D.41990_581;
  D.41992_583 = strlen (buf_144);
  D.41993_584 = 65536 - D.41992_583;
  D.41962_585 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_586 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_587 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_588 = (int) D.41964_587;
  D.41910_589 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_590 = D.41910_589 <= 0;
  D.41995_591 = D.41965_588 + D.41994_590;
  switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, 659134, D.41963_586, D.41995_591);
  D.41966_592 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  # DEBUG s => D.41966_592
  if (D.41966_592 == 0B)
    goto <bb 203>;
  else
    goto <bb 201>;
  # SUCC: 203 [15.0%]  (true,exec) 201 [85.0%]  (false,exec)

  # BLOCK 201 freq:36
  # PRED: 200 [85.0%]  (false,exec)
  D.48160_1530 = MEM[(const char *)D.41966_592];
  if (D.48160_1530 == 0)
    goto <bb 203>;
  else
    goto <bb 202>;
  # SUCC: 203 [50.0%]  (true,exec) 202 [50.0%]  (false,exec)

  # BLOCK 202 freq:18
  # PRED: 201 [50.0%]  (false,exec)
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 203 freq:43
  # PRED: 200 [15.0%]  (true,exec) 201 [50.0%]  (true,exec) 202 [100.0%]  (fallthru,exec)
  # D.48159_1531 = PHI <1(200), 1(201), 0(202)>
  if (D.48159_1531 == 0)
    goto <bb 204>;
  else
    goto <bb 211>;
  # SUCC: 204 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 204 freq:21
  # PRED: 203 [50.0%]  (true,exec)
  D.41963_594 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.41963_594
  if (D.41963_594 == 0B)
    goto <bb 207>;
  else
    goto <bb 205>;
  # SUCC: 207 [15.0%]  (true,exec) 205 [85.0%]  (false,exec)

  # BLOCK 205 freq:18
  # PRED: 204 [85.0%]  (false,exec)
  D.48164_1532 = MEM[(const char *)D.41963_594];
  if (D.48164_1532 == 0)
    goto <bb 207>;
  else
    goto <bb 206>;
  # SUCC: 207 [50.0%]  (true,exec) 206 [50.0%]  (false,exec)

  # BLOCK 206 freq:9
  # PRED: 205 [50.0%]  (false,exec)
  # SUCC: 207 [100.0%]  (fallthru,exec)

  # BLOCK 207 freq:21
  # PRED: 204 [15.0%]  (true,exec) 205 [50.0%]  (true,exec) 206 [100.0%]  (fallthru,exec)
  # D.48163_1533 = PHI <1(204), 1(205), 0(206)>
  if (D.48163_1533 == 0)
    goto <bb 208>;
  else
    goto <bb 211>;
  # SUCC: 208 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 208 freq:11
  # PRED: 207 [50.0%]  (true,exec)
  D.41966_596 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41963_597 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);
  if (D.39607_598 != 0)
    goto <bb 209>;
  else
    goto <bb 211>;
  # SUCC: 209 [50.0%]  (true,exec) 211 [50.0%]  (false,exec)

  # BLOCK 209 freq:5
  # PRED: 208 [50.0%]  (true,exec)
  D.41975_599 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41964_600 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  if (D.41975_599 != D.41964_600)
    goto <bb 210>;
  else
    goto <bb 211>;
  # SUCC: 210 [51.2%]  (true,exec) 211 [48.8%]  (false,exec)

  # BLOCK 210 freq:3
  # PRED: 209 [51.2%]  (true,exec)
  D.42006_601 = strlen (buf_144);
  D.42007_602 = buf_144 + D.42006_601;
  D.42008_603 = strlen (buf_144);
  D.42009_604 = 65536 - D.42008_603;
  D.41962_605 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_606 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_607 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_608 = (int) D.41964_607;
  D.41910_609 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_610 = D.41910_609 <= 0;
  D.41995_611 = D.41965_608 + D.41994_610;
  D.41966_612 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41975_613 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41982_614 = (int) D.41975_613;
  D.41910_615 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_616 = D.41910_615 <= 0;
  D.42010_617 = D.41982_614 + D.41994_616;
  switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, 659124, D.41963_606, D.41995_611, D.41966_612, D.42010_617);
  # SUCC: 211 [100.0%]  (fallthru,exec)

  # BLOCK 211 freq:196
  # PRED: 186 [71.0%]  (false,exec) 199 [50.0%]  (false,exec) 203 [50.0%]  (false,exec) 207 [50.0%]  (false,exec) 208 [50.0%]  (false,exec) 209 [48.8%]  (false,exec) 210 [100.0%]  (fallthru,exec)
  D.41736_618 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_618 != 9)
    goto <bb 212>;
  else
    goto <bb 256>;
  # SUCC: 212 [51.2%]  (true,exec) 256 [48.8%]  (false,exec)

  # BLOCK 212 freq:100
  # PRED: 211 [51.2%]  (true,exec)
  D.41512_619 = session_72(D)->channel;
  D.42013_620 = switch_channel_test_flag (D.41512_619, 109);
  if (D.42013_620 == 0)
    goto <bb 213>;
  else
    goto <bb 256>;
  # SUCC: 213 [50.0%]  (true,exec) 256 [50.0%]  (false,exec)

  # BLOCK 213 freq:50
  # PRED: 212 [50.0%]  (true,exec)
  D.41736_621 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  D.42016_622 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_621].local_crypto_key;
  # DEBUG s => D.42016_622
  if (D.42016_622 == 0B)
    goto <bb 216>;
  else
    goto <bb 214>;
  # SUCC: 216 [15.0%]  (true,exec) 214 [85.0%]  (false,exec)

  # BLOCK 214 freq:43
  # PRED: 213 [85.0%]  (false,exec)
  D.48168_1534 = MEM[(const char *)D.42016_622];
  if (D.48168_1534 == 0)
    goto <bb 216>;
  else
    goto <bb 215>;
  # SUCC: 216 [50.0%]  (true,exec) 215 [50.0%]  (false,exec)

  # BLOCK 215 freq:21
  # PRED: 214 [50.0%]  (false,exec)
  # SUCC: 216 [100.0%]  (fallthru,exec)

  # BLOCK 216 freq:50
  # PRED: 213 [15.0%]  (true,exec) 214 [50.0%]  (true,exec) 215 [100.0%]  (fallthru,exec)
  # D.48167_1535 = PHI <1(213), 1(214), 0(215)>
  if (D.48167_1535 == 0)
    goto <bb 217>;
  else
    goto <bb 256>;
  # SUCC: 217 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

  # BLOCK 217 freq:15
  # PRED: 216 [29.0%]  (true,exec)
  D.41512_624 = session_72(D)->channel;
  D.42020_625 = switch_channel_test_flag (D.41512_624, 92);
  if (D.42020_625 != 0)
    goto <bb 218>;
  else
    goto <bb 256>;
  # SUCC: 218 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

  # BLOCK 218 freq:4
  # PRED: 217 [29.0%]  (true,exec)
  D.42023_626 = strlen (buf_144);
  D.42024_627 = buf_144 + D.42023_626;
  D.42025_628 = strlen (buf_144);
  D.42026_629 = 65536 - D.42025_628;
  D.41736_630 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  D.42016_631 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_630].local_crypto_key;
  switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);
  goto <bb 256>;
  # SUCC: 256 [100.0%]  (fallthru,exec)

  # BLOCK 219 freq:196
  # PRED: 112 [50.0%]  (false,exec)
  D.41522_632 = smh_90->mparams;
  D.41587_633 = D.41522_632->num_codecs;
  if (D.41587_633 != 0)
    goto <bb 220>;
  else
    goto <bb 256>;
  # SUCC: 220 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

  # BLOCK 220 freq:57
  # PRED: 219 [29.0%]  (true,exec)
  # DEBUG cur_ptime => 0
  # DEBUG this_ptime => 0
  # DEBUG cng_type => 0
  D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.42030_637 == 0)
    goto <bb 221>;
  else
    goto <bb 224>;
  # SUCC: 221 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

  # BLOCK 221 freq:28
  # PRED: 220 [50.0%]  (true,exec)
  D.41522_638 = smh_90->mparams;
  D.41606_639 = D.41522_638->cng_pt;
  D.41607_640 = D.41606_639 != 0;
  D.41608_641 = use_cng_17 != 0;
  D.41609_642 = D.41607_640 && D.41608_641;
  if (D.41609_642 != 0)
    goto <bb 222>;
  else
    goto <bb 224>;
  # SUCC: 222 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

  # BLOCK 222 freq:14
  # PRED: 221 [50.0%]  (true,exec)
  D.41522_643 = smh_90->mparams;
  D.41606_644 = D.41522_643->cng_pt;
  cng_type_645 = (int) D.41606_644;
  # DEBUG cng_type => cng_type_645
  D.41720_646 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_646 == 0)
    goto <bb 223>;
  else
    goto <bb 224>;
  # SUCC: 223 [50.0%]  (true,exec) 224 [50.0%]  (false,exec)

  # BLOCK 223 freq:7
  # PRED: 222 [50.0%]  (true,exec)
  D.41522_647 = smh_90->mparams;
  D.41522_647->cng_pt = 0;
  # SUCC: 224 [100.0%]  (fallthru,exec)

  # BLOCK 224 freq:57
  # PRED: 220 [50.0%]  (false,exec) 221 [50.0%]  (false,exec) 222 [50.0%]  (false,exec) 223 [100.0%]  (fallthru,exec)
  # cng_type_42 = PHI <0(220), 0(221), cng_type_645(222), cng_type_645(223)>
  # DEBUG cng_type => cng_type_42
  D.41512_648 = session_72(D)->channel;
  mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);
  # DEBUG mult => mult_649
  D.41512_650 = session_72(D)->channel;
  D.42039_651 = switch_channel_test_flag (D.41512_650, 106);
  if (D.42039_651 != 0)
    goto <bb 228>;
  else
    goto <bb 225>;
  # SUCC: 228 [29.0%]  (true,exec) 225 [71.0%]  (false,exec)

  # BLOCK 225 freq:40
  # PRED: 224 [71.0%]  (false,exec)
  if (mult_649 != 0B)
    goto <bb 226>;
  else
    goto <bb 227>;
  # SUCC: 226 [69.8%]  (true,exec) 227 [30.2%]  (false,exec)

  # BLOCK 226 freq:28
  # PRED: 225 [69.8%]  (true,exec)
  D.42042_652 = switch_false (mult_649);
  if (D.42042_652 != 0)
    goto <bb 228>;
  else
    goto <bb 227>;
  # SUCC: 228 [50.0%]  (true,exec) 227 [50.0%]  (false,exec)

  # BLOCK 227 freq:26
  # PRED: 226 [50.0%]  (false,exec) 225 [30.2%]  (false,exec)
  # i_1104 = PHI <0(226), 0(225)>
  # cur_ptime_1578 = PHI <0(226), 0(225)>
  goto <bb 255>;
  # SUCC: 255 [100.0%]  (fallthru)

  # BLOCK 228 freq:31
  # PRED: 224 [29.0%]  (true,exec) 226 [50.0%]  (true,exec)
  # DEBUG bp => buf_144
  D.41512_690 = session_72(D)->channel;
  D.42046_691 = switch_channel_test_flag (D.41512_690, 106);
  if (D.42046_691 == 0)
    goto <bb 229>;
  else
    goto <bb 231>;
  # SUCC: 229 [29.0%]  (true,exec) 231 [71.0%]  (false,exec)

  # BLOCK 229 freq:9
  # PRED: 228 [29.0%]  (true,exec)
  D.41512_692 = session_72(D)->channel;
  D.42048_693 = switch_channel_test_flag (D.41512_692, 109);
  if (D.42048_693 == 0)
    goto <bb 231>;
  else
    goto <bb 230>;
  # SUCC: 231 [50.0%]  (true,exec) 230 [50.0%]  (false,exec)

  # BLOCK 230 freq:4
  # PRED: 229 [50.0%]  (false,exec)
  # SUCC: 231 [100.0%]  (fallthru)

  # BLOCK 231 freq:31
  # PRED: 229 [50.0%]  (true,exec) 230 [100.0%]  (fallthru) 228 [71.0%]  (false,exec)
  # both_63 = PHI <1(229), 0(230), 0(228)>
  # DEBUG both => both_63
  D.41732_697 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_697 == 0)
    goto <bb 232>;
  else
    goto <bb 233>;
  # SUCC: 232 [50.0%]  (true,exec) 233 [50.0%]  (false,exec)

  # BLOCK 232 freq:15
  # PRED: 231 [50.0%]  (true,exec)
  D.41512_698 = session_72(D)->channel;
  D.42054_699 = switch_channel_test_flag (D.41512_698, 92);
  if (D.42054_699 != 0)
    goto <bb 234>;
  else
    goto <bb 233>;
  # SUCC: 234 [50.0%]  (true,exec) 233 [50.0%]  (false,exec)

  # BLOCK 233 freq:23
  # PRED: 231 [50.0%]  (false,exec) 232 [50.0%]  (false,exec)
  D.41512_700 = session_72(D)->channel;
  D.42055_701 = switch_channel_test_flag (D.41512_700, 109);
  if (D.42055_701 != 0)
    goto <bb 234>;
  else
    goto <bb 236>;
  # SUCC: 234 [50.0%]  (true,exec) 236 [50.0%]  (false,exec)

  # BLOCK 234 freq:19
  # PRED: 232 [50.0%]  (true,exec) 233 [50.0%]  (true,exec)
  map.33_702 = map;
  generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);
  D.42057_703 = strlen (buf_144);
  bp_704 = buf_144 + D.42057_703;
  # DEBUG bp => bp_704
  D.42058_705 = smh_90->crypto_mode;
  if (D.42058_705 == 1)
    goto <bb 235>;
  else
    goto <bb 236>;
  # SUCC: 235 [28.0%]  (true,exec) 236 [72.0%]  (false,exec)

  # BLOCK 235 freq:5
  # PRED: 234 [28.0%]  (true,exec)
  # DEBUG both => 0
  # SUCC: 236 [100.0%]  (fallthru,exec)

  # BLOCK 236 freq:31
  # PRED: 233 [50.0%]  (false,exec) 234 [72.0%]  (false,exec) 235 [100.0%]  (fallthru,exec)
  # bp_43 = PHI <buf_144(233), bp_704(234), bp_704(235)>
  # both_44 = PHI <both_63(233), both_63(234), 0(235)>
  # DEBUG both => both_44
  # DEBUG bp => bp_43
  if (both_44 != 0)
    goto <bb 237>;
  else
    goto <bb 256>;
  # SUCC: 237 [29.0%]  (true,exec) 256 [71.0%]  (false,exec)

  # BLOCK 237 freq:9
  # PRED: 236 [29.0%]  (true,exec)
  D.42063_707 = strlen (buf_144);
  D.42064_708 = 65536 - D.42063_707;
  map.33_709 = map;
  generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);
  goto <bb 256>;
  # SUCC: 256 [100.0%]  (fallthru,exec)

  # BLOCK 238 freq:1314
  # PRED: 255 [98.0%]  (true,exec)
  imp_656 = smh_90->codecs[i_38];
  # DEBUG imp => imp_656
  D.42065_657 = imp_656->codec_type;
  if (D.42065_657 != 0)
    goto <bb 239>;
  else
    goto <bb 240>;
  # SUCC: 239 [50.0%]  (true,exec) 240 [50.0%]  (false,exec)

  # BLOCK 239 freq:657
  # PRED: 238 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 254>;
  # SUCC: 254 [100.0%]  (fallthru,exec)

  # BLOCK 240 freq:657
  # PRED: 238 [50.0%]  (false,exec)
  D.42068_658 = imp_656->microseconds_per_packet;
  this_ptime_659 = D.42068_658 / 1000;
  # DEBUG this_ptime => this_ptime_659
  D.42071_660 = imp_656->iananame;
  D.42072_661 = strcasecmp (D.42071_660, "ilbc");
  if (D.42072_661 == 0)
    goto <bb 242>;
  else
    goto <bb 241>;
  # SUCC: 242 [50.0%]  (true,exec) 241 [50.0%]  (false,exec)

  # BLOCK 241 freq:329
  # PRED: 240 [50.0%]  (false,exec)
  D.42071_662 = imp_656->iananame;
  D.42074_663 = strcasecmp (D.42071_662, "isac");
  if (D.42074_663 == 0)
    goto <bb 242>;
  else
    goto <bb 243>;
  # SUCC: 242 [50.0%]  (true,exec) 243 [50.0%]  (false,exec)

  # BLOCK 242 freq:493
  # PRED: 240 [50.0%]  (true,exec) 241 [50.0%]  (true,exec)
  # DEBUG this_ptime => 20
  # SUCC: 243 [100.0%]  (fallthru,exec)

  # BLOCK 243 freq:657
  # PRED: 241 [50.0%]  (false,exec) 242 [100.0%]  (fallthru,exec)
  # this_ptime_41 = PHI <this_ptime_659(241), 20(242)>
  # DEBUG this_ptime => this_ptime_41
  if (cur_ptime_40 != this_ptime_41)
    goto <bb 244>;
  else
    goto <bb 254>;
  # SUCC: 244 [72.0%]  (true,exec) 254 [28.0%]  (false,exec)

  # BLOCK 244 freq:473
  # PRED: 243 [72.0%]  (true,exec)
  # DEBUG bp => buf_144
  # DEBUG both => 1
  # DEBUG cur_ptime => this_ptime_41
  D.41732_668 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_668 == 0)
    goto <bb 245>;
  else
    goto <bb 246>;
  # SUCC: 245 [50.0%]  (true,exec) 246 [50.0%]  (false,exec)

  # BLOCK 245 freq:237
  # PRED: 244 [50.0%]  (true,exec)
  D.41512_669 = session_72(D)->channel;
  D.42081_670 = switch_channel_test_flag (D.41512_669, 92);
  if (D.42081_670 != 0)
    goto <bb 247>;
  else
    goto <bb 246>;
  # SUCC: 247 [50.0%]  (true,exec) 246 [50.0%]  (false,exec)

  # BLOCK 246 freq:355
  # PRED: 244 [50.0%]  (false,exec) 245 [50.0%]  (false,exec)
  D.41512_671 = session_72(D)->channel;
  D.42082_672 = switch_channel_test_flag (D.41512_671, 109);
  if (D.42082_672 != 0)
    goto <bb 247>;
  else
    goto <bb 249>;
  # SUCC: 247 [50.0%]  (true,exec) 249 [50.0%]  (false,exec)

  # BLOCK 247 freq:296
  # PRED: 245 [50.0%]  (true,exec) 246 [50.0%]  (true,exec)
  D.42083_673 = strlen (buf_144);
  D.42084_674 = 65536 - D.42083_673;
  map.33_675 = map;
  generate_m.isra.4 (session_72(D), buf_144, D.42084_674, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);
  D.42085_676 = strlen (buf_144);
  bp_677 = buf_144 + D.42085_676;
  # DEBUG bp => bp_677
  D.42058_678 = smh_90->crypto_mode;
  if (D.42058_678 == 1)
    goto <bb 248>;
  else
    goto <bb 249>;
  # SUCC: 248 [28.0%]  (true,exec) 249 [72.0%]  (false,exec)

  # BLOCK 248 freq:83
  # PRED: 247 [28.0%]  (true,exec)
  # DEBUG both => 0
  # SUCC: 249 [100.0%]  (fallthru,exec)

  # BLOCK 249 freq:473
  # PRED: 246 [50.0%]  (false,exec) 247 [72.0%]  (false,exec) 248 [100.0%]  (fallthru,exec)
  # bp_45 = PHI <buf_144(246), bp_677(247), bp_677(248)>
  # both_46 = PHI <1(246), 1(247), 0(248)>
  # DEBUG both => both_46
  # DEBUG bp => bp_45
  D.41512_680 = session_72(D)->channel;
  D.42090_681 = switch_channel_test_flag (D.41512_680, 106);
  if (D.42090_681 != 0)
    goto <bb 252>;
  else
    goto <bb 250>;
  # SUCC: 252 [71.0%]  (true,exec) 250 [29.0%]  (false,exec)

  # BLOCK 250 freq:137
  # PRED: 249 [29.0%]  (false,exec)
  D.41512_682 = session_72(D)->channel;
  D.42092_683 = switch_channel_test_flag (D.41512_682, 109);
  if (D.42092_683 != 0)
    goto <bb 251>;
  else
    goto <bb 252>;
  # SUCC: 251 [50.0%]  (true,exec) 252 [50.0%]  (false,exec)

  # BLOCK 251 freq:69
  # PRED: 250 [50.0%]  (true,exec)
  # SUCC: 252 [100.0%]  (fallthru)

  # BLOCK 252 freq:473
  # PRED: 250 [50.0%]  (false,exec) 251 [100.0%]  (fallthru) 249 [71.0%]  (true,exec)
  # both_47 = PHI <both_46(250), 0(251), 0(249)>
  # DEBUG both => both_47
  if (both_47 != 0)
    goto <bb 253>;
  else
    goto <bb 254>;
  # SUCC: 253 [29.0%]  (true,exec) 254 [71.0%]  (false,exec)

  # BLOCK 253 freq:137
  # PRED: 252 [29.0%]  (true,exec)
  D.42095_685 = strlen (buf_144);
  D.42096_686 = 65536 - D.42095_685;
  map.33_687 = map;
  generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);
  # SUCC: 254 [100.0%]  (fallthru,exec)

  # BLOCK 254 freq:1314
  # PRED: 239 [100.0%]  (fallthru,exec) 243 [28.0%]  (false,exec) 252 [71.0%]  (false,exec) 253 [100.0%]  (fallthru,exec)
  # cur_ptime_39 = PHI <cur_ptime_40(239), cur_ptime_40(243), this_ptime_41(252), this_ptime_41(253)>
  # DEBUG cur_ptime => cur_ptime_39
  i_688 = i_38 + 1;
  # DEBUG i => i_688
  # SUCC: 255 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 255 freq:1341
  # PRED: 227 [100.0%]  (fallthru) 254 [100.0%]  (fallthru,dfs_back,exec)
  # i_38 = PHI <i_1104(227), i_688(254)>
  # cur_ptime_40 = PHI <cur_ptime_1578(227), cur_ptime_39(254)>
  # DEBUG cur_ptime => cur_ptime_40
  # DEBUG i => i_38
  D.41522_654 = smh_90->mparams;
  D.41587_655 = D.41522_654->num_codecs;
  if (D.41587_655 > i_38)
    goto <bb 238>;
  else
    goto <bb 256>;
  # SUCC: 238 [98.0%]  (true,exec) 256 [2.0%]  (false,exec)

  # BLOCK 256 freq:392
  # PRED: 212 [50.0%]  (false,exec) 219 [71.0%]  (false,exec) 237 [100.0%]  (fallthru,exec) 255 [2.0%]  (false,exec) 211 [48.8%]  (false,exec) 218 [100.0%]  (fallthru,exec) 217 [71.0%]  (false,exec) 216 [71.0%]  (false,exec) 236 [71.0%]  (false,exec)
  # DEBUG rate => NULL
  # DEBUG ptime => NULL
  D.41512_710 = session_72(D)->channel;
  D.42097_711 = switch_channel_test_flag (D.41512_710, 98);
  if (D.42097_711 != 0)
    goto <bb 257>;
  else
    goto <bb 443>;
  # SUCC: 257 [29.0%]  (true,exec) 443 [71.0%]  (false,exec)

  # BLOCK 257 freq:114
  # PRED: 256 [29.0%]  (true,exec)
  D.41512_712 = session_72(D)->channel;
  D.42100_713 = switch_channel_direction (D.41512_712);
  if (D.42100_713 == 0)
    goto <bb 258>;
  else
    goto <bb 260>;
  # SUCC: 258 [29.0%]  (true,exec) 260 [71.0%]  (false,exec)

  # BLOCK 258 freq:33
  # PRED: 257 [29.0%]  (true,exec)
  D.41534_714 = smh_90->session;
  D.41535_715 = D.41534_714->channel;
  D.42103_716 = switch_channel_test_flag (D.41535_715, 109);
  if (D.42103_716 != 0)
    goto <bb 259>;
  else
    goto <bb 260>;
  # SUCC: 259 [50.0%]  (true,exec) 260 [50.0%]  (false,exec)

  # BLOCK 259 freq:16
  # PRED: 258 [50.0%]  (true,exec)
  MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].no_crypto = 1;
  # SUCC: 260 [100.0%]  (fallthru,exec)

  # BLOCK 260 freq:114
  # PRED: 257 [71.0%]  (false,exec) 258 [50.0%]  (false,exec) 259 [100.0%]  (fallthru,exec)
  D.42106_717 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  if (D.42106_717 == 0)
    goto <bb 261>;
  else
    goto <bb 262>;
  # SUCC: 261 [29.0%]  (true,exec) 262 [71.0%]  (false,exec)

  # BLOCK 261 freq:33
  # PRED: 260 [29.0%]  (true,exec)
  switch_core_media_choose_port (session_72(D), 1, 0);
  # SUCC: 262 [100.0%]  (fallthru,exec)

  # BLOCK 262 freq:114
  # PRED: 260 [71.0%]  (false,exec) 261 [100.0%]  (fallthru,exec)
  D.41512_718 = session_72(D)->channel;
  D.42109_719 = switch_channel_test_flag (D.41512_718, 106);
  if (D.42109_719 != 0)
    goto <bb 263>;
  else
    goto <bb 264>;
  # SUCC: 263 [29.0%]  (true,exec) 264 [71.0%]  (false,exec)

  # BLOCK 263 freq:33
  # PRED: 262 [29.0%]  (true,exec)
  switch_media_handle_set_media_flag (smh_90, 16);
  # SUCC: 264 [100.0%]  (fallthru,exec)

  # BLOCK 264 freq:114
  # PRED: 262 [71.0%]  (false,exec) 263 [100.0%]  (fallthru,exec)
  D.42112_720 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].adv_sdp_port;
  v_port_721 = (uint32_t) D.42112_720;
  # DEBUG v_port => v_port_721
  if (v_port_721 != 0)
    goto <bb 265>;
  else
    goto <bb 443>;
  # SUCC: 265 [50.0%]  (true,exec) 443 [50.0%]  (false,exec)

  # BLOCK 265 freq:57
  # PRED: 264 [50.0%]  (true,exec)
  # pass_fmtp_1164 = PHI <pass_fmtp_74(264)>
  # vp8_1192 = PHI <0(264)>
  # red_1197 = PHI <0(264)>
  # loops_1201 = PHI <0(264)>
  goto <bb 442>;
  # SUCC: 442 [100.0%]  (fallthru)

  # BLOCK 266 freq:98
  # PRED: 442 [66.7%]  (true,exec)
  D.41534_723 = smh_90->session;
  D.41535_724 = D.41534_723->channel;
  D.42115_725 = switch_channel_test_flag (D.41535_724, 108);
  if (D.42115_725 != 0)
    goto <bb 267>;
  else
    goto <bb 268>;
  # SUCC: 267 [29.0%]  (true,exec) 268 [71.0%]  (false,exec)

  # BLOCK 267 freq:29
  # PRED: 266 [29.0%]  (true,exec)
  D.42118_726 = (short unsigned int) v_port_721;
  gen_ice (session_72(D), 1, ip_1, D.42118_726);
  # SUCC: 268 [100.0%]  (fallthru,exec)

  # BLOCK 268 freq:98
  # PRED: 266 [71.0%]  (false,exec) 267 [100.0%]  (fallthru,exec)
  D.42119_727 = strlen (buf_144);
  D.42120_728 = buf_144 + D.42119_727;
  D.42121_729 = strlen (buf_144);
  D.42122_730 = 65536 - D.42121_729;
  if (loops_48 == 0)
    goto <bb 269>;
  else
    goto <bb 271>;
  # SUCC: 269 [29.0%]  (true,exec) 271 [71.0%]  (false,exec)

  # BLOCK 269 freq:29
  # PRED: 268 [29.0%]  (true,exec)
  D.41512_731 = session_72(D)->channel;
  D.42129_732 = switch_channel_test_flag (D.41512_731, 92);
  if (D.42129_732 != 0)
    goto <bb 270>;
  else
    goto <bb 271>;
  # SUCC: 270 [29.0%]  (true,exec) 271 [71.0%]  (false,exec)

  # BLOCK 270 freq:8
  # PRED: 269 [29.0%]  (true,exec)
  D.41512_733 = session_72(D)->channel;
  D.42131_734 = switch_channel_direction (D.41512_733);
  if (D.42131_734 == 1)
    goto <bb 274>;
  else
    goto <bb 271>;
  # SUCC: 274 [28.0%]  (true,exec) 271 [72.0%]  (false,exec)

  # BLOCK 271 freq:96
  # PRED: 268 [71.0%]  (false,exec) 269 [71.0%]  (false,exec) 270 [72.0%]  (false,exec)
  D.41736_735 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_735 != 9)
    goto <bb 274>;
  else
    goto <bb 272>;
  # SUCC: 274 [86.3%]  (true,exec) 272 [13.7%]  (false,exec)

  # BLOCK 272 freq:13
  # PRED: 271 [13.7%]  (false,exec)
  D.41512_736 = session_72(D)->channel;
  D.42133_737 = switch_channel_test_flag (D.41512_736, 109);
  if (D.42133_737 != 0)
    goto <bb 273>;
  else
    goto <bb 274>;
  # SUCC: 273 [50.0%]  (true,exec) 274 [50.0%]  (false,exec)

  # BLOCK 273 freq:7
  # PRED: 272 [50.0%]  (true,exec)
  # SUCC: 274 [100.0%]  (fallthru)

  # BLOCK 274 freq:98
  # PRED: 271 [86.3%]  (true,exec) 272 [50.0%]  (false,exec) 270 [28.0%]  (true,exec) 273 [100.0%]  (fallthru)
  # iftmp.34_64 = PHI <1(271), 0(272), 1(270), 1(273)>
  D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);
  switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);
  D.42135_741 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
  if (D.42135_741 != 0)
    goto <bb 275>;
  else
    goto <bb 283>;
  # SUCC: 275 [29.0%]  (true,exec) 283 [71.0%]  (false,exec)

  # BLOCK 275 freq:29
  # PRED: 274 [29.0%]  (true,exec)
  switch_core_media_set_video_codec (session_72(D), 0);
  D.42138_742 = strlen (buf_144);
  D.42139_743 = buf_144 + D.42138_742;
  D.42140_744 = strlen (buf_144);
  D.42141_745 = 65536 - D.42140_744;
  D.42142_746 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42143_747 = D.42142_746->agreed_pt;
  D.42144_748 = (int) D.42143_747;
  switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);
  D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42145_749 != 0)
    goto <bb 276>;
  else
    goto <bb 297>;
  # SUCC: 276 [29.0%]  (true,exec) 297 [71.0%]  (false,exec)

  # BLOCK 276 freq:8
  # PRED: 275 [29.0%]  (true,exec)
  D.41747_750 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_750);
  pmap_751 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  # DEBUG pmap => pmap_751
  goto <bb 280>;
  # SUCC: 280 [100.0%]  (fallthru,exec)

  # BLOCK 277 freq:86
  # PRED: 281 [95.5%]  (true,exec)
  D.42148_753 = pmap_49->pt;
  D.42142_754 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_755 = D.42142_754->pt;
  if (D.42148_753 != D.42149_755)
    goto <bb 278>;
  else
    goto <bb 279>;
  # SUCC: 278 [51.2%]  (true,exec) 279 [48.8%]  (false,exec)

  # BLOCK 278 freq:44
  # PRED: 277 [51.2%]  (true,exec)
  D.42152_756 = strlen (buf_144);
  D.42153_757 = buf_144 + D.42152_756;
  D.42154_758 = strlen (buf_144);
  D.42155_759 = 65536 - D.42154_758;
  D.42148_760 = pmap_49->pt;
  D.42156_761 = (int) D.42148_760;
  switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);
  # SUCC: 279 [100.0%]  (fallthru,exec)

  # BLOCK 279 freq:86
  # PRED: 277 [48.8%]  (false,exec) 278 [100.0%]  (fallthru,exec)
  pmap_762 = pmap_49->next;
  # DEBUG pmap => pmap_762
  # SUCC: 280 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 280 freq:94
  # PRED: 276 [100.0%]  (fallthru,exec) 279 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_49 = PHI <pmap_751(276), pmap_762(279)>
  # DEBUG pmap => pmap_49
  if (pmap_49 != 0B)
    goto <bb 281>;
  else
    goto <bb 282>;
  # SUCC: 281 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 281 freq:90
  # PRED: 280 [95.5%]  (true,exec)
  D.42158_752 = pmap_49->allocated;
  if (D.42158_752 != 0)
    goto <bb 277>;
  else
    goto <bb 282>;
  # SUCC: 277 [95.5%]  (true,exec) 282 [4.5%]  (false,exec)

  # BLOCK 282 freq:8
  # PRED: 280 [4.5%]  (false,exec) 281 [4.5%]  (false,exec)
  D.41747_763 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_763);
  goto <bb 297>;
  # SUCC: 297 [100.0%]  (fallthru,exec)

  # BLOCK 283 freq:70
  # PRED: 274 [71.0%]  (false,exec)
  D.41522_764 = smh_90->mparams;
  D.41587_765 = D.41522_764->num_codecs;
  if (D.41587_765 != 0)
    goto <bb 284>;
  else
    goto <bb 297>;
  # SUCC: 284 [50.0%]  (true,exec) 297 [50.0%]  (false,exec)

  # BLOCK 284 freq:35
  # PRED: 283 [50.0%]  (true,exec)
  already_did = {};
  # DEBUG i => 0
  goto <bb 296>;
  # SUCC: 296 [100.0%]  (fallthru,exec)

  # BLOCK 285 freq:1748
  # PRED: 296 [98.0%]  (true,exec)
  imp_769 = smh_90->codecs[i_50];
  # DEBUG imp => imp_769
  D.42162_770 = imp_769->codec_type;
  if (D.42162_770 != 1)
    goto <bb 286>;
  else
    goto <bb 287>;
  # SUCC: 286 [86.3%]  (true,exec) 287 [13.7%]  (false,exec)

  # BLOCK 286 freq:1508
  # PRED: 285 [86.3%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 295>;
  # SUCC: 295 [100.0%]  (fallthru,exec)

  # BLOCK 287 freq:240
  # PRED: 285 [13.7%]  (false,exec)
  D.41512_771 = session_72(D)->channel;
  D.42165_772 = switch_channel_direction (D.41512_771);
  if (D.42165_772 == 0)
    goto <bb 288>;
  else
    goto <bb 290>;
  # SUCC: 288 [29.0%]  (true,exec) 290 [71.0%]  (false,exec)

  # BLOCK 288 freq:70
  # PRED: 287 [29.0%]  (true,exec)
  D.41512_773 = session_72(D)->channel;
  D.42168_774 = switch_channel_test_flag (D.41512_773, 114);
  if (D.42168_774 != 0)
    goto <bb 289>;
  else
    goto <bb 290>;
  # SUCC: 289 [50.0%]  (true,exec) 290 [50.0%]  (false,exec)

  # BLOCK 289 freq:35
  # PRED: 288 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 295>;
  # SUCC: 295 [100.0%]  (fallthru,exec)

  # BLOCK 290 freq:205
  # PRED: 287 [71.0%]  (false,exec) 288 [50.0%]  (false,exec)
  D.42171_775 = smh_90->ianacodes[i_50];
  D.42172_776 = (signed char) D.42171_775;
  if (D.42172_776 >= 0)
    goto <bb 291>;
  else
    goto <bb 294>;
  # SUCC: 291 [86.9%]  (true,exec) 294 [13.1%]  (false,exec)

  # BLOCK 291 freq:178
  # PRED: 290 [86.9%]  (true,exec)
  D.42171_777 = smh_90->ianacodes[i_50];
  D.42175_778 = (int) D.42171_777;
  D.42176_779 = already_did[D.42175_778];
  if (D.42176_779 != 0)
    goto <bb 292>;
  else
    goto <bb 293>;
  # SUCC: 292 [50.0%]  (true,exec) 293 [50.0%]  (false,exec)

  # BLOCK 292 freq:89
  # PRED: 291 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 295>;
  # SUCC: 295 [100.0%]  (fallthru,exec)

  # BLOCK 293 freq:89
  # PRED: 291 [50.0%]  (false,exec)
  D.42171_780 = smh_90->ianacodes[i_50];
  D.42175_781 = (int) D.42171_780;
  already_did[D.42175_781] = 1;
  # SUCC: 294 [100.0%]  (fallthru,exec)

  # BLOCK 294 freq:116
  # PRED: 290 [13.1%]  (false,exec) 293 [100.0%]  (fallthru,exec)
  D.42179_782 = strlen (buf_144);
  D.42180_783 = buf_144 + D.42179_782;
  D.42181_784 = strlen (buf_144);
  D.42182_785 = 65536 - D.42181_784;
  D.42171_786 = smh_90->ianacodes[i_50];
  D.42175_787 = (int) D.42171_786;
  switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);
  # SUCC: 295 [100.0%]  (fallthru,exec)

  # BLOCK 295 freq:1748
  # PRED: 286 [100.0%]  (fallthru,exec) 289 [100.0%]  (fallthru,exec) 292 [100.0%]  (fallthru,exec) 294 [100.0%]  (fallthru,exec)
  # DEBUG ptime => NULL
  i_790 = i_50 + 1;
  # DEBUG i => i_790
  # SUCC: 296 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 296 freq:1783
  # PRED: 284 [100.0%]  (fallthru,exec) 295 [100.0%]  (fallthru,dfs_back,exec)
  # i_50 = PHI <0(284), i_790(295)>
  # DEBUG i => i_50
  # DEBUG ptime => NULL
  D.41522_767 = smh_90->mparams;
  D.41587_768 = D.41522_767->num_codecs;
  if (D.41587_768 > i_50)
    goto <bb 285>;
  else
    goto <bb 297>;
  # SUCC: 285 [98.0%]  (true,exec) 297 [2.0%]  (false,exec)

  # BLOCK 297 freq:98
  # PRED: 282 [100.0%]  (fallthru,exec) 283 [50.0%]  (false,exec) 296 [2.0%]  (false,exec) 275 [71.0%]  (false,exec)
  # DEBUG ptime => NULL
  D.42186_791 = strlen (buf_144);
  D.42187_792 = buf_144 + D.42186_791;
  D.42188_793 = strlen (buf_144);
  D.42189_794 = 65536 - D.42188_793;
  switch_snprintf (D.42187_792, D.42189_794, "\n");
  D.42135_795 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
  if (D.42135_795 != 0)
    goto <bb 298>;
  else
    goto <bb 325>;
  # SUCC: 298 [50.0%]  (true,exec) 325 [50.0%]  (false,exec)

  # BLOCK 298 freq:49
  # PRED: 297 [50.0%]  (true,exec)
  D.42142_796 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_797 = D.42142_796->rm_encoding;
  D.42193_798 = strcasecmp (D.42192_797, "VP8");
  if (D.42193_798 == 0)
    goto <bb 299>;
  else
    goto <bb 300>;
  # SUCC: 299 [50.0%]  (true,exec) 300 [50.0%]  (false,exec)

  # BLOCK 299 freq:25
  # PRED: 298 [50.0%]  (true,exec)
  D.42142_799 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_800 = D.42142_799->pt;
  vp8_801 = (int) D.42149_800;
  # DEBUG vp8 => vp8_801
  # SUCC: 300 [100.0%]  (fallthru,exec)

  # BLOCK 300 freq:49
  # PRED: 298 [50.0%]  (false,exec) 299 [100.0%]  (fallthru,exec)
  # vp8_22 = PHI <vp8_27(298), vp8_801(299)>
  # DEBUG vp8 => vp8_22
  D.42142_802 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_803 = D.42142_802->rm_encoding;
  D.42196_804 = strcasecmp (D.42192_803, "red");
  if (D.42196_804 == 0)
    goto <bb 301>;
  else
    goto <bb 302>;
  # SUCC: 301 [50.0%]  (true,exec) 302 [50.0%]  (false,exec)

  # BLOCK 301 freq:25
  # PRED: 300 [50.0%]  (true,exec)
  D.42142_805 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_806 = D.42142_805->pt;
  red_807 = (int) D.42149_806;
  # DEBUG red => red_807
  # SUCC: 302 [100.0%]  (fallthru,exec)

  # BLOCK 302 freq:49
  # PRED: 300 [50.0%]  (false,exec) 301 [100.0%]  (fallthru,exec)
  # red_28 = PHI <red_33(300), red_807(301)>
  # DEBUG red => red_28
  # DEBUG D#32 => MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map
  # DEBUG D#31 => D#32->rm_rate
  # DEBUG rate => D#31
  D.42199_810 = strlen (buf_144);
  D.42200_811 = buf_144 + D.42199_810;
  D.42201_812 = strlen (buf_144);
  D.42202_813 = 65536 - D.42201_812;
  D.42142_814 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_815 = D.42142_814->pt;
  D.42203_816 = (int) D.42149_815;
  D.42142_817 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_818 = D.42142_817->rm_encoding;
  D.42142_819 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42204_820 = D.42142_819->rm_rate;
  switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);
  D.41512_821 = session_72(D)->channel;
  D.42205_822 = switch_channel_test_flag (D.41512_821, 84);
  if (D.42205_822 != 0)
    goto <bb 303>;
  else
    goto <bb 304>;
  # SUCC: 303 [71.0%]  (true,exec) 304 [29.0%]  (false,exec)

  # BLOCK 303 freq:35
  # PRED: 302 [71.0%]  (true,exec)
  D.42142_823 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  pass_fmtp_824 = D.42142_823->rm_fmtp;
  # DEBUG pass_fmtp => pass_fmtp_824
  goto <bb 308>;
  # SUCC: 308 [100.0%]  (fallthru,exec)

  # BLOCK 304 freq:14
  # PRED: 302 [29.0%]  (false,exec)
  # DEBUG pass_fmtp => 0B
  D.41512_826 = session_72(D)->channel;
  D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);
  if (D.42209_827 != 0B)
    goto <bb 305>;
  else
    goto <bb 306>;
  # SUCC: 305 [69.8%]  (true,exec) 306 [30.2%]  (false,exec)

  # BLOCK 305 freq:10
  # PRED: 304 [69.8%]  (true,exec)
  D.41512_828 = session_72(D)->channel;
  switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");
  # DEBUG of => NULL
  # SUCC: 306 [100.0%]  (fallthru,exec)

  # BLOCK 306 freq:14
  # PRED: 304 [30.2%]  (false,exec) 305 [100.0%]  (fallthru,exec)
  if (ov_fmtp_76 != 0B)
    goto <bb 308>;
  else
    goto <bb 307>;
  # SUCC: 308 [93.3%]  (true,exec) 307 [6.7%]  (false,exec)

  # BLOCK 307 freq:1
  # PRED: 306 [6.7%]  (false,exec)
  D.41512_832 = session_72(D)->channel;
  pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_833
  # SUCC: 308 [100.0%]  (fallthru,exec)

  # BLOCK 308 freq:49
  # PRED: 303 [100.0%]  (fallthru,exec) 306 [93.3%]  (true,exec) 307 [100.0%]  (fallthru,exec)
  # pass_fmtp_18 = PHI <pass_fmtp_824(303), ov_fmtp_76(306), pass_fmtp_833(307)>
  # DEBUG pass_fmtp => pass_fmtp_18
  if (pass_fmtp_18 != 0B)
    goto <bb 309>;
  else
    goto <bb 310>;
  # SUCC: 309 [69.8%]  (true,exec) 310 [30.2%]  (false,exec)

  # BLOCK 309 freq:34
  # PRED: 308 [69.8%]  (true,exec)
  D.42219_834 = strlen (buf_144);
  D.42220_835 = buf_144 + D.42219_834;
  D.42221_836 = strlen (buf_144);
  D.42222_837 = 65536 - D.42221_836;
  D.42142_838 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_839 = D.42142_838->pt;
  D.42203_840 = (int) D.42149_839;
  switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);
  # SUCC: 310 [100.0%]  (fallthru,exec)

  # BLOCK 310 freq:49
  # PRED: 308 [30.2%]  (false,exec) 309 [100.0%]  (fallthru,exec)
  D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42223_841 != 0)
    goto <bb 311>;
  else
    goto <bb 319>;
  # SUCC: 311 [29.0%]  (true,exec) 319 [71.0%]  (false,exec)

  # BLOCK 311 freq:14
  # PRED: 310 [29.0%]  (true,exec)
  D.41747_842 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_842);
  pmap_843 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  # DEBUG pmap => pmap_843
  goto <bb 316>;
  # SUCC: 316 [100.0%]  (fallthru,exec)

  # BLOCK 312 freq:148
  # PRED: 317 [95.5%]  (true,exec)
  D.42226_845 = pmap_51->pt;
  D.42142_846 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_847 = D.42142_846->pt;
  if (D.42226_845 != D.42149_847)
    goto <bb 313>;
  else
    goto <bb 315>;
  # SUCC: 313 [72.0%]  (true,exec) 315 [28.0%]  (false,exec)

  # BLOCK 313 freq:107
  # PRED: 312 [72.0%]  (true,exec)
  D.42229_848 = pmap_51->negotiated;
  if (D.42229_848 != 0)
    goto <bb 314>;
  else
    goto <bb 315>;
  # SUCC: 314 [29.0%]  (true,exec) 315 [71.0%]  (false,exec)

  # BLOCK 314 freq:31
  # PRED: 313 [29.0%]  (true,exec)
  D.42232_849 = strlen (buf_144);
  D.42233_850 = buf_144 + D.42232_849;
  D.42234_851 = strlen (buf_144);
  D.42235_852 = 65536 - D.42234_851;
  D.42226_853 = pmap_51->pt;
  D.42236_854 = (int) D.42226_853;
  D.42237_855 = pmap_51->iananame;
  D.42238_856 = pmap_51->rate;
  switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);
  # SUCC: 315 [100.0%]  (fallthru,exec)

  # BLOCK 315 freq:148
  # PRED: 312 [28.0%]  (false,exec) 313 [71.0%]  (false,exec) 314 [100.0%]  (fallthru,exec)
  pmap_857 = pmap_51->next;
  # DEBUG pmap => pmap_857
  # SUCC: 316 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 316 freq:162
  # PRED: 311 [100.0%]  (fallthru,exec) 315 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_51 = PHI <pmap_843(311), pmap_857(315)>
  # DEBUG pmap => pmap_51
  if (pmap_51 != 0B)
    goto <bb 317>;
  else
    goto <bb 318>;
  # SUCC: 317 [95.5%]  (true,exec) 318 [4.5%]  (false,exec)

  # BLOCK 317 freq:155
  # PRED: 316 [95.5%]  (true,exec)
  D.42240_844 = pmap_51->allocated;
  if (D.42240_844 != 0)
    goto <bb 312>;
  else
    goto <bb 318>;
  # SUCC: 312 [95.5%]  (true,exec) 318 [4.5%]  (false,exec)

  # BLOCK 318 freq:14
  # PRED: 316 [4.5%]  (false,exec) 317 [4.5%]  (false,exec)
  D.41747_858 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_858);
  # SUCC: 319 [100.0%]  (fallthru,exec)

  # BLOCK 319 freq:49
  # PRED: 310 [71.0%]  (false,exec) 318 [100.0%]  (fallthru,exec)
  if (append_video_80 != 0B)
    goto <bb 320>;
  else
    goto <bb 369>;
  # SUCC: 320 [85.0%]  (true,exec) 369 [15.0%]  (false,exec)

  # BLOCK 320 freq:42
  # PRED: 319 [85.0%]  (true,exec)
  D.42243_859 = strlen (buf_144);
  D.42244_860 = buf_144 + D.42243_859;
  D.42245_861 = strlen (buf_144);
  D.42246_862 = 65536 - D.42245_861;
  D.42249_863 = *append_video_80;
  if (D.42249_863 != 0)
    goto <bb 321>;
  else
    goto <bb 322>;
  # SUCC: 321 [50.0%]  (true,exec) 322 [50.0%]  (false,exec)

  # BLOCK 321 freq:21
  # PRED: 320 [50.0%]  (true,exec)
  D.42252_864 = strlen (append_video_80);
  D.42253_865 = D.42252_864 + -1;
  append_video_866 = append_video_80 + D.42253_865;
  # SUCC: 322 [100.0%]  (fallthru,exec)

  # BLOCK 322 freq:42
  # PRED: 321 [100.0%]  (fallthru,exec) 320 [50.0%]  (false,exec)
  # append_video_66 = PHI <append_video_866(321), append_video_80(320)>
  D.42255_868 = *append_video_66;
  if (D.42255_868 == 10)
    goto <bb 324>;
  else
    goto <bb 323>;
  # SUCC: 324 [28.0%]  (true,exec) 323 [72.0%]  (false,exec)

  # BLOCK 323 freq:30
  # PRED: 322 [72.0%]  (false,exec)
  # SUCC: 324 [100.0%]  (fallthru,exec)

  # BLOCK 324 freq:42
  # PRED: 322 [28.0%]  (true,exec) 323 [100.0%]  (fallthru,exec)
  # iftmp.35_65 = PHI <""(322), "\n"(323)>
  switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);
  goto <bb 369>;
  # SUCC: 369 [100.0%]  (fallthru,exec)

  # BLOCK 325 freq:49
  # PRED: 297 [50.0%]  (false,exec)
  D.41522_871 = smh_90->mparams;
  D.41587_872 = D.41522_871->num_codecs;
  if (D.41587_872 != 0)
    goto <bb 326>;
  else
    goto <bb 369>;
  # SUCC: 326 [50.0%]  (true,exec) 369 [50.0%]  (false,exec)

  # BLOCK 326 freq:25
  # PRED: 325 [50.0%]  (true,exec)
  already_did = {};
  # DEBUG i => 0
  goto <bb 368>;
  # SUCC: 368 [100.0%]  (fallthru,exec)

  # BLOCK 327 freq:1231
  # PRED: 368 [98.0%]  (true,exec)
  imp_876 = smh_90->codecs[i_52];
  # DEBUG imp => imp_876
  # DEBUG fmtp => 0B
  D.42262_878 = smh_90->ianacodes[i_52];
  ianacode_879 = (uint32_t) D.42262_878;
  # DEBUG ianacode => ianacode_879
  D.42263_880 = imp_876->codec_type;
  if (D.42263_880 != 1)
    goto <bb 328>;
  else
    goto <bb 329>;
  # SUCC: 328 [86.3%]  (true,exec) 329 [13.7%]  (false,exec)

  # BLOCK 328 freq:1062
  # PRED: 327 [86.3%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 367>;
  # SUCC: 367 [100.0%]  (fallthru,exec)

  # BLOCK 329 freq:169
  # PRED: 327 [13.7%]  (false,exec)
  D.41512_881 = session_72(D)->channel;
  D.42266_882 = switch_channel_direction (D.41512_881);
  if (D.42266_882 == 0)
    goto <bb 330>;
  else
    goto <bb 332>;
  # SUCC: 330 [29.0%]  (true,exec) 332 [71.0%]  (false,exec)

  # BLOCK 330 freq:49
  # PRED: 329 [29.0%]  (true,exec)
  D.41512_883 = session_72(D)->channel;
  D.42269_884 = switch_channel_test_flag (D.41512_883, 114);
  if (D.42269_884 != 0)
    goto <bb 331>;
  else
    goto <bb 332>;
  # SUCC: 331 [50.0%]  (true,exec) 332 [50.0%]  (false,exec)

  # BLOCK 331 freq:24
  # PRED: 330 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 367>;
  # SUCC: 367 [100.0%]  (fallthru,exec)

  # BLOCK 332 freq:144
  # PRED: 329 [71.0%]  (false,exec) 330 [50.0%]  (false,exec)
  if (ianacode_879 <= 127)
    goto <bb 333>;
  else
    goto <bb 336>;
  # SUCC: 333 [71.0%]  (true,exec) 336 [29.0%]  (false,exec)

  # BLOCK 333 freq:102
  # PRED: 332 [71.0%]  (true,exec)
  D.42274_885 = already_did[ianacode_879];
  if (D.42274_885 != 0)
    goto <bb 334>;
  else
    goto <bb 335>;
  # SUCC: 334 [50.0%]  (true,exec) 335 [50.0%]  (false,exec)

  # BLOCK 334 freq:51
  # PRED: 333 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 367>;
  # SUCC: 367 [100.0%]  (fallthru,exec)

  # BLOCK 335 freq:51
  # PRED: 333 [50.0%]  (false,exec)
  already_did[ianacode_879] = 1;
  # SUCC: 336 [100.0%]  (fallthru,exec)

  # BLOCK 336 freq:93
  # PRED: 332 [29.0%]  (false,exec) 335 [100.0%]  (fallthru,exec)
  # DEBUG rate => NULL
  D.42279_887 = imp_876->iananame;
  D.42280_888 = imp_876->number_of_channels;
  D.42281_889 = (int) D.42280_888;
  channels_890 = get_channels (D.42279_887, D.42281_889);
  # DEBUG channels => channels_890
  D.42279_891 = imp_876->iananame;
  D.42282_892 = strcasecmp (D.42279_891, "VP8");
  if (D.42282_892 == 0)
    goto <bb 337>;
  else
    goto <bb 338>;
  # SUCC: 337 [50.0%]  (true,exec) 338 [50.0%]  (false,exec)

  # BLOCK 337 freq:47
  # PRED: 336 [50.0%]  (true,exec)
  vp8_893 = (int) ianacode_879;
  # DEBUG vp8 => vp8_893
  # SUCC: 338 [100.0%]  (fallthru,exec)

  # BLOCK 338 freq:93
  # PRED: 336 [50.0%]  (false,exec) 337 [100.0%]  (fallthru,exec)
  # vp8_23 = PHI <vp8_25(336), vp8_893(337)>
  # DEBUG vp8 => vp8_23
  D.42279_894 = imp_876->iananame;
  D.42285_895 = strcasecmp (D.42279_894, "red");
  if (D.42285_895 == 0)
    goto <bb 339>;
  else
    goto <bb 340>;
  # SUCC: 339 [50.0%]  (true,exec) 340 [50.0%]  (false,exec)

  # BLOCK 339 freq:47
  # PRED: 338 [50.0%]  (true,exec)
  red_896 = (int) ianacode_879;
  # DEBUG red => red_896
  # SUCC: 340 [100.0%]  (fallthru,exec)

  # BLOCK 340 freq:93
  # PRED: 338 [50.0%]  (false,exec) 339 [100.0%]  (fallthru,exec)
  # red_29 = PHI <red_31(338), red_896(339)>
  # DEBUG red => red_29
  if (channels_890 > 1)
    goto <bb 341>;
  else
    goto <bb 342>;
  # SUCC: 341 [73.0%]  (true,exec) 342 [27.0%]  (false,exec)

  # BLOCK 341 freq:68
  # PRED: 340 [73.0%]  (true,exec)
  D.42290_897 = strlen (buf_144);
  D.42291_898 = buf_144 + D.42290_897;
  D.42292_899 = strlen (buf_144);
  D.42293_900 = 65536 - D.42292_899;
  D.42279_901 = imp_876->iananame;
  D.42294_902 = imp_876->samples_per_second;
  switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);
  goto <bb 343>;
  # SUCC: 343 [100.0%]  (fallthru,exec)

  # BLOCK 342 freq:25
  # PRED: 340 [27.0%]  (false,exec)
  D.42296_903 = strlen (buf_144);
  D.42297_904 = buf_144 + D.42296_903;
  D.42298_905 = strlen (buf_144);
  D.42299_906 = 65536 - D.42298_905;
  D.42279_907 = imp_876->iananame;
  D.42294_908 = imp_876->samples_per_second;
  switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);
  # SUCC: 343 [100.0%]  (fallthru,exec)

  # BLOCK 343 freq:93
  # PRED: 341 [100.0%]  (fallthru,exec) 342 [100.0%]  (fallthru,exec)
  # DEBUG s => ov_fmtp_76
  if (ov_fmtp_76 == 0B)
    goto <bb 346>;
  else
    goto <bb 344>;
  # SUCC: 346 [15.0%]  (true,exec) 344 [85.0%]  (false,exec)

  # BLOCK 344 freq:79
  # PRED: 343 [85.0%]  (false,exec)
  D.48172_1536 = *ov_fmtp_76;
  if (D.48172_1536 == 0)
    goto <bb 346>;
  else
    goto <bb 345>;
  # SUCC: 346 [50.0%]  (true,exec) 345 [50.0%]  (false,exec)

  # BLOCK 345 freq:40
  # PRED: 344 [50.0%]  (false,exec)
  # SUCC: 346 [100.0%]  (fallthru,exec)

  # BLOCK 346 freq:93
  # PRED: 343 [15.0%]  (true,exec) 344 [50.0%]  (true,exec) 345 [100.0%]  (fallthru,exec)
  # D.48171_1537 = PHI <1(343), 1(344), 0(345)>
  if (D.48171_1537 == 0)
    goto <bb 361>;
  else
    goto <bb 347>;
  # SUCC: 361 [50.0%]  (true,exec) 347 [50.0%]  (false,exec)

  # BLOCK 347 freq:47
  # PRED: 346 [50.0%]  (false,exec)
  map.33_911 = map;
  if (map.33_911 != 0B)
    goto <bb 348>;
  else
    goto <bb 349>;
  # SUCC: 348 [69.8%]  (true,exec) 349 [30.2%]  (false,exec)

  # BLOCK 348 freq:32
  # PRED: 347 [69.8%]  (true,exec)
  map.33_912 = map;
  D.42279_913 = imp_876->iananame;
  fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);
  # DEBUG fmtp => fmtp_914
  # SUCC: 349 [100.0%]  (fallthru,exec)

  # BLOCK 349 freq:47
  # PRED: 347 [30.2%]  (false,exec) 348 [100.0%]  (fallthru,exec)
  # fmtp_53 = PHI <0B(347), fmtp_914(348)>
  # DEBUG fmtp => fmtp_53
  D.42306_915 = smh_90->fmtps[i_52];
  if (D.42306_915 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;
  # SUCC: 350 [85.0%]  (true,exec) 351 [15.0%]  (false,exec)

  # BLOCK 350 freq:40
  # PRED: 349 [85.0%]  (true,exec)
  fmtp_916 = smh_90->fmtps[i_52];
  # DEBUG fmtp => fmtp_916
  # SUCC: 351 [100.0%]  (fallthru,exec)

  # BLOCK 351 freq:47
  # PRED: 349 [15.0%]  (false,exec) 350 [100.0%]  (fallthru,exec)
  # fmtp_54 = PHI <fmtp_53(349), fmtp_916(350)>
  # DEBUG fmtp => fmtp_54
  # DEBUG s => fmtp_54
  if (fmtp_54 == 0B)
    goto <bb 354>;
  else
    goto <bb 352>;
  # SUCC: 354 [15.0%]  (true,exec) 352 [85.0%]  (false,exec)

  # BLOCK 352 freq:40
  # PRED: 351 [85.0%]  (false,exec)
  D.48176_1538 = MEM[(const char *)fmtp_54];
  if (D.48176_1538 == 0)
    goto <bb 354>;
  else
    goto <bb 353>;
  # SUCC: 354 [50.0%]  (true,exec) 353 [50.0%]  (false,exec)

  # BLOCK 353 freq:20
  # PRED: 352 [50.0%]  (false,exec)
  # SUCC: 354 [100.0%]  (fallthru,exec)

  # BLOCK 354 freq:47
  # PRED: 351 [15.0%]  (true,exec) 352 [50.0%]  (true,exec) 353 [100.0%]  (fallthru,exec)
  # D.48175_1539 = PHI <1(351), 1(352), 0(353)>
  if (D.48175_1539 != 0)
    goto <bb 355>;
  else
    goto <bb 356>;
  # SUCC: 355 [50.0%]  (true,exec) 356 [50.0%]  (false,exec)

  # BLOCK 355 freq:23
  # PRED: 354 [50.0%]  (true,exec)
  fmtp_918 = imp_876->fmtp;
  # DEBUG fmtp => fmtp_918
  # SUCC: 356 [100.0%]  (fallthru,exec)

  # BLOCK 356 freq:47
  # PRED: 354 [50.0%]  (false,exec) 355 [100.0%]  (fallthru,exec)
  # fmtp_55 = PHI <fmtp_54(354), fmtp_918(355)>
  # DEBUG fmtp => fmtp_55
  # DEBUG s => fmtp_55
  if (fmtp_55 == 0B)
    goto <bb 359>;
  else
    goto <bb 357>;
  # SUCC: 359 [15.0%]  (true,exec) 357 [85.0%]  (false,exec)

  # BLOCK 357 freq:40
  # PRED: 356 [85.0%]  (false,exec)
  D.48180_1540 = MEM[(const char *)fmtp_55];
  if (D.48180_1540 == 0)
    goto <bb 359>;
  else
    goto <bb 358>;
  # SUCC: 359 [50.0%]  (true,exec) 358 [50.0%]  (false,exec)

  # BLOCK 358 freq:20
  # PRED: 357 [50.0%]  (false,exec)
  # SUCC: 359 [100.0%]  (fallthru,exec)

  # BLOCK 359 freq:47
  # PRED: 356 [15.0%]  (true,exec) 357 [50.0%]  (true,exec) 358 [100.0%]  (fallthru,exec)
  # D.48179_1541 = PHI <1(356), 1(357), 0(358)>
  if (D.48179_1541 != 0)
    goto <bb 360>;
  else
    goto <bb 361>;
  # SUCC: 360 [50.0%]  (true,exec) 361 [50.0%]  (false,exec)

  # BLOCK 360 freq:23
  # PRED: 359 [50.0%]  (true,exec)
  # DEBUG fmtp => pass_fmtp_20
  # SUCC: 361 [100.0%]  (fallthru,exec)

  # BLOCK 361 freq:93
  # PRED: 346 [50.0%]  (true,exec) 359 [50.0%]  (false,exec) 360 [100.0%]  (fallthru,exec)
  # fmtp_56 = PHI <ov_fmtp_76(346), fmtp_55(359), pass_fmtp_20(360)>
  # DEBUG fmtp => fmtp_56
  # DEBUG s => fmtp_56
  if (fmtp_56 == 0B)
    goto <bb 364>;
  else
    goto <bb 362>;
  # SUCC: 364 [15.0%]  (true,exec) 362 [85.0%]  (false,exec)

  # BLOCK 362 freq:79
  # PRED: 361 [85.0%]  (false,exec)
  D.48184_1542 = MEM[(const char *)fmtp_56];
  if (D.48184_1542 == 0)
    goto <bb 364>;
  else
    goto <bb 363>;
  # SUCC: 364 [50.0%]  (true,exec) 363 [50.0%]  (false,exec)

  # BLOCK 363 freq:40
  # PRED: 362 [50.0%]  (false,exec)
  # SUCC: 364 [100.0%]  (fallthru,exec)

  # BLOCK 364 freq:93
  # PRED: 361 [15.0%]  (true,exec) 362 [50.0%]  (true,exec) 363 [100.0%]  (fallthru,exec)
  # D.48183_1543 = PHI <1(361), 1(362), 0(363)>
  if (D.48183_1543 == 0)
    goto <bb 365>;
  else
    goto <bb 367>;
  # SUCC: 365 [50.0%]  (true,exec) 367 [50.0%]  (false,exec)

  # BLOCK 365 freq:47
  # PRED: 364 [50.0%]  (true,exec)
  D.42318_922 = strcasecmp (fmtp_56, "_blank_");
  if (D.42318_922 != 0)
    goto <bb 366>;
  else
    goto <bb 367>;
  # SUCC: 366 [29.0%]  (true,exec) 367 [71.0%]  (false,exec)

  # BLOCK 366 freq:13
  # PRED: 365 [29.0%]  (true,exec)
  D.42321_923 = strlen (buf_144);
  D.42322_924 = buf_144 + D.42321_923;
  D.42323_925 = strlen (buf_144);
  D.42324_926 = 65536 - D.42323_925;
  switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);
  # SUCC: 367 [100.0%]  (fallthru,exec)

  # BLOCK 367 freq:1231
  # PRED: 328 [100.0%]  (fallthru,exec) 331 [100.0%]  (fallthru,exec) 334 [100.0%]  (fallthru,exec) 364 [50.0%]  (false,exec) 365 [71.0%]  (false,exec) 366 [100.0%]  (fallthru,exec)
  # vp8_24 = PHI <vp8_25(328), vp8_25(331), vp8_25(334), vp8_23(364), vp8_23(365), vp8_23(366)>
  # red_30 = PHI <red_31(328), red_31(331), red_31(334), red_29(364), red_29(365), red_29(366)>
  # DEBUG red => red_30
  # DEBUG vp8 => vp8_24
  # DEBUG rate => NULL
  i_927 = i_52 + 1;
  # DEBUG i => i_927
  # SUCC: 368 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 368 freq:1256
  # PRED: 326 [100.0%]  (fallthru,exec) 367 [100.0%]  (fallthru,dfs_back,exec)
  # vp8_25 = PHI <vp8_27(326), vp8_24(367)>
  # red_31 = PHI <red_33(326), red_30(367)>
  # i_52 = PHI <0(326), i_927(367)>
  # DEBUG i => i_52
  # DEBUG red => red_31
  # DEBUG vp8 => vp8_25
  # DEBUG rate => NULL
  D.41522_874 = smh_90->mparams;
  D.41587_875 = D.41522_874->num_codecs;
  if (D.41587_875 > i_52)
    goto <bb 327>;
  else
    goto <bb 369>;
  # SUCC: 327 [98.0%]  (true,exec) 369 [2.0%]  (false,exec)

  # BLOCK 369 freq:98
  # PRED: 324 [100.0%]  (fallthru,exec) 325 [50.0%]  (false,exec) 368 [2.0%]  (false,exec) 319 [15.0%]  (false,exec)
  # pass_fmtp_19 = PHI <pass_fmtp_18(324), pass_fmtp_20(325), pass_fmtp_20(368), pass_fmtp_18(319)>
  # vp8_26 = PHI <vp8_22(324), vp8_27(325), vp8_25(368), vp8_22(319)>
  # red_32 = PHI <red_28(324), red_33(325), red_31(368), red_28(319)>
  # DEBUG red => red_32
  # DEBUG vp8 => vp8_26
  # DEBUG pass_fmtp => pass_fmtp_19
  # DEBUG rate => NULL
  if (is_outbound_89 != 0)
    goto <bb 371>;
  else
    goto <bb 370>;
  # SUCC: 371 [50.0%]  (true,exec) 370 [50.0%]  (false,exec)

  # BLOCK 370 freq:49
  # PRED: 369 [50.0%]  (false,exec)
  D.41512_928 = session_72(D)->channel;
  D.42328_929 = switch_channel_test_flag (D.41512_928, 84);
  if (D.42328_929 != 0)
    goto <bb 371>;
  else
    goto <bb 373>;
  # SUCC: 371 [50.0%]  (true,exec) 373 [50.0%]  (false,exec)

  # BLOCK 371 freq:74
  # PRED: 369 [50.0%]  (true,exec) 370 [50.0%]  (true,exec)
  D.41534_930 = smh_90->session;
  D.41535_931 = D.41534_930->channel;
  D.42329_932 = switch_channel_test_flag (D.41535_931, 109);
  if (D.42329_932 != 0)
    goto <bb 372>;
  else
    goto <bb 373>;
  # SUCC: 372 [29.0%]  (true,exec) 373 [71.0%]  (false,exec)

  # BLOCK 372 freq:21
  # PRED: 371 [29.0%]  (true,exec)
  generate_local_fingerprint (smh_90, 1);
  # SUCC: 373 [100.0%]  (fallthru,exec)

  # BLOCK 373 freq:98
  # PRED: 370 [50.0%]  (false,exec) 371 [71.0%]  (false,exec) 372 [100.0%]  (fallthru,exec)
  D.42332_933 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
  # DEBUG s => D.42332_933
  if (D.42332_933 == 0B)
    goto <bb 376>;
  else
    goto <bb 374>;
  # SUCC: 376 [15.0%]  (true,exec) 374 [85.0%]  (false,exec)

  # BLOCK 374 freq:84
  # PRED: 373 [85.0%]  (false,exec)
  D.48188_1544 = MEM[(const char *)D.42332_933];
  if (D.48188_1544 == 0)
    goto <bb 376>;
  else
    goto <bb 375>;
  # SUCC: 376 [50.0%]  (true,exec) 375 [50.0%]  (false,exec)

  # BLOCK 375 freq:42
  # PRED: 374 [50.0%]  (false,exec)
  # SUCC: 376 [100.0%]  (fallthru,exec)

  # BLOCK 376 freq:98
  # PRED: 373 [15.0%]  (true,exec) 374 [50.0%]  (true,exec) 375 [100.0%]  (fallthru,exec)
  # D.48187_1545 = PHI <1(373), 1(374), 0(375)>
  if (D.48187_1545 == 0)
    goto <bb 377>;
  else
    goto <bb 378>;
  # SUCC: 377 [29.0%]  (true,exec) 378 [71.0%]  (false,exec)

  # BLOCK 377 freq:29
  # PRED: 376 [29.0%]  (true,exec)
  D.42336_935 = strlen (buf_144);
  D.42337_936 = buf_144 + D.42336_935;
  D.42338_937 = strlen (buf_144);
  D.42339_938 = 65536 - D.42338_937;
  D.42332_939 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
  D.42340_940 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.str;
  switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);
  # SUCC: 378 [100.0%]  (fallthru,exec)

  # BLOCK 378 freq:98
  # PRED: 376 [71.0%]  (false,exec) 377 [100.0%]  (fallthru,exec)
  D.41522_941 = smh_90->mparams;
  D.41527_942 = D.41522_941->rtcp_video_interval_msec;
  if (D.41527_942 != 0B)
    goto <bb 379>;
  else
    goto <bb 382>;
  # SUCC: 379 [85.0%]  (true,exec) 382 [15.0%]  (false,exec)

  # BLOCK 379 freq:84
  # PRED: 378 [85.0%]  (true,exec)
  D.42343_943 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  if (D.42343_943 > 0)
    goto <bb 380>;
  else
    goto <bb 381>;
  # SUCC: 380 [73.0%]  (true,exec) 381 [27.0%]  (false,exec)

  # BLOCK 380 freq:61
  # PRED: 379 [73.0%]  (true,exec)
  D.42346_944 = strlen (buf_144);
  D.42347_945 = buf_144 + D.42346_944;
  D.42348_946 = strlen (buf_144);
  D.42349_947 = 65536 - D.42348_946;
  switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");
  D.42350_948 = strlen (buf_144);
  D.42351_949 = buf_144 + D.42350_948;
  D.42352_950 = strlen (buf_144);
  D.42353_951 = 65536 - D.42352_950;
  switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_59, ip_1);
  goto <bb 382>;
  # SUCC: 382 [100.0%]  (fallthru,exec)

  # BLOCK 381 freq:23
  # PRED: 379 [27.0%]  (false,exec)
  D.42355_952 = strlen (buf_144);
  D.42356_953 = buf_144 + D.42355_952;
  D.42357_954 = strlen (buf_144);
  D.42358_955 = 65536 - D.42357_954;
  D.42359_956 = v_port_721 + 1;
  switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_59, ip_1);
  # SUCC: 382 [100.0%]  (fallthru,exec)

  # BLOCK 382 freq:98
  # PRED: 378 [15.0%]  (false,exec) 380 [100.0%]  (fallthru,exec) 381 [100.0%]  (fallthru,exec)
  D.42360_957 = BIT_FIELD_REF <MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B], 16, 91280>;
  D.42361_958 = D.42360_957 & 65535;
  if (D.42361_958 != 0)
    goto <bb 383>;
  else
    goto <bb 388>;
  # SUCC: 383 [50.0%]  (true,exec) 388 [50.0%]  (false,exec)

  # BLOCK 383 freq:49
  # PRED: 382 [50.0%]  (true,exec)
  D.42364_959 = strlen (buf_144);
  D.42365_960 = buf_144 + D.42364_959;
  D.42366_961 = strlen (buf_144);
  D.42367_962 = 65536 - D.42366_961;
  D.42369_963 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].fir;
  if (D.42369_963 != 0)
    goto <bb 385>;
  else
    goto <bb 384>;
  # SUCC: 385 [50.0%]  (true,exec) 384 [50.0%]  (false,exec)

  # BLOCK 384 freq:25
  # PRED: 383 [50.0%]  (false,exec)
  # SUCC: 385 [100.0%]  (fallthru,exec)

  # BLOCK 385 freq:49
  # PRED: 383 [50.0%]  (true,exec) 384 [100.0%]  (fallthru,exec)
  # iftmp.37_67 = PHI <"fir "(383), ""(384)>
  D.42374_966 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].pli;
  if (D.42374_966 != 0)
    goto <bb 387>;
  else
    goto <bb 386>;
  # SUCC: 387 [50.0%]  (true,exec) 386 [50.0%]  (false,exec)

  # BLOCK 386 freq:25
  # PRED: 385 [50.0%]  (false,exec)
  # SUCC: 387 [100.0%]  (fallthru,exec)

  # BLOCK 387 freq:49
  # PRED: 385 [50.0%]  (true,exec) 386 [100.0%]  (fallthru,exec)
  # iftmp.38_68 = PHI <"pli"(385), ""(386)>
  switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);
  # SUCC: 388 [100.0%]  (fallthru,exec)

  # BLOCK 388 freq:98
  # PRED: 382 [50.0%]  (false,exec) 387 [100.0%]  (fallthru,exec)
  D.42378_969 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out.cands[0][0].ready;
  if (D.42378_969 != 0)
    goto <bb 389>;
  else
    goto <bb 422>;
  # SUCC: 389 [29.0%]  (true,exec) 422 [71.0%]  (false,exec)

  # BLOCK 389 freq:29
  # PRED: 388 [29.0%]  (true,exec)
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  # DEBUG c3 => 659126
  # DEBUG c4 => 659124
  # DEBUG bw => 256
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  # DEBUG D#26 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out
  # DEBUG ice_out => D#26
  D.41534_976 = smh_90->session;
  D.41535_977 = D.41534_976->channel;
  vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);
  # DEBUG vbw => vbw_978
  if (vbw_978 != 0B)
    goto <bb 390>;
  else
    goto <bb 391>;
  # SUCC: 390 [69.8%]  (true,exec) 391 [30.2%]  (false,exec)

  # BLOCK 390 freq:20
  # PRED: 389 [69.8%]  (true,exec)
  # DEBUG __nptr => vbw_978
  v_1546 = strtol (vbw_978, 0B, 10);
  # DEBUG v => NULL
  # DEBUG bw => v_1546
  # SUCC: 391 [100.0%]  (fallthru,exec)

  # BLOCK 391 freq:29
  # PRED: 389 [30.2%]  (false,exec) 390 [100.0%]  (fallthru,exec)
  # bw_57 = PHI <256(389), v_1546(390)>
  # DEBUG bw => bw_57
  if (bw_57 > 0)
    goto <bb 392>;
  else
    goto <bb 393>;
  # SUCC: 392 [52.5%]  (true,exec) 393 [47.5%]  (false,exec)

  # BLOCK 392 freq:15
  # PRED: 391 [52.5%]  (true,exec)
  D.42385_981 = strlen (buf_144);
  D.42386_982 = buf_144 + D.42385_981;
  D.42387_983 = strlen (buf_144);
  D.42388_984 = 65536 - D.42387_983;
  switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);
  # SUCC: 393 [100.0%]  (fallthru,exec)

  # BLOCK 393 freq:29
  # PRED: 391 [47.5%]  (false,exec) 392 [100.0%]  (fallthru,exec)
  if (vp8_26 != 0)
    goto <bb 394>;
  else
    goto <bb 396>;
  # SUCC: 394 [29.0%]  (true,exec) 396 [71.0%]  (false,exec)

  # BLOCK 394 freq:8
  # PRED: 393 [29.0%]  (true,exec)
  D.41512_985 = session_72(D)->channel;
  D.42391_986 = switch_channel_test_flag (D.41512_985, 106);
  if (D.42391_986 != 0)
    goto <bb 395>;
  else
    goto <bb 396>;
  # SUCC: 395 [29.0%]  (true,exec) 396 [71.0%]  (false,exec)

  # BLOCK 395 freq:2
  # PRED: 394 [29.0%]  (true,exec)
  D.42394_987 = strlen (buf_144);
  D.42395_988 = buf_144 + D.42394_987;
  D.42396_989 = strlen (buf_144);
  D.42397_990 = 65536 - D.42396_989;
  switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);
  # SUCC: 396 [100.0%]  (fallthru,exec)

  # BLOCK 396 freq:29
  # PRED: 393 [71.0%]  (false,exec) 394 [71.0%]  (false,exec) 395 [100.0%]  (fallthru,exec)
  if (red_32 != 0)
    goto <bb 397>;
  else
    goto <bb 398>;
  # SUCC: 397 [29.0%]  (true,exec) 398 [71.0%]  (false,exec)

  # BLOCK 397 freq:8
  # PRED: 396 [29.0%]  (true,exec)
  D.42400_991 = strlen (buf_144);
  D.42401_992 = buf_144 + D.42400_991;
  D.42402_993 = strlen (buf_144);
  D.42403_994 = 65536 - D.42402_993;
  switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);
  # SUCC: 398 [100.0%]  (fallthru,exec)

  # BLOCK 398 freq:29
  # PRED: 396 [71.0%]  (false,exec) 397 [100.0%]  (fallthru,exec)
  D.42404_995 = strlen (buf_144);
  D.42405_996 = buf_144 + D.42404_995;
  D.42406_997 = strlen (buf_144);
  D.42407_998 = 65536 - D.42406_997;
  D.42408_999 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41935_1000 = smh_90->cname;
  switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);
  D.42409_1001 = strlen (buf_144);
  D.42410_1002 = buf_144 + D.42409_1001;
  D.42411_1003 = strlen (buf_144);
  D.42412_1004 = 65536 - D.42411_1003;
  D.42408_1005 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1006 = smh_90->msid;
  switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);
  D.42413_1007 = strlen (buf_144);
  D.42414_1008 = buf_144 + D.42413_1007;
  D.42415_1009 = strlen (buf_144);
  D.42416_1010 = 65536 - D.42415_1009;
  D.42408_1011 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1012 = smh_90->msid;
  switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);
  D.42417_1013 = strlen (buf_144);
  D.42418_1014 = buf_144 + D.42417_1013;
  D.42419_1015 = strlen (buf_144);
  D.42420_1016 = 65536 - D.42419_1015;
  D.42408_1017 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1018 = smh_90->msid;
  switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);
  D.42421_1019 = strlen (buf_144);
  D.42422_1020 = buf_144 + D.42421_1019;
  D.42423_1021 = strlen (buf_144);
  D.42424_1022 = 65536 - D.42423_1021;
  D.41952_1023 = MEM[(struct ice_t *)smh_90 + 17896B].ufrag;
  switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);
  D.42425_1024 = strlen (buf_144);
  D.42426_1025 = buf_144 + D.42425_1024;
  D.42427_1026 = strlen (buf_144);
  D.42428_1027 = 65536 - D.42427_1026;
  D.41957_1028 = MEM[(struct ice_t *)smh_90 + 17896B].pwd;
  switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);
  D.42429_1029 = strlen (buf_144);
  D.42430_1030 = buf_144 + D.42429_1029;
  D.42431_1031 = strlen (buf_144);
  D.42432_1032 = 65536 - D.42431_1031;
  D.41962_1033 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1034 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1035 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1036 = (int) D.41964_1035;
  switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, 659136, D.41963_1034, D.41965_1036);
  D.42433_1037 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  # DEBUG s => D.42433_1037
  if (D.42433_1037 == 0B)
    goto <bb 401>;
  else
    goto <bb 399>;
  # SUCC: 401 [15.0%]  (true,exec) 399 [85.0%]  (false,exec)

  # BLOCK 399 freq:24
  # PRED: 398 [85.0%]  (false,exec)
  D.48195_1547 = MEM[(const char *)D.42433_1037];
  if (D.48195_1547 == 0)
    goto <bb 401>;
  else
    goto <bb 400>;
  # SUCC: 401 [50.0%]  (true,exec) 400 [50.0%]  (false,exec)

  # BLOCK 400 freq:12
  # PRED: 399 [50.0%]  (false,exec)
  # SUCC: 401 [100.0%]  (fallthru,exec)

  # BLOCK 401 freq:29
  # PRED: 398 [15.0%]  (true,exec) 399 [50.0%]  (true,exec) 400 [100.0%]  (fallthru,exec)
  # D.48194_1548 = PHI <1(398), 1(399), 0(400)>
  if (D.48194_1548 == 0)
    goto <bb 402>;
  else
    goto <bb 409>;
  # SUCC: 402 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

  # BLOCK 402 freq:14
  # PRED: 401 [50.0%]  (true,exec)
  D.41963_1039 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  # DEBUG s => D.41963_1039
  if (D.41963_1039 == 0B)
    goto <bb 405>;
  else
    goto <bb 403>;
  # SUCC: 405 [15.0%]  (true,exec) 403 [85.0%]  (false,exec)

  # BLOCK 403 freq:12
  # PRED: 402 [85.0%]  (false,exec)
  D.48199_1549 = MEM[(const char *)D.41963_1039];
  if (D.48199_1549 == 0)
    goto <bb 405>;
  else
    goto <bb 404>;
  # SUCC: 405 [50.0%]  (true,exec) 404 [50.0%]  (false,exec)

  # BLOCK 404 freq:6
  # PRED: 403 [50.0%]  (false,exec)
  # SUCC: 405 [100.0%]  (fallthru,exec)

  # BLOCK 405 freq:14
  # PRED: 402 [15.0%]  (true,exec) 403 [50.0%]  (true,exec) 404 [100.0%]  (fallthru,exec)
  # D.48198_1550 = PHI <1(402), 1(403), 0(404)>
  if (D.48198_1550 == 0)
    goto <bb 406>;
  else
    goto <bb 409>;
  # SUCC: 406 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

  # BLOCK 406 freq:7
  # PRED: 405 [50.0%]  (true,exec)
  D.42433_1041 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.41963_1042 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);
  if (D.39666_1043 != 0)
    goto <bb 407>;
  else
    goto <bb 409>;
  # SUCC: 407 [50.0%]  (true,exec) 409 [50.0%]  (false,exec)

  # BLOCK 407 freq:4
  # PRED: 406 [50.0%]  (true,exec)
  D.42106_1044 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.41964_1045 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  if (D.42106_1044 != D.41964_1045)
    goto <bb 408>;
  else
    goto <bb 409>;
  # SUCC: 408 [51.2%]  (true,exec) 409 [48.8%]  (false,exec)

  # BLOCK 408 freq:2
  # PRED: 407 [51.2%]  (true,exec)
  D.42444_1046 = strlen (buf_144);
  D.42445_1047 = buf_144 + D.42444_1046;
  D.42446_1048 = strlen (buf_144);
  D.42447_1049 = 65536 - D.42446_1048;
  D.41962_1050 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1051 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1052 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1053 = (int) D.41964_1052;
  D.42433_1054 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42106_1055 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42448_1056 = (int) D.42106_1055;
  switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, 659126, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);
  # SUCC: 409 [100.0%]  (fallthru,exec)

  # BLOCK 409 freq:29
  # PRED: 401 [50.0%]  (false,exec) 405 [50.0%]  (false,exec) 406 [50.0%]  (false,exec) 407 [48.8%]  (false,exec) 408 [100.0%]  (fallthru,exec)
  D.42343_1057 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42451_1058 = D.42343_1057 <= 0;
  D.41986_1059 = is_outbound_89 != 0;
  D.42452_1060 = D.42451_1058 || D.41986_1059;
  if (D.42452_1060 != 0)
    goto <bb 411>;
  else
    goto <bb 410>;
  # SUCC: 411 [50.0%]  (true,exec) 410 [50.0%]  (false,exec)

  # BLOCK 410 freq:14
  # PRED: 409 [50.0%]  (false,exec)
  D.41512_1061 = session_72(D)->channel;
  D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);
  if (D.42454_1062 != 0)
    goto <bb 411>;
  else
    goto <bb 422>;
  # SUCC: 411 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

  # BLOCK 411 freq:21
  # PRED: 409 [50.0%]  (true,exec) 410 [50.0%]  (true,exec)
  D.42455_1063 = strlen (buf_144);
  D.42456_1064 = buf_144 + D.42455_1063;
  D.42457_1065 = strlen (buf_144);
  D.42458_1066 = 65536 - D.42457_1065;
  D.41962_1067 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1068 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1069 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1070 = (int) D.41964_1069;
  D.42343_1071 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1072 = D.42343_1071 <= 0;
  D.42460_1073 = D.41965_1070 + D.42459_1072;
  switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, 659134, D.41963_1068, D.42460_1073);
  D.42433_1074 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  # DEBUG s => D.42433_1074
  if (D.42433_1074 == 0B)
    goto <bb 414>;
  else
    goto <bb 412>;
  # SUCC: 414 [15.0%]  (true,exec) 412 [85.0%]  (false,exec)

  # BLOCK 412 freq:18
  # PRED: 411 [85.0%]  (false,exec)
  D.48203_1551 = MEM[(const char *)D.42433_1074];
  if (D.48203_1551 == 0)
    goto <bb 414>;
  else
    goto <bb 413>;
  # SUCC: 414 [50.0%]  (true,exec) 413 [50.0%]  (false,exec)

  # BLOCK 413 freq:9
  # PRED: 412 [50.0%]  (false,exec)
  # SUCC: 414 [100.0%]  (fallthru,exec)

  # BLOCK 414 freq:21
  # PRED: 411 [15.0%]  (true,exec) 412 [50.0%]  (true,exec) 413 [100.0%]  (fallthru,exec)
  # D.48202_1552 = PHI <1(411), 1(412), 0(413)>
  if (D.48202_1552 == 0)
    goto <bb 415>;
  else
    goto <bb 422>;
  # SUCC: 415 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

  # BLOCK 415 freq:11
  # PRED: 414 [50.0%]  (true,exec)
  D.42464_1076 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
  # DEBUG s => D.42464_1076
  if (D.42464_1076 == 0B)
    goto <bb 418>;
  else
    goto <bb 416>;
  # SUCC: 418 [15.0%]  (true,exec) 416 [85.0%]  (false,exec)

  # BLOCK 416 freq:9
  # PRED: 415 [85.0%]  (false,exec)
  D.48207_1553 = MEM[(const char *)D.42464_1076];
  if (D.48207_1553 == 0)
    goto <bb 418>;
  else
    goto <bb 417>;
  # SUCC: 418 [50.0%]  (true,exec) 417 [50.0%]  (false,exec)

  # BLOCK 417 freq:5
  # PRED: 416 [50.0%]  (false,exec)
  # SUCC: 418 [100.0%]  (fallthru,exec)

  # BLOCK 418 freq:11
  # PRED: 415 [15.0%]  (true,exec) 416 [50.0%]  (true,exec) 417 [100.0%]  (fallthru,exec)
  # D.48206_1554 = PHI <1(415), 1(416), 0(417)>
  if (D.48206_1554 == 0)
    goto <bb 419>;
  else
    goto <bb 422>;
  # SUCC: 419 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

  # BLOCK 419 freq:5
  # PRED: 418 [50.0%]  (true,exec)
  D.42433_1078 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42464_1079 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
  D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);
  if (D.39675_1080 != 0)
    goto <bb 420>;
  else
    goto <bb 422>;
  # SUCC: 420 [50.0%]  (true,exec) 422 [50.0%]  (false,exec)

  # BLOCK 420 freq:3
  # PRED: 419 [50.0%]  (true,exec)
  D.42106_1081 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42470_1082 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_port;
  if (D.42106_1081 != D.42470_1082)
    goto <bb 421>;
  else
    goto <bb 422>;
  # SUCC: 421 [51.2%]  (true,exec) 422 [48.8%]  (false,exec)

  # BLOCK 421 freq:1
  # PRED: 420 [51.2%]  (true,exec)
  D.42473_1083 = strlen (buf_144);
  D.42474_1084 = buf_144 + D.42473_1083;
  D.42475_1085 = strlen (buf_144);
  D.42476_1086 = 65536 - D.42475_1085;
  D.41962_1087 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1088 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1089 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1090 = (int) D.41964_1089;
  D.42343_1091 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1092 = D.42343_1091 <= 0;
  D.42460_1093 = D.41965_1090 + D.42459_1092;
  D.42433_1094 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42106_1095 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42448_1096 = (int) D.42106_1095;
  D.42343_1097 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1098 = D.42343_1097 <= 0;
  D.42477_1099 = D.42448_1096 + D.42459_1098;
  switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, 659124, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);
  # SUCC: 422 [100.0%]  (fallthru,exec)

  # BLOCK 422 freq:98
  # PRED: 388 [71.0%]  (false,exec) 410 [50.0%]  (false,exec) 414 [50.0%]  (false,exec) 418 [50.0%]  (false,exec) 419 [50.0%]  (false,exec) 420 [48.8%]  (false,exec) 421 [100.0%]  (fallthru,exec)
  if (loops_48 == 0)
    goto <bb 423>;
  else
    goto <bb 435>;
  # SUCC: 423 [29.0%]  (true,exec) 435 [71.0%]  (false,exec)

  # BLOCK 423 freq:29
  # PRED: 422 [29.0%]  (true,exec)
  D.41512_1100 = session_72(D)->channel;
  D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);
  if (D.42480_1101 != 0)
    goto <bb 424>;
  else
    goto <bb 435>;
  # SUCC: 424 [29.0%]  (true,exec) 435 [71.0%]  (false,exec)

  # BLOCK 424 freq:8
  # PRED: 423 [29.0%]  (true,exec)
  D.41512_1102 = session_72(D)->channel;
  D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);
  if (D.42483_1103 == 0)
    goto <bb 425>;
  else
    goto <bb 435>;
  # SUCC: 425 [50.0%]  (true,exec) 435 [50.0%]  (false,exec)

  # BLOCK 425 freq:4
  # PRED: 424 [50.0%]  (true,exec)
  # i_1579 = PHI <0(424)>
  goto <bb 434>;
  # SUCC: 434 [100.0%]  (fallthru)

  # BLOCK 426 freq:37
  # PRED: 434 [90.0%]  (true,exec)
  D.42486_1106 = smh_90->crypto_suite_order[i_58];
  j_1107 = SUITES[D.42486_1106].type;
  # DEBUG j => j_1107
  D.41736_1108 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_1108 == j_1107)
    goto <bb 428>;
  else
    goto <bb 427>;
  # SUCC: 428 [28.0%]  (true,exec) 427 [72.0%]  (false,exec)

  # BLOCK 427 freq:27
  # PRED: 426 [72.0%]  (false,exec)
  D.41736_1109 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_1109 == 9)
    goto <bb 428>;
  else
    goto <bb 433>;
  # SUCC: 428 [28.0%]  (true,exec) 433 [72.0%]  (false,exec)

  # BLOCK 428 freq:18
  # PRED: 426 [28.0%]  (true,exec) 427 [28.0%]  (true,exec)
  D.42490_1110 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[j_1107].local_crypto_key;
  # DEBUG s => D.42490_1110
  if (D.42490_1110 == 0B)
    goto <bb 431>;
  else
    goto <bb 429>;
  # SUCC: 431 [15.0%]  (true,exec) 429 [85.0%]  (false,exec)

  # BLOCK 429 freq:15
  # PRED: 428 [85.0%]  (false,exec)
  D.48211_1555 = MEM[(const char *)D.42490_1110];
  if (D.48211_1555 == 0)
    goto <bb 431>;
  else
    goto <bb 430>;
  # SUCC: 431 [50.0%]  (true,exec) 430 [50.0%]  (false,exec)

  # BLOCK 430 freq:8
  # PRED: 429 [50.0%]  (false,exec)
  # SUCC: 431 [100.0%]  (fallthru,exec)

  # BLOCK 431 freq:18
  # PRED: 428 [15.0%]  (true,exec) 429 [50.0%]  (true,exec) 430 [100.0%]  (fallthru,exec)
  # D.48210_1556 = PHI <1(428), 1(429), 0(430)>
  if (D.48210_1556 == 0)
    goto <bb 432>;
  else
    goto <bb 433>;
  # SUCC: 432 [29.0%]  (true,exec) 433 [71.0%]  (false,exec)

  # BLOCK 432 freq:5
  # PRED: 431 [29.0%]  (true,exec)
  D.42494_1112 = strlen (buf_144);
  D.42495_1113 = buf_144 + D.42494_1112;
  D.42496_1114 = strlen (buf_144);
  D.42497_1115 = 65536 - D.42496_1114;
  D.42498_1116 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssec[j_1107].local_crypto_key;
  switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);
  # SUCC: 433 [100.0%]  (fallthru,exec)

  # BLOCK 433 freq:37
  # PRED: 427 [72.0%]  (false,exec) 431 [71.0%]  (false,exec) 432 [100.0%]  (fallthru,exec)
  i_1117 = i_58 + 1;
  # DEBUG i => i_1117
  # SUCC: 434 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 434 freq:41
  # PRED: 425 [100.0%]  (fallthru) 433 [100.0%]  (fallthru,dfs_back,exec)
  # i_58 = PHI <i_1579(425), i_1117(433)>
  # DEBUG i => i_58
  D.42486_1105 = smh_90->crypto_suite_order[i_58];
  if (D.42486_1105 != 9)
    goto <bb 426>;
  else
    goto <bb 435>;
  # SUCC: 426 [90.0%]  (true,exec) 435 [10.0%]  (false,exec)

  # BLOCK 435 freq:98
  # PRED: 422 [71.0%]  (false,exec) 423 [71.0%]  (false,exec) 424 [50.0%]  (false,exec) 434 [10.0%]  (false,exec)
  if (local_sdp_video_zrtp_hash_84 != 0B)
    goto <bb 436>;
  else
    goto <bb 437>;
  # SUCC: 436 [69.8%]  (true,exec) 437 [30.2%]  (false,exec)

  # BLOCK 436 freq:69
  # PRED: 435 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);
  D.42501_1118 = strlen (buf_144);
  D.42502_1119 = buf_144 + D.42501_1118;
  D.42503_1120 = strlen (buf_144);
  D.42504_1121 = 65536 - D.42503_1120;
  switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);
  # SUCC: 437 [100.0%]  (fallthru,exec)

  # BLOCK 437 freq:98
  # PRED: 435 [30.2%]  (false,exec) 436 [100.0%]  (fallthru,exec)
  D.41512_1122 = session_72(D)->channel;
  D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);
  if (D.42505_1123 != 0)
    goto <bb 443>;
  else
    goto <bb 438>;
  # SUCC: 443 [2.0%]  (true,exec) 438 [98.0%]  (false,exec)

  # BLOCK 438 freq:96
  # PRED: 437 [98.0%]  (false,exec)
  D.41512_1124 = session_72(D)->channel;
  D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);
  if (D.42507_1125 == 0)
    goto <bb 443>;
  else
    goto <bb 439>;
  # SUCC: 443 [2.0%]  (true,exec) 439 [98.0%]  (false,exec)

  # BLOCK 439 freq:95
  # PRED: 438 [98.0%]  (false,exec)
  D.42058_1126 = smh_90->crypto_mode;
  if (D.42058_1126 == 1)
    goto <bb 443>;
  else
    goto <bb 440>;
  # SUCC: 443 [2.0%]  (true,exec) 440 [98.0%]  (false,exec)

  # BLOCK 440 freq:93
  # PRED: 439 [98.0%]  (false,exec)
  D.42058_1127 = smh_90->crypto_mode;
  if (D.42058_1127 == 2)
    goto <bb 443>;
  else
    goto <bb 441>;
  # SUCC: 443 [2.0%]  (true,exec) 441 [98.0%]  (false,exec)

  # BLOCK 441 freq:91
  # PRED: 440 [98.0%]  (false,exec)
  loops_1128 = loops_48 + 1;
  # DEBUG loops => loops_1128
  # SUCC: 442 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 442 freq:148
  # PRED: 265 [100.0%]  (fallthru) 441 [100.0%]  (fallthru,dfs_back,exec)
  # pass_fmtp_20 = PHI <pass_fmtp_1164(265), pass_fmtp_19(441)>
  # vp8_27 = PHI <vp8_1192(265), vp8_26(441)>
  # red_33 = PHI <red_1197(265), red_32(441)>
  # loops_48 = PHI <loops_1201(265), loops_1128(441)>
  # DEBUG loops => loops_48
  # DEBUG red => red_33
  # DEBUG vp8 => vp8_27
  # DEBUG pass_fmtp => pass_fmtp_20
  # DEBUG rate => NULL
  # DEBUG ptime => NULL
  if (loops_48 <= 1)
    goto <bb 266>;
  else
    goto <bb 443>;
  # SUCC: 266 [66.7%]  (true,exec) 443 [33.3%]  (false,exec)

  # BLOCK 443 freq:392
  # PRED: 256 [71.0%]  (false,exec) 264 [50.0%]  (false,exec) 437 [2.0%]  (true,exec) 438 [2.0%]  (true,exec) 439 [2.0%]  (true,exec) 440 [2.0%]  (true,exec) 442 [33.3%]  (false,exec)
  map.33_1129 = map;
  if (map.33_1129 != 0B)
    goto <bb 444>;
  else
    goto <bb 445>;
  # SUCC: 444 [69.8%]  (true,exec) 445 [30.2%]  (false,exec)

  # BLOCK 444 freq:274
  # PRED: 443 [69.8%]  (true,exec)
  switch_event_destroy (&map);
  # SUCC: 445 [100.0%]  (fallthru,exec)

  # BLOCK 445 freq:392
  # PRED: 443 [30.2%]  (false,exec) 444 [100.0%]  (fallthru,exec)
  ptmap.39_1130 = ptmap;
  if (ptmap.39_1130 != 0B)
    goto <bb 446>;
  else
    goto <bb 447>;
  # SUCC: 446 [69.8%]  (true,exec) 447 [30.2%]  (false,exec)

  # BLOCK 446 freq:274
  # PRED: 445 [69.8%]  (true,exec)
  switch_event_destroy (&ptmap);
  # SUCC: 447 [100.0%]  (fallthru,exec)

  # BLOCK 447 freq:392
  # PRED: 445 [30.2%]  (false,exec) 446 [100.0%]  (fallthru,exec)
  switch_core_media_set_local_sdp (session_72(D), buf_144, 1);
  if (buf_144 != 0B)
    goto <bb 448>;
  else
    goto <bb 449>;
  # SUCC: 448 [78.3%]  (true,exec) 449 [21.6%]  (false,exec)

  # BLOCK 448 freq:307
  # PRED: 447 [78.3%]  (true,exec)
  free (buf_144);
  # DEBUG buf => 0B
  # SUCC: 449 [100.0%]  (fallthru,exec)

  # BLOCK 449 freq:863
  # PRED: 4 [21.6%]  (true,exec) 75 [100.0%]  (fallthru,exec) 81 [100.0%]  (fallthru,exec) 87 [100.0%]  (fallthru,exec) 447 [21.6%]  (false,exec) 448 [100.0%]  (fallthru,exec) 74 [30.2%]  (false,exec) 80 [30.2%]  (false,exec) 86 [30.2%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_absorb_sdp (switch_core_media_absorb_sdp)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 11 16 17 14 15 12 13 10 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 22 5 }
;; 5 succs { 6 22 }
;; 6 succs { 7 21 }
;; 7 succs { 8 20 }
;; 8 succs { 19 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 18 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 20 18 }
;; 18 succs { 19 }
;; 19 succs { 9 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 11 16 17 14 15 12 13 10 9
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_12(8), m_24(18)>
)
  (init_cond = m_12))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_12(8), m_24(18)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
  continue heuristics: 50.0%
Predictions for bb 10
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 17
  DS theory heuristics (ignored): 4.5%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  loop exit heuristics: 4.5%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 20 predicted to even probabilities
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities

;; Function switch_core_media_absorb_sdp

;; 
23 basic blocks, 33 edges, last basic block 23.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  22 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [78.3%]  (true,exec) 22 [21.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.3%]  (true,exec)
Successors:  7 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [85.0%]  (true,exec) 20 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  19 [95.5%]  (true,exec)
Successors:  11 [72.0%]  (true,exec) 10 [28.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [28.0%]  (false,exec)
Successors:  11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [72.0%]  (true,exec) 10 [50.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  15 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [69.8%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [85.0%]  (true,exec)
Successors:  20 [4.5%]  (true,exec) 18 [95.5%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  11 [100.0%]  (fallthru,exec) 16 [15.0%]  (false,exec) 17 [95.5%]  (false,exec)
Successors:  19 [100.0%]  (fallthru,dfs_back,exec)

Basic block 19 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 18 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 17 [4.5%]  (true,exec) 19 [4.5%]  (false,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [21.6%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_absorb_sdp (struct switch_core_session_t * session)
{
  struct sdp_connection_t * connection;
  struct sdp_media_t * m;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  static const char __func__[29] = "switch_core_media_absorb_sdp";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_absorb_sdp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  const char * sdp_str;
  switch_port_t D.41509;
  char * D.41506;
  short unsigned int D.41505;
  char * D.41504;
  const char * D.41503;
  struct sdp_connection_t * D.41498;
  long unsigned int D.41497;
  sdp_media_e D.41495;
  int D.41488;
  size_t D.41487;
  struct switch_channel_t * D.41484;

  # BLOCK 2 freq:1376
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:1
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 6930, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1375
  # PRED: 2 [100.0%]  (false,exec)
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;
  # SUCC: 22 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:1078
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#33 => &smh_4->engines
  # DEBUG a_engine => D#33
  D.41484_6 = session_3(D)->channel;
  sdp_str_7 = switch_channel_get_variable_dup (D.41484_6, "switch_m_sdp", 1, -1);
  # DEBUG sdp_str => sdp_str_7
  if (sdp_str_7 != 0B)
    goto <bb 6>;
  else
    goto <bb 22>;
  # SUCC: 6 [78.3%]  (true,exec) 22 [21.6%]  (false,exec)

  # BLOCK 6 freq:844
  # PRED: 5 [78.3%]  (true,exec)
  D.41487_8 = strlen (sdp_str_7);
  D.41488_9 = (int) D.41487_8;
  parser_10 = sdp_parse (0B, sdp_str_7, D.41488_9, 0);
  # DEBUG parser => parser_10
  if (parser_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 21>;
  # SUCC: 7 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

  # BLOCK 7 freq:590
  # PRED: 6 [69.8%]  (true,exec)
  sdp_11 = sdp_session (parser_10);
  # DEBUG sdp => sdp_11
  if (sdp_11 != 0B)
    goto <bb 8>;
  else
    goto <bb 20>;
  # SUCC: 8 [85.0%]  (true,exec) 20 [15.0%]  (false,exec)

  # BLOCK 8 freq:501
  # PRED: 7 [85.0%]  (true,exec)
  m_12 = sdp_11->sdp_media;
  # DEBUG m => m_12
  goto <bb 19>;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9550
  # PRED: 19 [95.5%]  (true,exec)
  D.41495_13 = m_1->m_type;
  if (D.41495_13 != 2)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [72.0%]  (true,exec) 10 [28.0%]  (false,exec)

  # BLOCK 10 freq:2674
  # PRED: 9 [28.0%]  (false,exec)
  D.41497_14 = m_1->m_port;
  if (D.41497_14 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 11 freq:8213
  # PRED: 9 [72.0%]  (true,exec) 10 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 18>;
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:1337
  # PRED: 10 [50.0%]  (false,exec)
  connection_15 = sdp_11->sdp_connection;
  # DEBUG connection => connection_15
  D.41498_16 = m_1->m_connections;
  if (D.41498_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:1136
  # PRED: 12 [85.0%]  (true,exec)
  connection_17 = m_1->m_connections;
  # DEBUG connection => connection_17
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:1337
  # PRED: 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  # connection_2 = PHI <connection_15(12), connection_17(13)>
  # DEBUG connection => connection_2
  if (connection_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

  # BLOCK 15 freq:934
  # PRED: 14 [69.8%]  (true,exec)
  D.41503_18 = connection_2->c_address;
  D.41504_19 = switch_core_perform_session_strdup (session_3(D), D.41503_18, "src/switch_core_media.c", &__func__, 6957);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip = D.41504_19;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:1337
  # PRED: 14 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  D.41497_20 = m_1->m_port;
  D.41505_21 = (short unsigned int) D.41497_20;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port = D.41505_21;
  D.41506_22 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip;
  if (D.41506_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [85.0%]  (true,exec) 18 [15.0%]  (false,exec)

  # BLOCK 17 freq:1136
  # PRED: 16 [85.0%]  (true,exec)
  D.41509_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port;
  if (D.41509_23 != 0)
    goto <bb 20>;
  else
    goto <bb 18>;
  # SUCC: 20 [4.5%]  (true,exec) 18 [95.5%]  (false,exec)

  # BLOCK 18 freq:9499
  # PRED: 11 [100.0%]  (fallthru,exec) 16 [15.0%]  (false,exec) 17 [95.5%]  (false,exec)
  m_24 = m_1->m_next;
  # DEBUG m => m_24
  # SUCC: 19 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 19 freq:10000
  # PRED: 8 [100.0%]  (fallthru,exec) 18 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_12(8), m_24(18)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 20>;
  # SUCC: 9 [95.5%]  (true,exec) 20 [4.5%]  (false,exec)

  # BLOCK 20 freq:590
  # PRED: 7 [15.0%]  (false,exec) 17 [4.5%]  (true,exec) 19 [4.5%]  (false,exec)
  sdp_parser_free (parser_10);
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:844
  # PRED: 6 [30.2%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  switch_core_media_set_local_sdp (session_3(D), sdp_str_7, 1);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:1375
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_udptl_image_sdp (switch_core_media_set_udptl_image_sdp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 38 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 38 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 38 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 23 22 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 31 30 }
;; 30 succs { 31 }
;; 31 succs { 33 32 }
;; 32 succs { 33 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 8
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 4.4%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 20.7%
  first match heuristics (ignored): 29.0%
  combined heuristics: 20.7%
  early return (on trees) heuristics: 39.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 32 predicted to even probabilities
Predictions for bb 33
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 36 predicted to even probabilities
1 edges in bb 37 predicted to even probabilities
1 edges in bb 38 predicted to even probabilities

;; Function switch_core_media_set_udptl_image_sdp

;; 
39 basic blocks, 55 edges, last basic block 39.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  38 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [0.0%]  (true,exec) 7 [100.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [0.0%]  (true,exec)
Successors: 

Basic block 7 (new, reachable)
Predecessors:  5 [100.0%]  (false,exec)
Successors:  8 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [15.0%]  (true,exec)
Successors:  9 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [15.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  7 [85.0%]  (false,exec) 8 [85.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
Successors:  11 [4.4%]  (true,exec) 12 [95.6%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [4.4%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [95.6%]  (false,exec)
Successors:  13 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec) 13 [50.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [20.7%]  (true,exec) 17 [79.3%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [20.7%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [79.3%]  (false,exec)
Successors:  18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [29.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [50.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  23 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [15.0%]  (false,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [85.0%]  (true,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [29.0%]  (true,exec) 27 [71.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [29.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [71.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [50.0%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [50.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  31 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (false,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec) 30 [100.0%]  (fallthru,exec)
Successors:  33 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (false,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec) 32 [100.0%]  (fallthru,exec)
Successors:  35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [50.0%]  (false,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
Successors:  36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [29.0%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 11 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 37 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_udptl_image_sdp (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options, int insist)
{
  static const char __func__[38] = "switch_core_media_set_udptl_image_sdp";
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_udptl_image_sdp";
  struct switch_media_handle_t * smh;
  int broken_boolean;
  const char * var;
  const char * jbig_off;
  const char * jbig_on;
  const char * mmr_off;
  const char * mmr_on;
  const char * bit_removal_off;
  const char * bit_removal_on;
  const char * username;
  const char * family;
  uint32_t port;
  const char * ip;
  char max_data[128];
  char max_buf[128];
  char buf[2048];
  char * D.41478;
  char * D.41477;
  unsigned int D.41476;
  size_t D.41475;
  char * D.41474;
  size_t D.41473;
  const char * D.41470;
  const char * D.41469;
  switch_bool_t D.41465;
  switch_bool_t D.41460;
  switch_bool_t D.41455;
  uint32_t D.41453;
  int D.41452;
  uint16_t D.41451;
  unsigned int D.41450;
  size_t D.41449;
  char * D.41448;
  size_t D.41447;
  uint32_t D.41442;
  uint32_t D.41439;
  char * D.41435;
  uint32_t D.41433;
  uint32_t D.41430;
  unsigned int D.41429;
  unsigned int D.41428;
  time_t D.41427;
  uint32_t D.41424;
  char * D.41423;
  switch_port_t D.41420;
  switch_port_t D.41417;
  char * D.41414;
  struct switch_channel_t * D.41407;
  struct switch_core_media_params_t * D.41406;
  uint16_t D.41405;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  buf = "";
  max_buf = "";
  max_data = "";
  # DEBUG family => "IP4"
  # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval\n"
  # DEBUG bit_removal_off => ""
  # DEBUG mmr_on => "a=T38FaxTranscodingMMR\n"
  # DEBUG mmr_off => ""
  # DEBUG jbig_on => "a=T38FaxTranscodingJBIG\n"
  # DEBUG jbig_off => ""
  if (session_20(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 6995, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_21 = session_20(D)->media_handle;
  # DEBUG smh => smh_21
  if (smh_21 == 0B)
    goto <bb 38>;
  else
    goto <bb 5>;
  # SUCC: 38 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#34 => &smh_21->engines
  # DEBUG a_engine => D#34
  if (t38_options_23(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [0.0%]  (true,exec) 7 [100.0%]  (false,exec)

  # BLOCK 6 freq:4
  # PRED: 5 [0.0%]  (true,exec)
  __assert_fail ("t38_options", "src/switch_core_media.c", 7004, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 7 freq:8979
  # PRED: 5 [100.0%]  (false,exec)
  ip_24 = t38_options_23(D)->local_ip;
  # DEBUG ip => ip_24
  D.41405_25 = t38_options_23(D)->local_port;
  port_26 = (uint32_t) D.41405_25;
  # DEBUG port => port_26
  D.41406_27 = smh_21->mparams;
  username_28 = D.41406_27->sdp_username;
  # DEBUG username => username_28
  D.41407_29 = session_20(D)->channel;
  var_30 = switch_channel_get_variable_dup (D.41407_29, "t38_broken_boolean", 1, -1);
  # DEBUG var => var_30
  broken_boolean_31 = switch_true (var_30);
  # DEBUG broken_boolean => broken_boolean_31
  if (ip_24 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
  # SUCC: 8 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 8 freq:1347
  # PRED: 7 [15.0%]  (true,exec)
  ip_32 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_ip;
  # DEBUG ip => ip_32
  if (ip_32 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 9 freq:202
  # PRED: 8 [15.0%]  (true,exec)
  ip_33 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_ip;
  # DEBUG ip => ip_33
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:8979
  # PRED: 7 [85.0%]  (false,exec) 8 [85.0%]  (false,exec) 9 [100.0%]  (fallthru,exec)
  # ip_1 = PHI <ip_24(7), ip_32(8), ip_33(9)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [4.4%]  (true,exec) 12 [95.6%]  (false,exec)

  # BLOCK 11 freq:396
  # PRED: 10 [4.4%]  (true,exec)
  D.41407_34 = session_20(D)->channel;
  D.41414_35 = switch_channel_get_name (D.41407_34);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7022, 0B, 2, "%s NO IP!\n", D.41414_35);
  goto <bb 38>;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:8583
  # PRED: 10 [95.6%]  (false,exec)
  if (port_26 == 0)
    goto <bb 13>;
  else
    goto <bb 15>;
  # SUCC: 13 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 13 freq:4291
  # PRED: 12 [50.0%]  (true,exec)
  D.41417_36 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_port;
  port_37 = (uint32_t) D.41417_36;
  # DEBUG port => port_37
  if (port_37 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 14 freq:2146
  # PRED: 13 [50.0%]  (true,exec)
  D.41420_38 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_port;
  port_39 = (uint32_t) D.41420_38;
  # DEBUG port => port_39
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:8583
  # PRED: 12 [50.0%]  (false,exec) 13 [50.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  # port_2 = PHI <port_26(12), port_37(13), port_39(14)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [20.7%]  (true,exec) 17 [79.3%]  (false,exec)

  # BLOCK 16 freq:1778
  # PRED: 15 [20.7%]  (true,exec)
  D.41407_40 = session_20(D)->channel;
  D.41423_41 = switch_channel_get_name (D.41407_40);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7033, 0B, 2, "%s NO PORT!\n", D.41423_41);
  goto <bb 38>;
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:6805
  # PRED: 15 [79.3%]  (false,exec)
  D.41424_42 = smh_21->owner_id;
  if (D.41424_42 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

  # BLOCK 18 freq:1974
  # PRED: 17 [29.0%]  (true,exec)
  D.41427_43 = switch_epoch_time_now (0B);
  D.41428_44 = (unsigned int) D.41427_43;
  D.41429_45 = D.41428_44 - port_2;
  smh_21->owner_id = D.41429_45;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:6805
  # PRED: 17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  D.41430_46 = smh_21->session_id;
  if (D.41430_46 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 20 freq:3403
  # PRED: 19 [50.0%]  (true,exec)
  D.41424_47 = smh_21->owner_id;
  smh_21->session_id = D.41424_47;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:6805
  # PRED: 19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  D.41430_48 = smh_21->session_id;
  D.41433_49 = D.41430_48 + 1;
  smh_21->session_id = D.41433_49;
  D.41435_50 = __builtin_strchr (ip_1, 58);
  if (D.41435_50 != 0B)
    goto <bb 23>;
  else
    goto <bb 22>;
  # SUCC: 23 [85.0%]  (true,exec) 22 [15.0%]  (false,exec)

  # BLOCK 22 freq:1021
  # PRED: 21 [15.0%]  (false,exec)
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:6805
  # PRED: 21 [85.0%]  (true,exec) 22 [100.0%]  (fallthru,exec)
  # family_9 = PHI <"IP6"(21), "IP4"(22)>
  # DEBUG family => family_9
  D.41424_54 = smh_21->owner_id;
  D.41430_55 = smh_21->session_id;
  switch_snprintf (&buf, 2048, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n", username_28, D.41424_54, D.41430_55, family_9, ip_1, username_28, family_9, ip_1);
  D.41439_56 = t38_options_23(D)->T38FaxMaxBuffer;
  if (D.41439_56 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

  # BLOCK 24 freq:1974
  # PRED: 23 [29.0%]  (true,exec)
  D.41439_57 = t38_options_23(D)->T38FaxMaxBuffer;
  switch_snprintf (&max_buf, 128, "a=T38FaxMaxBuffer:%d\n", D.41439_57);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:6805
  # PRED: 23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  D.41442_58 = t38_options_23(D)->T38FaxMaxDatagram;
  if (D.41442_58 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [29.0%]  (true,exec) 27 [71.0%]  (false,exec)

  # BLOCK 26 freq:1974
  # PRED: 25 [29.0%]  (true,exec)
  D.41442_59 = t38_options_23(D)->T38FaxMaxDatagram;
  switch_snprintf (&max_data, 128, "a=T38FaxMaxDatagram:%d\n", D.41442_59);
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:6805
  # PRED: 25 [71.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  if (broken_boolean_31 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 28 freq:3403
  # PRED: 27 [50.0%]  (true,exec)
  # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval:1\n"
  # DEBUG bit_removal_off => "a=T38FaxFillBitRemoval:0\n"
  # DEBUG mmr_on => "a=T38FaxTranscodingMMR:1\n"
  # DEBUG mmr_off => "a=T38FaxTranscodingMMR:0\n"
  # DEBUG jbig_on => "a=T38FaxTranscodingJBIG:1\n"
  # DEBUG jbig_off => "a=T38FaxTranscodingJBIG:0\n"
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:6805
  # PRED: 27 [50.0%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  # bit_removal_on_3 = PHI <"a=T38FaxFillBitRemoval\n"(27), "a=T38FaxFillBitRemoval:1\n"(28)>
  # bit_removal_off_4 = PHI <""(27), "a=T38FaxFillBitRemoval:0\n"(28)>
  # mmr_on_5 = PHI <"a=T38FaxTranscodingMMR\n"(27), "a=T38FaxTranscodingMMR:1\n"(28)>
  # mmr_off_6 = PHI <""(27), "a=T38FaxTranscodingMMR:0\n"(28)>
  # jbig_on_7 = PHI <"a=T38FaxTranscodingJBIG\n"(27), "a=T38FaxTranscodingJBIG:1\n"(28)>
  # jbig_off_8 = PHI <""(27), "a=T38FaxTranscodingJBIG:0\n"(28)>
  # DEBUG jbig_off => jbig_off_8
  # DEBUG jbig_on => jbig_on_7
  # DEBUG mmr_off => mmr_off_6
  # DEBUG mmr_on => mmr_on_5
  # DEBUG bit_removal_off => bit_removal_off_4
  # DEBUG bit_removal_on => bit_removal_on_3
  D.41447_66 = strlen (&buf);
  D.41448_67 = &buf + D.41447_66;
  D.41449_68 = strlen (&buf);
  D.41450_69 = 2048 - D.41449_68;
  D.41451_70 = t38_options_23(D)->T38FaxVersion;
  D.41452_71 = (int) D.41451_70;
  D.41453_72 = t38_options_23(D)->T38MaxBitRate;
  D.41455_73 = t38_options_23(D)->T38FaxFillBitRemoval;
  if (D.41455_73 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;
  # SUCC: 31 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 30 freq:3403
  # PRED: 29 [50.0%]  (false,exec)
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:6805
  # PRED: 29 [50.0%]  (true,exec) 30 [100.0%]  (fallthru,exec)
  # bit_removal_on_10 = PHI <bit_removal_on_3(29), bit_removal_off_4(30)>
  D.41460_76 = t38_options_23(D)->T38FaxTranscodingMMR;
  if (D.41460_76 != 0)
    goto <bb 33>;
  else
    goto <bb 32>;
  # SUCC: 33 [50.0%]  (true,exec) 32 [50.0%]  (false,exec)

  # BLOCK 32 freq:3403
  # PRED: 31 [50.0%]  (false,exec)
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:6805
  # PRED: 31 [50.0%]  (true,exec) 32 [100.0%]  (fallthru,exec)
  # mmr_on_11 = PHI <mmr_on_5(31), mmr_off_6(32)>
  D.41465_79 = t38_options_23(D)->T38FaxTranscodingJBIG;
  if (D.41465_79 != 0)
    goto <bb 35>;
  else
    goto <bb 34>;
  # SUCC: 35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 34 freq:3403
  # PRED: 33 [50.0%]  (false,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:6805
  # PRED: 33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
  # jbig_on_12 = PHI <jbig_on_7(33), jbig_off_8(34)>
  D.41469_82 = t38_options_23(D)->T38FaxRateManagement;
  D.41470_83 = t38_options_23(D)->T38FaxUdpEC;
  switch_snprintf (D.41448_67, D.41450_69, "m=image %d udptl t38\na=T38FaxVersion:%d\na=T38MaxBitRate:%d\n%s%s%sa=T38FaxRateManagement:%s\n%s%sa=T38FaxUdpEC:%s\n", port_2, D.41452_71, D.41453_72, bit_removal_on_10, mmr_on_11, jbig_on_12, D.41469_82, &max_buf, &max_data, D.41470_83);
  if (insist_84(D) != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [29.0%]  (true,exec) 37 [71.0%]  (false,exec)

  # BLOCK 36 freq:1974
  # PRED: 35 [29.0%]  (true,exec)
  D.41473_85 = strlen (&buf);
  D.41474_86 = &buf + D.41473_85;
  D.41475_87 = strlen (&buf);
  D.41476_88 = 2048 - D.41475_87;
  switch_snprintf (D.41474_86, D.41476_88, "m=audio 0 RTP/AVP 19\n");
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:6805
  # PRED: 35 [71.0%]  (false,exec) 36 [100.0%]  (fallthru,exec)
  switch_core_media_set_local_sdp (session_20(D), &buf, 1);
  D.41407_89 = session_20(D)->channel;
  D.41477_90 = switch_channel_get_name (D.41407_89);
  D.41406_91 = smh_21->mparams;
  D.41478_92 = D.41406_91->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7113, session_20(D), 7, "%s image media sdp:\n%s\n", D.41477_90, D.41478_92);
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:9992
  # PRED: 4 [10.1%]  (true,exec) 11 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 37 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_patch_sdp (switch_core_media_patch_sdp)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
;;
;; Loop 1
;;  header 92, latch 91
;;  depth 1, outer 0
;;  nodes: 92 91 90 89 86 87 88 53 85 84 83 48 52 38 50 40 82 68 67 66 63 64 65 60 62 61 59 58 57 56 54 55 49 39 25 26 24 23 93 79 80 81 76 78 77 75 74 73 69 70 71 72 32 33 37 36 35 34 29 31 30 27 28 51 46 47 44 45 42 43 41
;;
;; Loop 5
;;  header 86, latch 85
;;  depth 2, outer 1
;;  nodes: 86 85 84 83 88 87
;;
;; Loop 4
;;  header 32, latch 31
;;  depth 2, outer 1
;;  nodes: 32 31 30 34 35 36 37 33
;;
;; Loop 3
;;  header 63, latch 62
;;  depth 2, outer 1
;;  nodes: 63 62 61 65 64
;;
;; Loop 2
;;  header 79, latch 78
;;  depth 2, outer 1
;;  nodes: 79 78 77 81 80
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 101 5 }
;; 5 succs { 8 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 101 9 }
;; 9 succs { 10 14 }
;; 10 succs { 11 14 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { 101 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 101 }
;; 21 succs { 22 }
;; 22 succs { 92 }
;; 23 succs { 94 24 }
;; 24 succs { 94 25 }
;; 25 succs { 26 39 }
;; 26 succs { 27 39 }
;; 27 succs { 29 28 }
;; 28 succs { 29 }
;; 29 succs { 32 }
;; 30 succs { 94 31 }
;; 31 succs { 32 }
;; 32 succs { 33 38 }
;; 33 succs { 34 38 }
;; 34 succs { 30 35 }
;; 35 succs { 30 36 }
;; 36 succs { 30 37 }
;; 37 succs { 30 38 }
;; 38 succs { 53 }
;; 39 succs { 40 49 }
;; 40 succs { 41 53 }
;; 41 succs { 94 42 }
;; 42 succs { 44 43 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 53 }
;; 49 succs { 50 54 }
;; 50 succs { 51 53 }
;; 51 succs { 94 52 }
;; 52 succs { 53 }
;; 53 succs { 86 }
;; 54 succs { 56 55 }
;; 55 succs { 56 67 }
;; 56 succs { 57 67 }
;; 57 succs { 94 58 }
;; 58 succs { 94 59 }
;; 59 succs { 94 60 }
;; 60 succs { 63 }
;; 61 succs { 94 62 }
;; 62 succs { 63 }
;; 63 succs { 64 66 }
;; 64 succs { 65 66 }
;; 65 succs { 61 66 }
;; 66 succs { 53 }
;; 67 succs { 68 53 }
;; 68 succs { 69 53 }
;; 69 succs { 70 73 }
;; 70 succs { 71 73 }
;; 71 succs { 72 73 }
;; 72 succs { 73 }
;; 73 succs { 94 74 }
;; 74 succs { 94 75 }
;; 75 succs { 94 76 }
;; 76 succs { 79 }
;; 77 succs { 94 78 }
;; 78 succs { 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 77 82 }
;; 82 succs { 53 }
;; 83 succs { 94 84 }
;; 84 succs { 94 85 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 83 89 }
;; 89 succs { 94 90 }
;; 90 succs { 94 91 }
;; 91 succs { 92 }
;; 92 succs { 93 94 }
;; 93 succs { 23 94 }
;; 94 succs { 101 95 }
;; 95 succs { 97 96 }
;; 96 succs { 97 98 }
;; 97 succs { 101 }
;; 98 succs { 99 100 }
;; 99 succs { 101 }
;; 100 succs { 101 }
;; 101 succs { 1 }
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
;;
;; Loop 1
;;  header 92, latch 91
;;  depth 1, outer 0
;;  nodes: 92 91 90 89 86 87 88 53 85 84 83 48 52 38 50 40 82 68 67 66 63 64 65 60 62 61 59 58 57 56 54 55 49 39 25 26 24 23 93 79 80 81 76 78 77 75 74 73 69 70 71 72 32 33 37 36 35 34 29 31 30 27 28 51 46 47 44 45 42 43 41
;;
;; Loop 5
;;  header 86, latch 85
;;  depth 2, outer 1
;;  nodes: 86 85 84 83 88 87
;;
;; Loop 4
;;  header 32, latch 31
;;  depth 2, outer 1
;;  nodes: 32 31 30 34 35 36 37 33
;;
;; Loop 3
;;  header 63, latch 62
;;  depth 2, outer 1
;;  nodes: 63 62 61 65 64
;;
;; Loop 2
;;  header 79, latch 78
;;  depth 2, outer 1
;;  nodes: 79 78 77 81 80
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41264_66)
(get_scalar_evolution 
  (scalar = D.41264_66)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41264_66)
(get_scalar_evolution 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_5 = PHI <p_60(22), p_207(91)>
)
  (init_cond = p_60))
(analyze_evolution_in_loop 
  (loop_phi_node = p_5 = PHI <p_60(22), p_207(91)>
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(53), p_202(85)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(53), p_202(85)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(number_of_iterations_in_loop = 
  (set_nb_iterations_in_loop = scev_not_known))
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_6 = PHI <q_203(53), q_201(85)>
)
  (init_cond = q_203))
(analyze_evolution_in_loop 
  (loop_phi_node = q_6 = PHI <q_203(53), q_201(85)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = q_203)
  (to_add = 1)
  (res = {q_203, +, 1}_5))
  (evolution_function = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_6 = PHI <q_203(53), q_201(85)>
)
  (init_cond = q_203))
(analyze_evolution_in_loop 
  (loop_phi_node = q_6 = PHI <q_203(53), q_201(85)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = q_203)
  (to_add = 1)
  (res = {q_203, +, 1}_5))
  (evolution_function = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(53), p_202(85)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(53), p_202(85)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(53), p_202(85)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(53), p_202(85)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_7)
(get_scalar_evolution 
  (scalar = q_7)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_7 = PHI <new_sdp_56(22), q_206(91)>
)
  (init_cond = new_sdp_56))
(analyze_evolution_in_loop 
  (loop_phi_node = q_7 = PHI <new_sdp_56(22), q_206(91)>
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = q_7)
  (scalar_evolution = q_7))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_7)
(get_scalar_evolution 
  (scalar = q_7)
  (scalar_evolution = q_7))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = q_7)
  (scalar_evolution = q_7))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_197)
(get_scalar_evolution 
  (scalar = D.41264_197)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_197)
(get_scalar_evolution 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_196)
(get_scalar_evolution 
  (scalar = D.41264_196)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_196)
(get_scalar_evolution 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 5
  exit condition [p_204, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations -(unsigned int) p_204, bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = qe_65)
(get_scalar_evolution 
  (scalar = qe_65)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 5
  exit condition [q_203, + , 1](no_overflow) < qe_65
  bounds on difference of bases: -4294967295 ... 4294967295
  result:
    zero if qe_65 < q_203
    # of iterations (unsigned int) qe_65 - (unsigned int) q_203, bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = pe_63)
(get_scalar_evolution 
  (scalar = pe_63)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 5
  exit condition [p_204, + , 1](no_overflow) < pe_63
  bounds on difference of bases: -4294967295 ... 4294967295
  result:
    zero if pe_63 < p_204
    # of iterations (unsigned int) pe_63 - (unsigned int) p_204, bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41264_85)
(get_scalar_evolution 
  (scalar = D.41264_85)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41264_85)
(get_scalar_evolution 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = p_1)
(get_scalar_evolution 
  (scalar = p_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_1 = PHI <p_77(29), p_97(31)>
)
  (init_cond = p_77))
(analyze_evolution_in_loop 
  (loop_phi_node = p_1 = PHI <p_77(29), p_97(31)>
)
(add_to_evolution 
  (loop_nb = 4)
  (chrec_before = p_77)
  (to_add = 1)
  (res = {p_77, +, 1}_4))
  (evolution_function = {p_77, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = p_1)
  (scalar_evolution = {p_77, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 4
  exit condition [p_77, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations -(unsigned int) p_77, bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = p_1)
(get_scalar_evolution 
  (scalar = p_1)
  (scalar_evolution = {p_77, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = p_1)
  (scalar_evolution = {p_77, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = pe_63)
(get_scalar_evolution 
  (scalar = pe_63)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 4
  exit condition [p_77, + , 1](no_overflow) < pe_63
  bounds on difference of bases: -4294967295 ... 4294967295
  result:
    zero if pe_63 < p_77
    # of iterations (unsigned int) pe_63 - (unsigned int) p_77, bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41344_163)
(get_scalar_evolution 
  (scalar = D.41344_163)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_162)
(get_scalar_evolution 
  (scalar = D.41264_162)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = D.41344_163)
  (scalar_evolution = D.41264_162 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_162)
(get_scalar_evolution 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_161)
(get_scalar_evolution 
  (scalar = D.41264_161)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_161)
(get_scalar_evolution 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_2)
(get_scalar_evolution 
  (scalar = p_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_2 = PHI <p_185(60), p_165(62)>
)
  (init_cond = p_185))
(analyze_evolution_in_loop 
  (loop_phi_node = p_2 = PHI <p_185(60), p_165(62)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = p_185)
  (to_add = 1)
  (res = {p_185, +, 1}_3))
  (evolution_function = {p_185, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = p_2)
  (scalar_evolution = {p_185, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 3
  exit condition [p_5 + 8, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... -8
  result:
    # of iterations -(unsigned int) (p_5 + 8), bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_2)
(get_scalar_evolution 
  (scalar = p_2)
  (scalar_evolution = {p_185, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 60 
  (scalar = p_2)
  (scalar_evolution = {p_185, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pe_63)
(get_scalar_evolution 
  (scalar = pe_63)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [p_5 + 8, + , 1](no_overflow) < pe_63
  bounds on difference of bases: 1 ... 4294967287
  result:
    # of iterations (unsigned int) pe_63 - (unsigned int) (p_5 + 8), bounded by 4294967287
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41344_192)
(get_scalar_evolution 
  (scalar = D.41344_192)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_191)
(get_scalar_evolution 
  (scalar = D.41264_191)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41344_192)
  (scalar_evolution = D.41264_191 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_191)
(get_scalar_evolution 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_190)
(get_scalar_evolution 
  (scalar = D.41264_190)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_190)
(get_scalar_evolution 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <p_183(76), p_194(78)>
)
  (init_cond = p_183))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <p_183(76), p_194(78)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = p_183)
  (to_add = 1)
  (res = {p_183, +, 1}_2))
  (evolution_function = {p_183, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = p_3)
  (scalar_evolution = {p_183, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 2
  exit condition [p_5 + 8, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... -8
  result:
    # of iterations -(unsigned int) (p_5 + 8), bounded by 4294967295
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = {p_183, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = p_3)
  (scalar_evolution = {p_183, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pe_63)
(get_scalar_evolution 
  (scalar = pe_63)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [p_5 + 8, + , 1](no_overflow) < pe_63
  bounds on difference of bases: 1 ... 4294967287
  result:
    # of iterations (unsigned int) pe_63 - (unsigned int) (p_5 + 8), bounded by 4294967287
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 11
  DS theory heuristics: 78.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 12
  DS theory heuristics: 78.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 15
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 18
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 19
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 24
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 25
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 26
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 27
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 28 predicted to even probabilities
1 edges in bb 29 predicted to even probabilities
Predictions for bb 30
  DS theory heuristics (ignored): 0.1%
  first match heuristics: 2.2%
  combined heuristics: 2.2%
  loop exit heuristics: 2.2%
  loop exit heuristics: 2.0%
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 97.8%
Predictions for bb 33
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 34
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 35
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 36
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 37
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 40
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 41
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 42
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 45 predicted to even probabilities
Predictions for bb 46
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 47 predicted to even probabilities
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 50
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 51
  DS theory heuristics (ignored): 4.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  loop exit heuristics: 2.0%
1 edges in bb 52 predicted to even probabilities
1 edges in bb 53 predicted to even probabilities
Predictions for bb 54
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 55
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 56
  DS theory heuristics: 51.2%
  first match heuristics (ignored): 72.0%
  combined heuristics: 51.2%
  opcode values nonequal (on trees) heuristics: 72.0%
  call heuristics: 29.0%
Predictions for bb 57
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 58
  DS theory heuristics (ignored): 4.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  loop exit heuristics: 2.0%
Predictions for bb 59
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 60 predicted to even probabilities
Predictions for bb 61
  DS theory heuristics (ignored): 0.1%
  first match heuristics: 2.2%
  combined heuristics: 2.2%
  loop exit heuristics: 2.2%
  loop exit heuristics: 2.0%
1 edges in bb 62 predicted to even probabilities
Predictions for bb 63
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 97.8%
Predictions for bb 64
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 65
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
1 edges in bb 66 predicted to even probabilities
Predictions for bb 67
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 68
  DS theory heuristics: 72.0%
  first match heuristics (ignored): 72.0%
  combined heuristics: 72.0%
  opcode values nonequal (on trees) heuristics: 72.0%
Predictions for bb 69
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 70
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 71
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 72 predicted to even probabilities
Predictions for bb 73
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 74
  DS theory heuristics (ignored): 4.8%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  call heuristics (ignored): 71.0%
  loop exit heuristics: 2.0%
Predictions for bb 75
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 76 predicted to even probabilities
Predictions for bb 77
  DS theory heuristics (ignored): 0.1%
  first match heuristics: 2.2%
  combined heuristics: 2.2%
  loop exit heuristics: 2.2%
  loop exit heuristics: 2.0%
1 edges in bb 78 predicted to even probabilities
Predictions for bb 79
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 97.8%
Predictions for bb 80
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
Predictions for bb 81
  DS theory heuristics (ignored): 97.8%
  first match heuristics: 97.8%
  combined heuristics: 97.8%
  loop exit heuristics: 97.8%
1 edges in bb 82 predicted to even probabilities
Predictions for bb 83
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 84
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 85 predicted to even probabilities
Predictions for bb 86
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 98.0%
Predictions for bb 87
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 88
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  opcode values nonequal (on trees) heuristics (ignored): 72.0%
  loop exit heuristics: 98.0%
Predictions for bb 89
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
Predictions for bb 90
  DS theory heuristics (ignored): 2.0%
  first match heuristics: 2.0%
  combined heuristics: 2.0%
  loop exit heuristics: 2.0%
1 edges in bb 91 predicted to even probabilities
Predictions for bb 92
  DS theory heuristics (ignored): 99.6%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 98.0%
Predictions for bb 93
  DS theory heuristics (ignored): 98.0%
  first match heuristics: 98.0%
  combined heuristics: 98.0%
  loop exit heuristics: 98.0%
Predictions for bb 94
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 95
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 96
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 97 predicted to even probabilities
Predictions for bb 98
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 99 predicted to even probabilities
1 edges in bb 100 predicted to even probabilities
1 edges in bb 101 predicted to even probabilities

;; Function switch_core_media_patch_sdp

;; 
102 basic blocks, 170 edges, last basic block 102.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  101 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  8 [15.0%]  (true,exec) 6 [85.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (false,exec)
Successors:  8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [15.0%]  (true,exec) 6 [50.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
Successors:  101 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  10 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [29.0%]  (true,exec)
Successors:  11 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  13 [78.4%]  (true,exec) 12 [21.6%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [21.6%]  (false,exec)
Successors:  13 [78.4%]  (true,exec) 14 [21.6%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [78.4%]  (true,exec) 12 [78.4%]  (true,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  9 [71.0%]  (false,exec) 10 [71.0%]  (false,exec) 12 [21.6%]  (false,exec)
Successors:  17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [85.0%]  (false,exec)
Successors:  17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
Successors:  19 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [71.0%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 22 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [29.0%]  (true,exec) 18 [50.0%]  (true,exec)
Successors:  20 [39.0%]  (true,exec) 21 [61.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [39.0%]  (true,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [61.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  92 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  93 [98.0%]  (true,exec)
Successors:  94 [2.0%]  (true,exec) 24 [98.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 25 [98.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [98.0%]  (false,exec)
Successors:  26 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [85.0%]  (true,exec)
Successors:  27 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (true,exec)
Successors:  29 [85.0%]  (true,exec) 28 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [15.0%]  (false,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec) 28 [100.0%]  (fallthru,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec) 35 [28.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [97.8%]  (true,exec)
Successors:  94 [2.2%]  (true,exec) 31 [97.8%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [97.8%]  (false,exec)
Successors:  32 [100.0%]  (fallthru,dfs_back,exec)

Basic block 32 (new, reachable)
Predecessors:  29 [100.0%]  (fallthru,exec) 31 [100.0%]  (fallthru,dfs_back,exec)
Successors:  33 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [97.8%]  (true,exec)
Successors:  34 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [97.8%]  (true,exec)
Successors:  30 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec)
Successors:  30 [28.0%]  (true,exec) 36 [72.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [72.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  30 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  32 [2.2%]  (false,exec) 33 [2.2%]  (false,exec) 37 [2.2%]  (false,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  25 [15.0%]  (false,exec) 26 [71.0%]  (false,exec)
Successors:  40 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  41 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [85.0%]  (true,exec)
Successors:  94 [2.0%]  (true,exec) 42 [98.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [98.0%]  (false,exec)
Successors:  44 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [15.0%]  (false,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  42 [85.0%]  (true,exec) 43 [100.0%]  (fallthru,exec)
Successors:  45 [29.0%]  (true,exec) 46 [71.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [29.0%]  (true,exec)
Successors:  46 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  44 [71.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
Successors:  47 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [50.0%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  46 [50.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec)
Successors:  50 [50.0%]  (true,exec) 54 [50.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [50.0%]  (true,exec)
Successors:  51 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [85.0%]  (true,exec)
Successors:  94 [2.0%]  (true,exec) 52 [98.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [98.0%]  (false,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  48 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 50 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 82 [100.0%]  (fallthru,exec) 68 [28.0%]  (false,exec) 67 [50.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
Successors:  86 [100.0%]  (fallthru)

Basic block 54 (new, reachable)
Predecessors:  49 [50.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 67 [50.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
Successors:  57 [51.2%]  (true,exec) 67 [48.8%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [51.2%]  (true,exec)
Successors:  94 [2.0%]  (true,exec) 58 [98.0%]  (false,exec)

Basic block 58 (new, reachable)
Predecessors:  57 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 59 [98.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 60 [98.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [98.0%]  (false,exec)
Successors:  63 [100.0%]  (fallthru)

Basic block 61 (new, reachable)
Predecessors:  65 [97.8%]  (true,exec)
Successors:  94 [2.2%]  (true,exec) 62 [97.8%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [97.8%]  (false,exec)
Successors:  63 [100.0%]  (fallthru,dfs_back,exec)

Basic block 63 (new)
Predecessors:  60 [100.0%]  (fallthru) 62 [100.0%]  (fallthru,dfs_back,exec)
Successors:  64 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [97.8%]  (true,exec)
Successors:  65 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [97.8%]  (true,exec)
Successors:  61 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  63 [2.2%]  (false,exec) 64 [2.2%]  (false,exec) 65 [2.2%]  (false,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  55 [50.0%]  (false,exec) 56 [48.8%]  (false,exec)
Successors:  68 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  69 [72.0%]  (true,exec) 53 [28.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [72.0%]  (true,exec)
Successors:  70 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  69 [29.0%]  (true,exec)
Successors:  71 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [29.0%]  (true,exec)
Successors:  72 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [29.0%]  (true,exec)
Successors:  73 [100.0%]  (fallthru,exec)

Basic block 73 (new, reachable)
Predecessors:  69 [71.0%]  (false,exec) 70 [71.0%]  (false,exec) 71 [71.0%]  (false,exec) 72 [100.0%]  (fallthru,exec)
Successors:  94 [2.0%]  (true,exec) 74 [98.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 75 [98.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 76 [98.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [98.0%]  (false,exec)
Successors:  79 [100.0%]  (fallthru)

Basic block 77 (new, reachable)
Predecessors:  81 [97.8%]  (true,exec)
Successors:  94 [2.2%]  (true,exec) 78 [97.8%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [97.8%]  (false,exec)
Successors:  79 [100.0%]  (fallthru,dfs_back,exec)

Basic block 79 (new)
Predecessors:  76 [100.0%]  (fallthru) 78 [100.0%]  (fallthru,dfs_back,exec)
Successors:  80 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [97.8%]  (true,exec)
Successors:  81 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [97.8%]  (true,exec)
Successors:  77 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  79 [2.2%]  (false,exec) 80 [2.2%]  (false,exec) 81 [2.2%]  (false,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 83 (new, reachable)
Predecessors:  88 [98.0%]  (true,exec)
Successors:  94 [2.0%]  (true,exec) 84 [98.0%]  (false,exec)

Basic block 84 (new, reachable)
Predecessors:  83 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 85 [98.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [98.0%]  (false,exec)
Successors:  86 [100.0%]  (fallthru,dfs_back,exec)

Basic block 86 (new)
Predecessors:  53 [100.0%]  (fallthru) 85 [100.0%]  (fallthru,dfs_back,exec)
Successors:  87 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [98.0%]  (true,exec)
Successors:  88 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  87 [98.0%]  (true,exec)
Successors:  83 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  86 [2.0%]  (false,exec) 87 [2.0%]  (false,exec) 88 [2.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 90 [98.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [98.0%]  (false,exec)
Successors:  94 [2.0%]  (true,exec) 91 [98.0%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [98.0%]  (false,exec)
Successors:  92 [100.0%]  (fallthru,dfs_back,exec)

Basic block 92 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 91 [100.0%]  (fallthru,dfs_back,exec)
Successors:  93 [98.0%]  (true,exec) 94 [2.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [98.0%]  (true,exec)
Successors:  23 [98.0%]  (true,exec) 94 [2.0%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  23 [2.0%]  (true,exec) 24 [2.0%]  (true,exec) 30 [2.2%]  (true,exec) 41 [2.0%]  (true,exec) 51 [2.0%]  (true,exec) 57 [2.0%]  (true,exec) 58 [2.0%]  (true,exec) 59 [2.0%]  (true,exec) 61 [2.2%]  (true,exec) 73 [2.0%]  (true,exec) 74 [2.0%]  (true,exec) 75 [2.0%]  (true,exec) 77 [2.2%]  (true,exec) 83 [2.0%]  (true,exec) 84 [2.0%]  (true,exec) 89 [2.0%]  (true,exec) 90 [2.0%]  (true,exec) 92 [2.0%]  (false,exec) 93 [2.0%]  (false,exec)
Successors:  101 [61.0%]  (true,exec) 95 [39.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [39.0%]  (false,exec)
Successors:  97 [39.0%]  (true,exec) 96 [61.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [61.0%]  (false,exec)
Successors:  97 [39.0%]  (true,exec) 98 [61.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  95 [39.0%]  (true,exec) 96 [39.0%]  (true,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 98 (new, reachable)
Predecessors:  96 [61.0%]  (false,exec)
Successors:  99 [39.0%]  (true,exec) 100 [61.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [39.0%]  (true,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 100 (new, reachable)
Predecessors:  98 [61.0%]  (false,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 101 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 8 [39.0%]  (true,exec) 13 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 94 [61.0%]  (true,exec) 97 [100.0%]  (fallthru,exec) 99 [100.0%]  (fallthru,exec) 100 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_patch_sdp (struct switch_core_session_t * session)
{
  const char D.48223;
  int D.48222;
  const char D.48219;
  int D.48218;
  char s_line[1024];
  switch_size_t len;
  char * se;
  char o_line[1024];
  const char * family;
  switch_size_t len;
  char * oe;
  static const char __func__[28] = "switch_core_media_patch_sdp";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_patch_sdp";
  struct switch_media_handle_t * smh;
  int bad;
  char * new_sdp;
  char vport_buf[25];
  char port_buf[25];
  int has_ip;
  int has_audio;
  int has_video;
  char * qe;
  char * pe;
  char * q;
  char * p;
  switch_size_t len;
  char * D.41397;
  char * D.41396;
  int D.41393;
  char * D.41392;
  switch_channel_state_t D.41391;
  int D.41389;
  size_t D.41367;
  size_t D.41366;
  uint8_t D.41359;
  struct switch_rtp_t * D.41358;
  int D.41355;
  int D.41354;
  switch_port_t D.41353;
  struct payload_map_t * D.41352;
  int D.41345;
  char D.41344;
  size_t D.41337;
  size_t D.41336;
  char D.41330;
  int D.41328;
  int D.41326;
  unsigned int D.41321;
  size_t D.41320;
  size_t D.41319;
  int D.41317;
  int se.20;
  int D.41309;
  unsigned int D.41307;
  size_t D.41306;
  size_t D.41305;
  char * D.41304;
  uint32_t D.41302;
  uint32_t D.41299;
  unsigned int D.41298;
  unsigned int D.41297;
  unsigned int D.41296;
  time_t D.41295;
  uint32_t D.41292;
  char * D.41288;
  char * D.41287;
  int D.41285;
  int p.18;
  int oe.17;
  int D.41276;
  char D.41275;
  char D.41273;
  _Bool D.41270;
  _Bool D.41269;
  _Bool D.41268;
  char D.41267;
  char D.41266;
  char D.41264;
  size_t D.41260;
  size_t D.41259;
  char * D.41255;
  char * D.41254;
  char[3] * iftmp.16;
  int D.41251;
  unsigned int D.41243;
  size_t D.41242;
  int D.41241;
  char * D.41240;
  struct payload_map_t * D.41239;
  char * D.41238;
  switch_status_t D.41235;
  switch_port_t D.41234;
  char * D.41231;
  const char * D.41228;
  const char * D.41226;
  uint32_t D.41223;
  struct switch_channel_t * D.41222;
  unsigned int D.41217;
  switch_core_media_NDLB_t D.41216;
  size_t D.41215;
  char * D.41211;
  struct switch_core_media_params_t * D.41210;

  # BLOCK 2 freq:1633
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG has_video => 0
  # DEBUG has_audio => 0
  # DEBUG has_ip => 0
  port_buf = "";
  vport_buf = "";
  # DEBUG bad => 0
  if (session_23(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:1
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7134, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1633
  # PRED: 2 [100.0%]  (false,exec)
  smh_24 = session_23(D)->media_handle;
  # DEBUG smh => smh_24
  if (smh_24 == 0B)
    goto <bb 101>;
  else
    goto <bb 5>;
  # SUCC: 101 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:1467
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#35 => &smh_24->engines
  # DEBUG a_engine => D#35
  # DEBUG D#36 => &smh_24->engines[1]
  # DEBUG v_engine => D#36
  D.41210_27 = smh_24->mparams;
  D.41211_28 = D.41210_27->local_sdp_str;
  # DEBUG s => D.41211_28
  if (D.41211_28 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;
  # SUCC: 8 [15.0%]  (true,exec) 6 [85.0%]  (false,exec)

  # BLOCK 6 freq:1247
  # PRED: 5 [85.0%]  (false,exec)
  D.48219_289 = MEM[(const char *)D.41211_28];
  if (D.48219_289 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 7 freq:624
  # PRED: 6 [50.0%]  (false,exec)
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:1467
  # PRED: 5 [15.0%]  (true,exec) 6 [50.0%]  (true,exec) 7 [100.0%]  (fallthru,exec)
  # D.48218_290 = PHI <1(5), 1(6), 0(7)>
  if (D.48218_290 != 0)
    goto <bb 101>;
  else
    goto <bb 9>;
  # SUCC: 101 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 9 freq:895
  # PRED: 8 [61.0%]  (false,exec)
  D.41210_30 = smh_24->mparams;
  D.41211_31 = D.41210_30->local_sdp_str;
  D.41215_32 = strlen (D.41211_31);
  len_33 = D.41215_32 * 2;
  # DEBUG len => len_33
  D.41210_34 = smh_24->mparams;
  D.41216_35 = D.41210_34->ndlb;
  D.41217_36 = D.41216_35 & 32;
  if (D.41217_36 == 0)
    goto <bb 10>;
  else
    goto <bb 14>;
  # SUCC: 10 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

  # BLOCK 10 freq:260
  # PRED: 9 [29.0%]  (true,exec)
  D.41222_37 = session_23(D)->channel;
  D.41223_38 = switch_channel_test_flag (D.41222_37, 1);
  if (D.41223_38 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;
  # SUCC: 11 [29.0%]  (true,exec) 14 [71.0%]  (false,exec)

  # BLOCK 11 freq:75
  # PRED: 10 [29.0%]  (true,exec)
  D.41210_39 = smh_24->mparams;
  D.41211_40 = D.41210_39->local_sdp_str;
  D.41226_41 = switch_stristr ("sendonly", D.41211_40);
  if (D.41226_41 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [78.4%]  (true,exec) 12 [21.6%]  (false,exec)

  # BLOCK 12 freq:16
  # PRED: 11 [21.6%]  (false,exec)
  D.41210_42 = smh_24->mparams;
  D.41211_43 = D.41210_42->local_sdp_str;
  D.41228_44 = switch_stristr ("0.0.0.0", D.41211_43);
  if (D.41228_44 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [78.4%]  (true,exec) 14 [21.6%]  (false,exec)

  # BLOCK 13 freq:72
  # PRED: 11 [78.4%]  (true,exec) 12 [78.4%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7152, session_23(D), 7, "Skip patch on hold SDP\n");
  goto <bb 101>;
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:823
  # PRED: 9 [71.0%]  (false,exec) 10 [71.0%]  (false,exec) 12 [21.6%]  (false,exec)
  D.41231_45 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
  # DEBUG s => D.41231_45
  if (D.41231_45 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;
  # SUCC: 17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

  # BLOCK 15 freq:700
  # PRED: 14 [85.0%]  (false,exec)
  D.48223_291 = MEM[(const char *)D.41231_45];
  if (D.48223_291 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;
  # SUCC: 17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 16 freq:350
  # PRED: 15 [50.0%]  (false,exec)
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:823
  # PRED: 14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
  # D.48222_292 = PHI <1(14), 1(15), 0(16)>
  if (D.48222_292 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;
  # SUCC: 19 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

  # BLOCK 18 freq:584
  # PRED: 17 [71.0%]  (false,exec)
  D.41234_47 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
  if (D.41234_47 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
  # SUCC: 19 [50.0%]  (true,exec) 22 [50.0%]  (false,exec)

  # BLOCK 19 freq:531
  # PRED: 17 [29.0%]  (true,exec) 18 [50.0%]  (true,exec)
  D.41235_48 = switch_core_media_choose_port (session_23(D), 0, 1);
  if (D.41235_48 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [39.0%]  (true,exec) 21 [61.0%]  (false,exec)

  # BLOCK 20 freq:207
  # PRED: 19 [39.0%]  (true,exec)
  D.41222_49 = session_23(D)->channel;
  D.41238_50 = switch_channel_get_name (D.41222_49);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7159, session_23(D), 3, "%s I/O Error\n", D.41238_50);
  goto <bb 101>;
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:324
  # PRED: 19 [61.0%]  (false,exec)
  D.41239_51 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41240_52 = switch_core_perform_session_strdup (session_23(D), "PROXY", "src/switch_core_media.c", &__func__, 7163);
  D.41239_51->iananame = D.41240_52;
  D.41239_53 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_53->rm_rate = 8000;
  D.41239_54 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_54->adv_rm_rate = 8000;
  D.41239_55 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_55->codec_ms = 20;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:616
  # PRED: 18 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  new_sdp_56 = switch_core_perform_session_alloc (session_23(D), len_33, "src/switch_core_media.c", &__func__, 7169);
  # DEBUG new_sdp => new_sdp_56
  D.41234_57 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
  D.41241_58 = (int) D.41234_57;
  switch_snprintf (&port_buf, 25, "%u", D.41241_58);
  D.41210_59 = smh_24->mparams;
  p_60 = D.41210_59->local_sdp_str;
  # DEBUG p => p_60
  # DEBUG q => new_sdp_56
  D.41242_62 = strlen (p_60);
  pe_63 = p_60 + D.41242_62;
  # DEBUG pe => pe_63
  D.41243_64 = len_33 + -1;
  qe_65 = new_sdp_56 + D.41243_64;
  # DEBUG qe => qe_65
  goto <bb 92>;
  # SUCC: 92 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:1134
  # PRED: 93 [98.0%]  (true,exec)
  if (p_5 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 24>;
  # SUCC: 94 [2.0%]  (true,exec) 24 [98.0%]  (false,exec)

  # BLOCK 24 freq:1111
  # PRED: 23 [98.0%]  (false,exec)
  if (q_7 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 25>;
  # SUCC: 94 [2.0%]  (true,exec) 25 [98.0%]  (false,exec)

  # BLOCK 25 freq:1089
  # PRED: 24 [98.0%]  (false,exec)
  D.41231_69 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
  if (D.41231_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 39>;
  # SUCC: 26 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

  # BLOCK 26 freq:926
  # PRED: 25 [85.0%]  (true,exec)
  D.41251_70 = strncmp ("c=IN IP", p_5, 7);
  if (D.41251_70 == 0)
    goto <bb 27>;
  else
    goto <bb 39>;
  # SUCC: 27 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

  # BLOCK 27 freq:268
  # PRED: 26 [29.0%]  (true,exec)
  __builtin_strncpy (q_7, p_5, 7);
  # DEBUG p => p_5 + 7
  q_72 = q_7 + 7;
  # DEBUG q => q_72
  D.41254_73 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41255_74 = __builtin_strchr (D.41254_73, 58);
  if (D.41255_74 != 0B)
    goto <bb 29>;
  else
    goto <bb 28>;
  # SUCC: 29 [85.0%]  (true,exec) 28 [15.0%]  (false,exec)

  # BLOCK 28 freq:40
  # PRED: 27 [15.0%]  (false,exec)
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:268
  # PRED: 27 [85.0%]  (true,exec) 28 [100.0%]  (fallthru,exec)
  # iftmp.16_17 = PHI <"6 "(27), "4 "(28)>
  __builtin_memcpy (q_72, iftmp.16_17, 2);
  p_77 = &MEM[(void *)p_5 + 9B];
  # DEBUG p => p_77
  q_78 = &MEM[(void *)q_7 + 9B];
  # DEBUG q => q_78
  D.41254_80 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41259_81 = strlen (D.41254_80);
  __builtin_strncpy (q_78, D.41254_80, D.41259_81);
  D.41254_82 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41260_83 = strlen (D.41254_82);
  q_84 = q_78 + D.41260_83;
  # DEBUG q => q_84
  goto <bb 32>;
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:3662
  # PRED: 34 [50.0%]  (true,exec) 35 [28.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [97.8%]  (true,exec)
  if (p_1 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 31>;
  # SUCC: 94 [2.2%]  (true,exec) 31 [97.8%]  (false,exec)

  # BLOCK 31 freq:3579
  # PRED: 30 [97.8%]  (false,exec)
  p_97 = p_1 + 1;
  # DEBUG p => p_97
  # SUCC: 32 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 32 freq:3848
  # PRED: 29 [100.0%]  (fallthru,exec) 31 [100.0%]  (fallthru,dfs_back,exec)
  # p_1 = PHI <p_77(29), p_97(31)>
  # DEBUG p => p_1
  if (p_1 != 0B)
    goto <bb 33>;
  else
    goto <bb 38>;
  # SUCC: 33 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

  # BLOCK 33 freq:3761
  # PRED: 32 [97.8%]  (true,exec)
  D.41264_85 = *p_1;
  if (D.41264_85 != 0)
    goto <bb 34>;
  else
    goto <bb 38>;
  # SUCC: 34 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

  # BLOCK 34 freq:3677
  # PRED: 33 [97.8%]  (true,exec)
  D.41266_86 = *p_1;
  D.41267_87 = D.41266_86 + 208;
  D.41268_88 = D.41267_87 <= 9;
  D.41269_89 = D.41266_86 == 46;
  D.41270_90 = D.41268_88 || D.41269_89;
  if (D.41270_90 != 0)
    goto <bb 30>;
  else
    goto <bb 35>;
  # SUCC: 30 [50.0%]  (true,exec) 35 [50.0%]  (false,exec)

  # BLOCK 35 freq:1838
  # PRED: 34 [50.0%]  (false,exec)
  D.41264_91 = *p_1;
  if (D.41264_91 == 58)
    goto <bb 30>;
  else
    goto <bb 36>;
  # SUCC: 30 [28.0%]  (true,exec) 36 [72.0%]  (false,exec)

  # BLOCK 36 freq:1324
  # PRED: 35 [72.0%]  (false,exec)
  D.41264_92 = *p_1;
  D.41273_93 = D.41264_92 + 191;
  if (D.41273_93 <= 5)
    goto <bb 30>;
  else
    goto <bb 37>;
  # SUCC: 30 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 37 freq:662
  # PRED: 36 [50.0%]  (false,exec)
  D.41264_94 = *p_1;
  D.41275_95 = D.41264_94 + 159;
  if (D.41275_95 <= 5)
    goto <bb 30>;
  else
    goto <bb 38>;
  # SUCC: 30 [97.8%]  (true,exec) 38 [2.2%]  (false,exec)

  # BLOCK 38 freq:186
  # PRED: 32 [2.2%]  (false,exec) 33 [2.2%]  (false,exec) 37 [2.2%]  (false,exec)
  has_ip_98 = has_ip_14 + 1;
  # DEBUG has_ip => has_ip_98
  goto <bb 53>;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:821
  # PRED: 25 [15.0%]  (false,exec) 26 [71.0%]  (false,exec)
  D.41276_99 = strncmp ("o=", p_5, 2);
  if (D.41276_99 == 0)
    goto <bb 40>;
  else
    goto <bb 49>;
  # SUCC: 40 [50.0%]  (true,exec) 49 [50.0%]  (false,exec)

  # BLOCK 40 freq:410
  # PRED: 39 [50.0%]  (true,exec)
  oe_100 = __builtin_strchr (p_5, 10);
  # DEBUG oe => oe_100
  if (oe_100 != 0B)
    goto <bb 41>;
  else
    goto <bb 53>;
  # SUCC: 41 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

  # BLOCK 41 freq:349
  # PRED: 40 [85.0%]  (true,exec)
  # DEBUG family => "IP4"
  o_line = "";
  if (oe_100 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 42>;
  # SUCC: 94 [2.0%]  (true,exec) 42 [98.0%]  (false,exec)

  # BLOCK 42 freq:342
  # PRED: 41 [98.0%]  (false,exec)
  oe.17_103 = (int) oe_100;
  p.18_104 = (int) p_5;
  D.41285_105 = oe.17_103 - p.18_104;
  len_106 = (switch_size_t) D.41285_105;
  # DEBUG len => len_106
  p_107 = p_5 + len_106;
  # DEBUG p => p_107
  D.41210_108 = smh_24->mparams;
  D.41287_109 = D.41210_108->sipip;
  D.41288_110 = __builtin_strchr (D.41287_109, 58);
  if (D.41288_110 != 0B)
    goto <bb 44>;
  else
    goto <bb 43>;
  # SUCC: 44 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 43 freq:51
  # PRED: 42 [15.0%]  (false,exec)
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:342
  # PRED: 42 [85.0%]  (true,exec) 43 [100.0%]  (fallthru,exec)
  # family_18 = PHI <"IP6"(42), "IP4"(43)>
  # DEBUG family => family_18
  D.41292_114 = smh_24->owner_id;
  if (D.41292_114 == 0)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [29.0%]  (true,exec) 46 [71.0%]  (false,exec)

  # BLOCK 45 freq:99
  # PRED: 44 [29.0%]  (true,exec)
  D.41295_115 = switch_epoch_time_now (0B);
  D.41296_116 = (unsigned int) D.41295_115;
  D.41297_117 = D.41296_116 * 31821;
  D.41298_118 = D.41297_117 + 13849;
  smh_24->owner_id = D.41298_118;
  # SUCC: 46 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:342
  # PRED: 44 [71.0%]  (false,exec) 45 [100.0%]  (fallthru,exec)
  D.41299_119 = smh_24->session_id;
  if (D.41299_119 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

  # BLOCK 47 freq:171
  # PRED: 46 [50.0%]  (true,exec)
  D.41292_120 = smh_24->owner_id;
  smh_24->session_id = D.41292_120;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:342
  # PRED: 46 [50.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  D.41299_121 = smh_24->session_id;
  D.41302_122 = D.41299_121 + 1;
  smh_24->session_id = D.41302_122;
  D.41210_124 = smh_24->mparams;
  D.41304_125 = D.41210_124->sdp_username;
  D.41292_126 = smh_24->owner_id;
  D.41299_127 = smh_24->session_id;
  D.41210_128 = smh_24->mparams;
  D.41287_129 = D.41210_128->sipip;
  snprintf (&o_line, 1024, &"o=%s %010u %010u IN %s %s\n"[0], D.41304_125, D.41292_126, D.41299_127, family_18, D.41287_129);
  D.41305_130 = strlen (&o_line);
  __builtin_strncpy (q_7, &o_line, D.41305_130);
  D.41306_131 = strlen (&o_line);
  D.41307_132 = D.41306_131 + -1;
  q_133 = q_7 + D.41307_132;
  # DEBUG q => q_133
  goto <bb 53>;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:410
  # PRED: 39 [50.0%]  (false,exec)
  D.41309_134 = strncmp ("s=", p_5, 2);
  if (D.41309_134 == 0)
    goto <bb 50>;
  else
    goto <bb 54>;
  # SUCC: 50 [50.0%]  (true,exec) 54 [50.0%]  (false,exec)

  # BLOCK 50 freq:205
  # PRED: 49 [50.0%]  (true,exec)
  se_135 = __builtin_strchr (p_5, 10);
  # DEBUG se => se_135
  if (se_135 != 0B)
    goto <bb 51>;
  else
    goto <bb 53>;
  # SUCC: 51 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

  # BLOCK 51 freq:174
  # PRED: 50 [85.0%]  (true,exec)
  s_line = "";
  if (se_135 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 52>;
  # SUCC: 94 [2.0%]  (true,exec) 52 [98.0%]  (false,exec)

  # BLOCK 52 freq:171
  # PRED: 51 [98.0%]  (false,exec)
  se.20_137 = (int) se_135;
  p.18_138 = (int) p_5;
  D.41317_139 = se.20_137 - p.18_138;
  len_140 = (switch_size_t) D.41317_139;
  # DEBUG len => len_140
  p_141 = p_5 + len_140;
  # DEBUG p => p_141
  D.41210_143 = smh_24->mparams;
  D.41304_144 = D.41210_143->sdp_username;
  snprintf (&s_line, 1024, &"s=%s\n"[0], D.41304_144);
  D.41319_145 = strlen (&s_line);
  __builtin_strncpy (q_7, &s_line, D.41319_145);
  D.41320_146 = strlen (&s_line);
  D.41321_147 = D.41320_146 + -1;
  q_148 = q_7 + D.41321_147;
  # DEBUG q => q_148
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:961
  # PRED: 48 [100.0%]  (fallthru,exec) 52 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 50 [15.0%]  (false,exec) 40 [15.0%]  (false,exec) 82 [100.0%]  (fallthru,exec) 68 [28.0%]  (false,exec) 67 [50.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
  # p_204 = PHI <p_107(48), p_141(52), p_1(38), p_5(50), p_5(40), p_3(82), p_5(68), p_5(67), p_2(66)>
  # q_203 = PHI <q_133(48), q_148(52), q_84(38), q_7(50), q_7(40), q_188(82), q_7(68), q_7(67), q_159(66)>
  # has_video_199 = PHI <has_video_9(48), has_video_9(52), has_video_9(38), has_video_9(50), has_video_9(40), has_video_195(82), has_video_9(68), has_video_9(67), has_video_9(66)>
  # has_audio_198 = PHI <has_audio_11(48), has_audio_11(52), has_audio_11(38), has_audio_11(50), has_audio_11(40), has_audio_11(82), has_audio_11(68), has_audio_11(67), has_audio_166(66)>
  # has_ip_193 = PHI <has_ip_14(48), has_ip_14(52), has_ip_98(38), has_ip_14(50), has_ip_14(40), has_ip_14(82), has_ip_14(68), has_ip_14(67), has_ip_14(66)>
  goto <bb 86>;
  # SUCC: 86 [100.0%]  (fallthru)

  # BLOCK 54 freq:205
  # PRED: 49 [50.0%]  (false,exec)
  D.41326_149 = strncmp ("m=audio ", p_5, 8);
  if (D.41326_149 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 55 freq:103
  # PRED: 54 [50.0%]  (false,exec)
  D.41328_150 = strncmp ("m=image ", p_5, 8);
  if (D.41328_150 == 0)
    goto <bb 56>;
  else
    goto <bb 67>;
  # SUCC: 56 [50.0%]  (true,exec) 67 [50.0%]  (false,exec)

  # BLOCK 56 freq:154
  # PRED: 54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
  D.41330_152 = MEM[(char *)p_5 + 8B];
  if (D.41330_152 != 48)
    goto <bb 57>;
  else
    goto <bb 67>;
  # SUCC: 57 [51.2%]  (true,exec) 67 [48.8%]  (false,exec)

  # BLOCK 57 freq:79
  # PRED: 56 [51.2%]  (true,exec)
  __builtin_strncpy (q_7, p_5, 8);
  p_153 = p_5 + 8;
  # DEBUG p => p_153
  if (p_153 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 58>;
  # SUCC: 94 [2.0%]  (true,exec) 58 [98.0%]  (false,exec)

  # BLOCK 58 freq:77
  # PRED: 57 [98.0%]  (false,exec)
  q_155 = q_7 + 8;
  # DEBUG q => q_155
  if (q_155 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 59>;
  # SUCC: 94 [2.0%]  (true,exec) 59 [98.0%]  (false,exec)

  # BLOCK 59 freq:76
  # PRED: 58 [98.0%]  (false,exec)
  D.41336_157 = strlen (&port_buf);
  __builtin_strncpy (q_155, &port_buf, D.41336_157);
  D.41337_158 = strlen (&port_buf);
  q_159 = q_155 + D.41337_158;
  # DEBUG q => q_159
  if (q_159 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 60>;
  # SUCC: 94 [2.0%]  (true,exec) 60 [98.0%]  (false,exec)

  # BLOCK 60 freq:74
  # PRED: 59 [98.0%]  (false,exec)
  # p_185 = PHI <p_153(59)>
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru)

  # BLOCK 61 freq:797
  # PRED: 65 [97.8%]  (true,exec)
  if (p_2 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 62>;
  # SUCC: 94 [2.2%]  (true,exec) 62 [97.8%]  (false,exec)

  # BLOCK 62 freq:779
  # PRED: 61 [97.8%]  (false,exec)
  p_165 = p_2 + 1;
  # DEBUG p => p_165
  # SUCC: 63 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 63 freq:853
  # PRED: 60 [100.0%]  (fallthru) 62 [100.0%]  (fallthru,dfs_back,exec)
  # p_2 = PHI <p_185(60), p_165(62)>
  # DEBUG p => p_2
  if (p_2 != 0B)
    goto <bb 64>;
  else
    goto <bb 66>;
  # SUCC: 64 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

  # BLOCK 64 freq:834
  # PRED: 63 [97.8%]  (true,exec)
  D.41264_161 = *p_2;
  if (D.41264_161 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;
  # SUCC: 65 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

  # BLOCK 65 freq:815
  # PRED: 64 [97.8%]  (true,exec)
  D.41264_162 = *p_2;
  D.41344_163 = D.41264_162 + 208;
  if (D.41344_163 <= 9)
    goto <bb 61>;
  else
    goto <bb 66>;
  # SUCC: 61 [97.8%]  (true,exec) 66 [2.2%]  (false,exec)

  # BLOCK 66 freq:56
  # PRED: 63 [2.2%]  (false,exec) 64 [2.2%]  (false,exec) 65 [2.2%]  (false,exec)
  has_audio_166 = has_audio_11 + 1;
  # DEBUG has_audio => has_audio_166
  goto <bb 53>;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:126
  # PRED: 55 [50.0%]  (false,exec) 56 [48.8%]  (false,exec)
  D.41345_167 = strncmp ("m=video ", p_5, 8);
  if (D.41345_167 == 0)
    goto <bb 68>;
  else
    goto <bb 53>;
  # SUCC: 68 [50.0%]  (true,exec) 53 [50.0%]  (false,exec)

  # BLOCK 68 freq:63
  # PRED: 67 [50.0%]  (true,exec)
  D.41330_169 = MEM[(char *)p_5 + 8B];
  if (D.41330_169 != 48)
    goto <bb 69>;
  else
    goto <bb 53>;
  # SUCC: 69 [72.0%]  (true,exec) 53 [28.0%]  (false,exec)

  # BLOCK 69 freq:45
  # PRED: 68 [72.0%]  (true,exec)
  if (has_video_9 == 0)
    goto <bb 70>;
  else
    goto <bb 73>;
  # SUCC: 70 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

  # BLOCK 70 freq:13
  # PRED: 69 [29.0%]  (true,exec)
  switch_core_media_choose_port (session_23(D), 1, 1);
  D.41352_170 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_170->rm_encoding = "PROXY-VID";
  D.41352_171 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_171->rm_rate = 90000;
  D.41352_172 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_172->adv_rm_rate = 90000;
  D.41352_173 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_173->codec_ms = 0;
  D.41353_174 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].adv_sdp_port;
  D.41354_175 = (int) D.41353_174;
  switch_snprintf (&vport_buf, 25, "%u", D.41354_175);
  D.41222_176 = session_23(D)->channel;
  D.41355_177 = switch_channel_test_ready (D.41222_176, 1, 1);
  if (D.41355_177 != 0)
    goto <bb 71>;
  else
    goto <bb 73>;
  # SUCC: 71 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

  # BLOCK 71 freq:4
  # PRED: 70 [29.0%]  (true,exec)
  D.41358_178 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].rtp_session;
  D.41359_179 = switch_rtp_ready (D.41358_178);
  if (D.41359_179 == 0)
    goto <bb 72>;
  else
    goto <bb 73>;
  # SUCC: 72 [29.0%]  (true,exec) 73 [71.0%]  (false,exec)

  # BLOCK 72 freq:1
  # PRED: 71 [29.0%]  (true,exec)
  D.41222_180 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_180, 98, 1);
  D.41222_181 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_181, 103, 1);
  switch_core_media_activate_rtp (session_23(D));
  # SUCC: 73 [100.0%]  (fallthru,exec)

  # BLOCK 73 freq:45
  # PRED: 69 [71.0%]  (false,exec) 70 [71.0%]  (false,exec) 71 [71.0%]  (false,exec) 72 [100.0%]  (fallthru,exec)
  __builtin_strncpy (q_7, p_5, 8);
  p_182 = p_5 + 8;
  # DEBUG p => p_182
  if (p_182 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 74>;
  # SUCC: 94 [2.0%]  (true,exec) 74 [98.0%]  (false,exec)

  # BLOCK 74 freq:45
  # PRED: 73 [98.0%]  (false,exec)
  q_184 = q_7 + 8;
  # DEBUG q => q_184
  if (q_184 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 75>;
  # SUCC: 94 [2.0%]  (true,exec) 75 [98.0%]  (false,exec)

  # BLOCK 75 freq:44
  # PRED: 74 [98.0%]  (false,exec)
  D.41366_186 = strlen (&vport_buf);
  __builtin_strncpy (q_184, &vport_buf, D.41366_186);
  D.41367_187 = strlen (&vport_buf);
  q_188 = q_184 + D.41367_187;
  # DEBUG q => q_188
  if (q_188 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 76>;
  # SUCC: 94 [2.0%]  (true,exec) 76 [98.0%]  (false,exec)

  # BLOCK 76 freq:43
  # PRED: 75 [98.0%]  (false,exec)
  # p_183 = PHI <p_182(75)>
  goto <bb 79>;
  # SUCC: 79 [100.0%]  (fallthru)

  # BLOCK 77 freq:460
  # PRED: 81 [97.8%]  (true,exec)
  if (p_3 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 78>;
  # SUCC: 94 [2.2%]  (true,exec) 78 [97.8%]  (false,exec)

  # BLOCK 78 freq:449
  # PRED: 77 [97.8%]  (false,exec)
  p_194 = p_3 + 1;
  # DEBUG p => p_194
  # SUCC: 79 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 79 freq:492
  # PRED: 76 [100.0%]  (fallthru) 78 [100.0%]  (fallthru,dfs_back,exec)
  # p_3 = PHI <p_183(76), p_194(78)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 80>;
  else
    goto <bb 82>;
  # SUCC: 80 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

  # BLOCK 80 freq:481
  # PRED: 79 [97.8%]  (true,exec)
  D.41264_190 = *p_3;
  if (D.41264_190 != 0)
    goto <bb 81>;
  else
    goto <bb 82>;
  # SUCC: 81 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

  # BLOCK 81 freq:470
  # PRED: 80 [97.8%]  (true,exec)
  D.41264_191 = *p_3;
  D.41344_192 = D.41264_191 + 208;
  if (D.41344_192 <= 9)
    goto <bb 77>;
  else
    goto <bb 82>;
  # SUCC: 77 [97.8%]  (true,exec) 82 [2.2%]  (false,exec)

  # BLOCK 82 freq:32
  # PRED: 79 [2.2%]  (false,exec) 80 [2.2%]  (false,exec) 81 [2.2%]  (false,exec)
  has_video_195 = has_video_9 + 1;
  # DEBUG has_video => has_video_195
  goto <bb 53>;
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 83 freq:9412
  # PRED: 88 [98.0%]  (true,exec)
  if (p_4 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 84>;
  # SUCC: 94 [2.0%]  (true,exec) 84 [98.0%]  (false,exec)

  # BLOCK 84 freq:9224
  # PRED: 83 [98.0%]  (false,exec)
  if (q_6 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 85>;
  # SUCC: 94 [2.0%]  (true,exec) 85 [98.0%]  (false,exec)

  # BLOCK 85 freq:9039
  # PRED: 84 [98.0%]  (false,exec)
  D.41264_200 = *p_4;
  *q_6 = D.41264_200;
  q_201 = q_6 + 1;
  # DEBUG q => q_201
  p_202 = p_4 + 1;
  # DEBUG p => p_202
  # SUCC: 86 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 86 freq:10000
  # PRED: 53 [100.0%]  (fallthru) 85 [100.0%]  (fallthru,dfs_back,exec)
  # p_4 = PHI <p_204(53), p_202(85)>
  # q_6 = PHI <q_203(53), q_201(85)>
  # has_video_8 = PHI <has_video_199(53), has_video_8(85)>
  # has_audio_10 = PHI <has_audio_198(53), has_audio_10(85)>
  # has_ip_13 = PHI <has_ip_193(53), has_ip_13(85)>
  # DEBUG has_ip => has_ip_13
  # DEBUG has_audio => has_audio_10
  # DEBUG has_video => has_video_8
  # DEBUG q => q_6
  # DEBUG p => p_4
  if (p_4 != 0B)
    goto <bb 87>;
  else
    goto <bb 89>;
  # SUCC: 87 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

  # BLOCK 87 freq:9800
  # PRED: 86 [98.0%]  (true,exec)
  D.41264_196 = *p_4;
  if (D.41264_196 != 0)
    goto <bb 88>;
  else
    goto <bb 89>;
  # SUCC: 88 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

  # BLOCK 88 freq:9604
  # PRED: 87 [98.0%]  (true,exec)
  D.41264_197 = *p_4;
  if (D.41264_197 != 10)
    goto <bb 83>;
  else
    goto <bb 89>;
  # SUCC: 83 [98.0%]  (true,exec) 89 [2.0%]  (false,exec)

  # BLOCK 89 freq:588
  # PRED: 86 [2.0%]  (false,exec) 87 [2.0%]  (false,exec) 88 [2.0%]  (false,exec)
  if (p_4 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 90>;
  # SUCC: 94 [2.0%]  (true,exec) 90 [98.0%]  (false,exec)

  # BLOCK 90 freq:576
  # PRED: 89 [98.0%]  (false,exec)
  if (q_6 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 91>;
  # SUCC: 94 [2.0%]  (true,exec) 91 [98.0%]  (false,exec)

  # BLOCK 91 freq:565
  # PRED: 90 [98.0%]  (false,exec)
  D.41264_205 = *p_4;
  *q_6 = D.41264_205;
  q_206 = q_6 + 1;
  # DEBUG q => q_206
  p_207 = p_4 + 1;
  # DEBUG p => p_207
  # SUCC: 92 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 92 freq:1181
  # PRED: 22 [100.0%]  (fallthru,exec) 91 [100.0%]  (fallthru,dfs_back,exec)
  # p_5 = PHI <p_60(22), p_207(91)>
  # q_7 = PHI <new_sdp_56(22), q_206(91)>
  # has_video_9 = PHI <0(22), has_video_8(91)>
  # has_audio_11 = PHI <0(22), has_audio_10(91)>
  # has_ip_14 = PHI <0(22), has_ip_13(91)>
  # DEBUG has_ip => has_ip_14
  # DEBUG has_audio => has_audio_11
  # DEBUG has_video => has_video_9
  # DEBUG q => q_7
  # DEBUG p => p_5
  if (p_5 != 0B)
    goto <bb 93>;
  else
    goto <bb 94> (end);
  # SUCC: 93 [98.0%]  (true,exec) 94 [2.0%]  (false,exec)

  # BLOCK 93 freq:1157
  # PRED: 92 [98.0%]  (true,exec)
  D.41264_66 = *p_5;
  if (D.41264_66 != 0)
    goto <bb 23>;
  else
    goto <bb 94> (end);
  # SUCC: 23 [98.0%]  (true,exec) 94 [2.0%]  (false,exec)

  # BLOCK 94 freq:616
  # PRED: 23 [2.0%]  (true,exec) 24 [2.0%]  (true,exec) 30 [2.2%]  (true,exec) 41 [2.0%]  (true,exec) 51 [2.0%]  (true,exec) 57 [2.0%]  (true,exec) 58 [2.0%]  (true,exec) 59 [2.0%]  (true,exec) 61 [2.2%]  (true,exec) 73 [2.0%]  (true,exec) 74 [2.0%]  (true,exec) 75 [2.0%]  (true,exec) 77 [2.2%]  (true,exec) 83 [2.0%]  (true,exec) 84 [2.0%]  (true,exec) 89 [2.0%]  (true,exec) 90 [2.0%]  (true,exec) 92 [2.0%]  (false,exec) 93 [2.0%]  (false,exec)
  # has_audio_12 = PHI <has_audio_11(23), has_audio_11(24), has_audio_11(30), has_audio_11(41), has_audio_11(51), has_audio_11(57), has_audio_11(58), has_audio_11(59), has_audio_11(61), has_audio_11(73), has_audio_11(74), has_audio_11(75), has_audio_11(77), has_audio_10(83), has_audio_10(84), has_audio_10(89), has_audio_10(90), has_audio_11(92), has_audio_11(93)>
  # has_ip_15 = PHI <has_ip_14(23), has_ip_14(24), has_ip_14(30), has_ip_14(41), has_ip_14(51), has_ip_14(57), has_ip_14(58), has_ip_14(59), has_ip_14(61), has_ip_14(73), has_ip_14(74), has_ip_14(75), has_ip_14(77), has_ip_13(83), has_ip_13(84), has_ip_13(89), has_ip_13(90), has_ip_14(92), has_ip_14(93)>
  # bad_16 = PHI <1(23), 2(24), 3(30), 5(41), 5(51), 4(57), 5(58), 6(59), 7(61), 8(73), 9(74), 10(75), 11(77), 12(83), 13(84), 14(89), 15(90), 0(92), 0(93)>
end:
  # DEBUG bad => bad_16
  # DEBUG has_ip => has_ip_15
  # DEBUG has_audio => has_audio_12
  if (bad_16 != 0)
    goto <bb 101>;
  else
    goto <bb 95>;
  # SUCC: 101 [61.0%]  (true,exec) 95 [39.0%]  (false,exec)

  # BLOCK 95 freq:240
  # PRED: 94 [39.0%]  (false,exec)
  D.41222_208 = session_23(D)->channel;
  D.41389_209 = switch_channel_check_signal (D.41222_208, 1);
  if (D.41389_209 != 0)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [39.0%]  (true,exec) 96 [61.0%]  (false,exec)

  # BLOCK 96 freq:146
  # PRED: 95 [61.0%]  (false,exec)
  D.41222_210 = session_23(D)->channel;
  D.41391_211 = switch_channel_get_state (D.41222_210);
  if (D.41391_211 > 9)
    goto <bb 97>;
  else
    goto <bb 98>;
  # SUCC: 97 [39.0%]  (true,exec) 98 [61.0%]  (false,exec)

  # BLOCK 97 freq:151
  # PRED: 95 [39.0%]  (true,exec) 96 [39.0%]  (true,exec)
  D.41222_221 = session_23(D)->channel;
  D.41392_222 = switch_channel_get_name (D.41222_221);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7394, session_23(D), 7, "%s too late.\n", D.41392_222);
  goto <bb 101>;
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 98 freq:89
  # PRED: 96 [61.0%]  (false,exec)
  D.41393_212 = has_ip_15 | has_audio_12;
  if (D.41393_212 == 0)
    goto <bb 99>;
  else
    goto <bb 100>;
  # SUCC: 99 [39.0%]  (true,exec) 100 [61.0%]  (false,exec)

  # BLOCK 99 freq:35
  # PRED: 98 [39.0%]  (true,exec)
  D.41222_213 = session_23(D)->channel;
  D.41396_214 = switch_channel_get_name (D.41222_213);
  D.41210_215 = smh_24->mparams;
  D.41211_216 = D.41210_215->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7400, session_23(D), 7, "%s SDP has no audio in it.\n%s\n", D.41396_214, D.41211_216);
  goto <bb 101>;
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 100 freq:55
  # PRED: 98 [61.0%]  (false,exec)
  D.41222_217 = session_23(D)->channel;
  D.41397_218 = switch_channel_get_name (D.41222_217);
  D.41210_219 = smh_24->mparams;
  D.41211_220 = D.41210_219->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7406, session_23(D), 7, "%s Patched SDP\n---\n%s\n+++\n%s\n", D.41397_218, D.41211_220, new_sdp_56);
  switch_core_media_set_local_sdp (session_23(D), new_sdp_56, 0);
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 101 freq:1633
  # PRED: 4 [10.1%]  (true,exec) 8 [39.0%]  (true,exec) 13 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 94 [61.0%]  (true,exec) 97 [100.0%]  (fallthru,exec) 99 [100.0%]  (fallthru,exec) 100 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_start_udptl (switch_core_media_start_udptl)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 22 5 }
;; 5 succs { 22 6 }
;; 6 succs { 22 7 }
;; 7 succs { 8 22 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 22 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 22 }
;; 18 succs { 19 22 }
;; 19 succs { 21 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 8
  DS theory heuristics: 4.4%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
Predictions for bb 9
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 12
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
Predictions for bb 13
  DS theory heuristics: 20.7%
  first match heuristics (ignored): 29.0%
  combined heuristics: 20.7%
  early return (on trees) heuristics: 39.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 18
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 19
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 20
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 61.0%
  combined heuristics: 61.0%
  early return (on trees) heuristics: 61.0%
1 edges in bb 21 predicted to even probabilities
1 edges in bb 22 predicted to even probabilities

;; Function switch_core_media_start_udptl

;; 
23 basic blocks, 36 edges, last basic block 23.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  22 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  22 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (false,exec)
Successors:  22 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (false,exec)
Successors:  8 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [39.0%]  (true,exec)
Successors:  10 [4.4%]  (true,exec) 9 [95.6%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [95.6%]  (false,exec)
Successors:  10 [10.1%]  (true,exec) 11 [89.9%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [4.4%]  (true,exec) 9 [10.1%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [89.9%]  (false,exec)
Successors:  12 [71.0%]  (true,exec) 15 [29.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [71.0%]  (true,exec)
Successors:  13 [28.0%]  (true,exec) 15 [72.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [28.0%]  (true,exec)
Successors:  14 [20.7%]  (true,exec) 15 [79.3%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [20.7%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [29.0%]  (false,exec) 12 [72.0%]  (false,exec) 13 [79.3%]  (false,exec)
Successors:  16 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [39.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [61.0%]  (false,exec)
Successors:  18 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [39.0%]  (true,exec)
Successors:  19 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [39.0%]  (true,exec)
Successors:  21 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (false,exec)
Successors:  21 [61.0%]  (true,exec) 22 [39.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [15.0%]  (true,exec) 20 [61.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 7 [61.0%]  (false,exec) 10 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 17 [61.0%]  (false,exec) 18 [61.0%]  (false,exec) 20 [39.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_start_udptl (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options)
{
  const char * val;
  const char * err;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[30] = "switch_core_media_start_udptl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_start_udptl";
  struct switch_media_handle_t * smh;
  int D.41204;
  uint32_t D.41200;
  int32_t D.41197;
  const char * err.15;
  switch_status_t D.41190;
  int D.41189;
  int D.39841;
  uint16_t D.41184;
  _Bool D.41181;
  _Bool D.41180;
  _Bool D.41179;
  const char * D.41178;
  uint8_t D.41172;
  struct switch_rtp_t * D.41171;
  switch_channel_state_t D.41170;
  int D.41168;
  struct switch_channel_t * D.41167;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7419, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;
  # SUCC: 22 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.41167_3 = session_1(D)->channel;
  D.41168_4 = switch_channel_check_signal (D.41167_3, 1);
  if (D.41168_4 != 0)
    goto <bb 22>;
  else
    goto <bb 6>;
  # SUCC: 22 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (false,exec)
  D.41167_5 = session_1(D)->channel;
  D.41170_6 = switch_channel_get_state (D.41167_5);
  if (D.41170_6 > 9)
    goto <bb 22>;
  else
    goto <bb 7>;
  # SUCC: 22 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 7 freq:1190
  # PRED: 6 [39.0%]  (false,exec)
  # DEBUG D#37 => &smh_2->engines
  # DEBUG a_engine => D#37
  D.41171_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  D.41172_9 = switch_rtp_ready (D.41171_8);
  if (D.41172_9 != 0)
    goto <bb 8>;
  else
    goto <bb 22>;
  # SUCC: 8 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

  # BLOCK 8 freq:464
  # PRED: 7 [39.0%]  (true,exec)
  D.41171_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  remote_host_11 = switch_rtp_get_remote_host (D.41171_10);
  # DEBUG remote_host => remote_host_11
  D.41171_12 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  remote_port_13 = switch_rtp_get_remote_port (D.41171_12);
  # DEBUG remote_port => remote_port_13
  D.41167_14 = session_1(D)->channel;
  switch_channel_clear_flag (D.41167_14, 99);
  D.41171_15 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_udptl_mode (D.41171_15);
  if (t38_options_16(D) == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;
  # SUCC: 10 [4.4%]  (true,exec) 9 [95.6%]  (false,exec)

  # BLOCK 9 freq:443
  # PRED: 8 [95.6%]  (false,exec)
  D.41178_17 = t38_options_16(D)->remote_ip;
  if (D.41178_17 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [10.1%]  (true,exec) 11 [89.9%]  (false,exec)

  # BLOCK 10 freq:65
  # PRED: 8 [4.4%]  (true,exec) 9 [10.1%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7441, session_1(D), 7, "No remote address\n");
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:398
  # PRED: 9 [89.9%]  (false,exec)
  D.41179_18 = remote_host_11 != 0B;
  D.41180_19 = remote_port_13 != 0;
  D.41181_20 = D.41179_18 && D.41180_19;
  if (D.41181_20 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [71.0%]  (true,exec) 15 [29.0%]  (false,exec)

  # BLOCK 12 freq:283
  # PRED: 11 [71.0%]  (true,exec)
  D.41184_21 = t38_options_16(D)->remote_port;
  if (D.41184_21 == remote_port_13)
    goto <bb 13>;
  else
    goto <bb 15>;
  # SUCC: 13 [28.0%]  (true,exec) 15 [72.0%]  (false,exec)

  # BLOCK 13 freq:79
  # PRED: 12 [28.0%]  (true,exec)
  D.41178_22 = t38_options_16(D)->remote_ip;
  D.39841_23 = __builtin_strcmp (remote_host_11, D.41178_22);
  if (D.39841_23 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [20.7%]  (true,exec) 15 [79.3%]  (false,exec)

  # BLOCK 14 freq:16
  # PRED: 13 [20.7%]  (true,exec)
  D.41178_24 = t38_options_16(D)->remote_ip;
  D.41184_25 = t38_options_16(D)->remote_port;
  D.41189_26 = (int) D.41184_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7446, session_1(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.41178_24, D.41189_26);
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:382
  # PRED: 11 [29.0%]  (false,exec) 12 [72.0%]  (false,exec) 13 [79.3%]  (false,exec)
  D.41171_27 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  D.41178_28 = t38_options_16(D)->remote_ip;
  D.41184_29 = t38_options_16(D)->remote_port;
  D.41190_30 = switch_rtp_set_remote_address (D.41171_27, D.41178_28, D.41184_29, 0, 1, &err);
  if (D.41190_30 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 16 freq:149
  # PRED: 15 [39.0%]  (true,exec)
  err.15_31 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7453, session_1(D), 3, "IMAGE UDPTL REPORTS ERROR: [%s]\n", err.15_31);
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:233
  # PRED: 15 [61.0%]  (false,exec)
  D.41178_32 = t38_options_16(D)->remote_ip;
  D.41184_33 = t38_options_16(D)->remote_port;
  D.41189_34 = (int) D.41184_33;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7455, session_1(D), 7, "IMAGE UDPTL CHANGING DEST TO: [%s:%d]\n", D.41178_32, D.41189_34);
  D.41197_35 = switch_media_handle_test_media_flag (smh_2, 10);
  if (D.41197_35 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;
  # SUCC: 18 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

  # BLOCK 18 freq:91
  # PRED: 17 [39.0%]  (true,exec)
  D.41167_36 = session_1(D)->channel;
  D.41200_37 = switch_channel_test_flag (D.41167_36, 106);
  if (D.41200_37 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;
  # SUCC: 19 [39.0%]  (true,exec) 22 [61.0%]  (false,exec)

  # BLOCK 19 freq:35
  # PRED: 18 [39.0%]  (true,exec)
  D.41167_38 = session_1(D)->channel;
  val_39 = switch_channel_get_variable_dup (D.41167_38, "disable_udptl_auto_adjust", 1, -1);
  # DEBUG val => val_39
  if (val_39 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;
  # SUCC: 21 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

  # BLOCK 20 freq:30
  # PRED: 19 [85.0%]  (false,exec)
  D.41204_40 = switch_true (val_39);
  if (D.41204_40 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [61.0%]  (true,exec) 22 [39.0%]  (false,exec)

  # BLOCK 21 freq:24
  # PRED: 19 [15.0%]  (true,exec) 20 [61.0%]  (true,exec)
  D.41171_41 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_set_flag (D.41171_41, 7);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 7 [61.0%]  (false,exec) 10 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 17 [61.0%]  (false,exec) 18 [61.0%]  (false,exec) 20 [39.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_receive_message (switch_core_media_receive_message)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 128, latch 127
;;  depth 1, outer 0
;;  nodes: 128 127 129
;;
;; Loop 1
;;  header 124, latch 123
;;  depth 1, outer 0
;;  nodes: 124 123 125
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 168 5 }
;; 5 succs { 168 6 }
;; 6 succs { 168 7 }
;; 7 succs { 135 74 99 115 117 10 71 113 48 12 16 8 }
;; 8 succs { 9 135 }
;; 9 succs { 135 }
;; 10 succs { 11 135 }
;; 11 succs { 135 }
;; 12 succs { 13 135 }
;; 13 succs { 14 15 }
;; 14 succs { 135 }
;; 15 succs { 135 }
;; 16 succs { 17 135 }
;; 17 succs { 18 40 }
;; 18 succs { 19 20 }
;; 19 succs { 164 }
;; 20 succs { 21 22 }
;; 21 succs { 164 }
;; 22 succs { 23 31 }
;; 23 succs { 24 30 }
;; 24 succs { 25 28 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 164 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 47 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 46 }
;; 44 succs { 45 135 }
;; 45 succs { 135 }
;; 46 succs { 135 }
;; 47 succs { 135 }
;; 48 succs { 49 51 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 164 }
;; 52 succs { 55 53 }
;; 53 succs { 55 54 }
;; 54 succs { 55 }
;; 55 succs { 56 164 }
;; 56 succs { 59 57 }
;; 57 succs { 59 58 }
;; 58 succs { 59 }
;; 59 succs { 60 164 }
;; 60 succs { 62 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 65 64 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 70 }
;; 67 succs { 68 69 }
;; 68 succs { 164 }
;; 69 succs { 164 }
;; 70 succs { 164 }
;; 71 succs { 72 164 }
;; 72 succs { 73 164 }
;; 73 succs { 164 }
;; 74 succs { 75 164 }
;; 75 succs { 77 76 }
;; 76 succs { 77 80 }
;; 77 succs { 78 80 }
;; 78 succs { 79 80 }
;; 79 succs { 80 }
;; 80 succs { 81 83 }
;; 81 succs { 82 83 }
;; 82 succs { 83 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 96 93 }
;; 93 succs { 94 95 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 98 }
;; 97 succs { 164 }
;; 98 succs { 164 }
;; 99 succs { 100 164 }
;; 100 succs { 101 103 }
;; 101 succs { 102 103 }
;; 102 succs { 103 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 110 }
;; 106 succs { 107 109 }
;; 107 succs { 108 109 }
;; 108 succs { 109 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 164 }
;; 112 succs { 164 }
;; 113 succs { 114 164 }
;; 114 succs { 164 }
;; 115 succs { 116 135 }
;; 116 succs { 135 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 131 }
;; 120 succs { 121 131 }
;; 121 succs { 122 131 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 126 }
;; 125 succs { 123 126 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 130 }
;; 129 succs { 127 130 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 162 138 }
;; 138 succs { 162 139 }
;; 139 succs { 162 160 152 140 }
;; 140 succs { 141 149 }
;; 141 succs { 142 143 }
;; 142 succs { 148 }
;; 143 succs { 144 145 }
;; 144 succs { 145 }
;; 145 succs { 147 146 }
;; 146 succs { 147 }
;; 147 succs { 148 }
;; 148 succs { 149 }
;; 149 succs { 150 162 }
;; 150 succs { 151 162 }
;; 151 succs { 162 }
;; 152 succs { 153 162 }
;; 153 succs { 154 157 }
;; 154 succs { 155 156 }
;; 155 succs { 156 }
;; 156 succs { 162 }
;; 157 succs { 158 162 }
;; 158 succs { 159 162 }
;; 159 succs { 162 }
;; 160 succs { 161 162 }
;; 161 succs { 162 }
;; 162 succs { 163 164 }
;; 163 succs { 164 }
;; 164 succs { 166 165 }
;; 165 succs { 166 167 }
;; 166 succs { 167 }
;; 167 succs { 168 }
;; 168 succs { 1 }
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 128, latch 127
;;  depth 1, outer 0
;;  nodes: 128 127 129
;;
;; Loop 1
;;  header 124, latch 123
;;  depth 1, outer 0
;;  nodes: 124 123 125
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.48249_495)
(get_scalar_evolution 
  (scalar = D.48249_495)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.48249_495)
(get_scalar_evolution 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_493)
(get_scalar_evolution 
  (scalar = pmap_493)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_493 = PHI <pmap_492(126), pmap_494(127)>
)
  (init_cond = pmap_492))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_493 = PHI <pmap_492(126), pmap_494(127)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_493)
(get_scalar_evolution 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.48246_491)
(get_scalar_evolution 
  (scalar = D.48246_491)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.48246_491)
(get_scalar_evolution 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_489)
(get_scalar_evolution 
  (scalar = pmap_489)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_489 = PHI <pmap_488(122), pmap_490(123)>
)
  (init_cond = pmap_488))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_489 = PHI <pmap_488(122), pmap_490(123)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_489)
(get_scalar_evolution 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
12 edges in bb 7 predicted to even probabilities
Predictions for bb 8
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 9 predicted to even probabilities
Predictions for bb 10
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 13
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 14 predicted to even probabilities
1 edges in bb 15 predicted to even probabilities
Predictions for bb 16
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 17
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 18
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 19 predicted to even probabilities
Predictions for bb 20
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 21 predicted to even probabilities
Predictions for bb 22
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 23
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 24
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 25
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 26
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 27 predicted to even probabilities
Predictions for bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 29 predicted to even probabilities
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 32
  DS theory heuristics: 27.0%
  first match heuristics (ignored): 27.0%
  combined heuristics: 27.0%
  opcode values positive (on trees) heuristics: 27.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 35
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 36
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 37 predicted to even probabilities
Predictions for bb 38
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 39 predicted to even probabilities
Predictions for bb 40
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 41
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 44
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 45 predicted to even probabilities
1 edges in bb 46 predicted to even probabilities
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 49
  DS theory heuristics: 28.0%
  first match heuristics (ignored): 28.0%
  combined heuristics: 28.0%
  opcode values nonequal (on trees) heuristics: 28.0%
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 52
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 53
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 54 predicted to even probabilities
Predictions for bb 55
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 56
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 57
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 58 predicted to even probabilities
Predictions for bb 59
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 60
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 61
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 62 predicted to even probabilities
Predictions for bb 63
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 64
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 65 predicted to even probabilities
Predictions for bb 66
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 67
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 68 predicted to even probabilities
1 edges in bb 69 predicted to even probabilities
1 edges in bb 70 predicted to even probabilities
Predictions for bb 71
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 72
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 73 predicted to even probabilities
Predictions for bb 74
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 75
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 76
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 77
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 78
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 79 predicted to even probabilities
Predictions for bb 80
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 81
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 82 predicted to even probabilities
Predictions for bb 83
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 84 predicted to even probabilities
1 edges in bb 85 predicted to even probabilities
Predictions for bb 86
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 87
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 88 predicted to even probabilities
Predictions for bb 89
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 90 predicted to even probabilities
Predictions for bb 91
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
Predictions for bb 92
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 93
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 94 predicted to even probabilities
1 edges in bb 95 predicted to even probabilities
Predictions for bb 96
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 97 predicted to even probabilities
1 edges in bb 98 predicted to even probabilities
Predictions for bb 99
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 100
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 101
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 102 predicted to even probabilities
Predictions for bb 103
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 104 predicted to even probabilities
Predictions for bb 105
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 106
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 107
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 108 predicted to even probabilities
1 edges in bb 109 predicted to even probabilities
Predictions for bb 110
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  call heuristics: 71.0%
  call heuristics: 29.0%
1 edges in bb 111 predicted to even probabilities
1 edges in bb 112 predicted to even probabilities
Predictions for bb 113
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 114 predicted to even probabilities
Predictions for bb 115
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 116 predicted to even probabilities
Predictions for bb 117
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 118 predicted to even probabilities
Predictions for bb 119
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 120
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 121
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 122 predicted to even probabilities
1 edges in bb 123 predicted to even probabilities
Predictions for bb 124
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 125
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 126 predicted to even probabilities
1 edges in bb 127 predicted to even probabilities
Predictions for bb 128
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
Predictions for bb 129
  DS theory heuristics (ignored): 95.5%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  loop exit heuristics: 95.5%
1 edges in bb 130 predicted to even probabilities
Predictions for bb 131
  DS theory heuristics: 6.7%
  first match heuristics (ignored): 15.0%
  combined heuristics: 6.7%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 132 predicted to even probabilities
Predictions for bb 133
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 134 predicted to even probabilities
Predictions for bb 135
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 136 predicted to even probabilities
Predictions for bb 137
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 138
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
4 edges in bb 139 predicted to even probabilities
Predictions for bb 140
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 141
  DS theory heuristics: 13.7%
  first match heuristics (ignored): 28.0%
  combined heuristics: 13.7%
  opcode values nonequal (on trees) heuristics: 28.0%
  call heuristics: 29.0%
1 edges in bb 142 predicted to even probabilities
Predictions for bb 143
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 144 predicted to even probabilities
Predictions for bb 145
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 146 predicted to even probabilities
1 edges in bb 147 predicted to even probabilities
1 edges in bb 148 predicted to even probabilities
Predictions for bb 149
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 150
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 151 predicted to even probabilities
Predictions for bb 152
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 153
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 154
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 155 predicted to even probabilities
1 edges in bb 156 predicted to even probabilities
Predictions for bb 157
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 158
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 159 predicted to even probabilities
Predictions for bb 160
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 161 predicted to even probabilities
Predictions for bb 162
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 163 predicted to even probabilities
Predictions for bb 164
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  call heuristics: 71.0%
Predictions for bb 165
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 166 predicted to even probabilities
1 edges in bb 167 predicted to even probabilities
1 edges in bb 168 predicted to even probabilities

;; Function switch_core_media_receive_message

;; 
169 basic blocks, 279 edges, last basic block 169.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  168 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  168 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (false,exec)
Successors:  168 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  135 [8.3%]  (exec) 74 [8.3%]  (exec) 99 [8.3%]  (exec) 115 [8.3%]  (exec) 117 [8.3%]  (exec) 10 [8.3%]  (exec) 71 [8.3%]  (exec) 113 [8.3%]  (exec) 48 [8.3%]  (exec) 12 [8.3%]  (exec) 16 [8.3%]  (exec) 8 [8.3%]  (exec)

Basic block 8 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  9 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  11 [69.8%]  (true,exec) 135 [30.2%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [69.8%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  13 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  17 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [50.0%]  (true,exec)
Successors:  18 [85.0%]  (true,exec) 40 [15.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (true,exec)
Successors:  19 [29.0%]  (true,exec) 20 [71.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [29.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [71.0%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec)
Successors:  23 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [71.0%]  (true,exec)
Successors:  24 [85.0%]  (true,exec) 30 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  25 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (true,exec)
Successors:  26 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [50.0%]  (true,exec)
Successors:  27 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [50.0%]  (true,exec)
Successors:  28 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec) 25 [50.0%]  (false,exec) 26 [50.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  23 [15.0%]  (false,exec) 28 [50.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  22 [29.0%]  (false,exec)
Successors:  32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [27.0%]  (true,exec) 34 [73.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [27.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  31 [50.0%]  (false,exec) 32 [73.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec)
Successors:  36 [69.8%]  (true,exec) 38 [30.2%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [69.8%]  (true,exec)
Successors:  37 [69.8%]  (true,exec) 38 [30.2%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [69.8%]  (true,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec) 35 [30.2%]  (false,exec) 36 [30.2%]  (false,exec) 37 [100.0%]  (fallthru,exec)
Successors:  39 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [50.0%]  (true,exec)
Successors:  40 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  17 [15.0%]  (false,exec) 38 [50.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
Successors:  41 [71.0%]  (true,exec) 47 [29.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [71.0%]  (true,exec)
Successors:  42 [50.0%]  (true,exec) 43 [50.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [50.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [50.0%]  (false,exec) 42 [100.0%]  (fallthru,exec)
Successors:  44 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [50.0%]  (true,exec)
Successors:  45 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  43 [50.0%]  (false,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  40 [29.0%]  (false,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  49 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [85.0%]  (true,exec)
Successors:  50 [28.0%]  (true,exec) 51 [72.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [28.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  48 [15.0%]  (false,exec) 49 [72.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
Successors:  52 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  55 [15.0%]  (true,exec) 53 [85.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [85.0%]  (false,exec)
Successors:  55 [50.0%]  (true,exec) 54 [50.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [50.0%]  (false,exec)
Successors:  55 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  52 [15.0%]  (true,exec) 53 [50.0%]  (true,exec) 54 [100.0%]  (fallthru,exec)
Successors:  56 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [50.0%]  (true,exec)
Successors:  59 [15.0%]  (true,exec) 57 [85.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [85.0%]  (false,exec)
Successors:  59 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

Basic block 58 (new, reachable)
Predecessors:  57 [50.0%]  (false,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  56 [15.0%]  (true,exec) 57 [50.0%]  (true,exec) 58 [100.0%]  (fallthru,exec)
Successors:  60 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [50.0%]  (true,exec)
Successors:  62 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

Basic block 61 (new, reachable)
Predecessors:  60 [50.0%]  (false,exec)
Successors:  62 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  60 [50.0%]  (true,exec) 61 [50.0%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  61 [50.0%]  (false,exec) 62 [100.0%]  (fallthru,exec)
Successors:  65 [50.0%]  (true,exec) 64 [50.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [50.0%]  (false,exec)
Successors:  65 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  63 [50.0%]  (true,exec) 64 [50.0%]  (true,exec)
Successors:  66 [100.0%]  (fallthru,exec)

Basic block 66 (new, reachable)
Predecessors:  64 [50.0%]  (false,exec) 65 [100.0%]  (fallthru,exec)
Successors:  67 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [50.0%]  (true,exec)
Successors:  68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 69 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 70 (new, reachable)
Predecessors:  66 [50.0%]  (false,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  72 [69.8%]  (true,exec) 164 [30.2%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [69.8%]  (true,exec)
Successors:  73 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [29.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 74 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  75 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [29.0%]  (true,exec)
Successors:  77 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [85.0%]  (false,exec)
Successors:  77 [50.0%]  (true,exec) 80 [50.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec)
Successors:  78 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [29.0%]  (true,exec)
Successors:  79 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [29.0%]  (true,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 80 (new, reachable)
Predecessors:  76 [50.0%]  (false,exec) 77 [71.0%]  (false,exec) 78 [71.0%]  (false,exec) 79 [100.0%]  (fallthru,exec)
Successors:  81 [29.0%]  (true,exec) 83 [71.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [29.0%]  (true,exec)
Successors:  82 [29.0%]  (true,exec) 83 [71.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [29.0%]  (true,exec)
Successors:  83 [100.0%]  (fallthru,exec)

Basic block 83 (new, reachable)
Predecessors:  80 [71.0%]  (false,exec) 81 [71.0%]  (false,exec) 82 [100.0%]  (fallthru,exec)
Successors:  84 [85.0%]  (true,exec) 85 [15.0%]  (false,exec)

Basic block 84 (new, reachable)
Predecessors:  83 [85.0%]  (true,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 85 (new, reachable)
Predecessors:  83 [15.0%]  (false,exec)
Successors:  86 [100.0%]  (fallthru,exec)

Basic block 86 (new, reachable)
Predecessors:  84 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec)
Successors:  87 [29.0%]  (true,exec) 89 [71.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [29.0%]  (true,exec)
Successors:  88 [50.0%]  (true,exec) 89 [50.0%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  87 [50.0%]  (true,exec)
Successors:  89 [100.0%]  (fallthru,exec)

Basic block 89 (new, reachable)
Predecessors:  86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 88 [100.0%]  (fallthru,exec)
Successors:  90 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [29.0%]  (true,exec)
Successors:  91 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  89 [71.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
Successors:  92 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [50.0%]  (true,exec)
Successors:  96 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  91 [50.0%]  (false,exec) 92 [50.0%]  (false,exec)
Successors:  94 [69.8%]  (true,exec) 95 [30.2%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  93 [69.8%]  (true,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 95 (new, reachable)
Predecessors:  93 [30.2%]  (false,exec)
Successors:  96 [100.0%]  (fallthru,exec)

Basic block 96 (new, reachable)
Predecessors:  92 [50.0%]  (true,exec) 94 [100.0%]  (fallthru,exec) 95 [100.0%]  (fallthru,exec)
Successors:  97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [50.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 98 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 99 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  100 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [50.0%]  (true,exec)
Successors:  101 [29.0%]  (true,exec) 103 [71.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [29.0%]  (true,exec)
Successors:  102 [29.0%]  (true,exec) 103 [71.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [29.0%]  (true,exec)
Successors:  103 [100.0%]  (fallthru,exec)

Basic block 103 (new, reachable)
Predecessors:  100 [71.0%]  (false,exec) 101 [71.0%]  (false,exec) 102 [100.0%]  (fallthru,exec)
Successors:  104 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [29.0%]  (true,exec)
Successors:  105 [100.0%]  (fallthru,exec)

Basic block 105 (new, reachable)
Predecessors:  103 [71.0%]  (false,exec) 104 [100.0%]  (fallthru,exec)
Successors:  106 [29.0%]  (true,exec) 110 [71.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [29.0%]  (true,exec)
Successors:  107 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [29.0%]  (true,exec)
Successors:  108 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  107 [29.0%]  (true,exec)
Successors:  109 [100.0%]  (fallthru,exec)

Basic block 109 (new, reachable)
Predecessors:  106 [71.0%]  (false,exec) 107 [71.0%]  (false,exec) 108 [100.0%]  (fallthru,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 110 (new, reachable)
Predecessors:  105 [71.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
Successors:  111 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  110 [50.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 112 (new, reachable)
Predecessors:  110 [50.0%]  (false,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 113 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  114 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 115 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  116 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 117 (new, reachable)
Predecessors:  7 [8.3%]  (exec)
Successors:  118 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [29.0%]  (true,exec)
Successors:  119 [100.0%]  (fallthru,exec)

Basic block 119 (new, reachable)
Predecessors:  117 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
Successors:  120 [69.8%]  (true,exec) 131 [30.2%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [69.8%]  (true,exec)
Successors:  121 [69.8%]  (true,exec) 131 [30.2%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [69.8%]  (true,exec)
Successors:  122 [29.0%]  (true,exec) 131 [71.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [29.0%]  (true,exec)
Successors:  124 [100.0%]  (fallthru,exec)

Basic block 123 (new, reachable)
Predecessors:  125 [95.5%]  (true,exec)
Successors:  124 [100.0%]  (fallthru,dfs_back,exec)

Basic block 124 (new, reachable)
Predecessors:  122 [100.0%]  (fallthru,exec) 123 [100.0%]  (fallthru,dfs_back,exec)
Successors:  125 [95.5%]  (true,exec) 126 [4.5%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [95.5%]  (true,exec)
Successors:  123 [95.5%]  (true,exec) 126 [4.5%]  (false,exec)

Basic block 126 (new, reachable)
Predecessors:  125 [4.5%]  (false,exec) 124 [4.5%]  (false,exec)
Successors:  128 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  129 [95.5%]  (true,exec)
Successors:  128 [100.0%]  (fallthru,dfs_back,exec)

Basic block 128 (new, reachable)
Predecessors:  126 [100.0%]  (fallthru,exec) 127 [100.0%]  (fallthru,dfs_back,exec)
Successors:  129 [95.5%]  (true,exec) 130 [4.5%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [95.5%]  (true,exec)
Successors:  127 [95.5%]  (true,exec) 130 [4.5%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  129 [4.5%]  (false,exec) 128 [4.5%]  (false,exec)
Successors:  131 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  119 [30.2%]  (false,exec) 120 [30.2%]  (false,exec) 121 [71.0%]  (false,exec) 130 [100.0%]  (fallthru,exec)
Successors:  132 [6.7%]  (true,exec) 133 [93.3%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [6.7%]  (true,exec)
Successors:  133 [100.0%]  (fallthru,exec)

Basic block 133 (new, reachable)
Predecessors:  131 [93.3%]  (false,exec) 132 [100.0%]  (fallthru,exec)
Successors:  134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [29.0%]  (true,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 135 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 11 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 116 [100.0%]  (fallthru,exec) 134 [100.0%]  (fallthru,exec) 7 [8.3%]  (exec) 8 [71.0%]  (false,exec) 10 [30.2%]  (false,exec) 12 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec) 16 [50.0%]  (false,exec) 44 [71.0%]  (false,exec) 45 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,exec) 115 [71.0%]  (false,exec) 133 [71.0%]  (false,exec)
Successors:  136 [69.8%]  (true,exec) 137 [30.2%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [69.8%]  (true,exec)
Successors:  137 [100.0%]  (fallthru,exec)

Basic block 137 (new, reachable)
Predecessors:  135 [30.2%]  (false,exec) 136 [100.0%]  (fallthru,exec)
Successors:  162 [71.0%]  (true,exec) 138 [29.0%]  (false,exec)

Basic block 138 (new, reachable)
Predecessors:  137 [29.0%]  (false,exec)
Successors:  162 [50.0%]  (true,exec) 139 [50.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [50.0%]  (false,exec)
Successors:  162 [25.0%]  (exec) 160 [25.0%]  (exec) 152 [25.0%]  (exec) 140 [25.0%]  (exec)

Basic block 140 (new, reachable)
Predecessors:  139 [25.0%]  (exec)
Successors:  141 [69.8%]  (true,exec) 149 [30.2%]  (false,exec)

Basic block 141 (new, reachable)
Predecessors:  140 [69.8%]  (true,exec)
Successors:  142 [13.7%]  (true,exec) 143 [86.3%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [13.7%]  (true,exec)
Successors:  148 [100.0%]  (fallthru,exec)

Basic block 143 (new, reachable)
Predecessors:  141 [86.3%]  (false,exec)
Successors:  144 [85.0%]  (true,exec) 145 [15.0%]  (false,exec)

Basic block 144 (new, reachable)
Predecessors:  143 [85.0%]  (true,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  144 [100.0%]  (fallthru,exec) 143 [15.0%]  (false,exec)
Successors:  147 [85.0%]  (true,exec) 146 [15.0%]  (false,exec)

Basic block 146 (new, reachable)
Predecessors:  145 [15.0%]  (false,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 147 (new, reachable)
Predecessors:  145 [85.0%]  (true,exec) 146 [100.0%]  (fallthru,exec)
Successors:  148 [100.0%]  (fallthru,exec)

Basic block 148 (new, reachable)
Predecessors:  142 [100.0%]  (fallthru,exec) 147 [100.0%]  (fallthru,exec)
Successors:  149 [100.0%]  (fallthru,exec)

Basic block 149 (new, reachable)
Predecessors:  140 [30.2%]  (false,exec) 148 [100.0%]  (fallthru,exec)
Successors:  150 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

Basic block 150 (new, reachable)
Predecessors:  149 [29.0%]  (true,exec)
Successors:  151 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [29.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 152 (new, reachable)
Predecessors:  139 [25.0%]  (exec)
Successors:  153 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

Basic block 153 (new, reachable)
Predecessors:  152 [50.0%]  (true,exec)
Successors:  154 [29.0%]  (true,exec) 157 [71.0%]  (false,exec)

Basic block 154 (new, reachable)
Predecessors:  153 [29.0%]  (true,exec)
Successors:  155 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

Basic block 155 (new, reachable)
Predecessors:  154 [29.0%]  (true,exec)
Successors:  156 [100.0%]  (fallthru,exec)

Basic block 156 (new, reachable)
Predecessors:  154 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 157 (new, reachable)
Predecessors:  153 [71.0%]  (false,exec)
Successors:  158 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [29.0%]  (true,exec)
Successors:  159 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

Basic block 159 (new, reachable)
Predecessors:  158 [29.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 160 (new, reachable)
Predecessors:  139 [25.0%]  (exec)
Successors:  161 [69.8%]  (true,exec) 162 [30.2%]  (false,exec)

Basic block 161 (new, reachable)
Predecessors:  160 [69.8%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 162 (new, reachable)
Predecessors:  138 [50.0%]  (true,exec) 150 [71.0%]  (false,exec) 156 [100.0%]  (fallthru,exec) 160 [30.2%]  (false,exec) 149 [71.0%]  (false,exec) 151 [100.0%]  (fallthru,exec) 152 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec) 158 [71.0%]  (false,exec) 157 [71.0%]  (false,exec) 139 [25.0%]  (exec) 161 [100.0%]  (fallthru,exec) 137 [71.0%]  (true,exec)
Successors:  163 [69.8%]  (true,exec) 164 [30.2%]  (false,exec)

Basic block 163 (new, reachable)
Predecessors:  162 [69.8%]  (true,exec)
Successors:  164 [100.0%]  (fallthru,exec)

Basic block 164 (new, reachable)
Predecessors:  19 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 55 [50.0%]  (false,exec) 72 [71.0%]  (false,exec) 97 [100.0%]  (fallthru,exec) 111 [100.0%]  (fallthru,exec) 114 [100.0%]  (fallthru,exec) 162 [30.2%]  (false,exec) 163 [100.0%]  (fallthru,exec) 51 [50.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 70 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 59 [50.0%]  (false,exec) 71 [30.2%]  (false,exec) 73 [100.0%]  (fallthru,exec) 74 [71.0%]  (false,exec) 98 [100.0%]  (fallthru,exec) 99 [50.0%]  (false,exec) 112 [100.0%]  (fallthru,exec) 113 [71.0%]  (false,exec)
Successors:  166 [71.0%]  (true,exec) 165 [29.0%]  (false,exec)

Basic block 165 (new, reachable)
Predecessors:  164 [29.0%]  (false,exec)
Successors:  166 [50.0%]  (true,exec) 167 [50.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  164 [71.0%]  (true,exec) 165 [50.0%]  (true,exec)
Successors:  167 [100.0%]  (fallthru,exec)

Basic block 167 (new, reachable)
Predecessors:  165 [50.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
Successors:  168 [100.0%]  (fallthru,exec)

Basic block 168 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [39.0%]  (true,exec) 167 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_receive_message (struct switch_core_session_t * session, struct switch_core_session_message_t * msg)
{
  int D.48251;
  uint8_t D.48249;
  struct payload_map_t * pmap;
  uint8_t D.48246;
  struct payload_map_t * pmap;
  const char D.48242;
  int D.48241;
  const char D.48238;
  int D.48237;
  long int D.48234;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * nsession;
  const char * port;
  const char * ip;
  struct switch_channel_t * other_channel;
  struct switch_core_session_t * other_session;
  const char * uuid;
  int ok;
  const char * val;
  int set;
  int both;
  switch_rtp_flag_t flags[39];
  const char * direction;
  struct switch_rtp_t * rtp;
  register int __result;
  const char * s;
  char * q;
  char * p;
  int max_drift;
  int maxqlen;
  int qlen;
  int maxlen;
  int len;
  static const char __func__[34] = "switch_core_media_receive_message";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_receive_message";
  switch_status_t status;
  struct switch_media_handle_t * smh;
  switch_channel_state_t D.41130;
  int D.41128;
  uint32_t D.41119;
  uint32_t D.41113;
  uint8_t D.41108;
  struct switch_core_session_t * nsession.13;
  switch_status_t D.41104;
  char * D.41101;
  struct payload_map_t * D.41100;
  char * iftmp.12;
  char * D.41092;
  struct payload_map_t * D.41091;
  char * iftmp.11;
  const char D.41086;
  switch_channel_state_t D.41083;
  int D.41081;
  struct switch_mutex_t * D.41076;
  char * D.41071;
  struct switch_core_media_params_t * D.41070;
  short unsigned int D.41069;
  _Bool D.41065;
  _Bool D.41064;
  _Bool D.41063;
  const char * D.41058;
  int D.41055;
  const char * D.41054;
  uint32_t D.41051;
  uint8_t D.41048;
  uint32_t D.41044;
  uint32_t D.41041;
  uint32_t D.41038;
  uint32_t D.41035;
  char * D.41034;
  uint32_t D.41031;
  char * D.41030;
  uint32_t D.41027;
  unsigned int D.41026;
  unsigned int D.41023;
  uint8_t D.41020;
  switch_core_media_flag_t D.41016;
  uint32_t D.41011;
  uint32_t D.41003;
  uint32_t D.41000;
  char * D.40996;
  uint32_t D.40993;
  uint32_t D.40990;
  unsigned int D.40989;
  smh_flag_t D.40988;
  char * D.40987;
  uint32_t D.40984;
  uint32_t D.40981;
  int D.40980;
  uint8_t D.40974;
  uint32_t D.40971;
  int D.40964;
  switch_rtp_flag_t D.40961;
  switch_rtp_flag_t D.40960;
  int D.40959;
  switch_rtp_flag_t D.40955;
  switch_rtp_flag_t D.40954;
  int D.40953;
  int D.40949;
  const char * D.40945;
  uint8_t D.40939;
  const char D.40936;
  int D.40929;
  const char * D.40928;
  switch_status_t D.40925;
  uint32_t max_drift.10;
  uint32_t D.40923;
  uint32_t D.40922;
  uint32_t maxqlen.9;
  uint32_t qlen.8;
  int D.40904;
  int D.40903;
  int D.40894;
  const unsigned char D.40893;
  int D.40884;
  const unsigned char D.40883;
  int D.40874;
  const unsigned char D.40873;
  int D.40863;
  const unsigned char D.40862;
  int D.40854;
  int D.40851;
  int D.40848;
  const char * D.40845;
  uint8_t D.40842;
  int D.40838;
  uint8_t D.40835;
  struct switch_rtp_t * D.40834;
  struct switch_rtp_t * D.40831;
  uint32_t D.40828;
  switch_core_session_message_types_t D.40827;
  switch_channel_state_t D.40826;
  int D.40824;
  struct switch_channel_t * D.40823;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG status => 0
  if (session_26(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7477, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_27 = session_26(D)->media_handle;
  # DEBUG smh => smh_27
  if (smh_27 == 0B)
    goto <bb 168>;
  else
    goto <bb 5>;
  # SUCC: 168 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40823_29 = session_26(D)->channel;
  D.40824_30 = switch_channel_check_signal (D.40823_29, 1);
  if (D.40824_30 != 0)
    goto <bb 168>;
  else
    goto <bb 6>;
  # SUCC: 168 [61.0%]  (true,exec) 6 [39.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (false,exec)
  D.40823_31 = session_26(D)->channel;
  D.40826_32 = switch_channel_get_state (D.40823_31);
  if (D.40826_32 > 9)
    goto <bb 168>;
  else
    goto <bb 7>;
  # SUCC: 168 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:1862
  # PRED: 6 [61.0%]  (false,exec)
  # DEBUG D#39 => &smh_27->engines
  # DEBUG a_engine => D#39
  # DEBUG D#38 => &smh_27->engines[1]
  # DEBUG v_engine => D#38
  D.40827_36 = msg_35(D)->message_id;
  switch (D.40827_36) <default: <L211>, case 4: <L93>, case 5: <L126>, case 8: <L147>, case 9: <L150>, case 17: <L10>, case 19: <L88>, case 20: <L144>, case 24: <L65>, case 25: <L13>, case 32: <L19>, case 46: <L7>>
  # SUCC: 135 [8.3%]  (exec) 74 [8.3%]  (exec) 99 [8.3%]  (exec) 115 [8.3%]  (exec) 117 [8.3%]  (exec) 10 [8.3%]  (exec) 71 [8.3%]  (exec) 113 [8.3%]  (exec) 48 [8.3%]  (exec) 12 [8.3%]  (exec) 16 [8.3%]  (exec) 8 [8.3%]  (exec)

  # BLOCK 8 freq:155
  # PRED: 7 [8.3%]  (exec)
<L7>:
  D.40823_37 = session_26(D)->channel;
  D.40828_38 = switch_channel_test_flag (D.40823_37, 82);
  if (D.40828_38 != 0)
    goto <bb 9>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 9 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 9 freq:45
  # PRED: 8 [29.0%]  (true,exec)
  D.40823_39 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_39, 122, 1);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:155
  # PRED: 7 [8.3%]  (exec)
<L10>:
  D.40831_40 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  if (D.40831_40 != 0B)
    goto <bb 11>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 11 [69.8%]  (true,exec) 135 [30.2%]  (false,exec)

  # BLOCK 11 freq:108
  # PRED: 10 [69.8%]  (true,exec)
  D.40831_41 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  switch_rtp_video_refresh (D.40831_41);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:155
  # PRED: 7 [8.3%]  (exec)
<L13>:
  D.40834_42 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40835_43 = switch_rtp_ready (D.40834_42);
  if (D.40835_43 != 0)
    goto <bb 13>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 13 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

  # BLOCK 13 freq:78
  # PRED: 12 [50.0%]  (true,exec)
  D.40838_44 = msg_35(D)->numeric_arg;
  if (D.40838_44 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 14 freq:39
  # PRED: 13 [50.0%]  (true,exec)
  D.40834_45 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_45, 19);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:39
  # PRED: 13 [50.0%]  (false,exec)
  D.40834_46 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_46, 19);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:155
  # PRED: 7 [8.3%]  (exec)
<L19>:
  D.40834_47 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40842_48 = switch_rtp_ready (D.40834_47);
  if (D.40842_48 != 0)
    goto <bb 17>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 17 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

  # BLOCK 17 freq:78
  # PRED: 16 [50.0%]  (true,exec)
  # DEBUG len => 0
  # DEBUG maxlen => 0
  # DEBUG qlen => 0
  # DEBUG maxqlen => 50
  # DEBUG max_drift => 0
  D.40845_54 = msg_35(D)->string_arg;
  if (D.40845_54 != 0B)
    goto <bb 18>;
  else
    goto <bb 40>;
  # SUCC: 18 [85.0%]  (true,exec) 40 [15.0%]  (false,exec)

  # BLOCK 18 freq:66
  # PRED: 17 [85.0%]  (true,exec)
  D.40845_55 = msg_35(D)->string_arg;
  D.40848_56 = strcasecmp (D.40845_55, "pause");
  if (D.40848_56 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [29.0%]  (true,exec) 20 [71.0%]  (false,exec)

  # BLOCK 19 freq:19
  # PRED: 18 [29.0%]  (true,exec)
  D.40834_57 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_57, 1);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:47
  # PRED: 18 [71.0%]  (false,exec)
  D.40845_58 = msg_35(D)->string_arg;
  D.40851_59 = strcasecmp (D.40845_58, "resume");
  if (D.40851_59 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 21 freq:14
  # PRED: 20 [29.0%]  (true,exec)
  D.40834_60 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_60, 0);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:33
  # PRED: 20 [71.0%]  (false,exec)
  D.40845_61 = msg_35(D)->string_arg;
  D.40854_62 = strncasecmp (D.40845_61, "debug:", 6);
  if (D.40854_62 == 0)
    goto <bb 23>;
  else
    goto <bb 31>;
  # SUCC: 23 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

  # BLOCK 23 freq:24
  # PRED: 22 [71.0%]  (true,exec)
  D.40845_63 = msg_35(D)->string_arg;
  s_64 = D.40845_63 + 6;
  # DEBUG s => s_64
  if (s_64 != 0B)
    goto <bb 24>;
  else
    goto <bb 30>;
  # SUCC: 24 [85.0%]  (true,exec) 30 [15.0%]  (false,exec)

  # BLOCK 24 freq:20
  # PRED: 23 [85.0%]  (true,exec)
  # DEBUG __s2_len => 3
  # DEBUG __s1 => s_64
  D.40862_67 = MEM[(const unsigned char *)D.40845_63 + 6B];
  D.40863_68 = (int) D.40862_67;
  __result_72 = D.40863_68 + -111;
  # DEBUG __result => __result_72
  if (__result_72 == 0)
    goto <bb 25>;
  else
    goto <bb 28>;
  # SUCC: 25 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

  # BLOCK 25 freq:10
  # PRED: 24 [50.0%]  (true,exec)
  D.40873_77 = MEM[(const unsigned char *)D.40845_63 + 7B];
  D.40874_78 = (int) D.40873_77;
  __result_82 = D.40874_78 + -102;
  # DEBUG __result => __result_82
  if (__result_82 == 0)
    goto <bb 26>;
  else
    goto <bb 28>;
  # SUCC: 26 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

  # BLOCK 26 freq:5
  # PRED: 25 [50.0%]  (true,exec)
  D.40883_87 = MEM[(const unsigned char *)D.40845_63 + 8B];
  D.40884_88 = (int) D.40883_87;
  __result_92 = D.40884_88 + -102;
  # DEBUG __result => __result_92
  if (__result_92 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [50.0%]  (true,exec) 28 [50.0%]  (false,exec)

  # BLOCK 27 freq:3
  # PRED: 26 [50.0%]  (true,exec)
  D.40893_97 = MEM[(const unsigned char *)D.40845_63 + 9B];
  D.40894_98 = (int) D.40893_97;
  # DEBUG __result => D.40894_98
  # SUCC: 28 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:20
  # PRED: 24 [50.0%]  (false,exec) 25 [50.0%]  (false,exec) 26 [50.0%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  # __result_13 = PHI <__result_72(24), __result_82(25), __result_92(26), D.40894_98(27)>
  # DEBUG __result => __result_13
  if (__result_13 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 29 freq:10
  # PRED: 28 [50.0%]  (true,exec)
  # DEBUG s => 0B
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:24
  # PRED: 23 [15.0%]  (false,exec) 28 [50.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
  # s_12 = PHI <s_64(23), s_64(28), 0B(29)>
  # DEBUG s => s_12
  D.40834_108 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  status_109 = switch_rtp_debug_jitter_buffer (D.40834_108, s_12);
  # DEBUG status => status_109
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:10
  # PRED: 22 [29.0%]  (false,exec)
  D.40845_110 = msg_35(D)->string_arg;
  # DEBUG __nptr => D.40845_110
  len_481 = strtol (D.40845_110, 0B, 10);
  # DEBUG len => NULL
  if (len_481 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 32 freq:5
  # PRED: 31 [50.0%]  (true,exec)
  D.40903_112 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
  D.40904_113 = D.40903_112 / 1000;
  qlen_114 = len_481 / D.40904_113;
  # DEBUG qlen => qlen_114
  if (qlen_114 <= 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [27.0%]  (true,exec) 34 [73.0%]  (false,exec)

  # BLOCK 33 freq:1
  # PRED: 32 [27.0%]  (true,exec)
  # DEBUG qlen => 3
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:10
  # PRED: 31 [50.0%]  (false,exec) 32 [73.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  # qlen_6 = PHI <0(31), qlen_114(32), 3(33)>
  # DEBUG qlen => qlen_6
  if (qlen_6 != 0)
    goto <bb 35>;
  else
    goto <bb 38>;
  # SUCC: 35 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 35 freq:5
  # PRED: 34 [50.0%]  (true,exec)
  D.40845_116 = msg_35(D)->string_arg;
  p_117 = __builtin_strchr (D.40845_116, 58);
  # DEBUG p => p_117
  if (p_117 != 0B)
    goto <bb 36>;
  else
    goto <bb 38>;
  # SUCC: 36 [69.8%]  (true,exec) 38 [30.2%]  (false,exec)

  # BLOCK 36 freq:3
  # PRED: 35 [69.8%]  (true,exec)
  p_118 = p_117 + 1;
  # DEBUG p => p_118
  # DEBUG __nptr => p_118
  maxlen_482 = strtol (p_118, 0B, 10);
  # DEBUG maxlen => NULL
  q_120 = __builtin_strchr (p_118, 58);
  # DEBUG q => q_120
  if (q_120 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 [69.8%]  (true,exec) 38 [30.2%]  (false,exec)

  # BLOCK 37 freq:2
  # PRED: 36 [69.8%]  (true,exec)
  q_121 = q_120 + 1;
  # DEBUG q => q_121
  # DEBUG __nptr => q_121
  D.48234_483 = strtol (q_121, 0B, 10);
  max_drift_123 = ABS_EXPR <D.48234_483>;
  # DEBUG max_drift => max_drift_123
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:10
  # PRED: 34 [50.0%]  (false,exec) 35 [30.2%]  (false,exec) 36 [30.2%]  (false,exec) 37 [100.0%]  (fallthru,exec)
  # maxlen_5 = PHI <0(34), 0(35), maxlen_482(36), maxlen_482(37)>
  # max_drift_10 = PHI <0(34), 0(35), 0(36), max_drift_123(37)>
  # DEBUG max_drift => max_drift_10
  # DEBUG maxlen => maxlen_5
  if (maxlen_5 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

  # BLOCK 39 freq:5
  # PRED: 38 [50.0%]  (true,exec)
  D.40903_124 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
  D.40904_125 = D.40903_124 / 1000;
  maxqlen_126 = maxlen_5 / D.40904_125;
  # DEBUG maxqlen => maxqlen_126
  # SUCC: 40 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:21
  # PRED: 17 [15.0%]  (false,exec) 38 [50.0%]  (false,exec) 39 [100.0%]  (fallthru,exec)
  # len_4 = PHI <0(17), len_481(38), len_481(39)>
  # qlen_7 = PHI <0(17), qlen_6(38), qlen_6(39)>
  # maxqlen_8 = PHI <50(17), 50(38), maxqlen_126(39)>
  # max_drift_11 = PHI <0(17), max_drift_10(38), max_drift_10(39)>
  # DEBUG max_drift => max_drift_11
  # DEBUG maxqlen => maxqlen_8
  # DEBUG qlen => qlen_7
  # DEBUG len => len_4
  if (qlen_7 != 0)
    goto <bb 41>;
  else
    goto <bb 47>;
  # SUCC: 41 [71.0%]  (true,exec) 47 [29.0%]  (false,exec)

  # BLOCK 41 freq:15
  # PRED: 40 [71.0%]  (true,exec)
  if (maxqlen_8 < qlen_7)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [50.0%]  (true,exec) 43 [50.0%]  (false,exec)

  # BLOCK 42 freq:8
  # PRED: 41 [50.0%]  (true,exec)
  maxqlen_127 = qlen_7 * 5;
  # DEBUG maxqlen => maxqlen_127
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:15
  # PRED: 41 [50.0%]  (false,exec) 42 [100.0%]  (fallthru,exec)
  # maxqlen_9 = PHI <maxqlen_8(41), maxqlen_127(42)>
  # DEBUG maxqlen => maxqlen_9
  D.40834_128 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  qlen.8_129 = (uint32_t) qlen_7;
  maxqlen.9_130 = (uint32_t) maxqlen_9;
  D.40922_131 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_packet;
  D.40923_132 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_second;
  max_drift.10_133 = (uint32_t) max_drift_11;
  D.40925_134 = switch_rtp_activate_jitter_buffer (D.40834_128, qlen.8_129, maxqlen.9_130, D.40922_131, D.40923_132, max_drift.10_133);
  if (D.40925_134 == 0)
    goto <bb 44>;
  else
    goto <bb 46>;
  # SUCC: 44 [50.0%]  (true,exec) 46 [50.0%]  (false,exec)

  # BLOCK 44 freq:8
  # PRED: 43 [50.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7577, session_26(D), 7, "Setting Jitterbuffer to %dms (%d frames) (%d max frames) (%d max drift)\n", len_4, qlen_7, maxqlen_9, max_drift_11);
  D.40823_135 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_135, 57, 1);
  D.40823_136 = session_26(D)->channel;
  D.40928_137 = switch_channel_get_variable_dup (D.40823_136, "rtp_jitter_buffer_plc", 1, -1);
  D.40929_138 = switch_false (D.40928_137);
  if (D.40929_138 == 0)
    goto <bb 45>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 45 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 45 freq:2
  # PRED: 44 [29.0%]  (true,exec)
  D.40823_139 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_139, 58, 1);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:8
  # PRED: 43 [50.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7585, session_26(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", len_4, qlen_7);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:6
  # PRED: 40 [29.0%]  (false,exec)
  D.40834_140 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_deactivate_jitter_buffer (D.40834_140);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:155
  # PRED: 7 [8.3%]  (exec)
<L65>:
  rtp_141 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  # DEBUG rtp => rtp_141
  direction_142 = msg_35(D)->string_array_arg[0];
  # DEBUG direction => direction_142
  if (direction_142 != 0B)
    goto <bb 49>;
  else
    goto <bb 51>;
  # SUCC: 49 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

  # BLOCK 49 freq:132
  # PRED: 48 [85.0%]  (true,exec)
  D.40936_143 = *direction_142;
  if (D.40936_143 == 118)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 [28.0%]  (true,exec) 51 [72.0%]  (false,exec)

  # BLOCK 50 freq:37
  # PRED: 49 [28.0%]  (true,exec)
  direction_144 = direction_142 + 1;
  # DEBUG direction => direction_144
  rtp_145 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  # DEBUG rtp => rtp_145
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:155
  # PRED: 48 [15.0%]  (false,exec) 49 [72.0%]  (false,exec) 50 [100.0%]  (fallthru,exec)
  # rtp_14 = PHI <rtp_141(48), rtp_141(49), rtp_145(50)>
  # direction_15 = PHI <direction_142(48), direction_142(49), direction_144(50)>
  # DEBUG direction => direction_15
  # DEBUG rtp => rtp_14
  D.40939_146 = switch_rtp_ready (rtp_14);
  if (D.40939_146 != 0)
    goto <bb 52>;
  else
    goto <bb 164> (end);
  # SUCC: 52 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

  # BLOCK 52 freq:78
  # PRED: 51 [50.0%]  (true,exec)
  # DEBUG s => direction_15
  if (direction_15 == 0B)
    goto <bb 55>;
  else
    goto <bb 53>;
  # SUCC: 55 [15.0%]  (true,exec) 53 [85.0%]  (false,exec)

  # BLOCK 53 freq:66
  # PRED: 52 [85.0%]  (false,exec)
  D.48238_484 = *direction_15;
  if (D.48238_484 == 0)
    goto <bb 55>;
  else
    goto <bb 54>;
  # SUCC: 55 [50.0%]  (true,exec) 54 [50.0%]  (false,exec)

  # BLOCK 54 freq:33
  # PRED: 53 [50.0%]  (false,exec)
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:78
  # PRED: 52 [15.0%]  (true,exec) 53 [50.0%]  (true,exec) 54 [100.0%]  (fallthru,exec)
  # D.48237_485 = PHI <1(52), 1(53), 0(54)>
  if (D.48237_485 == 0)
    goto <bb 56>;
  else
    goto <bb 164> (end);
  # SUCC: 56 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

  # BLOCK 56 freq:39
  # PRED: 55 [50.0%]  (true,exec)
  D.40945_148 = msg_35(D)->string_array_arg[1];
  # DEBUG s => D.40945_148
  if (D.40945_148 == 0B)
    goto <bb 59>;
  else
    goto <bb 57>;
  # SUCC: 59 [15.0%]  (true,exec) 57 [85.0%]  (false,exec)

  # BLOCK 57 freq:33
  # PRED: 56 [85.0%]  (false,exec)
  D.48242_486 = *D.40945_148;
  if (D.48242_486 == 0)
    goto <bb 59>;
  else
    goto <bb 58>;
  # SUCC: 59 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

  # BLOCK 58 freq:16
  # PRED: 57 [50.0%]  (false,exec)
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:39
  # PRED: 56 [15.0%]  (true,exec) 57 [50.0%]  (true,exec) 58 [100.0%]  (fallthru,exec)
  # D.48241_487 = PHI <1(56), 1(57), 0(58)>
  if (D.48241_487 == 0)
    goto <bb 60>;
  else
    goto <bb 164> (end);
  # SUCC: 60 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

  # BLOCK 60 freq:19
  # PRED: 59 [50.0%]  (true,exec)
  flags = {};
  D.40949_150 = strcasecmp (direction_15, "both");
  both_151 = D.40949_150 == 0;
  # DEBUG both => both_151
  # DEBUG set => 0
  if (both_151 != 0)
    goto <bb 62>;
  else
    goto <bb 61>;
  # SUCC: 62 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

  # BLOCK 61 freq:10
  # PRED: 60 [50.0%]  (false,exec)
  D.40953_153 = strcasecmp (direction_15, "read");
  if (D.40953_153 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 [50.0%]  (true,exec) 63 [50.0%]  (false,exec)

  # BLOCK 62 freq:15
  # PRED: 60 [50.0%]  (true,exec) 61 [50.0%]  (true,exec)
  D.40954_154 = flags[28];
  D.40955_155 = D.40954_154 + 1;
  flags[28] = D.40955_155;
  # DEBUG set => 1
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:19
  # PRED: 61 [50.0%]  (false,exec) 62 [100.0%]  (fallthru,exec)
  # set_16 = PHI <0(61), 1(62)>
  # DEBUG set => set_16
  if (both_151 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;
  # SUCC: 65 [50.0%]  (true,exec) 64 [50.0%]  (false,exec)

  # BLOCK 64 freq:10
  # PRED: 63 [50.0%]  (false,exec)
  D.40959_157 = strcasecmp (direction_15, "write");
  if (D.40959_157 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;
  # SUCC: 65 [50.0%]  (true,exec) 66 [50.0%]  (false,exec)

  # BLOCK 65 freq:15
  # PRED: 63 [50.0%]  (true,exec) 64 [50.0%]  (true,exec)
  D.40960_158 = flags[29];
  D.40961_159 = D.40960_158 + 1;
  flags[29] = D.40961_159;
  set_160 = set_16 + 1;
  # DEBUG set => set_160
  # SUCC: 66 [100.0%]  (fallthru,exec)

  # BLOCK 66 freq:19
  # PRED: 64 [50.0%]  (false,exec) 65 [100.0%]  (fallthru,exec)
  # set_17 = PHI <set_16(64), set_160(65)>
  # DEBUG set => set_17
  if (set_17 != 0)
    goto <bb 67>;
  else
    goto <bb 70>;
  # SUCC: 67 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 67 freq:10
  # PRED: 66 [50.0%]  (true,exec)
  D.40945_161 = msg_35(D)->string_array_arg[1];
  D.40964_162 = switch_true (D.40945_161);
  if (D.40964_162 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;
  # SUCC: 68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

  # BLOCK 68 freq:5
  # PRED: 67 [50.0%]  (true,exec)
  switch_rtp_set_flags (rtp_14, &flags);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 69 freq:5
  # PRED: 67 [50.0%]  (false,exec)
  switch_rtp_clear_flags (rtp_14, &flags);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:10
  # PRED: 66 [50.0%]  (false,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7627, session_26(D), 3, "Invalid Options\n");
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:155
  # PRED: 7 [8.3%]  (exec)
<L88>:
  D.40834_163 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  if (D.40834_163 != 0B)
    goto <bb 72>;
  else
    goto <bb 164> (end);
  # SUCC: 72 [69.8%]  (true,exec) 164 [30.2%]  (false,exec)

  # BLOCK 72 freq:108
  # PRED: 71 [69.8%]  (true,exec)
  D.40834_164 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40971_165 = switch_rtp_test_flag (D.40834_164, 15);
  if (D.40971_165 != 0)
    goto <bb 73>;
  else
    goto <bb 164> (end);
  # SUCC: 73 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

  # BLOCK 73 freq:31
  # PRED: 72 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7634, session_26(D), 4, "Pass 2833 mode may not work on a transcoded call.\n");
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 74 freq:155
  # PRED: 7 [8.3%]  (exec)
<L93>:
  D.40834_166 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40974_167 = switch_rtp_ready (D.40834_166);
  if (D.40974_167 != 0)
    goto <bb 75>;
  else
    goto <bb 164> (end);
  # SUCC: 75 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

  # BLOCK 75 freq:45
  # PRED: 74 [29.0%]  (true,exec)
  # DEBUG ok => 0
  D.40823_169 = session_26(D)->channel;
  val_170 = switch_channel_get_variable_dup (D.40823_169, "rtp_jitter_buffer_during_bridge", 1, -1);
  # DEBUG val => val_170
  if (val_170 == 0B)
    goto <bb 77>;
  else
    goto <bb 76>;
  # SUCC: 77 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

  # BLOCK 76 freq:38
  # PRED: 75 [85.0%]  (false,exec)
  D.40980_171 = switch_false (val_170);
  if (D.40980_171 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;
  # SUCC: 77 [50.0%]  (true,exec) 80 [50.0%]  (false,exec)

  # BLOCK 77 freq:26
  # PRED: 75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec)
  D.40823_172 = session_26(D)->channel;
  D.40981_173 = switch_channel_test_flag (D.40823_172, 57);
  if (D.40981_173 != 0)
    goto <bb 78>;
  else
    goto <bb 80>;
  # SUCC: 78 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

  # BLOCK 78 freq:8
  # PRED: 77 [29.0%]  (true,exec)
  D.40823_174 = session_26(D)->channel;
  D.40984_175 = switch_channel_test_cap_partner (D.40823_174, 5);
  if (D.40984_175 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;
  # SUCC: 79 [29.0%]  (true,exec) 80 [71.0%]  (false,exec)

  # BLOCK 79 freq:2
  # PRED: 78 [29.0%]  (true,exec)
  D.40823_176 = session_26(D)->channel;
  D.40987_177 = switch_channel_get_name (D.40823_176);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7647, session_26(D), 7, "%s PAUSE Jitterbuffer\n", D.40987_177);
  D.40834_178 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_178, 1);
  D.40988_179 = smh_27->flags;
  D.40989_180 = D.40988_179 | 4;
  smh_27->flags = D.40989_180;
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 80 freq:45
  # PRED: 76 [50.0%]  (false,exec) 77 [71.0%]  (false,exec) 78 [71.0%]  (false,exec) 79 [100.0%]  (fallthru,exec)
  D.40823_181 = session_26(D)->channel;
  D.40990_182 = switch_channel_test_flag (D.40823_181, 100);
  if (D.40990_182 != 0)
    goto <bb 81>;
  else
    goto <bb 83>;
  # SUCC: 81 [29.0%]  (true,exec) 83 [71.0%]  (false,exec)

  # BLOCK 81 freq:13
  # PRED: 80 [29.0%]  (true,exec)
  D.40823_183 = session_26(D)->channel;
  D.40993_184 = switch_channel_test_flag_partner (D.40823_183, 36);
  if (D.40993_184 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;
  # SUCC: 82 [29.0%]  (true,exec) 83 [71.0%]  (false,exec)

  # BLOCK 82 freq:4
  # PRED: 81 [29.0%]  (true,exec)
  D.40834_185 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_185, 15);
  D.40823_186 = session_26(D)->channel;
  D.40996_187 = switch_channel_get_name (D.40823_186);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7656, session_26(D), 7, "%s activate passthru 2833 mode.\n", D.40996_187);
  # SUCC: 83 [100.0%]  (fallthru,exec)

  # BLOCK 83 freq:45
  # PRED: 80 [71.0%]  (false,exec) 81 [71.0%]  (false,exec) 82 [100.0%]  (fallthru,exec)
  D.40823_188 = session_26(D)->channel;
  val_189 = switch_channel_get_variable_dup (D.40823_188, "rtp_notimer_during_bridge", 1, -1);
  # DEBUG val => val_189
  if (val_189 != 0B)
    goto <bb 84>;
  else
    goto <bb 85>;
  # SUCC: 84 [85.0%]  (true,exec) 85 [15.0%]  (false,exec)

  # BLOCK 84 freq:38
  # PRED: 83 [85.0%]  (true,exec)
  ok_190 = switch_true (val_189);
  # DEBUG ok => ok_190
  goto <bb 86>;
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 85 freq:7
  # PRED: 83 [15.0%]  (false,exec)
  D.40823_191 = session_26(D)->channel;
  D.41000_192 = switch_channel_test_flag (D.40823_191, 105);
  ok_193 = (int) D.41000_192;
  # DEBUG ok => ok_193
  # SUCC: 86 [100.0%]  (fallthru,exec)

  # BLOCK 86 freq:45
  # PRED: 84 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec)
  # ok_18 = PHI <ok_190(84), ok_193(85)>
  # DEBUG ok => ok_18
  if (ok_18 != 0)
    goto <bb 87>;
  else
    goto <bb 89>;
  # SUCC: 87 [29.0%]  (true,exec) 89 [71.0%]  (false,exec)

  # BLOCK 87 freq:13
  # PRED: 86 [29.0%]  (true,exec)
  D.40834_194 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41003_195 = switch_rtp_test_flag (D.40834_194, 3);
  if (D.41003_195 == 0)
    goto <bb 88>;
  else
    goto <bb 89>;
  # SUCC: 88 [50.0%]  (true,exec) 89 [50.0%]  (false,exec)

  # BLOCK 88 freq:7
  # PRED: 87 [50.0%]  (true,exec)
  # DEBUG ok => 0
  # SUCC: 89 [100.0%]  (fallthru,exec)

  # BLOCK 89 freq:45
  # PRED: 86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 88 [100.0%]  (fallthru,exec)
  # ok_19 = PHI <ok_18(86), ok_18(87), 0(88)>
  # DEBUG ok => ok_19
  if (ok_19 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;
  # SUCC: 90 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

  # BLOCK 90 freq:13
  # PRED: 89 [29.0%]  (true,exec)
  D.40834_197 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_197, 3);
  D.40823_198 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_198, 99, 1);
  # SUCC: 91 [100.0%]  (fallthru,exec)

  # BLOCK 91 freq:45
  # PRED: 89 [71.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
  if (ok_19 != 0)
    goto <bb 92>;
  else
    goto <bb 93>;
  # SUCC: 92 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

  # BLOCK 92 freq:22
  # PRED: 91 [50.0%]  (true,exec)
  D.40823_199 = session_26(D)->channel;
  D.41011_200 = switch_channel_test_flag (D.40823_199, 99);
  if (D.41011_200 != 0)
    goto <bb 96>;
  else
    goto <bb 93>;
  # SUCC: 96 [50.0%]  (true,exec) 93 [50.0%]  (false,exec)

  # BLOCK 93 freq:34
  # PRED: 91 [50.0%]  (false,exec) 92 [50.0%]  (false,exec)
  D.40823_202 = session_26(D)->channel;
  val_203 = switch_channel_get_variable_dup (D.40823_202, "rtp_autoflush_during_bridge", 1, -1);
  # DEBUG val => val_203
  if (val_203 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;
  # SUCC: 94 [69.8%]  (true,exec) 95 [30.2%]  (false,exec)

  # BLOCK 94 freq:24
  # PRED: 93 [69.8%]  (true,exec)
  ok_204 = switch_true (val_203);
  # DEBUG ok => ok_204
  goto <bb 96>;
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 95 freq:10
  # PRED: 93 [30.2%]  (false,exec)
  D.41016_205 = smh_27->media_flags[14];
  ok_206 = (int) D.41016_205;
  # DEBUG ok => ok_206
  # SUCC: 96 [100.0%]  (fallthru,exec)

  # BLOCK 96 freq:45
  # PRED: 92 [50.0%]  (true,exec) 94 [100.0%]  (fallthru,exec) 95 [100.0%]  (fallthru,exec)
  # ok_20 = PHI <0(92), ok_204(94), ok_206(95)>
  # DEBUG ok => ok_20
  if (ok_20 != 0)
    goto <bb 97>;
  else
    goto <bb 98>;
  # SUCC: 97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

  # BLOCK 97 freq:22
  # PRED: 96 [50.0%]  (true,exec)
  D.40834_207 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_207, 1);
  D.40823_208 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_208, 104, 1);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 98 freq:22
  # PRED: 96 [50.0%]  (false,exec)
  D.40834_209 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_209, 0);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 99 freq:155
  # PRED: 7 [8.3%]  (exec)
<L126>:
  D.40834_210 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41020_211 = switch_rtp_ready (D.40834_210);
  if (D.41020_211 != 0)
    goto <bb 100>;
  else
    goto <bb 164> (end);
  # SUCC: 100 [50.0%]  (true,exec) 164 [50.0%]  (false,exec)

  # BLOCK 100 freq:78
  # PRED: 99 [50.0%]  (true,exec)
  D.40988_212 = smh_27->flags;
  D.41023_213 = D.40988_212 & 4;
  if (D.41023_213 != 0)
    goto <bb 101>;
  else
    goto <bb 103>;
  # SUCC: 101 [29.0%]  (true,exec) 103 [71.0%]  (false,exec)

  # BLOCK 101 freq:22
  # PRED: 100 [29.0%]  (true,exec)
  D.40988_214 = smh_27->flags;
  D.41026_215 = D.40988_214 & 4294967291;
  smh_27->flags = D.41026_215;
  D.40823_216 = session_26(D)->channel;
  D.41027_217 = switch_channel_test_flag (D.40823_216, 57);
  if (D.41027_217 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;
  # SUCC: 102 [29.0%]  (true,exec) 103 [71.0%]  (false,exec)

  # BLOCK 102 freq:7
  # PRED: 101 [29.0%]  (true,exec)
  D.40823_218 = session_26(D)->channel;
  D.41030_219 = switch_channel_get_name (D.40823_218);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7704, session_26(D), 7, "%s RESUME Jitterbuffer\n", D.41030_219);
  D.40834_220 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_220, 0);
  # SUCC: 103 [100.0%]  (fallthru,exec)

  # BLOCK 103 freq:78
  # PRED: 100 [71.0%]  (false,exec) 101 [71.0%]  (false,exec) 102 [100.0%]  (fallthru,exec)
  D.40834_221 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41031_222 = switch_rtp_test_flag (D.40834_221, 15);
  if (D.41031_222 != 0)
    goto <bb 104>;
  else
    goto <bb 105>;
  # SUCC: 104 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

  # BLOCK 104 freq:22
  # PRED: 103 [29.0%]  (true,exec)
  D.40823_223 = session_26(D)->channel;
  D.41034_224 = switch_channel_get_name (D.40823_223);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7712, session_26(D), 7, "%s deactivate passthru 2833 mode.\n", D.41034_224);
  D.40834_225 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_225, 15);
  # SUCC: 105 [100.0%]  (fallthru,exec)

  # BLOCK 105 freq:78
  # PRED: 103 [71.0%]  (false,exec) 104 [100.0%]  (fallthru,exec)
  D.40823_226 = session_26(D)->channel;
  D.41035_227 = switch_channel_test_flag (D.40823_226, 99);
  if (D.41035_227 != 0)
    goto <bb 106>;
  else
    goto <bb 110>;
  # SUCC: 106 [29.0%]  (true,exec) 110 [71.0%]  (false,exec)

  # BLOCK 106 freq:22
  # PRED: 105 [29.0%]  (true,exec)
  D.40834_228 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41038_229 = switch_rtp_test_flag (D.40834_228, 12);
  if (D.41038_229 == 0)
    goto <bb 107>;
  else
    goto <bb 109>;
  # SUCC: 107 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

  # BLOCK 107 freq:7
  # PRED: 106 [29.0%]  (true,exec)
  D.40834_230 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41041_231 = switch_rtp_test_flag (D.40834_230, 19);
  if (D.41041_231 == 0)
    goto <bb 108>;
  else
    goto <bb 109>;
  # SUCC: 108 [29.0%]  (true,exec) 109 [71.0%]  (false,exec)

  # BLOCK 108 freq:2
  # PRED: 107 [29.0%]  (true,exec)
  D.40834_232 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_232, 3);
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:22
  # PRED: 106 [71.0%]  (false,exec) 107 [71.0%]  (false,exec) 108 [100.0%]  (fallthru,exec)
  D.40823_233 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_233, 99);
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:78
  # PRED: 105 [71.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
  D.40823_234 = session_26(D)->channel;
  D.41044_235 = switch_channel_test_flag (D.40823_234, 104);
  if (D.41044_235 != 0)
    goto <bb 111>;
  else
    goto <bb 112>;
  # SUCC: 111 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

  # BLOCK 111 freq:39
  # PRED: 110 [50.0%]  (true,exec)
  D.40834_236 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_236, 2);
  D.40823_237 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_237, 104);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 112 freq:39
  # PRED: 110 [50.0%]  (false,exec)
  D.40834_238 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_238, 0);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 113 freq:155
  # PRED: 7 [8.3%]  (exec)
<L144>:
  D.40834_239 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41048_240 = switch_rtp_ready (D.40834_239);
  if (D.41048_240 != 0)
    goto <bb 114>;
  else
    goto <bb 164> (end);
  # SUCC: 114 [29.0%]  (true,exec) 164 [71.0%]  (false,exec)

  # BLOCK 114 freq:45
  # PRED: 113 [29.0%]  (true,exec)
  D.40834_241 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_241, 0);
  goto <bb 164> (end);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:155
  # PRED: 7 [8.3%]  (exec)
<L147>:
  D.41051_242 = session_26(D)->track_duration;
  if (D.41051_242 != 0)
    goto <bb 116>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 116 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 116 freq:45
  # PRED: 115 [29.0%]  (true,exec)
  D.41051_243 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_243);
  goto <bb 135> (<L211>);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 117 freq:155
  # PRED: 7 [8.3%]  (exec)
<L150>:
  # DEBUG ip => 0B
  # DEBUG port => 0B
  D.40823_246 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_246, 15, 1);
  MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;
  MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;
  switch_core_media_set_local_sdp (session_26(D), 0B, 0);
  D.40823_247 = session_26(D)->channel;
  D.41054_248 = switch_channel_get_variable_dup (D.40823_247, "bypass_keep_codec", 1, -1);
  D.41055_249 = switch_true (D.41054_248);
  if (D.41055_249 != 0)
    goto <bb 118>;
  else
    goto <bb 119>;
  # SUCC: 118 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

  # BLOCK 118 freq:45
  # PRED: 117 [29.0%]  (true,exec)
  D.40823_251 = session_26(D)->channel;
  D.41058_252 = switch_channel_get_variable_dup (D.40823_251, "ep_codec_string", 1, -1);
  switch_channel_set_variable_var_check (D.40823_251, "absolute_codec_string", D.41058_252, 1);
  # SUCC: 119 [100.0%]  (fallthru,exec)

  # BLOCK 119 freq:155
  # PRED: 117 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
  D.40823_253 = session_26(D)->channel;
  uuid_254 = switch_channel_get_partner_uuid (D.40823_253);
  # DEBUG uuid => uuid_254
  if (uuid_254 != 0B)
    goto <bb 120>;
  else
    goto <bb 131>;
  # SUCC: 120 [69.8%]  (true,exec) 131 [30.2%]  (false,exec)

  # BLOCK 120 freq:108
  # PRED: 119 [69.8%]  (true,exec)
  other_session_255 = switch_core_session_perform_locate (uuid_254, "src/switch_core_media.c", &__func__, 7768);
  # DEBUG other_session => other_session_255
  if (other_session_255 != 0B)
    goto <bb 121>;
  else
    goto <bb 131>;
  # SUCC: 121 [69.8%]  (true,exec) 131 [30.2%]  (false,exec)

  # BLOCK 121 freq:76
  # PRED: 120 [69.8%]  (true,exec)
  other_channel_256 = switch_core_session_get_channel (other_session_255);
  # DEBUG other_channel => other_channel_256
  ip_257 = switch_channel_get_variable_dup (other_channel_256, "remote_media_ip", 1, -1);
  # DEBUG ip => ip_257
  port_258 = switch_channel_get_variable_dup (other_channel_256, "remote_media_port", 1, -1);
  # DEBUG port => port_258
  switch_core_session_rwunlock (other_session_255);
  D.41063_259 = ip_257 != 0B;
  D.41064_260 = port_258 != 0B;
  D.41065_261 = D.41063_259 && D.41064_260;
  if (D.41065_261 != 0)
    goto <bb 122>;
  else
    goto <bb 131>;
  # SUCC: 122 [29.0%]  (true,exec) 131 [71.0%]  (false,exec)

  # BLOCK 122 freq:22
  # PRED: 121 [29.0%]  (true,exec)
  switch_core_media_prepare_codecs (session_26(D), 1);
  # DEBUG engine => D#39
  pmap_488 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].payload_map;
  # DEBUG pmap => pmap_488
  goto <bb 124>;
  # SUCC: 124 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:227
  # PRED: 125 [95.5%]  (true,exec)
  pmap_489->negotiated = 0;
  pmap_489->current = 0;
  pmap_490 = pmap_489->next;
  # DEBUG pmap => pmap_490
  # SUCC: 124 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 124 freq:249
  # PRED: 122 [100.0%]  (fallthru,exec) 123 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_489 = PHI <pmap_488(122), pmap_490(123)>
  # DEBUG pmap => pmap_489
  if (pmap_489 != 0B)
    goto <bb 125>;
  else
    goto <bb 126>;
  # SUCC: 125 [95.5%]  (true,exec) 126 [4.5%]  (false,exec)

  # BLOCK 125 freq:238
  # PRED: 124 [95.5%]  (true,exec)
  D.48246_491 = pmap_489->allocated;
  if (D.48246_491 != 0)
    goto <bb 123>;
  else
    goto <bb 126>;
  # SUCC: 123 [95.5%]  (true,exec) 126 [4.5%]  (false,exec)

  # BLOCK 126 freq:22
  # PRED: 125 [4.5%]  (false,exec) 124 [4.5%]  (false,exec)
  # DEBUG engine => D#38
  pmap_492 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].payload_map;
  # DEBUG pmap => pmap_492
  goto <bb 128>;
  # SUCC: 128 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:227
  # PRED: 129 [95.5%]  (true,exec)
  pmap_493->negotiated = 0;
  pmap_493->current = 0;
  pmap_494 = pmap_493->next;
  # DEBUG pmap => pmap_494
  # SUCC: 128 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 128 freq:249
  # PRED: 126 [100.0%]  (fallthru,exec) 127 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_493 = PHI <pmap_492(126), pmap_494(127)>
  # DEBUG pmap => pmap_493
  if (pmap_493 != 0B)
    goto <bb 129>;
  else
    goto <bb 130>;
  # SUCC: 129 [95.5%]  (true,exec) 130 [4.5%]  (false,exec)

  # BLOCK 129 freq:238
  # PRED: 128 [95.5%]  (true,exec)
  D.48249_495 = pmap_493->allocated;
  if (D.48249_495 != 0)
    goto <bb 127>;
  else
    goto <bb 130>;
  # SUCC: 127 [95.5%]  (true,exec) 130 [4.5%]  (false,exec)

  # BLOCK 130 freq:22
  # PRED: 129 [4.5%]  (false,exec) 128 [4.5%]  (false,exec)
  # DEBUG __nptr => port_258
  D.48251_496 = strtol (port_258, 0B, 10);
  D.41069_263 = (short unsigned int) D.48251_496;
  switch_core_media_gen_local_sdp (session_26(D), 0, ip_257, D.41069_263, 0B, 1);
  # SUCC: 131 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:155
  # PRED: 119 [30.2%]  (false,exec) 120 [30.2%]  (false,exec) 121 [71.0%]  (false,exec) 130 [100.0%]  (fallthru,exec)
  D.41070_264 = smh_27->mparams;
  D.41071_265 = D.41070_264->local_sdp_str;
  if (D.41071_265 == 0B)
    goto <bb 132>;
  else
    goto <bb 133>;
  # SUCC: 132 [6.7%]  (true,exec) 133 [93.3%]  (false,exec)

  # BLOCK 132 freq:10
  # PRED: 131 [6.7%]  (true,exec)
  switch_core_media_absorb_sdp (session_26(D));
  # SUCC: 133 [100.0%]  (fallthru,exec)

  # BLOCK 133 freq:155
  # PRED: 131 [93.3%]  (false,exec) 132 [100.0%]  (fallthru,exec)
  D.41051_266 = session_26(D)->track_duration;
  if (D.41051_266 != 0)
    goto <bb 134>;
  else
    goto <bb 135> (<L211>);
  # SUCC: 134 [29.0%]  (true,exec) 135 [71.0%]  (false,exec)

  # BLOCK 134 freq:45
  # PRED: 133 [29.0%]  (true,exec)
  D.41051_267 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_267);
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:1030
  # PRED: 9 [100.0%]  (fallthru,exec) 11 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 116 [100.0%]  (fallthru,exec) 134 [100.0%]  (fallthru,exec) 7 [8.3%]  (exec) 8 [71.0%]  (false,exec) 10 [30.2%]  (false,exec) 12 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec) 16 [50.0%]  (false,exec) 44 [71.0%]  (false,exec) 45 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,exec) 115 [71.0%]  (false,exec) 133 [71.0%]  (false,exec)
<L211>:
  D.41076_268 = smh_27->mutex;
  if (D.41076_268 != 0B)
    goto <bb 136>;
  else
    goto <bb 137>;
  # SUCC: 136 [69.8%]  (true,exec) 137 [30.2%]  (false,exec)

  # BLOCK 136 freq:719
  # PRED: 135 [69.8%]  (true,exec)
  D.41076_269 = smh_27->mutex;
  switch_mutex_lock (D.41076_269);
  # SUCC: 137 [100.0%]  (fallthru,exec)

  # BLOCK 137 freq:1030
  # PRED: 135 [30.2%]  (false,exec) 136 [100.0%]  (fallthru,exec)
  D.40823_270 = session_26(D)->channel;
  D.41081_271 = switch_channel_check_signal (D.40823_270, 1);
  if (D.41081_271 != 0)
    goto <bb 162> (end_lock);
  else
    goto <bb 138>;
  # SUCC: 162 [71.0%]  (true,exec) 138 [29.0%]  (false,exec)

  # BLOCK 138 freq:299
  # PRED: 137 [29.0%]  (false,exec)
  D.40823_272 = session_26(D)->channel;
  D.41083_273 = switch_channel_get_state (D.40823_272);
  if (D.41083_273 > 9)
    goto <bb 162> (end_lock);
  else
    goto <bb 139>;
  # SUCC: 162 [50.0%]  (true,exec) 139 [50.0%]  (false,exec)

  # BLOCK 139 freq:149
  # PRED: 138 [50.0%]  (false,exec)
  D.40827_274 = msg_35(D)->message_id;
  switch (D.40827_274) <default: end_lock, case 30: <L198>, case 37: <L186>, case 40: <L170>>
  # SUCC: 162 [25.0%]  (exec) 160 [25.0%]  (exec) 152 [25.0%]  (exec) 140 [25.0%]  (exec)

  # BLOCK 140 freq:37
  # PRED: 139 [25.0%]  (exec)
<L170>:
  D.40845_275 = msg_35(D)->string_arg;
  if (D.40845_275 != 0B)
    goto <bb 141>;
  else
    goto <bb 149>;
  # SUCC: 141 [69.8%]  (true,exec) 149 [30.2%]  (false,exec)

  # BLOCK 141 freq:26
  # PRED: 140 [69.8%]  (true,exec)
  D.40823_276 = session_26(D)->channel;
  switch_channel_set_variable_var_check (D.40823_276, "absolute_codec_string", 0B, 1);
  D.40845_277 = msg_35(D)->string_arg;
  D.41086_278 = *D.40845_277;
  if (D.41086_278 == 61)
    goto <bb 142>;
  else
    goto <bb 143>;
  # SUCC: 142 [13.7%]  (true,exec) 143 [86.3%]  (false,exec)

  # BLOCK 142 freq:4
  # PRED: 141 [13.7%]  (true,exec)
  D.40823_279 = session_26(D)->channel;
  D.40845_280 = msg_35(D)->string_arg;
  switch_channel_set_variable_var_check (D.40823_279, "codec_string", D.40845_280, 1);
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 143 freq:22
  # PRED: 141 [86.3%]  (false,exec)
  D.40823_281 = session_26(D)->channel;
  D.41091_282 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  D.41092_283 = D.41091_282->rm_encoding;
  if (D.41092_283 != 0B)
    goto <bb 144>;
  else
    goto <bb 145>;
  # SUCC: 144 [85.0%]  (true,exec) 145 [15.0%]  (false,exec)

  # BLOCK 144 freq:19
  # PRED: 143 [85.0%]  (true,exec)
  D.41091_284 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  iftmp.11_285 = D.41091_284->rm_encoding;
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:22
  # PRED: 144 [100.0%]  (fallthru,exec) 143 [15.0%]  (false,exec)
  # iftmp.11_23 = PHI <iftmp.11_285(144), ""(143)>
  D.41091_287 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  D.41092_288 = D.41091_287->rm_encoding;
  if (D.41092_288 != 0B)
    goto <bb 147>;
  else
    goto <bb 146>;
  # SUCC: 147 [85.0%]  (true,exec) 146 [15.0%]  (false,exec)

  # BLOCK 146 freq:3
  # PRED: 145 [15.0%]  (false,exec)
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 147 freq:22
  # PRED: 145 [85.0%]  (true,exec) 146 [100.0%]  (fallthru,exec)
  # iftmp.12_24 = PHI <","(145), ""(146)>
  D.41100_291 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].cur_payload_map;
  D.41101_292 = D.41100_291->rm_encoding;
  D.40845_293 = msg_35(D)->string_arg;
  switch_channel_set_variable_printf (D.40823_281, "codec_string", "=%s%s%s,%s", iftmp.11_23, iftmp.12_24, D.41101_292, D.40845_293);
  # SUCC: 148 [100.0%]  (fallthru,exec)

  # BLOCK 148 freq:26
  # PRED: 142 [100.0%]  (fallthru,exec) 147 [100.0%]  (fallthru,exec)
  MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;
  MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;
  D.40823_294 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_294, 98);
  switch_core_media_prepare_codecs (session_26(D), 1);
  switch_core_media_check_video_codecs (session_26(D));
  switch_core_media_gen_local_sdp (session_26(D), 0, 0B, 0, 0B, 1);
  # SUCC: 149 [100.0%]  (fallthru,exec)

  # BLOCK 149 freq:37
  # PRED: 140 [30.2%]  (false,exec) 148 [100.0%]  (fallthru,exec)
  switch_media_handle_set_media_flag (smh_27, 7);
  D.40838_295 = msg_35(D)->numeric_arg;
  if (D.40838_295 != 0)
    goto <bb 150>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 150 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

  # BLOCK 150 freq:11
  # PRED: 149 [29.0%]  (true,exec)
  D.41104_296 = switch_core_session_perform_get_partner (session_26(D), &nsession, "src/switch_core_media.c", &__func__, 7835);
  if (D.41104_296 == 0)
    goto <bb 151>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 151 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

  # BLOCK 151 freq:3
  # PRED: 150 [29.0%]  (true,exec)
  msg_35(D)->numeric_arg = 0;
  nsession.13_297 = nsession;
  switch_core_session_perform_receive_message (nsession.13_297, msg_35(D), "src/switch_core_media.c", &__func__, 7837);
  nsession.13_298 = nsession;
  switch_core_session_rwunlock (nsession.13_298);
  goto <bb 162> (end_lock);
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 152 freq:37
  # PRED: 139 [25.0%]  (exec)
<L186>:
  D.40834_299 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41108_300 = switch_rtp_ready (D.40834_299);
  if (D.41108_300 != 0)
    goto <bb 153>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 153 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

  # BLOCK 153 freq:19
  # PRED: 152 [50.0%]  (true,exec)
  D.40838_301 = msg_35(D)->numeric_arg;
  if (D.40838_301 != 0)
    goto <bb 154>;
  else
    goto <bb 157>;
  # SUCC: 154 [29.0%]  (true,exec) 157 [71.0%]  (false,exec)

  # BLOCK 154 freq:5
  # PRED: 153 [29.0%]  (true,exec)
  D.40823_302 = session_26(D)->channel;
  D.41113_303 = switch_channel_test_flag (D.40823_302, 57);
  if (D.41113_303 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;
  # SUCC: 155 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

  # BLOCK 155 freq:2
  # PRED: 154 [29.0%]  (true,exec)
  D.40834_304 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_304, 1);
  D.40988_305 = smh_27->flags;
  D.40989_306 = D.40988_305 | 4;
  smh_27->flags = D.40989_306;
  # SUCC: 156 [100.0%]  (fallthru,exec)

  # BLOCK 156 freq:5
  # PRED: 154 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
  D.40834_307 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_307, 2);
  goto <bb 162> (end_lock);
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 157 freq:13
  # PRED: 153 [71.0%]  (false,exec)
  D.40988_308 = smh_27->flags;
  D.41023_309 = D.40988_308 & 4;
  if (D.41023_309 != 0)
    goto <bb 158>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 158 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

  # BLOCK 158 freq:4
  # PRED: 157 [29.0%]  (true,exec)
  D.40988_310 = smh_27->flags;
  D.41026_311 = D.40988_310 & 4294967291;
  smh_27->flags = D.41026_311;
  D.40823_312 = session_26(D)->channel;
  D.41119_313 = switch_channel_test_flag (D.40823_312, 57);
  if (D.41119_313 != 0)
    goto <bb 159>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 159 [29.0%]  (true,exec) 162 [71.0%]  (false,exec)

  # BLOCK 159 freq:1
  # PRED: 158 [29.0%]  (true,exec)
  D.40834_314 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_314, 0);
  goto <bb 162> (end_lock);
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 160 freq:37
  # PRED: 139 [25.0%]  (exec)
<L198>:
  D.40823_315 = session_26(D)->channel;
  t38_options_316 = switch_channel_get_private (D.40823_315, "t38_options");
  # DEBUG t38_options => t38_options_316
  if (t38_options_316 != 0B)
    goto <bb 161>;
  else
    goto <bb 162> (end_lock);
  # SUCC: 161 [69.8%]  (true,exec) 162 [30.2%]  (false,exec)

  # BLOCK 161 freq:26
  # PRED: 160 [69.8%]  (true,exec)
  switch_core_media_start_udptl (session_26(D), t38_options_316);
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 162 freq:1030
  # PRED: 138 [50.0%]  (true,exec) 150 [71.0%]  (false,exec) 156 [100.0%]  (fallthru,exec) 160 [30.2%]  (false,exec) 149 [71.0%]  (false,exec) 151 [100.0%]  (fallthru,exec) 152 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec) 158 [71.0%]  (false,exec) 157 [71.0%]  (false,exec) 139 [25.0%]  (exec) 161 [100.0%]  (fallthru,exec) 137 [71.0%]  (true,exec)
  # status_1 = PHI <1(138), 0(150), 0(156), 0(160), 0(149), 0(151), 0(152), 0(159), 0(158), 0(157), 0(139), 0(161), 1(137)>
end_lock:
  # DEBUG status => status_1
  D.41076_318 = smh_27->mutex;
  if (D.41076_318 != 0B)
    goto <bb 163>;
  else
    goto <bb 164> (end);
  # SUCC: 163 [69.8%]  (true,exec) 164 [30.2%]  (false,exec)

  # BLOCK 163 freq:719
  # PRED: 162 [69.8%]  (true,exec)
  D.41076_319 = smh_27->mutex;
  switch_mutex_unlock (D.41076_319);
  # SUCC: 164 [100.0%]  (fallthru,exec)

  # BLOCK 164 freq:1862
  # PRED: 19 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 55 [50.0%]  (false,exec) 72 [71.0%]  (false,exec) 97 [100.0%]  (fallthru,exec) 111 [100.0%]  (fallthru,exec) 114 [100.0%]  (fallthru,exec) 162 [30.2%]  (false,exec) 163 [100.0%]  (fallthru,exec) 51 [50.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 70 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec) 59 [50.0%]  (false,exec) 71 [30.2%]  (false,exec) 73 [100.0%]  (fallthru,exec) 74 [71.0%]  (false,exec) 98 [100.0%]  (fallthru,exec) 99 [50.0%]  (false,exec) 112 [100.0%]  (fallthru,exec) 113 [71.0%]  (false,exec)
  # status_2 = PHI <0(19), 0(21), status_109(30), 0(55), 0(72), 0(97), 0(111), 0(114), status_1(162), status_1(163), 0(51), 0(68), 0(70), 0(69), 0(59), 0(71), 0(73), 0(74), 0(98), 0(99), 0(112), 0(113)>
end:
  # DEBUG status => status_2
  D.40823_320 = session_26(D)->channel;
  D.41128_321 = switch_channel_check_signal (D.40823_320, 1);
  if (D.41128_321 != 0)
    goto <bb 166>;
  else
    goto <bb 165>;
  # SUCC: 166 [71.0%]  (true,exec) 165 [29.0%]  (false,exec)

  # BLOCK 165 freq:540
  # PRED: 164 [29.0%]  (false,exec)
  D.40823_322 = session_26(D)->channel;
  D.41130_323 = switch_channel_get_state (D.40823_322);
  if (D.41130_323 > 9)
    goto <bb 166>;
  else
    goto <bb 167>;
  # SUCC: 166 [50.0%]  (true,exec) 167 [50.0%]  (false,exec)

  # BLOCK 166 freq:1592
  # PRED: 164 [71.0%]  (true,exec) 165 [50.0%]  (true,exec)
  # DEBUG status => 1
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167 freq:1862
  # PRED: 165 [50.0%]  (false,exec) 166 [100.0%]  (fallthru,exec)
  # status_3 = PHI <status_2(165), 1(166)>
  # DEBUG status => status_3
  # SUCC: 168 [100.0%]  (fallthru,exec)

  # BLOCK 168 freq:9995
  # PRED: 4 [21.6%]  (true,exec) 6 [39.0%]  (true,exec) 167 [100.0%]  (fallthru,exec) 5 [61.0%]  (true,exec)
  # status_21 = PHI <1(4), 1(6), status_3(167), 1(5)>
  return status_21;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_break (switch_core_media_break)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_break

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_break (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_break";
  struct switch_media_handle_t * smh;
  uint8_t D.40812;
  struct switch_rtp_t * D.40811;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7902, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40811_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40812_5 = switch_rtp_ready (D.40811_4);
  if (D.40812_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40811_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_break (D.40811_6);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_kill_socket (switch_core_media_kill_socket)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_kill_socket

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_kill_socket (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_kill_socket";
  struct switch_media_handle_t * smh;
  uint8_t D.40803;
  struct switch_rtp_t * D.40802;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7918, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40802_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40803_5 = switch_rtp_ready (D.40802_4);
  if (D.40803_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40802_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_kill_socket (D.40802_6);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_queue_rfc2833 (switch_core_media_queue_rfc2833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_queue_rfc2833

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_queue_rfc2833 (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_queue_rfc2833";
  struct switch_media_handle_t * smh;
  uint8_t D.40794;
  struct switch_rtp_t * D.40793;
  switch_status_t D.40792;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7934, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40793_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40794_7 = switch_rtp_ready (D.40793_6);
  if (D.40794_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40793_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40792_10 = switch_rtp_queue_rfc2833 (D.40793_8, dtmf_9(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
  # D.40792_1 = PHI <1(4), D.40792_10(6), 1(5)>
  return D.40792_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_queue_rfc2833_in (switch_core_media_queue_rfc2833_in)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_queue_rfc2833_in

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_queue_rfc2833_in (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_queue_rfc2833_in";
  struct switch_media_handle_t * smh;
  uint8_t D.40784;
  struct switch_rtp_t * D.40783;
  switch_status_t D.40782;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7952, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40783_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40784_7 = switch_rtp_ready (D.40783_6);
  if (D.40784_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40783_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40782_10 = switch_rtp_queue_rfc2833_in (D.40783_8, dtmf_9(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
  # D.40782_1 = PHI <1(4), D.40782_10(6), 1(5)>
  return D.40782_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_ready (switch_core_media_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 5 predicted to even probabilities
1 edges in bb 6 predicted to even probabilities

;; Function switch_core_media_ready

;; 
7 basic blocks, 7 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  6 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_ready (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_ready";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40776;
  uint8_t D.40775;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7970, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40776_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40775_7 = switch_rtp_ready (D.40776_6);
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  # D.40775_1 = PHI <0(4), D.40775_7(5)>
  return D.40775_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_rtp_flag (switch_core_media_set_rtp_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_set_rtp_flag

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_set_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40767;
  struct switch_rtp_t * D.40766;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 7984, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40766_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40767_5 = switch_rtp_ready (D.40766_4);
  if (D.40767_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40766_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_flag (D.40766_6, flag_7(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_clear_rtp_flag (switch_core_media_clear_rtp_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_clear_rtp_flag

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_clear_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_clear_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40758;
  struct switch_rtp_t * D.40757;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8000, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40757_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40758_5 = switch_rtp_ready (D.40757_4);
  if (D.40758_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40757_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_clear_flag (D.40757_6, flag_7(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_telephony_event (switch_core_media_set_telephony_event)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_set_telephony_event

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_telephony_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_telephony_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40749;
  struct switch_rtp_t * D.40748;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8016, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40748_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40749_5 = switch_rtp_ready (D.40748_4);
  if (D.40749_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40748_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_event (D.40748_6, te_7(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_telephony_recv_event (switch_core_media_set_telephony_recv_event)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_set_telephony_recv_event

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_telephony_recv_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[43] = "switch_core_media_set_telephony_recv_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40740;
  struct switch_rtp_t * D.40739;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8032, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40739_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40740_5 = switch_rtp_ready (D.40739_4);
  if (D.40740_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40739_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_recv_event (D.40739_6, te_7(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [61.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_stats (switch_core_media_get_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 1.9%
  first match heuristics (ignored): 15.0%
  combined heuristics: 1.9%
  pointer (on trees) heuristics: 15.0%
  null return heuristics: 10.0%
Predictions for bb 5
  DS theory heuristics: 95.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 95.4%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
  null return heuristics: 90.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_get_stats

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [1.9%]  (true,exec) 5 [98.1%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [98.1%]  (false,exec)
Successors:  6 [95.4%]  (true,exec) 7 [4.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [95.4%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [1.9%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [4.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_stats (struct switch_core_session_t * session, switch_media_type_t type, struct switch_memory_pool_t * pool)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_get_stats";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40731;
  struct switch_rtp_stats_t * D.40730;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8048, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [1.9%]  (true,exec) 5 [98.1%]  (false,exec)

  # BLOCK 5 freq:9804
  # PRED: 4 [98.1%]  (false,exec)
  D.40731_6 = smh_3->engines[type_5(D)].rtp_session;
  if (D.40731_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [95.4%]  (true,exec) 7 [4.6%]  (false,exec)

  # BLOCK 6 freq:9355
  # PRED: 5 [95.4%]  (true,exec)
  D.40731_7 = smh_3->engines[type_5(D)].rtp_session;
  D.40730_9 = switch_rtp_get_stats (D.40731_7, pool_8(D));
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [1.9%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [4.6%]  (false,exec)
  # D.40730_1 = PHI <0B(4), D.40730_9(6), 0B(5)>
  return D.40730_1;
  # SUCC: EXIT [100.0%] 

}



;; Function set_stats (set_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
;; 2 succs { 3 58 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 56 57 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
Predictions for bb 2
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 3
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 4 predicted to even probabilities
Predictions for bb 5
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 6 predicted to even probabilities
Predictions for bb 7
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 10 predicted to even probabilities
Predictions for bb 11
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 12 predicted to even probabilities
Predictions for bb 13
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 30 predicted to even probabilities
Predictions for bb 31
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 32 predicted to even probabilities
Predictions for bb 33
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 34 predicted to even probabilities
Predictions for bb 35
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 42 predicted to even probabilities
Predictions for bb 43
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 44 predicted to even probabilities
Predictions for bb 45
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 46 predicted to even probabilities
Predictions for bb 47
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 48 predicted to even probabilities
Predictions for bb 49
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 50 predicted to even probabilities
Predictions for bb 51
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 52 predicted to even probabilities
Predictions for bb 53
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 54 predicted to even probabilities
Predictions for bb 55
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 56 predicted to even probabilities
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities

;; Function set_stats

;; 
59 basic blocks, 86 edges, last basic block 59.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [78.3%]  (true,exec) 58 [21.6%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.3%]  (true,exec)
Successors:  4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (true,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 3 [15.0%]  (false,exec)
Successors:  6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 5 [15.0%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 9 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec)
Successors:  10 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [100.0%]  (fallthru,exec) 9 [15.0%]  (false,exec)
Successors:  12 [85.0%]  (true,exec) 13 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [100.0%]  (fallthru,exec) 11 [15.0%]  (false,exec)
Successors:  14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [85.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 13 [15.0%]  (false,exec)
Successors:  16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [85.0%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [100.0%]  (fallthru,exec) 15 [15.0%]  (false,exec)
Successors:  18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [100.0%]  (fallthru,exec) 17 [15.0%]  (false,exec)
Successors:  20 [85.0%]  (true,exec) 21 [15.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec)
Successors:  22 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [85.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 21 [15.0%]  (false,exec)
Successors:  24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [100.0%]  (fallthru,exec) 23 [15.0%]  (false,exec)
Successors:  26 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [85.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [100.0%]  (fallthru,exec) 25 [15.0%]  (false,exec)
Successors:  28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec)
Successors:  30 [85.0%]  (true,exec) 31 [15.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [85.0%]  (true,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [100.0%]  (fallthru,exec) 29 [15.0%]  (false,exec)
Successors:  32 [85.0%]  (true,exec) 33 [15.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [85.0%]  (true,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [100.0%]  (fallthru,exec) 31 [15.0%]  (false,exec)
Successors:  34 [85.0%]  (true,exec) 35 [15.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [85.0%]  (true,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [100.0%]  (fallthru,exec) 33 [15.0%]  (false,exec)
Successors:  36 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [85.0%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [100.0%]  (fallthru,exec) 35 [15.0%]  (false,exec)
Successors:  38 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [85.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [100.0%]  (fallthru,exec) 37 [15.0%]  (false,exec)
Successors:  40 [85.0%]  (true,exec) 41 [15.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [85.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [100.0%]  (fallthru,exec) 39 [15.0%]  (false,exec)
Successors:  42 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [85.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [100.0%]  (fallthru,exec) 41 [15.0%]  (false,exec)
Successors:  44 [85.0%]  (true,exec) 45 [15.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [85.0%]  (true,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [100.0%]  (fallthru,exec) 43 [15.0%]  (false,exec)
Successors:  46 [85.0%]  (true,exec) 47 [15.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [85.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 45 [15.0%]  (false,exec)
Successors:  48 [85.0%]  (true,exec) 49 [15.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [85.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [100.0%]  (fallthru,exec) 47 [15.0%]  (false,exec)
Successors:  50 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [85.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [100.0%]  (fallthru,exec) 49 [15.0%]  (false,exec)
Successors:  52 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [85.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [100.0%]  (fallthru,exec) 51 [15.0%]  (false,exec)
Successors:  54 [85.0%]  (true,exec) 55 [15.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (true,exec)
Successors:  55 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [100.0%]  (fallthru,exec) 53 [15.0%]  (false,exec)
Successors:  56 [85.0%]  (true,exec) 57 [15.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [85.0%]  (true,exec)
Successors:  57 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [100.0%]  (fallthru,exec) 55 [15.0%]  (false,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  2 [21.6%]  (false,exec) 57 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


set_stats (struct switch_core_session_t * session, switch_media_type_t type, const char * prefix)
{
  char var_val[35];
  char var_name[256];
  struct switch_channel_t * channel;
  struct switch_rtp_stats_t * stats;
  uint32_t D.46662;
  uint32_t D.46657;
  switch_size_t D.46652;
  switch_size_t D.46647;
  switch_size_t D.46642;
  switch_size_t D.46637;
  switch_size_t D.46632;
  switch_size_t D.46627;
  switch_size_t D.46622;
  double D.46617;
  double D.46612;
  switch_size_t D.46607;
  double D.46602;
  double D.46597;
  double D.46592;
  double D.46587;
  double D.46582;
  switch_size_t D.46577;
  switch_size_t D.46572;
  switch_size_t D.46567;
  switch_size_t D.46562;
  switch_size_t D.46557;
  switch_size_t D.46552;
  switch_size_t D.46547;
  switch_size_t D.46542;
  switch_size_t D.46537;
  switch_size_t D.46532;
  double D.46527;
  double D.46526;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);
  # DEBUG stats => stats_30
  channel_31 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_31
  var_name = "";
  var_val = "";
  if (stats_30 != 0B)
    goto <bb 3>;
  else
    goto <bb 58>;
  # SUCC: 3 [78.3%]  (true,exec) 58 [21.6%]  (false,exec)

  # BLOCK 3 freq:7835
  # PRED: 2 [78.3%]  (true,exec)
  D.46526_32 = stats_30->inbound.variance;
  D.46527_33 = sqrt (D.46526_32);
  stats_30->inbound.std_deviation = D.46527_33;
  if (prefix_34(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

  # BLOCK 4 freq:6660
  # PRED: 3 [85.0%]  (true,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:7835
  # PRED: 4 [100.0%]  (fallthru,exec) 3 [15.0%]  (false,exec)
  # prefix_1 = PHI <prefix_34(D)(4), ""(3)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");
  D.46532_37 = stats_30->inbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46532_37);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 6 freq:6660
  # PRED: 5 [85.0%]  (true,exec)
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:7835
  # PRED: 6 [100.0%]  (fallthru,exec) 5 [15.0%]  (false,exec)
  # prefix_2 = PHI <prefix_34(D)(6), ""(5)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");
  D.46537_40 = stats_30->inbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46537_40);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [85.0%]  (true,exec) 9 [15.0%]  (false,exec)

  # BLOCK 8 freq:6660
  # PRED: 7 [85.0%]  (true,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:7835
  # PRED: 8 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec)
  # prefix_3 = PHI <prefix_34(D)(8), ""(7)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");
  D.46542_43 = stats_30->inbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46542_43);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

  # BLOCK 10 freq:6660
  # PRED: 9 [85.0%]  (true,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:7835
  # PRED: 10 [100.0%]  (fallthru,exec) 9 [15.0%]  (false,exec)
  # prefix_4 = PHI <prefix_34(D)(10), ""(9)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");
  D.46547_46 = stats_30->inbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46547_46);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [85.0%]  (true,exec) 13 [15.0%]  (false,exec)

  # BLOCK 12 freq:6660
  # PRED: 11 [85.0%]  (true,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:7835
  # PRED: 12 [100.0%]  (fallthru,exec) 11 [15.0%]  (false,exec)
  # prefix_5 = PHI <prefix_34(D)(12), ""(11)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");
  D.46552_49 = stats_30->inbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46552_49);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

  # BLOCK 14 freq:6660
  # PRED: 13 [85.0%]  (true,exec)
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:7835
  # PRED: 14 [100.0%]  (fallthru,exec) 13 [15.0%]  (false,exec)
  # prefix_6 = PHI <prefix_34(D)(14), ""(13)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");
  D.46557_52 = stats_30->inbound.jb_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46557_52);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 16 freq:6660
  # PRED: 15 [85.0%]  (true,exec)
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:7835
  # PRED: 16 [100.0%]  (fallthru,exec) 15 [15.0%]  (false,exec)
  # prefix_7 = PHI <prefix_34(D)(16), ""(15)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");
  D.46562_55 = stats_30->inbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46562_55);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

  # BLOCK 18 freq:6660
  # PRED: 17 [85.0%]  (true,exec)
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:7835
  # PRED: 18 [100.0%]  (fallthru,exec) 17 [15.0%]  (false,exec)
  # prefix_8 = PHI <prefix_34(D)(18), ""(17)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");
  D.46567_58 = stats_30->inbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46567_58);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [85.0%]  (true,exec) 21 [15.0%]  (false,exec)

  # BLOCK 20 freq:6660
  # PRED: 19 [85.0%]  (true,exec)
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:7835
  # PRED: 20 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec)
  # prefix_9 = PHI <prefix_34(D)(20), ""(19)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");
  D.46572_61 = stats_30->inbound.flush_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46572_61);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

  # BLOCK 22 freq:6660
  # PRED: 21 [85.0%]  (true,exec)
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:7835
  # PRED: 22 [100.0%]  (fallthru,exec) 21 [15.0%]  (false,exec)
  # prefix_10 = PHI <prefix_34(D)(22), ""(21)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");
  D.46577_64 = stats_30->inbound.largest_jb_size;
  switch_snprintf (&var_val, 35, "%d", D.46577_64);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 24 freq:6660
  # PRED: 23 [85.0%]  (true,exec)
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:7835
  # PRED: 24 [100.0%]  (fallthru,exec) 23 [15.0%]  (false,exec)
  # prefix_11 = PHI <prefix_34(D)(24), ""(23)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");
  D.46582_67 = stats_30->inbound.min_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46582_67);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

  # BLOCK 26 freq:6660
  # PRED: 25 [85.0%]  (true,exec)
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:7835
  # PRED: 26 [100.0%]  (fallthru,exec) 25 [15.0%]  (false,exec)
  # prefix_12 = PHI <prefix_34(D)(26), ""(25)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");
  D.46587_70 = stats_30->inbound.max_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46587_70);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

  # BLOCK 28 freq:6660
  # PRED: 27 [85.0%]  (true,exec)
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:7835
  # PRED: 28 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec)
  # prefix_13 = PHI <prefix_34(D)(28), ""(27)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");
  D.46592_73 = stats_30->inbound.lossrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46592_73);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 [85.0%]  (true,exec) 31 [15.0%]  (false,exec)

  # BLOCK 30 freq:6660
  # PRED: 29 [85.0%]  (true,exec)
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:7835
  # PRED: 30 [100.0%]  (fallthru,exec) 29 [15.0%]  (false,exec)
  # prefix_14 = PHI <prefix_34(D)(30), ""(29)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");
  D.46597_76 = stats_30->inbound.burstrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46597_76);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [85.0%]  (true,exec) 33 [15.0%]  (false,exec)

  # BLOCK 32 freq:6660
  # PRED: 31 [85.0%]  (true,exec)
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:7835
  # PRED: 32 [100.0%]  (fallthru,exec) 31 [15.0%]  (false,exec)
  # prefix_15 = PHI <prefix_34(D)(32), ""(31)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");
  D.46602_79 = stats_30->inbound.mean_interval;
  switch_snprintf (&var_val, 35, "%0.2f", D.46602_79);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 [85.0%]  (true,exec) 35 [15.0%]  (false,exec)

  # BLOCK 34 freq:6660
  # PRED: 33 [85.0%]  (true,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:7835
  # PRED: 34 [100.0%]  (fallthru,exec) 33 [15.0%]  (false,exec)
  # prefix_16 = PHI <prefix_34(D)(34), ""(33)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");
  D.46607_82 = stats_30->inbound.flaws;
  switch_snprintf (&var_val, 35, "%d", D.46607_82);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

  # BLOCK 36 freq:6660
  # PRED: 35 [85.0%]  (true,exec)
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:7835
  # PRED: 36 [100.0%]  (fallthru,exec) 35 [15.0%]  (false,exec)
  # prefix_17 = PHI <prefix_34(D)(36), ""(35)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");
  D.46612_85 = stats_30->inbound.R;
  switch_snprintf (&var_val, 35, "%0.2f", D.46612_85);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

  # BLOCK 38 freq:6660
  # PRED: 37 [85.0%]  (true,exec)
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:7835
  # PRED: 38 [100.0%]  (fallthru,exec) 37 [15.0%]  (false,exec)
  # prefix_18 = PHI <prefix_34(D)(38), ""(37)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");
  D.46617_88 = stats_30->inbound.mos;
  switch_snprintf (&var_val, 35, "%0.2f", D.46617_88);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [85.0%]  (true,exec) 41 [15.0%]  (false,exec)

  # BLOCK 40 freq:6660
  # PRED: 39 [85.0%]  (true,exec)
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:7835
  # PRED: 40 [100.0%]  (fallthru,exec) 39 [15.0%]  (false,exec)
  # prefix_19 = PHI <prefix_34(D)(40), ""(39)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");
  D.46622_91 = stats_30->outbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46622_91);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 42 freq:6660
  # PRED: 41 [85.0%]  (true,exec)
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:7835
  # PRED: 42 [100.0%]  (fallthru,exec) 41 [15.0%]  (false,exec)
  # prefix_20 = PHI <prefix_34(D)(42), ""(41)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");
  D.46627_94 = stats_30->outbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46627_94);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [85.0%]  (true,exec) 45 [15.0%]  (false,exec)

  # BLOCK 44 freq:6660
  # PRED: 43 [85.0%]  (true,exec)
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:7835
  # PRED: 44 [100.0%]  (fallthru,exec) 43 [15.0%]  (false,exec)
  # prefix_21 = PHI <prefix_34(D)(44), ""(43)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");
  D.46632_97 = stats_30->outbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46632_97);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [85.0%]  (true,exec) 47 [15.0%]  (false,exec)

  # BLOCK 46 freq:6660
  # PRED: 45 [85.0%]  (true,exec)
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:7835
  # PRED: 46 [100.0%]  (fallthru,exec) 45 [15.0%]  (false,exec)
  # prefix_22 = PHI <prefix_34(D)(46), ""(45)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");
  D.46637_100 = stats_30->outbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46637_100);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
  # SUCC: 48 [85.0%]  (true,exec) 49 [15.0%]  (false,exec)

  # BLOCK 48 freq:6660
  # PRED: 47 [85.0%]  (true,exec)
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:7835
  # PRED: 48 [100.0%]  (fallthru,exec) 47 [15.0%]  (false,exec)
  # prefix_23 = PHI <prefix_34(D)(48), ""(47)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");
  D.46642_103 = stats_30->outbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46642_103);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

  # BLOCK 50 freq:6660
  # PRED: 49 [85.0%]  (true,exec)
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:7835
  # PRED: 50 [100.0%]  (fallthru,exec) 49 [15.0%]  (false,exec)
  # prefix_24 = PHI <prefix_34(D)(50), ""(49)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");
  D.46647_106 = stats_30->outbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46647_106);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

  # BLOCK 52 freq:6660
  # PRED: 51 [85.0%]  (true,exec)
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:7835
  # PRED: 52 [100.0%]  (fallthru,exec) 51 [15.0%]  (false,exec)
  # prefix_25 = PHI <prefix_34(D)(52), ""(51)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");
  D.46652_109 = stats_30->outbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46652_109);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;
  # SUCC: 54 [85.0%]  (true,exec) 55 [15.0%]  (false,exec)

  # BLOCK 54 freq:6660
  # PRED: 53 [85.0%]  (true,exec)
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:7835
  # PRED: 54 [100.0%]  (fallthru,exec) 53 [15.0%]  (false,exec)
  # prefix_26 = PHI <prefix_34(D)(54), ""(53)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");
  D.46657_112 = stats_30->rtcp.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46657_112);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;
  # SUCC: 56 [85.0%]  (true,exec) 57 [15.0%]  (false,exec)

  # BLOCK 56 freq:6660
  # PRED: 55 [85.0%]  (true,exec)
  # SUCC: 57 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:7835
  # PRED: 56 [100.0%]  (fallthru,exec) 55 [15.0%]  (false,exec)
  # prefix_27 = PHI <prefix_34(D)(56), ""(55)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");
  D.46662_115 = stats_30->rtcp.octet_count;
  switch_snprintf (&var_val, 35, "%d", D.46662_115);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:10000
  # PRED: 2 [21.6%]  (false,exec) 57 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_stats (switch_core_media_set_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
Predictions for bb 2
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 3 predicted to even probabilities
1 edges in bb 4 predicted to even probabilities

;; Function switch_core_media_set_stats

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_stats (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46520;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.46520_2 = session_1(D)->media_handle;
  if (D.46520_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:7836
  # PRED: 2 [78.4%]  (false,exec)
  set_stats (session_1(D), 0, "audio");
  set_stats (session_1(D), 1, "video");
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [21.6%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_udptl_mode (switch_core_media_udptl_mode)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_udptl_mode

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_udptl_mode (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_udptl_mode";
  struct switch_media_handle_t * smh;
  uint8_t D.40722;
  struct switch_rtp_t * D.40721;
  switch_status_t D.40720;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8066, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40721_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40722_7 = switch_rtp_ready (D.40721_6);
  if (D.40722_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 6 freq:3053
  # PRED: 5 [39.0%]  (true,exec)
  D.40721_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40720_9 = switch_rtp_udptl_mode (D.40721_8);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [61.0%]  (false,exec)
  # D.40720_1 = PHI <1(4), D.40720_9(6), 1(5)>
  return D.40720_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_jb (switch_core_media_get_jb)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 4.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  null return heuristics: 10.0%
Predictions for bb 5
  DS theory heuristics: 78.6%
  first match heuristics (ignored): 29.0%
  combined heuristics: 78.6%
  call heuristics: 29.0%
  null return heuristics: 90.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_get_jb

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [4.6%]  (true,exec) 5 [95.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.4%]  (false,exec)
Successors:  6 [78.6%]  (true,exec) 7 [21.4%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.6%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [4.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [21.4%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_get_jb (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[25] = "switch_core_media_get_jb";
  struct switch_media_handle_t * smh;
  uint8_t D.40712;
  struct switch_rtp_t * D.40711;
  struct stfu_instance_t * D.40710;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8084, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [4.6%]  (true,exec) 5 [95.4%]  (false,exec)

  # BLOCK 5 freq:9538
  # PRED: 4 [95.4%]  (false,exec)
  D.40711_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40712_7 = switch_rtp_ready (D.40711_6);
  if (D.40712_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [78.6%]  (true,exec) 7 [21.4%]  (false,exec)

  # BLOCK 6 freq:7498
  # PRED: 5 [78.6%]  (true,exec)
  D.40711_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40710_9 = switch_rtp_get_jitter_buffer (D.40711_8);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [4.6%]  (true,exec) 6 [100.0%]  (fallthru,exec) 5 [21.4%]  (false,exec)
  # D.40710_1 = PHI <0B(4), D.40710_9(6), 0B(5)>
  return D.40710_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_sdp_codec_string (switch_core_media_set_sdp_codec_string)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 9 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
Predictions for bb 6
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities
1 edges in bb 9 predicted to even probabilities

;; Function switch_core_media_set_sdp_codec_string

;; 
10 basic blocks, 12 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.3%]  (true,exec)
Successors:  7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [21.6%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_sdp_codec_string (struct switch_core_session_t * session, const char * r_sdp, switch_sdp_type_t sdp_type)
{
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_set_sdp_codec_string";
  struct switch_media_handle_t * smh;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  const char * D.40404;
  int D.40399;
  size_t D.40398;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8105, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;
  # SUCC: 9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40398_4 = strlen (r_sdp_3(D));
  D.40399_5 = (int) D.40398_4;
  parser_6 = sdp_parse (0B, r_sdp_3(D), D.40399_5, 0);
  # DEBUG parser => parser_6
  if (parser_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 9>;
  # SUCC: 6 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

  # BLOCK 6 freq:6137
  # PRED: 5 [78.3%]  (true,exec)
  sdp_7 = sdp_session (parser_6);
  # DEBUG sdp => sdp_7
  if (sdp_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 7 freq:4286
  # PRED: 6 [69.8%]  (true,exec)
  D.40404_8 = switch_core_media_get_codec_string (session_1(D));
  switch_core_media_set_r_sdp_codec_string (session_1(D), D.40404_8, sdp_7, sdp_type_9(D));
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:6137
  # PRED: 6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  sdp_parser_free (parser_6);
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_codec_chosen (switch_core_media_codec_chosen)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 10.1%
  first match heuristics (ignored): 15.0%
  combined heuristics: 10.1%
  pointer (on trees) heuristics: 15.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 78.4%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.4%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 39.0%
1 edges in bb 6 predicted to even probabilities
1 edges in bb 7 predicted to even probabilities

;; Function switch_core_media_codec_chosen

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  7 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  7 [78.4%]  (true,exec) 6 [21.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [21.6%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 5 [78.4%]  (true,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_codec_chosen (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_codec_chosen";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  char * D.40390;
  struct payload_map_t * D.40389;
  switch_status_t D.40386;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8407, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;
  # SUCC: 7 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_8
  D.40389_9 = engine_8->cur_payload_map;
  D.40390_10 = D.40389_9->iananame;
  if (D.40390_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 6>;
  # SUCC: 7 [78.4%]  (true,exec) 6 [21.6%]  (false,exec)

  # BLOCK 6 freq:1943
  # PRED: 5 [21.6%]  (false,exec)
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 5 [78.4%]  (true,exec) 6 [100.0%]  (fallthru,exec)
  # D.40386_1 = PHI <1(4), 0(5), 1(6)>
  return D.40386_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_check_outgoing_proxy (switch_core_media_check_outgoing_proxy)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 8 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 71.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 78.3%
  first match heuristics (ignored): 85.0%
  combined heuristics: 78.3%
  pointer (on trees) heuristics: 85.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities

;; Function switch_core_media_check_outgoing_proxy

;; 
9 basic blocks, 11 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  8 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  8 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.4%]  (false,exec)
Successors:  7 [78.3%]  (true,exec) 8 [21.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [78.3%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 5 [21.6%]  (true,exec) 6 [21.6%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_check_outgoing_proxy (struct switch_core_session_t * session, struct switch_core_session_t * o_session)
{
  static const char __func__[39] = "switch_core_media_check_outgoing_proxy";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_check_outgoing_proxy";
  const char * r_sdp;
  struct switch_media_handle_t * smh;
  struct payload_map_t * D.40380;
  const char * D.40377;
  char * D.40376;
  struct payload_map_t * D.40375;
  struct switch_channel_t * D.40374;
  uint32_t D.40369;
  struct switch_channel_t * D.40368;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG r_sdp => 0B
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8430, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.40368_4 = o_session_3(D)->channel;
  D.40369_5 = switch_channel_test_flag (D.40368_4, 29);
  if (D.40369_5 == 0)
    goto <bb 8>;
  else
    goto <bb 5>;
  # SUCC: 8 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:6098
  # PRED: 4 [61.0%]  (false,exec)
  smh_6 = session_2(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;
  # SUCC: 8 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

  # BLOCK 6 freq:4778
  # PRED: 5 [78.4%]  (false,exec)
  D.40368_7 = o_session_3(D)->channel;
  r_sdp_8 = switch_channel_get_variable_dup (D.40368_7, "switch_r_sdp", 1, -1);
  # DEBUG r_sdp => r_sdp_8
  # DEBUG D#40 => &smh_6->engines
  # DEBUG a_engine => D#40
  # DEBUG D#41 => &smh_6->engines[1]
  # DEBUG v_engine => D#41
  D.40374_11 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_11, 29, 1);
  D.40375_12 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40376_13 = switch_core_perform_session_strdup (session_2(D), "PROXY", "src/switch_core_media.c", &__func__, 8447);
  D.40375_12->iananame = D.40376_13;
  D.40375_14 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_14->rm_rate = 8000;
  D.40375_15 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_15->adv_rm_rate = 8000;
  D.40375_16 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_16->codec_ms = 20;
  D.40377_17 = switch_stristr ("m=video", r_sdp_8);
  if (D.40377_17 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [78.3%]  (true,exec) 8 [21.6%]  (false,exec)

  # BLOCK 7 freq:3744
  # PRED: 6 [78.3%]  (true,exec)
  switch_core_media_choose_port (session_2(D), 1, 1);
  D.40380_18 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_18->rm_encoding = "PROXY-VID";
  D.40380_19 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_19->rm_rate = 90000;
  D.40380_20 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_20->adv_rm_rate = 90000;
  D.40380_21 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_21->codec_ms = 0;
  D.40374_22 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_22, 23, 1);
  D.40374_23 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_23, 98, 1);
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:9996
  # PRED: 4 [39.0%]  (true,exec) 5 [21.6%]  (true,exec) 6 [21.6%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_proxy_codec (switch_core_media_proxy_codec)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 21 23 22
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 19
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 13 14 15 12 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 31 5 }
;; 5 succs { 31 6 }
;; 6 succs { 7 8 }
;; 7 succs { 31 }
;; 8 succs { 17 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 9 18 }
;; 18 succs { 29 }
;; 19 succs { 20 28 }
;; 20 succs { 25 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 21 26 }
;; 26 succs { 27 30 }
;; 27 succs { 30 }
;; 28 succs { 29 }
;; 29 succs { 19 30 }
;; 30 succs { 31 }
;; 31 succs { 1 }
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 21 23 22
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 19
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 13 14 15 12 9 10 11
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_3 = PHI <attr_30(20), attr_39(24)>
)
  (init_cond = attr_30))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_3 = PHI <attr_30(20), attr_39(24)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_27(18), m_52(28)>
)
  (init_cond = m_27))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_27(18), m_52(28)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 18 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 18 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_19(8), attr_26(16)>
)
  (init_cond = attr_19))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_19(8), attr_26(16)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 4.4%
  first match heuristics (ignored): 15.0%
  combined heuristics: 4.4%
  early return (on trees) heuristics: 39.0%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 29.0%
1 edges in bb 7 predicted to even probabilities
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 10
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 50.0%
  first match heuristics (ignored): 50.0%
  combined heuristics: 50.0%
  continue heuristics: 50.0%
1 edges in bb 13 predicted to even probabilities
Predictions for bb 14
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 15 predicted to even probabilities
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics (ignored): 1.8%
  first match heuristics: 4.5%
  combined heuristics: 4.5%
  opcode values nonequal (on trees) heuristics (ignored): 28.0%
  loop exit heuristics: 4.5%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for bb 22
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 23 predicted to even probabilities
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics (ignored): 98.3%
  first match heuristics: 91.0%
  combined heuristics: 91.0%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 91.0%
Predictions for bb 26
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 27 predicted to even probabilities
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  DS theory heuristics (ignored): 99.2%
  first match heuristics: 95.5%
  combined heuristics: 95.5%
  pointer (on trees) heuristics (ignored): 85.0%
  loop exit heuristics: 95.5%
1 edges in bb 30 predicted to even probabilities
1 edges in bb 31 predicted to even probabilities

;; Function switch_core_media_proxy_codec

;; 
32 basic blocks, 45 edges, last basic block 32.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  31 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  31 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.4%]  (false,exec)
Successors:  7 [4.4%]  (true,exec) 8 [95.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [4.4%]  (true,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [95.6%]  (false,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  17 [91.0%]  (true,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [29.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 14 [71.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  17 [100.0%]  (fallthru,dfs_back,exec)

Basic block 17 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [91.0%]  (true,exec) 18 [9.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [9.0%]  (false,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  29 [95.5%]  (true,exec)
Successors:  20 [4.5%]  (true,exec) 28 [95.5%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [4.5%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  25 [91.0%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [69.8%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec) 23 [100.0%]  (fallthru,exec) 22 [30.2%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,dfs_back,exec)

Basic block 25 (new, reachable)
Predecessors:  20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
Successors:  21 [91.0%]  (true,exec) 26 [9.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [9.0%]  (false,exec)
Successors:  27 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [69.8%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  19 [95.5%]  (false,exec)
Successors:  29 [100.0%]  (fallthru,dfs_back,exec)

Basic block 29 (new, reachable)
Predecessors:  18 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,dfs_back,exec)
Successors:  19 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  26 [30.2%]  (false,exec) 29 [4.5%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_proxy_codec (struct switch_core_session_t * session, const char * r_sdp)
{
  const char D.48273;
  int D.48272;
  struct sdp_rtpmap_t * map;
  static const char __func__[30] = "switch_core_media_proxy_codec";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_proxy_codec";
  struct switch_media_handle_t * smh;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  uint32_t D.40364;
  struct switch_core_media_params_t * D.40363;
  uint32_t ptime.4;
  long unsigned int D.40361;
  char * D.40360;
  const char * D.40359;
  struct payload_map_t * D.40358;
  int D.40347;
  sdp_proto_e D.40344;
  const char * D.40343;
  int D.40340;
  const char * D.40336;
  int D.40331;
  size_t D.40330;

  # BLOCK 2 freq:1499
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG parser => 0B
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:1
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8482, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1499
  # PRED: 2 [100.0%]  (false,exec)
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 31>;
  else
    goto <bb 5>;
  # SUCC: 31 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:1174
  # PRED: 4 [78.4%]  (false,exec)
  # DEBUG D#42 => &smh_12->engines
  # DEBUG a_engine => D#42
  D.40330_15 = strlen (r_sdp_14(D));
  D.40331_16 = (int) D.40330_15;
  parser_17 = sdp_parse (0B, r_sdp_14(D), D.40331_16, 0);
  # DEBUG parser => parser_17
  if (parser_17 == 0B)
    goto <bb 31>;
  else
    goto <bb 6>;
  # SUCC: 31 [21.6%]  (true,exec) 6 [78.4%]  (false,exec)

  # BLOCK 6 freq:920
  # PRED: 5 [78.4%]  (false,exec)
  sdp_18 = sdp_session (parser_17);
  # DEBUG sdp => sdp_18
  if (sdp_18 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [4.4%]  (true,exec) 8 [95.6%]  (false,exec)

  # BLOCK 7 freq:41
  # PRED: 6 [4.4%]  (true,exec)
  sdp_parser_free (parser_17);
  goto <bb 31>;
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:880
  # PRED: 6 [95.6%]  (false,exec)
  attr_19 = sdp_18->sdp_attributes;
  # DEBUG attr => attr_19
  goto <bb 17>;
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8895
  # PRED: 17 [91.0%]  (true,exec)
  D.40336_20 = attr_2->a_name;
  # DEBUG s => D.40336_20
  if (D.40336_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:7561
  # PRED: 9 [85.0%]  (false,exec)
  D.48273_65 = *D.40336_20;
  if (D.48273_65 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:3780
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:8895
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.48272_66 = PHI <1(9), 1(10), 0(11)>
  if (D.48272_66 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:4448
  # PRED: 12 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:4448
  # PRED: 12 [50.0%]  (false,exec)
  D.40336_22 = attr_2->a_name;
  D.40340_23 = strcasecmp (D.40336_22, "ptime");
  if (D.40340_23 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 15 freq:1290
  # PRED: 14 [29.0%]  (true,exec)
  D.40343_24 = attr_2->a_value;
  # DEBUG __nptr => D.40343_24
  dptime_67 = strtol (D.40343_24, 0B, 10);
  # DEBUG dptime => NULL
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:8895
  # PRED: 13 [100.0%]  (fallthru,exec) 14 [71.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  # dptime_6 = PHI <dptime_7(13), dptime_7(14), dptime_67(15)>
  # DEBUG dptime => dptime_6
  attr_26 = attr_2->a_next;
  # DEBUG attr => attr_26
  # SUCC: 17 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 17 freq:9775
  # PRED: 8 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,dfs_back,exec)
  # attr_2 = PHI <attr_19(8), attr_26(16)>
  # dptime_7 = PHI <0(8), dptime_6(16)>
  # DEBUG dptime => dptime_7
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;
  # SUCC: 9 [91.0%]  (true,exec) 18 [9.0%]  (false,exec)

  # BLOCK 18 freq:880
  # PRED: 17 [9.0%]  (false,exec)
  m_27 = sdp_18->sdp_media;
  # DEBUG m => m_27
  goto <bb 29>;
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:9550
  # PRED: 29 [95.5%]  (true,exec)
  # DEBUG ptime => dptime_7
  D.40344_29 = m_1->m_proto;
  if (D.40344_29 == 256)
    goto <bb 20>;
  else
    goto <bb 28>;
  # SUCC: 20 [4.5%]  (true,exec) 28 [95.5%]  (false,exec)

  # BLOCK 20 freq:430
  # PRED: 19 [4.5%]  (true,exec)
  attr_30 = m_1->m_attributes;
  # DEBUG attr => attr_30
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:4345
  # PRED: 25 [91.0%]  (true,exec)
  D.40336_31 = attr_3->a_name;
  D.40347_32 = strcasecmp (D.40336_31, "ptime");
  if (D.40347_32 == 0)
    goto <bb 22>;
  else
    goto <bb 24>;
  # SUCC: 22 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 22 freq:2173
  # PRED: 21 [50.0%]  (true,exec)
  D.40343_33 = attr_3->a_value;
  if (D.40343_33 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

  # BLOCK 23 freq:1517
  # PRED: 22 [69.8%]  (true,exec)
  D.40343_34 = attr_3->a_value;
  # DEBUG __nptr => D.40343_34
  ptime_68 = strtol (D.40343_34, 0B, 10);
  # DEBUG ptime => NULL
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:4345
  # PRED: 21 [50.0%]  (false,exec) 23 [100.0%]  (fallthru,exec) 22 [30.2%]  (false,exec)
  # ptime_4 = PHI <ptime_5(21), ptime_68(23), ptime_5(22)>
  # DEBUG ptime => ptime_4
  attr_39 = attr_3->a_next;
  # DEBUG attr => attr_39
  # SUCC: 25 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 25 freq:4775
  # PRED: 20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
  # attr_3 = PHI <attr_30(20), attr_39(24)>
  # ptime_5 = PHI <dptime_7(20), ptime_4(24)>
  # DEBUG ptime => ptime_5
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 21>;
  else
    goto <bb 26>;
  # SUCC: 21 [91.0%]  (true,exec) 26 [9.0%]  (false,exec)

  # BLOCK 26 freq:430
  # PRED: 25 [9.0%]  (false,exec)
  map_40 = m_1->m_rtpmaps;
  # DEBUG map => map_40
  if (map_40 != 0B)
    goto <bb 27>;
  else
    goto <bb 30>;
  # SUCC: 27 [69.8%]  (true,exec) 30 [30.2%]  (false,exec)

  # BLOCK 27 freq:300
  # PRED: 26 [69.8%]  (true,exec)
  D.40358_41 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40359_42 = map_40->rm_encoding;
  D.40360_43 = switch_core_perform_session_strdup (session_11(D), D.40359_42, "src/switch_core_media.c", &__func__, 8527);
  D.40358_41->iananame = D.40360_43;
  D.40358_44 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40361_45 = map_40->rm_rate;
  D.40358_44->rm_rate = D.40361_45;
  D.40358_46 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40361_47 = map_40->rm_rate;
  D.40358_46->adv_rm_rate = D.40361_47;
  D.40358_48 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  ptime.4_49 = (uint32_t) ptime_5;
  D.40358_48->codec_ms = ptime.4_49;
  D.40363_50 = smh_12->mparams;
  D.40364_51 = D.40363_50->codec_flags;
  switch_core_media_set_codec (session_11(D), 0, D.40364_51);
  goto <bb 30>;
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:9120
  # PRED: 19 [95.5%]  (false,exec)
  m_52 = m_1->m_next;
  # DEBUG m => m_52
  # SUCC: 29 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 29 freq:10000
  # PRED: 18 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_27(18), m_52(28)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 19>;
  else
    goto <bb 30>;
  # SUCC: 19 [95.5%]  (true,exec) 30 [4.5%]  (false,exec)

  # BLOCK 30 freq:880
  # PRED: 26 [30.2%]  (false,exec) 29 [4.5%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  sdp_parser_free (parser_17);
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:1499
  # PRED: 4 [21.6%]  (true,exec) 5 [21.6%]  (true,exec) 7 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_recover_session (switch_core_media_recover_session)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 58 5 }
;; 5 succs { 58 6 }
;; 6 succs { 58 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 15 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 32 30 }
;; 30 succs { 32 31 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 37 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 52 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 58 53 }
;; 53 succs { 54 56 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
Predictions for bb 2
  DS theory heuristics (ignored): 0.0%
  first match heuristics: 0.0%
  combined heuristics: 0.0%
  pointer (on trees) heuristics (ignored): 15.0%
  call heuristics (ignored): 29.0%
  noreturn call heuristics: 0.0%
0 edges in bb 3 predicted to even probabilities
Predictions for bb 4
  DS theory heuristics: 21.6%
  first match heuristics (ignored): 15.0%
  combined heuristics: 21.6%
  pointer (on trees) heuristics: 15.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 5
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 39.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 6
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 7
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 8 predicted to even probabilities
Predictions for bb 9
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
Predictions for bb 10
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 11 predicted to even probabilities
Predictions for bb 12
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
1 edges in bb 13 predicted to even probabilities
1 edges in bb 14 predicted to even probabilities
Predictions for bb 15
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 16 predicted to even probabilities
Predictions for bb 17
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 18 predicted to even probabilities
Predictions for bb 19
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 20 predicted to even probabilities
Predictions for bb 21
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 22 predicted to even probabilities
Predictions for bb 23
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 24 predicted to even probabilities
Predictions for bb 25
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 26 predicted to even probabilities
Predictions for bb 27
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 28 predicted to even probabilities
Predictions for bb 29
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 31 predicted to even probabilities
Predictions for bb 32
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 33 predicted to even probabilities
Predictions for bb 34
  DS theory heuristics: 15.0%
  first match heuristics (ignored): 15.0%
  combined heuristics: 15.0%
  pointer (on trees) heuristics: 15.0%
Predictions for bb 35
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
1 edges in bb 36 predicted to even probabilities
Predictions for bb 37
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 38 predicted to even probabilities
Predictions for bb 39
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 40 predicted to even probabilities
Predictions for bb 41
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
Predictions for bb 42
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 43 predicted to even probabilities
Predictions for bb 44
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 45 predicted to even probabilities
Predictions for bb 46
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 47 predicted to even probabilities
Predictions for bb 48
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 49 predicted to even probabilities
Predictions for bb 50
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  call heuristics: 29.0%
1 edges in bb 51 predicted to even probabilities
Predictions for bb 52
  DS theory heuristics: 61.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 61.0%
  call heuristics: 71.0%
  early return (on trees) heuristics: 39.0%
Predictions for bb 53
  DS theory heuristics: 85.0%
  first match heuristics (ignored): 85.0%
  combined heuristics: 85.0%
  pointer (on trees) heuristics: 85.0%
Predictions for bb 54
  DS theory heuristics: 69.8%
  first match heuristics (ignored): 85.0%
  combined heuristics: 69.8%
  pointer (on trees) heuristics: 85.0%
  call heuristics: 29.0%
1 edges in bb 55 predicted to even probabilities
Predictions for bb 56
  DS theory heuristics: 39.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 39.0%
  early return (on trees) heuristics: 61.0%
  call heuristics: 29.0%
1 edges in bb 57 predicted to even probabilities
1 edges in bb 58 predicted to even probabilities

;; Function switch_core_media_recover_session

;; 
59 basic blocks, 89 edges, last basic block 59.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  58 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  58 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  58 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (false,exec)
Successors:  8 [69.8%]  (true,exec) 9 [30.2%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [69.8%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [30.2%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [69.8%]  (true,exec) 15 [30.2%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [69.8%]  (true,exec)
Successors:  12 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [15.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 12 [15.0%]  (false,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  9 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [69.8%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [69.8%]  (true,exec) 19 [30.2%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [69.8%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [30.2%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [69.8%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  19 [30.2%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [69.8%]  (true,exec) 23 [30.2%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [69.8%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [30.2%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [69.8%]  (true,exec) 25 [30.2%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [69.8%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [30.2%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [69.8%]  (true,exec) 27 [30.2%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [69.8%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [30.2%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [69.8%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  32 [15.0%]  (true,exec) 30 [85.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [85.0%]  (false,exec)
Successors:  32 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  29 [15.0%]  (true,exec) 30 [50.0%]  (true,exec) 31 [100.0%]  (fallthru,exec)
Successors:  33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [29.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  37 [15.0%]  (true,exec) 35 [85.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [85.0%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [50.0%]  (false,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  34 [15.0%]  (true,exec) 35 [50.0%]  (true,exec) 36 [100.0%]  (fallthru,exec)
Successors:  38 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [29.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  37 [71.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
Successors:  42 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [29.0%]  (true,exec)
Successors:  43 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [69.8%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  42 [30.2%]  (false,exec) 43 [100.0%]  (fallthru,exec)
Successors:  45 [69.8%]  (true,exec) 46 [30.2%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [69.8%]  (true,exec)
Successors:  46 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  44 [30.2%]  (false,exec) 45 [100.0%]  (fallthru,exec)
Successors:  47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [69.8%]  (true,exec) 50 [30.2%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [69.8%]  (true,exec)
Successors:  50 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  48 [30.2%]  (false,exec) 49 [100.0%]  (fallthru,exec)
Successors:  51 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [29.0%]  (true,exec)
Successors:  52 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  41 [71.0%]  (false,exec) 50 [71.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
Successors:  58 [61.0%]  (true,exec) 53 [39.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [39.0%]  (false,exec)
Successors:  54 [85.0%]  (true,exec) 56 [15.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (true,exec)
Successors:  55 [69.8%]  (true,exec) 56 [30.2%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [69.8%]  (true,exec)
Successors:  56 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  53 [15.0%]  (false,exec) 54 [30.2%]  (false,exec) 55 [100.0%]  (fallthru,exec)
Successors:  57 [39.0%]  (true,exec) 58 [61.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [39.0%]  (true,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 52 [61.0%]  (true,exec) 56 [61.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 5 [39.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_core_media_recover_session (struct switch_core_session_t * session)
{
  int D.48330;
  int D.48327;
  int D.48324;
  int D.48321;
  int D.48318;
  int D.48315;
  int D.48312;
  const char D.48309;
  int D.48308;
  const char D.48305;
  int D.48304;
  int D.48301;
  int D.48298;
  int D.48295;
  int D.48292;
  int D.48289;
  int D.48286;
  int D.48283;
  int idx;
  char * tmp_codec_string;
  const char * vtmp;
  static const char __func__[34] = "switch_core_media_recover_session";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_recover_session";
  struct switch_media_handle_t * smh;
  const char * tmp;
  const char * r_port;
  const char * r_ip;
  const char * a_ip;
  const char * port;
  const char * ip;
  switch_payload_t D.40294;
  switch_payload_t D.40293;
  uint8_t D.40290;
  unsigned char[64] * D.40289;
  uint32_t D.40288;
  int D.40287;
  switch_size_t D.40286;
  int D.40285;
  unsigned char[64] * D.40284;
  uint32_t idx.2;
  struct switch_rtp_t * D.40282;
  struct switch_channel_t * D.40281;
  char * D.40280;
  struct switch_secure_settings_t * D.40279;
  char * D.40276;
  char * D.40273;
  switch_rtp_crypto_key_type_t D.40272;
  switch_status_t D.40267;
  short unsigned int D.40266;
  switch_port_t D.40262;
  short unsigned int D.40261;
  uint32_t D.40259;
  long unsigned int D.40255;
  long unsigned int D.40254;
  const char * D.40250;
  const char * D.40249;
  unsigned char D.40248;
  switch_payload_t D.40244;
  unsigned char D.40243;
  struct payload_map_t * D.40241;
  uint32_t D.40236;
  short unsigned int D.40235;
  _Bool D.40231;
  _Bool D.40230;
  _Bool D.40229;
  char * D.40228;
  char * D.40224;
  char * D.40223;
  switch_port_t D.40219;
  short unsigned int D.40218;
  char * D.40216;
  uint32_t D.40215;
  unsigned char D.40214;
  switch_payload_t D.40210;
  unsigned char D.40209;
  uint32_t D.40205;
  long unsigned int D.40201;
  long unsigned int D.40200;
  unsigned char D.40196;
  unsigned char D.40192;
  int D.40188;
  int D.40187;
  const struct switch_codec_implementation_t *[50] * D.40186;
  int D.40185;
  unsigned int D.40184;
  char *[50] * D.40183;
  struct switch_core_session_t * D.40182;
  char * iftmp.0;
  char * D.40169;
  struct switch_core_media_params_t * D.40168;
  const char * D.40165;
  char * D.40164;
  const char * D.40163;
  struct payload_map_t * D.40162;
  _Bool D.40161;
  _Bool D.40160;
  _Bool D.40159;
  uint32_t D.40157;
  struct switch_channel_t * D.40154;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8557, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 58>;
  else
    goto <bb 5>;
  # SUCC: 58 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7833
  # PRED: 4 [78.4%]  (false,exec)
  D.40154_5 = session_3(D)->channel;
  ip_6 = switch_channel_get_variable_dup (D.40154_5, "local_media_ip", 1, -1);
  # DEBUG ip => ip_6
  D.40154_7 = session_3(D)->channel;
  port_8 = switch_channel_get_variable_dup (D.40154_7, "local_media_port", 1, -1);
  # DEBUG port => port_8
  D.40154_9 = session_3(D)->channel;
  D.40157_10 = switch_channel_test_flag (D.40154_9, 15);
  if (D.40157_10 != 0)
    goto <bb 58>;
  else
    goto <bb 6>;
  # SUCC: 58 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:4778
  # PRED: 5 [61.0%]  (false,exec)
  D.40159_11 = ip_6 == 0B;
  D.40160_12 = port_8 == 0B;
  D.40161_13 = D.40159_11 || D.40160_12;
  if (D.40161_13 != 0)
    goto <bb 58>;
  else
    goto <bb 7>;
  # SUCC: 58 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 7 freq:1862
  # PRED: 6 [39.0%]  (false,exec)
  D.40154_14 = session_3(D)->channel;
  a_ip_15 = switch_channel_get_variable_dup (D.40154_14, "advertised_media_ip", 1, -1);
  # DEBUG a_ip => a_ip_15
  D.40154_16 = session_3(D)->channel;
  r_ip_17 = switch_channel_get_variable_dup (D.40154_16, "remote_media_ip", 1, -1);
  # DEBUG r_ip => r_ip_17
  D.40154_18 = session_3(D)->channel;
  r_port_19 = switch_channel_get_variable_dup (D.40154_18, "remote_media_port", 1, -1);
  # DEBUG r_port => r_port_19
  # DEBUG D#44 => &smh_4->engines
  # DEBUG a_engine => D#44
  # DEBUG D#43 => &smh_4->engines[1]
  # DEBUG v_engine => D#43
  D.40162_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40154_24 = session_3(D)->channel;
  D.40163_25 = switch_channel_get_variable_dup (D.40154_24, "rtp_use_codec_name", 1, -1);
  D.40162_23->rm_encoding = D.40163_25;
  D.40164_26 = D.40162_23->rm_encoding;
  D.40162_23->iananame = D.40164_26;
  D.40162_27 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40154_28 = session_3(D)->channel;
  D.40165_29 = switch_channel_get_variable_dup (D.40154_28, "rtp_use_codec_fmtp", 1, -1);
  D.40162_27->rm_fmtp = D.40165_29;
  D.40154_30 = session_3(D)->channel;
  tmp_31 = switch_channel_get_variable_dup (D.40154_30, "switch_r_sdp", 1, -1);
  # DEBUG tmp => tmp_31
  if (tmp_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [69.8%]  (true,exec) 9 [30.2%]  (false,exec)

  # BLOCK 8 freq:1301
  # PRED: 7 [69.8%]  (true,exec)
  D.40168_32 = smh_4->mparams;
  D.40169_33 = switch_core_perform_session_strdup (session_3(D), tmp_31, "src/switch_core_media.c", &__func__, 8581);
  D.40168_32->remote_sdp_str = D.40169_33;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:1862
  # PRED: 7 [30.2%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  D.40154_34 = session_3(D)->channel;
  tmp_35 = switch_channel_get_variable_dup (D.40154_34, "rtp_last_audio_codec_string", 1, -1);
  # DEBUG tmp => tmp_35
  if (tmp_35 != 0B)
    goto <bb 10>;
  else
    goto <bb 15>;
  # SUCC: 10 [69.8%]  (true,exec) 15 [30.2%]  (false,exec)

  # BLOCK 10 freq:1301
  # PRED: 9 [69.8%]  (true,exec)
  D.40154_36 = session_3(D)->channel;
  vtmp_37 = switch_channel_get_variable_dup (D.40154_36, "rtp_last_video_codec_string", 1, -1);
  # DEBUG vtmp => vtmp_37
  D.40154_38 = session_3(D)->channel;
  if (vtmp_37 != 0B)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

  # BLOCK 11 freq:195
  # PRED: 10 [15.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:1301
  # PRED: 10 [85.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # iftmp.0_1 = PHI <","(10), ""(11)>
  if (vtmp_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:1105
  # PRED: 12 [85.0%]  (true,exec)
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:1301
  # PRED: 13 [100.0%]  (fallthru,exec) 12 [15.0%]  (false,exec)
  # vtmp_2 = PHI <vtmp_37(13), ""(12)>
  switch_channel_set_variable_printf (D.40154_38, "rtp_use_codec_string", "%s%s%s", tmp_35, iftmp.0_1, vtmp_2);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:1862
  # PRED: 9 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  D.40154_43 = session_3(D)->channel;
  tmp_44 = switch_channel_get_variable_dup (D.40154_43, "rtp_use_codec_string", 1, -1);
  # DEBUG tmp => tmp_44
  if (tmp_44 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

  # BLOCK 16 freq:1301
  # PRED: 15 [69.8%]  (true,exec)
  D.40182_45 = smh_4->session;
  tmp_codec_string_46 = switch_core_perform_session_strdup (D.40182_45, tmp_44, "src/switch_core_media.c", &__func__, 8591);
  # DEBUG tmp_codec_string => tmp_codec_string_46
  D.40183_47 = &smh_4->codec_order;
  D.40184_48 = switch_separate_string (tmp_codec_string_46, 44, D.40183_47, 50);
  D.40185_49 = (int) D.40184_48;
  smh_4->codec_order_last = D.40185_49;
  D.40168_50 = smh_4->mparams;
  D.40186_51 = &smh_4->codecs;
  D.40183_52 = &smh_4->codec_order;
  D.40187_53 = smh_4->codec_order_last;
  D.40188_54 = switch_loadable_module_get_codecs_sorted (D.40186_51, 50, D.40183_52, D.40187_53);
  D.40168_50->num_codecs = D.40188_54;
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:1862
  # PRED: 15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  D.40154_55 = session_3(D)->channel;
  tmp_56 = switch_channel_get_variable_dup (D.40154_55, "rtp_2833_send_payload", 1, -1);
  # DEBUG tmp => tmp_56
  if (tmp_56 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [69.8%]  (true,exec) 19 [30.2%]  (false,exec)

  # BLOCK 18 freq:1301
  # PRED: 17 [69.8%]  (true,exec)
  D.40168_57 = smh_4->mparams;
  # DEBUG __nptr => tmp_56
  D.48283_317 = strtol (tmp_56, 0B, 10);
  D.40192_59 = (unsigned char) D.48283_317;
  D.40168_57->te = D.40192_59;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:1862
  # PRED: 17 [30.2%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  D.40154_60 = session_3(D)->channel;
  tmp_61 = switch_channel_get_variable_dup (D.40154_60, "rtp_2833_recv_payload", 1, -1);
  # DEBUG tmp => tmp_61
  if (tmp_61 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

  # BLOCK 20 freq:1301
  # PRED: 19 [69.8%]  (true,exec)
  D.40168_62 = smh_4->mparams;
  # DEBUG __nptr => tmp_61
  D.48286_318 = strtol (tmp_61, 0B, 10);
  D.40196_64 = (unsigned char) D.48286_318;
  D.40168_62->recv_te = D.40196_64;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:1862
  # PRED: 19 [30.2%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  D.40154_65 = session_3(D)->channel;
  tmp_66 = switch_channel_get_variable_dup (D.40154_65, "rtp_use_codec_rate", 1, -1);
  # DEBUG tmp => tmp_66
  if (tmp_66 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [69.8%]  (true,exec) 23 [30.2%]  (false,exec)

  # BLOCK 22 freq:1301
  # PRED: 21 [69.8%]  (true,exec)
  D.40162_67 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_66
  D.48289_319 = strtol (tmp_66, 0B, 10);
  D.40200_69 = (long unsigned int) D.48289_319;
  D.40162_67->rm_rate = D.40200_69;
  D.40162_71 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40201_72 = D.40162_71->rm_rate;
  D.40162_71->adv_rm_rate = D.40201_72;
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:1862
  # PRED: 21 [30.2%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  D.40154_73 = session_3(D)->channel;
  tmp_74 = switch_channel_get_variable_dup (D.40154_73, "rtp_use_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_74
  if (tmp_74 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [69.8%]  (true,exec) 25 [30.2%]  (false,exec)

  # BLOCK 24 freq:1301
  # PRED: 23 [69.8%]  (true,exec)
  D.40162_75 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_74
  D.48292_320 = strtol (tmp_74, 0B, 10);
  D.40205_77 = (uint32_t) D.48292_320;
  D.40162_75->codec_ms = D.40205_77;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1862
  # PRED: 23 [30.2%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  D.40154_78 = session_3(D)->channel;
  tmp_79 = switch_channel_get_variable_dup (D.40154_78, "rtp_use_pt", 1, -1);
  # DEBUG tmp => tmp_79
  if (tmp_79 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [69.8%]  (true,exec) 27 [30.2%]  (false,exec)

  # BLOCK 26 freq:1301
  # PRED: 25 [69.8%]  (true,exec)
  D.40162_81 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_79
  D.48295_321 = strtol (tmp_79, 0B, 10);
  D.40209_83 = (unsigned char) D.48295_321;
  D.40162_81->agreed_pt = D.40209_83;
  D.40210_84 = D.40162_81->agreed_pt;
  D.40162_81->pt = D.40210_84;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:1862
  # PRED: 25 [30.2%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  D.40154_85 = session_3(D)->channel;
  tmp_86 = switch_channel_get_variable_dup (D.40154_85, "rtp_audio_recv_pt", 1, -1);
  # DEBUG tmp => tmp_86
  if (tmp_86 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

  # BLOCK 28 freq:1301
  # PRED: 27 [69.8%]  (true,exec)
  D.40162_87 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_86
  D.48298_322 = strtol (tmp_86, 0B, 10);
  D.40214_89 = (unsigned char) D.48298_322;
  D.40162_87->recv_pt = D.40214_89;
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:1862
  # PRED: 27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  D.40168_90 = smh_4->mparams;
  D.40215_91 = D.40168_90->codec_flags;
  switch_core_media_set_codec (session_3(D), 1, D.40215_91);
  D.40168_92 = smh_4->mparams;
  D.40168_92->extrtpip = ip_6;
  D.40216_93 = D.40168_92->extrtpip;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40216_93;
  # DEBUG __nptr => port_8
  D.48301_323 = strtol (port_8, 0B, 10);
  D.40218_95 = (short unsigned int) D.48301_323;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port = D.40218_95;
  D.40219_96 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_port = D.40219_96;
  # DEBUG s => ip_6
  if (ip_6 == 0B)
    goto <bb 32>;
  else
    goto <bb 30>;
  # SUCC: 32 [15.0%]  (true,exec) 30 [85.0%]  (false,exec)

  # BLOCK 30 freq:1583
  # PRED: 29 [85.0%]  (false,exec)
  D.48305_324 = *ip_6;
  if (D.48305_324 == 0)
    goto <bb 32>;
  else
    goto <bb 31>;
  # SUCC: 32 [50.0%]  (true,exec) 31 [50.0%]  (false,exec)

  # BLOCK 31 freq:792
  # PRED: 30 [50.0%]  (false,exec)
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:1862
  # PRED: 29 [15.0%]  (true,exec) 30 [50.0%]  (true,exec) 31 [100.0%]  (fallthru,exec)
  # D.48304_325 = PHI <1(29), 1(30), 0(31)>
  if (D.48304_325 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 33 freq:540
  # PRED: 32 [29.0%]  (true,exec)
  D.40223_98 = switch_core_perform_session_strdup (session_3(D), ip_6, "src/switch_core_media.c", &__func__, 8627);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip = D.40223_98;
  D.40168_99 = smh_4->mparams;
  D.40224_100 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip;
  D.40168_99->rtpip = D.40224_100;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:1862
  # PRED: 32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  # DEBUG s => a_ip_15
  if (a_ip_15 == 0B)
    goto <bb 37>;
  else
    goto <bb 35>;
  # SUCC: 37 [15.0%]  (true,exec) 35 [85.0%]  (false,exec)

  # BLOCK 35 freq:1583
  # PRED: 34 [85.0%]  (false,exec)
  D.48309_326 = *a_ip_15;
  if (D.48309_326 == 0)
    goto <bb 37>;
  else
    goto <bb 36>;
  # SUCC: 37 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 36 freq:792
  # PRED: 35 [50.0%]  (false,exec)
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:1862
  # PRED: 34 [15.0%]  (true,exec) 35 [50.0%]  (true,exec) 36 [100.0%]  (fallthru,exec)
  # D.48308_327 = PHI <1(34), 1(35), 0(36)>
  if (D.48308_327 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

  # BLOCK 38 freq:540
  # PRED: 37 [29.0%]  (true,exec)
  D.40228_102 = switch_core_perform_session_strdup (session_3(D), a_ip_15, "src/switch_core_media.c", &__func__, 8632);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40228_102;
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:1862
  # PRED: 37 [71.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
  D.40229_103 = r_ip_17 != 0B;
  D.40230_104 = r_port_19 != 0B;
  D.40231_105 = D.40229_103 && D.40230_104;
  if (D.40231_105 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 40 freq:540
  # PRED: 39 [29.0%]  (true,exec)
  D.40162_106 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40162_106->remote_sdp_ip = r_ip_17;
  D.40162_107 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => r_port_19
  D.48312_328 = strtol (r_port_19, 0B, 10);
  D.40235_109 = (short unsigned int) D.48312_328;
  D.40162_107->remote_sdp_port = D.40235_109;
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:1862
  # PRED: 39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
  D.40154_110 = session_3(D)->channel;
  D.40236_111 = switch_channel_test_flag (D.40154_110, 23);
  if (D.40236_111 != 0)
    goto <bb 42>;
  else
    goto <bb 52>;
  # SUCC: 42 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

  # BLOCK 42 freq:540
  # PRED: 41 [29.0%]  (true,exec)
  D.40154_112 = session_3(D)->channel;
  tmp_113 = switch_channel_get_variable_dup (D.40154_112, "rtp_use_video_pt", 1, -1);
  # DEBUG tmp => tmp_113
  if (tmp_113 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [69.8%]  (true,exec) 44 [30.2%]  (false,exec)

  # BLOCK 43 freq:377
  # PRED: 42 [69.8%]  (true,exec)
  D.40241_115 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_113
  D.48315_329 = strtol (tmp_113, 0B, 10);
  D.40243_117 = (unsigned char) D.48315_329;
  D.40241_115->agreed_pt = D.40243_117;
  D.40244_118 = D.40241_115->agreed_pt;
  D.40241_115->pt = D.40244_118;
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:540
  # PRED: 42 [30.2%]  (false,exec) 43 [100.0%]  (fallthru,exec)
  D.40154_119 = session_3(D)->channel;
  tmp_120 = switch_channel_get_variable_dup (D.40154_119, "rtp_video_recv_pt", 1, -1);
  # DEBUG tmp => tmp_120
  if (tmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [69.8%]  (true,exec) 46 [30.2%]  (false,exec)

  # BLOCK 45 freq:377
  # PRED: 44 [69.8%]  (true,exec)
  D.40241_121 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_120
  D.48318_330 = strtol (tmp_120, 0B, 10);
  D.40248_123 = (unsigned char) D.48318_330;
  D.40241_121->recv_pt = D.40248_123;
  # SUCC: 46 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:540
  # PRED: 44 [30.2%]  (false,exec) 45 [100.0%]  (fallthru,exec)
  D.40241_124 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40154_125 = session_3(D)->channel;
  D.40249_126 = switch_channel_get_variable_dup (D.40154_125, "rtp_use_video_codec_name", 1, -1);
  D.40241_124->rm_encoding = D.40249_126;
  D.40241_127 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40154_128 = session_3(D)->channel;
  D.40250_129 = switch_channel_get_variable_dup (D.40154_128, "rtp_use_video_codec_fmtp", 1, -1);
  D.40241_127->rm_fmtp = D.40250_129;
  D.40154_130 = session_3(D)->channel;
  switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);
  # DEBUG ip => NULL
  D.40154_132 = session_3(D)->channel;
  port_133 = switch_channel_get_variable_dup (D.40154_132, "local_video_port", 1, -1);
  # DEBUG port => port_133
  D.40154_134 = session_3(D)->channel;
  r_ip_135 = switch_channel_get_variable_dup (D.40154_134, "remote_video_ip", 1, -1);
  # DEBUG r_ip => r_ip_135
  D.40154_136 = session_3(D)->channel;
  r_port_137 = switch_channel_get_variable_dup (D.40154_136, "remote_video_port", 1, -1);
  # DEBUG r_port => r_port_137
  D.40154_138 = session_3(D)->channel;
  switch_channel_set_flag_value (D.40154_138, 98, 1);
  D.40154_139 = session_3(D)->channel;
  tmp_140 = switch_channel_get_variable_dup (D.40154_139, "rtp_use_video_codec_rate", 1, -1);
  # DEBUG tmp => tmp_140
  if (tmp_140 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

  # BLOCK 47 freq:377
  # PRED: 46 [69.8%]  (true,exec)
  D.40241_141 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_140
  D.48321_331 = strtol (tmp_140, 0B, 10);
  D.40254_143 = (long unsigned int) D.48321_331;
  D.40241_141->rm_rate = D.40254_143;
  D.40241_145 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40255_146 = D.40241_145->rm_rate;
  D.40241_145->adv_rm_rate = D.40255_146;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:540
  # PRED: 46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  D.40154_147 = session_3(D)->channel;
  tmp_148 = switch_channel_get_variable_dup (D.40154_147, "rtp_use_video_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_148
  if (tmp_148 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [69.8%]  (true,exec) 50 [30.2%]  (false,exec)

  # BLOCK 49 freq:377
  # PRED: 48 [69.8%]  (true,exec)
  D.40241_149 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_148
  D.48324_332 = strtol (tmp_148, 0B, 10);
  D.40259_151 = (uint32_t) D.48324_332;
  D.40241_149->codec_ms = D.40259_151;
  # SUCC: 50 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:540
  # PRED: 48 [30.2%]  (false,exec) 49 [100.0%]  (fallthru,exec)
  # DEBUG __nptr => port_133
  D.48327_333 = strtol (port_133, 0B, 10);
  D.40261_153 = (short unsigned int) D.48327_333;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port = D.40261_153;
  D.40262_154 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].adv_sdp_port = D.40262_154;
  D.40229_155 = r_ip_135 != 0B;
  D.40230_156 = r_port_137 != 0B;
  D.40231_157 = D.40229_155 && D.40230_156;
  if (D.40231_157 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [29.0%]  (true,exec) 52 [71.0%]  (false,exec)

  # BLOCK 51 freq:157
  # PRED: 50 [29.0%]  (true,exec)
  D.40241_158 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40241_158->remote_sdp_ip = r_ip_135;
  D.40241_159 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => r_port_137
  D.48330_334 = strtol (r_port_137, 0B, 10);
  D.40266_161 = (short unsigned int) D.48330_334;
  D.40241_159->remote_sdp_port = D.40266_161;
  # SUCC: 52 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:1862
  # PRED: 41 [71.0%]  (false,exec) 50 [71.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
  switch_core_media_gen_local_sdp (session_3(D), 0, 0B, 0, 0B, 1);
  switch_core_media_set_video_codec (session_3(D), 1);
  D.40267_162 = switch_core_media_activate_rtp (session_3(D));
  if (D.40267_162 != 0)
    goto <bb 58>;
  else
    goto <bb 53>;
  # SUCC: 58 [61.0%]  (true,exec) 53 [39.0%]  (false,exec)

  # BLOCK 53 freq:726
  # PRED: 52 [39.0%]  (false,exec)
  switch_core_session_get_recovery_crypto_key (session_3(D), 0);
  switch_core_session_get_recovery_crypto_key (session_3(D), 1);
  D.40154_163 = session_3(D)->channel;
  tmp_164 = switch_channel_get_variable_dup (D.40154_163, "rtp_last_audio_local_crypto_key", 1, -1);
  # DEBUG tmp => tmp_164
  if (tmp_164 != 0B)
    goto <bb 54>;
  else
    goto <bb 56>;
  # SUCC: 54 [85.0%]  (true,exec) 56 [15.0%]  (false,exec)

  # BLOCK 54 freq:617
  # PRED: 53 [85.0%]  (true,exec)
  D.40272_165 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40273_166 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_165].remote_crypto_key;
  if (D.40273_166 != 0B)
    goto <bb 55>;
  else
    goto <bb 56>;
  # SUCC: 55 [69.8%]  (true,exec) 56 [30.2%]  (false,exec)

  # BLOCK 55 freq:431
  # PRED: 54 [69.8%]  (true,exec)
  # DEBUG __nptr => tmp_164
  idx_335 = strtol (tmp_164, 0B, 10);
  # DEBUG idx => NULL
  D.40272_168 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40276_169 = switch_core_perform_session_strdup (session_3(D), tmp_164, "src/switch_core_media.c", &__func__, 8690);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_168].local_crypto_key = D.40276_169;
  D.40272_171 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40279_173 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_171]{lb: 0 sz: 144};
  D.40272_174 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40280_175 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_174].local_crypto_key;
  switch_core_media_add_crypto (D.40279_173, D.40280_175, 0);
  D.40272_177 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40279_179 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_177]{lb: 0 sz: 144};
  D.40272_180 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40273_181 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_180].remote_crypto_key;
  switch_core_media_add_crypto (D.40279_179, D.40273_181, 1);
  D.40182_182 = smh_4->session;
  D.40281_183 = D.40182_182->channel;
  switch_channel_set_flag_value (D.40281_183, 92, 1);
  D.40282_184 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  idx.2_185 = (uint32_t) idx_335;
  D.40272_187 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40284_188 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_187].local_raw_key;
  D.40272_189 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40285_190 = SUITES[D.40272_189].keylen;
  D.40286_191 = (switch_size_t) D.40285_190;
  switch_rtp_add_crypto_key (D.40282_184, 0, idx.2_185, D.40272_189, D.40284_188, D.40286_191);
  D.40282_192 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40272_193 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40287_194 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_193].crypto_tag;
  D.40288_195 = (uint32_t) D.40287_194;
  D.40272_197 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40289_198 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_197].remote_raw_key;
  D.40272_199 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40285_200 = SUITES[D.40272_199].keylen;
  D.40286_201 = (switch_size_t) D.40285_200;
  switch_rtp_add_crypto_key (D.40282_192, 1, D.40288_195, D.40272_199, D.40289_198, D.40286_201);
  # SUCC: 56 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:726
  # PRED: 53 [15.0%]  (false,exec) 54 [30.2%]  (false,exec) 55 [100.0%]  (fallthru,exec)
  D.40290_202 = switch_core_media_ready (session_3(D), 0);
  if (D.40290_202 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [39.0%]  (true,exec) 58 [61.0%]  (false,exec)

  # BLOCK 57 freq:283
  # PRED: 56 [39.0%]  (true,exec)
  D.40282_203 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40168_204 = smh_4->mparams;
  D.40293_205 = D.40168_204->te;
  switch_rtp_set_telephony_event (D.40282_203, D.40293_205);
  D.40282_206 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40168_207 = smh_4->mparams;
  D.40294_208 = D.40168_207->recv_te;
  switch_rtp_set_telephony_recv_event (D.40282_206, D.40294_208);
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:9996
  # PRED: 4 [21.6%]  (true,exec) 6 [61.0%]  (true,exec) 52 [61.0%]  (true,exec) 56 [61.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 5 [39.0%]  (true,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_init (switch_core_media_init)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function switch_core_media_init

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_init ()
{
  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  switch_core_gen_certs ("dtls-srtp.pem");
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_deinit (switch_core_media_deinit)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
1 edges in bb 2 predicted to even probabilities

;; Function switch_core_media_deinit

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_deinit ()
{
  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}


