
;; Function atoi (atoi)


Partition map 

Partition 1 (__nptr_1(D) - 1 )
Partition 2 (D.40324_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )

atoi (const char * __nptr)
{
  int D.40324;

<bb 2>:
  D.40324_2 = strtol (__nptr_1(D), 0B, 10);
  return D.40324_2;

}



;; Function atol (atol)


Partition map 

Partition 1 (__nptr_1(D) - 1 )
Partition 2 (D.41133_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )

atol (const char * __nptr)
{
  long int D.41133;

<bb 2>:
  D.41133_2 = strtol (__nptr_1(D), 0B, 10);
  return D.41133_2;

}



;; Function switch_core_codec_ready (switch_core_codec_ready)

Try : iftmp.104_1(P1) & iftmp.104_8(P8) : Same root, coalesced --> P1.
Try : iftmp.104_1(P1) & iftmp.104_9(P9) : Same root, coalesced --> P1.

Partition map 

Partition 1 (iftmp.104_1 - 1 8 9 )
Partition 2 (codec_2(D) - 2 )
Partition 3 (D.45449_3 - 3 )
Partition 4 (D.45450_4 - 4 )
Partition 5 (D.45452_5 - 5 )
Partition 6 (D.45454_6 - 6 )
Partition 7 (D.45456_7 - 7 )
Partition 10 (D.45444_10 - 10 )
Partition 11 (.MEM_11(D) - 11 )

switch_core_codec_ready (struct switch_codec_t * codec)
{
  const struct switch_codec_implementation_t * D.45456;
  struct switch_codec_interface_t * D.45454;
  struct switch_mutex_t * D.45452;
  uint32_t D.45450;
  uint32_t D.45449;
  int iftmp.104;
  switch_bool_t D.45444;

<bb 2>:
  if (codec_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

<bb 3>:
  D.45449_3 = codec_2(D)->flags;
  D.45450_4 = D.45449_3 & 256;
  if (D.45450_4 != 0)
    goto <bb 4>;
  else
    goto <bb 8>;

<bb 4>:
  D.45452_5 = codec_2(D)->mutex;
  if (D.45452_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 8>;

<bb 5>:
  D.45454_6 = codec_2(D)->codec_interface;
  if (D.45454_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.45456_7 = codec_2(D)->implementation;
  if (D.45456_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  iftmp.104_8 = 1;
  goto <bb 9>;

<bb 8>:
  iftmp.104_9 = 0;

<bb 9>:
  # iftmp.104_1 = PHI <iftmp.104_8(7), iftmp.104_9(8)>
  D.45444_10 = (switch_bool_t) iftmp.104_1;
  return D.45444_10;

}



;; Function _zstr (_zstr)

Try : D.40296_6(P6) & iftmp.3_1(P1) --> P6 D.40296
Try : iftmp.3_1(P6) & iftmp.3_5(P5) --> P6 D.40296
Try : iftmp.3_1(P6) & iftmp.3_4(P4) --> P6 D.40296

Partition map 

Partition 2 (s_2(D) - 2 )
Partition 3 (D.40302_3 - 3 )
Partition 6 (D.40296_6 - 1 4 5 6 )
Partition 7 (.MEM_7(D) - 7 )

Coalesced iftmp.3_1 to D.40296_6
Coalesced iftmp.3_4 to D.40296_6
Coalesced iftmp.3_5 to D.40296_6
Scope blocks after cleanups:

{ Scope block #0 

}
_zstr (const char * s)
{
  const char D.40302;
  int D.40296;

<bb 2>:
  if (s_2(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  D.40302_3 = *s_2(D);
  if (D.40302_3 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.40296_5 = 1;
  goto <bb 6>;

<bb 5>:
  D.40296_4 = 0;

<bb 6>:
  # D.40296_1 = PHI <D.40296_5(4), D.40296_4(5)>
  D.40296_6 = D.40296_1;
  return D.40296_6;

}



;; Function switch_known_bitrate (switch_known_bitrate)

Try : D.40703_1(P1) & D.40703_4(P4) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_5(P5) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_6(P6) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_7(P7) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_8(P8) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_9(P9) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_10(P10) : Same root, coalesced --> P1.
Try : D.40703_1(P1) & D.40703_11(P11) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40703_1 - 1 4 5 6 7 8 9 10 11 )
Partition 2 (payload_2(D) - 2 )
Partition 3 (D.40702_3 - 3 )

switch_known_bitrate (switch_payload_t payload)
{
  uint32_t D.40703;
  int D.40702;

<bb 2>:
  D.40702_3 = (int) payload_2(D);
  switch (D.40702_3) <default: <L10>, case 0: <L0>, case 3: <L1>, case 4: <L2>, case 7: <L3>, case 8: <L4>, case 9: <L5>, case 18: <L6>>

<L0>:
  D.40703_4 = 64000;
  goto <bb 11>;

<L1>:
  D.40703_5 = 13200;
  goto <bb 11>;

<L2>:
  D.40703_6 = 6300;
  goto <bb 11>;

<L3>:
  D.40703_7 = 2400;
  goto <bb 11>;

<L4>:
  D.40703_8 = 64000;
  goto <bb 11>;

<L5>:
  D.40703_9 = 64000;
  goto <bb 11>;

<L6>:
  D.40703_10 = 8000;
  goto <bb 11>;

<L10>:
  D.40703_11 = 0;

<bb 11>:
  # D.40703_1 = PHI <D.40703_4(3), D.40703_5(4), D.40703_6(5), D.40703_7(6), D.40703_8(7), D.40703_9(8), D.40703_10(9), D.40703_11(10)>
  return D.40703_1;

}



;; Function switch_safe_atoi (switch_safe_atoi)

Try : D.47229_10(P10) & D.47230_8(P8) --> P10 D.47229
Try : iftmp.100_3(P3) & D.47229_10(P10) --> P10 D.47229
Try : iftmp.100_5(P5) & dft_4(D)(P4) --> P5 dft
Try : D.45420_6(P6) & iftmp.100_1(P1) --> P6 D.45420
Try : iftmp.100_1(P6) & iftmp.100_3(P10) --> P10 D.47229
Try : iftmp.100_1(P10) & dft_5(P5) --> P10 dft

Partition map 

Partition 2 (nptr_2(D) - 2 )
Partition 7 (.MEM_7(D) - 7 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (dft_10 - 1 3 4 5 6 8 10 )

Coalesced iftmp.100_1 to dft_10
Coalesced iftmp.100_3 to dft_10
Coalesced D.45420_6 to dft_10
Coalesced D.47230_8 to dft_10
Scope blocks after cleanups:

{ Scope block #0 

  { Scope block #2 ./src/include/switch_utils.h:735 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #3 Originating from :#0 

    }

  }

}
switch_safe_atoi (const char * nptr, int dft)
{
<bb 2>:
  if (nptr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  # DEBUG __nptr => nptr_2(D)
  dft_8 = strtol (nptr_2(D), 0B, 10);
  dft_10 = dft_8;
  dft_3 = dft_10;
  goto <bb 5>;

<bb 4>:
  dft_5 = dft_4(D);

<bb 5>:
  # dft_1 = PHI <dft_3(3), dft_5(4)>
  dft_6 = dft_1;
  return dft_6;

}



;; Function switch_media_type2str (switch_media_type2str)

Try : D.44061_1(P1) & D.44061_3(P3) : Same root, coalesced --> P1.
Try : D.44061_1(P1) & D.44061_4(P4) : Same root, coalesced --> P1.
Try : D.44061_1(P1) & D.44061_5(P5) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.44061_1 - 1 3 4 5 )
Partition 2 (type_2(D) - 2 )

switch_media_type2str (switch_media_type_t type)
{
  const char * D.44061;

<bb 2>:
  switch (type_2(D)) <default: <L2>, case 0: <L0>, case 1: <L1>>

<L0>:
  D.44061_3 = "audio";
  goto <bb 6>;

<L1>:
  D.44061_4 = "video";
  goto <bb 6>;

<L2>:
  D.44061_5 = "!ERR";

<bb 6>:
  # D.44061_1 = PHI <D.44061_3(3), D.44061_4(4), D.44061_5(5)>
  return D.44061_1;

}



;; Function greedy_sort (greedy_sort)

Try : j_1(P1) & j_9(P9) : Same root, coalesced --> P1.
Try : j_1(P1) & j_18(P18) : Same root, coalesced --> P1.
Try : f_3(P3) & f_4(P4) : Same root, coalesced --> P3.
Try : f_3(P3) & f_40(P40) : Same root, coalesced --> P3.
Try : j_2(P2) & j_32(P32) : Same root, coalesced --> P2.
Try : j_2(P2) & j_41(P41) : Same root, coalesced --> P2.
Try : f_4(P3) & f_5(P5) : Same root, coalesced --> P3.
Try : f_4(P3) & f_3(P3) : Already coalesced.
Try : f_5(P3) & f_8(P8) : Same root, coalesced --> P3.
Try : f_5(P3) & f_4(P3) : Already coalesced.
Try : g_6(P6) & g_19(P19) : Same root, coalesced --> P6.
Try : g_6(P6) & g_42(P42) : Same root, coalesced --> P6.

Partition map 

Partition 1 (j_1 - 1 9 18 )
Partition 2 (j_2 - 2 32 41 )
Partition 3 (f_3 - 3 4 5 8 40 )
Partition 6 (g_6 - 6 19 42 )
Partition 7 (j_7 - 7 )
Partition 10 (m_idx_10(D) - 10 )
Partition 11 (j.101_11 - 11 )
Partition 12 (D.45427_12 - 12 )
Partition 13 (D.45428_13 - 13 )
Partition 14 (j.101_14 - 14 )
Partition 15 (D.45427_15 - 15 )
Partition 16 (matches_16(D) - 16 )
Partition 17 (D.45429_17 - 17 )
Partition 20 (smh_20(D) - 20 )
Partition 21 (D.45439_21 - 21 )
Partition 22 (D.45440_22 - 22 )
Partition 23 (D.45441_23 - 23 )
Partition 24 (total_codecs_24(D) - 24 )
Partition 25 (D.45442_25 - 25 )
Partition 26 (D.45443_26 - 26 )
Partition 27 (g.102_27 - 27 )
Partition 28 (D.45431_28 - 28 )
Partition 29 (codec_array_29(D) - 29 )
Partition 30 (D.45432_30 - 30 )
Partition 31 (imp_31 - 31 )
Partition 33 (D.45433_33 - 33 )
Partition 34 (f.103_34 - 34 )
Partition 35 (D.45437_35 - 35 )
Partition 36 (D.45438_36 - 36 )
Partition 37 (j.101_37 - 37 )
Partition 38 (D.45427_38 - 38 )
Partition 39 (D.45428_39 - 39 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47(D) - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )

greedy_sort (struct switch_media_handle_t * smh, struct matches * matches, int m_idx, const struct switch_codec_implementation_t * * codec_array, int total_codecs)
{
  const struct switch_codec_implementation_t * imp;
  struct matches mtmp[30];
  int g;
  int f;
  int j;
  _Bool D.45443;
  _Bool D.45442;
  _Bool D.45441;
  int D.45440;
  struct switch_core_media_params_t * D.45439;
  struct matches * D.45438;
  unsigned int D.45437;
  unsigned int f.103;
  const struct switch_codec_implementation_t * D.45433;
  const struct switch_codec_implementation_t * * D.45432;
  unsigned int D.45431;
  unsigned int g.102;
  struct matches * D.45429;
  struct matches * D.45428;
  unsigned int D.45427;
  unsigned int j.101;

<bb 2>:
  j_7 = 0;
  # DEBUG j => j_7
  f_8 = 0;
  # DEBUG f => f_8
  mtmp = {};
  j_9 = 0;
  # DEBUG j => j_9
  goto <bb 4>;

<bb 3>:
  j.101_11 = (unsigned int) j_1;
  D.45427_12 = j.101_11 * 16;
  D.45428_13 = &mtmp + D.45427_12;
  j.101_14 = (unsigned int) j_1;
  D.45427_15 = j.101_14 * 16;
  D.45429_17 = matches_16(D) + D.45427_15;
  *D.45428_13 = *D.45429_17;
  j_18 = j_1 + 1;
  # DEBUG j => j_18

<bb 4>:
  # j_1 = PHI <j_9(2), j_18(3)>
  # DEBUG j => j_1
  if (j_1 < m_idx_10(D))
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  g_19 = 0;
  # DEBUG g => g_19
  goto <bb 12>;

<bb 6>:
  g.102_27 = (unsigned int) g_6;
  D.45431_28 = g.102_27 * 4;
  D.45432_30 = codec_array_29(D) + D.45431_28;
  imp_31 = *D.45432_30;
  # DEBUG imp => imp_31
  j_32 = 0;
  # DEBUG j => j_32
  goto <bb 10>;

<bb 7>:
  D.45433_33 = mtmp[j_2].imp;
  if (D.45433_33 == imp_31)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  f.103_34 = (unsigned int) f_4;
  D.45437_35 = f.103_34 * 16;
  D.45438_36 = matches_16(D) + D.45437_35;
  j.101_37 = (unsigned int) j_2;
  D.45427_38 = j.101_37 * 16;
  D.45428_39 = &mtmp + D.45427_38;
  *D.45438_36 = *D.45428_39;
  f_40 = f_4 + 1;
  # DEBUG f => f_40

<bb 9>:
  # f_3 = PHI <f_4(7), f_40(8)>
  # DEBUG f => f_3
  j_41 = j_2 + 1;
  # DEBUG j => j_41

<bb 10>:
  # j_2 = PHI <j_32(6), j_41(9)>
  # f_4 = PHI <f_5(6), f_3(9)>
  # DEBUG f => f_4
  # DEBUG j => j_2
  if (j_2 < m_idx_10(D))
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 11>:
  g_42 = g_6 + 1;
  # DEBUG g => g_42

<bb 12>:
  # f_5 = PHI <f_8(5), f_4(11)>
  # g_6 = PHI <g_19(5), g_42(11)>
  # DEBUG g => g_6
  # DEBUG f => f_5
  D.45439_21 = smh_20(D)->mparams;
  D.45440_22 = D.45439_21->num_codecs;
  D.45441_23 = D.45440_22 > g_6;
  D.45442_25 = g_6 < total_codecs_24(D);
  D.45443_26 = D.45441_23 && D.45442_25;
  if (D.45443_26 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;

<bb 13>:
  return;

}



;; Function clear_pmaps (clear_pmaps)

Try : pmap_1(P1) & pmap_3(P3) : Same root, coalesced --> P1.
Try : pmap_1(P1) & pmap_5(P5) : Same root, coalesced --> P1.

Partition map 

Partition 1 (pmap_1 - 1 3 5 )
Partition 2 (engine_2(D) - 2 )
Partition 4 (D.41160_4 - 4 )
Partition 6 (.MEM_6 - 6 )
Partition 7 (.MEM_7(D) - 7 )
Partition 8 (.MEM_8 - 8 )
Partition 9 (.MEM_9 - 9 )

clear_pmaps (struct switch_rtp_engine_t * engine)
{
  struct payload_map_t * pmap;
  uint8_t D.41160;

<bb 2>:
  pmap_3 = engine_2(D)->payload_map;
  # DEBUG pmap => pmap_3
  goto <bb 4>;

<bb 3>:
  pmap_1->negotiated = 0;
  pmap_1->current = 0;
  pmap_5 = pmap_1->next;
  # DEBUG pmap => pmap_5

<bb 4>:
  # pmap_1 = PHI <pmap_3(2), pmap_5(3)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.41160_4 = pmap_1->allocated;
  if (D.41160_4 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;

<bb 6>:
  return;

}



;; Function dtls_ok (dtls_ok)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (D.42520_2 - 2 )
Partition 3 (D.42521_3 - 3 )
Partition 4 (D.42519_4 - 4 )
Partition 5 (.MEM_5(D) - 5 )
Partition 6 (.MEM_6 - 6 )

dtls_ok (struct switch_core_session_t * session)
{
  uint32_t D.42521;
  struct switch_channel_t * D.42520;
  int D.42519;

<bb 2>:
  D.42520_2 = session_1(D)->channel;
  D.42521_3 = switch_channel_test_flag (D.42520_2, 111);
  D.42519_4 = (int) D.42521_3;
  return D.42519_4;

}



;; Function get_media_profile_name (get_media_profile_name)

Try : D.42974_1(P1) & D.42974_7(P7) : Same root, coalesced --> P1.
Try : D.42974_1(P1) & D.42974_8(P8) : Same root, coalesced --> P1.
Try : D.42974_1(P1) & D.42974_10(P10) : Same root, coalesced --> P1.
Try : D.42974_1(P1) & D.42974_11(P11) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.42974_1 - 1 7 8 10 11 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.42967_3 - 3 )
Partition 4 (D.42968_4 - 4 )
Partition 5 (D.42967_5 - 5 )
Partition 6 (D.42971_6 - 6 )
Partition 9 (secure_9(D) - 9 )
Partition 12 (.MEM_12(D) - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

get_media_profile_name (struct switch_core_session_t * session, int secure)
{
  static const char __PRETTY_FUNCTION__[23] = "get_media_profile_name";
  const char * D.42974;
  uint32_t D.42971;
  uint32_t D.42968;
  struct switch_channel_t * D.42967;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);

<bb 4>:
  D.42967_3 = session_2(D)->channel;
  D.42968_4 = switch_channel_test_flag (D.42967_3, 106);
  if (D.42968_4 != 0)
    goto <bb 5>;
  else
    goto <bb 8>;

<bb 5>:
  D.42967_5 = session_2(D)->channel;
  D.42971_6 = switch_channel_test_flag (D.42967_5, 107);
  if (D.42971_6 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.42974_7 = "UDP/TLS/RTP/SAVPF";
  goto <bb 11>;

<bb 7>:
  D.42974_8 = "RTP/SAVPF";
  goto <bb 11>;

<bb 8>:
  if (secure_9(D) != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.42974_10 = "RTP/SAVP";
  goto <bb 11>;

<bb 10>:
  D.42974_11 = "RTP/AVP";

<bb 11>:
  # D.42974_1 = PHI <D.42974_7(6), D.42974_8(7), D.42974_10(9), D.42974_11(10)>
  return D.42974_1;

}



;; Function switch_core_media_find_zrtp_hash (switch_core_media_find_zrtp_hash)

Try : D.47248_75(P75) & D.47250_74(P74) --> P75 D.47248
Try : D.40640_35(P35) & D.47248_75(P75) --> P75 D.47248
Try : got_audio_3(P3) & got_audio_45(P45) : Same root, coalesced --> P3.
Try : got_audio_3(P3) & got_audio_5(P5) : Same root, coalesced --> P3.
Try : got_audio_3(P3) & got_audio_5(P3) : Already coalesced.
Try : got_video_6(P6) & got_video_8(P8) : Same root, coalesced --> P6.
Try : got_video_6(P6) & got_video_8(P6) : Already coalesced.
Try : got_video_6(P6) & got_video_52(P52) : Same root, coalesced --> P6.
Try : attr_2(P2) & attr_33(P33) : Same root, coalesced --> P2.
Try : attr_2(P2) & attr_53(P53) : Same root, coalesced --> P2.
Try : got_audio_4(P4) & got_audio_5(P3) : Same root, coalesced --> P3.
Try : got_audio_4(P3) & got_audio_5(P3) : Already coalesced.
Try : got_audio_4(P3) & got_audio_3(P3) : Already coalesced.
Try : got_audio_4(P3) & got_audio_5(P3) : Already coalesced.
Try : got_video_7(P7) & got_video_8(P6) : Same root, coalesced --> P6.
Try : got_video_7(P6) & got_video_8(P6) : Already coalesced.
Try : got_video_7(P6) & got_video_6(P6) : Already coalesced.
Try : got_video_7(P6) & got_video_8(P6) : Already coalesced.
Try : m_1(P1) & m_20(P20) : Same root, coalesced --> P1.
Try : m_1(P1) & m_54(P54) : Same root, coalesced --> P1.
Try : got_audio_5(P3) & got_audio_11(P11) : Same root, coalesced --> P3.
Try : got_audio_5(P3) & got_audio_4(P3) : Already coalesced.
Try : got_video_8(P6) & got_video_12(P12) : Same root, coalesced --> P6.
Try : got_video_8(P6) & got_video_7(P6) : Already coalesced.

Partition map 

Partition 1 (m_1 - 1 20 54 )
Partition 2 (attr_2 - 2 33 53 )
Partition 3 (got_audio_3 - 3 4 5 11 45 )
Partition 6 (got_video_6 - 6 7 8 12 52 )
Partition 9 (session_9(D) - 9 )
Partition 10 (channel_10 - 10 )
Partition 13 (D.40619_13 - 13 )
Partition 14 (D.40619_14 - 14 )
Partition 15 (audio_engine_15 - 15 )
Partition 16 (D.40619_16 - 16 )
Partition 17 (video_engine_17 - 17 )
Partition 18 (D.40622_18 - 18 )
Partition 19 (sdp_19(D) - 19 )
Partition 21 (D.40623_21 - 21 )
Partition 22 (D.40624_22 - 22 )
Partition 23 (D.40625_23 - 23 )
Partition 24 (D.40628_24 - 24 )
Partition 25 (D.40631_25 - 25 )
Partition 26 (D.40632_26 - 26 )
Partition 27 (D.40633_27 - 27 )
Partition 28 (D.40634_28 - 28 )
Partition 29 (D.40631_29 - 29 )
Partition 30 (D.40636_30 - 30 )
Partition 31 (D.40637_31 - 31 )
Partition 32 (D.40638_32 - 32 )
Partition 34 (D.40639_34 - 34 )
Partition 36 (D.40639_36 - 36 )
Partition 37 (D.40645_37 - 37 )
Partition 38 (D.40647_38 - 38 )
Partition 39 (D.40631_39 - 39 )
Partition 40 (D.40650_40 - 40 )
Partition 41 (D.40647_41 - 41 )
Partition 42 (D.40647_42 - 42 )
Partition 43 (D.40647_43 - 43 )
Partition 44 (D.40651_44 - 44 )
Partition 46 (D.40631_46 - 46 )
Partition 47 (D.40655_47 - 47 )
Partition 48 (D.40647_48 - 48 )
Partition 49 (D.40647_49 - 49 )
Partition 50 (D.40647_50 - 50 )
Partition 51 (D.40656_51 - 51 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58(D) - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (.MEM_69 - 69 )
Partition 70 (.MEM_70 - 70 )
Partition 71 (.MEM_71 - 71 )
Partition 72 (.MEM_72 - 72 )
Partition 73 (D.47249_73 - 73 )
Partition 75 (D.47248_75 - 35 74 75 )

Coalesced D.40640_35 to D.47248_75
Coalesced D.47250_74 to D.47248_75
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_channel_t * channel;
  struct switch_rtp_engine_t * audio_engine;
  struct switch_rtp_engine_t * video_engine;
  struct sdp_media_t * m;
  struct sdp_attribute_t * attr;
  int got_audio;
  int got_video;
  static const char __func__[33] = "switch_core_media_find_zrtp_hash";

  { Scope block #4 src/switch_core_media.c:340 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #5 Originating from :#0 

    }

  }

}
switch_core_media_find_zrtp_hash (struct switch_core_session_t * session, struct sdp_session_t * sdp)
{
  const char D.47249;
  int D.47248;
  static const char __func__[33] = "switch_core_media_find_zrtp_hash";
  int got_video;
  int got_audio;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  struct switch_rtp_engine_t * video_engine;
  struct switch_rtp_engine_t * audio_engine;
  struct switch_channel_t * channel;
  char * D.40656;
  struct switch_core_session_t * D.40655;
  char * D.40651;
  struct switch_core_session_t * D.40650;
  const char * D.40647;
  int D.40645;
  const char * D.40639;
  _Bool D.40638;
  _Bool D.40637;
  _Bool D.40636;
  _Bool D.40634;
  _Bool D.40633;
  _Bool D.40632;
  sdp_media_e D.40631;
  long unsigned int D.40628;
  _Bool D.40625;
  _Bool D.40624;
  _Bool D.40623;
  struct switch_core_session_t * D.40622;
  struct switch_media_handle_t * D.40619;

<bb 2>:
  channel_10 = switch_core_session_get_channel (session_9(D));
  # DEBUG channel => channel_10
  got_audio_11 = 0;
  # DEBUG got_audio => got_audio_11
  got_video_12 = 0;
  # DEBUG got_video => got_video_12
  D.40619_13 = session_9(D)->media_handle;
  if (D.40619_13 == 0B)
    goto <bb 26>;
  else
    goto <bb 3>;

<bb 3>:
  D.40619_14 = session_9(D)->media_handle;
  audio_engine_15 = &D.40619_14->engines;
  # DEBUG audio_engine => audio_engine_15
  D.40619_16 = session_9(D)->media_handle;
  video_engine_17 = &D.40619_16->engines[1];
  # DEBUG video_engine => video_engine_17
  D.40622_18 = switch_channel_get_session (channel_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");
  m_20 = sdp_19(D)->sdp_media;
  # DEBUG m => m_20
  goto <bb 25>;

<bb 4>:
  D.40623_21 = got_audio_5 != 0;
  D.40624_22 = got_video_8 != 0;
  D.40625_23 = D.40623_21 && D.40624_22;
  if (D.40625_23 != 0)
    goto <bb 26>;
  else
    goto <bb 5>;

<bb 5>:
  D.40628_24 = m_1->m_port;
  if (D.40628_24 != 0)
    goto <bb 6>;
  else
    goto <bb 24>;

<bb 6>:
  D.40631_25 = m_1->m_type;
  D.40632_26 = D.40631_25 == 2;
  D.40633_27 = got_audio_5 == 0;
  D.40634_28 = D.40632_26 && D.40633_27;
  if (D.40634_28 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.40631_29 = m_1->m_type;
  D.40636_30 = D.40631_29 == 3;
  D.40637_31 = got_video_8 == 0;
  D.40638_32 = D.40636_30 && D.40637_31;
  if (D.40638_32 != 0)
    goto <bb 8>;
  else
    goto <bb 24>;

<bb 8>:
  attr_33 = m_1->m_attributes;
  # DEBUG attr => attr_33
  goto <bb 23>;

<bb 9>:
  D.40639_34 = attr_2->a_name;
  # DEBUG s => D.40639_34
  if (D.40639_34 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47249_73 = *D.40639_34;
  if (D.47249_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.47248_74 = PHI <1(9), 1(10), 0(11)>
  D.47248_75 = D.47248_74;
  D.47248_35 = D.47248_75;
  if (D.47248_35 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 22>;

<bb 14>:
  D.40639_36 = attr_2->a_name;
  D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
  if (D.40645_37 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;

<bb 15>:
  D.40647_38 = attr_2->a_value;
  if (D.40647_38 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  // predicted unlikely by continue predictor.
  goto <bb 22>;

<bb 17>:
  D.40631_39 = m_1->m_type;
  if (D.40631_39 == 2)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.40650_40 = switch_channel_get_session (channel_10);
  D.40647_41 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);
  D.40647_42 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);
  D.40647_43 = attr_2->a_value;
  D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);
  audio_engine_15->remote_sdp_zrtp_hash = D.40651_44;
  got_audio_45 = got_audio_5 + 1;
  # DEBUG got_audio => got_audio_45
  goto <bb 21>;

<bb 19>:
  D.40631_46 = m_1->m_type;
  if (D.40631_46 == 3)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40655_47 = switch_channel_get_session (channel_10);
  D.40647_48 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);
  D.40647_49 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);
  D.40647_50 = attr_2->a_value;
  D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);
  video_engine_17->remote_sdp_zrtp_hash = D.40656_51;
  got_video_52 = got_video_8 + 1;
  # DEBUG got_video => got_video_52

<bb 21>:
  # got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>
  # got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>
  # DEBUG got_video => got_video_6
  # DEBUG got_audio => got_audio_3
  switch_channel_set_flag_value (channel_10, 75, 1);
  goto <bb 24>;

<bb 22>:
  attr_53 = attr_2->a_next;
  # DEBUG attr => attr_53

<bb 23>:
  # attr_2 = PHI <attr_33(8), attr_53(22)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 24>;

<bb 24>:
  # got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>
  # got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>
  # DEBUG got_video => got_video_7
  # DEBUG got_audio => got_audio_4
  m_54 = m_1->m_next;
  # DEBUG m => m_54

<bb 25>:
  # m_1 = PHI <m_20(3), m_54(24)>
  # got_audio_5 = PHI <got_audio_11(3), got_audio_4(24)>
  # got_video_8 = PHI <got_video_12(3), got_video_7(24)>
  # DEBUG got_video => got_video_8
  # DEBUG got_audio => got_audio_5
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 4>;
  else
    goto <bb 26>;

<bb 26>:
  return;

}



;; Function _switch_core_media_pass_zrtp_hash2 (_switch_core_media_pass_zrtp_hash2)


Partition map 

Partition 1 (aleg_session_1(D) - 1 )
Partition 2 (D.47175_2 - 2 )
Partition 3 (bleg_session_3(D) - 3 )
Partition 4 (D.47177_4 - 4 )
Partition 5 (D.47175_5 - 5 )
Partition 6 (D.47178_6 - 6 )
Partition 7 (type_7(D) - 7 )
Partition 8 (D.47179_8 - 8 )
Partition 9 (aleg_engine_9 - 9 )
Partition 10 (D.47177_10 - 10 )
Partition 11 (D.47180_11 - 11 )
Partition 12 (D.47179_12 - 12 )
Partition 13 (bleg_engine_13 - 13 )
Partition 14 (D.47181_14 - 14 )
Partition 15 (D.47182_15 - 15 )
Partition 16 (D.47181_16 - 16 )
Partition 17 (D.47183_17 - 17 )
Partition 18 (D.47181_18 - 18 )
Partition 19 (D.47186_19 - 19 )
Partition 20 (D.47187_20 - 20 )
Partition 21 (D.47181_21 - 21 )
Partition 22 (D.47190_22 - 22 )
Partition 23 (D.47187_23 - 23 )
Partition 24 (D.47191_24 - 24 )
Partition 25 (D.47192_25 - 25 )
Partition 26 (D.47193_26 - 26 )
Partition 27 (D.47194_27 - 27 )
Partition 28 (D.47181_28 - 28 )
Partition 29 (D.47197_29 - 29 )
Partition 30 (D.47194_30 - 30 )
Partition 31 (D.47198_31 - 31 )
Partition 32 (D.47181_32 - 32 )
Partition 33 (D.47199_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35(D) - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )

_switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session, switch_media_type_t type)
{
  static const char __func__[35] = "_switch_core_media_pass_zrtp_hash2";
  struct switch_rtp_engine_t * bleg_engine;
  struct switch_rtp_engine_t * aleg_engine;
  char * D.47199;
  char * D.47198;
  struct switch_core_session_t * D.47197;
  char * D.47194;
  char * D.47193;
  struct switch_channel_t * D.47192;
  char * D.47191;
  struct switch_core_session_t * D.47190;
  char * D.47187;
  struct switch_core_session_t * D.47186;
  uint32_t D.47183;
  struct switch_core_session_t * D.47182;
  struct switch_channel_t * D.47181;
  struct switch_rtp_engine_t[2] * D.47180;
  unsigned int D.47179;
  struct switch_rtp_engine_t[2] * D.47178;
  struct switch_media_handle_t * D.47177;
  struct switch_media_handle_t * D.47175;

<bb 2>:
  D.47175_2 = aleg_session_1(D)->media_handle;
  if (D.47175_2 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

<bb 3>:
  D.47177_4 = bleg_session_3(D)->media_handle;
  if (D.47177_4 == 0B)
    goto <bb 10>;
  else
    goto <bb 4>;

<bb 4>:
  D.47175_5 = aleg_session_1(D)->media_handle;
  D.47178_6 = &D.47175_5->engines;
  D.47179_8 = type_7(D) * 11416;
  aleg_engine_9 = D.47178_6 + D.47179_8;
  # DEBUG aleg_engine => aleg_engine_9
  D.47177_10 = bleg_session_3(D)->media_handle;
  D.47180_11 = &D.47177_10->engines;
  D.47179_12 = type_7(D) * 11416;
  bleg_engine_13 = D.47180_11 + D.47179_12;
  # DEBUG bleg_engine => bleg_engine_13
  D.47181_14 = aleg_session_1(D)->channel;
  D.47182_15 = switch_channel_get_session (D.47181_14);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47182_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");
  D.47181_16 = aleg_session_1(D)->channel;
  D.47183_17 = switch_channel_test_flag (D.47181_16, 73);
  if (D.47183_17 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47181_18 = aleg_session_1(D)->channel;
  D.47186_19 = switch_channel_get_session (D.47181_18);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47186_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");
  goto <bb 10>;

<bb 6>:
  D.47187_20 = aleg_engine_9->remote_sdp_zrtp_hash;
  if (D.47187_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.47181_21 = aleg_session_1(D)->channel;
  D.47190_22 = switch_channel_get_session (D.47181_21);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47190_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");
  D.47187_23 = aleg_engine_9->remote_sdp_zrtp_hash;
  D.47191_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47187_23, "src/switch_core_media.c", &__func__, 266);
  bleg_engine_13->local_sdp_zrtp_hash = D.47191_24;
  D.47192_25 = bleg_session_3(D)->channel;
  D.47193_26 = bleg_engine_13->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47192_25, "l_sdp_audio_zrtp_hash", D.47193_26, 1);

<bb 8>:
  D.47194_27 = bleg_engine_13->remote_sdp_zrtp_hash;
  if (D.47194_27 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.47181_28 = aleg_session_1(D)->channel;
  D.47197_29 = switch_channel_get_session (D.47181_28);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47197_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");
  D.47194_30 = bleg_engine_13->remote_sdp_zrtp_hash;
  D.47198_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47194_30, "src/switch_core_media.c", &__func__, 272);
  aleg_engine_9->local_sdp_zrtp_hash = D.47198_31;
  D.47181_32 = aleg_session_1(D)->channel;
  D.47199_33 = aleg_engine_9->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47181_32, "l_sdp_audio_zrtp_hash", D.47199_33, 1);

<bb 10>:
  return;

}



;; Function switch_true (switch_true)

Try : D.47254_19(P19) & D.47255_17(P17) --> P19 D.47254
Try : D.40617_11(P11) & D.47254_19(P19) --> P19 D.47254
Try : D.40595_14(P14) & iftmp.6_1(P1) --> P14 D.40595
Try : iftmp.6_1(P14) & iftmp.6_12(P12) --> P14 D.40595
Try : iftmp.6_1(P14) & iftmp.6_13(P13) --> P14 D.40595

Partition map 

Partition 2 (expr_2(D) - 2 )
Partition 3 (D.40601_3 - 3 )
Partition 4 (D.40603_4 - 4 )
Partition 5 (D.40605_5 - 5 )
Partition 6 (D.40607_6 - 6 )
Partition 7 (D.40609_7 - 7 )
Partition 8 (D.40611_8 - 8 )
Partition 9 (D.40613_9 - 9 )
Partition 10 (D.40615_10 - 10 )
Partition 14 (D.40595_14 - 1 12 13 14 )
Partition 15 (.MEM_15(D) - 15 )
Partition 16 (.MEM_16 - 16 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (D.47254_19 - 11 17 19 )

Coalesced iftmp.6_1 to D.40595_14
Coalesced D.40617_11 to D.47254_19
Coalesced iftmp.6_12 to D.40595_14
Coalesced iftmp.6_13 to D.40595_14
Coalesced D.47255_17 to D.47254_19
Scope blocks after cleanups:

{ Scope block #0 

  { Scope block #6 ./src/include/switch_utils.h:436 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #7 Originating from :#0 

    }

  }

}
switch_true (const char * expr)
{
  int D.47254;
  switch_bool_t D.40615;
  int D.40613;
  int D.40611;
  int D.40609;
  int D.40607;
  int D.40605;
  int D.40603;
  int D.40601;
  int D.40595;

<bb 2>:
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 13>;

<bb 3>:
  D.40601_3 = strcasecmp (expr_2(D), "yes");
  if (D.40601_3 == 0)
    goto <bb 12>;
  else
    goto <bb 4>;

<bb 4>:
  D.40603_4 = strcasecmp (expr_2(D), "on");
  if (D.40603_4 == 0)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  D.40605_5 = strcasecmp (expr_2(D), "true");
  if (D.40605_5 == 0)
    goto <bb 12>;
  else
    goto <bb 6>;

<bb 6>:
  D.40607_6 = strcasecmp (expr_2(D), "t");
  if (D.40607_6 == 0)
    goto <bb 12>;
  else
    goto <bb 7>;

<bb 7>:
  D.40609_7 = strcasecmp (expr_2(D), "enabled");
  if (D.40609_7 == 0)
    goto <bb 12>;
  else
    goto <bb 8>;

<bb 8>:
  D.40611_8 = strcasecmp (expr_2(D), "active");
  if (D.40611_8 == 0)
    goto <bb 12>;
  else
    goto <bb 9>;

<bb 9>:
  D.40613_9 = strcasecmp (expr_2(D), "allow");
  if (D.40613_9 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.40615_10 = switch_is_number (expr_2(D));
  if (D.40615_10 != 0)
    goto <bb 11>;
  else
    goto <bb 13>;

<bb 11>:
  # DEBUG __nptr => expr_2(D)
  D.47254_17 = strtol (expr_2(D), 0B, 10);
  D.47254_19 = D.47254_17;
  D.47254_11 = D.47254_19;
  if (D.47254_11 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.40595_12 = 1;
  goto <bb 14>;

<bb 13>:
  D.40595_13 = 0;

<bb 14>:
  # D.40595_1 = PHI <D.40595_12(12), D.40595_13(13)>
  D.40595_14 = D.40595_1;
  return D.40595_14;

}



;; Function switch_false (switch_false)

Try : D.47258_19(P19) & D.47259_17(P17) --> P19 D.47258
Try : D.41157_11(P11) & D.47258_19(P19) --> P19 D.47258
Try : D.41135_14(P14) & iftmp.14_1(P1) --> P14 D.41135
Try : iftmp.14_1(P14) & iftmp.14_12(P12) --> P14 D.41135
Try : iftmp.14_1(P14) & iftmp.14_13(P13) --> P14 D.41135

Partition map 

Partition 2 (expr_2(D) - 2 )
Partition 3 (D.41141_3 - 3 )
Partition 4 (D.41143_4 - 4 )
Partition 5 (D.41145_5 - 5 )
Partition 6 (D.41147_6 - 6 )
Partition 7 (D.41149_7 - 7 )
Partition 8 (D.41151_8 - 8 )
Partition 9 (D.41153_9 - 9 )
Partition 10 (D.41155_10 - 10 )
Partition 14 (D.41135_14 - 1 12 13 14 )
Partition 15 (.MEM_15(D) - 15 )
Partition 16 (.MEM_16 - 16 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (D.47258_19 - 11 17 19 )

Coalesced iftmp.14_1 to D.41135_14
Coalesced D.41157_11 to D.47258_19
Coalesced iftmp.14_12 to D.41135_14
Coalesced iftmp.14_13 to D.41135_14
Coalesced D.47259_17 to D.47258_19
Scope blocks after cleanups:

{ Scope block #0 

  { Scope block #8 ./src/include/switch_utils.h:468 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #9 Originating from :#0 

    }

  }

}
switch_false (const char * expr)
{
  int D.47258;
  switch_bool_t D.41155;
  int D.41153;
  int D.41151;
  int D.41149;
  int D.41147;
  int D.41145;
  int D.41143;
  int D.41141;
  int D.41135;

<bb 2>:
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 13>;

<bb 3>:
  D.41141_3 = strcasecmp (expr_2(D), "no");
  if (D.41141_3 == 0)
    goto <bb 12>;
  else
    goto <bb 4>;

<bb 4>:
  D.41143_4 = strcasecmp (expr_2(D), "off");
  if (D.41143_4 == 0)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  D.41145_5 = strcasecmp (expr_2(D), "false");
  if (D.41145_5 == 0)
    goto <bb 12>;
  else
    goto <bb 6>;

<bb 6>:
  D.41147_6 = strcasecmp (expr_2(D), "f");
  if (D.41147_6 == 0)
    goto <bb 12>;
  else
    goto <bb 7>;

<bb 7>:
  D.41149_7 = strcasecmp (expr_2(D), "disabled");
  if (D.41149_7 == 0)
    goto <bb 12>;
  else
    goto <bb 8>;

<bb 8>:
  D.41151_8 = strcasecmp (expr_2(D), "inactive");
  if (D.41151_8 == 0)
    goto <bb 12>;
  else
    goto <bb 9>;

<bb 9>:
  D.41153_9 = strcasecmp (expr_2(D), "disallow");
  if (D.41153_9 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.41155_10 = switch_is_number (expr_2(D));
  if (D.41155_10 != 0)
    goto <bb 11>;
  else
    goto <bb 13>;

<bb 11>:
  # DEBUG __nptr => expr_2(D)
  D.47258_17 = strtol (expr_2(D), 0B, 10);
  D.47258_19 = D.47258_17;
  D.47258_11 = D.47258_19;
  if (D.47258_11 == 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.41135_12 = 1;
  goto <bb 14>;

<bb 13>:
  D.41135_13 = 0;

<bb 14>:
  # D.41135_1 = PHI <D.41135_12(12), D.41135_13(13)>
  D.41135_14 = D.41135_1;
  return D.41135_14;

}



;; Function add_audio_codec (add_audio_codec)

Try : codec_ms_7(P7) & ptime_6(D)(P6) : 2 different USER vars. No coalesce.
Try : csui.173_69(P69) & D.40664_16(P16) --> P69 csui.173
Try : D.47262_75(P75) & D.47264_72(P72) --> P75 D.47262
Try : map_bit_rate_17(P17) & D.47262_75(P75) --> P75 map_bit_rate
Try : ptime_21(P21) & codec_ms_20(P20) : 2 different USER vars. No coalesce.
Try : D.47270_76(P76) & D.47272_74(P74) --> P76 D.47270
Try : D.40671_23(P23) & D.47270_76(P76) --> P76 D.47270
Try : ptime_27(P27) & codec_ms_26(P26) : 2 different USER vars. No coalesce.
Try : ptime_32(P32) & codec_ms_31(P31) : 2 different USER vars. No coalesce.
Try : codec_ms_1(P1) & codec_ms_7(P7) : Same root, coalesced --> P1.
Try : codec_ms_1(P1) & codec_ms_14(P14) : Same root, coalesced --> P1.
Try : D.47264_72(P75) & D.47264_70(P70) --> P75 map_bit_rate
Try : D.47264_72(P75) & D.47264_71(P71) --> P75 map_bit_rate
Try : codec_ms_2(P2) & codec_ms_1(P1) : Same root, coalesced --> P1.
Try : codec_ms_2(P1) & codec_ms_1(P1) : Already coalesced.
Try : codec_ms_2(P1) & codec_ms_20(P20) : Same root, coalesced --> P1.
Try : map_bit_rate_4(P4) & map_bit_rate_17(P75) : Same root, coalesced --> P75.
Try : map_bit_rate_4(P75) & map_bit_rate_40(P40) : Same root, coalesced --> P75.
Try : codec_ms_3(P3) & codec_ms_2(P1) : Same root, coalesced --> P1.
Try : codec_ms_3(P1) & codec_ms_2(P1) : Already coalesced.
Try : codec_ms_3(P1) & codec_ms_2(P1) : Already coalesced.
Try : codec_ms_3(P1) & codec_ms_43(P43) : Same root, coalesced --> P1.
Try : codec_ms_3(P1) & codec_ms_26(P26) : Same root, coalesced --> P1.
Try : codec_ms_3(P1) & codec_ms_31(P31) : Same root, coalesced --> P1.
Try : map_bit_rate_5(P5) & map_bit_rate_17(P75) : Same root, coalesced --> P75.
Try : map_bit_rate_5(P75) & map_bit_rate_17(P75) : Already coalesced.
Try : map_bit_rate_5(P75) & map_bit_rate_4(P75) : Already coalesced.
Try : map_bit_rate_5(P75) & map_bit_rate_4(P75) : Already coalesced.
Try : map_bit_rate_5(P75) & map_bit_rate_28(P28) : Same root, coalesced --> P75.
Try : map_bit_rate_5(P75) & map_bit_rate_33(P33) : Same root, coalesced --> P75.

Partition map 

Partition 1 (codec_ms_1 - 1 2 3 7 14 20 26 31 43 )
Partition 6 (ptime_6(D) - 6 )
Partition 8 (map_bit_rate_8 - 8 )
Partition 9 (map_9(D) - 9 )
Partition 10 (D.40660_10 - 10 )
Partition 11 (D.40661_11 - 11 )
Partition 12 (D.40662_12 - 12 )
Partition 13 (D.40663_13 - 13 )
Partition 15 (D.40661_15 - 15 )
Partition 18 (D.40660_18 - 18 )
Partition 19 (D.40667_19 - 19 )
Partition 21 (ptime_21 - 21 )
Partition 22 (D.40670_22 - 22 )
Partition 24 (D.40660_24 - 24 )
Partition 25 (D.40674_25 - 25 )
Partition 27 (ptime_27 - 27 )
Partition 29 (D.40660_29 - 29 )
Partition 30 (D.40678_30 - 30 )
Partition 32 (ptime_32 - 32 )
Partition 34 (D.40660_34 - 34 )
Partition 35 (D.40670_35 - 35 )
Partition 36 (D.40682_36 - 36 )
Partition 37 (D.40683_37 - 37 )
Partition 38 (D.40686_38 - 38 )
Partition 39 (D.40686_39 - 39 )
Partition 41 (D.40689_41 - 41 )
Partition 42 (D.40689_42 - 42 )
Partition 44 (D.40682_44 - 44 )
Partition 45 (D.40682_45 - 45 )
Partition 46 (buf_46(D) - 46 )
Partition 47 (D.40698_47 - 47 )
Partition 48 (D.40699_48 - 48 )
Partition 49 (D.40700_49 - 49 )
Partition 50 (buflen_50(D) - 50 )
Partition 51 (D.40701_51 - 51 )
Partition 52 (D.40660_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58(D) - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (csui.173_69 - 16 69 )
Partition 73 (D.47271_73 - 73 )
Partition 75 (map_bit_rate_75 - 4 5 17 28 33 40 70 71 72 75 )
Partition 76 (D.47270_76 - 23 74 76 )

Coalesced D.40664_16 to csui.173_69
Coalesced D.40671_23 to D.47270_76
Coalesced D.47264_70 to map_bit_rate_75
Coalesced D.47264_71 to map_bit_rate_75
Coalesced D.47264_72 to map_bit_rate_75
Coalesced D.47272_74 to D.47270_76
Scope blocks after cleanups:

{ Scope block #0 
  int codec_ms;
  uint32_t map_bit_rate;
  char ptstr[20];
  char ratestr[20];
  char bitstr[20];
  struct switch_codec_fmtp_t codec_fmtp;

  { Scope block #10 src/switch_core_media.c:8143 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #11 Originating from :#0 

    }

  }

  { Scope block #12 src/switch_core_media.c:8137 Originating from :  static uint32_t switch_known_bitrate (switch_payload_t); 
    switch_payload_t payload; (unused)

  }

}
add_audio_codec (struct sdp_rtpmap_t * map, int ptime, char * buf, switch_size_t buflen)
{
  const char D.47271;
  int D.47270;
  unsigned char csui.173;
  struct switch_codec_fmtp_t codec_fmtp;
  char bitstr[20];
  char ratestr[20];
  char ptstr[20];
  uint32_t map_bit_rate;
  int codec_ms;
  switch_size_t D.40701;
  size_t D.40700;
  char * D.40699;
  size_t D.40698;
  int D.40689;
  int D.40686;
  switch_status_t D.40683;
  long unsigned int D.40682;
  int D.40678;
  int D.40674;
  const char * D.40670;
  int D.40667;
  uint32_t D.40663;
  uint32_t D.40662;
  <unnamed-unsigned:7> D.40661;
  const char * D.40660;

<bb 2>:
  codec_ms_7 = ptime_6(D);
  # DEBUG codec_ms => codec_ms_7
  map_bit_rate_8 = 0;
  # DEBUG map_bit_rate => map_bit_rate_8
  ptstr = "";
  ratestr = "";
  bitstr = "";
  codec_fmtp = {};
  if (codec_ms_7 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.40660_10 = map_9(D)->rm_encoding;
  D.40661_11 = map_9(D)->rm_pt;
  D.40662_12 = (uint32_t) D.40661_11;
  D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);
  codec_ms_14 = (int) D.40663_13;
  # DEBUG codec_ms => codec_ms_14

<bb 4>:
  # codec_ms_1 = PHI <codec_ms_7(2), codec_ms_14(3)>
  # DEBUG codec_ms => codec_ms_1
  D.40661_15 = map_9(D)->rm_pt;
  csui.173_16 = (unsigned char) D.40661_15;
  # DEBUG payload => csui.173_16
  csui.173_69 = csui.173_16;
  if (csui.173_69 <= 18)
    goto <bb 6> (<L27>);
  else
    goto <bb 5> (<L26>);

<L26>:
  map_bit_rate_70 = 0;
  goto <bb 7> (<L28>);

<L27>:
  map_bit_rate_71 = CSWTCH.174[csui.173_69];

  # map_bit_rate_72 = PHI <map_bit_rate_70(5), map_bit_rate_71(6)>
<L28>:
<L29>:
  map_bit_rate_75 = map_bit_rate_72;
  map_bit_rate_17 = map_bit_rate_75;
  # DEBUG map_bit_rate => NULL
  if (ptime_6(D) == 0)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.40660_18 = map_9(D)->rm_encoding;
  D.40667_19 = strcasecmp (D.40660_18, "g723");
  if (D.40667_19 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  codec_ms_20 = 30;
  # DEBUG codec_ms => codec_ms_20
  ptime_21 = codec_ms_20;
  # DEBUG ptime => ptime_21

<bb 10>:
  # codec_ms_2 = PHI <codec_ms_1(7), codec_ms_1(8), codec_ms_20(9)>
  # DEBUG codec_ms => codec_ms_2
  D.40670_22 = map_9(D)->rm_fmtp;
  # DEBUG s => D.40670_22
  if (D.40670_22 == 0B)
    goto <bb 13>;
  else
    goto <bb 11>;

<bb 11>:
  D.47271_73 = *D.40670_22;
  if (D.47271_73 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # D.47270_74 = PHI <1(10), 1(11), 0(12)>
  D.47270_76 = D.47270_74;
  D.47270_23 = D.47270_76;
  if (D.47270_23 != 0)
    goto <bb 14>;
  else
    goto <bb 18>;

<bb 14>:
  D.40660_24 = map_9(D)->rm_encoding;
  D.40674_25 = strcasecmp (D.40660_24, "ilbc");
  if (D.40674_25 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  codec_ms_26 = 30;
  # DEBUG codec_ms => codec_ms_26
  ptime_27 = codec_ms_26;
  # DEBUG ptime => ptime_27
  map_bit_rate_28 = 13330;
  # DEBUG map_bit_rate => map_bit_rate_28
  goto <bb 23>;

<bb 16>:
  D.40660_29 = map_9(D)->rm_encoding;
  D.40678_30 = strcasecmp (D.40660_29, "isac");
  if (D.40678_30 == 0)
    goto <bb 17>;
  else
    goto <bb 23>;

<bb 17>:
  codec_ms_31 = 30;
  # DEBUG codec_ms => codec_ms_31
  ptime_32 = codec_ms_31;
  # DEBUG ptime => ptime_32
  map_bit_rate_33 = 32000;
  # DEBUG map_bit_rate => map_bit_rate_33
  goto <bb 23>;

<bb 18>:
  D.40660_34 = map_9(D)->rm_encoding;
  D.40670_35 = map_9(D)->rm_fmtp;
  D.40682_36 = map_9(D)->rm_rate;
  D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);
  if (D.40683_37 == 0)
    goto <bb 19>;
  else
    goto <bb 23>;

<bb 19>:
  D.40686_38 = codec_fmtp.bits_per_second;
  if (D.40686_38 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40686_39 = codec_fmtp.bits_per_second;
  map_bit_rate_40 = (uint32_t) D.40686_39;
  # DEBUG map_bit_rate => map_bit_rate_40

<bb 21>:
  # map_bit_rate_4 = PHI <map_bit_rate_17(19), map_bit_rate_40(20)>
  # DEBUG map_bit_rate => map_bit_rate_4
  D.40689_41 = codec_fmtp.microseconds_per_packet;
  if (D.40689_41 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.40689_42 = codec_fmtp.microseconds_per_packet;
  codec_ms_43 = D.40689_42 / 1000;
  # DEBUG codec_ms => codec_ms_43

<bb 23>:
  # codec_ms_3 = PHI <codec_ms_2(16), codec_ms_2(18), codec_ms_2(21), codec_ms_43(22), codec_ms_26(15), codec_ms_31(17)>
  # map_bit_rate_5 = PHI <map_bit_rate_17(16), map_bit_rate_17(18), map_bit_rate_4(21), map_bit_rate_4(22), map_bit_rate_28(15), map_bit_rate_33(17)>
  # DEBUG map_bit_rate => map_bit_rate_5
  # DEBUG codec_ms => codec_ms_3
  D.40682_44 = map_9(D)->rm_rate;
  if (D.40682_44 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.40682_45 = map_9(D)->rm_rate;
  switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);

<bb 25>:
  if (codec_ms_3 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);

<bb 27>:
  if (map_bit_rate_5 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);

<bb 29>:
  D.40698_47 = strlen (buf_46(D));
  D.40699_48 = buf_46(D) + D.40698_47;
  D.40700_49 = strlen (buf_46(D));
  D.40701_51 = buflen_50(D) - D.40700_49;
  D.40660_52 = map_9(D)->rm_encoding;
  switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);
  return;

}



;; Function switch_core_session_parse_crypto_prefs (switch_core_session_parse_crypto_prefs)

Try : D.47275_108(P108) & D.47277_101(P101) --> P108 D.47275
Try : D.42535_34(P34) & D.47275_108(P108) --> P108 D.47275
Try : D.47279_109(P109) & D.47281_103(P103) --> P109 D.47279
Try : D.42540_37(P37) & D.47279_109(P109) --> P109 D.47279
Try : D.47283_110(P110) & D.47285_105(P105) --> P110 D.47283
Try : D.42543_40(P40) & D.47283_110(P110) --> P110 D.47283
Try : D.47287_111(P111) & D.47289_107(P107) --> P111 D.47287
Try : D.42571_53(P53) & D.47287_111(P111) --> P111 D.47287
Try : var_1(P1) & var_27(P27) : Same root, coalesced --> P1.
Try : var_1(P1) & var_28(P28) : Same root, coalesced --> P1.
Try : var_2(P2) & var_1(P1) : Same root, coalesced --> P1.
Try : var_2(P1) & var_31(P31) : Same root, coalesced --> P1.
Try : val_3(P3) & val_30(P30) : Same root, coalesced --> P3.
Try : val_3(P3) & val_33(P33) : Same root, coalesced --> P3.
Try : suites_5(P5) & suites_16(P16) : Same root, coalesced --> P5.
Try : suites_5(P5) & suites_35(P35) : Same root, coalesced --> P5.
Try : suites_5(P5) & suites_36(P36) : Same root, coalesced --> P5.
Try : suites_6(P6) & suites_5(P5) : Same root, coalesced --> P5.
Try : suites_6(P5) & suites_39(P39) : Same root, coalesced --> P5.
Try : val_4(P4) & val_3(P3) : Same root, coalesced --> P3.
Try : val_4(P3) & val_45(P45) : Same root, coalesced --> P3.
Try : val_4(P3) & val_46(P46) : Same root, coalesced --> P3.
Try : j_9(P9) & j_58(P58) : Same root, coalesced --> P9.
Try : j_9(P9) & j_65(P65) : Same root, coalesced --> P9.
Try : k_10(P10) & k_63(P63) : Same root, coalesced --> P10.
Try : k_10(P10) & k_11(P11) : Same root, coalesced --> P10.
Try : ok_13(P13) & ok_64(P64) : Same root, coalesced --> P13.
Try : ok_13(P13) & ok_57(P57) : Same root, coalesced --> P13.
Try : i_7(P7) & i_56(P56) : Same root, coalesced --> P7.
Try : i_7(P7) & i_66(P66) : Same root, coalesced --> P7.
Try : k_11(P10) & k_20(P20) : Same root, coalesced --> P10.
Try : k_11(P10) & k_10(P10) : Already coalesced.
Try : i_8(P8) & i_67(P67) : Same root, coalesced --> P8.
Try : i_8(P8) & i_70(P70) : Same root, coalesced --> P8.
Try : k_12(P12) & k_20(P10) : Same root, coalesced --> P10.
Try : k_12(P10) & k_69(P69) : Same root, coalesced --> P10.

Partition map 

Partition 1 (var_1 - 1 2 27 28 31 )
Partition 3 (val_3 - 3 4 30 33 45 46 )
Partition 5 (suites_5 - 5 6 16 35 36 39 )
Partition 7 (i_7 - 7 56 66 )
Partition 8 (i_8 - 8 67 70 )
Partition 9 (j_9 - 9 58 65 )
Partition 10 (k_10 - 10 11 12 20 63 69 )
Partition 13 (ok_13 - 13 57 64 )
Partition 14 (var_14 - 14 )
Partition 15 (val_15 - 15 )
Partition 17 (argc_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (j_19 - 19 )
Partition 21 (session_21(D) - 21 )
Partition 22 (smh_22 - 22 )
Partition 23 (D.42525_23 - 23 )
Partition 24 (D.42526_24 - 24 )
Partition 25 (D.42525_25 - 25 )
Partition 26 (D.42529_26 - 26 )
Partition 29 (D.42525_29 - 29 )
Partition 32 (D.42525_32 - 32 )
Partition 38 (D.42525_38 - 38 )
Partition 41 (D.42525_41 - 41 )
Partition 42 (D.42548_42 - 42 )
Partition 43 (D.42525_43 - 43 )
Partition 44 (D.42550_44 - 44 )
Partition 47 (D.42552_47 - 47 )
Partition 48 (D.42559_48 - 48 )
Partition 49 (D.42561_49 - 49 )
Partition 50 (D.42562_50 - 50 )
Partition 51 (D.42565_51 - 51 )
Partition 52 (D.42569_52 - 52 )
Partition 54 (D.42573_54 - 54 )
Partition 55 (argc_55 - 55 )
Partition 59 (D.42574_59 - 59 )
Partition 60 (D.42575_60 - 60 )
Partition 61 (D.42576_61 - 61 )
Partition 62 (D.42579_62 - 62 )
Partition 68 (D.42582_68 - 68 )
Partition 71 (.MEM_71 - 71 )
Partition 72 (.MEM_72 - 72 )
Partition 73 (.MEM_73 - 73 )
Partition 74 (.MEM_74 - 74 )
Partition 75 (.MEM_75 - 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (.MEM_77 - 77 )
Partition 78 (.MEM_78 - 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81(D) - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89 - 89 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (D.47276_100 - 100 )
Partition 102 (D.47280_102 - 102 )
Partition 104 (D.47284_104 - 104 )
Partition 106 (D.47288_106 - 106 )
Partition 108 (D.47275_108 - 34 101 108 )
Partition 109 (D.47279_109 - 37 103 109 )
Partition 110 (D.47283_110 - 40 105 110 )
Partition 111 (D.47287_111 - 53 107 111 )

Coalesced D.42535_34 to D.47275_108
Coalesced D.42540_37 to D.47279_109
Coalesced D.42543_40 to D.47283_110
Coalesced D.42571_53 to D.47287_111
Coalesced D.47277_101 to D.47275_108
Coalesced D.47281_103 to D.47279_109
Coalesced D.47285_105 to D.47283_110
Coalesced D.47289_107 to D.47287_111
Scope blocks after cleanups:

{ Scope block #0 
  const char * var;
  const char * val;
  char * suites;
  struct switch_media_handle_t * smh;
  char * fields[10];
  int argc;
  int i;
  int j;
  int k;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";

  { Scope block #14 src/switch_core_media.c:1127 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #15 Originating from :#0 

    }

  }

  { Scope block #16 src/switch_core_media.c:1108 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #17 Originating from :#0 

    }

  }

  { Scope block #18 src/switch_core_media.c:1104 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #19 Originating from :#0 

    }

  }

  { Scope block #20 src/switch_core_media.c:1100 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #21 Originating from :#0 

    }

  }

  { Scope block #22 
    int ok;

  }

}
switch_core_session_parse_crypto_prefs (struct switch_core_session_t * session)
{
  const char D.47288;
  int D.47287;
  const char D.47284;
  int D.47283;
  const char D.47280;
  int D.47279;
  const char D.47276;
  int D.47275;
  int ok;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";
  int k;
  int j;
  int i;
  int argc;
  char * fields[10];
  struct switch_media_handle_t * smh;
  char * suites;
  const char * val;
  const char * var;
  switch_rtp_crypto_key_type_t D.42582;
  switch_rtp_crypto_key_type_t D.42579;
  int D.42576;
  char * D.42575;
  char * D.42574;
  unsigned int D.42573;
  switch_rtp_crypto_mode_t D.42569;
  int D.42565;
  int D.42562;
  int D.42561;
  int D.42559;
  int D.42552;
  uint32_t D.42550;
  switch_call_direction_t D.42548;
  switch_call_direction_t D.42529;
  uint32_t D.42526;
  struct switch_channel_t * D.42525;

<bb 2>:
  var_14 = 0B;
  # DEBUG var => var_14
  val_15 = 0B;
  # DEBUG val => val_15
  suites_16 = 0B;
  # DEBUG suites => suites_16
  argc_17 = 0;
  # DEBUG argc => argc_17
  i_18 = 0;
  # DEBUG i => i_18
  j_19 = 0;
  # DEBUG j => j_19
  k_20 = 0;
  # DEBUG k => k_20
  smh_22 = session_21(D)->media_handle;
  # DEBUG smh => smh_22
  if (smh_22 == 0B)
    goto <bb 54>;
  else
    goto <bb 3>;

<bb 3>:
  D.42525_23 = session_21(D)->channel;
  D.42526_24 = switch_channel_test_flag (D.42525_23, 106);
  if (D.42526_24 != 0)
    goto <bb 54>;
  else
    goto <bb 4>;

<bb 4>:
  D.42525_25 = session_21(D)->channel;
  D.42529_26 = switch_channel_direction (D.42525_25);
  if (D.42529_26 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  var_27 = "rtp_secure_media_inbound";
  # DEBUG var => var_27
  goto <bb 7>;

<bb 6>:
  var_28 = "rtp_secure_media_outbound";
  # DEBUG var => var_28

<bb 7>:
  # var_1 = PHI <var_27(5), var_28(6)>
  # DEBUG var => var_1
  D.42525_29 = session_21(D)->channel;
  val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);
  # DEBUG val => val_30
  if (val_30 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  var_31 = "rtp_secure_media";
  # DEBUG var => var_31
  D.42525_32 = session_21(D)->channel;
  val_33 = switch_channel_get_variable_dup (D.42525_32, var_31, 1, -1);
  # DEBUG val => val_33

<bb 9>:
  # var_2 = PHI <var_1(7), var_31(8)>
  # val_3 = PHI <val_30(7), val_33(8)>
  # DEBUG val => val_3
  # DEBUG var => var_2
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47276_100 = *val_3;
  if (D.47276_100 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.47275_101 = PHI <1(9), 1(10), 0(11)>
  D.47275_108 = D.47275_101;
  D.47275_34 = D.47275_108;
  if (D.47275_34 == 0)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  suites_35 = __builtin_strchr (val_3, 58);
  # DEBUG suites => suites_35
  if (suites_35 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  *suites_35 = 0;
  suites_36 = suites_35 + 1;
  # DEBUG suites => suites_36

<bb 15>:
  # suites_5 = PHI <suites_16(12), suites_35(13), suites_36(14)>
  # DEBUG suites => suites_5
  # DEBUG s => suites_5
  if (suites_5 == 0B)
    goto <bb 18>;
  else
    goto <bb 16>;

<bb 16>:
  D.47280_102 = MEM[(const char *)suites_5];
  if (D.47280_102 == 0)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:

<bb 18>:
  # D.47279_103 = PHI <1(15), 1(16), 0(17)>
  D.47279_109 = D.47279_103;
  D.47279_37 = D.47279_109;
  if (D.47279_37 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.42525_38 = session_21(D)->channel;
  suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);
  # DEBUG suites => suites_39

<bb 20>:
  # suites_6 = PHI <suites_5(18), suites_39(19)>
  # DEBUG suites => suites_6
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 23>;
  else
    goto <bb 21>;

<bb 21>:
  D.47284_104 = *val_3;
  if (D.47284_104 == 0)
    goto <bb 23>;
  else
    goto <bb 22>;

<bb 22>:

<bb 23>:
  # D.47283_105 = PHI <1(20), 1(21), 0(22)>
  D.47283_110 = D.47283_105;
  D.47283_40 = D.47283_110;
  if (D.47283_40 != 0)
    goto <bb 24>;
  else
    goto <bb 28>;

<bb 24>:
  D.42525_41 = session_21(D)->channel;
  D.42548_42 = switch_channel_direction (D.42525_41);
  if (D.42548_42 == 0)
    goto <bb 25>;
  else
    goto <bb 27>;

<bb 25>:
  D.42525_43 = session_21(D)->channel;
  D.42550_44 = switch_channel_test_flag (D.42525_43, 84);
  if (D.42550_44 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  val_45 = "optional";
  # DEBUG val => val_45
  goto <bb 28>;

<bb 27>:
  val_46 = "forbidden";
  # DEBUG val => val_46

<bb 28>:
  # val_4 = PHI <val_3(23), val_45(26), val_46(27)>
  # DEBUG val => val_4
  D.42552_47 = strcasecmp (val_4, "optional");
  if (D.42552_47 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  smh_22->crypto_mode = 0;
  goto <bb 36>;

<bb 30>:
  D.42559_48 = switch_true (val_4);
  if (D.42559_48 != 0)
    goto <bb 32>;
  else
    goto <bb 31>;

<bb 31>:
  D.42561_49 = strcasecmp (val_4, "mandatory");
  if (D.42561_49 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  smh_22->crypto_mode = 1;
  goto <bb 36>;

<bb 33>:
  smh_22->crypto_mode = 2;
  D.42562_50 = switch_false (val_4);
  if (D.42562_50 == 0)
    goto <bb 34>;
  else
    goto <bb 36>;

<bb 34>:
  D.42565_51 = strcasecmp (val_4, "forbidden");
  if (D.42565_51 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);

<bb 36>:
  D.42569_52 = smh_22->crypto_mode;
  if (D.42569_52 != 2)
    goto <bb 37>;
  else
    goto <bb 51>;

<bb 37>:
  # DEBUG s => suites_6
  if (suites_6 == 0B)
    goto <bb 40>;
  else
    goto <bb 38>;

<bb 38>:
  D.47288_106 = MEM[(const char *)suites_6];
  if (D.47288_106 == 0)
    goto <bb 40>;
  else
    goto <bb 39>;

<bb 39>:

<bb 40>:
  # D.47287_107 = PHI <1(37), 1(38), 0(39)>
  D.47287_111 = D.47287_107;
  D.47287_53 = D.47287_111;
  if (D.47287_53 == 0)
    goto <bb 41>;
  else
    goto <bb 51>;

<bb 41>:
  D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);
  argc_55 = (int) D.42573_54;
  # DEBUG argc => argc_55
  i_56 = 0;
  # DEBUG i => i_56
  goto <bb 50>;

<bb 42>:
  ok_57 = 0;
  # DEBUG ok => ok_57
  j_58 = 0;
  # DEBUG j => j_58
  goto <bb 46>;

<bb 43>:
  D.42574_59 = fields[i_7];
  D.42575_60 = SUITES[j_9].name;
  D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
  if (D.42576_61 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.42579_62 = SUITES[j_9].type;
  smh_22->crypto_suite_order[k_11] = D.42579_62;
  k_63 = k_11 + 1;
  # DEBUG k => k_63
  ok_64 = ok_57 + 1;
  # DEBUG ok => ok_64
  goto <bb 47>;

<bb 45>:
  j_65 = j_9 + 1;
  # DEBUG j => j_65

<bb 46>:
  # j_9 = PHI <j_58(42), j_65(45)>
  # DEBUG j => j_9
  if (j_9 <= 8)
    goto <bb 43>;
  else
    goto <bb 47>;

<bb 47>:
  # k_10 = PHI <k_63(44), k_11(46)>
  # ok_13 = PHI <ok_64(44), ok_57(46)>
  # DEBUG ok => ok_13
  # DEBUG k => k_10
  if (ok_13 == 0)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");

<bb 49>:
  i_66 = i_7 + 1;
  # DEBUG i => i_66

<bb 50>:
  # i_7 = PHI <i_56(41), i_66(49)>
  # k_11 = PHI <k_20(41), k_10(49)>
  # DEBUG k => k_11
  # DEBUG i => i_7
  if (i_7 < argc_55)
    goto <bb 42>;
  else
    goto <bb 54>;

<bb 51>:
  i_67 = 0;
  # DEBUG i => i_67
  goto <bb 53>;

<bb 52>:
  D.42582_68 = SUITES[i_8].type;
  smh_22->crypto_suite_order[k_12] = D.42582_68;
  k_69 = k_12 + 1;
  # DEBUG k => k_69
  i_70 = i_8 + 1;
  # DEBUG i => i_70

<bb 53>:
  # i_8 = PHI <i_67(51), i_70(52)>
  # k_12 = PHI <k_20(51), k_69(52)>
  # DEBUG k => k_12
  # DEBUG i => i_8
  if (i_8 <= 8)
    goto <bb 52>;
  else
    goto <bb 54>;

<bb 54>:
  return;

}



;; Function gen_ice (gen_ice)

Try : D.47292_68(P68) & D.47294_67(P67) --> P68 D.47292
Try : D.42958_24(P24) & D.47292_68(P68) --> P68 D.47292

Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (D.42927_3 - 3 )
Partition 4 (type_4(D) - 4 )
Partition 5 (D.42928_5 - 5 )
Partition 6 (engine_6 - 6 )
Partition 7 (D.42929_7 - 7 )
Partition 8 (D.42932_8 - 8 )
Partition 9 (D.42935_9 - 9 )
Partition 10 (D.42936_10 - 10 )
Partition 11 (D.42939_11 - 11 )
Partition 12 (D.42940_12 - 12 )
Partition 13 (D.42943_13 - 13 )
Partition 14 (D.42944_14 - 14 )
Partition 15 (D.42947_15 - 15 )
Partition 16 (D.42948_16 - 16 )
Partition 17 (D.42951_17 - 17 )
Partition 18 (D.42952_18 - 18 )
Partition 19 (D.42952_19 - 19 )
Partition 20 (D.42955_20 - 20 )
Partition 21 (D.42956_21 - 21 )
Partition 22 (D.42957_22 - 22 )
Partition 23 (ip_23(D) - 23 )
Partition 25 (D.42961_25 - 25 )
Partition 26 (port_26(D) - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36(D) - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (D.47293_66 - 66 )
Partition 68 (D.47292_68 - 24 67 68 )

Coalesced D.42958_24 to D.47292_68
Coalesced D.47294_67 to D.47292_68
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  char tmp[33];
  static const char __PRETTY_FUNCTION__[8] = "gen_ice";
  static const char __func__[8] = "gen_ice";

  { Scope block #23 src/switch_core_media.c:4658 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #24 Originating from :#0 

    }

  }

}
gen_ice (struct switch_core_session_t * session, switch_media_type_t type, const char * ip, switch_port_t port)
{
  const char D.47293;
  int D.47292;
  static const char __func__[8] = "gen_ice";
  static const char __PRETTY_FUNCTION__[8] = "gen_ice";
  char tmp[33];
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.42961;
  uint32_t D.42957;
  int D.42956;
  int D.42955;
  int D.42952;
  char * D.42951;
  char * D.42948;
  char * D.42947;
  char * D.42944;
  char * D.42943;
  char * D.42940;
  char * D.42939;
  char * D.42936;
  char * D.42935;
  char * D.42932;
  int8_t D.42929;
  unsigned int D.42928;
  struct switch_rtp_engine_t[2] * D.42927;

<bb 2>:
  tmp = "";
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;

<bb 5>:
  D.42927_3 = &smh_2->engines;
  D.42928_5 = type_4(D) * 11416;
  engine_6 = D.42927_3 + D.42928_5;
  # DEBUG engine => engine_6
  D.42929_7 = engine_6->rtcp_mux;
  if (D.42929_7 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  engine_6->rtcp_mux = 1;

<bb 7>:
  D.42932_8 = smh_2->msid;
  if (D.42932_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  switch_stun_random_string (&tmp, 32, 0B);
  tmp[32] = 0;
  D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);
  smh_2->msid = D.42935_9;

<bb 9>:
  D.42936_10 = smh_2->cname;
  if (D.42936_10 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);
  smh_2->cname = D.42939_11;

<bb 11>:
  D.42940_12 = engine_6->ice_out.ufrag;
  if (D.42940_12 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);
  engine_6->ice_out.ufrag = D.42943_13;

<bb 13>:
  D.42944_14 = engine_6->ice_out.pwd;
  if (D.42944_14 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  switch_stun_random_string (&tmp, 16, 0B);
  D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);
  engine_6->ice_out.pwd = D.42947_15;

<bb 15>:
  D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
  if (D.42948_16 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  switch_stun_random_string (&tmp, 10, "0123456789");
  tmp[10] = 0;
  D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);
  engine_6->ice_out.cands[0][0].foundation = D.42951_17;

<bb 17>:
  engine_6->ice_out.cands[0][0].transport = "udp";
  D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
  if (D.42952_18 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  engine_6->ice_out.cands[0][0].component_id = 1;
  D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
  D.42955_20 = 329569 - D.42952_19;
  D.42956_21 = D.42955_20 * 2;
  D.42957_22 = (uint32_t) D.42956_21;
  engine_6->ice_out.cands[0][0].priority = D.42957_22;

<bb 19>:
  # DEBUG s => ip_23(D)
  if (ip_23(D) == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 20>:
  D.47293_66 = *ip_23(D);
  if (D.47293_66 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

<bb 21>:

<bb 22>:
  # D.47292_67 = PHI <1(19), 1(20), 0(21)>
  D.47292_68 = D.47292_67;
  D.47292_24 = D.47292_68;
  if (D.47292_24 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);
  engine_6->ice_out.cands[0][0].con_addr = D.42961_25;

<bb 24>:
  if (port_26(D) != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  engine_6->ice_out.cands[0][0].con_port = port_26(D);

<bb 26>:
  engine_6->ice_out.cands[0][0].generation = "0";
  engine_6->ice_out.cands[0][0].ready = 1;

<bb 27>:
  return;

}



;; Function get_channels (get_channels)

Try : iftmp.43_9(P9) & dft_8(D)(P8) --> P9 dft
Try : D.42985_11(P11) & iftmp.43_2(P2) --> P11 D.42985
Try : iftmp.43_2(P11) & dft_9(P9) --> P11 dft
Try : iftmp.43_2(P11) & iftmp.43_10(P10) --> P11 dft
Try : D.42985_1(P1) & D.42985_7(P7) : Same root, coalesced --> P1.
Try : D.42985_1(P1) & dft_11(P11) --> P11 dft

Partition map 

Partition 3 (D.42978_3 - 3 )
Partition 4 (D.42979_4 - 4 )
Partition 5 (name_5(D) - 5 )
Partition 6 (D.42982_6 - 6 )
Partition 11 (dft_11 - 1 2 7 8 9 10 11 )
Partition 12 (.MEM_12(D) - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

Coalesced D.42985_1 to dft_11
Coalesced iftmp.43_2 to dft_11
Coalesced D.42985_7 to dft_11
Coalesced iftmp.43_10 to dft_11
Scope blocks after cleanups:

{ Scope block #0 

}
get_channels (const char * name, int dft)
{
  int D.42982;
  int D.42979;
  char * D.42978;

<bb 2>:
  D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");
  D.42979_4 = switch_true (D.42978_3);
  if (D.42979_4 == 0)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 3>:
  D.42982_6 = strcasecmp (name_5(D), "opus");
  if (D.42982_6 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  dft_7 = 2;
  goto <bb 9>;

<bb 5>:
  if (dft_8(D) != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  dft_9 = dft_8(D);
  goto <bb 8>;

<bb 7>:
  dft_10 = 1;

<bb 8>:
  # dft_2 = PHI <dft_9(6), dft_10(7)>
  dft_11 = dft_2;

<bb 9>:
  # dft_1 = PHI <dft_7(4), dft_11(8)>
  return dft_1;

}



;; Function generate_local_fingerprint (generate_local_fingerprint)


Partition map 

Partition 1 (smh_1(D) - 1 )
Partition 2 (D.42991_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.42992_4 - 4 )
Partition 5 (engine_5 - 5 )
Partition 6 (D.42993_6 - 6 )
Partition 7 (D.42996_7 - 7 )
Partition 8 (D.42996_8 - 8 )
Partition 9 (D.43000_9 - 9 )
Partition 10 (.MEM_10 - 10 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

generate_local_fingerprint (struct switch_media_handle_t * smh, switch_media_type_t type)
{
  struct switch_rtp_engine_t * engine;
  struct dtls_fingerprint_t * D.43000;
  char * D.42996;
  uint32_t D.42993;
  unsigned int D.42992;
  struct switch_rtp_engine_t[2] * D.42991;

<bb 2>:
  D.42991_2 = &smh_1(D)->engines;
  D.42992_4 = type_3(D) * 11416;
  engine_5 = D.42991_2 + D.42992_4;
  # DEBUG engine => engine_5
  D.42993_6 = engine_5->local_dtls_fingerprint.len;
  if (D.42993_6 == 0)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 3>:
  D.42996_7 = engine_5->remote_dtls_fingerprint.type;
  if (D.42996_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.42996_8 = engine_5->remote_dtls_fingerprint.type;
  engine_5->local_dtls_fingerprint.type = D.42996_8;
  goto <bb 6>;

<bb 5>:
  engine_5->local_dtls_fingerprint.type = "sha-256";

<bb 6>:
  D.43000_9 = &engine_5->local_dtls_fingerprint;
  switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);

<bb 7>:
  return;

}



;; Function start_video_thread (start_video_thread)

Try : D.43797_1(P1) & D.43797_6(P6) : Same root, coalesced --> P1.
Try : D.43797_1(P1) & D.43797_9(P9) : Same root, coalesced --> P1.
Try : D.43797_1(P1) & D.43797_23(P23) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.43797_1 - 1 6 9 23 )
Partition 2 (session_2(D) - 2 )
Partition 3 (pool_3 - 3 )
Partition 4 (v_engine_4 - 4 )
Partition 5 (smh_5 - 5 )
Partition 7 (v_engine_7 - 7 )
Partition 8 (D.43798_8 - 8 )
Partition 10 (D.43801_10 - 10 )
Partition 11 (D.43802_11 - 11 )
Partition 12 (D.43803_12 - 12 )
Partition 13 (D.43804_13 - 13 )
Partition 14 (D.43805_14 - 14 )
Partition 15 (thd_attr.69_15 - 15 )
Partition 16 (D.43807_16 - 16 )
Partition 17 (D.43808_17 - 17 )
Partition 18 (D.43809_18 - 18 )
Partition 19 (D.43810_19 - 19 )
Partition 20 (thd_attr.69_20 - 20 )
Partition 21 (D.43811_21 - 21 )
Partition 22 (D.43812_22 - 22 )
Partition 24 (.MEM_24(D) - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )

start_video_thread (struct switch_core_session_t * session)
{
  static const char __func__[19] = "start_video_thread";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_memory_pool_t * pool;
  struct switch_threadattr_t * thd_attr;
  struct switch_memory_pool_t * D.43812;
  struct media_helper * D.43811;
  struct switch_thread_t * * D.43810;
  struct switch_mutex_t * * D.43809;
  struct switch_mutex_t * * D.43808;
  struct switch_thread_cond_t * * D.43807;
  struct switch_threadattr_t * thd_attr.69;
  switch_payload_t D.43805;
  struct payload_map_t * D.43804;
  struct switch_rtp_t * D.43803;
  char * D.43802;
  struct switch_channel_t * D.43801;
  struct switch_thread_t * D.43798;
  switch_status_t D.43797;

<bb 2>:
  thd_attr = 0B;
  pool_3 = switch_core_session_get_pool (session_2(D));
  # DEBUG pool => pool_3
  v_engine_4 = 0B;
  # DEBUG v_engine => v_engine_4
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.43797_6 = 1;
  goto <bb 7>;

<bb 4>:
  v_engine_7 = &smh_5->engines[1];
  # DEBUG v_engine => v_engine_7
  D.43798_8 = v_engine_7->media_thread;
  if (D.43798_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.43797_9 = 1;
  goto <bb 7>;

<bb 6>:
  D.43801_10 = switch_core_session_get_channel (session_2(D));
  D.43802_11 = switch_channel_get_name (D.43801_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);
  D.43803_12 = v_engine_7->rtp_session;
  D.43804_13 = v_engine_7->cur_payload_map;
  D.43805_14 = D.43804_13->agreed_pt;
  switch_rtp_set_default_payload (D.43803_12, D.43805_14);
  v_engine_7->mh.session = session_2(D);
  switch_threadattr_create (&thd_attr, pool_3);
  thd_attr.69_15 = thd_attr;
  switch_threadattr_stacksize_set (thd_attr.69_15, 245760);
  D.43807_16 = &v_engine_7->mh.cond;
  switch_thread_cond_create (D.43807_16, pool_3);
  D.43808_17 = &v_engine_7->mh.cond_mutex;
  switch_mutex_init (D.43808_17, 1, pool_3);
  D.43809_18 = &v_engine_7->read_mutex[1];
  switch_mutex_init (D.43809_18, 1, pool_3);
  D.43810_19 = &v_engine_7->media_thread;
  thd_attr.69_20 = thd_attr;
  D.43811_21 = &v_engine_7->mh;
  D.43812_22 = switch_core_session_get_pool (session_2(D));
  switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);
  D.43797_23 = 0;

<bb 7>:
  # D.43797_1 = PHI <D.43797_6(3), D.43797_9(5), D.43797_23(6)>
  return D.43797_1;

}



;; Function video_helper_thread (video_helper_thread)

Try : mh_6(P6) & obj_5(D)(P5) : 2 different USER vars. No coalesce.
Try : iftmp.70_2(P2) & iftmp.70_15(P15) : Same root, coalesced --> P2.
Try : iftmp.70_2(P2) & iftmp.70_16(P16) : Same root, coalesced --> P2.
Try : iftmp.71_3(P3) & iftmp.71_22(P22) : Same root, coalesced --> P3.
Try : iftmp.71_3(P3) & iftmp.71_23(P23) : Same root, coalesced --> P3.
Try : iftmp.72_4(P4) & iftmp.72_29(P29) : Same root, coalesced --> P4.
Try : iftmp.72_4(P4) & iftmp.72_30(P30) : Same root, coalesced --> P4.
Try : D.43816_1(P1) & D.43816_10(P10) : Same root, coalesced --> P1.
Try : D.43816_1(P1) & D.43816_51(P51) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.43816_1 - 1 10 51 )
Partition 2 (iftmp.70_2 - 2 15 16 )
Partition 3 (iftmp.71_3 - 3 22 23 )
Partition 4 (iftmp.72_4 - 4 29 30 )
Partition 5 (obj_5(D) - 5 )
Partition 6 (mh_6 - 6 )
Partition 7 (session_7 - 7 )
Partition 8 (channel_8 - 8 )
Partition 9 (smh_9 - 9 )
Partition 11 (D.43817_11 - 11 )
Partition 12 (D.43818_12 - 12 )
Partition 13 (D.43819_13 - 13 )
Partition 14 (D.43821_14 - 14 )
Partition 17 (D.43870_17 - 17 )
Partition 18 (D.43825_18 - 18 )
Partition 19 (D.43818_19 - 19 )
Partition 20 (D.43828_20 - 20 )
Partition 21 (D.43830_21 - 21 )
Partition 24 (D.43834_24 - 24 )
Partition 25 (D.43817_25 - 25 )
Partition 26 (D.43818_26 - 26 )
Partition 27 (D.43835_27 - 27 )
Partition 28 (D.43837_28 - 28 )
Partition 31 (D.43841_31 - 31 )
Partition 32 (D.43818_32 - 32 )
Partition 33 (D.43844_33 - 33 )
Partition 34 (D.43818_34 - 34 )
Partition 35 (D.43847_35 - 35 )
Partition 36 (status_36 - 36 )
Partition 37 (D.43850_37 - 37 )
Partition 38 (D.43851_38 - 38 )
Partition 39 (D.43852_39 - 39 )
Partition 40 (D.43857_40 - 40 )
Partition 41 (read_frame.73_41 - 41 )
Partition 42 (D.43861_42 - 42 )
Partition 43 (D.43862_43 - 43 )
Partition 44 (D.43863_44 - 44 )
Partition 45 (D.43864_45 - 45 )
Partition 46 (D.43867_46 - 46 )
Partition 47 (read_frame.73_47 - 47 )
Partition 48 (D.43818_48 - 48 )
Partition 49 (D.43871_49 - 49 )
Partition 50 (D.43817_50 - 50 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56(D) - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (.MEM_69 - 69 )
Partition 70 (.MEM_70 - 70 )
Partition 71 (.MEM_71 - 71 )
Partition 72 (.MEM_72 - 72 )
Partition 73 (.MEM_73 - 73 )
Partition 74 (.MEM_74 - 74 )
Partition 75 (.MEM_75 - 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (.MEM_77 - 77 )
Partition 78 (.MEM_78 - 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89 - 89 )
Partition 90 (.MEM_90 - 90 )

video_helper_thread (struct switch_thread_t * thread, void * obj)
{
  static const char __func__[20] = "video_helper_thread";
  struct switch_media_handle_t * smh;
  struct switch_frame_t * read_frame;
  switch_status_t status;
  struct switch_channel_t * channel;
  struct switch_core_session_t * session;
  struct media_helper * mh;
  char * D.43871;
  switch_channel_state_t D.43870;
  uint32_t D.43867;
  _Bool D.43864;
  int D.43863;
  int D.43862;
  switch_frame_flag_t D.43861;
  struct switch_frame_t * read_frame.73;
  uint32_t D.43857;
  _Bool D.43852;
  _Bool D.43851;
  _Bool D.43850;
  uint32_t D.43847;
  uint32_t D.43844;
  uint32_t D.43841;
  uint32_t D.43837;
  char * iftmp.72;
  char * D.43835;
  struct switch_thread_cond_t * D.43834;
  uint32_t D.43830;
  char * iftmp.71;
  char * D.43828;
  uint32_t D.43825;
  uint32_t D.43821;
  char * iftmp.70;
  char * D.43819;
  struct switch_channel_t * D.43818;
  struct switch_mutex_t * D.43817;
  void * D.43816;

<bb 2>:
  mh_6 = obj_5(D);
  # DEBUG mh => mh_6
  session_7 = mh_6->session;
  # DEBUG session => session_7
  channel_8 = switch_core_session_get_channel (session_7);
  # DEBUG channel => channel_8
  smh_9 = session_7->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.43816_10 = 0B;
  goto <bb 32>;

<bb 4>:
  switch_core_session_read_lock (session_7);
  mh_6->up = 1;
  D.43817_11 = mh_6->cond_mutex;
  switch_mutex_lock (D.43817_11);
  D.43818_12 = session_7->channel;
  D.43819_13 = switch_channel_get_name (D.43818_12);
  D.43821_14 = switch_channel_test_flag (channel_8, 115);
  if (D.43821_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  iftmp.70_15 = "on";
  goto <bb 7>;

<bb 6>:
  iftmp.70_16 = "off";

<bb 7>:
  # iftmp.70_2 = PHI <iftmp.70_15(5), iftmp.70_16(6)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);
  switch_core_session_refresh_video (session_7);
  goto <bb 30>;

<bb 8>:
  D.43825_18 = switch_channel_test_flag (channel_8, 113);
  if (D.43825_18 != 0)
    goto <bb 9>;
  else
    goto <bb 16>;

<bb 9>:
  D.43818_19 = session_7->channel;
  D.43828_20 = switch_channel_get_name (D.43818_19);
  D.43830_21 = switch_channel_test_flag (channel_8, 115);
  if (D.43830_21 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  iftmp.71_22 = "on";
  goto <bb 12>;

<bb 11>:
  iftmp.71_23 = "off";

<bb 12>:
  # iftmp.71_3 = PHI <iftmp.71_22(10), iftmp.71_23(11)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);
  D.43834_24 = mh_6->cond;
  D.43817_25 = mh_6->cond_mutex;
  switch_thread_cond_wait (D.43834_24, D.43817_25);
  D.43818_26 = session_7->channel;
  D.43835_27 = switch_channel_get_name (D.43818_26);
  D.43837_28 = switch_channel_test_flag (channel_8, 115);
  if (D.43837_28 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  iftmp.72_29 = "on";
  goto <bb 15>;

<bb 14>:
  iftmp.72_30 = "off";

<bb 15>:
  # iftmp.72_4 = PHI <iftmp.72_29(13), iftmp.72_30(14)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);
  switch_core_session_refresh_video (session_7);

<bb 16>:
  D.43841_31 = switch_channel_test_flag (channel_8, 113);
  if (D.43841_31 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  // predicted unlikely by continue predictor.
  goto <bb 30>;

<bb 18>:
  D.43818_32 = session_7->channel;
  D.43844_33 = switch_channel_test_flag (D.43818_32, 1);
  if (D.43844_33 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  D.43818_34 = session_7->channel;
  D.43847_35 = switch_channel_test_flag (D.43818_34, 3);
  if (D.43847_35 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  switch_sleep (10000);
  // predicted unlikely by continue predictor.
  goto <bb 30>;

<bb 21>:
  status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);
  # DEBUG status => status_36
  D.43850_37 = status_36 != 0;
  D.43851_38 = status_36 != 11;
  D.43852_39 = D.43850_37 && D.43851_38;
  if (D.43852_39 != 0)
    goto <bb 22>;
  else
    goto <bb 24>;

<bb 22>:
  if (status_36 != 10)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  switch_cond_next ();
  // predicted unlikely by continue predictor.
  goto <bb 30>;

<bb 24>:
  D.43857_40 = switch_channel_test_flag (channel_8, 70);
  if (D.43857_40 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  switch_core_session_refresh_video (session_7);
  switch_channel_clear_flag (channel_8, 70);

<bb 26>:
  read_frame.73_41 = read_frame;
  D.43861_42 = read_frame.73_41->flags;
  D.43862_43 = (int) D.43861_42;
  D.43863_44 = D.43862_43 & 1;
  D.43864_45 = (_Bool) D.43863_44;
  if (D.43864_45 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  // predicted unlikely by continue predictor.
  goto <bb 30>;

<bb 28>:
  D.43867_46 = switch_channel_test_flag (channel_8, 115);
  if (D.43867_46 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  read_frame.73_47 = read_frame;
  switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);

<bb 30>:
  D.43870_17 = switch_channel_get_state (channel_8);
  if (D.43870_17 <= 9)
    goto <bb 8>;
  else
    goto <bb 31>;

<bb 31>:
  D.43818_48 = session_7->channel;
  D.43871_49 = switch_channel_get_name (D.43818_48);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);
  D.43817_50 = mh_6->cond_mutex;
  switch_mutex_unlock (D.43817_50);
  switch_core_session_rwunlock (session_7);
  mh_6->up = 0;
  D.43816_51 = 0B;

<bb 32>:
  # D.43816_1 = PHI <D.43816_10(3), D.43816_51(31)>
  return D.43816_1;

}



;; Function switch_core_media_process_udptl (switch_core_media_process_udptl)

Try : D.47301_150(P150) & D.47302_136(P136) --> P150 D.47301
Try : D.45359_34(P34) & D.47301_150(P150) --> P150 D.47301
Try : D.47304_152(P152) & D.47305_137(P137) --> P152 D.47304
Try : D.45366_40(P40) & D.47304_152(P152) --> P152 D.47304
Try : D.47308_154(P154) & dft_139(P139) --> P154 dft
Try : D.45371_45(P45) & dft_154(P154) --> P154 dft
Try : D.47311_156(P156) & dft_141(P141) --> P156 dft
Try : D.45377_50(P50) & dft_156(P156) --> P156 dft
Try : D.47314_158(P158) & dft_143(P143) --> P158 dft
Try : D.45383_55(P55) & dft_158(P158) --> P158 dft
Try : D.47316_160(P160) & D.47317_144(P144) --> P160 D.47316
Try : D.45397_66(P66) & D.47316_160(P160) --> P160 D.47316
Try : D.47319_162(P162) & D.47320_145(P145) --> P162 D.47319
Try : D.45404_72(P72) & D.47319_162(P162) --> P162 D.47319
Try : D.45418_90(P90) & t38_options_1(P1) --> P90 t38_options
Try : t38_options_1(P90) & t38_options_5(P5) : Same root, coalesced --> P90.
Try : t38_options_1(P90) & t38_options_6(P6) : Same root, coalesced --> P90.
Try : dft_139(P154) & dft_138(P138) : Same root, coalesced --> P154.
Try : dft_141(P156) & dft_140(P140) : Same root, coalesced --> P156.
Try : dft_143(P158) & dft_142(P142) : Same root, coalesced --> P158.
Try : attr_2(P2) & attr_29(P29) : Same root, coalesced --> P2.
Try : attr_2(P2) & attr_84(P84) : Same root, coalesced --> P2.

Partition map 

Partition 2 (attr_2 - 2 29 84 )
Partition 3 (session_3(D) - 3 )
Partition 4 (D.45323_4 - 4 )
Partition 7 (D.45326_7 - 7 )
Partition 8 (D.45327_8 - 8 )
Partition 9 (m_9(D) - 9 )
Partition 10 (D.45328_10 - 10 )
Partition 11 (D.45329_11 - 11 )
Partition 12 (sdp_12(D) - 12 )
Partition 13 (D.45330_13 - 13 )
Partition 14 (D.45330_14 - 14 )
Partition 15 (D.45333_15 - 15 )
Partition 16 (D.45334_16 - 16 )
Partition 17 (D.45338_17 - 17 )
Partition 18 (D.45338_18 - 18 )
Partition 19 (D.45340_19 - 19 )
Partition 20 (D.45338_20 - 20 )
Partition 21 (D.45340_21 - 21 )
Partition 22 (D.45342_22 - 22 )
Partition 23 (D.45345_23 - 23 )
Partition 24 (D.45345_24 - 24 )
Partition 25 (D.45348_25 - 25 )
Partition 26 (D.45345_26 - 26 )
Partition 27 (D.45348_27 - 27 )
Partition 28 (D.45351_28 - 28 )
Partition 30 (D.45354_30 - 30 )
Partition 31 (D.45355_31 - 31 )
Partition 32 (D.45357_32 - 32 )
Partition 33 (D.45357_33 - 33 )
Partition 35 (D.45360_35 - 35 )
Partition 36 (D.45354_36 - 36 )
Partition 37 (D.45363_37 - 37 )
Partition 38 (D.45357_38 - 38 )
Partition 39 (D.45357_39 - 39 )
Partition 41 (D.45367_41 - 41 )
Partition 42 (D.45354_42 - 42 )
Partition 43 (D.45368_43 - 43 )
Partition 44 (D.45357_44 - 44 )
Partition 46 (D.45372_46 - 46 )
Partition 47 (D.45354_47 - 47 )
Partition 48 (D.45374_48 - 48 )
Partition 49 (D.45357_49 - 49 )
Partition 51 (D.45378_51 - 51 )
Partition 52 (D.45354_52 - 52 )
Partition 53 (D.45380_53 - 53 )
Partition 54 (D.45357_54 - 54 )
Partition 56 (D.45384_56 - 56 )
Partition 57 (D.45354_57 - 57 )
Partition 58 (D.45388_58 - 58 )
Partition 59 (D.45357_59 - 59 )
Partition 60 (D.45357_60 - 60 )
Partition 61 (D.45391_61 - 61 )
Partition 62 (D.45354_62 - 62 )
Partition 63 (D.45394_63 - 63 )
Partition 64 (D.45357_64 - 64 )
Partition 65 (D.45357_65 - 65 )
Partition 67 (D.45398_67 - 67 )
Partition 68 (D.45354_68 - 68 )
Partition 69 (D.45401_69 - 69 )
Partition 70 (D.45357_70 - 70 )
Partition 71 (D.45357_71 - 71 )
Partition 73 (D.45405_73 - 73 )
Partition 74 (D.45354_74 - 74 )
Partition 75 (D.45408_75 - 75 )
Partition 76 (D.45357_76 - 76 )
Partition 77 (D.45357_77 - 77 )
Partition 78 (D.45411_78 - 78 )
Partition 79 (D.45354_79 - 79 )
Partition 80 (D.45412_80 - 80 )
Partition 81 (D.45357_81 - 81 )
Partition 82 (D.45357_82 - 82 )
Partition 83 (D.45417_83 - 83 )
Partition 85 (D.45323_85 - 85 )
Partition 86 (D.45323_86 - 86 )
Partition 87 (D.45323_87 - 87 )
Partition 88 (D.45323_88 - 88 )
Partition 89 (D.45323_89 - 89 )
Partition 90 (t38_options_90 - 1 5 6 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96(D) - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )
Partition 120 (.MEM_120 - 120 )
Partition 121 (.MEM_121 - 121 )
Partition 122 (.MEM_122 - 122 )
Partition 123 (.MEM_123 - 123 )
Partition 124 (.MEM_124 - 124 )
Partition 125 (.MEM_125 - 125 )
Partition 126 (.MEM_126 - 126 )
Partition 127 (.MEM_127 - 127 )
Partition 128 (.MEM_128 - 128 )
Partition 129 (.MEM_129 - 129 )
Partition 130 (.MEM_130 - 130 )
Partition 131 (.MEM_131 - 131 )
Partition 132 (.MEM_132 - 132 )
Partition 133 (.MEM_133 - 133 )
Partition 134 (.MEM_134 - 134 )
Partition 135 (.MEM_135 - 135 )
Partition 146 (.MEM_146 - 146 )
Partition 147 (.MEM_147 - 147 )
Partition 148 (.MEM_148 - 148 )
Partition 149 (.MEM_149 - 149 )
Partition 150 (D.47301_150 - 34 136 150 )
Partition 151 (.MEM_151 - 151 )
Partition 152 (D.47304_152 - 40 137 152 )
Partition 153 (.MEM_153 - 153 )
Partition 154 (dft_154 - 45 138 139 154 )
Partition 155 (.MEM_155 - 155 )
Partition 156 (dft_156 - 50 140 141 156 )
Partition 157 (.MEM_157 - 157 )
Partition 158 (dft_158 - 55 142 143 158 )
Partition 159 (.MEM_159 - 159 )
Partition 160 (D.47316_160 - 66 144 160 )
Partition 161 (.MEM_161 - 161 )
Partition 162 (D.47319_162 - 72 145 162 )

Coalesced D.45359_34 to D.47301_150
Coalesced D.45366_40 to D.47304_152
Coalesced D.45371_45 to dft_154
Coalesced D.45377_50 to dft_156
Coalesced D.45383_55 to dft_158
Coalesced D.45397_66 to D.47316_160
Coalesced D.45404_72 to D.47319_162
Coalesced D.47302_136 to D.47301_150
Coalesced D.47305_137 to D.47304_152
Coalesced D.47317_144 to D.47316_160
Coalesced D.47320_145 to D.47319_162
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_t38_options_t * t38_options;
  struct sdp_attribute_t * attr;
  static const char __func__[32] = "switch_core_media_process_udptl";

  { Scope block #25 src/switch_core_media.c:410 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #26 Originating from :#0 

    }

  }

  { Scope block #27 src/switch_core_media.c:408 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #28 Originating from :#0 

    }

  }

  { Scope block #29 src/switch_core_media.c:404 Originating from :  static int switch_safe_atoi (const char *, int); 
    int dft;
    const char * nptr; (unused)

    { Scope block #30 Originating from :#0 

      { Scope block #31 ./src/include/switch_utils.h:735 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (nonlocalized)

        { Scope block #32 Originating from :#0 

        }

      }

    }

  }

  { Scope block #33 src/switch_core_media.c:402 Originating from :  static int switch_safe_atoi (const char *, int); 
    int dft;
    const char * nptr; (unused)

    { Scope block #34 Originating from :#0 

      { Scope block #35 ./src/include/switch_utils.h:735 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (nonlocalized)

        { Scope block #36 Originating from :#0 

        }

      }

    }

  }

  { Scope block #37 src/switch_core_media.c:400 Originating from :  static int switch_safe_atoi (const char *, int); 
    int dft;
    const char * nptr; (unused)

    { Scope block #38 Originating from :#0 

      { Scope block #39 ./src/include/switch_utils.h:735 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (nonlocalized)

        { Scope block #40 Originating from :#0 

        }

      }

    }

  }

  { Scope block #41 src/switch_core_media.c:398 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #42 Originating from :#0 

    }

  }

  { Scope block #43 src/switch_core_media.c:396 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #44 Originating from :#0 

    }

  }

}
switch_core_media_process_udptl (struct switch_core_session_t * session, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47319;
  int D.47316;
  int dft;
  int dft;
  int dft;
  int D.47304;
  int D.47301;
  static const char __func__[32] = "switch_core_media_process_udptl";
  struct sdp_attribute_t * attr;
  struct switch_t38_options_t * t38_options;
  char * D.45417;
  int D.45412;
  char * D.45411;
  int D.45408;
  unsigned int D.45405;
  int D.45401;
  unsigned int D.45398;
  int D.45394;
  char * D.45391;
  int D.45388;
  switch_bool_t D.45384;
  int D.45380;
  switch_bool_t D.45378;
  int D.45374;
  switch_bool_t D.45372;
  int D.45368;
  unsigned int D.45367;
  int D.45363;
  short unsigned int D.45360;
  const char * D.45357;
  int D.45355;
  const char * D.45354;
  char * D.45351;
  const char * D.45348;
  struct sdp_connection_t * D.45345;
  char * D.45342;
  const char * D.45340;
  struct sdp_connection_t * D.45338;
  char * D.45334;
  const char * D.45333;
  struct sdp_origin_t * D.45330;
  short unsigned int D.45329;
  long unsigned int D.45328;
  char * D.45327;
  char * D.45326;
  struct switch_channel_t * D.45323;

<bb 2>:
  D.45323_4 = session_3(D)->channel;
  t38_options_5 = switch_channel_get_private (D.45323_4, "t38_options");
  # DEBUG t38_options => t38_options_5
  if (t38_options_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);
  # DEBUG t38_options => t38_options_6
  t38_options_6->T38FaxVersion = 0;
  t38_options_6->T38MaxBitRate = 14400;
  D.45326_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);
  t38_options_6->T38FaxRateManagement = D.45326_7;
  D.45327_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);
  t38_options_6->T38FaxUdpEC = D.45327_8;
  t38_options_6->T38FaxMaxBuffer = 500;
  t38_options_6->T38FaxMaxDatagram = 500;

<bb 4>:
  # t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>
  # DEBUG t38_options => t38_options_1
  D.45328_10 = m_9(D)->m_port;
  D.45329_11 = (short unsigned int) D.45328_10;
  t38_options_1->remote_port = D.45329_11;
  D.45330_13 = sdp_12(D)->sdp_origin;
  if (D.45330_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.45330_14 = sdp_12(D)->sdp_origin;
  D.45333_15 = D.45330_14->o_username;
  D.45334_16 = switch_core_perform_session_strdup (session_3(D), D.45333_15, "src/switch_core_media.c", &__func__, 383);
  t38_options_1->sdp_o_line = D.45334_16;
  goto <bb 7>;

<bb 6>:
  t38_options_1->sdp_o_line = "unknown";

<bb 7>:
  D.45338_17 = m_9(D)->m_connections;
  if (D.45338_17 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.45338_18 = m_9(D)->m_connections;
  D.45340_19 = D.45338_18->c_address;
  if (D.45340_19 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.45338_20 = m_9(D)->m_connections;
  D.45340_21 = D.45338_20->c_address;
  D.45342_22 = switch_core_perform_session_strdup (session_3(D), D.45340_21, "src/switch_core_media.c", &__func__, 389);
  t38_options_1->remote_ip = D.45342_22;
  goto <bb 14>;

<bb 10>:
  if (sdp_12(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.45345_23 = sdp_12(D)->sdp_connection;
  if (D.45345_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.45345_24 = sdp_12(D)->sdp_connection;
  D.45348_25 = D.45345_24->c_address;
  if (D.45348_25 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.45345_26 = sdp_12(D)->sdp_connection;
  D.45348_27 = D.45345_26->c_address;
  D.45351_28 = switch_core_perform_session_strdup (session_3(D), D.45348_27, "src/switch_core_media.c", &__func__, 391);
  t38_options_1->remote_ip = D.45351_28;

<bb 14>:
  attr_29 = m_9(D)->m_attributes;
  # DEBUG attr => attr_29
  goto <bb 49>;

<bb 15>:
  D.45354_30 = attr_2->a_name;
  D.45355_31 = strcasecmp (D.45354_30, "T38FaxVersion");
  if (D.45355_31 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.45357_32 = attr_2->a_value;
  if (D.45357_32 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.45357_33 = attr_2->a_value;
  # DEBUG __nptr => D.45357_33
  D.47301_136 = strtol (D.45357_33, 0B, 10);
  D.47301_150 = D.47301_136;
  D.47301_34 = D.47301_150;
  D.45360_35 = (short unsigned int) D.47301_34;
  t38_options_1->T38FaxVersion = D.45360_35;
  goto <bb 48>;

<bb 18>:
  D.45354_36 = attr_2->a_name;
  D.45363_37 = strcasecmp (D.45354_36, "T38MaxBitRate");
  if (D.45363_37 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  D.45357_38 = attr_2->a_value;
  if (D.45357_38 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.45357_39 = attr_2->a_value;
  # DEBUG __nptr => D.45357_39
  D.47304_137 = strtol (D.45357_39, 0B, 10);
  D.47304_152 = D.47304_137;
  D.47304_40 = D.47304_152;
  D.45367_41 = (unsigned int) D.47304_40;
  t38_options_1->T38MaxBitRate = D.45367_41;
  goto <bb 48>;

<bb 21>:
  D.45354_42 = attr_2->a_name;
  D.45368_43 = strcasecmp (D.45354_42, "T38FaxFillBitRemoval");
  if (D.45368_43 == 0)
    goto <bb 22>;
  else
    goto <bb 25>;

<bb 22>:
  D.45357_44 = attr_2->a_value;
  # DEBUG nptr => D.45357_44
  # DEBUG dft => 1
  if (D.45357_44 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  # DEBUG __nptr => D.45357_44
  dft_138 = strtol (D.45357_44, 0B, 10);

<bb 24>:
  # dft_139 = PHI <1(22), dft_138(23)>
  dft_154 = dft_139;
  dft_45 = dft_154;
  D.45372_46 = (switch_bool_t) dft_45;
  t38_options_1->T38FaxFillBitRemoval = D.45372_46;
  goto <bb 48>;

<bb 25>:
  D.45354_47 = attr_2->a_name;
  D.45374_48 = strcasecmp (D.45354_47, "T38FaxTranscodingMMR");
  if (D.45374_48 == 0)
    goto <bb 26>;
  else
    goto <bb 29>;

<bb 26>:
  D.45357_49 = attr_2->a_value;
  # DEBUG nptr => D.45357_49
  # DEBUG dft => 1
  if (D.45357_49 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  # DEBUG __nptr => D.45357_49
  dft_140 = strtol (D.45357_49, 0B, 10);

<bb 28>:
  # dft_141 = PHI <1(26), dft_140(27)>
  dft_156 = dft_141;
  dft_50 = dft_156;
  D.45378_51 = (switch_bool_t) dft_50;
  t38_options_1->T38FaxTranscodingMMR = D.45378_51;
  goto <bb 48>;

<bb 29>:
  D.45354_52 = attr_2->a_name;
  D.45380_53 = strcasecmp (D.45354_52, "T38FaxTranscodingJBIG");
  if (D.45380_53 == 0)
    goto <bb 30>;
  else
    goto <bb 33>;

<bb 30>:
  D.45357_54 = attr_2->a_value;
  # DEBUG nptr => D.45357_54
  # DEBUG dft => 1
  if (D.45357_54 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  # DEBUG __nptr => D.45357_54
  dft_142 = strtol (D.45357_54, 0B, 10);

<bb 32>:
  # dft_143 = PHI <1(30), dft_142(31)>
  dft_158 = dft_143;
  dft_55 = dft_158;
  D.45384_56 = (switch_bool_t) dft_55;
  t38_options_1->T38FaxTranscodingJBIG = D.45384_56;
  goto <bb 48>;

<bb 33>:
  D.45354_57 = attr_2->a_name;
  D.45388_58 = strcasecmp (D.45354_57, "T38FaxRateManagement");
  if (D.45388_58 == 0)
    goto <bb 34>;
  else
    goto <bb 36>;

<bb 34>:
  D.45357_59 = attr_2->a_value;
  if (D.45357_59 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.45357_60 = attr_2->a_value;
  D.45391_61 = switch_core_perform_session_strdup (session_3(D), D.45357_60, "src/switch_core_media.c", &__func__, 406);
  t38_options_1->T38FaxRateManagement = D.45391_61;
  goto <bb 48>;

<bb 36>:
  D.45354_62 = attr_2->a_name;
  D.45394_63 = strcasecmp (D.45354_62, "T38FaxMaxBuffer");
  if (D.45394_63 == 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  D.45357_64 = attr_2->a_value;
  if (D.45357_64 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.45357_65 = attr_2->a_value;
  # DEBUG __nptr => D.45357_65
  D.47316_144 = strtol (D.45357_65, 0B, 10);
  D.47316_160 = D.47316_144;
  D.47316_66 = D.47316_160;
  D.45398_67 = (unsigned int) D.47316_66;
  t38_options_1->T38FaxMaxBuffer = D.45398_67;
  goto <bb 48>;

<bb 39>:
  D.45354_68 = attr_2->a_name;
  D.45401_69 = strcasecmp (D.45354_68, "T38FaxMaxDatagram");
  if (D.45401_69 == 0)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  D.45357_70 = attr_2->a_value;
  if (D.45357_70 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.45357_71 = attr_2->a_value;
  # DEBUG __nptr => D.45357_71
  D.47319_145 = strtol (D.45357_71, 0B, 10);
  D.47319_162 = D.47319_145;
  D.47319_72 = D.47319_162;
  D.45405_73 = (unsigned int) D.47319_72;
  t38_options_1->T38FaxMaxDatagram = D.45405_73;
  goto <bb 48>;

<bb 42>:
  D.45354_74 = attr_2->a_name;
  D.45408_75 = strcasecmp (D.45354_74, "T38FaxUdpEC");
  if (D.45408_75 == 0)
    goto <bb 43>;
  else
    goto <bb 45>;

<bb 43>:
  D.45357_76 = attr_2->a_value;
  if (D.45357_76 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.45357_77 = attr_2->a_value;
  D.45411_78 = switch_core_perform_session_strdup (session_3(D), D.45357_77, "src/switch_core_media.c", &__func__, 412);
  t38_options_1->T38FaxUdpEC = D.45411_78;
  goto <bb 48>;

<bb 45>:
  D.45354_79 = attr_2->a_name;
  D.45412_80 = strcasecmp (D.45354_79, "T38VendorInfo");
  if (D.45412_80 == 0)
    goto <bb 46>;
  else
    goto <bb 48>;

<bb 46>:
  D.45357_81 = attr_2->a_value;
  if (D.45357_81 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.45357_82 = attr_2->a_value;
  D.45417_83 = switch_core_perform_session_strdup (session_3(D), D.45357_82, "src/switch_core_media.c", &__func__, 414);
  t38_options_1->T38VendorInfo = D.45417_83;

<bb 48>:
  attr_84 = attr_2->a_next;
  # DEBUG attr => attr_84

<bb 49>:
  # attr_2 = PHI <attr_29(14), attr_84(48)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 50>;

<bb 50>:
  D.45323_85 = session_3(D)->channel;
  switch_channel_set_variable_var_check (D.45323_85, "has_t38", "true", 1);
  D.45323_86 = session_3(D)->channel;
  switch_channel_set_private (D.45323_86, "t38_options", t38_options_1);
  D.45323_87 = session_3(D)->channel;
  switch_channel_set_app_flag_key ("T38", D.45323_87, 2);
  D.45323_88 = session_3(D)->channel;
  switch_channel_execute_on (D.45323_88, "sip_execute_on_image");
  D.45323_89 = session_3(D)->channel;
  switch_channel_api_on (D.45323_89, "sip_api_on_image");
  t38_options_90 = t38_options_1;
  return t38_options_90;

}



;; Function switch_core_media_build_crypto (switch_core_media_build_crypto)

Try : key_2(P2) & key_19(P19) : Same root, coalesced --> P2.
Try : key_2(P2) & key_20(P20) : Same root, coalesced --> P2.
Try : p_3(P3) & p_25(P25) : Same root, coalesced --> P3.
Try : p_3(P3) & p_28(P28) : Same root, coalesced --> P3.
Try : index_1(P1) & index_29(D)(P29) : Same root, coalesced --> P1.
Try : index_1(P1) & index_31(P31) : Same root, coalesced --> P1.
Try : iftmp.164_5(P5) & iftmp.164_38(P38) : Same root, coalesced --> P5.
Try : iftmp.164_5(P5) & iftmp.164_39(P39) : Same root, coalesced --> P5.
Try : iftmp.165_6(P6) & iftmp.165_43(P43) : Same root, coalesced --> P6.
Try : iftmp.165_6(P6) & iftmp.165_44(P44) : Same root, coalesced --> P6.
Try : D.46684_4(P4) & D.46684_17(P17) : Same root, coalesced --> P4.
Try : D.46684_4(P4) & D.46684_51(P51) : Same root, coalesced --> P4.

Partition map 

Partition 1 (index_1 - 1 29 31 )
Partition 2 (key_2 - 2 19 20 )
Partition 3 (p_3 - 3 25 28 )
Partition 4 (D.46684_4 - 4 17 51 )
Partition 5 (iftmp.164_5 - 5 38 39 )
Partition 6 (iftmp.165_6 - 6 43 44 )
Partition 7 (smh_7(D) - 7 )
Partition 8 (D.46676_8 - 8 )
Partition 9 (channel_9 - 9 )
Partition 10 (D.46677_10 - 10 )
Partition 11 (type_11(D) - 11 )
Partition 12 (D.46678_12 - 12 )
Partition 13 (engine_13 - 13 )
Partition 14 (force_14(D) - 14 )
Partition 15 (ctype_15(D) - 15 )
Partition 16 (D.46681_16 - 16 )
Partition 18 (direction_18(D) - 18 )
Partition 21 (D.46688_21 - 21 )
Partition 22 (D.46689_22 - 22 )
Partition 23 (D.46688_23 - 23 )
Partition 24 (D.46690_24 - 24 )
Partition 26 (D.46692_26 - 26 )
Partition 27 (D.46692_27 - 27 )
Partition 30 (D.46696_30 - 30 )
Partition 32 (D.46676_32 - 32 )
Partition 33 (D.46697_33 - 33 )
Partition 34 (D.46698_34 - 34 )
Partition 35 (D.46676_35 - 35 )
Partition 36 (D.46699_36 - 36 )
Partition 37 (D.46700_37 - 37 )
Partition 40 (D.46676_40 - 40 )
Partition 41 (D.46699_41 - 41 )
Partition 42 (D.46676_42 - 42 )
Partition 45 (D.46700_45 - 45 )
Partition 46 (D.46712_46 - 46 )
Partition 47 (D.46713_47 - 47 )
Partition 48 (D.46714_48 - 48 )
Partition 49 (val_49 - 49 )
Partition 50 (D.46717_50 - 50 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55(D) - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (.MEM_69 - 69 )

switch_core_media_build_crypto (struct switch_media_handle_t * smh, switch_media_type_t type, int index, switch_rtp_crypto_key_type_t ctype, switch_rtp_crypto_direction_t direction, int force)
{
  static const char __func__[31] = "switch_core_media_build_crypto";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_build_crypto";
  struct switch_rtp_engine_t * engine;
  char * p;
  struct switch_channel_t * channel;
  const char * val;
  unsigned char * key;
  unsigned char b64_key[512];
  int D.46717;
  unsigned int D.46714;
  switch_core_media_NDLB_t D.46713;
  struct switch_core_media_params_t * D.46712;
  char * iftmp.165;
  char * iftmp.164;
  char * D.46700;
  struct switch_channel_t * D.46699;
  char * D.46698;
  char * D.46697;
  unsigned int D.46696;
  char D.46692;
  switch_size_t D.46690;
  uint32_t D.46689;
  int D.46688;
  switch_status_t D.46684;
  unsigned char D.46681;
  unsigned int D.46678;
  struct switch_rtp_engine_t[2] * D.46677;
  struct switch_core_session_t * D.46676;

<bb 2>:
  b64_key = "";
  if (smh_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46676_8 = smh_7(D)->session;
  channel_9 = switch_core_session_get_channel (D.46676_8);
  # DEBUG channel => channel_9
  D.46677_10 = &smh_7(D)->engines;
  D.46678_12 = type_11(D) * 11416;
  engine_13 = D.46677_10 + D.46678_12;
  # DEBUG engine => engine_13
  if (force_14(D) == 0)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  D.46681_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
  if (D.46681_16 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.46684_17 = 0;
  goto <bb 29>;

<bb 7>:
  if (direction_18(D) == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
  # DEBUG key => key_19
  goto <bb 10>;

<bb 9>:
  key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
  # DEBUG key => key_20

<bb 10>:
  # key_2 = PHI <key_19(8), key_20(9)>
  # DEBUG key => key_2
  D.46688_21 = SUITES[ctype_15(D)].keylen;
  D.46689_22 = (uint32_t) D.46688_21;
  switch_rtp_get_random (key_2, D.46689_22);
  D.46688_23 = SUITES[ctype_15(D)].keylen;
  D.46690_24 = (switch_size_t) D.46688_23;
  switch_b64_encode (key_2, D.46690_24, &b64_key, 512);
  p_25 = strrchr (&b64_key, 61);
  # DEBUG p => p_25
  goto <bb 12>;

<bb 11>:
  *p_3 = 0;
  p_28 = p_3 + -1;
  # DEBUG p => p_28

<bb 12>:
  # p_3 = PHI <p_25(10), p_28(11)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.46692_26 = *p_3;
  if (D.46692_26 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.46692_27 = *p_3;
  if (D.46692_27 == 61)
    goto <bb 11>;
  else
    goto <bb 15>;

<bb 15>:
  if (index_29(D) == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.46696_30 = ctype_15(D) + 1;
  index_31 = (int) D.46696_30;
  # DEBUG index => index_31

<bb 17>:
  # index_1 = PHI <index_29(D)(15), index_31(16)>
  # DEBUG index => index_1
  D.46676_32 = smh_7(D)->session;
  D.46697_33 = SUITES[ctype_15(D)].name;
  D.46698_34 = switch_core_session_sprintf (D.46676_32, "%d %s inline:%s", index_1, D.46697_33, &b64_key);
  engine_13->ssec[ctype_15(D)].local_crypto_key = D.46698_34;
  D.46676_35 = smh_7(D)->session;
  D.46699_36 = D.46676_35->channel;
  D.46700_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  if (type_11(D) == 1)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  iftmp.164_38 = "video";
  goto <bb 20>;

<bb 19>:
  iftmp.164_39 = "audio";

<bb 20>:
  # iftmp.164_5 = PHI <iftmp.164_38(18), iftmp.164_39(19)>
  switch_channel_set_variable_name_printf (D.46699_36, D.46700_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);
  D.46676_40 = smh_7(D)->session;
  D.46699_41 = D.46676_40->channel;
  switch_channel_set_flag_value (D.46699_41, 92, 1);
  D.46676_42 = smh_7(D)->session;
  if (type_11(D) == 1)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  iftmp.165_43 = "video";
  goto <bb 23>;

<bb 22>:
  iftmp.165_44 = "audio";

<bb 23>:
  # iftmp.165_6 = PHI <iftmp.165_43(21), iftmp.165_44(22)>
  D.46700_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46676_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46700_45);
  D.46712_46 = smh_7(D)->mparams;
  D.46713_47 = D.46712_46->ndlb;
  D.46714_48 = D.46713_47 & 8;
  if (D.46714_48 == 0)
    goto <bb 24>;
  else
    goto <bb 27>;

<bb 24>:
  val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);
  # DEBUG val => val_49
  if (val_49 == 0B)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:
  D.46717_50 = switch_true (val_49);
  if (D.46717_50 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);
  goto <bb 28>;

<bb 27>:
  engine_13->ssec[ctype_15(D)].crypto_type = 8;

<bb 28>:
  D.46684_51 = 0;

<bb 29>:
  # D.46684_4 = PHI <D.46684_17(6), D.46684_51(28)>
  return D.46684_4;

}



;; Function switch_core_media_crypto_str2type (switch_core_media_crypto_str2type)

Try : i_1(P1) & i_3(P3) : Same root, coalesced --> P1.
Try : i_1(P1) & i_10(P10) : Same root, coalesced --> P1.
Try : D.47214_2(P2) & D.47214_9(P9) : Same root, coalesced --> P2.
Try : D.47214_2(P2) & D.47214_11(P11) : Same root, coalesced --> P2.

Partition map 

Partition 1 (i_1 - 1 3 10 )
Partition 2 (D.47214_2 - 2 9 11 )
Partition 4 (D.47209_4 - 4 )
Partition 5 (D.47209_5 - 5 )
Partition 6 (D.47210_6 - 6 )
Partition 7 (str_7(D) - 7 )
Partition 8 (D.47211_8 - 8 )
Partition 12 (.MEM_12(D) - 12 )

switch_core_media_crypto_str2type (const char * str)
{
  int i;
  switch_rtp_crypto_key_type_t D.47214;
  int D.47211;
  size_t D.47210;
  char * D.47209;

<bb 2>:
  i_3 = 0;
  # DEBUG i => i_3
  goto <bb 6>;

<bb 3>:
  D.47209_4 = SUITES[i_1].name;
  D.47209_5 = SUITES[i_1].name;
  D.47210_6 = strlen (D.47209_5);
  D.47211_8 = strncasecmp (str_7(D), D.47209_5, D.47210_6);
  if (D.47211_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.47214_9 = SUITES[i_1].type;
  goto <bb 8>;

<bb 5>:
  i_10 = i_1 + 1;
  # DEBUG i => i_10

<bb 6>:
  # i_1 = PHI <i_3(2), i_10(5)>
  # DEBUG i => i_1
  if (i_1 <= 8)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 7>:
  D.47214_11 = 9;

<bb 8>:
  # D.47214_2 = PHI <D.47214_9(4), D.47214_11(7)>
  return D.47214_2;

}



;; Function switch_core_session_get_recovery_crypto_key (switch_core_session_get_recovery_crypto_key)

Try : D.47325_45(P45) & D.47326_43(P43) --> P45 D.47325
Try : tv_26(P26) & D.47325_45(P45) --> P45 tv
Try : keyvar_1(P1) & keyvar_11(P11) : Same root, coalesced --> P1.
Try : keyvar_1(P1) & keyvar_14(P14) : Same root, coalesced --> P1.
Try : tagvar_2(P2) & tagvar_12(P12) : Same root, coalesced --> P2.
Try : tagvar_2(P2) & tagvar_15(P15) : Same root, coalesced --> P2.
Try : ctypevar_3(P3) & ctypevar_13(P13) : Same root, coalesced --> P3.
Try : ctypevar_3(P3) & ctypevar_16(P16) : Same root, coalesced --> P3.

Partition map 

Partition 1 (keyvar_1 - 1 11 14 )
Partition 2 (tagvar_2 - 2 12 15 )
Partition 3 (ctypevar_3 - 3 13 16 )
Partition 4 (session_4(D) - 4 )
Partition 5 (D.40304_5 - 5 )
Partition 6 (D.40304_6 - 6 )
Partition 7 (D.40307_7 - 7 )
Partition 8 (type_8(D) - 8 )
Partition 9 (D.40308_9 - 9 )
Partition 10 (engine_10 - 10 )
Partition 17 (D.40312_17 - 17 )
Partition 18 (tmp_18 - 18 )
Partition 19 (D.40312_19 - 19 )
Partition 20 (tmp_20 - 20 )
Partition 21 (D.40317_21 - 21 )
Partition 22 (D.40318_22 - 22 )
Partition 23 (D.40319_23 - 23 )
Partition 24 (D.40312_24 - 24 )
Partition 25 (tmp_25 - 25 )
Partition 27 (D.40318_27 - 27 )
Partition 28 (D.40318_28 - 28 )
Partition 29 (D.40312_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32(D) - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (tv_45 - 26 43 45 )

Coalesced D.47326_43 to tv_45
Scope blocks after cleanups:

{ Scope block #0 
  const char * tmp;
  struct switch_rtp_engine_t * engine;
  char * keyvar;
  char * tagvar;
  char * ctypevar;
  static const char __func__[44] = "switch_core_session_get_recovery_crypto_key";

  { Scope block #45 
    int tv;

    { Scope block #46 src/switch_core_media.c:1018 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #47 Originating from :#0 

      }

    }

  }

}
switch_core_session_get_recovery_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  int tv;
  static const char __func__[44] = "switch_core_session_get_recovery_crypto_key";
  char * ctypevar;
  char * tagvar;
  char * keyvar;
  struct switch_rtp_engine_t * engine;
  const char * tmp;
  char * D.40319;
  switch_rtp_crypto_key_type_t D.40318;
  switch_rtp_crypto_key_type_t D.40317;
  struct switch_channel_t * D.40312;
  unsigned int D.40308;
  struct switch_rtp_engine_t[2] * D.40307;
  struct switch_media_handle_t * D.40304;

<bb 2>:
  D.40304_5 = session_4(D)->media_handle;
  if (D.40304_5 == 0B)
    goto <bb 13>;
  else
    goto <bb 3>;

<bb 3>:
  D.40304_6 = session_4(D)->media_handle;
  D.40307_7 = &D.40304_6->engines;
  D.40308_9 = type_8(D) * 11416;
  engine_10 = D.40307_7 + D.40308_9;
  # DEBUG engine => engine_10
  if (type_8(D) == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  keyvar_11 = "srtp_remote_audio_crypto_key";
  # DEBUG keyvar => keyvar_11
  tagvar_12 = "srtp_remote_audio_crypto_tag";
  # DEBUG tagvar => tagvar_12
  ctypevar_13 = "srtp_remote_audio_crypto_type";
  # DEBUG ctypevar => ctypevar_13
  goto <bb 6>;

<bb 5>:
  keyvar_14 = "srtp_remote_video_crypto_key";
  # DEBUG keyvar => keyvar_14
  tagvar_15 = "srtp_remote_video_crypto_tag";
  # DEBUG tagvar => tagvar_15
  ctypevar_16 = "srtp_remote_video_crypto_type";
  # DEBUG ctypevar => ctypevar_16

<bb 6>:
  # keyvar_1 = PHI <keyvar_11(4), keyvar_14(5)>
  # tagvar_2 = PHI <tagvar_12(4), tagvar_15(5)>
  # ctypevar_3 = PHI <ctypevar_13(4), ctypevar_16(5)>
  # DEBUG ctypevar => ctypevar_3
  # DEBUG tagvar => tagvar_2
  # DEBUG keyvar => keyvar_1
  D.40312_17 = session_4(D)->channel;
  tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);
  # DEBUG tmp => tmp_18
  if (tmp_18 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;

<bb 7>:
  D.40312_19 = session_4(D)->channel;
  tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);
  # DEBUG tmp => tmp_20
  if (tmp_20 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.40317_21 = switch_core_media_crypto_str2type (tmp_20);
  engine_10->crypto_type = D.40317_21;

<bb 9>:
  D.40318_22 = engine_10->crypto_type;
  D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);
  engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;
  D.40312_24 = session_4(D)->channel;
  tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);
  # DEBUG tmp => tmp_25
  if (tmp_25 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  # DEBUG __nptr => tmp_25
  tv_43 = strtol (tmp_25, 0B, 10);
  tv_45 = tv_43;
  tv_26 = tv_45;
  # DEBUG tv => NULL
  D.40318_27 = engine_10->crypto_type;
  engine_10->ssec[D.40318_27].crypto_tag = tv_26;
  goto <bb 12>;

<bb 11>:
  D.40318_28 = engine_10->crypto_type;
  engine_10->ssec[D.40318_28].crypto_tag = 1;

<bb 12>:
  D.40312_29 = session_4(D)->channel;
  switch_channel_set_flag_value (D.40312_29, 92, 1);

<bb 13>:
  return;

}



;; Function switch_core_media_crypto_type2str (switch_core_media_crypto_type2str)


Partition map 

Partition 1 (type_1(D) - 1 )
Partition 2 (D.47207_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )

switch_core_media_crypto_type2str (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_crypto_type2str";
  const char * D.47207;

<bb 2>:
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 222, &__PRETTY_FUNCTION__);

<bb 4>:
  D.47207_2 = SUITES[type_1(D)].name;
  return D.47207_2;

}



;; Function switch_core_media_crypto_keylen (switch_core_media_crypto_keylen)


Partition map 

Partition 1 (type_1(D) - 1 )
Partition 2 (D.47203_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )

switch_core_media_crypto_keylen (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_crypto_keylen";
  int D.47203;

<bb 2>:
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 229, &__PRETTY_FUNCTION__);

<bb 4>:
  D.47203_2 = SUITES[type_1(D)].keylen;
  return D.47203_2;

}



;; Function switch_core_media_pass_zrtp_hash2 (switch_core_media_pass_zrtp_hash2)


Partition map 

Partition 1 (aleg_session_1(D) - 1 )
Partition 2 (bleg_session_2(D) - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )
Partition 5 (.MEM_5 - 5 )

switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session)
{
<bb 2>:
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 0);
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 1);
  return;

}



;; Function switch_core_media_pass_zrtp_hash (switch_core_media_pass_zrtp_hash)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (channel_2 - 2 )
Partition 3 (D.47161_3 - 3 )
Partition 4 (D.47162_4 - 4 )
Partition 5 (D.47165_5 - 5 )
Partition 6 (D.47166_6 - 6 )
Partition 7 (D.47169_7 - 7 )
Partition 8 (D.47170_8 - 8 )
Partition 9 (other_session.172_9 - 9 )
Partition 10 (other_session.172_10 - 10 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15 - 15 )
Partition 16 (.MEM_16 - 16 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (.MEM_19 - 19 )
Partition 20 (.MEM_20 - 20 )
Partition 21 (.MEM_21 - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23 - 23 )
Partition 24 (.MEM_24 - 24 )

switch_core_media_pass_zrtp_hash (struct switch_core_session_t * session)
{
  static const char __func__[33] = "switch_core_media_pass_zrtp_hash";
  struct switch_core_session_t * other_session;
  struct switch_channel_t * channel;
  struct switch_core_session_t * other_session.172;
  struct switch_core_session_t * D.47170;
  struct switch_core_session_t * D.47169;
  switch_status_t D.47166;
  struct switch_core_session_t * D.47165;
  uint32_t D.47162;
  struct switch_core_session_t * D.47161;

<bb 2>:
  channel_2 = switch_core_session_get_channel (session_1(D));
  # DEBUG channel => channel_2
  D.47161_3 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 289, D.47161_3, 101, "Deciding whether to pass zrtp-hash between legs\n");
  D.47162_4 = switch_channel_test_flag (channel_2, 73);
  if (D.47162_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.47165_5 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 291, D.47165_5, 101, "CF_ZRTP_PASSTHRU_REQ not set, so not propagating zrtp-hash\n");
  goto <bb 7>;

<bb 4>:
  D.47166_6 = switch_core_session_perform_get_partner (session_1(D), &other_session, "src/switch_core_media.c", &__func__, 293);
  if (D.47166_6 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47169_7 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 294, D.47169_7, 101, "No partner channel found, so not propagating zrtp-hash\n");
  goto <bb 7>;

<bb 6>:
  D.47170_8 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 297, D.47170_8, 101, "Found peer channel; propagating zrtp-hash if set\n");
  other_session.172_9 = other_session;
  switch_core_media_pass_zrtp_hash2 (session_1(D), other_session.172_9);
  other_session.172_10 = other_session;
  switch_core_session_rwunlock (other_session.172_10);

<bb 7>:
  return;

}



;; Function switch_core_media_get_zrtp_hash (switch_core_media_get_zrtp_hash)

Try : D.47155_1(P1) & D.47155_4(P4) : Same root, coalesced --> P1.
Try : D.47155_1(P1) & D.47155_11(P11) : Same root, coalesced --> P1.
Try : D.47155_1(P1) & D.47155_12(P12) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.47155_1 - 1 4 11 12 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.47152_3 - 3 )
Partition 5 (D.47152_5 - 5 )
Partition 6 (D.47156_6 - 6 )
Partition 7 (type_7(D) - 7 )
Partition 8 (D.47157_8 - 8 )
Partition 9 (engine_9 - 9 )
Partition 10 (local_10(D) - 10 )
Partition 13 (.MEM_13(D) - 13 )

switch_core_media_get_zrtp_hash (struct switch_core_session_t * session, switch_media_type_t type, switch_bool_t local)
{
  struct switch_rtp_engine_t * engine;
  unsigned int D.47157;
  struct switch_rtp_engine_t[2] * D.47156;
  const char * D.47155;
  struct switch_media_handle_t * D.47152;

<bb 2>:
  D.47152_3 = session_2(D)->media_handle;
  if (D.47152_3 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.47155_4 = 0B;
  goto <bb 7>;

<bb 4>:
  D.47152_5 = session_2(D)->media_handle;
  D.47156_6 = &D.47152_5->engines;
  D.47157_8 = type_7(D) * 11416;
  engine_9 = D.47156_6 + D.47157_8;
  # DEBUG engine => engine_9
  if (local_10(D) != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47155_11 = engine_9->local_sdp_zrtp_hash;
  goto <bb 7>;

<bb 6>:
  D.47155_12 = engine_9->remote_sdp_zrtp_hash;

<bb 7>:
  # D.47155_1 = PHI <D.47155_4(3), D.47155_11(5), D.47155_12(6)>
  return D.47155_1;

}



;; Function switch_core_media_extract_t38_options (switch_core_media_extract_t38_options)

Try : D.47139_20(P20) & t38_options_2(P2) --> P20 t38_options
Try : m_1(P1) & m_13(P13) : Same root, coalesced --> P1.
Try : m_1(P1) & m_19(P19) : Same root, coalesced --> P1.
Try : t38_options_2(P20) & t38_options_18(P18) : Same root, coalesced --> P20.
Try : t38_options_2(P20) & t38_options_5(P5) : Same root, coalesced --> P20.
Try : D.47139_3(P3) & D.47139_10(P10) : Same root, coalesced --> P3.
Try : D.47139_3(P3) & D.47139_12(P12) : Same root, coalesced --> P3.
Try : D.47139_3(P3) & t38_options_20(P20) --> P20 t38_options

Partition map 

Partition 1 (m_1 - 1 13 19 )
Partition 4 (parser_4 - 4 )
Partition 6 (r_sdp_6(D) - 6 )
Partition 7 (D.47135_7 - 7 )
Partition 8 (D.47136_8 - 8 )
Partition 9 (parser_9 - 9 )
Partition 11 (sdp_11 - 11 )
Partition 14 (D.47142_14 - 14 )
Partition 15 (D.47145_15 - 15 )
Partition 16 (D.47148_16 - 16 )
Partition 17 (session_17(D) - 17 )
Partition 20 (t38_options_20 - 2 3 5 10 12 18 20 )
Partition 21 (.MEM_21 - 21 )
Partition 22 (.MEM_22(D) - 22 )
Partition 23 (.MEM_23 - 23 )
Partition 24 (.MEM_24 - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )

Coalesced D.47139_3 to t38_options_20
Coalesced D.47139_10 to t38_options_20
Coalesced D.47139_12 to t38_options_20
Scope blocks after cleanups:

{ Scope block #0 
  struct sdp_media_t * m;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  struct switch_t38_options_t * t38_options;

}
switch_core_media_extract_t38_options (struct switch_core_session_t * session, const char * r_sdp)
{
  struct switch_t38_options_t * t38_options;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  long unsigned int D.47148;
  sdp_media_e D.47145;
  sdp_proto_e D.47142;
  int D.47136;
  size_t D.47135;

<bb 2>:
  parser_4 = 0B;
  # DEBUG parser => parser_4
  t38_options_5 = 0B;
  # DEBUG t38_options => t38_options_5
  D.47135_7 = strlen (r_sdp_6(D));
  D.47136_8 = (int) D.47135_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.47136_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  t38_options_10 = 0B;
  goto <bb 14>;

<bb 4>:
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  sdp_parser_free (parser_9);
  t38_options_12 = 0B;
  goto <bb 14>;

<bb 6>:
  m_13 = sdp_11->sdp_media;
  # DEBUG m => m_13
  goto <bb 12>;

<bb 7>:
  D.47142_14 = m_1->m_proto;
  if (D.47142_14 == 258)
    goto <bb 8>;
  else
    goto <bb 11>;

<bb 8>:
  D.47145_15 = m_1->m_type;
  if (D.47145_15 == 8)
    goto <bb 9>;
  else
    goto <bb 11>;

<bb 9>:
  D.47148_16 = m_1->m_port;
  if (D.47148_16 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  t38_options_18 = switch_core_media_process_udptl (session_17(D), sdp_11, m_1);
  # DEBUG t38_options => t38_options_18
  goto <bb 13>;

<bb 11>:
  m_19 = m_1->m_next;
  # DEBUG m => m_19

<bb 12>:
  # m_1 = PHI <m_13(6), m_19(11)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;

<bb 13>:
  # t38_options_2 = PHI <t38_options_18(10), t38_options_5(12)>
  # DEBUG t38_options => t38_options_2
  sdp_parser_free (parser_9);
  t38_options_20 = t38_options_2;

<bb 14>:
  # t38_options_3 = PHI <t38_options_10(3), t38_options_12(5), t38_options_20(13)>
  return t38_options_3;

}



;; Function switch_core_session_get_payload_code (switch_core_session_get_payload_code)

Try : D.47340_46(P46) & D.47342_45(P45) --> P46 D.47340
Try : D.47099_32(P32) & D.47340_46(P46) --> P46 D.47340
Try : pmap_1(P1) & pmap_19(P19) : Same root, coalesced --> P1.
Try : pmap_1(P1) & pmap_28(P28) : Same root, coalesced --> P1.
Try : pt_2(P2) & pt_24(P24) : Same root, coalesced --> P2.
Try : pt_2(P2) & pt_7(P7) : Same root, coalesced --> P2.
Try : recv_pt_3(P3) & recv_pt_25(P25) : Same root, coalesced --> P3.
Try : recv_pt_3(P3) & recv_pt_8(P8) : Same root, coalesced --> P3.
Try : found_4(P4) & found_27(P27) : Same root, coalesced --> P4.
Try : found_4(P4) & found_9(P9) : Same root, coalesced --> P4.
Try : fmtp_5(P5) & fmtp_26(P26) : Same root, coalesced --> P5.
Try : fmtp_5(P5) & fmtp_10(P10) : Same root, coalesced --> P5.
Try : D.47082_6(P6) & D.47082_13(P13) : Same root, coalesced --> P6.
Try : D.47082_6(P6) & D.47082_34(P34) : Same root, coalesced --> P6.
Try : D.47082_6(P6) & D.47082_35(P35) : Same root, coalesced --> P6.

Partition map 

Partition 1 (pmap_1 - 1 19 28 )
Partition 2 (pt_2 - 2 7 24 )
Partition 3 (recv_pt_3 - 3 8 25 )
Partition 4 (found_4 - 4 9 27 )
Partition 5 (fmtp_5 - 5 10 26 )
Partition 6 (D.47082_6 - 6 13 34 35 )
Partition 11 (session_11(D) - 11 )
Partition 12 (smh_12 - 12 )
Partition 14 (D.47083_14 - 14 )
Partition 15 (type_15(D) - 15 )
Partition 16 (D.47084_16 - 16 )
Partition 17 (engine_17 - 17 )
Partition 18 (D.47085_18 - 18 )
Partition 20 (D.47086_20 - 20 )
Partition 21 (D.47089_21 - 21 )
Partition 22 (iananame_22(D) - 22 )
Partition 23 (D.47090_23 - 23 )
Partition 29 (D.47085_29 - 29 )
Partition 30 (ptP_30(D) - 30 )
Partition 31 (recv_ptP_31(D) - 31 )
Partition 33 (fmtpP_33(D) - 33 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38(D) - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (D.47341_44 - 44 )
Partition 46 (D.47340_46 - 32 45 46 )

Coalesced D.47099_32 to D.47340_46
Coalesced D.47342_45 to D.47340_46
Scope blocks after cleanups:

{ Scope block #0 
  struct payload_map_t * pmap;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  switch_payload_t pt;
  switch_payload_t recv_pt;
  int found;
  char * fmtp;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_session_get_payload_code";

  { Scope block #48 src/switch_core_media.c:561 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #49 Originating from :#0 

    }

  }

}
switch_core_session_get_payload_code (struct switch_core_session_t * session, switch_media_type_t type, const char * iananame, switch_payload_t * ptP, switch_payload_t * recv_ptP, char * * fmtpP)
{
  const char D.47341;
  int D.47340;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_session_get_payload_code";
  char * fmtp;
  int found;
  switch_payload_t recv_pt;
  switch_payload_t pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  struct payload_map_t * pmap;
  int D.47090;
  char * D.47089;
  uint8_t D.47086;
  struct switch_mutex_t * D.47085;
  unsigned int D.47084;
  struct switch_rtp_engine_t[2] * D.47083;
  switch_status_t D.47082;

<bb 2>:
  pt_7 = 0;
  # DEBUG pt => pt_7
  recv_pt_8 = 0;
  # DEBUG recv_pt => recv_pt_8
  found_9 = 0;
  # DEBUG found => found_9
  fmtp_10 = 0B;
  # DEBUG fmtp => fmtp_10
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 530, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47082_13 = 1;
  goto <bb 26>;

<bb 6>:
  D.47083_14 = &smh_12->engines;
  D.47084_16 = type_15(D) * 11416;
  engine_17 = D.47083_14 + D.47084_16;
  # DEBUG engine => engine_17
  D.47085_18 = smh_12->sdp_mutex;
  switch_mutex_lock (D.47085_18);
  pmap_19 = engine_17->payload_map;
  # DEBUG pmap => pmap_19
  goto <bb 12>;

<bb 7>:
  D.47086_20 = pmap_1->allocated;
  if (D.47086_20 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  // predicted unlikely by continue predictor.
  goto <bb 11>;

<bb 9>:
  D.47089_21 = pmap_1->iananame;
  D.47090_23 = strcasecmp (D.47089_21, iananame_22(D));
  if (D.47090_23 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  pt_24 = pmap_1->pt;
  # DEBUG pt => pt_24
  recv_pt_25 = pmap_1->recv_pt;
  # DEBUG recv_pt => recv_pt_25
  fmtp_26 = pmap_1->rm_fmtp;
  # DEBUG fmtp => fmtp_26
  found_27 = found_9 + 1;
  # DEBUG found => found_27
  goto <bb 13>;

<bb 11>:
  pmap_28 = pmap_1->next;
  # DEBUG pmap => pmap_28

<bb 12>:
  # pmap_1 = PHI <pmap_19(6), pmap_28(11)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 7>;
  else
    goto <bb 13>;

<bb 13>:
  # pt_2 = PHI <pt_24(10), pt_7(12)>
  # recv_pt_3 = PHI <recv_pt_25(10), recv_pt_8(12)>
  # found_4 = PHI <found_27(10), found_9(12)>
  # fmtp_5 = PHI <fmtp_26(10), fmtp_10(12)>
  # DEBUG fmtp => fmtp_5
  # DEBUG found => found_4
  # DEBUG recv_pt => recv_pt_3
  # DEBUG pt => pt_2
  D.47085_29 = smh_12->sdp_mutex;
  switch_mutex_unlock (D.47085_29);
  if (found_4 != 0)
    goto <bb 14>;
  else
    goto <bb 25>;

<bb 14>:
  if (ptP_30(D) != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  *ptP_30(D) = pt_2;

<bb 16>:
  if (recv_ptP_31(D) != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  *recv_ptP_31(D) = recv_pt_3;

<bb 18>:
  # DEBUG s => fmtp_5
  if (fmtp_5 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;

<bb 19>:
  D.47341_44 = MEM[(const char *)fmtp_5];
  if (D.47341_44 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:

<bb 21>:
  # D.47340_45 = PHI <1(18), 1(19), 0(20)>
  D.47340_46 = D.47340_45;
  D.47340_32 = D.47340_46;
  if (D.47340_32 == 0)
    goto <bb 22>;
  else
    goto <bb 24>;

<bb 22>:
  if (fmtpP_33(D) != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  *fmtpP_33(D) = fmtp_5;

<bb 24>:
  D.47082_34 = 0;
  goto <bb 26>;

<bb 25>:
  D.47082_35 = 1;

<bb 26>:
  # D.47082_6 = PHI <D.47082_13(5), D.47082_34(24), D.47082_35(25)>
  return D.47082_6;

}



;; Function switch_core_media_add_payload_map (switch_core_media_add_payload_map)

Try : exists_35(P35) & iftmp.169_10(P10) --> P35 exists
Try : D.47345_122(P122) & D.47347_115(P115) --> P122 D.47345
Try : D.47020_37(P37) & D.47345_122(P122) --> P122 D.47345
Try : D.47349_123(P123) & D.47351_117(P117) --> P123 D.47349
Try : D.47024_39(P39) & D.47349_123(P123) --> P123 D.47349
Try : D.47353_124(P124) & D.47355_119(P119) --> P124 D.47353
Try : D.47049_58(P58) & D.47353_124(P124) --> P124 D.47353
Try : D.47357_125(P125) & D.47359_121(P121) --> P125 D.47357
Try : D.47052_60(P60) & D.47357_125(P125) --> P125 D.47357
Try : D.47002_80(P80) & pmap_3(P3) --> P80 pmap
Try : iftmp.169_10(P35) & iftmp.169_33(P33) --> P35 exists
Try : iftmp.169_10(P35) & iftmp.169_34(P34) --> P35 exists
Try : exists_4(P4) & exists_35(P35) : Same root, coalesced --> P35.
Try : exists_4(P35) & exists_42(P42) : Same root, coalesced --> P35.
Try : local_pt_7(P7) & local_pt_8(P8) : Same root, coalesced --> P7.
Try : local_pt_7(P7) & local_pt_44(P44) : Same root, coalesced --> P7.
Try : pmap_1(P1) & pmap_22(P22) : Same root, coalesced --> P1.
Try : pmap_1(P1) & pmap_45(P45) : Same root, coalesced --> P1.
Try : exists_5(P5) & exists_12(P12) : Same root, coalesced --> P5.
Try : exists_5(P5) & exists_4(P35) : Same root, coalesced --> P35.
Try : local_pt_8(P7) & local_pt_13(P13) : Same root, coalesced --> P7.
Try : local_pt_8(P7) & local_pt_7(P7) : Already coalesced.
Try : exists_6(P6) & exists_35(P35) : Same root, coalesced --> P35.
Try : exists_6(P35) & exists_5(P35) : Already coalesced.
Try : exists_6(P35) & exists_5(P35) : Already coalesced.
Try : exists_6(P35) & exists_35(P35) : Already coalesced.
Try : exists_6(P35) & exists_35(P35) : Already coalesced.
Try : pmap_2(P2) & pmap_49(P49) : Same root, coalesced --> P2.
Try : pmap_2(P2) & pmap_51(P51) : Same root, coalesced --> P2.
Try : pmap_3(P80) & pmap_1(P1) : Same root, coalesced --> P1.
Try : pmap_3(P1) & pmap_2(P2) : Same root, coalesced --> P1.
Try : iftmp.170_11(P11) & iftmp.170_70(P70) : Same root, coalesced --> P11.
Try : iftmp.170_11(P11) & iftmp.170_71(P71) : Same root, coalesced --> P11.
Try : D.47002_9(P9) & D.47002_16(P16) : Same root, coalesced --> P9.
Try : D.47002_9(P9) & pmap_80(P1) --> P1 pmap

Partition map 

Partition 1 (pmap_1 - 1 2 3 9 16 22 45 49 51 80 )
Partition 7 (local_pt_7 - 7 8 13 44 )
Partition 11 (iftmp.170_11 - 11 70 71 )
Partition 14 (session_14(D) - 14 )
Partition 15 (smh_15 - 15 )
Partition 17 (D.47003_17 - 17 )
Partition 18 (type_18(D) - 18 )
Partition 19 (D.47004_19 - 19 )
Partition 20 (engine_20 - 20 )
Partition 21 (D.47005_21 - 21 )
Partition 23 (D.47031_23 - 23 )
Partition 24 (D.47011_24 - 24 )
Partition 25 (name_25(D) - 25 )
Partition 26 (D.47012_26 - 26 )
Partition 27 (D.47014_27 - 27 )
Partition 28 (D.47014_28 - 28 )
Partition 29 (rate_29(D) - 29 )
Partition 30 (D.47016_30 - 30 )
Partition 31 (D.47016_31 - 31 )
Partition 32 (ptime_32(D) - 32 )
Partition 35 (exists_35 - 4 5 6 10 12 33 34 35 42 )
Partition 36 (fmtp_36(D) - 36 )
Partition 38 (D.47023_38 - 38 )
Partition 40 (D.47023_40 - 40 )
Partition 41 (D.38476_41 - 41 )
Partition 43 (D.47029_43 - 43 )
Partition 46 (D.47036_46 - 46 )
Partition 47 (D.47036_47 - 47 )
Partition 48 (D.47038_48 - 48 )
Partition 50 (D.47040_50 - 50 )
Partition 52 (D.47040_52 - 52 )
Partition 53 (D.47041_53 - 53 )
Partition 54 (D.47011_54 - 54 )
Partition 55 (D.47011_55 - 55 )
Partition 56 (D.47042_56 - 56 )
Partition 57 (sdp_type_57(D) - 57 )
Partition 59 (D.47023_59 - 59 )
Partition 61 (D.47023_61 - 61 )
Partition 62 (D.38491_62 - 62 )
Partition 63 (D.47040_63 - 63 )
Partition 64 (D.47054_64 - 64 )
Partition 65 (pt_65(D) - 65 )
Partition 66 (D.47055_66 - 66 )
Partition 67 (D.47056_67 - 67 )
Partition 68 (D.47057_68 - 68 )
Partition 69 (D.47058_69 - 69 )
Partition 72 (negotiated_72(D) - 72 )
Partition 73 (D.47036_73 - 73 )
Partition 74 (D.47036_74 - 74 )
Partition 75 (D.47074_75 - 75 )
Partition 76 (D.47074_76 - 76 )
Partition 77 (D.47074_77 - 77 )
Partition 78 (D.47076_78 - 78 )
Partition 79 (D.47005_79 - 79 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89(D) - 89 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (D.47346_114 - 114 )
Partition 116 (D.47350_116 - 116 )
Partition 118 (D.47354_118 - 118 )
Partition 120 (D.47358_120 - 120 )
Partition 122 (D.47345_122 - 37 115 122 )
Partition 123 (D.47349_123 - 39 117 123 )
Partition 124 (D.47353_124 - 58 119 124 )
Partition 125 (D.47357_125 - 60 121 125 )

Coalesced D.47002_9 to pmap_1
Coalesced iftmp.169_10 to exists_35
Coalesced D.47002_16 to pmap_1
Coalesced iftmp.169_33 to exists_35
Coalesced iftmp.169_34 to exists_35
Coalesced D.47020_37 to D.47345_122
Coalesced D.47024_39 to D.47349_123
Coalesced D.47049_58 to D.47353_124
Coalesced D.47052_60 to D.47357_125
Coalesced D.47347_115 to D.47345_122
Coalesced D.47351_117 to D.47349_123
Coalesced D.47355_119 to D.47353_124
Coalesced D.47359_121 to D.47357_125
Scope blocks after cleanups:

{ Scope block #0 
  struct payload_map_t * pmap;
  int exists;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  int local_pt;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_add_payload_map";
  static const char __func__[34] = "switch_core_media_add_payload_map";

  { Scope block #50 src/switch_core_media.c:643 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #51 Originating from :#0 

    }

  }

  { Scope block #52 src/switch_core_media.c:643 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #53 Originating from :#0 

    }

  }

  { Scope block #54 src/switch_core_media.c:605 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #55 Originating from :#0 

    }

  }

  { Scope block #56 src/switch_core_media.c:605 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #57 Originating from :#0 

    }

  }

  { Scope block #58 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #59 
    switch_ssize_t hlen;

  }

  { Scope block #60 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

}
switch_core_media_add_payload_map (struct switch_core_session_t * session, switch_media_type_t type, const char * name, const char * fmtp, switch_sdp_type_t sdp_type, uint32_t pt, uint32_t rate, uint32_t ptime, uint8_t negotiated)
{
  const char D.47358;
  int D.47357;
  const char D.47354;
  int D.47353;
  const char D.47350;
  int D.47349;
  const char D.47346;
  int D.47345;
  switch_ssize_t hlen;
  static const char __func__[34] = "switch_core_media_add_payload_map";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_add_payload_map";
  int local_pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  int exists;
  struct payload_map_t * pmap;
  struct payload_map_s * D.47076;
  struct payload_map_t * D.47074;
  unsigned char iftmp.170;
  _Bool D.47058;
  _Bool D.47057;
  _Bool D.47056;
  unsigned char D.47055;
  char * D.47054;
  int D.38491;
  unsigned int D.47042;
  char * D.47041;
  struct switch_memory_pool_t * D.47040;
  uint8_t D.47038;
  struct payload_map_t * D.47036;
  uint8_t D.47031;
  switch_payload_t D.47029;
  int D.38476;
  char * D.47023;
  uint32_t D.47016;
  uint32_t D.47014;
  int D.47012;
  char * D.47011;
  struct switch_mutex_t * D.47005;
  unsigned int D.47004;
  struct switch_rtp_engine_t[2] * D.47003;

<bb 2>:
  exists_12 = 0;
  # DEBUG exists => exists_12
  local_pt_13 = 0;
  # DEBUG local_pt => local_pt_13
  if (session_14(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 589, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_15 = session_14(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  pmap_16 = 0B;
  goto <bb 62>;

<bb 6>:
  D.47003_17 = &smh_15->engines;
  D.47004_19 = type_18(D) * 11416;
  engine_20 = D.47003_17 + D.47004_19;
  # DEBUG engine => engine_20
  D.47005_21 = smh_15->sdp_mutex;
  switch_mutex_lock (D.47005_21);
  pmap_22 = engine_20->payload_map;
  # DEBUG pmap => pmap_22
  goto <bb 26>;

<bb 7>:
  D.47011_24 = pmap_1->iananame;
  D.47012_26 = strcasecmp (name_25(D), D.47011_24);
  if (D.47012_26 == 0)
    goto <bb 8>;
  else
    goto <bb 13>;

<bb 8>:
  D.47014_27 = pmap_1->rate;
  if (D.47014_27 == 0)
    goto <bb 10>;
  else
    goto <bb 9>;

<bb 9>:
  D.47014_28 = pmap_1->rate;
  if (D.47014_28 == rate_29(D))
    goto <bb 10>;
  else
    goto <bb 13>;

<bb 10>:
  D.47016_30 = pmap_1->ptime;
  if (D.47016_30 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:
  D.47016_31 = pmap_1->ptime;
  if (D.47016_31 == ptime_32(D))
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  exists_33 = 1;
  goto <bb 14>;

<bb 13>:
  exists_34 = 0;

<bb 14>:
  # exists_10 = PHI <exists_33(12), exists_34(13)>
  exists_35 = exists_10;
  # DEBUG exists => exists_35
  if (exists_35 != 0)
    goto <bb 15>;
  else
    goto <bb 25>;

<bb 15>:
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 18>;
  else
    goto <bb 16>;

<bb 16>:
  D.47346_114 = *fmtp_36(D);
  if (D.47346_114 == 0)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:

<bb 18>:
  # D.47345_115 = PHI <1(15), 1(16), 0(17)>
  D.47345_122 = D.47345_115;
  D.47345_37 = D.47345_122;
  if (D.47345_37 == 0)
    goto <bb 19>;
  else
    goto <bb 28>;

<bb 19>:
  D.47023_38 = pmap_1->rm_fmtp;
  # DEBUG s => D.47023_38
  if (D.47023_38 == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 20>:
  D.47350_116 = MEM[(const char *)D.47023_38];
  if (D.47350_116 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

<bb 21>:

<bb 22>:
  # D.47349_117 = PHI <1(19), 1(20), 0(21)>
  D.47349_123 = D.47349_117;
  D.47349_39 = D.47349_123;
  if (D.47349_39 == 0)
    goto <bb 23>;
  else
    goto <bb 28>;

<bb 23>:
  D.47023_40 = pmap_1->rm_fmtp;
  D.38476_41 = __builtin_strcmp (D.47023_40, fmtp_36(D));
  if (D.38476_41 != 0)
    goto <bb 24>;
  else
    goto <bb 28>;

<bb 24>:
  exists_42 = 0;
  # DEBUG exists => exists_42
  D.47029_43 = pmap_1->pt;
  local_pt_44 = (int) D.47029_43;
  # DEBUG local_pt => local_pt_44
  // predicted unlikely by continue predictor.

<bb 25>:
  # exists_4 = PHI <exists_35(14), exists_42(24)>
  # local_pt_7 = PHI <local_pt_8(14), local_pt_44(24)>
  # DEBUG local_pt => local_pt_7
  # DEBUG exists => exists_4
  pmap_45 = pmap_1->next;
  # DEBUG pmap => pmap_45

<bb 26>:
  # pmap_1 = PHI <pmap_22(6), pmap_45(25)>
  # exists_5 = PHI <exists_12(6), exists_4(25)>
  # local_pt_8 = PHI <local_pt_13(6), local_pt_7(25)>
  # DEBUG local_pt => local_pt_8
  # DEBUG exists => exists_5
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.47031_23 = pmap_1->allocated;
  if (D.47031_23 != 0)
    goto <bb 7>;
  else
    goto <bb 28>;

<bb 28>:
  # exists_6 = PHI <exists_35(22), exists_5(26), exists_5(27), exists_35(18), exists_35(23)>
  # DEBUG exists => exists_6
  if (exists_6 == 0)
    goto <bb 29>;
  else
    goto <bb 34>;

<bb 29>:
  hlen = -1;
  D.47036_46 = engine_20->payload_map;
  if (D.47036_46 != 0B)
    goto <bb 30>;
  else
    goto <bb 32>;

<bb 30>:
  D.47036_47 = engine_20->payload_map;
  D.47038_48 = D.47036_47->allocated;
  if (D.47038_48 == 0)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  pmap_49 = engine_20->payload_map;
  # DEBUG pmap => pmap_49
  goto <bb 33>;

<bb 32>:
  D.47040_50 = session_14(D)->pool;
  pmap_51 = switch_core_perform_alloc (D.47040_50, 84, "src/switch_core_media.c", &__func__, 624);
  # DEBUG pmap => pmap_51

<bb 33>:
  # pmap_2 = PHI <pmap_49(31), pmap_51(32)>
  # DEBUG pmap => pmap_2
  pmap_2->type = type_18(D);
  D.47040_52 = session_14(D)->pool;
  D.47041_53 = switch_core_perform_strdup (D.47040_52, name_25(D), "src/switch_core_media.c", &__func__, 628);
  pmap_2->iananame = D.47041_53;
  D.47011_54 = pmap_2->iananame;
  pmap_2->rm_encoding = D.47011_54;
  D.47011_55 = pmap_2->iananame;
  D.47042_56 = switch_ci_hashfunc_default (D.47011_55, &hlen);
  pmap_2->hash = D.47042_56;

<bb 34>:
  # pmap_3 = PHI <pmap_1(28), pmap_2(33)>
  # DEBUG pmap => pmap_3
  pmap_3->sdp_type = sdp_type_57(D);
  if (ptime_32(D) != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  pmap_3->ptime = ptime_32(D);

<bb 36>:
  if (rate_29(D) != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  pmap_3->rate = rate_29(D);

<bb 38>:
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 41>;
  else
    goto <bb 39>;

<bb 39>:
  D.47354_118 = *fmtp_36(D);
  if (D.47354_118 == 0)
    goto <bb 41>;
  else
    goto <bb 40>;

<bb 40>:

<bb 41>:
  # D.47353_119 = PHI <1(38), 1(39), 0(40)>
  D.47353_124 = D.47353_119;
  D.47353_58 = D.47353_124;
  if (D.47353_58 == 0)
    goto <bb 42>;
  else
    goto <bb 48>;

<bb 42>:
  D.47023_59 = pmap_3->rm_fmtp;
  # DEBUG s => D.47023_59
  if (D.47023_59 == 0B)
    goto <bb 45>;
  else
    goto <bb 43>;

<bb 43>:
  D.47358_120 = MEM[(const char *)D.47023_59];
  if (D.47358_120 == 0)
    goto <bb 45>;
  else
    goto <bb 44>;

<bb 44>:

<bb 45>:
  # D.47357_121 = PHI <1(42), 1(43), 0(44)>
  D.47357_125 = D.47357_121;
  D.47357_60 = D.47357_125;
  if (D.47357_60 != 0)
    goto <bb 47>;
  else
    goto <bb 46>;

<bb 46>:
  D.47023_61 = pmap_3->rm_fmtp;
  D.38491_62 = __builtin_strcmp (D.47023_61, fmtp_36(D));
  if (D.38491_62 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.47040_63 = session_14(D)->pool;
  D.47054_64 = switch_core_perform_strdup (D.47040_63, fmtp_36(D), "src/switch_core_media.c", &__func__, 644);
  pmap_3->rm_fmtp = D.47054_64;

<bb 48>:
  pmap_3->allocated = 1;
  D.47055_66 = (unsigned char) pt_65(D);
  pmap_3->recv_pt = D.47055_66;
  D.47056_67 = sdp_type_57(D) == 0;
  D.47057_68 = exists_6 == 0;
  D.47058_69 = D.47056_67 || D.47057_68;
  if (D.47058_69 != 0)
    goto <bb 49>;
  else
    goto <bb 53>;

<bb 49>:
  if (local_pt_8 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  iftmp.170_70 = (unsigned char) local_pt_8;
  goto <bb 52>;

<bb 51>:
  iftmp.170_71 = (unsigned char) pt_65(D);

<bb 52>:
  # iftmp.170_11 = PHI <iftmp.170_70(50), iftmp.170_71(51)>
  pmap_3->pt = iftmp.170_11;

<bb 53>:
  if (negotiated_72(D) != 0)
    goto <bb 54>;
  else
    goto <bb 55>;

<bb 54>:
  pmap_3->negotiated = negotiated_72(D);

<bb 55>:
  if (exists_6 == 0)
    goto <bb 56>;
  else
    goto <bb 61>;

<bb 56>:
  D.47036_73 = engine_20->payload_map;
  if (D.47036_73 == pmap_3)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  engine_20->pmap_tail = pmap_3;
  goto <bb 61>;

<bb 58>:
  D.47036_74 = engine_20->payload_map;
  if (D.47036_74 == 0B)
    goto <bb 59>;
  else
    goto <bb 60>;

<bb 59>:
  engine_20->pmap_tail = pmap_3;
  D.47074_75 = engine_20->pmap_tail;
  engine_20->payload_map = D.47074_75;
  goto <bb 61>;

<bb 60>:
  D.47074_76 = engine_20->pmap_tail;
  D.47074_76->next = pmap_3;
  D.47074_77 = engine_20->pmap_tail;
  D.47076_78 = D.47074_77->next;
  engine_20->pmap_tail = D.47076_78;

<bb 61>:
  D.47005_79 = smh_15->sdp_mutex;
  switch_mutex_unlock (D.47005_79);
  pmap_80 = pmap_3;

<bb 62>:
  # pmap_9 = PHI <pmap_16(5), pmap_80(61)>
  return pmap_9;

}



;; Function switch_core_media_set_r_sdp_codec_string (switch_core_media_set_r_sdp_codec_string)

Try : D.47362_298(P298) & D.47364_279(P279) --> P298 D.47362
Try : D.40415_36(P36) & D.47362_298(P298) --> P298 D.47362
Try : D.47366_299(P299) & D.47368_281(P281) --> P299 D.47366
Try : D.40430_49(P49) & D.47366_299(P299) --> P299 D.47366
Try : D.47370_301(P301) & D.47371_282(P282) --> P301 D.47370
Try : dptime_53(P53) & D.47370_301(P301) --> P301 dptime
Try : ptime_56(P56) & dptime_9(P9) : 2 different USER vars. No coalesce.
Try : D.47373_302(P302) & D.47375_284(P284) --> P302 D.47373
Try : D.40444_63(P63) & D.47373_302(P302) --> P302 D.47373
Try : D.47377_304(P304) & D.47378_285(P285) --> P304 D.47377
Try : ptime_68(P68) & D.47377_304(P304) --> P304 ptime
Try : ptime_82(P82) & dptime_9(P9) : 2 different USER vars. No coalesce.
Try : D.47380_305(P305) & D.47382_287(P287) --> P305 D.47380
Try : D.40471_93(P93) & D.47380_305(P305) --> P305 D.47380
Try : D.47384_307(P307) & D.47385_288(P288) --> P307 D.47384
Try : ptime_98(P98) & D.47384_307(P307) --> P307 ptime
Try : D.47387_309(P309) & D.47389_290(P290) --> P309 D.47387
Try : D.40497_150(P150) & D.47387_309(P309) --> P309 D.47387
Try : D.47391_308(P308) & D.47393_292(P292) --> P308 D.47391
Try : D.40529_120(P120) & D.47391_308(P308) --> P308 D.47391
Try : D.47395_310(P310) & D.47397_294(P294) --> P310 D.47395
Try : D.40570_196(P196) & D.47395_310(P310) --> P310 D.47395
Try : prefer_sdp_23(P23) & prefer_sdp_30(P30) : Same root, coalesced --> P23.
Try : prefer_sdp_23(P23) & prefer_sdp_30(P23) : Already coalesced.
Try : prefer_sdp_23(P23) & prefer_sdp_34(P34) : Same root, coalesced --> P23.
Try : num_codecs_22(P22) & num_codecs_40(P40) : Same root, coalesced --> P22.
Try : num_codecs_22(P22) & num_codecs_42(P42) : Same root, coalesced --> P22.
Try : num_codecs_22(P22) & num_codecs_27(P27) : Same root, coalesced --> P22.
Try : num_codecs_22(P22) & num_codecs_40(P22) : Already coalesced.
Try : attr_3(P3) & attr_47(P47) : Same root, coalesced --> P3.
Try : attr_3(P3) & attr_54(P54) : Same root, coalesced --> P3.
Try : dptime_9(P9) & dptime_53(P301) : Same root, coalesced --> P301.
Try : dptime_9(P301) & dptime_25(P25) : Same root, coalesced --> P301.
Try : attr_4(P4) & attr_61(P61) : Same root, coalesced --> P4.
Try : attr_4(P4) & attr_69(P69) : Same root, coalesced --> P4.
Try : ptime_6(P6) & ptime_68(P304) : Same root, coalesced --> P304.
Try : ptime_6(P304) & ptime_7(P7) : Same root, coalesced --> P304.
Try : ptime_7(P304) & ptime_56(P56) : Same root, coalesced --> P304.
Try : ptime_7(P304) & ptime_6(P304) : Already coalesced.
Try : map_12(P12) & map_60(P60) : Same root, coalesced --> P12.
Try : map_12(P12) & map_79(P79) : Same root, coalesced --> P12.
Try : m_1(P1) & m_55(P55) : Same root, coalesced --> P1.
Try : m_1(P1) & m_80(P80) : Same root, coalesced --> P1.
Try : attr_5(P5) & attr_91(P91) : Same root, coalesced --> P5.
Try : attr_5(P5) & attr_99(P99) : Same root, coalesced --> P5.
Try : ptime_8(P8) & ptime_98(P307) : Same root, coalesced --> P307.
Try : ptime_8(P307) & ptime_82(P82) : Same root, coalesced --> P307.
Try : connection_10(P10) & connection_100(P100) : Same root, coalesced --> P10.
Try : connection_10(P10) & connection_102(P102) : Same root, coalesced --> P10.
Try : match_16(P16) & match_162(P162) : Same root, coalesced --> P16.
Try : match_16(P16) & match_167(P167) : Same root, coalesced --> P16.
Try : match_16(P16) & match_168(P168) : Same root, coalesced --> P16.
Try : i_19(P19) & i_147(P147) : Same root, coalesced --> P19.
Try : i_19(P19) & i_169(P169) : Same root, coalesced --> P19.
Try : map_13(P13) & map_141(P141) : Same root, coalesced --> P13.
Try : map_13(P13) & map_170(P170) : Same root, coalesced --> P13.
Try : match_17(P17) & match_132(P132) : Same root, coalesced --> P17.
Try : match_17(P17) & match_137(P137) : Same root, coalesced --> P17.
Try : match_17(P17) & match_138(P138) : Same root, coalesced --> P17.
Try : map_14(P14) & map_113(P113) : Same root, coalesced --> P14.
Try : map_14(P14) & map_139(P139) : Same root, coalesced --> P14.
Try : i_20(P20) & i_105(P105) : Same root, coalesced --> P20.
Try : i_20(P20) & i_140(P140) : Same root, coalesced --> P20.
Try : connection_11(P11) & connection_173(P173) : Same root, coalesced --> P11.
Try : connection_11(P11) & connection_175(P175) : Same root, coalesced --> P11.
Try : match_18(P18) & match_208(P208) : Same root, coalesced --> P18.
Try : match_18(P18) & match_213(P213) : Same root, coalesced --> P18.
Try : match_18(P18) & match_214(P214) : Same root, coalesced --> P18.
Try : map_15(P15) & map_189(P189) : Same root, coalesced --> P15.
Try : map_15(P15) & map_229(P229) : Same root, coalesced --> P15.
Try : i_21(P21) & i_177(P177) : Same root, coalesced --> P21.
Try : i_21(P21) & i_230(P230) : Same root, coalesced --> P21.
Try : m_2(P2) & m_81(P81) : Same root, coalesced --> P2.
Try : m_2(P2) & m_231(P231) : Same root, coalesced --> P2.

Partition map 

Partition 1 (m_1 - 1 55 80 )
Partition 2 (m_2 - 2 81 231 )
Partition 3 (attr_3 - 3 47 54 )
Partition 4 (attr_4 - 4 61 69 )
Partition 5 (attr_5 - 5 91 99 )
Partition 10 (connection_10 - 10 100 102 )
Partition 11 (connection_11 - 11 173 175 )
Partition 12 (map_12 - 12 60 79 )
Partition 13 (map_13 - 13 141 170 )
Partition 14 (map_14 - 14 113 139 )
Partition 15 (map_15 - 15 189 229 )
Partition 16 (match_16 - 16 162 167 168 )
Partition 17 (match_17 - 17 132 137 138 )
Partition 18 (match_18 - 18 208 213 214 )
Partition 19 (i_19 - 19 147 169 )
Partition 20 (i_20 - 20 105 140 )
Partition 21 (i_21 - 21 177 230 )
Partition 22 (num_codecs_22 - 22 27 40 42 )
Partition 23 (prefer_sdp_23 - 23 30 34 )
Partition 24 (ptime_24 - 24 )
Partition 26 (match_26 - 26 )
Partition 28 (session_28(D) - 28 )
Partition 29 (channel_29 - 29 )
Partition 31 (smh_31 - 31 )
Partition 32 (var_32 - 32 )
Partition 33 (D.40412_33 - 33 )
Partition 35 (codec_string_35(D) - 35 )
Partition 37 (tmp_codec_string_37 - 37 )
Partition 38 (D.40420_38 - 38 )
Partition 39 (num_codecs_39 - 39 )
Partition 41 (tmp_codec_string_41 - 41 )
Partition 43 (D.40424_43 - 43 )
Partition 44 (D.40425_44 - 44 )
Partition 45 (D.40426_45 - 45 )
Partition 46 (sdp_46(D) - 46 )
Partition 48 (D.40429_48 - 48 )
Partition 50 (D.40429_50 - 50 )
Partition 51 (D.40433_51 - 51 )
Partition 52 (D.40436_52 - 52 )
Partition 57 (D.40437_57 - 57 )
Partition 58 (D.40438_58 - 58 )
Partition 59 (D.40441_59 - 59 )
Partition 62 (D.40429_62 - 62 )
Partition 64 (D.40429_64 - 64 )
Partition 65 (D.40447_65 - 65 )
Partition 66 (D.40436_66 - 66 )
Partition 67 (D.40436_67 - 67 )
Partition 70 (D.40437_70 - 70 )
Partition 71 (D.40452_71 - 71 )
Partition 72 (D.40453_72 - 72 )
Partition 73 (D.40454_73 - 73 )
Partition 74 (D.40455_74 - 74 )
Partition 75 (D.40456_75 - 75 )
Partition 76 (D.40457_76 - 76 )
Partition 77 (ptime.5_77 - 77 )
Partition 78 (sdp_type_78(D) - 78 )
Partition 83 (D.40437_83 - 83 )
Partition 84 (D.40441_84 - 84 )
Partition 85 (D.40463_85 - 85 )
Partition 86 (D.40464_86 - 86 )
Partition 87 (D.40465_87 - 87 )
Partition 88 (D.40466_88 - 88 )
Partition 89 (D.40437_89 - 89 )
Partition 90 (D.40441_90 - 90 )
Partition 92 (D.40429_92 - 92 )
Partition 94 (D.40429_94 - 94 )
Partition 95 (D.40474_95 - 95 )
Partition 96 (D.40436_96 - 96 )
Partition 97 (D.40436_97 - 97 )
Partition 101 (D.40479_101 - 101 )
Partition 103 (D.40484_103 - 103 )
Partition 104 (D.40487_104 - 104 )
Partition 106 (imp_106 - 106 )
Partition 107 (D.40516_107 - 107 )
Partition 108 (D.40518_108 - 108 )
Partition 109 (D.40519_109 - 109 )
Partition 110 (D.40518_110 - 110 )
Partition 111 (D.40521_111 - 111 )
Partition 112 (D.40522_112 - 112 )
Partition 114 (D.40455_114 - 114 )
Partition 115 (D.40491_115 - 115 )
Partition 116 (D.40455_116 - 116 )
Partition 117 (D.40491_117 - 117 )
Partition 118 (D.40493_118 - 118 )
Partition 119 (D.40453_119 - 119 )
Partition 121 (D.40499_121 - 121 )
Partition 122 (D.40500_122 - 122 )
Partition 123 (D.40501_123 - 123 )
Partition 124 (D.40502_124 - 124 )
Partition 125 (D.40503_125 - 125 )
Partition 126 (D.40455_126 - 126 )
Partition 127 (D.40491_127 - 127 )
Partition 128 (D.40455_128 - 128 )
Partition 129 (D.40491_129 - 129 )
Partition 130 (D.40518_130 - 130 )
Partition 131 (D.40521_131 - 131 )
Partition 133 (D.40453_133 - 133 )
Partition 134 (D.40453_134 - 134 )
Partition 135 (D.40534_135 - 135 )
Partition 136 (D.40535_136 - 136 )
Partition 142 (D.40455_142 - 142 )
Partition 143 (D.40491_143 - 143 )
Partition 144 (D.40455_144 - 144 )
Partition 145 (D.40491_145 - 145 )
Partition 146 (D.40493_146 - 146 )
Partition 148 (imp_148 - 148 )
Partition 149 (D.40453_149 - 149 )
Partition 151 (D.40499_151 - 151 )
Partition 152 (D.40500_152 - 152 )
Partition 153 (D.40501_153 - 153 )
Partition 154 (D.40502_154 - 154 )
Partition 155 (D.40503_155 - 155 )
Partition 156 (D.40455_156 - 156 )
Partition 157 (D.40491_157 - 157 )
Partition 158 (D.40455_158 - 158 )
Partition 159 (D.40491_159 - 159 )
Partition 160 (D.40505_160 - 160 )
Partition 161 (D.40506_161 - 161 )
Partition 163 (D.40453_163 - 163 )
Partition 164 (D.40453_164 - 164 )
Partition 165 (D.40509_165 - 165 )
Partition 166 (D.40510_166 - 166 )
Partition 171 (D.40437_171 - 171 )
Partition 172 (D.40441_172 - 172 )
Partition 174 (D.40479_174 - 174 )
Partition 176 (D.40547_176 - 176 )
Partition 178 (imp_178 - 178 )
Partition 179 (D.40550_179 - 179 )
Partition 180 (D.40552_180 - 180 )
Partition 181 (D.40553_181 - 181 )
Partition 182 (D.40552_182 - 182 )
Partition 183 (D.40555_183 - 183 )
Partition 184 (D.40556_184 - 184 )
Partition 185 (D.40557_185 - 185 )
Partition 186 (D.40558_186 - 186 )
Partition 187 (D.40557_187 - 187 )
Partition 188 (D.40561_188 - 188 )
Partition 190 (D.40455_190 - 190 )
Partition 191 (D.40491_191 - 191 )
Partition 192 (D.40455_192 - 192 )
Partition 193 (D.40491_193 - 193 )
Partition 194 (D.40493_194 - 194 )
Partition 195 (D.40453_195 - 195 )
Partition 197 (D.40499_197 - 197 )
Partition 198 (D.40500_198 - 198 )
Partition 199 (D.40501_199 - 199 )
Partition 200 (D.40502_200 - 200 )
Partition 201 (D.40503_201 - 201 )
Partition 202 (D.40455_202 - 202 )
Partition 203 (D.40491_203 - 203 )
Partition 204 (D.40455_204 - 204 )
Partition 205 (D.40491_205 - 205 )
Partition 206 (D.40552_206 - 206 )
Partition 207 (D.40555_207 - 207 )
Partition 209 (D.40453_209 - 209 )
Partition 210 (D.40453_210 - 210 )
Partition 211 (D.40575_211 - 211 )
Partition 212 (D.40576_212 - 212 )
Partition 215 (D.40582_215 - 215 )
Partition 216 (D.40583_216 - 216 )
Partition 217 (D.40584_217 - 217 )
Partition 218 (D.40585_218 - 218 )
Partition 219 (D.40575_219 - 219 )
Partition 220 (D.40457_220 - 220 )
Partition 221 (D.40587_221 - 221 )
Partition 222 (D.40588_222 - 222 )
Partition 223 (D.40589_223 - 223 )
Partition 224 (D.40590_224 - 224 )
Partition 225 (D.40575_225 - 225 )
Partition 226 (D.40457_226 - 226 )
Partition 227 (D.40552_227 - 227 )
Partition 228 (D.40555_228 - 228 )
Partition 232 (D.40591_232 - 232 )
Partition 233 (.MEM_233 - 233 )
Partition 234 (.MEM_234 - 234 )
Partition 235 (.MEM_235 - 235 )
Partition 236 (.MEM_236 - 236 )
Partition 237 (.MEM_237 - 237 )
Partition 238 (.MEM_238 - 238 )
Partition 239 (.MEM_239 - 239 )
Partition 240 (.MEM_240 - 240 )
Partition 241 (.MEM_241 - 241 )
Partition 242 (.MEM_242 - 242 )
Partition 243 (.MEM_243 - 243 )
Partition 244 (.MEM_244 - 244 )
Partition 245 (.MEM_245 - 245 )
Partition 246 (.MEM_246 - 246 )
Partition 247 (.MEM_247 - 247 )
Partition 248 (.MEM_248 - 248 )
Partition 249 (.MEM_249(D) - 249 )
Partition 250 (.MEM_250 - 250 )
Partition 251 (.MEM_251 - 251 )
Partition 252 (.MEM_252 - 252 )
Partition 253 (.MEM_253 - 253 )
Partition 254 (.MEM_254 - 254 )
Partition 255 (.MEM_255 - 255 )
Partition 256 (.MEM_256 - 256 )
Partition 257 (.MEM_257 - 257 )
Partition 258 (.MEM_258 - 258 )
Partition 259 (.MEM_259 - 259 )
Partition 260 (.MEM_260 - 260 )
Partition 261 (.MEM_261 - 261 )
Partition 262 (.MEM_262 - 262 )
Partition 263 (.MEM_263 - 263 )
Partition 264 (.MEM_264 - 264 )
Partition 265 (.MEM_265 - 265 )
Partition 266 (.MEM_266 - 266 )
Partition 267 (.MEM_267 - 267 )
Partition 268 (.MEM_268 - 268 )
Partition 269 (.MEM_269 - 269 )
Partition 270 (.MEM_270 - 270 )
Partition 271 (.MEM_271 - 271 )
Partition 272 (.MEM_272 - 272 )
Partition 273 (.MEM_273 - 273 )
Partition 274 (.MEM_274 - 274 )
Partition 275 (.MEM_275 - 275 )
Partition 276 (.MEM_276 - 276 )
Partition 277 (.MEM_277 - 277 )
Partition 278 (D.47363_278 - 278 )
Partition 280 (D.47367_280 - 280 )
Partition 283 (D.47374_283 - 283 )
Partition 286 (D.47381_286 - 286 )
Partition 289 (D.47388_289 - 289 )
Partition 291 (D.47392_291 - 291 )
Partition 293 (D.47396_293 - 293 )
Partition 295 (.MEM_295 - 295 )
Partition 296 (.MEM_296 - 296 )
Partition 297 (.MEM_297 - 297 )
Partition 298 (D.47362_298 - 36 279 298 )
Partition 299 (D.47366_299 - 49 281 299 )
Partition 300 (.MEM_300 - 300 )
Partition 301 (dptime_301 - 9 25 53 282 301 )
Partition 302 (D.47373_302 - 63 284 302 )
Partition 303 (.MEM_303 - 303 )
Partition 304 (ptime_304 - 6 7 56 68 285 304 )
Partition 305 (D.47380_305 - 93 287 305 )
Partition 306 (.MEM_306 - 306 )
Partition 307 (ptime_307 - 8 82 98 288 307 )
Partition 308 (D.47391_308 - 120 292 308 )
Partition 309 (D.47387_309 - 150 290 309 )
Partition 310 (D.47395_310 - 196 294 310 )

Coalesced D.40415_36 to D.47362_298
Coalesced D.40430_49 to D.47366_299
Coalesced D.40444_63 to D.47373_302
Coalesced D.40471_93 to D.47380_305
Coalesced D.40529_120 to D.47391_308
Coalesced D.40497_150 to D.47387_309
Coalesced D.40570_196 to D.47395_310
Coalesced D.47364_279 to D.47362_298
Coalesced D.47368_281 to D.47366_299
Coalesced D.47371_282 to dptime_301
Coalesced D.47375_284 to D.47373_302
Coalesced D.47378_285 to ptime_304
Coalesced D.47382_287 to D.47380_305
Coalesced D.47385_288 to ptime_307
Coalesced D.47389_290 to D.47387_309
Coalesced D.47393_292 to D.47391_308
Coalesced D.47397_294 to D.47395_310
Scope blocks after cleanups:

{ Scope block #0 
  char buf[1024];
  struct sdp_media_t * m;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  struct sdp_connection_t * connection;
  struct sdp_rtpmap_t * map;
  short int match;
  int i;
  int already_did[128];
  int num_codecs;
  char * codec_order[50];
  const struct switch_codec_implementation_t * codecs[50];
  struct switch_channel_t * channel;
  int prefer_sdp;
  const char * var;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";

  { Scope block #61 src/switch_core_media.c:8275 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #62 Originating from :#0 

    }

  }

  { Scope block #63 src/switch_core_media.c:8271 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #64 Originating from :#0 

    }

  }

  { Scope block #65 src/switch_core_media.c:8247 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #66 Originating from :#0 

    }

  }

  { Scope block #67 src/switch_core_media.c:8243 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #68 Originating from :#0 

    }

  }

  { Scope block #69 src/switch_core_media.c:8229 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #70 Originating from :#0 

    }

  }

  { Scope block #71 src/switch_core_media.c:8225 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #72 Originating from :#0 

    }

  }

  { Scope block #73 src/switch_core_media.c:8209 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #74 Originating from :#0 

    }

  }

  { Scope block #75 
    char * tmp_codec_string;

  }

  { Scope block #76 
    const struct switch_codec_implementation_t * imp;

    { Scope block #77 src/switch_core_media.c:8298 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #78 Originating from :#0 

      }

    }

  }

  { Scope block #79 
    const struct switch_codec_implementation_t * imp;

    { Scope block #80 src/switch_core_media.c:8327 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #81 Originating from :#0 

      }

    }

  }

  { Scope block #82 
    const struct switch_codec_implementation_t * imp;

    { Scope block #83 src/switch_core_media.c:8372 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #84 Originating from :#0 

      }

    }

  }

}
switch_core_media_set_r_sdp_codec_string (struct switch_core_session_t * session, const char * codec_string, struct sdp_session_t * sdp, switch_sdp_type_t sdp_type)
{
  const char D.47396;
  int D.47395;
  const char D.47392;
  int D.47391;
  const char D.47388;
  int D.47387;
  const char D.47381;
  int D.47380;
  const char D.47374;
  int D.47373;
  const char D.47367;
  int D.47366;
  const char D.47363;
  int D.47362;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  char * tmp_codec_string;
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  struct switch_media_handle_t * smh;
  const char * var;
  int prefer_sdp;
  struct switch_channel_t * channel;
  const struct switch_codec_implementation_t * codecs[50];
  char * codec_order[50];
  int num_codecs;
  int already_did[128];
  int i;
  short int match;
  struct sdp_rtpmap_t * map;
  struct sdp_connection_t * connection;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  char buf[1024];
  char D.40591;
  unsigned int D.40590;
  size_t D.40589;
  char * D.40588;
  size_t D.40587;
  unsigned int D.40585;
  size_t D.40584;
  char * D.40583;
  size_t D.40582;
  int D.40576;
  char * const D.40575;
  uint32_t D.40561;
  switch_call_direction_t D.40558;
  struct switch_channel_t * D.40557;
  int D.40556;
  int D.40555;
  signed char D.40553;
  const switch_payload_t D.40552;
  const switch_codec_type_t D.40550;
  struct switch_core_session_t * D.40547;
  int D.40535;
  char * const D.40534;
  int D.40522;
  int D.40521;
  signed char D.40519;
  const switch_payload_t D.40518;
  const switch_codec_type_t D.40516;
  int D.40510;
  char * const D.40509;
  int D.40506;
  const switch_payload_t D.40505;
  _Bool D.40503;
  int D.40502;
  int D.40501;
  switch_core_media_NDLB_t D.40500;
  struct switch_core_media_params_t * D.40499;
  int D.40493;
  int D.40491;
  switch_call_direction_t D.40487;
  struct switch_core_session_t * D.40484;
  struct sdp_connection_t * D.40479;
  int D.40474;
  unsigned int D.40466;
  size_t D.40465;
  char * D.40464;
  size_t D.40463;
  uint32_t ptime.5;
  long unsigned int D.40457;
  uint32_t D.40456;
  <unnamed-unsigned:7> D.40455;
  const char * D.40454;
  const char * D.40453;
  switch_media_type_t D.40452;
  int D.40447;
  long unsigned int D.40441;
  unsigned int D.40438;
  sdp_media_e D.40437;
  const char * D.40436;
  int D.40433;
  const char * D.40429;
  _Bool D.40426;
  _Bool D.40425;
  _Bool D.40424;
  unsigned int D.40420;
  int D.40412;

<bb 2>:
  buf = {};
  ptime_24 = 0;
  # DEBUG ptime => ptime_24
  dptime_25 = 0;
  # DEBUG dptime => dptime_25
  match_26 = 0;
  # DEBUG match => match_26
  already_did = {};
  num_codecs_27 = 0;
  # DEBUG num_codecs => num_codecs_27
  codecs = {};
  channel_29 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_29
  prefer_sdp_30 = 0;
  # DEBUG prefer_sdp => prefer_sdp_30
  if (session_28(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_31 = session_28(D)->media_handle;
  # DEBUG smh => smh_31
  if (smh_31 == 0B)
    goto <bb 156>;
  else
    goto <bb 5>;

<bb 5>:
  var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);
  # DEBUG var => var_32
  if (var_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.40412_33 = switch_true (var_32);
  if (D.40412_33 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  prefer_sdp_34 = 1;
  # DEBUG prefer_sdp => prefer_sdp_34

<bb 8>:
  # prefer_sdp_23 = PHI <prefer_sdp_30(5), prefer_sdp_30(6), prefer_sdp_34(7)>
  # DEBUG prefer_sdp => prefer_sdp_23
  # DEBUG s => codec_string_35(D)
  if (codec_string_35(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;

<bb 9>:
  D.47363_278 = *codec_string_35(D);
  if (D.47363_278 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # D.47362_279 = PHI <1(8), 1(9), 0(10)>
  D.47362_298 = D.47362_279;
  D.47362_36 = D.47362_298;
  if (D.47362_36 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  tmp_codec_string_37 = __strdup (codec_string_35(D));
  # DEBUG tmp_codec_string => tmp_codec_string_37
  if (tmp_codec_string_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 13>:
  D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);
  num_codecs_39 = (int) D.40420_38;
  # DEBUG num_codecs => num_codecs_39
  num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);
  # DEBUG num_codecs => num_codecs_40
  if (tmp_codec_string_37 != 0B)
    goto <bb 14>;
  else
    goto <bb 16>;

<bb 14>:
  free (tmp_codec_string_37);
  tmp_codec_string_41 = 0B;
  # DEBUG tmp_codec_string => tmp_codec_string_41
  goto <bb 16>;

<bb 15>:
  num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);
  # DEBUG num_codecs => num_codecs_42

<bb 16>:
  # num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), num_codecs_27(12), num_codecs_40(14)>
  # DEBUG num_codecs => num_codecs_22
  D.40424_43 = channel_29 == 0B;
  D.40425_44 = num_codecs_22 == 0;
  D.40426_45 = D.40424_43 || D.40425_44;
  if (D.40426_45 != 0)
    goto <bb 156>;
  else
    goto <bb 17>;

<bb 17>:
  attr_47 = sdp_46(D)->sdp_attributes;
  # DEBUG attr => attr_47
  goto <bb 26>;

<bb 18>:
  D.40429_48 = attr_3->a_name;
  # DEBUG s => D.40429_48
  if (D.40429_48 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;

<bb 19>:
  D.47367_280 = *D.40429_48;
  if (D.47367_280 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:

<bb 21>:
  # D.47366_281 = PHI <1(18), 1(19), 0(20)>
  D.47366_299 = D.47366_281;
  D.47366_49 = D.47366_299;
  if (D.47366_49 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  // predicted unlikely by continue predictor.
  goto <bb 25>;

<bb 23>:
  D.40429_50 = attr_3->a_name;
  D.40433_51 = strcasecmp (D.40429_50, "ptime");
  if (D.40433_51 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.40436_52 = attr_3->a_value;
  # DEBUG __nptr => D.40436_52
  dptime_282 = strtol (D.40436_52, 0B, 10);
  dptime_301 = dptime_282;
  dptime_53 = dptime_301;
  # DEBUG dptime => NULL
  goto <bb 27>;

<bb 25>:
  attr_54 = attr_3->a_next;
  # DEBUG attr => attr_54

<bb 26>:
  # attr_3 = PHI <attr_47(17), attr_54(25)>
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 18>;
  else
    goto <bb 27>;

<bb 27>:
  # dptime_9 = PHI <dptime_53(24), dptime_25(26)>
  # DEBUG dptime => dptime_9
  switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));
  switch_core_media_pass_zrtp_hash (session_28(D));
  m_55 = sdp_46(D)->sdp_media;
  # DEBUG m => m_55
  goto <bb 45>;

<bb 28>:
  ptime_56 = dptime_9;
  # DEBUG ptime => ptime_56
  D.40437_57 = m_1->m_type;
  D.40438_58 = D.40437_57 + 4294967294;
  if (D.40438_58 <= 1)
    goto <bb 29>;
  else
    goto <bb 44>;

<bb 29>:
  D.40441_59 = m_1->m_port;
  if (D.40441_59 != 0)
    goto <bb 30>;
  else
    goto <bb 44>;

<bb 30>:
  map_60 = m_1->m_rtpmaps;
  # DEBUG map => map_60
  goto <bb 43>;

<bb 31>:
  attr_61 = m_1->m_attributes;
  # DEBUG attr => attr_61
  goto <bb 41>;

<bb 32>:
  D.40429_62 = attr_4->a_name;
  # DEBUG s => D.40429_62
  if (D.40429_62 == 0B)
    goto <bb 35>;
  else
    goto <bb 33>;

<bb 33>:
  D.47374_283 = *D.40429_62;
  if (D.47374_283 == 0)
    goto <bb 35>;
  else
    goto <bb 34>;

<bb 34>:

<bb 35>:
  # D.47373_284 = PHI <1(32), 1(33), 0(34)>
  D.47373_302 = D.47373_284;
  D.47373_63 = D.47373_302;
  if (D.47373_63 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  // predicted unlikely by continue predictor.
  goto <bb 40>;

<bb 37>:
  D.40429_64 = attr_4->a_name;
  D.40447_65 = strcasecmp (D.40429_64, "ptime");
  if (D.40447_65 == 0)
    goto <bb 38>;
  else
    goto <bb 40>;

<bb 38>:
  D.40436_66 = attr_4->a_value;
  if (D.40436_66 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.40436_67 = attr_4->a_value;
  # DEBUG __nptr => D.40436_67
  ptime_285 = strtol (D.40436_67, 0B, 10);
  ptime_304 = ptime_285;
  ptime_68 = ptime_304;
  # DEBUG ptime => NULL
  goto <bb 42>;

<bb 40>:
  attr_69 = attr_4->a_next;
  # DEBUG attr => attr_69

<bb 41>:
  # attr_4 = PHI <attr_61(31), attr_69(40)>
  # DEBUG attr => attr_4
  if (attr_4 != 0B)
    goto <bb 32>;
  else
    goto <bb 42>;

<bb 42>:
  # ptime_6 = PHI <ptime_68(39), ptime_7(41)>
  # DEBUG ptime => ptime_6
  D.40437_70 = m_1->m_type;
  D.40452_71 = D.40437_70 != 2;
  D.40453_72 = map_12->rm_encoding;
  D.40454_73 = map_12->rm_fmtp;
  D.40455_74 = map_12->rm_pt;
  D.40456_75 = (uint32_t) D.40455_74;
  D.40457_76 = map_12->rm_rate;
  ptime.5_77 = (uint32_t) ptime_6;
  switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);
  map_79 = map_12->rm_next;
  # DEBUG map => map_79

<bb 43>:
  # ptime_7 = PHI <ptime_56(30), ptime_6(42)>
  # map_12 = PHI <map_60(30), map_79(42)>
  # DEBUG map => map_12
  # DEBUG ptime => ptime_7
  if (map_12 != 0B)
    goto <bb 31>;
  else
    goto <bb 44>;

<bb 44>:
  m_80 = m_1->m_next;
  # DEBUG m => m_80

<bb 45>:
  # m_1 = PHI <m_55(27), m_80(44)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 46>;

<bb 46>:
  m_81 = sdp_46(D)->sdp_media;
  # DEBUG m => m_81
  goto <bb 153>;

<bb 47>:
  ptime_82 = dptime_9;
  # DEBUG ptime => ptime_82
  D.40437_83 = m_2->m_type;
  if (D.40437_83 == 8)
    goto <bb 48>;
  else
    goto <bb 50>;

<bb 48>:
  D.40441_84 = m_2->m_port;
  if (D.40441_84 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.40463_85 = strlen (&buf);
  D.40464_86 = &buf + D.40463_85;
  D.40465_87 = strlen (&buf);
  D.40466_88 = 1024 - D.40465_87;
  switch_snprintf (D.40464_86, D.40466_88, ",t38");
  goto <bb 152>;

<bb 50>:
  D.40437_89 = m_2->m_type;
  if (D.40437_89 == 2)
    goto <bb 51>;
  else
    goto <bb 115>;

<bb 51>:
  D.40441_90 = m_2->m_port;
  if (D.40441_90 != 0)
    goto <bb 52>;
  else
    goto <bb 115>;

<bb 52>:
  attr_91 = m_2->m_attributes;
  # DEBUG attr => attr_91
  goto <bb 62>;

<bb 53>:
  D.40429_92 = attr_5->a_name;
  # DEBUG s => D.40429_92
  if (D.40429_92 == 0B)
    goto <bb 56>;
  else
    goto <bb 54>;

<bb 54>:
  D.47381_286 = *D.40429_92;
  if (D.47381_286 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;

<bb 55>:

<bb 56>:
  # D.47380_287 = PHI <1(53), 1(54), 0(55)>
  D.47380_305 = D.47380_287;
  D.47380_93 = D.47380_305;
  if (D.47380_93 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  // predicted unlikely by continue predictor.
  goto <bb 61>;

<bb 58>:
  D.40429_94 = attr_5->a_name;
  D.40474_95 = strcasecmp (D.40429_94, "ptime");
  if (D.40474_95 == 0)
    goto <bb 59>;
  else
    goto <bb 61>;

<bb 59>:
  D.40436_96 = attr_5->a_value;
  if (D.40436_96 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.40436_97 = attr_5->a_value;
  # DEBUG __nptr => D.40436_97
  ptime_288 = strtol (D.40436_97, 0B, 10);
  ptime_307 = ptime_288;
  ptime_98 = ptime_307;
  # DEBUG ptime => NULL
  goto <bb 63>;

<bb 61>:
  attr_99 = attr_5->a_next;
  # DEBUG attr => attr_99

<bb 62>:
  # attr_5 = PHI <attr_91(52), attr_99(61)>
  # DEBUG attr => attr_5
  if (attr_5 != 0B)
    goto <bb 53>;
  else
    goto <bb 63>;

<bb 63>:
  # ptime_8 = PHI <ptime_98(60), ptime_82(62)>
  # DEBUG ptime => ptime_8
  connection_100 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_100
  D.40479_101 = m_2->m_connections;
  if (D.40479_101 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  connection_102 = m_2->m_connections;
  # DEBUG connection => connection_102

<bb 65>:
  # connection_10 = PHI <connection_100(63), connection_102(64)>
  # DEBUG connection => connection_10
  if (connection_10 == 0B)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.40484_103 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 154>;

<bb 67>:
  D.40487_104 = switch_channel_direction (channel_29);
  if (D.40487_104 == 0)
    goto <bb 69>;
  else
    goto <bb 68>;

<bb 68>:
  if (prefer_sdp_23 != 0)
    goto <bb 69>;
  else
    goto <bb 90>;

<bb 69>:
  map_141 = m_2->m_rtpmaps;
  # DEBUG map => map_141
  goto <bb 89>;

<bb 70>:
  D.40455_142 = map_13->rm_pt;
  D.40491_143 = (int) D.40455_142;
  if (D.40491_143 > 127)
    goto <bb 72>;
  else
    goto <bb 71>;

<bb 71>:
  D.40455_144 = map_13->rm_pt;
  D.40491_145 = (int) D.40455_144;
  D.40493_146 = already_did[D.40491_145];
  if (D.40493_146 != 0)
    goto <bb 72>;
  else
    goto <bb 73>;

<bb 72>:
  // predicted unlikely by continue predictor.
  goto <bb 88>;

<bb 73>:
  i_147 = 0;
  # DEBUG i => i_147
  goto <bb 87>;

<bb 74>:
  imp_148 = codecs[i_19];
  # DEBUG imp => imp_148
  D.40453_149 = map_13->rm_encoding;
  # DEBUG s => D.40453_149
  if (D.40453_149 == 0B)
    goto <bb 77>;
  else
    goto <bb 75>;

<bb 75>:
  D.47388_289 = *D.40453_149;
  if (D.47388_289 == 0)
    goto <bb 77>;
  else
    goto <bb 76>;

<bb 76>:

<bb 77>:
  # D.47387_290 = PHI <1(74), 1(75), 0(76)>
  D.47387_309 = D.47387_290;
  D.47387_150 = D.47387_309;
  if (D.47387_150 != 0)
    goto <bb 79>;
  else
    goto <bb 78>;

<bb 78>:
  D.40499_151 = smh_31->mparams;
  D.40500_152 = D.40499_151->ndlb;
  D.40501_153 = (int) D.40500_152;
  D.40502_154 = D.40501_153 & 1;
  D.40503_155 = (_Bool) D.40502_154;
  if (D.40503_155 != 0)
    goto <bb 79>;
  else
    goto <bb 81>;

<bb 79>:
  D.40455_156 = map_13->rm_pt;
  D.40491_157 = (int) D.40455_156;
  if (D.40491_157 <= 95)
    goto <bb 80>;
  else
    goto <bb 81>;

<bb 80>:
  D.40455_158 = map_13->rm_pt;
  D.40491_159 = (int) D.40455_158;
  D.40505_160 = imp_148->ianacode;
  D.40506_161 = (int) D.40505_160;
  match_162 = D.40491_159 == D.40506_161;
  # DEBUG match => match_162
  goto <bb 84>;

<bb 81>:
  D.40453_163 = map_13->rm_encoding;
  if (D.40453_163 != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

<bb 82>:
  D.40453_164 = map_13->rm_encoding;
  D.40509_165 = imp_148->iananame;
  D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
  match_167 = D.40510_166 == 0;
  # DEBUG match => match_167
  goto <bb 84>;

<bb 83>:
  match_168 = 0;
  # DEBUG match => match_168

<bb 84>:
  # match_16 = PHI <match_162(80), match_167(82), match_168(83)>
  # DEBUG match => match_16
  if (match_16 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;

<bb 85>:
  add_audio_codec (map_13, ptime_8, &buf, 1024);
  goto <bb 88>;

<bb 86>:
  i_169 = i_19 + 1;
  # DEBUG i => i_169

<bb 87>:
  # i_19 = PHI <i_147(73), i_169(86)>
  # DEBUG i => i_19
  if (i_19 < num_codecs_22)
    goto <bb 74>;
  else
    goto <bb 88>;

<bb 88>:
  map_170 = map_13->rm_next;
  # DEBUG map => map_170

<bb 89>:
  # map_13 = PHI <map_141(69), map_170(88)>
  # DEBUG map => map_13
  if (map_13 != 0B)
    goto <bb 70>;
  else
    goto <bb 152>;

<bb 90>:
  i_105 = 0;
  # DEBUG i => i_105
  goto <bb 114>;

<bb 91>:
  imp_106 = codecs[i_20];
  # DEBUG imp => imp_106
  D.40516_107 = imp_106->codec_type;
  if (D.40516_107 != 0)
    goto <bb 94>;
  else
    goto <bb 92>;

<bb 92>:
  D.40518_108 = imp_106->ianacode;
  D.40519_109 = (signed char) D.40518_108;
  if (D.40519_109 < 0)
    goto <bb 94>;
  else
    goto <bb 93>;

<bb 93>:
  D.40518_110 = imp_106->ianacode;
  D.40521_111 = (int) D.40518_110;
  D.40522_112 = already_did[D.40521_111];
  if (D.40522_112 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  // predicted unlikely by continue predictor.
  goto <bb 113>;

<bb 95>:
  map_113 = m_2->m_rtpmaps;
  # DEBUG map => map_113
  goto <bb 112>;

<bb 96>:
  D.40455_114 = map_14->rm_pt;
  D.40491_115 = (int) D.40455_114;
  if (D.40491_115 > 127)
    goto <bb 98>;
  else
    goto <bb 97>;

<bb 97>:
  D.40455_116 = map_14->rm_pt;
  D.40491_117 = (int) D.40455_116;
  D.40493_118 = already_did[D.40491_117];
  if (D.40493_118 != 0)
    goto <bb 98>;
  else
    goto <bb 99>;

<bb 98>:
  // predicted unlikely by continue predictor.
  goto <bb 111>;

<bb 99>:
  D.40453_119 = map_14->rm_encoding;
  # DEBUG s => D.40453_119
  if (D.40453_119 == 0B)
    goto <bb 102>;
  else
    goto <bb 100>;

<bb 100>:
  D.47392_291 = *D.40453_119;
  if (D.47392_291 == 0)
    goto <bb 102>;
  else
    goto <bb 101>;

<bb 101>:

<bb 102>:
  # D.47391_292 = PHI <1(99), 1(100), 0(101)>
  D.47391_308 = D.47391_292;
  D.47391_120 = D.47391_308;
  if (D.47391_120 != 0)
    goto <bb 104>;
  else
    goto <bb 103>;

<bb 103>:
  D.40499_121 = smh_31->mparams;
  D.40500_122 = D.40499_121->ndlb;
  D.40501_123 = (int) D.40500_122;
  D.40502_124 = D.40501_123 & 1;
  D.40503_125 = (_Bool) D.40502_124;
  if (D.40503_125 != 0)
    goto <bb 104>;
  else
    goto <bb 106>;

<bb 104>:
  D.40455_126 = map_14->rm_pt;
  D.40491_127 = (int) D.40455_126;
  if (D.40491_127 <= 95)
    goto <bb 105>;
  else
    goto <bb 106>;

<bb 105>:
  D.40455_128 = map_14->rm_pt;
  D.40491_129 = (int) D.40455_128;
  D.40518_130 = imp_106->ianacode;
  D.40521_131 = (int) D.40518_130;
  match_132 = D.40491_129 == D.40521_131;
  # DEBUG match => match_132
  goto <bb 109>;

<bb 106>:
  D.40453_133 = map_14->rm_encoding;
  if (D.40453_133 != 0B)
    goto <bb 107>;
  else
    goto <bb 108>;

<bb 107>:
  D.40453_134 = map_14->rm_encoding;
  D.40534_135 = imp_106->iananame;
  D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
  match_137 = D.40535_136 == 0;
  # DEBUG match => match_137
  goto <bb 109>;

<bb 108>:
  match_138 = 0;
  # DEBUG match => match_138

<bb 109>:
  # match_17 = PHI <match_132(105), match_137(107), match_138(108)>
  # DEBUG match => match_17
  if (match_17 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;

<bb 110>:
  add_audio_codec (map_14, ptime_8, &buf, 1024);
  goto <bb 113>;

<bb 111>:
  map_139 = map_14->rm_next;
  # DEBUG map => map_139

<bb 112>:
  # map_14 = PHI <map_113(95), map_139(111)>
  # DEBUG map => map_14
  if (map_14 != 0B)
    goto <bb 96>;
  else
    goto <bb 113>;

<bb 113>:
  i_140 = i_20 + 1;
  # DEBUG i => i_140

<bb 114>:
  # i_20 = PHI <i_105(90), i_140(113)>
  # DEBUG i => i_20
  if (i_20 < num_codecs_22)
    goto <bb 91>;
  else
    goto <bb 152>;

<bb 115>:
  D.40437_171 = m_2->m_type;
  if (D.40437_171 == 3)
    goto <bb 116>;
  else
    goto <bb 152>;

<bb 116>:
  D.40441_172 = m_2->m_port;
  if (D.40441_172 != 0)
    goto <bb 117>;
  else
    goto <bb 152>;

<bb 117>:
  connection_173 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_173
  D.40479_174 = m_2->m_connections;
  if (D.40479_174 != 0B)
    goto <bb 118>;
  else
    goto <bb 119>;

<bb 118>:
  connection_175 = m_2->m_connections;
  # DEBUG connection => connection_175

<bb 119>:
  # connection_11 = PHI <connection_173(117), connection_175(118)>
  # DEBUG connection => connection_11
  if (connection_11 == 0B)
    goto <bb 120>;
  else
    goto <bb 121>;

<bb 120>:
  D.40547_176 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 154>;

<bb 121>:
  i_177 = 0;
  # DEBUG i => i_177
  goto <bb 151>;

<bb 122>:
  imp_178 = codecs[i_21];
  # DEBUG imp => imp_178
  D.40550_179 = imp_178->codec_type;
  if (D.40550_179 != 1)
    goto <bb 125>;
  else
    goto <bb 123>;

<bb 123>:
  D.40552_180 = imp_178->ianacode;
  D.40553_181 = (signed char) D.40552_180;
  if (D.40553_181 < 0)
    goto <bb 125>;
  else
    goto <bb 124>;

<bb 124>:
  D.40552_182 = imp_178->ianacode;
  D.40555_183 = (int) D.40552_182;
  D.40556_184 = already_did[D.40555_183];
  if (D.40556_184 != 0)
    goto <bb 125>;
  else
    goto <bb 126>;

<bb 125>:
  // predicted unlikely by continue predictor.
  goto <bb 150>;

<bb 126>:
  D.40557_185 = session_28(D)->channel;
  D.40558_186 = switch_channel_direction (D.40557_185);
  if (D.40558_186 == 0)
    goto <bb 127>;
  else
    goto <bb 129>;

<bb 127>:
  D.40557_187 = session_28(D)->channel;
  D.40561_188 = switch_channel_test_flag (D.40557_187, 114);
  if (D.40561_188 != 0)
    goto <bb 128>;
  else
    goto <bb 129>;

<bb 128>:
  // predicted unlikely by continue predictor.
  goto <bb 150>;

<bb 129>:
  map_189 = m_2->m_rtpmaps;
  # DEBUG map => map_189
  goto <bb 149>;

<bb 130>:
  D.40455_190 = map_15->rm_pt;
  D.40491_191 = (int) D.40455_190;
  if (D.40491_191 > 127)
    goto <bb 132>;
  else
    goto <bb 131>;

<bb 131>:
  D.40455_192 = map_15->rm_pt;
  D.40491_193 = (int) D.40455_192;
  D.40493_194 = already_did[D.40491_193];
  if (D.40493_194 != 0)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  // predicted unlikely by continue predictor.
  goto <bb 148>;

<bb 133>:
  D.40453_195 = map_15->rm_encoding;
  # DEBUG s => D.40453_195
  if (D.40453_195 == 0B)
    goto <bb 136>;
  else
    goto <bb 134>;

<bb 134>:
  D.47396_293 = *D.40453_195;
  if (D.47396_293 == 0)
    goto <bb 136>;
  else
    goto <bb 135>;

<bb 135>:

<bb 136>:
  # D.47395_294 = PHI <1(133), 1(134), 0(135)>
  D.47395_310 = D.47395_294;
  D.47395_196 = D.47395_310;
  if (D.47395_196 != 0)
    goto <bb 138>;
  else
    goto <bb 137>;

<bb 137>:
  D.40499_197 = smh_31->mparams;
  D.40500_198 = D.40499_197->ndlb;
  D.40501_199 = (int) D.40500_198;
  D.40502_200 = D.40501_199 & 1;
  D.40503_201 = (_Bool) D.40502_200;
  if (D.40503_201 != 0)
    goto <bb 138>;
  else
    goto <bb 140>;

<bb 138>:
  D.40455_202 = map_15->rm_pt;
  D.40491_203 = (int) D.40455_202;
  if (D.40491_203 <= 95)
    goto <bb 139>;
  else
    goto <bb 140>;

<bb 139>:
  D.40455_204 = map_15->rm_pt;
  D.40491_205 = (int) D.40455_204;
  D.40552_206 = imp_178->ianacode;
  D.40555_207 = (int) D.40552_206;
  match_208 = D.40491_205 == D.40555_207;
  # DEBUG match => match_208
  goto <bb 143>;

<bb 140>:
  D.40453_209 = map_15->rm_encoding;
  if (D.40453_209 != 0B)
    goto <bb 141>;
  else
    goto <bb 142>;

<bb 141>:
  D.40453_210 = map_15->rm_encoding;
  D.40575_211 = imp_178->iananame;
  D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
  match_213 = D.40576_212 == 0;
  # DEBUG match => match_213
  goto <bb 143>;

<bb 142>:
  match_214 = 0;
  # DEBUG match => match_214

<bb 143>:
  # match_18 = PHI <match_208(139), match_213(141), match_214(142)>
  # DEBUG match => match_18
  if (match_18 != 0)
    goto <bb 144>;
  else
    goto <bb 148>;

<bb 144>:
  if (ptime_82 > 0)
    goto <bb 145>;
  else
    goto <bb 146>;

<bb 145>:
  D.40582_215 = strlen (&buf);
  D.40583_216 = &buf + D.40582_215;
  D.40584_217 = strlen (&buf);
  D.40585_218 = 1024 - D.40584_217;
  D.40575_219 = imp_178->iananame;
  D.40457_220 = map_15->rm_rate;
  switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, ptime_82);
  goto <bb 147>;

<bb 146>:
  D.40587_221 = strlen (&buf);
  D.40588_222 = &buf + D.40587_221;
  D.40589_223 = strlen (&buf);
  D.40590_224 = 1024 - D.40589_223;
  D.40575_225 = imp_178->iananame;
  D.40457_226 = map_15->rm_rate;
  switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);

<bb 147>:
  D.40552_227 = imp_178->ianacode;
  D.40555_228 = (int) D.40552_227;
  already_did[D.40555_228] = 1;
  goto <bb 150>;

<bb 148>:
  map_229 = map_15->rm_next;
  # DEBUG map => map_229

<bb 149>:
  # map_15 = PHI <map_189(129), map_229(148)>
  # DEBUG map => map_15
  if (map_15 != 0B)
    goto <bb 130>;
  else
    goto <bb 150>;

<bb 150>:
  i_230 = i_21 + 1;
  # DEBUG i => i_230

<bb 151>:
  # i_21 = PHI <i_177(121), i_230(150)>
  # DEBUG i => i_21
  if (i_21 < num_codecs_22)
    goto <bb 122>;
  else
    goto <bb 152>;

<bb 152>:
  m_231 = m_2->m_next;
  # DEBUG m => m_231

<bb 153>:
  # m_2 = PHI <m_81(46), m_231(152)>
  # DEBUG m => m_2
  if (m_2 != 0B)
    goto <bb 47>;
  else
    goto <bb 154>;

<bb 154>:
  D.40591_232 = buf[0];
  if (D.40591_232 == 44)
    goto <bb 155>;
  else
    goto <bb 156>;

<bb 155>:
  switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);

<bb 156>:
  return;

}



;; Function switch_core_media_get_codec_string (switch_core_media_get_codec_string)

Try : D.47401_37(P37) & D.47403_36(P36) --> P37 D.47401
Try : D.46993_25(P25) & D.47401_37(P37) --> P37 D.47401
Try : iftmp.168_26(P26) & preferred_2(P2) --> P26 preferred
Try : iftmp.168_27(P27) & fallback_3(P3) --> P27 fallback
Try : D.46991_28(P28) & iftmp.168_4(P4) --> P28 D.46991
Try : preferred_1(P1) & preferred_12(P12) : Same root, coalesced --> P1.
Try : preferred_1(P1) & preferred_14(P14) : Same root, coalesced --> P1.
Try : preferred_2(P26) & preferred_9(P9) : Same root, coalesced --> P26.
Try : preferred_2(P26) & preferred_1(P1) : Same root, coalesced --> P26.
Try : preferred_2(P26) & preferred_18(P18) : Same root, coalesced --> P26.
Try : preferred_2(P26) & preferred_22(P22) : Same root, coalesced --> P26.
Try : fallback_3(P27) & fallback_10(P10) : Same root, coalesced --> P27.
Try : fallback_3(P27) & fallback_6(P6) : Same root, coalesced --> P27.
Try : fallback_3(P27) & fallback_20(P20) : Same root, coalesced --> P27.
Try : fallback_3(P27) & fallback_24(P24) : Same root, coalesced --> P27.
Try : iftmp.168_4(P28) & preferred_26(P26) --> P26 preferred
Try : iftmp.168_4(P26) & fallback_27(P27) : 2 different USER vars. No coalesce.

Partition map 

Partition 5 (preferred_5 - 5 )
Partition 7 (session_7(D) - 7 )
Partition 8 (smh_8 - 8 )
Partition 11 (D.46981_11 - 11 )
Partition 13 (D.46981_13 - 13 )
Partition 15 (D.46981_15 - 15 )
Partition 16 (D.46986_16 - 16 )
Partition 17 (D.46989_17 - 17 )
Partition 19 (D.46989_19 - 19 )
Partition 21 (D.46989_21 - 21 )
Partition 23 (D.46989_23 - 23 )
Partition 26 (preferred_26 - 1 2 4 9 12 14 18 22 26 28 )
Partition 27 (fallback_27 - 3 6 10 20 24 27 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31(D) - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (D.47402_35 - 35 )
Partition 37 (D.47401_37 - 25 36 37 )

Coalesced iftmp.168_4 to preferred_26
Coalesced D.46993_25 to D.47401_37
Coalesced D.46991_28 to preferred_26
Coalesced D.47403_36 to D.47401_37
Scope blocks after cleanups:

{ Scope block #0 
  const char * preferred;
  const char * fallback;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_get_codec_string";

  { Scope block #85 src/switch_core_media.c:708 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #86 Originating from :#0 

    }

  }

}
switch_core_media_get_codec_string (struct switch_core_session_t * session)
{
  const char D.47402;
  int D.47401;
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_get_codec_string";
  struct switch_media_handle_t * smh;
  const char * fallback;
  const char * preferred;
  struct switch_core_media_params_t * D.46989;
  switch_call_direction_t D.46986;
  struct switch_channel_t * D.46981;

<bb 2>:
  preferred_5 = 0B;
  # DEBUG preferred => preferred_5
  fallback_6 = 0B;
  # DEBUG fallback => fallback_6
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 685, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  preferred_9 = "PCMU";
  # DEBUG preferred => preferred_9
  fallback_10 = "PCMU";
  # DEBUG fallback => fallback_10
  goto <bb 12>;

<bb 6>:
  D.46981_11 = session_7(D)->channel;
  preferred_12 = switch_channel_get_variable_dup (D.46981_11, "absolute_codec_string", 1, -1);
  # DEBUG preferred => preferred_12
  if (preferred_12 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.46981_13 = session_7(D)->channel;
  preferred_14 = switch_channel_get_variable_dup (D.46981_13, "codec_string", 1, -1);
  # DEBUG preferred => preferred_14

<bb 8>:
  # preferred_1 = PHI <preferred_12(6), preferred_14(7)>
  # DEBUG preferred => preferred_1
  if (preferred_1 == 0B)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.46981_15 = session_7(D)->channel;
  D.46986_16 = switch_channel_direction (D.46981_15);
  if (D.46986_16 == 1)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.46989_17 = smh_8->mparams;
  preferred_18 = D.46989_17->outbound_codec_string;
  # DEBUG preferred => preferred_18
  D.46989_19 = smh_8->mparams;
  fallback_20 = D.46989_19->inbound_codec_string;
  # DEBUG fallback => fallback_20
  goto <bb 12>;

<bb 11>:
  D.46989_21 = smh_8->mparams;
  preferred_22 = D.46989_21->inbound_codec_string;
  # DEBUG preferred => preferred_22
  D.46989_23 = smh_8->mparams;
  fallback_24 = D.46989_23->outbound_codec_string;
  # DEBUG fallback => fallback_24

<bb 12>:
  # preferred_2 = PHI <preferred_9(5), preferred_1(8), preferred_18(10), preferred_22(11)>
  # fallback_3 = PHI <fallback_10(5), fallback_6(8), fallback_20(10), fallback_24(11)>
  # DEBUG fallback => fallback_3
  # DEBUG preferred => preferred_2
  # DEBUG s => preferred_2
  if (preferred_2 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;

<bb 13>:
  D.47402_35 = *preferred_2;
  if (D.47402_35 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # D.47401_36 = PHI <1(12), 1(13), 0(14)>
  D.47401_37 = D.47401_36;
  D.47401_25 = D.47401_37;
  if (D.47401_25 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  preferred_26 = preferred_2;
  goto <bb 18>;

<bb 17>:
  fallback_27 = fallback_3;

<bb 18>:
  # preferred_4 = PHI <preferred_26(16), fallback_27(17)>
  preferred_28 = preferred_4;
  return preferred_28;

}



;; Function switch_core_session_clear_crypto (switch_core_session_clear_crypto)

Try : i_1(P1) & i_3(P3) : Same root, coalesced --> P1.
Try : i_1(P1) & i_8(P8) : Same root, coalesced --> P1.
Try : i_2(P2) & i_10(P10) : Same root, coalesced --> P2.
Try : i_2(P2) & i_19(P19) : Same root, coalesced --> P2.

Partition map 

Partition 1 (i_1 - 1 3 8 )
Partition 2 (i_2 - 2 10 19 )
Partition 4 (D.46966_4 - 4 )
Partition 5 (session_5(D) - 5 )
Partition 6 (D.46965_6 - 6 )
Partition 7 (D.46966_7 - 7 )
Partition 9 (smh_9 - 9 )
Partition 11 (D.46969_11 - 11 )
Partition 12 (i.167_12 - 12 )
Partition 13 (D.46971_13 - 13 )
Partition 14 (D.46972_14 - 14 )
Partition 15 (D.46973_15 - 15 )
Partition 16 (i.167_16 - 16 )
Partition 17 (D.46971_17 - 17 )
Partition 18 (D.46974_18 - 18 )
Partition 20 (.MEM_20 - 20 )
Partition 21 (.MEM_21 - 21 )
Partition 22 (.MEM_22(D) - 22 )
Partition 23 (.MEM_23 - 23 )
Partition 24 (.MEM_24 - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )

switch_core_session_clear_crypto (struct switch_core_session_t * session)
{
  const char * vars[11];
  struct switch_media_handle_t * smh;
  int i;
  void * D.46974;
  struct switch_secure_settings_t[10] * D.46973;
  void * D.46972;
  unsigned int D.46971;
  unsigned int i.167;
  struct switch_secure_settings_t[10] * D.46969;
  const char * D.46966;
  struct switch_channel_t * D.46965;

<bb 2>:
  vars = *.LC10;
  i_3 = 0;
  # DEBUG i => i_3
  goto <bb 4>;

<bb 3>:
  D.46965_6 = session_5(D)->channel;
  D.46966_7 = vars[i_1];
  switch_channel_set_variable_var_check (D.46965_6, D.46966_7, 0B, 1);
  i_8 = i_1 + 1;
  # DEBUG i => i_8

<bb 4>:
  # i_1 = PHI <i_3(2), i_8(3)>
  # DEBUG i => i_1
  D.46966_4 = vars[i_1];
  if (D.46966_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  smh_9 = session_5(D)->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 9>;
  else
    goto <bb 6>;

<bb 6>:
  i_10 = 0;
  # DEBUG i => i_10
  goto <bb 8>;

<bb 7>:
  D.46969_11 = &smh_9->engines[0].ssec;
  i.167_12 = (unsigned int) i_2;
  D.46971_13 = i.167_12 * 144;
  D.46972_14 = D.46969_11 + D.46971_13;
  memset (D.46972_14, 0, 144);
  D.46973_15 = &smh_9->engines[1].ssec;
  i.167_16 = (unsigned int) i_2;
  D.46971_17 = i.167_16 * 144;
  D.46974_18 = D.46973_15 + D.46971_17;
  memset (D.46974_18, 0, 144);
  i_19 = i_2 + 1;
  # DEBUG i => i_19

<bb 8>:
  # i_2 = PHI <i_10(6), i_19(7)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 9>:
  return;

}



;; Function switch_core_session_local_crypto_key (switch_core_session_local_crypto_key)

Try : D.46951_1(P1) & D.46951_4(P4) : Same root, coalesced --> P1.
Try : D.46951_1(P1) & D.46951_9(P9) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.46951_1 - 1 4 9 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.46948_3 - 3 )
Partition 5 (D.46948_5 - 5 )
Partition 6 (D.46948_6 - 6 )
Partition 7 (type_7(D) - 7 )
Partition 8 (D.46952_8 - 8 )
Partition 10 (.MEM_10(D) - 10 )

switch_core_session_local_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  switch_rtp_crypto_key_type_t D.46952;
  const char * D.46951;
  struct switch_media_handle_t * D.46948;

<bb 2>:
  D.46948_3 = session_2(D)->media_handle;
  if (D.46948_3 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.46951_4 = 0B;
  goto <bb 5>;

<bb 4>:
  D.46948_5 = session_2(D)->media_handle;
  D.46948_6 = session_2(D)->media_handle;
  D.46952_8 = D.46948_6->engines[type_7(D)].crypto_type;
  D.46951_9 = D.46948_6->engines[type_7(D)].ssec[D.46952_8].local_crypto_key;

<bb 5>:
  # D.46951_1 = PHI <D.46951_4(3), D.46951_9(4)>
  return D.46951_1;

}



;; Function switch_core_media_parse_rtp_bugs (switch_core_media_parse_rtp_bugs)


Partition map 

Partition 1 (str_1(D) - 1 )
Partition 2 (D.46848_2 - 2 )
Partition 3 (flag_pole_3(D) - 3 )
Partition 4 (D.46851_4 - 4 )
Partition 5 (D.46854_5 - 5 )
Partition 6 (D.46855_6 - 6 )
Partition 7 (D.46856_7 - 7 )
Partition 8 (D.46854_8 - 8 )
Partition 9 (D.46859_9 - 9 )
Partition 10 (D.46860_10 - 10 )
Partition 11 (D.46854_11 - 11 )
Partition 12 (D.46863_12 - 12 )
Partition 13 (D.46864_13 - 13 )
Partition 14 (D.46854_14 - 14 )
Partition 15 (D.46867_15 - 15 )
Partition 16 (D.46868_16 - 16 )
Partition 17 (D.46854_17 - 17 )
Partition 18 (D.46871_18 - 18 )
Partition 19 (D.46872_19 - 19 )
Partition 20 (D.46854_20 - 20 )
Partition 21 (D.46875_21 - 21 )
Partition 22 (D.46876_22 - 22 )
Partition 23 (D.46854_23 - 23 )
Partition 24 (D.46879_24 - 24 )
Partition 25 (D.46880_25 - 25 )
Partition 26 (D.46854_26 - 26 )
Partition 27 (D.46883_27 - 27 )
Partition 28 (D.46884_28 - 28 )
Partition 29 (D.46854_29 - 29 )
Partition 30 (D.46887_30 - 30 )
Partition 31 (D.46888_31 - 31 )
Partition 32 (D.46854_32 - 32 )
Partition 33 (D.46891_33 - 33 )
Partition 34 (D.46892_34 - 34 )
Partition 35 (D.46854_35 - 35 )
Partition 36 (D.46895_36 - 36 )
Partition 37 (D.46896_37 - 37 )
Partition 38 (D.46854_38 - 38 )
Partition 39 (D.46899_39 - 39 )
Partition 40 (D.46900_40 - 40 )
Partition 41 (D.46854_41 - 41 )
Partition 42 (D.46903_42 - 42 )
Partition 43 (D.46904_43 - 43 )
Partition 44 (D.46854_44 - 44 )
Partition 45 (D.46907_45 - 45 )
Partition 46 (D.46908_46 - 46 )
Partition 47 (D.46854_47 - 47 )
Partition 48 (D.46911_48 - 48 )
Partition 49 (D.46912_49 - 49 )
Partition 50 (D.46854_50 - 50 )
Partition 51 (D.46915_51 - 51 )
Partition 52 (D.46916_52 - 52 )
Partition 53 (D.46854_53 - 53 )
Partition 54 (D.46919_54 - 54 )
Partition 55 (D.46920_55 - 55 )
Partition 56 (D.46854_56 - 56 )
Partition 57 (D.46923_57 - 57 )
Partition 58 (D.46924_58 - 58 )
Partition 59 (D.46854_59 - 59 )
Partition 60 (D.46927_60 - 60 )
Partition 61 (D.46928_61 - 61 )
Partition 62 (D.46854_62 - 62 )
Partition 63 (D.46931_63 - 63 )
Partition 64 (D.46932_64 - 64 )
Partition 65 (D.46854_65 - 65 )
Partition 66 (D.46935_66 - 66 )
Partition 67 (D.46936_67 - 67 )
Partition 68 (D.46854_68 - 68 )
Partition 69 (D.46939_69 - 69 )
Partition 70 (D.46940_70 - 70 )
Partition 71 (D.46854_71 - 71 )
Partition 72 (D.46943_72 - 72 )
Partition 73 (D.46944_73 - 73 )
Partition 74 (D.46854_74 - 74 )
Partition 75 (D.46947_75 - 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (.MEM_77 - 77 )
Partition 78 (.MEM_78 - 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89 - 89 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100(D) - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )
Partition 120 (.MEM_120 - 120 )
Partition 121 (.MEM_121 - 121 )
Partition 122 (.MEM_122 - 122 )
Partition 123 (.MEM_123 - 123 )
Partition 124 (.MEM_124 - 124 )
Partition 125 (.MEM_125 - 125 )
Partition 126 (.MEM_126 - 126 )
Partition 127 (.MEM_127 - 127 )
Partition 128 (.MEM_128 - 128 )
Partition 129 (.MEM_129 - 129 )
Partition 130 (.MEM_130 - 130 )
Partition 131 (.MEM_131 - 131 )
Partition 132 (.MEM_132 - 132 )
Partition 133 (.MEM_133 - 133 )
Partition 134 (.MEM_134 - 134 )
Partition 135 (.MEM_135 - 135 )
Partition 136 (.MEM_136 - 136 )
Partition 137 (.MEM_137 - 137 )
Partition 138 (.MEM_138 - 138 )
Partition 139 (.MEM_139 - 139 )
Partition 140 (.MEM_140 - 140 )
Partition 141 (.MEM_141 - 141 )
Partition 142 (.MEM_142 - 142 )
Partition 143 (.MEM_143 - 143 )
Partition 144 (.MEM_144 - 144 )
Partition 145 (.MEM_145 - 145 )
Partition 146 (.MEM_146 - 146 )
Partition 147 (.MEM_147 - 147 )
Partition 148 (.MEM_148 - 148 )
Partition 149 (.MEM_149 - 149 )
Partition 150 (.MEM_150 - 150 )

switch_core_media_parse_rtp_bugs (switch_rtp_bug_flag_t * flag_pole, const char * str)
{
  unsigned int D.46947;
  const char * D.46944;
  unsigned int D.46943;
  const char * D.46940;
  unsigned int D.46939;
  const char * D.46936;
  unsigned int D.46935;
  const char * D.46932;
  unsigned int D.46931;
  const char * D.46928;
  unsigned int D.46927;
  const char * D.46924;
  unsigned int D.46923;
  const char * D.46920;
  unsigned int D.46919;
  const char * D.46916;
  unsigned int D.46915;
  const char * D.46912;
  unsigned int D.46911;
  const char * D.46908;
  unsigned int D.46907;
  const char * D.46904;
  unsigned int D.46903;
  const char * D.46900;
  unsigned int D.46899;
  const char * D.46896;
  unsigned int D.46895;
  const char * D.46892;
  unsigned int D.46891;
  const char * D.46888;
  unsigned int D.46887;
  const char * D.46884;
  unsigned int D.46883;
  const char * D.46880;
  unsigned int D.46879;
  const char * D.46876;
  unsigned int D.46875;
  const char * D.46872;
  unsigned int D.46871;
  const char * D.46868;
  unsigned int D.46867;
  const char * D.46864;
  unsigned int D.46863;
  const char * D.46860;
  unsigned int D.46859;
  const char * D.46856;
  unsigned int D.46855;
  switch_rtp_bug_flag_t D.46854;
  const char * D.46851;
  const char * D.46848;

<bb 2>:
  D.46848_2 = switch_stristr ("clear", str_1(D));
  if (D.46848_2 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  *flag_pole_3(D) = 0;

<bb 4>:
  D.46851_4 = switch_stristr ("CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46851_4 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.46854_5 = *flag_pole_3(D);
  D.46855_6 = D.46854_5 | 1;
  *flag_pole_3(D) = D.46855_6;

<bb 6>:
  D.46856_7 = switch_stristr ("~CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46856_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.46854_8 = *flag_pole_3(D);
  D.46859_9 = D.46854_8 & 4294967294;
  *flag_pole_3(D) = D.46859_9;

<bb 8>:
  D.46860_10 = switch_stristr ("SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46860_10 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.46854_11 = *flag_pole_3(D);
  D.46863_12 = D.46854_11 | 2;
  *flag_pole_3(D) = D.46863_12;

<bb 10>:
  D.46864_13 = switch_stristr ("~SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46864_13 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.46854_14 = *flag_pole_3(D);
  D.46867_15 = D.46854_14 & 4294967293;
  *flag_pole_3(D) = D.46867_15;

<bb 12>:
  D.46868_16 = switch_stristr ("IGNORE_MARK_BIT", str_1(D));
  if (D.46868_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.46854_17 = *flag_pole_3(D);
  D.46871_18 = D.46854_17 | 4;
  *flag_pole_3(D) = D.46871_18;

<bb 14>:
  D.46872_19 = switch_stristr ("~IGNORE_MARK_BIT", str_1(D));
  if (D.46872_19 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.46854_20 = *flag_pole_3(D);
  D.46875_21 = D.46854_20 & 4294967291;
  *flag_pole_3(D) = D.46875_21;

<bb 16>:
  D.46876_22 = switch_stristr ("SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46876_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.46854_23 = *flag_pole_3(D);
  D.46879_24 = D.46854_23 | 8;
  *flag_pole_3(D) = D.46879_24;

<bb 18>:
  D.46880_25 = switch_stristr ("~SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46880_25 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.46854_26 = *flag_pole_3(D);
  D.46883_27 = D.46854_26 & 4294967287;
  *flag_pole_3(D) = D.46883_27;

<bb 20>:
  D.46884_28 = switch_stristr ("START_SEQ_AT_ZERO", str_1(D));
  if (D.46884_28 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.46854_29 = *flag_pole_3(D);
  D.46887_30 = D.46854_29 | 16;
  *flag_pole_3(D) = D.46887_30;

<bb 22>:
  D.46888_31 = switch_stristr ("~START_SEQ_AT_ZERO", str_1(D));
  if (D.46888_31 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.46854_32 = *flag_pole_3(D);
  D.46891_33 = D.46854_32 & 4294967279;
  *flag_pole_3(D) = D.46891_33;

<bb 24>:
  D.46892_34 = switch_stristr ("NEVER_SEND_MARKER", str_1(D));
  if (D.46892_34 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.46854_35 = *flag_pole_3(D);
  D.46895_36 = D.46854_35 | 32;
  *flag_pole_3(D) = D.46895_36;

<bb 26>:
  D.46896_37 = switch_stristr ("~NEVER_SEND_MARKER", str_1(D));
  if (D.46896_37 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.46854_38 = *flag_pole_3(D);
  D.46899_39 = D.46854_38 & 4294967263;
  *flag_pole_3(D) = D.46899_39;

<bb 28>:
  D.46900_40 = switch_stristr ("IGNORE_DTMF_DURATION", str_1(D));
  if (D.46900_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.46854_41 = *flag_pole_3(D);
  D.46903_42 = D.46854_41 | 64;
  *flag_pole_3(D) = D.46903_42;

<bb 30>:
  D.46904_43 = switch_stristr ("~IGNORE_DTMF_DURATION", str_1(D));
  if (D.46904_43 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.46854_44 = *flag_pole_3(D);
  D.46907_45 = D.46854_44 & 4294967231;
  *flag_pole_3(D) = D.46907_45;

<bb 32>:
  D.46908_46 = switch_stristr ("ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46908_46 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.46854_47 = *flag_pole_3(D);
  D.46911_48 = D.46854_47 | 128;
  *flag_pole_3(D) = D.46911_48;

<bb 34>:
  D.46912_49 = switch_stristr ("~ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46912_49 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.46854_50 = *flag_pole_3(D);
  D.46915_51 = D.46854_50 & 4294967167;
  *flag_pole_3(D) = D.46915_51;

<bb 36>:
  D.46916_52 = switch_stristr ("ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46916_52 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  D.46854_53 = *flag_pole_3(D);
  D.46919_54 = D.46854_53 | 2048;
  *flag_pole_3(D) = D.46919_54;

<bb 38>:
  D.46920_55 = switch_stristr ("~ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46920_55 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.46854_56 = *flag_pole_3(D);
  D.46923_57 = D.46854_56 & 4294965247;
  *flag_pole_3(D) = D.46923_57;

<bb 40>:
  D.46924_58 = switch_stristr ("GEN_ONE_GEN_ALL", str_1(D));
  if (D.46924_58 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.46854_59 = *flag_pole_3(D);
  D.46927_60 = D.46854_59 | 256;
  *flag_pole_3(D) = D.46927_60;

<bb 42>:
  D.46928_61 = switch_stristr ("~GEN_ONE_GEN_ALL", str_1(D));
  if (D.46928_61 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.46854_62 = *flag_pole_3(D);
  D.46931_63 = D.46854_62 & 4294967039;
  *flag_pole_3(D) = D.46931_63;

<bb 44>:
  D.46932_64 = switch_stristr ("CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46932_64 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.46854_65 = *flag_pole_3(D);
  D.46935_66 = D.46854_65 | 512;
  *flag_pole_3(D) = D.46935_66;

<bb 46>:
  D.46936_67 = switch_stristr ("~CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46936_67 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.46854_68 = *flag_pole_3(D);
  D.46939_69 = D.46854_68 & 4294966783;
  *flag_pole_3(D) = D.46939_69;

<bb 48>:
  D.46940_70 = switch_stristr ("FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46940_70 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.46854_71 = *flag_pole_3(D);
  D.46943_72 = D.46854_71 | 1024;
  *flag_pole_3(D) = D.46943_72;

<bb 50>:
  D.46944_73 = switch_stristr ("~FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46944_73 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.46854_74 = *flag_pole_3(D);
  D.46947_75 = D.46854_74 & 4294966271;
  *flag_pole_3(D) = D.46947_75;

<bb 52>:
  return;

}



;; Function switch_core_media_add_crypto (switch_core_media_add_crypto)

Try : D.46846_1(P1) & D.46846_28(P28) : Same root, coalesced --> P1.
Try : D.46846_1(P1) & D.46846_29(P29) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.46846_1 - 1 28 29 )
Partition 2 (key_str_2(D) - 2 )
Partition 3 (p_3 - 3 )
Partition 4 (D.46818_4 - 4 )
Partition 5 (D.46821_5 - 5 )
Partition 6 (D.46822_6 - 6 )
Partition 7 (p_7 - 7 )
Partition 8 (type_8 - 8 )
Partition 9 (p_9 - 9 )
Partition 10 (D.46818_10 - 10 )
Partition 11 (D.46821_11 - 11 )
Partition 12 (D.46822_12 - 12 )
Partition 13 (p_13 - 13 )
Partition 14 (D.46833_14 - 14 )
Partition 15 (p_15 - 15 )
Partition 16 (direction_16(D) - 16 )
Partition 17 (ssec_17(D) - 17 )
Partition 18 (D.46838_18 - 18 )
Partition 19 (D.46839_19 - 19 )
Partition 20 (D.46840_20 - 20 )
Partition 21 (D.46841_21 - 21 )
Partition 22 (D.46842_22 - 22 )
Partition 23 (D.46844_23 - 23 )
Partition 24 (D.46845_24 - 24 )
Partition 25 (D.46840_25 - 25 )
Partition 26 (D.46841_26 - 26 )
Partition 27 (D.46842_27 - 27 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31(D) - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )

switch_core_media_add_crypto (struct switch_secure_settings_t * ssec, const char * key_str, switch_rtp_crypto_direction_t direction)
{
  static const char __func__[29] = "switch_core_media_add_crypto";
  char * p;
  switch_rtp_crypto_key_type_t type;
  unsigned char key[64];
  switch_status_t D.46846;
  void * restrict D.46845;
  unsigned char * D.46844;
  size_t D.46842;
  int D.46841;
  const void * restrict D.46840;
  void * restrict D.46839;
  unsigned char * D.46838;
  int D.46833;
  char D.46822;
  char * D.46821;
  char D.46818;

<bb 2>:
  p_3 = __builtin_strchr (key_str_2(D), 32);
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 16> (bad);

<bb 3>:
  D.46818_4 = *p_3;
  if (D.46818_4 != 0)
    goto <bb 4>;
  else
    goto <bb 16> (bad);

<bb 4>:
  D.46821_5 = p_3 + 1;
  D.46822_6 = *D.46821_5;
  if (D.46822_6 != 0)
    goto <bb 5>;
  else
    goto <bb 16> (bad);

<bb 5>:
  p_7 = p_3 + 1;
  # DEBUG p => p_7
  type_8 = switch_core_media_crypto_str2type (p_7);
  # DEBUG type => type_8
  if (type_8 == 9)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);
  goto <bb 16> (bad);

<bb 7>:
  p_9 = __builtin_strchr (p_7, 32);
  # DEBUG p => p_9
  if (p_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 16> (bad);

<bb 8>:
  D.46818_10 = *p_9;
  if (D.46818_10 != 0)
    goto <bb 9>;
  else
    goto <bb 16> (bad);

<bb 9>:
  D.46821_11 = p_9 + 1;
  D.46822_12 = *D.46821_11;
  if (D.46822_12 != 0)
    goto <bb 10>;
  else
    goto <bb 16> (bad);

<bb 10>:
  p_13 = p_9 + 1;
  # DEBUG p => p_13
  D.46833_14 = strncasecmp (p_13, "inline:", 7);
  if (D.46833_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);
  goto <bb 16> (bad);

<bb 12>:
  p_15 = p_13 + 7;
  # DEBUG p => p_15
  switch_b64_decode (p_15, &key, 64);
  if (direction_16(D) == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.46838_18 = &ssec_17(D)->local_raw_key[0];
  D.46839_19 = (void * restrict) D.46838_18;
  D.46840_20 = (const void * restrict) &key[0];
  D.46841_21 = SUITES[type_8].keylen;
  D.46842_22 = (size_t) D.46841_21;
  memcpy (D.46839_19, D.46840_20, D.46842_22);
  goto <bb 15>;

<bb 14>:
  D.46844_23 = &ssec_17(D)->remote_raw_key[0];
  D.46845_24 = (void * restrict) D.46844_23;
  D.46840_25 = (const void * restrict) &key[0];
  D.46841_26 = SUITES[type_8].keylen;
  D.46842_27 = (size_t) D.46841_26;
  memcpy (D.46845_24, D.46840_25, D.46842_27);

<bb 15>:
  D.46846_28 = 0;
  goto <bb 17>;

bad:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");
  D.46846_29 = 1;

<bb 17>:
  # D.46846_1 = PHI <D.46846_28(15), D.46846_29(16)>
  return D.46846_1;

}



;; Function switch_core_session_apply_crypto (switch_core_session_apply_crypto)

Try : varname_1(P1) & varname_3(P3) : Same root, coalesced --> P1.
Try : varname_1(P1) & varname_4(P4) : Same root, coalesced --> P1.

Partition map 

Partition 1 (varname_1 - 1 3 4 )
Partition 2 (type_2(D) - 2 )
Partition 5 (session_5(D) - 5 )
Partition 6 (D.43876_6 - 6 )
Partition 7 (D.43876_7 - 7 )
Partition 8 (D.43879_8 - 8 )
Partition 9 (D.43880_9 - 9 )
Partition 10 (engine_10 - 10 )
Partition 11 (D.43881_11 - 11 )
Partition 12 (D.43882_12 - 12 )
Partition 13 (D.43885_13 - 13 )
Partition 14 (D.43886_14 - 14 )
Partition 15 (D.43881_15 - 15 )
Partition 16 (D.43889_16 - 16 )
Partition 17 (D.43892_17 - 17 )
Partition 18 (D.43885_18 - 18 )
Partition 19 (D.43893_19 - 19 )
Partition 20 (D.43894_20 - 20 )
Partition 21 (D.43885_21 - 21 )
Partition 22 (D.43886_22 - 22 )
Partition 23 (D.43895_23 - 23 )
Partition 24 (D.43885_24 - 24 )
Partition 25 (D.43896_25 - 25 )
Partition 26 (D.43885_26 - 26 )
Partition 27 (D.43897_27 - 27 )
Partition 28 (D.43885_28 - 28 )
Partition 29 (D.43896_29 - 29 )
Partition 30 (D.43898_30 - 30 )
Partition 31 (D.43899_31 - 31 )
Partition 32 (D.43895_32 - 32 )
Partition 33 (D.43885_33 - 33 )
Partition 34 (D.43900_34 - 34 )
Partition 35 (D.43901_35 - 35 )
Partition 36 (D.43885_36 - 36 )
Partition 37 (D.43896_37 - 37 )
Partition 38 (D.43885_38 - 38 )
Partition 39 (D.43902_39 - 39 )
Partition 40 (D.43885_40 - 40 )
Partition 41 (D.43896_41 - 41 )
Partition 42 (D.43898_42 - 42 )
Partition 43 (D.43899_43 - 43 )
Partition 44 (D.43881_44 - 44 )
Partition 45 (D.43881_45 - 45 )
Partition 46 (D.43885_46 - 46 )
Partition 47 (D.43903_47 - 47 )
Partition 48 (.MEM_48(D) - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )

switch_core_session_apply_crypto (struct switch_core_session_t * session, switch_media_type_t type)
{
  const char * varname;
  struct switch_rtp_engine_t * engine;
  char * D.43903;
  unsigned char[64] * D.43902;
  uint32_t D.43901;
  int D.43900;
  switch_size_t D.43899;
  int D.43898;
  unsigned char[64] * D.43897;
  switch_rtp_crypto_key_type_t D.43896;
  struct switch_rtp_t * D.43895;
  struct switch_secure_settings_t * D.43894;
  unsigned int D.43893;
  struct switch_secure_settings_t[10] * D.43892;
  uint32_t D.43889;
  char * D.43886;
  switch_rtp_crypto_key_type_t D.43885;
  uint32_t D.43882;
  struct switch_channel_t * D.43881;
  unsigned int D.43880;
  struct switch_rtp_engine_t[2] * D.43879;
  struct switch_media_handle_t * D.43876;

<bb 2>:
  if (type_2(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  varname_3 = "rtp_secure_audio_confirmed";
  # DEBUG varname => varname_3
  goto <bb 5>;

<bb 4>:
  varname_4 = "rtp_secure_video_confirmed";
  # DEBUG varname => varname_4

<bb 5>:
  # varname_1 = PHI <varname_3(3), varname_4(4)>
  # DEBUG varname => varname_1
  D.43876_6 = session_5(D)->media_handle;
  if (D.43876_6 == 0B)
    goto <bb 10>;
  else
    goto <bb 6>;

<bb 6>:
  D.43876_7 = session_5(D)->media_handle;
  D.43879_8 = &D.43876_7->engines;
  D.43880_9 = type_2(D) * 11416;
  engine_10 = D.43879_8 + D.43880_9;
  # DEBUG engine => engine_10
  D.43881_11 = session_5(D)->channel;
  D.43882_12 = switch_channel_test_flag (D.43881_11, 84);
  if (D.43882_12 != 0)
    goto <bb 10>;
  else
    goto <bb 7>;

<bb 7>:
  D.43885_13 = engine_10->crypto_type;
  D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
  if (D.43886_14 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.43881_15 = session_5(D)->channel;
  D.43889_16 = switch_channel_test_flag (D.43881_15, 92);
  if (D.43889_16 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.43892_17 = &engine_10->ssec;
  D.43885_18 = engine_10->crypto_type;
  D.43893_19 = D.43885_18 * 144;
  D.43894_20 = D.43892_17 + D.43893_19;
  D.43885_21 = engine_10->crypto_type;
  D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
  switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);
  D.43895_23 = engine_10->rtp_session;
  D.43885_24 = engine_10->crypto_type;
  D.43896_25 = engine_10->ssec[D.43885_24].crypto_type;
  D.43885_26 = engine_10->crypto_type;
  D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
  D.43885_28 = engine_10->crypto_type;
  D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
  D.43898_30 = SUITES[D.43896_29].keylen;
  D.43899_31 = (switch_size_t) D.43898_30;
  switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);
  D.43895_32 = engine_10->rtp_session;
  D.43885_33 = engine_10->crypto_type;
  D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
  D.43901_35 = (uint32_t) D.43900_34;
  D.43885_36 = engine_10->crypto_type;
  D.43896_37 = engine_10->ssec[D.43885_36].crypto_type;
  D.43885_38 = engine_10->crypto_type;
  D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
  D.43885_40 = engine_10->crypto_type;
  D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
  D.43898_42 = SUITES[D.43896_41].keylen;
  D.43899_43 = (switch_size_t) D.43898_42;
  switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);
  D.43881_44 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);
  D.43881_45 = session_5(D)->channel;
  D.43885_46 = engine_10->crypto_type;
  D.43903_47 = SUITES[D.43885_46].name;
  switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);

<bb 10>:
  return;

}



;; Function switch_core_media_set_rtp_session (switch_core_media_set_rtp_session)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (D.46810_2 - 2 )
Partition 3 (D.46810_3 - 3 )
Partition 4 (D.46813_4 - 4 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.46814_6 - 6 )
Partition 7 (engine_7 - 7 )
Partition 8 (rtp_session_8(D) - 8 )
Partition 9 (.MEM_9(D) - 9 )
Partition 10 (.MEM_10 - 10 )
Partition 11 (.MEM_11 - 11 )

switch_core_media_set_rtp_session (struct switch_core_session_t * session, switch_media_type_t type, struct switch_rtp_t * rtp_session)
{
  struct switch_rtp_engine_t * engine;
  unsigned int D.46814;
  struct switch_rtp_engine_t[2] * D.46813;
  struct switch_media_handle_t * D.46810;

<bb 2>:
  D.46810_2 = session_1(D)->media_handle;
  if (D.46810_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  D.46810_3 = session_1(D)->media_handle;
  D.46813_4 = &D.46810_3->engines;
  D.46814_6 = type_5(D) * 11416;
  engine_7 = D.46813_4 + D.46814_6;
  # DEBUG engine => engine_7
  engine_7->rtp_session = rtp_session_8(D);
  engine_7->type = type_5(D);

<bb 4>:
  return;

}



;; Function switch_core_session_check_incoming_crypto (switch_core_session_check_incoming_crypto)

Try : D.47412_189(P189) & D.47413_185(P185) --> P189 D.47412
Try : D.46753_53(P53) & D.47412_189(P189) --> P189 D.47412
Try : D.47415_190(P190) & D.47417_187(P187) --> P190 D.47415
Try : D.46806_128(P128) & D.47415_190(P190) --> P190 D.47415
Try : D.46721_131(P131) & got_crypto_1(P1) --> P131 got_crypto
Try : i_2(P2) & i_20(P20) : Same root, coalesced --> P2.
Try : i_2(P2) & i_32(P32) : Same root, coalesced --> P2.
Try : ctype_3(P3) & ctype_29(P29) : Same root, coalesced --> P3.
Try : ctype_3(P3) & ctype_8(P8) : Same root, coalesced --> P3.
Try : vval_4(P4) & vval_30(P30) : Same root, coalesced --> P4.
Try : vval_4(P4) & vval_9(P9) : Same root, coalesced --> P4.
Try : got_crypto_1(P131) & got_crypto_6(P6) : Same root, coalesced --> P131.
Try : got_crypto_1(P131) & got_crypto_103(P103) : Same root, coalesced --> P131.
Try : got_crypto_1(P131) & got_crypto_6(P131) : Already coalesced.
Try : got_crypto_1(P131) & got_crypto_6(P131) : Already coalesced.
Try : got_crypto_1(P131) & got_crypto_122(P122) : Same root, coalesced --> P131.
Try : got_crypto_1(P131) & got_crypto_122(P131) : Already coalesced.
Try : got_crypto_1(P131) & got_crypto_41(P41) : Same root, coalesced --> P131.
Try : got_crypto_1(P131) & got_crypto_6(P131) : Already coalesced.
Try : D.46721_5(P5) & D.46721_12(P12) : Same root, coalesced --> P5.
Try : D.46721_5(P5) & D.46721_14(P14) : Same root, coalesced --> P5.
Try : D.46721_5(P5) & got_crypto_131(P131) --> P131 got_crypto

Partition map 

Partition 2 (i_2 - 2 20 32 )
Partition 3 (ctype_3 - 3 8 29 )
Partition 4 (vval_4 - 4 9 30 )
Partition 7 (i_7 - 7 )
Partition 10 (session_10(D) - 10 )
Partition 11 (smh_11 - 11 )
Partition 13 (D.46722_13 - 13 )
Partition 15 (D.46725_15 - 15 )
Partition 16 (D.46726_16 - 16 )
Partition 17 (type_17(D) - 17 )
Partition 18 (D.46727_18 - 18 )
Partition 19 (engine_19 - 19 )
Partition 21 (D.46728_21 - 21 )
Partition 22 (D.46728_22 - 22 )
Partition 23 (j_23 - 23 )
Partition 24 (D.46729_24 - 24 )
Partition 25 (crypto_25(D) - 25 )
Partition 26 (D.46729_26 - 26 )
Partition 27 (D.46730_27 - 27 )
Partition 28 (D.46733_28 - 28 )
Partition 31 (D.46734_31 - 31 )
Partition 33 (D.46737_33 - 33 )
Partition 34 (D.46738_34 - 34 )
Partition 35 (D.46740_35 - 35 )
Partition 36 (D.46741_36 - 36 )
Partition 37 (D.46737_37 - 37 )
Partition 38 (D.46737_38 - 38 )
Partition 39 (D.46738_39 - 39 )
Partition 40 (D.38621_40 - 40 )
Partition 42 (D.46737_42 - 42 )
Partition 43 (D.46738_43 - 43 )
Partition 44 (a_44 - 44 )
Partition 45 (b_45 - 45 )
Partition 46 (sdp_type_46(D) - 46 )
Partition 47 (D.46734_47 - 47 )
Partition 48 (varname_48(D) - 48 )
Partition 49 (D.46725_49 - 49 )
Partition 50 (ctype.166_50 - 50 )
Partition 51 (crypto_tag_51(D) - 51 )
Partition 52 (D.46740_52 - 52 )
Partition 54 (D.46754_54 - 54 )
Partition 55 (D.46737_55 - 55 )
Partition 56 (D.46755_56 - 56 )
Partition 57 (D.46737_57 - 57 )
Partition 58 (D.46756_58 - 58 )
Partition 59 (D.46757_59 - 59 )
Partition 60 (D.46758_60 - 60 )
Partition 61 (D.46761_61 - 61 )
Partition 62 (D.46762_62 - 62 )
Partition 63 (D.46763_63 - 63 )
Partition 64 (D.46765_64 - 64 )
Partition 65 (ctype.166_65 - 65 )
Partition 66 (D.46737_66 - 66 )
Partition 67 (D.46767_67 - 67 )
Partition 68 (D.46768_68 - 68 )
Partition 69 (D.46734_69 - 69 )
Partition 70 (D.46734_70 - 70 )
Partition 71 (D.46734_71 - 71 )
Partition 72 (ctype.166_72 - 72 )
Partition 73 (D.46771_73 - 73 )
Partition 74 (D.46768_74 - 74 )
Partition 75 (D.46734_75 - 75 )
Partition 76 (D.46734_76 - 76 )
Partition 77 (D.46734_77 - 77 )
Partition 78 (ctype.166_78 - 78 )
Partition 79 (D.46775_79 - 79 )
Partition 80 (D.46737_80 - 80 )
Partition 81 (D.46740_81 - 81 )
Partition 82 (D.46776_82 - 82 )
Partition 83 (D.46734_83 - 83 )
Partition 84 (D.46779_84 - 84 )
Partition 85 (D.46782_85 - 85 )
Partition 86 (D.46737_86 - 86 )
Partition 87 (D.46783_87 - 87 )
Partition 88 (D.46784_88 - 88 )
Partition 89 (D.46737_89 - 89 )
Partition 90 (D.46738_90 - 90 )
Partition 91 (D.46740_91 - 91 )
Partition 92 (D.46737_92 - 92 )
Partition 93 (D.46785_93 - 93 )
Partition 94 (D.46786_94 - 94 )
Partition 95 (D.46737_95 - 95 )
Partition 96 (D.46755_96 - 96 )
Partition 97 (D.46737_97 - 97 )
Partition 98 (D.46787_98 - 98 )
Partition 99 (D.46737_99 - 99 )
Partition 100 (D.46755_100 - 100 )
Partition 101 (D.46788_101 - 101 )
Partition 102 (D.46789_102 - 102 )
Partition 104 (D.46740_104 - 104 )
Partition 105 (D.46790_105 - 105 )
Partition 106 (ctype.166_106 - 106 )
Partition 107 (D.46737_107 - 107 )
Partition 108 (D.46795_108 - 108 )
Partition 109 (D.46737_109 - 109 )
Partition 110 (D.46738_110 - 110 )
Partition 111 (D.46768_111 - 111 )
Partition 112 (D.46734_112 - 112 )
Partition 113 (D.46734_113 - 113 )
Partition 114 (ctype.166_114 - 114 )
Partition 115 (D.46798_115 - 115 )
Partition 116 (D.46768_116 - 116 )
Partition 117 (D.46734_117 - 117 )
Partition 118 (D.46734_118 - 118 )
Partition 119 (ctype.166_119 - 119 )
Partition 120 (D.46802_120 - 120 )
Partition 121 (D.46737_121 - 121 )
Partition 123 (D.46734_123 - 123 )
Partition 124 (D.46803_124 - 124 )
Partition 125 (D.46804_125 - 125 )
Partition 126 (D.46737_126 - 126 )
Partition 127 (D.46805_127 - 127 )
Partition 129 (D.46725_129 - 129 )
Partition 130 (ctype.166_130 - 130 )
Partition 131 (got_crypto_131 - 1 5 6 12 14 41 103 122 131 )
Partition 132 (.MEM_132 - 132 )
Partition 133 (.MEM_133 - 133 )
Partition 134 (.MEM_134 - 134 )
Partition 135 (.MEM_135 - 135 )
Partition 136 (.MEM_136 - 136 )
Partition 137 (.MEM_137 - 137 )
Partition 138 (.MEM_138(D) - 138 )
Partition 139 (.MEM_139 - 139 )
Partition 140 (.MEM_140 - 140 )
Partition 141 (.MEM_141 - 141 )
Partition 142 (.MEM_142 - 142 )
Partition 143 (.MEM_143 - 143 )
Partition 144 (.MEM_144 - 144 )
Partition 145 (.MEM_145 - 145 )
Partition 146 (.MEM_146 - 146 )
Partition 147 (.MEM_147 - 147 )
Partition 148 (.MEM_148 - 148 )
Partition 149 (.MEM_149 - 149 )
Partition 150 (.MEM_150 - 150 )
Partition 151 (.MEM_151 - 151 )
Partition 152 (.MEM_152 - 152 )
Partition 153 (.MEM_153 - 153 )
Partition 154 (.MEM_154 - 154 )
Partition 155 (.MEM_155 - 155 )
Partition 156 (.MEM_156 - 156 )
Partition 157 (.MEM_157 - 157 )
Partition 158 (.MEM_158 - 158 )
Partition 159 (.MEM_159 - 159 )
Partition 160 (.MEM_160 - 160 )
Partition 161 (.MEM_161 - 161 )
Partition 162 (.MEM_162 - 162 )
Partition 163 (.MEM_163 - 163 )
Partition 164 (.MEM_164 - 164 )
Partition 165 (.MEM_165 - 165 )
Partition 166 (.MEM_166 - 166 )
Partition 167 (.MEM_167 - 167 )
Partition 168 (.MEM_168 - 168 )
Partition 169 (.MEM_169 - 169 )
Partition 170 (.MEM_170 - 170 )
Partition 171 (.MEM_171 - 171 )
Partition 172 (.MEM_172 - 172 )
Partition 173 (.MEM_173 - 173 )
Partition 174 (.MEM_174 - 174 )
Partition 175 (.MEM_175 - 175 )
Partition 176 (.MEM_176 - 176 )
Partition 177 (.MEM_177 - 177 )
Partition 178 (.MEM_178 - 178 )
Partition 179 (.MEM_179 - 179 )
Partition 180 (.MEM_180 - 180 )
Partition 181 (.MEM_181 - 181 )
Partition 182 (.MEM_182 - 182 )
Partition 183 (.MEM_183 - 183 )
Partition 184 (.MEM_184 - 184 )
Partition 186 (D.47416_186 - 186 )
Partition 188 (.MEM_188 - 188 )
Partition 189 (D.47412_189 - 53 185 189 )
Partition 190 (D.47415_190 - 128 187 190 )

Coalesced D.46721_5 to got_crypto_131
Coalesced D.46721_12 to got_crypto_131
Coalesced D.46721_14 to got_crypto_131
Coalesced D.46753_53 to D.47412_189
Coalesced D.46806_128 to D.47415_190
Coalesced D.47413_185 to D.47412_189
Coalesced D.47417_187 to D.47415_190
Scope blocks after cleanups:

{ Scope block #0 
  int got_crypto;
  int i;
  int ctype;
  const char * vval;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  static const char __func__[42] = "switch_core_session_check_incoming_crypto";
  void end = <<< error >>>; (unused)

  { Scope block #87 src/switch_core_media.c:1265 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #88 Originating from :#0 

    }

  }

  { Scope block #89 
    switch_rtp_crypto_key_type_t j;

  }

  { Scope block #90 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #91 
    const char * a;
    const char * b;

    { Scope block #92 src/switch_core_media.c:1207 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #93 Originating from :#0 

      }

    }

  }

}
switch_core_session_check_incoming_crypto (struct switch_core_session_t * session, const char * varname, switch_media_type_t type, const char * crypto, int crypto_tag, switch_sdp_type_t sdp_type)
{
  const char D.47416;
  int D.47415;
  int D.47412;
  const char * b;
  const char * a;
  switch_rtp_crypto_key_type_t j;
  static const char __func__[42] = "switch_core_session_check_incoming_crypto";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * vval;
  int ctype;
  int i;
  int got_crypto;
  char * D.46805;
  struct switch_channel_t * D.46804;
  struct switch_core_session_t * D.46803;
  const char * D.46802;
  const char * D.46798;
  char * D.46795;
  uint8_t D.46790;
  switch_size_t D.46789;
  int D.46788;
  unsigned char[64] * D.46787;
  uint32_t D.46786;
  int D.46785;
  struct switch_secure_settings_t * D.46784;
  unsigned int D.46783;
  struct switch_secure_settings_t[10] * D.46782;
  uint32_t D.46779;
  uint8_t D.46776;
  const char * D.46775;
  const char * D.46771;
  switch_media_type_t D.46768;
  char * D.46767;
  int D.46765;
  _Bool D.46763;
  _Bool D.46762;
  _Bool D.46761;
  switch_size_t D.46758;
  int D.46757;
  unsigned char[64] * D.46756;
  switch_rtp_crypto_key_type_t D.46755;
  uint32_t D.46754;
  switch_rtp_crypto_key_type_t ctype.166;
  int D.38621;
  uint8_t D.46741;
  struct switch_rtp_t * D.46740;
  char * D.46738;
  switch_rtp_crypto_key_type_t D.46737;
  struct switch_channel_t * D.46734;
  switch_rtp_crypto_key_type_t D.46733;
  const char * D.46730;
  char * D.46729;
  switch_rtp_crypto_key_type_t D.46728;
  unsigned int D.46727;
  struct switch_rtp_engine_t[2] * D.46726;
  struct switch_media_handle_t * D.46725;
  switch_rtp_crypto_mode_t D.46722;

<bb 2>:
  got_crypto_6 = 0;
  # DEBUG got_crypto => got_crypto_6
  i_7 = 0;
  # DEBUG i => i_7
  ctype_8 = 0;
  # DEBUG ctype => ctype_8
  vval_9 = 0B;
  # DEBUG vval => vval_9
  smh_11 = session_10(D)->media_handle;
  # DEBUG smh => smh_11
  if (smh_11 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  got_crypto_12 = 0;
  goto <bb 45>;

<bb 4>:
  D.46722_13 = smh_11->crypto_mode;
  if (D.46722_13 == 2)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  got_crypto_14 = -1;
  goto <bb 45>;

<bb 6>:
  D.46725_15 = session_10(D)->media_handle;
  D.46726_16 = &D.46725_15->engines;
  D.46727_18 = type_17(D) * 11416;
  engine_19 = D.46726_16 + D.46727_18;
  # DEBUG engine => engine_19
  i_20 = 0;
  # DEBUG i => i_20
  goto <bb 10>;

<bb 7>:
  D.46728_22 = smh_11->crypto_suite_order[i_2];
  j_23 = SUITES[D.46728_22].type;
  # DEBUG j => j_23
  D.46729_24 = SUITES[j_23].name;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1179, session_10(D), 7, "looking for crypto suite [%s] in [%s]\n", D.46729_24, crypto_25(D));
  D.46729_26 = SUITES[j_23].name;
  D.46730_27 = switch_stristr (D.46729_26, crypto_25(D));
  if (D.46730_27 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.46733_28 = SUITES[j_23].type;
  ctype_29 = (int) D.46733_28;
  # DEBUG ctype => ctype_29
  vval_30 = SUITES[j_23].name;
  # DEBUG vval => vval_30
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1184, session_10(D), 7, "Found suite %s\n", vval_30);
  D.46734_31 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_31, "rtp_secure_media_negotiated", vval_30, 1);
  goto <bb 11>;

<bb 9>:
  i_32 = i_2 + 1;
  # DEBUG i => i_32

<bb 10>:
  # i_2 = PHI <i_20(6), i_32(9)>
  # DEBUG i => i_2
  D.46728_21 = smh_11->crypto_suite_order[i_2];
  if (D.46728_21 != 9)
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 11>:
  # ctype_3 = PHI <ctype_29(8), ctype_8(10)>
  # vval_4 = PHI <vval_30(8), vval_9(10)>
  # DEBUG vval => vval_4
  # DEBUG ctype => ctype_3
  D.46737_33 = engine_19->crypto_type;
  D.46738_34 = engine_19->ssec[D.46737_33].remote_crypto_key;
  if (D.46738_34 != 0B)
    goto <bb 12>;
  else
    goto <bb 32>;

<bb 12>:
  D.46740_35 = engine_19->rtp_session;
  D.46741_36 = switch_rtp_ready (D.46740_35);
  if (D.46741_36 != 0)
    goto <bb 13>;
  else
    goto <bb 32>;

<bb 13>:
  if (crypto_25(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 17>;

<bb 14>:
  D.46737_37 = engine_19->crypto_type;
  if (D.46737_37 != 9)
    goto <bb 15>;
  else
    goto <bb 17>;

<bb 15>:
  D.46737_38 = engine_19->crypto_type;
  D.46738_39 = engine_19->ssec[D.46737_38].remote_crypto_key;
  D.38621_40 = __builtin_strcmp (crypto_25(D), D.46738_39);
  if (D.38621_40 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1193, session_10(D), 7, "Existing key is still valid.\n");
  got_crypto_41 = 1;
  # DEBUG got_crypto => got_crypto_41
  goto <bb 44> (end);

<bb 17>:
  D.46737_42 = engine_19->crypto_type;
  D.46738_43 = engine_19->ssec[D.46737_42].remote_crypto_key;
  a_44 = switch_stristr ("AE", D.46738_43);
  # DEBUG a => a_44
  b_45 = switch_stristr ("AE", crypto_25(D));
  # DEBUG b => b_45
  if (sdp_type_46(D) == 0)
    goto <bb 18>;
  else
    goto <bb 21>;

<bb 18>:
  if (vval_4 == 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1201, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 44> (end);

<bb 20>:
  D.46734_47 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_47, varname_48(D), vval_4, 1);
  D.46725_49 = session_10(D)->media_handle;
  ctype.166_50 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_49, type_17(D), crypto_tag_51(D), ctype.166_50, 0, 1);
  D.46740_52 = engine_19->rtp_session;
  # DEBUG __nptr => crypto_25(D)
  D.47412_185 = strtol (crypto_25(D), 0B, 10);
  D.47412_189 = D.47412_185;
  D.47412_53 = D.47412_189;
  D.46754_54 = (uint32_t) D.47412_53;
  D.46737_55 = engine_19->crypto_type;
  D.46755_56 = engine_19->ssec[D.46737_55].crypto_type;
  D.46737_57 = engine_19->crypto_type;
  D.46756_58 = &engine_19->ssec[D.46737_57].local_raw_key;
  D.46757_59 = SUITES[ctype_3].keylen;
  D.46758_60 = (switch_size_t) D.46757_59;
  switch_rtp_add_crypto_key (D.46740_52, 0, D.46754_54, D.46755_56, D.46756_58, D.46758_60);

<bb 21>:
  D.46761_61 = a_44 != 0B;
  D.46762_62 = b_45 != 0B;
  D.46763_63 = D.46761_61 && D.46762_62;
  if (D.46763_63 != 0)
    goto <bb 22>;
  else
    goto <bb 31>;

<bb 22>:
  D.46765_64 = strncasecmp (a_44, b_45, 23);
  if (D.46765_64 == 0)
    goto <bb 23>;
  else
    goto <bb 31>;

<bb 23>:
  ctype.166_65 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_65;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1214, session_10(D), 7, "Change Remote key to [%s]\n", crypto_25(D));
  D.46737_66 = engine_19->crypto_type;
  D.46767_67 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1215);
  engine_19->ssec[D.46737_66].remote_crypto_key = D.46767_67;
  D.46768_68 = engine_19->type;
  if (D.46768_68 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.46734_69 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_69, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_70 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_70, "srtp_remote_audio_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_71 = session_10(D)->channel;
  ctype.166_72 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46771_73 = switch_core_media_crypto_type2str (ctype.166_72);
  switch_channel_set_variable_printf (D.46734_71, "srtp_remote_audio_crypto_type", "%s", D.46771_73);
  goto <bb 27>;

<bb 25>:
  D.46768_74 = engine_19->type;
  if (D.46768_74 == 1)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  D.46734_75 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_75, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_76 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_76, "srtp_remote_video_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_77 = session_10(D)->channel;
  ctype.166_78 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46775_79 = switch_core_media_crypto_type2str (ctype.166_78);
  switch_channel_set_variable_printf (D.46734_77, "srtp_remote_video_crypto_type", "%s", D.46775_79);

<bb 27>:
  D.46737_80 = engine_19->crypto_type;
  engine_19->ssec[D.46737_80].crypto_tag = crypto_tag_51(D);
  D.46740_81 = engine_19->rtp_session;
  D.46776_82 = switch_rtp_ready (D.46740_81);
  if (D.46776_82 != 0)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.46734_83 = session_10(D)->channel;
  D.46779_84 = switch_channel_test_flag (D.46734_83, 92);
  if (D.46779_84 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.46782_85 = &engine_19->ssec;
  D.46737_86 = engine_19->crypto_type;
  D.46783_87 = D.46737_86 * 144;
  D.46784_88 = D.46782_85 + D.46783_87;
  D.46737_89 = engine_19->crypto_type;
  D.46738_90 = engine_19->ssec[D.46737_89].remote_crypto_key;
  switch_core_media_add_crypto (D.46784_88, D.46738_90, 1);
  D.46740_91 = engine_19->rtp_session;
  D.46737_92 = engine_19->crypto_type;
  D.46785_93 = engine_19->ssec[D.46737_92].crypto_tag;
  D.46786_94 = (uint32_t) D.46785_93;
  D.46737_95 = engine_19->crypto_type;
  D.46755_96 = engine_19->ssec[D.46737_95].crypto_type;
  D.46737_97 = engine_19->crypto_type;
  D.46787_98 = &engine_19->ssec[D.46737_97].remote_raw_key;
  D.46737_99 = engine_19->crypto_type;
  D.46755_100 = engine_19->ssec[D.46737_99].crypto_type;
  D.46788_101 = SUITES[D.46755_100].keylen;
  D.46789_102 = (switch_size_t) D.46788_101;
  switch_rtp_add_crypto_key (D.46740_91, 1, D.46786_94, D.46755_100, D.46787_98, D.46789_102);

<bb 30>:
  got_crypto_103 = got_crypto_6 + 1;
  # DEBUG got_crypto => got_crypto_103
  goto <bb 44> (end);

<bb 31>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1238, session_10(D), 7, "Ignoring unacceptable key\n");
  goto <bb 44> (end);

<bb 32>:
  D.46740_104 = engine_19->rtp_session;
  D.46790_105 = switch_rtp_ready (D.46740_104);
  if (D.46790_105 == 0)
    goto <bb 33>;
  else
    goto <bb 44> (end);

<bb 33>:
  if (vval_4 == 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1244, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 44> (end);

<bb 35>:
  ctype.166_106 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_106;
  D.46737_107 = engine_19->crypto_type;
  D.46795_108 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1249);
  engine_19->ssec[D.46737_107].remote_crypto_key = D.46795_108;
  D.46737_109 = engine_19->crypto_type;
  D.46738_110 = engine_19->ssec[D.46737_109].remote_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1250, session_10(D), 7, "Set Remote Key [%s]\n", D.46738_110);
  D.46768_111 = engine_19->type;
  if (D.46768_111 == 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.46734_112 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_112, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_113 = session_10(D)->channel;
  ctype.166_114 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46798_115 = switch_core_media_crypto_type2str (ctype.166_114);
  switch_channel_set_variable_printf (D.46734_113, "srtp_remote_audio_crypto_type", "%s", D.46798_115);
  goto <bb 39>;

<bb 37>:
  D.46768_116 = engine_19->type;
  if (D.46768_116 == 1)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.46734_117 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_117, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_118 = session_10(D)->channel;
  ctype.166_119 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46802_120 = switch_core_media_crypto_type2str (ctype.166_119);
  switch_channel_set_variable_printf (D.46734_118, "srtp_remote_video_crypto_type", "%s", D.46802_120);

<bb 39>:
  D.46737_121 = engine_19->crypto_type;
  engine_19->ssec[D.46737_121].crypto_tag = crypto_tag_51(D);
  got_crypto_122 = got_crypto_6 + 1;
  # DEBUG got_crypto => got_crypto_122
  D.46734_123 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_123, varname_48(D), vval_4, 1);
  D.46803_124 = smh_11->session;
  D.46804_125 = D.46803_124->channel;
  switch_channel_set_flag_value (D.46804_125, 92, 1);
  D.46737_126 = engine_19->crypto_type;
  D.46805_127 = engine_19->ssec[D.46737_126].local_crypto_key;
  # DEBUG s => D.46805_127
  if (D.46805_127 == 0B)
    goto <bb 42>;
  else
    goto <bb 40>;

<bb 40>:
  D.47416_186 = MEM[(const char *)D.46805_127];
  if (D.47416_186 == 0)
    goto <bb 42>;
  else
    goto <bb 41>;

<bb 41>:

<bb 42>:
  # D.47415_187 = PHI <1(39), 1(40), 0(41)>
  D.47415_190 = D.47415_187;
  D.47415_128 = D.47415_190;
  if (D.47415_128 != 0)
    goto <bb 43>;
  else
    goto <bb 44> (end);

<bb 43>:
  D.46725_129 = session_10(D)->media_handle;
  ctype.166_130 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_129, type_17(D), crypto_tag_51(D), ctype.166_130, 0, 1);

  # got_crypto_1 = PHI <got_crypto_6(19), got_crypto_103(30), got_crypto_6(32), got_crypto_6(34), got_crypto_122(42), got_crypto_122(43), got_crypto_41(16), got_crypto_6(31)>
end:
  # DEBUG got_crypto => got_crypto_1
  got_crypto_131 = got_crypto_1;

<bb 45>:
  # got_crypto_5 = PHI <got_crypto_12(3), got_crypto_14(5), got_crypto_131(44)>
  return got_crypto_5;

}



;; Function switch_media_handle_create (switch_media_handle_create)

Try : D.47420_121(P121) & D.47422_120(P120) --> P121 D.47420
Try : D.46464_10(P10) & D.47420_121(P121) --> P121 D.47420
Try : D.46497_78(P78) & status_1(P1) --> P78 status
Try : i_2(P2) & i_24(P24) : Same root, coalesced --> P2.
Try : i_2(P2) & i_27(P27) : Same root, coalesced --> P2.
Try : i_3(P3) & i_31(P31) : Same root, coalesced --> P3.
Try : i_3(P3) & i_34(P34) : Same root, coalesced --> P3.
Try : i_4(P4) & i_36(P36) : Same root, coalesced --> P4.
Try : i_4(P4) & i_38(P38) : Same root, coalesced --> P4.
Try : status_1(P78) & status_5(P5) : Same root, coalesced --> P78.
Try : status_1(P78) & status_77(P77) : Same root, coalesced --> P78.

Partition map 

Partition 2 (i_2 - 2 24 27 )
Partition 3 (i_3 - 3 31 34 )
Partition 4 (i_4 - 4 36 38 )
Partition 6 (smh_6 - 6 )
Partition 7 (smhp_7(D) - 7 )
Partition 8 (params_8(D) - 8 )
Partition 9 (D.46463_9 - 9 )
Partition 11 (session_11(D) - 11 )
Partition 12 (D.46467_12 - 12 )
Partition 13 (D.46468_13 - 13 )
Partition 14 (D.46468_14 - 14 )
Partition 15 (D.46468_15 - 15 )
Partition 16 (D.46468_16 - 16 )
Partition 17 (D.46468_17 - 17 )
Partition 18 (D.46471_18 - 18 )
Partition 19 (D.46472_19 - 19 )
Partition 20 (D.46468_20 - 20 )
Partition 21 (D.46468_21 - 21 )
Partition 22 (D.46468_22 - 22 )
Partition 23 (D.46468_23 - 23 )
Partition 25 (D.46468_25 - 25 )
Partition 26 (i.136_26 - 26 )
Partition 28 (D.46468_28 - 28 )
Partition 29 (D.46468_29 - 29 )
Partition 30 (D.46468_30 - 30 )
Partition 32 (D.46468_32 - 32 )
Partition 33 (i.136_33 - 33 )
Partition 35 (D.46468_35 - 35 )
Partition 37 (D.46468_37 - 37 )
Partition 39 (D.46468_39 - 39 )
Partition 40 (D.46474_40 - 40 )
Partition 41 (D.46475_41 - 41 )
Partition 42 (D.46468_42 - 42 )
Partition 43 (D.46476_43 - 43 )
Partition 44 (D.46477_44 - 44 )
Partition 45 (D.46468_45 - 45 )
Partition 46 (D.46468_46 - 46 )
Partition 47 (D.46478_47 - 47 )
Partition 48 (D.46479_48 - 48 )
Partition 49 (D.46480_49 - 49 )
Partition 50 (D.46481_50 - 50 )
Partition 51 (D.46482_51 - 51 )
Partition 52 (D.46468_52 - 52 )
Partition 53 (D.46468_53 - 53 )
Partition 54 (D.46483_54 - 54 )
Partition 55 (D.46484_55 - 55 )
Partition 56 (D.46485_56 - 56 )
Partition 57 (D.46486_57 - 57 )
Partition 58 (D.46487_58 - 58 )
Partition 59 (D.46488_59 - 59 )
Partition 60 (D.46468_60 - 60 )
Partition 61 (D.46489_61 - 61 )
Partition 62 (D.46490_62 - 62 )
Partition 63 (D.46468_63 - 63 )
Partition 64 (D.46468_64 - 64 )
Partition 65 (D.46491_65 - 65 )
Partition 66 (D.46468_66 - 66 )
Partition 67 (D.46492_67 - 67 )
Partition 68 (D.46468_68 - 68 )
Partition 69 (D.46489_69 - 69 )
Partition 70 (D.46493_70 - 70 )
Partition 71 (D.46468_71 - 71 )
Partition 72 (D.46468_72 - 72 )
Partition 73 (D.46494_73 - 73 )
Partition 74 (D.46468_74 - 74 )
Partition 75 (D.46495_75 - 75 )
Partition 76 (D.46496_76 - 76 )
Partition 78 (status_78 - 1 5 77 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83(D) - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89 - 89 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (D.47421_119 - 119 )
Partition 121 (D.47420_121 - 10 120 121 )

Coalesced D.46464_10 to D.47420_121
Coalesced D.47422_120 to D.47420_121
Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;
  struct switch_media_handle_t * smh;
  int i;
  static const char __func__[27] = "switch_media_handle_create";

  { Scope block #94 src/switch_core_media.c:1421 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #95 Originating from :#0 

    }

  }

}
switch_media_handle_create (struct switch_media_handle_t * * smhp, struct switch_core_session_t * session, struct switch_core_media_params_t * params)
{
  const char D.47421;
  int D.47420;
  static const char __func__[27] = "switch_media_handle_create";
  int i;
  struct switch_media_handle_t * smh;
  switch_status_t status;
  struct switch_channel_t * D.46496;
  struct payload_map_t * D.46495;
  struct payload_map_t * D.46494;
  void * D.46493;
  struct payload_map_t * D.46492;
  struct payload_map_t * D.46491;
  void * D.46490;
  struct switch_memory_pool_t * D.46489;
  unsigned int D.46488;
  unsigned int D.46487;
  unsigned int D.46486;
  time_t D.46485;
  unsigned int D.46484;
  struct switch_rtp_engine_t * D.46483;
  unsigned int D.46482;
  unsigned int D.46481;
  time_t D.46480;
  unsigned int D.46479;
  struct switch_rtp_engine_t[2] * D.46478;
  struct switch_memory_pool_t * D.46477;
  struct switch_mutex_t * * D.46476;
  struct switch_memory_pool_t * D.46475;
  struct switch_mutex_t * * D.46474;
  switch_rtp_crypto_key_type_t i.136;
  unsigned int D.46472;
  smh_flag_t D.46471;
  struct switch_media_handle_t * D.46468;
  void * D.46467;
  char * D.46463;

<bb 2>:
  status_5 = 1;
  # DEBUG status => status_5
  smh_6 = 0B;
  # DEBUG smh => smh_6
  *smhp_7(D) = 0B;
  D.46463_9 = params_8(D)->sdp_username;
  # DEBUG s => D.46463_9
  if (D.46463_9 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

<bb 3>:
  D.47421_119 = MEM[(const char *)D.46463_9];
  if (D.47421_119 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:

<bb 5>:
  # D.47420_120 = PHI <1(2), 1(3), 0(4)>
  D.47420_121 = D.47420_120;
  D.47420_10 = D.47420_121;
  if (D.47420_10 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  params_8(D)->sdp_username = "FreeSWITCH";

<bb 7>:
  D.46467_12 = switch_core_perform_session_alloc (session_11(D), 23856, "src/switch_core_media.c", &__func__, 1426);
  session_11(D)->media_handle = D.46467_12;
  D.46468_13 = session_11(D)->media_handle;
  if (D.46468_13 != 0B)
    goto <bb 8>;
  else
    goto <bb 18>;

<bb 8>:
  D.46468_14 = session_11(D)->media_handle;
  D.46468_14->session = session_11(D);
  D.46468_15 = session_11(D)->media_handle;
  *smhp_7(D) = D.46468_15;
  D.46468_16 = session_11(D)->media_handle;
  D.46468_17 = session_11(D)->media_handle;
  D.46471_18 = D.46468_17->flags;
  D.46472_19 = D.46471_18 | 1;
  D.46468_17->flags = D.46472_19;
  D.46468_20 = session_11(D)->media_handle;
  D.46468_20->media_flags[0] = 1;
  D.46468_21 = session_11(D)->media_handle;
  D.46468_21->engines[0].read_frame.buflen = 16384;
  D.46468_22 = session_11(D)->media_handle;
  D.46468_22->engines[0].type = 0;
  D.46468_23 = session_11(D)->media_handle;
  D.46468_23->engines[0].crypto_type = 9;
  i_24 = 0;
  # DEBUG i => i_24
  goto <bb 10>;

<bb 9>:
  D.46468_25 = session_11(D)->media_handle;
  i.136_26 = (switch_rtp_crypto_key_type_t) i_2;
  D.46468_25->engines[0].ssec[i_2].crypto_type = i.136_26;
  i_27 = i_2 + 1;
  # DEBUG i => i_27

<bb 10>:
  # i_2 = PHI <i_24(8), i_27(9)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 9>;
  else
    goto <bb 11>;

<bb 11>:
  D.46468_28 = session_11(D)->media_handle;
  D.46468_28->engines[1].read_frame.buflen = 16384;
  D.46468_29 = session_11(D)->media_handle;
  D.46468_29->engines[1].type = 1;
  D.46468_30 = session_11(D)->media_handle;
  D.46468_30->engines[1].crypto_type = 9;
  i_31 = 0;
  # DEBUG i => i_31
  goto <bb 13>;

<bb 12>:
  D.46468_32 = session_11(D)->media_handle;
  i.136_33 = (switch_rtp_crypto_key_type_t) i_3;
  D.46468_32->engines[1].ssec[i_3].crypto_type = i.136_33;
  i_34 = i_3 + 1;
  # DEBUG i => i_34

<bb 13>:
  # i_3 = PHI <i_31(11), i_34(12)>
  # DEBUG i => i_3
  if (i_3 <= 8)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 14>:
  D.46468_35 = session_11(D)->media_handle;
  D.46468_35->mparams = params_8(D);
  i_36 = 0;
  # DEBUG i => i_36
  goto <bb 16>;

<bb 15>:
  D.46468_37 = session_11(D)->media_handle;
  D.46468_37->crypto_suite_order[i_4] = 9;
  i_38 = i_4 + 1;
  # DEBUG i => i_38

<bb 16>:
  # i_4 = PHI <i_36(14), i_38(15)>
  # DEBUG i => i_4
  if (i_4 <= 9)
    goto <bb 15>;
  else
    goto <bb 17>;

<bb 17>:
  D.46468_39 = session_11(D)->media_handle;
  D.46474_40 = &D.46468_39->mutex;
  D.46475_41 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46474_40, 1, D.46475_41);
  D.46468_42 = session_11(D)->media_handle;
  D.46476_43 = &D.46468_42->sdp_mutex;
  D.46477_44 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46476_43, 1, D.46477_44);
  D.46468_45 = session_11(D)->media_handle;
  D.46468_46 = session_11(D)->media_handle;
  D.46478_47 = &D.46468_46->engines;
  D.46479_48 = (unsigned int) D.46478_47;
  D.46480_49 = time (0B);
  D.46481_50 = (unsigned int) D.46480_49;
  D.46482_51 = D.46479_48 + D.46481_50;
  D.46468_46->engines[0].ssrc = D.46482_51;
  D.46468_52 = session_11(D)->media_handle;
  D.46468_53 = session_11(D)->media_handle;
  D.46483_54 = &D.46468_53->engines[1];
  D.46484_55 = (unsigned int) D.46483_54;
  D.46485_56 = time (0B);
  D.46486_57 = (unsigned int) D.46485_56;
  D.46487_58 = D.46486_57 / 2;
  D.46488_59 = D.46484_55 + D.46487_58;
  D.46468_53->engines[1].ssrc = D.46488_59;
  D.46468_60 = session_11(D)->media_handle;
  D.46489_61 = session_11(D)->pool;
  D.46490_62 = switch_core_perform_alloc (D.46489_61, 84, "src/switch_core_media.c", &__func__, 1464);
  D.46468_60->engines[0].payload_map = D.46490_62;
  D.46468_63 = session_11(D)->media_handle;
  D.46468_64 = session_11(D)->media_handle;
  D.46491_65 = D.46468_64->engines[0].payload_map;
  D.46468_64->engines[0].cur_payload_map = D.46491_65;
  D.46468_66 = session_11(D)->media_handle;
  D.46492_67 = D.46468_66->engines[0].cur_payload_map;
  D.46492_67->current = 1;
  D.46468_68 = session_11(D)->media_handle;
  D.46489_69 = session_11(D)->pool;
  D.46493_70 = switch_core_perform_alloc (D.46489_69, 84, "src/switch_core_media.c", &__func__, 1467);
  D.46468_68->engines[1].payload_map = D.46493_70;
  D.46468_71 = session_11(D)->media_handle;
  D.46468_72 = session_11(D)->media_handle;
  D.46494_73 = D.46468_72->engines[1].payload_map;
  D.46468_72->engines[1].cur_payload_map = D.46494_73;
  D.46468_74 = session_11(D)->media_handle;
  D.46495_75 = D.46468_74->engines[1].cur_payload_map;
  D.46495_75->current = 1;
  D.46496_76 = session_11(D)->channel;
  switch_channel_set_flag_value (D.46496_76, 111, 1);
  status_77 = 0;
  # DEBUG status => status_77

<bb 18>:
  # status_1 = PHI <status_5(7), status_77(17)>
  # DEBUG status => status_1
  status_78 = status_1;
  return status_78;

}



;; Function switch_media_handle_set_media_flag (switch_media_handle_set_media_flag)


Partition map 

Partition 1 (smh_1(D) - 1 )
Partition 2 (flag_2(D) - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )

switch_media_handle_set_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_media_handle_set_media_flag";

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1482, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_1(D)->media_flags[flag_2(D)] = 1;
  return;

}



;; Function switch_media_handle_set_media_flags (switch_media_handle_set_media_flags)

Try : i_1(P1) & i_3(P3) : Same root, coalesced --> P1.
Try : i_1(P1) & i_13(P13) : Same root, coalesced --> P1.

Partition map 

Partition 1 (i_1 - 1 3 13 )
Partition 2 (smh_2(D) - 2 )
Partition 4 (i.135_4 - 4 )
Partition 5 (D.46456_5 - 5 )
Partition 6 (flags_6(D) - 6 )
Partition 7 (D.46457_7 - 7 )
Partition 8 (D.46458_8 - 8 )
Partition 9 (i.135_9 - 9 )
Partition 10 (D.46456_10 - 10 )
Partition 11 (D.46457_11 - 11 )
Partition 12 (D.46458_12 - 12 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15 - 15 )
Partition 16 (.MEM_16(D) - 16 )
Partition 17 (.MEM_17 - 17 )

switch_media_handle_set_media_flags (struct switch_media_handle_t * smh, switch_core_media_flag_t * flags)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_set_media_flags";
  int i;
  switch_core_media_flag_t D.46458;
  switch_core_media_flag_t * D.46457;
  unsigned int D.46456;
  unsigned int i.135;

<bb 2>:
  if (smh_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1491, &__PRETTY_FUNCTION__);

<bb 4>:
  i_3 = 0;
  # DEBUG i => i_3
  goto <bb 8>;

<bb 5>:
  i.135_4 = (unsigned int) i_1;
  D.46456_5 = i.135_4 * 4;
  D.46457_7 = flags_6(D) + D.46456_5;
  D.46458_8 = *D.46457_7;
  if (D.46458_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  i.135_9 = (unsigned int) i_1;
  D.46456_10 = i.135_9 * 4;
  D.46457_11 = flags_6(D) + D.46456_10;
  D.46458_12 = *D.46457_11;
  smh_2(D)->media_flags[i_1] = D.46458_12;

<bb 7>:
  i_13 = i_1 + 1;
  # DEBUG i => i_13

<bb 8>:
  # i_1 = PHI <i_3(4), i_13(7)>
  # DEBUG i => i_1
  if (i_1 <= 16)
    goto <bb 5>;
  else
    goto <bb 9>;

<bb 9>:
  return;

}



;; Function switch_media_handle_clear_media_flag (switch_media_handle_clear_media_flag)


Partition map 

Partition 1 (smh_1(D) - 1 )
Partition 2 (flag_2(D) - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )

switch_media_handle_clear_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[37] = "switch_media_handle_clear_media_flag";

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1503, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_1(D)->media_flags[flag_2(D)] = 0;
  return;

}



;; Function switch_media_handle_test_media_flag (switch_media_handle_test_media_flag)


Partition map 

Partition 1 (smh_1(D) - 1 )
Partition 2 (flag_2(D) - 2 )
Partition 3 (D.46449_3 - 3 )
Partition 4 (D.46448_4 - 4 )
Partition 5 (.MEM_5(D) - 5 )

switch_media_handle_test_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_test_media_flag";
  switch_core_media_flag_t D.46449;
  int32_t D.46448;

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1510, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46449_3 = smh_1(D)->media_flags[flag_2(D)];
  D.46448_4 = (int32_t) D.46449_3;
  return D.46448_4;

}



;; Function generate_m (generate_m)

Try : ptime_53(P53) & this_ptime_10(P10) : 2 different USER vars. No coalesce.
Try : ptime_106(P106) & this_ptime_13(P13) : 2 different USER vars. No coalesce.
Try : fmtp_123(P123) & check_14(P14) : 2 different USER vars. No coalesce.
Try : D.47441_469(P469) & D.47443_456(P456) --> P469 D.47441
Try : D.42740_181(P181) & D.47441_469(P469) --> P469 D.47441
Try : D.47445_470(P470) & D.47447_458(P458) --> P470 D.47445
Try : D.42811_255(P255) & D.47445_470(P470) --> P470 D.47445
Try : D.47449_471(P471) & D.47451_460(P460) --> P471 D.47449
Try : D.42814_257(P257) & D.47449_471(P471) --> P471 D.47449
Try : D.47453_472(P472) & D.47455_462(P462) --> P472 D.47453
Try : D.42837_289(P289) & D.47453_472(P472) --> P472 D.47453
Try : D.47457_473(P473) & D.47459_464(P464) --> P473 D.47457
Try : D.42841_291(P291) & D.47457_473(P473) --> P473 D.47457
Try : D.47461_474(P474) & D.47463_466(P466) --> P474 D.47461
Try : D.42864_323(P323) & D.47461_474(P474) --> P474 D.47461
Try : iftmp.42_344(P344) & append_audio_335(D)(P335) --> P344 append_audio
Try : cur_ptime_348(P348) & ptime_9(P9) : 2 different USER vars. No coalesce.
Try : D.47465_475(P475) & D.47467_468(P468) --> P475 D.47465
Try : D.42915_362(P362) & D.47465_475(P475) --> P475 D.47465
Try : iftmp.40_16(P16) & iftmp.40_38(P38) : Same root, coalesced --> P16.
Try : iftmp.40_16(P16) & iftmp.40_37(P37) : Same root, coalesced --> P16.
Try : this_ptime_10(P10) & this_ptime_45(P45) : Same root, coalesced --> P10.
Try : this_ptime_10(P10) & this_ptime_50(P50) : Same root, coalesced --> P10.
Try : ptime_4(P4) & ptime_6(P6) : Same root, coalesced --> P4.
Try : ptime_4(P4) & ptime_53(P53) : Same root, coalesced --> P4.
Try : ptime_4(P4) & ptime_6(P4) : Already coalesced.
Try : ptime_4(P4) & ptime_6(P4) : Already coalesced.
Try : ptime_5(P5) & ptime_6(P4) : Same root, coalesced --> P4.
Try : ptime_5(P4) & ptime_6(P4) : Already coalesced.
Try : ptime_5(P4) & ptime_4(P4) : Already coalesced.
Try : ptime_5(P4) & ptime_4(P4) : Already coalesced.
Try : i_2(P2) & i_40(P40) : Same root, coalesced --> P2.
Try : i_2(P2) & i_67(P67) : Same root, coalesced --> P2.
Try : ptime_6(P4) & ptime_20(P20) : Same root, coalesced --> P4.
Try : ptime_6(P4) & ptime_5(P4) : Already coalesced.
Try : this_ptime_13(P13) & this_ptime_99(P99) : Same root, coalesced --> P13.
Try : this_ptime_13(P13) & this_ptime_105(P105) : Same root, coalesced --> P13.
Try : ptime_7(P7) & ptime_9(P9) : Same root, coalesced --> P7.
Try : ptime_7(P7) & ptime_106(P106) : Same root, coalesced --> P7.
Try : ptime_7(P7) & ptime_9(P7) : Already coalesced.
Try : ptime_7(P7) & ptime_9(P7) : Already coalesced.
Try : check_14(P14) & check_120(P120) : Same root, coalesced --> P14.
Try : check_14(P14) & check_122(P122) : Same root, coalesced --> P14.
Try : fmtp_11(P11) & fmtp_97(P97) : Same root, coalesced --> P11.
Try : fmtp_11(P11) & fmtp_97(P11) : Already coalesced.
Try : fmtp_11(P11) & fmtp_123(P123) : Same root, coalesced --> P11.
Try : fmtp_12(P12) & fmtp_11(P11) : Same root, coalesced --> P11.
Try : fmtp_12(P11) & fmtp_125(P125) : Same root, coalesced --> P11.
Try : ptime_8(P8) & ptime_9(P7) : Same root, coalesced --> P7.
Try : ptime_8(P7) & ptime_9(P7) : Already coalesced.
Try : ptime_8(P7) & ptime_7(P7) : Already coalesced.
Try : ptime_8(P7) & ptime_7(P7) : Already coalesced.
Try : ptime_8(P7) & ptime_7(P7) : Already coalesced.
Try : i_3(P3) & i_93(P93) : Same root, coalesced --> P3.
Try : i_3(P3) & i_153(P153) : Same root, coalesced --> P3.
Try : ptime_9(P7) & ptime_6(P4) : Same root, coalesced --> P4.
Try : ptime_9(P4) & ptime_8(P4) : Already coalesced.
Try : i_15(P15) & i_316(P316) : Same root, coalesced --> P15.
Try : i_15(P15) & i_329(P329) : Same root, coalesced --> P15.
Try : iftmp.42_18(P18) & iftmp.42_343(P343) : Same root, coalesced --> P18.
Try : iftmp.42_18(P18) & append_audio_344(P344) --> P18 append_audio
Try : iftmp.41_17(P17) & iftmp.41_346(P346) : Same root, coalesced --> P17.
Try : iftmp.41_17(P17) & iftmp.41_347(P347) : Same root, coalesced --> P17.
Try : cur_ptime_1(P1) & cur_ptime_52(D)(P52) : Same root, coalesced --> P1.
Try : cur_ptime_1(P1) & cur_ptime_348(P348) : Same root, coalesced --> P1.

Partition map 

Partition 1 (cur_ptime_1 - 1 52 348 )
Partition 2 (i_2 - 2 40 67 )
Partition 3 (i_3 - 3 93 153 )
Partition 4 (ptime_4 - 4 5 6 7 8 9 20 53 106 )
Partition 10 (this_ptime_10 - 10 45 50 )
Partition 11 (fmtp_11 - 11 12 97 123 125 )
Partition 13 (this_ptime_13 - 13 99 105 )
Partition 14 (check_14 - 14 120 122 )
Partition 15 (i_15 - 15 316 329 )
Partition 16 (iftmp.40_16 - 16 37 38 )
Partition 17 (iftmp.41_17 - 17 346 347 )
Partition 18 (append_audio_18 - 18 335 343 344 )
Partition 19 (i_19 - 19 )
Partition 21 (noptime_21 - 21 )
Partition 22 (session_22(D) - 22 )
Partition 23 (smh_23 - 23 )
Partition 24 (a_engine_24 - 24 )
Partition 25 (buf_25(D) - 25 )
Partition 26 (D.42588_26 - 26 )
Partition 27 (D.42589_27 - 27 )
Partition 28 (D.42590_28 - 28 )
Partition 29 (buflen_29(D) - 29 )
Partition 30 (D.42591_30 - 30 )
Partition 31 (port_31(D) - 31 )
Partition 32 (D.42592_32 - 32 )
Partition 33 (secure_33(D) - 33 )
Partition 34 (D.42599_34 - 34 )
Partition 35 (D.42600_35 - 35 )
Partition 36 (D.42601_36 - 36 )
Partition 39 (D.42602_39 - 39 )
Partition 41 (D.42634_41 - 41 )
Partition 42 (D.42635_42 - 42 )
Partition 43 (imp_43 - 43 )
Partition 44 (D.42603_44 - 44 )
Partition 46 (D.42606_46 - 46 )
Partition 47 (D.42607_47 - 47 )
Partition 48 (D.42606_48 - 48 )
Partition 49 (D.42609_49 - 49 )
Partition 51 (D.42610_51 - 51 )
Partition 54 (D.42622_54 - 54 )
Partition 55 (D.42623_55 - 55 )
Partition 56 (D.42622_56 - 56 )
Partition 57 (D.42626_57 - 57 )
Partition 58 (D.42627_58 - 58 )
Partition 59 (D.42622_59 - 59 )
Partition 60 (D.42626_60 - 60 )
Partition 61 (D.42630_61 - 61 )
Partition 62 (D.42631_62 - 62 )
Partition 63 (D.42632_63 - 63 )
Partition 64 (D.42633_64 - 64 )
Partition 65 (D.42622_65 - 65 )
Partition 66 (D.42626_66 - 66 )
Partition 68 (D.42634_68 - 68 )
Partition 69 (D.42636_69 - 69 )
Partition 70 (D.42634_70 - 70 )
Partition 71 (D.42639_71 - 71 )
Partition 72 (D.42642_72 - 72 )
Partition 73 (D.42643_73 - 73 )
Partition 74 (D.42644_74 - 74 )
Partition 75 (D.42645_75 - 75 )
Partition 76 (D.42634_76 - 76 )
Partition 77 (D.42639_77 - 77 )
Partition 78 (D.42646_78 - 78 )
Partition 79 (D.42647_79 - 79 )
Partition 80 (cng_type_80(D) - 80 )
Partition 81 (D.42650_81 - 81 )
Partition 82 (use_cng_82(D) - 82 )
Partition 83 (D.42651_83 - 83 )
Partition 84 (D.42652_84 - 84 )
Partition 85 (D.42655_85 - 85 )
Partition 86 (D.42656_86 - 86 )
Partition 87 (D.42657_87 - 87 )
Partition 88 (D.42658_88 - 88 )
Partition 89 (D.42659_89 - 89 )
Partition 90 (D.42660_90 - 90 )
Partition 91 (D.42661_91 - 91 )
Partition 92 (D.42662_92 - 92 )
Partition 94 (D.42634_94 - 94 )
Partition 95 (D.42635_95 - 95 )
Partition 96 (imp_96 - 96 )
Partition 98 (D.42663_98 - 98 )
Partition 100 (D.42664_100 - 100 )
Partition 101 (D.42669_101 - 101 )
Partition 102 (D.42670_102 - 102 )
Partition 103 (D.42669_103 - 103 )
Partition 104 (D.42672_104 - 104 )
Partition 107 (D.42622_107 - 107 )
Partition 108 (D.42623_108 - 108 )
Partition 109 (D.42622_109 - 109 )
Partition 110 (D.42626_110 - 110 )
Partition 111 (D.42627_111 - 111 )
Partition 112 (D.42622_112 - 112 )
Partition 113 (D.42626_113 - 113 )
Partition 114 (D.42686_114 - 114 )
Partition 115 (rate_115 - 115 )
Partition 116 (map_116(D) - 116 )
Partition 117 (check_117 - 117 )
Partition 118 (D.42669_118 - 118 )
Partition 119 (D.42689_119 - 119 )
Partition 121 (D.42669_121 - 121 )
Partition 124 (D.42693_124 - 124 )
Partition 126 (D.42622_126 - 126 )
Partition 127 (D.42599_127 - 127 )
Partition 128 (D.42699_128 - 128 )
Partition 129 (D.42669_129 - 129 )
Partition 130 (D.42700_130 - 130 )
Partition 131 (D.42701_131 - 131 )
Partition 132 (channels_132 - 132 )
Partition 133 (D.42704_133 - 133 )
Partition 134 (D.42705_134 - 134 )
Partition 135 (D.42706_135 - 135 )
Partition 136 (D.42707_136 - 136 )
Partition 137 (D.42622_137 - 137 )
Partition 138 (D.42626_138 - 138 )
Partition 139 (D.42669_139 - 139 )
Partition 140 (D.42709_140 - 140 )
Partition 141 (D.42710_141 - 141 )
Partition 142 (D.42711_142 - 142 )
Partition 143 (D.42712_143 - 143 )
Partition 144 (D.42622_144 - 144 )
Partition 145 (D.42626_145 - 145 )
Partition 146 (D.42669_146 - 146 )
Partition 147 (D.42715_147 - 147 )
Partition 148 (D.42716_148 - 148 )
Partition 149 (D.42717_149 - 149 )
Partition 150 (D.42718_150 - 150 )
Partition 151 (D.42622_151 - 151 )
Partition 152 (D.42626_152 - 152 )
Partition 154 (D.42634_154 - 154 )
Partition 155 (D.42636_155 - 155 )
Partition 156 (D.42722_156 - 156 )
Partition 157 (D.42599_157 - 157 )
Partition 158 (D.42724_158 - 158 )
Partition 159 (D.42634_159 - 159 )
Partition 160 (D.42639_160 - 160 )
Partition 161 (D.42599_161 - 161 )
Partition 162 (D.42727_162 - 162 )
Partition 163 (D.42730_163 - 163 )
Partition 164 (D.42731_164 - 164 )
Partition 165 (D.42732_165 - 165 )
Partition 166 (D.42733_166 - 166 )
Partition 167 (D.42634_167 - 167 )
Partition 168 (D.42639_168 - 168 )
Partition 169 (D.42646_169 - 169 )
Partition 170 (D.42735_170 - 170 )
Partition 171 (D.42736_171 - 171 )
Partition 172 (D.42737_172 - 172 )
Partition 173 (D.42738_173 - 173 )
Partition 174 (D.42634_174 - 174 )
Partition 175 (D.42639_175 - 175 )
Partition 176 (D.42646_176 - 176 )
Partition 177 (D.42634_177 - 177 )
Partition 178 (D.42639_178 - 178 )
Partition 179 (D.42646_179 - 179 )
Partition 180 (D.42739_180 - 180 )
Partition 182 (D.42745_182 - 182 )
Partition 183 (D.42746_183 - 183 )
Partition 184 (D.42747_184 - 184 )
Partition 185 (D.42748_185 - 185 )
Partition 186 (D.42739_186 - 186 )
Partition 187 (D.42749_187 - 187 )
Partition 188 (D.42634_188 - 188 )
Partition 189 (D.42750_189 - 189 )
Partition 190 (D.42753_190 - 190 )
Partition 191 (D.42756_191 - 191 )
Partition 192 (D.42757_192 - 192 )
Partition 193 (D.42758_193 - 193 )
Partition 194 (D.42759_194 - 194 )
Partition 195 (D.42760_195 - 195 )
Partition 196 (D.42761_196 - 196 )
Partition 197 (D.42762_197 - 197 )
Partition 198 (D.42763_198 - 198 )
Partition 199 (D.42592_199 - 199 )
Partition 200 (family_200(D) - 200 )
Partition 201 (ip_201(D) - 201 )
Partition 202 (D.42765_202 - 202 )
Partition 203 (D.42766_203 - 203 )
Partition 204 (D.42767_204 - 204 )
Partition 205 (D.42768_205 - 205 )
Partition 206 (D.42592_206 - 206 )
Partition 207 (D.42769_207 - 207 )
Partition 208 (D.42770_208 - 208 )
Partition 209 (c1_209 - 209 )
Partition 210 (c2_210 - 210 )
Partition 211 (ice_out_211 - 211 )
Partition 212 (D.42773_212 - 212 )
Partition 213 (D.42774_213 - 213 )
Partition 214 (D.42775_214 - 214 )
Partition 215 (D.42776_215 - 215 )
Partition 216 (D.42777_216 - 216 )
Partition 217 (D.42778_217 - 217 )
Partition 218 (D.42779_218 - 218 )
Partition 219 (D.42780_219 - 219 )
Partition 220 (D.42781_220 - 220 )
Partition 221 (D.42782_221 - 221 )
Partition 222 (D.42777_222 - 222 )
Partition 223 (D.42783_223 - 223 )
Partition 224 (D.42784_224 - 224 )
Partition 225 (D.42785_225 - 225 )
Partition 226 (D.42786_226 - 226 )
Partition 227 (D.42787_227 - 227 )
Partition 228 (D.42777_228 - 228 )
Partition 229 (D.42783_229 - 229 )
Partition 230 (D.42788_230 - 230 )
Partition 231 (D.42789_231 - 231 )
Partition 232 (D.42790_232 - 232 )
Partition 233 (D.42791_233 - 233 )
Partition 234 (D.42777_234 - 234 )
Partition 235 (D.42783_235 - 235 )
Partition 236 (D.42792_236 - 236 )
Partition 237 (D.42793_237 - 237 )
Partition 238 (D.42794_238 - 238 )
Partition 239 (D.42795_239 - 239 )
Partition 240 (D.42796_240 - 240 )
Partition 241 (D.42797_241 - 241 )
Partition 242 (D.42798_242 - 242 )
Partition 243 (D.42799_243 - 243 )
Partition 244 (D.42800_244 - 244 )
Partition 245 (D.42801_245 - 245 )
Partition 246 (D.42802_246 - 246 )
Partition 247 (D.42803_247 - 247 )
Partition 248 (D.42804_248 - 248 )
Partition 249 (D.42805_249 - 249 )
Partition 250 (D.42806_250 - 250 )
Partition 251 (D.42807_251 - 251 )
Partition 252 (D.42808_252 - 252 )
Partition 253 (D.42809_253 - 253 )
Partition 254 (D.42810_254 - 254 )
Partition 256 (D.42807_256 - 256 )
Partition 258 (D.42810_258 - 258 )
Partition 259 (D.42807_259 - 259 )
Partition 260 (D.39479_260 - 260 )
Partition 261 (D.42819_261 - 261 )
Partition 262 (D.42808_262 - 262 )
Partition 263 (D.42822_263 - 263 )
Partition 264 (D.42823_264 - 264 )
Partition 265 (D.42824_265 - 265 )
Partition 266 (D.42825_266 - 266 )
Partition 267 (D.42806_267 - 267 )
Partition 268 (D.42807_268 - 268 )
Partition 269 (D.42808_269 - 269 )
Partition 270 (D.42809_270 - 270 )
Partition 271 (D.42810_271 - 271 )
Partition 272 (D.42819_272 - 272 )
Partition 273 (D.42826_273 - 273 )
Partition 274 (D.42753_274 - 274 )
Partition 275 (D.42599_275 - 275 )
Partition 276 (D.42830_276 - 276 )
Partition 277 (D.42831_277 - 277 )
Partition 278 (D.42832_278 - 278 )
Partition 279 (D.42833_279 - 279 )
Partition 280 (D.42834_280 - 280 )
Partition 281 (D.42806_281 - 281 )
Partition 282 (D.42807_282 - 282 )
Partition 283 (D.42808_283 - 283 )
Partition 284 (D.42809_284 - 284 )
Partition 285 (D.42753_285 - 285 )
Partition 286 (D.42835_286 - 286 )
Partition 287 (D.42836_287 - 287 )
Partition 288 (D.42810_288 - 288 )
Partition 290 (D.42840_290 - 290 )
Partition 292 (D.42810_292 - 292 )
Partition 293 (D.42840_293 - 293 )
Partition 294 (D.39488_294 - 294 )
Partition 295 (D.42819_295 - 295 )
Partition 296 (D.42846_296 - 296 )
Partition 297 (D.42849_297 - 297 )
Partition 298 (D.42850_298 - 298 )
Partition 299 (D.42851_299 - 299 )
Partition 300 (D.42852_300 - 300 )
Partition 301 (D.42806_301 - 301 )
Partition 302 (D.42807_302 - 302 )
Partition 303 (D.42808_303 - 303 )
Partition 304 (D.42809_304 - 304 )
Partition 305 (D.42753_305 - 305 )
Partition 306 (D.42835_306 - 306 )
Partition 307 (D.42836_307 - 307 )
Partition 308 (D.42810_308 - 308 )
Partition 309 (D.42819_309 - 309 )
Partition 310 (D.42826_310 - 310 )
Partition 311 (D.42753_311 - 311 )
Partition 312 (D.42835_312 - 312 )
Partition 313 (D.42853_313 - 313 )
Partition 314 (D.42599_314 - 314 )
Partition 315 (D.42856_315 - 315 )
Partition 317 (D.42859_317 - 317 )
Partition 318 (D.42859_318 - 318 )
Partition 319 (j_319 - 319 )
Partition 320 (D.42601_320 - 320 )
Partition 321 (D.42601_321 - 321 )
Partition 322 (D.42863_322 - 322 )
Partition 324 (D.42867_324 - 324 )
Partition 325 (D.42868_325 - 325 )
Partition 326 (D.42869_326 - 326 )
Partition 327 (D.42870_327 - 327 )
Partition 328 (D.42863_328 - 328 )
Partition 330 (D.42873_330 - 330 )
Partition 331 (D.42876_331 - 331 )
Partition 332 (D.42877_332 - 332 )
Partition 333 (D.42878_333 - 333 )
Partition 334 (D.42879_334 - 334 )
Partition 336 (D.42882_336 - 336 )
Partition 337 (D.42883_337 - 337 )
Partition 338 (D.42884_338 - 338 )
Partition 339 (D.42885_339 - 339 )
Partition 340 (D.42888_340 - 340 )
Partition 341 (D.42891_341 - 341 )
Partition 342 (D.42892_342 - 342 )
Partition 345 (D.42894_345 - 345 )
Partition 349 (D.42900_349 - 349 )
Partition 350 (D.42901_350 - 350 )
Partition 351 (D.42902_351 - 351 )
Partition 352 (D.42905_352 - 352 )
Partition 353 (D.42906_353 - 353 )
Partition 354 (D.42907_354 - 354 )
Partition 355 (D.42908_355 - 355 )
Partition 356 (local_sdp_audio_zrtp_hash_356 - 356 )
Partition 357 (D.42911_357 - 357 )
Partition 358 (D.42912_358 - 358 )
Partition 359 (D.42913_359 - 359 )
Partition 360 (D.42914_360 - 360 )
Partition 361 (sr_361(D) - 361 )
Partition 363 (D.42918_363 - 363 )
Partition 364 (D.42919_364 - 364 )
Partition 365 (D.42920_365 - 365 )
Partition 366 (D.42921_366 - 366 )
Partition 367 (.MEM_367 - 367 )
Partition 368 (.MEM_368 - 368 )
Partition 369 (.MEM_369 - 369 )
Partition 370 (.MEM_370 - 370 )
Partition 371 (.MEM_371 - 371 )
Partition 372 (.MEM_372 - 372 )
Partition 373 (.MEM_373 - 373 )
Partition 374 (.MEM_374 - 374 )
Partition 375 (.MEM_375 - 375 )
Partition 376 (.MEM_376 - 376 )
Partition 377 (.MEM_377 - 377 )
Partition 378 (.MEM_378 - 378 )
Partition 379 (.MEM_379 - 379 )
Partition 380 (.MEM_380 - 380 )
Partition 381 (.MEM_381 - 381 )
Partition 382 (.MEM_382 - 382 )
Partition 383 (.MEM_383 - 383 )
Partition 384 (.MEM_384 - 384 )
Partition 385 (.MEM_385 - 385 )
Partition 386 (.MEM_386 - 386 )
Partition 387 (.MEM_387 - 387 )
Partition 388 (.MEM_388 - 388 )
Partition 389 (.MEM_389 - 389 )
Partition 390 (.MEM_390 - 390 )
Partition 391 (.MEM_391 - 391 )
Partition 392 (.MEM_392 - 392 )
Partition 393 (.MEM_393 - 393 )
Partition 394 (.MEM_394 - 394 )
Partition 395 (.MEM_395 - 395 )
Partition 396 (.MEM_396(D) - 396 )
Partition 397 (.MEM_397 - 397 )
Partition 398 (.MEM_398 - 398 )
Partition 399 (.MEM_399 - 399 )
Partition 400 (.MEM_400 - 400 )
Partition 401 (.MEM_401 - 401 )
Partition 402 (.MEM_402 - 402 )
Partition 403 (.MEM_403 - 403 )
Partition 404 (.MEM_404 - 404 )
Partition 405 (.MEM_405 - 405 )
Partition 406 (.MEM_406 - 406 )
Partition 407 (.MEM_407 - 407 )
Partition 408 (.MEM_408 - 408 )
Partition 409 (.MEM_409 - 409 )
Partition 410 (.MEM_410 - 410 )
Partition 411 (.MEM_411 - 411 )
Partition 412 (.MEM_412 - 412 )
Partition 413 (.MEM_413 - 413 )
Partition 414 (.MEM_414 - 414 )
Partition 415 (.MEM_415 - 415 )
Partition 416 (.MEM_416 - 416 )
Partition 417 (.MEM_417 - 417 )
Partition 418 (.MEM_418 - 418 )
Partition 419 (.MEM_419 - 419 )
Partition 420 (.MEM_420 - 420 )
Partition 421 (.MEM_421 - 421 )
Partition 422 (.MEM_422 - 422 )
Partition 423 (.MEM_423 - 423 )
Partition 424 (.MEM_424 - 424 )
Partition 425 (.MEM_425 - 425 )
Partition 426 (.MEM_426 - 426 )
Partition 427 (.MEM_427 - 427 )
Partition 428 (.MEM_428 - 428 )
Partition 429 (.MEM_429 - 429 )
Partition 430 (.MEM_430 - 430 )
Partition 431 (.MEM_431 - 431 )
Partition 432 (.MEM_432 - 432 )
Partition 433 (.MEM_433 - 433 )
Partition 434 (.MEM_434 - 434 )
Partition 435 (.MEM_435 - 435 )
Partition 436 (.MEM_436 - 436 )
Partition 437 (.MEM_437 - 437 )
Partition 438 (.MEM_438 - 438 )
Partition 439 (.MEM_439 - 439 )
Partition 440 (.MEM_440 - 440 )
Partition 441 (.MEM_441 - 441 )
Partition 442 (.MEM_442 - 442 )
Partition 443 (.MEM_443 - 443 )
Partition 444 (.MEM_444 - 444 )
Partition 445 (.MEM_445 - 445 )
Partition 446 (.MEM_446 - 446 )
Partition 447 (.MEM_447 - 447 )
Partition 448 (.MEM_448 - 448 )
Partition 449 (.MEM_449 - 449 )
Partition 450 (.MEM_450 - 450 )
Partition 451 (.MEM_451 - 451 )
Partition 452 (.MEM_452 - 452 )
Partition 453 (.MEM_453 - 453 )
Partition 454 (.MEM_454 - 454 )
Partition 455 (D.47442_455 - 455 )
Partition 457 (D.47446_457 - 457 )
Partition 459 (D.47450_459 - 459 )
Partition 461 (D.47454_461 - 461 )
Partition 463 (D.47458_463 - 463 )
Partition 465 (D.47462_465 - 465 )
Partition 467 (D.47466_467 - 467 )
Partition 469 (D.47441_469 - 181 456 469 )
Partition 470 (D.47445_470 - 255 458 470 )
Partition 471 (D.47449_471 - 257 460 471 )
Partition 472 (D.47453_472 - 289 462 472 )
Partition 473 (D.47457_473 - 291 464 473 )
Partition 474 (D.47461_474 - 323 466 474 )
Partition 475 (D.47465_475 - 362 468 475 )

Coalesced D.42740_181 to D.47441_469
Coalesced D.42811_255 to D.47445_470
Coalesced D.42814_257 to D.47449_471
Coalesced D.42837_289 to D.47453_472
Coalesced D.42841_291 to D.47457_473
Coalesced D.42864_323 to D.47461_474
Coalesced iftmp.42_343 to append_audio_18
Coalesced D.42915_362 to D.47465_475
Coalesced D.47443_456 to D.47441_469
Coalesced D.47447_458 to D.47445_470
Coalesced D.47451_460 to D.47449_471
Coalesced D.47455_462 to D.47453_472
Coalesced D.47459_464 to D.47457_473
Coalesced D.47463_466 to D.47461_474
Coalesced D.47467_468 to D.47465_475
Scope blocks after cleanups:

{ Scope block #0 
  int i;
  int rate;
  int already_did[128];
  int ptime;
  int noptime;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  static const char __func__[11] = "generate_m";

  { Scope block #96 src/switch_core_media.c:5886 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #97 Originating from :#0 

    }

  }

  { Scope block #98 src/switch_core_media.c:5758 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #99 Originating from :#0 

    }

  }

  { Scope block #100 
    const struct switch_codec_implementation_t * imp;
    int this_ptime;

  }

  { Scope block #101 
    const struct switch_codec_implementation_t * imp;
    char * fmtp;
    int this_ptime;

    { Scope block #102 
      char key[128];
      char * check;

    }

    { Scope block #103 
      int channels;

    }

  }

  { Scope block #104 
    char tmp1[11];
    char tmp2[11];
    uint32_t c1;
    uint32_t c2;
    struct ice_t * ice_out;

    { Scope block #105 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #106 Originating from :#0 

      }

    }

    { Scope block #107 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #108 Originating from :#0 

      }

    }

    { Scope block #109 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #110 Originating from :#0 

      }

    }

    { Scope block #111 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #112 Originating from :#0 

      }

    }

    { Scope block #113 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #114 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #115 
    int i;

    { Scope block #116 
      switch_rtp_crypto_key_type_t j;

      { Scope block #117 src/switch_core_media.c:5852 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #118 Originating from :#0 

        }

      }

    }

  }

}
generate_m (struct switch_core_session_t * session, char * buf, size_t buflen, switch_port_t port, const char * family, const char * ip, int cur_ptime, const char * append_audio, const char * sr, int use_cng, int cng_type, struct switch_event_t * map, int secure, switch_sdp_type_t sdp_type)
{
  const char D.47466;
  int D.47465;
  const char D.47462;
  int D.47461;
  const char D.47458;
  int D.47457;
  const char D.47454;
  int D.47453;
  const char D.47450;
  int D.47449;
  const char D.47446;
  int D.47445;
  const char D.47442;
  int D.47441;
  switch_rtp_crypto_key_type_t j;
  int i;
  struct ice_t * ice_out;
  uint32_t c2;
  uint32_t c1;
  char tmp2[11];
  char tmp1[11];
  int channels;
  char * check;
  char key[128];
  int this_ptime;
  char * fmtp;
  const struct switch_codec_implementation_t * imp;
  int this_ptime;
  const struct switch_codec_implementation_t * imp;
  static const char __func__[11] = "generate_m";
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  const char * local_sdp_audio_zrtp_hash;
  int noptime;
  int ptime;
  int already_did[128];
  int rate;
  int i;
  size_t D.42921;
  size_t D.42920;
  char * D.42919;
  size_t D.42918;
  size_t D.42914;
  size_t D.42913;
  char * D.42912;
  size_t D.42911;
  size_t D.42908;
  size_t D.42907;
  char * D.42906;
  size_t D.42905;
  _Bool D.42902;
  _Bool D.42901;
  _Bool D.42900;
  const char D.42894;
  unsigned int D.42892;
  size_t D.42891;
  const char D.42888;
  char * iftmp.41;
  size_t D.42885;
  size_t D.42884;
  char * D.42883;
  size_t D.42882;
  size_t D.42879;
  size_t D.42878;
  char * D.42877;
  size_t D.42876;
  int32_t D.42873;
  size_t D.42870;
  size_t D.42869;
  char * D.42868;
  size_t D.42867;
  char * D.42863;
  switch_rtp_crypto_key_type_t D.42859;
  uint32_t D.42856;
  int D.42853;
  size_t D.42852;
  size_t D.42851;
  char * D.42850;
  size_t D.42849;
  switch_port_t D.42846;
  int D.39488;
  char * D.42840;
  int D.42836;
  int D.42835;
  size_t D.42834;
  size_t D.42833;
  char * D.42832;
  size_t D.42831;
  switch_call_direction_t D.42830;
  int D.42826;
  size_t D.42825;
  size_t D.42824;
  char * D.42823;
  size_t D.42822;
  switch_port_t D.42819;
  int D.39479;
  char * D.42810;
  int D.42809;
  switch_port_t D.42808;
  char * D.42807;
  char * D.42806;
  size_t D.42805;
  size_t D.42804;
  char * D.42803;
  size_t D.42802;
  char * D.42801;
  size_t D.42800;
  size_t D.42799;
  char * D.42798;
  size_t D.42797;
  char * D.42796;
  size_t D.42795;
  size_t D.42794;
  char * D.42793;
  size_t D.42792;
  size_t D.42791;
  size_t D.42790;
  char * D.42789;
  size_t D.42788;
  size_t D.42787;
  size_t D.42786;
  char * D.42785;
  size_t D.42784;
  char * D.42783;
  size_t D.42782;
  size_t D.42781;
  char * D.42780;
  size_t D.42779;
  char * D.42778;
  uint32_t D.42777;
  size_t D.42776;
  size_t D.42775;
  char * D.42774;
  size_t D.42773;
  uint8_t D.42770;
  int D.42769;
  size_t D.42768;
  size_t D.42767;
  char * D.42766;
  size_t D.42765;
  size_t D.42763;
  size_t D.42762;
  char * D.42761;
  size_t D.42760;
  size_t D.42759;
  size_t D.42758;
  char * D.42757;
  size_t D.42756;
  int8_t D.42753;
  char * D.42750;
  char[192] * D.42749;
  size_t D.42748;
  size_t D.42747;
  char * D.42746;
  size_t D.42745;
  char * D.42739;
  size_t D.42738;
  size_t D.42737;
  char * D.42736;
  size_t D.42735;
  size_t D.42733;
  size_t D.42732;
  char * D.42731;
  size_t D.42730;
  uint32_t D.42727;
  uint32_t D.42724;
  int32_t D.42722;
  size_t D.42718;
  size_t D.42717;
  char * D.42716;
  size_t D.42715;
  size_t D.42712;
  size_t D.42711;
  char * D.42710;
  size_t D.42709;
  size_t D.42707;
  size_t D.42706;
  char * D.42705;
  size_t D.42704;
  int D.42701;
  const uint8_t D.42700;
  uint32_t D.42699;
  char * D.42693;
  const int D.42689;
  const uint32_t D.42686;
  int D.42672;
  int D.42670;
  char * const D.42669;
  const switch_codec_type_t D.42664;
  const int D.42663;
  size_t D.42662;
  size_t D.42661;
  char * D.42660;
  size_t D.42659;
  size_t D.42658;
  size_t D.42657;
  char * D.42656;
  size_t D.42655;
  _Bool D.42652;
  _Bool D.42651;
  _Bool D.42650;
  int32_t D.42647;
  int D.42646;
  size_t D.42645;
  size_t D.42644;
  char * D.42643;
  size_t D.42642;
  switch_payload_t D.42639;
  switch_core_media_dtmf_t D.42636;
  int D.42635;
  struct switch_core_media_params_t * D.42634;
  size_t D.42633;
  size_t D.42632;
  char * D.42631;
  size_t D.42630;
  int D.42627;
  int D.42626;
  signed char D.42623;
  switch_payload_t D.42622;
  const switch_codec_type_t D.42610;
  int D.42609;
  int D.42607;
  char * const D.42606;
  const int D.42603;
  const char * D.42602;
  switch_rtp_crypto_key_type_t D.42601;
  switch_call_direction_t D.42600;
  struct switch_channel_t * D.42599;
  int iftmp.40;
  int D.42592;
  size_t D.42591;
  size_t D.42590;
  char * D.42589;
  size_t D.42588;

<bb 2>:
  i_19 = 0;
  # DEBUG i => i_19
  already_did = {};
  ptime_20 = 0;
  # DEBUG ptime => ptime_20
  noptime_21 = 0;
  # DEBUG noptime => noptime_21
  if (session_22(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_23 = session_22(D)->media_handle;
  # DEBUG smh => smh_23
  if (smh_23 == 0B)
    goto <bb 142>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_24 = &smh_23->engines;
  # DEBUG a_engine => a_engine_24
  D.42588_26 = strlen (buf_25(D));
  D.42589_27 = buf_25(D) + D.42588_26;
  D.42590_28 = strlen (buf_25(D));
  D.42591_30 = buflen_29(D) - D.42590_28;
  D.42592_32 = (int) port_31(D);
  if (secure_33(D) != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.42599_34 = session_22(D)->channel;
  D.42600_35 = switch_channel_direction (D.42599_34);
  if (D.42600_35 == 1)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.42601_36 = a_engine_24->crypto_type;
  if (D.42601_36 != 9)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  iftmp.40_38 = 1;
  goto <bb 10>;

<bb 9>:
  iftmp.40_37 = 0;

<bb 10>:
  # iftmp.40_16 = PHI <iftmp.40_38(8), iftmp.40_37(9)>
  D.42602_39 = get_media_profile_name (session_22(D), iftmp.40_16);
  switch_snprintf (D.42589_27, D.42591_30, "m=audio %d %s", D.42592_32, D.42602_39);
  i_40 = 0;
  # DEBUG i => i_40
  goto <bb 28>;

<bb 11>:
  imp_43 = smh_23->codecs[i_2];
  # DEBUG imp => imp_43
  D.42603_44 = imp_43->microseconds_per_packet;
  this_ptime_45 = D.42603_44 / 1000;
  # DEBUG this_ptime => this_ptime_45
  D.42606_46 = imp_43->iananame;
  D.42607_47 = strcasecmp (D.42606_46, "ilbc");
  if (D.42607_47 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:
  D.42606_48 = imp_43->iananame;
  D.42609_49 = strcasecmp (D.42606_48, "isac");
  if (D.42609_49 == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  this_ptime_50 = 20;
  # DEBUG this_ptime => this_ptime_50

<bb 14>:
  # this_ptime_10 = PHI <this_ptime_45(12), this_ptime_50(13)>
  # DEBUG this_ptime => this_ptime_10
  D.42610_51 = imp_43->codec_type;
  if (D.42610_51 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  // predicted unlikely by continue predictor.
  goto <bb 27>;

<bb 16>:
  if (noptime_21 == 0)
    goto <bb 17>;
  else
    goto <bb 22>;

<bb 17>:
  if (cur_ptime_52(D) == 0)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 18>:
  if (ptime_6 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  ptime_53 = this_ptime_10;
  # DEBUG ptime => ptime_53
  goto <bb 22>;

<bb 20>:
  if (this_ptime_10 != cur_ptime_52(D))
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  // predicted unlikely by continue predictor.
  goto <bb 27>;

<bb 22>:
  # ptime_4 = PHI <ptime_6(16), ptime_53(19), ptime_6(20), ptime_6(18)>
  # DEBUG ptime => ptime_4
  D.42622_54 = smh_23->ianacodes[i_2];
  D.42623_55 = (signed char) D.42622_54;
  if (D.42623_55 >= 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.42622_56 = smh_23->ianacodes[i_2];
  D.42626_57 = (int) D.42622_56;
  D.42627_58 = already_did[D.42626_57];
  if (D.42627_58 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  // predicted unlikely by continue predictor.
  goto <bb 27>;

<bb 25>:
  D.42622_59 = smh_23->ianacodes[i_2];
  D.42626_60 = (int) D.42622_59;
  already_did[D.42626_60] = 1;

<bb 26>:
  D.42630_61 = strlen (buf_25(D));
  D.42631_62 = buf_25(D) + D.42630_61;
  D.42632_63 = strlen (buf_25(D));
  D.42633_64 = buflen_29(D) - D.42632_63;
  D.42622_65 = smh_23->ianacodes[i_2];
  D.42626_66 = (int) D.42622_65;
  switch_snprintf (D.42631_62, D.42633_64, " %d", D.42626_66);

<bb 27>:
  # ptime_5 = PHI <ptime_6(15), ptime_6(21), ptime_4(24), ptime_4(26)>
  # DEBUG ptime => ptime_5
  i_67 = i_2 + 1;
  # DEBUG i => i_67

<bb 28>:
  # i_2 = PHI <i_40(10), i_67(27)>
  # ptime_6 = PHI <ptime_20(10), ptime_5(27)>
  # DEBUG ptime => ptime_6
  # DEBUG i => i_2
  D.42634_41 = smh_23->mparams;
  D.42635_42 = D.42634_41->num_codecs;
  if (D.42635_42 > i_2)
    goto <bb 11>;
  else
    goto <bb 29>;

<bb 29>:
  D.42634_68 = smh_23->mparams;
  D.42636_69 = D.42634_68->dtmf_type;
  if (D.42636_69 == 0)
    goto <bb 30>;
  else
    goto <bb 32>;

<bb 30>:
  D.42634_70 = smh_23->mparams;
  D.42639_71 = D.42634_70->te;
  if (D.42639_71 > 95)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.42642_72 = strlen (buf_25(D));
  D.42643_73 = buf_25(D) + D.42642_72;
  D.42644_74 = strlen (buf_25(D));
  D.42645_75 = buflen_29(D) - D.42644_74;
  D.42634_76 = smh_23->mparams;
  D.42639_77 = D.42634_76->te;
  D.42646_78 = (int) D.42639_77;
  switch_snprintf (D.42643_73, D.42645_75, " %d", D.42646_78);

<bb 32>:
  D.42647_79 = switch_media_handle_test_media_flag (smh_23, 9);
  if (D.42647_79 == 0)
    goto <bb 33>;
  else
    goto <bb 35>;

<bb 33>:
  D.42650_81 = cng_type_80(D) != 0;
  D.42651_83 = use_cng_82(D) != 0;
  D.42652_84 = D.42650_81 && D.42651_83;
  if (D.42652_84 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  D.42655_85 = strlen (buf_25(D));
  D.42656_86 = buf_25(D) + D.42655_85;
  D.42657_87 = strlen (buf_25(D));
  D.42658_88 = buflen_29(D) - D.42657_87;
  switch_snprintf (D.42656_86, D.42658_88, " %d", cng_type_80(D));

<bb 35>:
  D.42659_89 = strlen (buf_25(D));
  D.42660_90 = buf_25(D) + D.42659_89;
  D.42661_91 = strlen (buf_25(D));
  D.42662_92 = buflen_29(D) - D.42661_91;
  switch_snprintf (D.42660_90, D.42662_92, "\n");
  memset (&already_did, 0, 512);
  i_93 = 0;
  # DEBUG i => i_93
  goto <bb 65>;

<bb 36>:
  imp_96 = smh_23->codecs[i_3];
  # DEBUG imp => imp_96
  fmtp_97 = imp_96->fmtp;
  # DEBUG fmtp => fmtp_97
  D.42663_98 = imp_96->microseconds_per_packet;
  this_ptime_99 = D.42663_98 / 1000;
  # DEBUG this_ptime => this_ptime_99
  D.42664_100 = imp_96->codec_type;
  if (D.42664_100 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  // predicted unlikely by continue predictor.
  goto <bb 64>;

<bb 38>:
  D.42669_101 = imp_96->iananame;
  D.42670_102 = strcasecmp (D.42669_101, "ilbc");
  if (D.42670_102 == 0)
    goto <bb 40>;
  else
    goto <bb 39>;

<bb 39>:
  D.42669_103 = imp_96->iananame;
  D.42672_104 = strcasecmp (D.42669_103, "isac");
  if (D.42672_104 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  this_ptime_105 = 20;
  # DEBUG this_ptime => this_ptime_105

<bb 41>:
  # this_ptime_13 = PHI <this_ptime_99(39), this_ptime_105(40)>
  # DEBUG this_ptime => this_ptime_13
  if (noptime_21 == 0)
    goto <bb 42>;
  else
    goto <bb 47>;

<bb 42>:
  if (cur_ptime_52(D) == 0)
    goto <bb 43>;
  else
    goto <bb 45>;

<bb 43>:
  if (ptime_9 == 0)
    goto <bb 44>;
  else
    goto <bb 47>;

<bb 44>:
  ptime_106 = this_ptime_13;
  # DEBUG ptime => ptime_106
  goto <bb 47>;

<bb 45>:
  if (this_ptime_13 != cur_ptime_52(D))
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  // predicted unlikely by continue predictor.
  goto <bb 64>;

<bb 47>:
  # ptime_7 = PHI <ptime_9(41), ptime_106(44), ptime_9(45), ptime_9(43)>
  # DEBUG ptime => ptime_7
  D.42622_107 = smh_23->ianacodes[i_3];
  D.42623_108 = (signed char) D.42622_107;
  if (D.42623_108 >= 0)
    goto <bb 48>;
  else
    goto <bb 51>;

<bb 48>:
  D.42622_109 = smh_23->ianacodes[i_3];
  D.42626_110 = (int) D.42622_109;
  D.42627_111 = already_did[D.42626_110];
  if (D.42627_111 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  // predicted unlikely by continue predictor.
  goto <bb 64>;

<bb 50>:
  D.42622_112 = smh_23->ianacodes[i_3];
  D.42626_113 = (int) D.42622_112;
  already_did[D.42626_113] = 1;

<bb 51>:
  D.42686_114 = imp_96->samples_per_second;
  rate_115 = (int) D.42686_114;
  # DEBUG rate => rate_115
  if (map_116(D) != 0B)
    goto <bb 52>;
  else
    goto <bb 55>;

<bb 52>:
  key = "";
  check_117 = 0B;
  # DEBUG check => check_117
  D.42669_118 = imp_96->iananame;
  D.42689_119 = imp_96->bits_per_second;
  switch_snprintf (&key, 128, "%s:%u", D.42669_118, D.42689_119);
  check_120 = switch_event_get_header_idx (map_116(D), &key, -1);
  # DEBUG check => check_120
  if (check_120 != 0B)
    goto <bb 54>;
  else
    goto <bb 53>;

<bb 53>:
  D.42669_121 = imp_96->iananame;
  check_122 = switch_event_get_header_idx (map_116(D), D.42669_121, -1);
  # DEBUG check => check_122
  if (check_122 != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;

<bb 54>:
  # check_14 = PHI <check_120(52), check_122(53)>
  # DEBUG check => check_14
  fmtp_123 = check_14;
  # DEBUG fmtp => fmtp_123

<bb 55>:
  # fmtp_11 = PHI <fmtp_97(51), fmtp_97(53), fmtp_123(54)>
  # DEBUG fmtp => fmtp_11
  D.42693_124 = smh_23->fmtps[i_3];
  if (D.42693_124 != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

<bb 56>:
  fmtp_125 = smh_23->fmtps[i_3];
  # DEBUG fmtp => fmtp_125

<bb 57>:
  # fmtp_12 = PHI <fmtp_11(55), fmtp_125(56)>
  # DEBUG fmtp => fmtp_12
  D.42622_126 = smh_23->ianacodes[i_3];
  if (D.42622_126 > 95)
    goto <bb 59>;
  else
    goto <bb 58>;

<bb 58>:
  D.42599_127 = session_22(D)->channel;
  D.42699_128 = switch_channel_test_flag (D.42599_127, 110);
  if (D.42699_128 != 0)
    goto <bb 59>;
  else
    goto <bb 62>;

<bb 59>:
  D.42669_129 = imp_96->iananame;
  D.42700_130 = imp_96->number_of_channels;
  D.42701_131 = (int) D.42700_130;
  channels_132 = get_channels (D.42669_129, D.42701_131);
  # DEBUG channels => channels_132
  if (channels_132 > 1)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.42704_133 = strlen (buf_25(D));
  D.42705_134 = buf_25(D) + D.42704_133;
  D.42706_135 = strlen (buf_25(D));
  D.42707_136 = buflen_29(D) - D.42706_135;
  D.42622_137 = smh_23->ianacodes[i_3];
  D.42626_138 = (int) D.42622_137;
  D.42669_139 = imp_96->iananame;
  switch_snprintf (D.42705_134, D.42707_136, "a=rtpmap:%d %s/%d/%d\n", D.42626_138, D.42669_139, rate_115, channels_132);
  goto <bb 62>;

<bb 61>:
  D.42709_140 = strlen (buf_25(D));
  D.42710_141 = buf_25(D) + D.42709_140;
  D.42711_142 = strlen (buf_25(D));
  D.42712_143 = buflen_29(D) - D.42711_142;
  D.42622_144 = smh_23->ianacodes[i_3];
  D.42626_145 = (int) D.42622_144;
  D.42669_146 = imp_96->iananame;
  switch_snprintf (D.42710_141, D.42712_143, "a=rtpmap:%d %s/%d\n", D.42626_145, D.42669_146, rate_115);

<bb 62>:
  if (fmtp_12 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  D.42715_147 = strlen (buf_25(D));
  D.42716_148 = buf_25(D) + D.42715_147;
  D.42717_149 = strlen (buf_25(D));
  D.42718_150 = buflen_29(D) - D.42717_149;
  D.42622_151 = smh_23->ianacodes[i_3];
  D.42626_152 = (int) D.42622_151;
  switch_snprintf (D.42716_148, D.42718_150, "a=fmtp:%d %s\n", D.42626_152, fmtp_12);

<bb 64>:
  # ptime_8 = PHI <ptime_9(37), ptime_9(46), ptime_7(49), ptime_7(62), ptime_7(63)>
  # DEBUG ptime => ptime_8
  i_153 = i_3 + 1;
  # DEBUG i => i_153

<bb 65>:
  # i_3 = PHI <i_93(35), i_153(64)>
  # ptime_9 = PHI <ptime_6(35), ptime_8(64)>
  # DEBUG ptime => ptime_9
  # DEBUG i => i_3
  D.42634_94 = smh_23->mparams;
  D.42635_95 = D.42634_94->num_codecs;
  if (D.42635_95 > i_3)
    goto <bb 36>;
  else
    goto <bb 66>;

<bb 66>:
  D.42634_154 = smh_23->mparams;
  D.42636_155 = D.42634_154->dtmf_type;
  if (D.42636_155 == 0)
    goto <bb 69>;
  else
    goto <bb 67>;

<bb 67>:
  D.42722_156 = switch_media_handle_test_media_flag (smh_23, 8);
  if (D.42722_156 != 0)
    goto <bb 69>;
  else
    goto <bb 68>;

<bb 68>:
  D.42599_157 = session_22(D)->channel;
  D.42724_158 = switch_channel_test_flag (D.42599_157, 93);
  if (D.42724_158 != 0)
    goto <bb 69>;
  else
    goto <bb 73>;

<bb 69>:
  D.42634_159 = smh_23->mparams;
  D.42639_160 = D.42634_159->te;
  if (D.42639_160 > 95)
    goto <bb 70>;
  else
    goto <bb 73>;

<bb 70>:
  D.42599_161 = session_22(D)->channel;
  D.42727_162 = switch_channel_test_flag (D.42599_161, 106);
  if (D.42727_162 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;

<bb 71>:
  D.42730_163 = strlen (buf_25(D));
  D.42731_164 = buf_25(D) + D.42730_163;
  D.42732_165 = strlen (buf_25(D));
  D.42733_166 = buflen_29(D) - D.42732_165;
  D.42634_167 = smh_23->mparams;
  D.42639_168 = D.42634_167->te;
  D.42646_169 = (int) D.42639_168;
  switch_snprintf (D.42731_164, D.42733_166, "a=rtpmap:%d telephone-event/8000\n", D.42646_169);
  goto <bb 73>;

<bb 72>:
  D.42735_170 = strlen (buf_25(D));
  D.42736_171 = buf_25(D) + D.42735_170;
  D.42737_172 = strlen (buf_25(D));
  D.42738_173 = buflen_29(D) - D.42737_172;
  D.42634_174 = smh_23->mparams;
  D.42639_175 = D.42634_174->te;
  D.42646_176 = (int) D.42639_175;
  D.42634_177 = smh_23->mparams;
  D.42639_178 = D.42634_177->te;
  D.42646_179 = (int) D.42639_178;
  switch_snprintf (D.42736_171, D.42738_173, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.42646_179, D.42646_179);

<bb 73>:
  D.42739_180 = a_engine_24->local_dtls_fingerprint.type;
  # DEBUG s => D.42739_180
  if (D.42739_180 == 0B)
    goto <bb 76>;
  else
    goto <bb 74>;

<bb 74>:
  D.47442_455 = MEM[(const char *)D.42739_180];
  if (D.47442_455 == 0)
    goto <bb 76>;
  else
    goto <bb 75>;

<bb 75>:

<bb 76>:
  # D.47441_456 = PHI <1(73), 1(74), 0(75)>
  D.47441_469 = D.47441_456;
  D.47441_181 = D.47441_469;
  if (D.47441_181 == 0)
    goto <bb 77>;
  else
    goto <bb 79>;

<bb 77>:
  if (secure_33(D) != 0)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  D.42745_182 = strlen (buf_25(D));
  D.42746_183 = buf_25(D) + D.42745_182;
  D.42747_184 = strlen (buf_25(D));
  D.42748_185 = buflen_29(D) - D.42747_184;
  D.42739_186 = a_engine_24->local_dtls_fingerprint.type;
  D.42749_187 = &a_engine_24->local_dtls_fingerprint.str;
  switch_snprintf (D.42746_183, D.42748_185, "a=fingerprint:%s %s\n", D.42739_186, D.42749_187);

<bb 79>:
  D.42634_188 = smh_23->mparams;
  D.42750_189 = D.42634_188->rtcp_audio_interval_msec;
  if (D.42750_189 != 0B)
    goto <bb 80>;
  else
    goto <bb 83>;

<bb 80>:
  D.42753_190 = a_engine_24->rtcp_mux;
  if (D.42753_190 > 0)
    goto <bb 81>;
  else
    goto <bb 82>;

<bb 81>:
  D.42756_191 = strlen (buf_25(D));
  D.42757_192 = buf_25(D) + D.42756_191;
  D.42758_193 = strlen (buf_25(D));
  D.42759_194 = buflen_29(D) - D.42758_193;
  switch_snprintf (D.42757_192, D.42759_194, "a=rtcp-mux\n");
  D.42760_195 = strlen (buf_25(D));
  D.42761_196 = buf_25(D) + D.42760_195;
  D.42762_197 = strlen (buf_25(D));
  D.42763_198 = buflen_29(D) - D.42762_197;
  D.42592_199 = (int) port_31(D);
  switch_snprintf (D.42761_196, D.42763_198, "a=rtcp:%d IN %s %s\n", D.42592_199, family_200(D), ip_201(D));
  goto <bb 83>;

<bb 82>:
  D.42765_202 = strlen (buf_25(D));
  D.42766_203 = buf_25(D) + D.42765_202;
  D.42767_204 = strlen (buf_25(D));
  D.42768_205 = buflen_29(D) - D.42767_204;
  D.42592_206 = (int) port_31(D);
  D.42769_207 = D.42592_206 + 1;
  switch_snprintf (D.42766_203, D.42768_205, "a=rtcp:%d IN %s %s\n", D.42769_207, family_200(D), ip_201(D));

<bb 83>:
  D.42770_208 = a_engine_24->ice_out.cands[0][0].ready;
  if (D.42770_208 != 0)
    goto <bb 84>;
  else
    goto <bb 108>;

<bb 84>:
  tmp1 = "";
  tmp2 = "";
  c1_209 = 659136;
  # DEBUG c1 => c1_209
  c2_210 = 659134;
  # DEBUG c2 => c2_210
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  gen_ice (session_22(D), 0, 0B, 0);
  ice_out_211 = &a_engine_24->ice_out;
  # DEBUG ice_out => ice_out_211
  D.42773_212 = strlen (buf_25(D));
  D.42774_213 = buf_25(D) + D.42773_212;
  D.42775_214 = strlen (buf_25(D));
  D.42776_215 = buflen_29(D) - D.42775_214;
  D.42777_216 = a_engine_24->ssrc;
  D.42778_217 = smh_23->cname;
  switch_snprintf (D.42774_213, D.42776_215, "a=ssrc:%u cname:%s\n", D.42777_216, D.42778_217);
  D.42779_218 = strlen (buf_25(D));
  D.42780_219 = buf_25(D) + D.42779_218;
  D.42781_220 = strlen (buf_25(D));
  D.42782_221 = buflen_29(D) - D.42781_220;
  D.42777_222 = a_engine_24->ssrc;
  D.42783_223 = smh_23->msid;
  switch_snprintf (D.42780_219, D.42782_221, "a=ssrc:%u msid:%s a0\n", D.42777_222, D.42783_223);
  D.42784_224 = strlen (buf_25(D));
  D.42785_225 = buf_25(D) + D.42784_224;
  D.42786_226 = strlen (buf_25(D));
  D.42787_227 = buflen_29(D) - D.42786_226;
  D.42777_228 = a_engine_24->ssrc;
  D.42783_229 = smh_23->msid;
  switch_snprintf (D.42785_225, D.42787_227, "a=ssrc:%u mslabel:%s\n", D.42777_228, D.42783_229);
  D.42788_230 = strlen (buf_25(D));
  D.42789_231 = buf_25(D) + D.42788_230;
  D.42790_232 = strlen (buf_25(D));
  D.42791_233 = buflen_29(D) - D.42790_232;
  D.42777_234 = a_engine_24->ssrc;
  D.42783_235 = smh_23->msid;
  switch_snprintf (D.42789_231, D.42791_233, "a=ssrc:%u label:%sa0\n", D.42777_234, D.42783_235);
  D.42792_236 = strlen (buf_25(D));
  D.42793_237 = buf_25(D) + D.42792_236;
  D.42794_238 = strlen (buf_25(D));
  D.42795_239 = buflen_29(D) - D.42794_238;
  D.42796_240 = ice_out_211->ufrag;
  switch_snprintf (D.42793_237, D.42795_239, "a=ice-ufrag:%s\n", D.42796_240);
  D.42797_241 = strlen (buf_25(D));
  D.42798_242 = buf_25(D) + D.42797_241;
  D.42799_243 = strlen (buf_25(D));
  D.42800_244 = buflen_29(D) - D.42799_243;
  D.42801_245 = ice_out_211->pwd;
  switch_snprintf (D.42798_242, D.42800_244, "a=ice-pwd:%s\n", D.42801_245);
  D.42802_246 = strlen (buf_25(D));
  D.42803_247 = buf_25(D) + D.42802_246;
  D.42804_248 = strlen (buf_25(D));
  D.42805_249 = buflen_29(D) - D.42804_248;
  D.42806_250 = ice_out_211->cands[0][0].transport;
  D.42807_251 = ice_out_211->cands[0][0].con_addr;
  D.42808_252 = ice_out_211->cands[0][0].con_port;
  D.42809_253 = (int) D.42808_252;
  switch_snprintf (D.42803_247, D.42805_249, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_250, c1_209, D.42807_251, D.42809_253);
  D.42810_254 = a_engine_24->local_sdp_ip;
  # DEBUG s => D.42810_254
  if (D.42810_254 == 0B)
    goto <bb 87>;
  else
    goto <bb 85>;

<bb 85>:
  D.47446_457 = MEM[(const char *)D.42810_254];
  if (D.47446_457 == 0)
    goto <bb 87>;
  else
    goto <bb 86>;

<bb 86>:

<bb 87>:
  # D.47445_458 = PHI <1(84), 1(85), 0(86)>
  D.47445_470 = D.47445_458;
  D.47445_255 = D.47445_470;
  if (D.47445_255 == 0)
    goto <bb 88>;
  else
    goto <bb 95>;

<bb 88>:
  D.42807_256 = ice_out_211->cands[0][0].con_addr;
  # DEBUG s => D.42807_256
  if (D.42807_256 == 0B)
    goto <bb 91>;
  else
    goto <bb 89>;

<bb 89>:
  D.47450_459 = MEM[(const char *)D.42807_256];
  if (D.47450_459 == 0)
    goto <bb 91>;
  else
    goto <bb 90>;

<bb 90>:

<bb 91>:
  # D.47449_460 = PHI <1(88), 1(89), 0(90)>
  D.47449_471 = D.47449_460;
  D.47449_257 = D.47449_471;
  if (D.47449_257 == 0)
    goto <bb 92>;
  else
    goto <bb 95>;

<bb 92>:
  D.42810_258 = a_engine_24->local_sdp_ip;
  D.42807_259 = ice_out_211->cands[0][0].con_addr;
  D.39479_260 = __builtin_strcmp (D.42810_258, D.42807_259);
  if (D.39479_260 != 0)
    goto <bb 93>;
  else
    goto <bb 95>;

<bb 93>:
  D.42819_261 = a_engine_24->local_sdp_port;
  D.42808_262 = ice_out_211->cands[0][0].con_port;
  if (D.42819_261 != D.42808_262)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  D.42822_263 = strlen (buf_25(D));
  D.42823_264 = buf_25(D) + D.42822_263;
  D.42824_265 = strlen (buf_25(D));
  D.42825_266 = buflen_29(D) - D.42824_265;
  D.42806_267 = ice_out_211->cands[0][0].transport;
  D.42807_268 = ice_out_211->cands[0][0].con_addr;
  D.42808_269 = ice_out_211->cands[0][0].con_port;
  D.42809_270 = (int) D.42808_269;
  D.42810_271 = a_engine_24->local_sdp_ip;
  D.42819_272 = a_engine_24->local_sdp_port;
  D.42826_273 = (int) D.42819_272;
  switch_snprintf (D.42823_264, D.42825_266, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_267, c2_210, D.42807_268, D.42809_270, D.42810_271, D.42826_273);

<bb 95>:
  D.42753_274 = a_engine_24->rtcp_mux;
  if (D.42753_274 <= 0)
    goto <bb 97>;
  else
    goto <bb 96>;

<bb 96>:
  D.42599_275 = session_22(D)->channel;
  D.42830_276 = switch_channel_direction (D.42599_275);
  if (D.42830_276 == 1)
    goto <bb 97>;
  else
    goto <bb 108>;

<bb 97>:
  D.42831_277 = strlen (buf_25(D));
  D.42832_278 = buf_25(D) + D.42831_277;
  D.42833_279 = strlen (buf_25(D));
  D.42834_280 = buflen_29(D) - D.42833_279;
  D.42806_281 = ice_out_211->cands[0][0].transport;
  D.42807_282 = ice_out_211->cands[0][0].con_addr;
  D.42808_283 = ice_out_211->cands[0][0].con_port;
  D.42809_284 = (int) D.42808_283;
  D.42753_285 = a_engine_24->rtcp_mux;
  D.42835_286 = D.42753_285 <= 0;
  D.42836_287 = D.42809_284 + D.42835_286;
  switch_snprintf (D.42832_278, D.42834_280, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_281, c1_209, D.42807_282, D.42836_287);
  D.42810_288 = a_engine_24->local_sdp_ip;
  # DEBUG s => D.42810_288
  if (D.42810_288 == 0B)
    goto <bb 100>;
  else
    goto <bb 98>;

<bb 98>:
  D.47454_461 = MEM[(const char *)D.42810_288];
  if (D.47454_461 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;

<bb 99>:

<bb 100>:
  # D.47453_462 = PHI <1(97), 1(98), 0(99)>
  D.47453_472 = D.47453_462;
  D.47453_289 = D.47453_472;
  if (D.47453_289 == 0)
    goto <bb 101>;
  else
    goto <bb 108>;

<bb 101>:
  D.42840_290 = ice_out_211->cands[0][1].con_addr;
  # DEBUG s => D.42840_290
  if (D.42840_290 == 0B)
    goto <bb 104>;
  else
    goto <bb 102>;

<bb 102>:
  D.47458_463 = MEM[(const char *)D.42840_290];
  if (D.47458_463 == 0)
    goto <bb 104>;
  else
    goto <bb 103>;

<bb 103>:

<bb 104>:
  # D.47457_464 = PHI <1(101), 1(102), 0(103)>
  D.47457_473 = D.47457_464;
  D.47457_291 = D.47457_473;
  if (D.47457_291 == 0)
    goto <bb 105>;
  else
    goto <bb 108>;

<bb 105>:
  D.42810_292 = a_engine_24->local_sdp_ip;
  D.42840_293 = ice_out_211->cands[0][1].con_addr;
  D.39488_294 = __builtin_strcmp (D.42810_292, D.42840_293);
  if (D.39488_294 != 0)
    goto <bb 106>;
  else
    goto <bb 108>;

<bb 106>:
  D.42819_295 = a_engine_24->local_sdp_port;
  D.42846_296 = ice_out_211->cands[0][1].con_port;
  if (D.42819_295 != D.42846_296)
    goto <bb 107>;
  else
    goto <bb 108>;

<bb 107>:
  D.42849_297 = strlen (buf_25(D));
  D.42850_298 = buf_25(D) + D.42849_297;
  D.42851_299 = strlen (buf_25(D));
  D.42852_300 = buflen_29(D) - D.42851_299;
  D.42806_301 = ice_out_211->cands[0][0].transport;
  D.42807_302 = ice_out_211->cands[0][0].con_addr;
  D.42808_303 = ice_out_211->cands[0][0].con_port;
  D.42809_304 = (int) D.42808_303;
  D.42753_305 = a_engine_24->rtcp_mux;
  D.42835_306 = D.42753_305 <= 0;
  D.42836_307 = D.42809_304 + D.42835_306;
  D.42810_308 = a_engine_24->local_sdp_ip;
  D.42819_309 = a_engine_24->local_sdp_port;
  D.42826_310 = (int) D.42819_309;
  D.42753_311 = a_engine_24->rtcp_mux;
  D.42835_312 = D.42753_311 <= 0;
  D.42853_313 = D.42826_310 + D.42835_312;
  switch_snprintf (D.42850_298, D.42852_300, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_301, c2_210, D.42807_302, D.42836_307, D.42810_308, D.42853_313);

<bb 108>:
  if (secure_33(D) != 0)
    goto <bb 109>;
  else
    goto <bb 120>;

<bb 109>:
  D.42599_314 = session_22(D)->channel;
  D.42856_315 = switch_channel_test_flag (D.42599_314, 109);
  if (D.42856_315 == 0)
    goto <bb 110>;
  else
    goto <bb 120>;

<bb 110>:
  i_316 = 0;
  # DEBUG i => i_316
  goto <bb 119>;

<bb 111>:
  D.42859_318 = smh_23->crypto_suite_order[i_15];
  j_319 = SUITES[D.42859_318].type;
  # DEBUG j => j_319
  D.42601_320 = a_engine_24->crypto_type;
  if (D.42601_320 == j_319)
    goto <bb 113>;
  else
    goto <bb 112>;

<bb 112>:
  D.42601_321 = a_engine_24->crypto_type;
  if (D.42601_321 == 9)
    goto <bb 113>;
  else
    goto <bb 118>;

<bb 113>:
  D.42863_322 = a_engine_24->ssec[j_319].local_crypto_key;
  # DEBUG s => D.42863_322
  if (D.42863_322 == 0B)
    goto <bb 116>;
  else
    goto <bb 114>;

<bb 114>:
  D.47462_465 = MEM[(const char *)D.42863_322];
  if (D.47462_465 == 0)
    goto <bb 116>;
  else
    goto <bb 115>;

<bb 115>:

<bb 116>:
  # D.47461_466 = PHI <1(113), 1(114), 0(115)>
  D.47461_474 = D.47461_466;
  D.47461_323 = D.47461_474;
  if (D.47461_323 == 0)
    goto <bb 117>;
  else
    goto <bb 118>;

<bb 117>:
  D.42867_324 = strlen (buf_25(D));
  D.42868_325 = buf_25(D) + D.42867_324;
  D.42869_326 = strlen (buf_25(D));
  D.42870_327 = buflen_29(D) - D.42869_326;
  D.42863_328 = a_engine_24->ssec[j_319].local_crypto_key;
  switch_snprintf (D.42868_325, D.42870_327, "a=crypto:%s\n", D.42863_328);

<bb 118>:
  i_329 = i_15 + 1;
  # DEBUG i => i_329

<bb 119>:
  # i_15 = PHI <i_316(110), i_329(118)>
  # DEBUG i => i_15
  D.42859_317 = smh_23->crypto_suite_order[i_15];
  if (D.42859_317 != 9)
    goto <bb 111>;
  else
    goto <bb 120>;

<bb 120>:
  if (cng_type_80(D) == 0)
    goto <bb 121>;
  else
    goto <bb 123>;

<bb 121>:
  D.42873_330 = switch_media_handle_test_media_flag (smh_23, 9);
  if (D.42873_330 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;

<bb 122>:
  D.42876_331 = strlen (buf_25(D));
  D.42877_332 = buf_25(D) + D.42876_331;
  D.42878_333 = strlen (buf_25(D));
  D.42879_334 = buflen_29(D) - D.42878_333;
  switch_snprintf (D.42877_332, D.42879_334, "a=silenceSupp:off - - - -\n");

<bb 123>:
  if (append_audio_335(D) != 0B)
    goto <bb 124>;
  else
    goto <bb 131>;

<bb 124>:
  D.42882_336 = strlen (buf_25(D));
  D.42883_337 = buf_25(D) + D.42882_336;
  D.42884_338 = strlen (buf_25(D));
  D.42885_339 = buflen_29(D) - D.42884_338;
  D.42888_340 = *append_audio_335(D);
  if (D.42888_340 != 0)
    goto <bb 125>;
  else
    goto <bb 126>;

<bb 125>:
  D.42891_341 = strlen (append_audio_335(D));
  D.42892_342 = D.42891_341 + -1;
  append_audio_343 = append_audio_335(D) + D.42892_342;
  goto <bb 127>;

<bb 126>:
  append_audio_344 = append_audio_335(D);

<bb 127>:
  # append_audio_18 = PHI <append_audio_343(125), append_audio_344(126)>
  D.42894_345 = *append_audio_18;
  if (D.42894_345 == 10)
    goto <bb 128>;
  else
    goto <bb 129>;

<bb 128>:
  iftmp.41_346 = "";
  goto <bb 130>;

<bb 129>:
  iftmp.41_347 = "\n";

<bb 130>:
  # iftmp.41_17 = PHI <iftmp.41_346(128), iftmp.41_347(129)>
  switch_snprintf (D.42883_337, D.42885_339, "%s%s", append_audio_335(D), iftmp.41_17);

<bb 131>:
  if (cur_ptime_52(D) == 0)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  cur_ptime_348 = ptime_9;
  # DEBUG cur_ptime => cur_ptime_348

<bb 133>:
  # cur_ptime_1 = PHI <cur_ptime_52(D)(131), cur_ptime_348(132)>
  # DEBUG cur_ptime => cur_ptime_1
  D.42900_349 = noptime_21 == 0;
  D.42901_350 = cur_ptime_1 != 0;
  D.42902_351 = D.42900_349 && D.42901_350;
  if (D.42902_351 != 0)
    goto <bb 134>;
  else
    goto <bb 135>;

<bb 134>:
  D.42905_352 = strlen (buf_25(D));
  D.42906_353 = buf_25(D) + D.42905_352;
  D.42907_354 = strlen (buf_25(D));
  D.42908_355 = buflen_29(D) - D.42907_354;
  switch_snprintf (D.42906_353, D.42908_355, "a=ptime:%d\n", cur_ptime_1);

<bb 135>:
  local_sdp_audio_zrtp_hash_356 = switch_core_media_get_zrtp_hash (session_22(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_356
  if (local_sdp_audio_zrtp_hash_356 != 0B)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_22(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);
  D.42911_357 = strlen (buf_25(D));
  D.42912_358 = buf_25(D) + D.42911_357;
  D.42913_359 = strlen (buf_25(D));
  D.42914_360 = buflen_29(D) - D.42913_359;
  switch_snprintf (D.42912_358, D.42914_360, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

<bb 137>:
  # DEBUG s => sr_361(D)
  if (sr_361(D) == 0B)
    goto <bb 140>;
  else
    goto <bb 138>;

<bb 138>:
  D.47466_467 = *sr_361(D);
  if (D.47466_467 == 0)
    goto <bb 140>;
  else
    goto <bb 139>;

<bb 139>:

<bb 140>:
  # D.47465_468 = PHI <1(137), 1(138), 0(139)>
  D.47465_475 = D.47465_468;
  D.47465_362 = D.47465_475;
  if (D.47465_362 == 0)
    goto <bb 141>;
  else
    goto <bb 142>;

<bb 141>:
  D.42918_363 = strlen (buf_25(D));
  D.42919_364 = buf_25(D) + D.42918_363;
  D.42920_365 = strlen (buf_25(D));
  D.42921_366 = buflen_29(D) - D.42920_365;
  switch_snprintf (D.42919_364, D.42921_366, "a=%s\n", sr_361(D));

<bb 142>:
  return;

}



;; Function switch_core_session_media_handle_ready (switch_core_session_media_handle_ready)

Try : D.46444_1(P1) & D.46444_9(P9) : Same root, coalesced --> P1.
Try : D.46444_1(P1) & D.46444_10(P10) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.46444_1 - 1 9 10 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.46435_3 - 3 )
Partition 4 (D.46435_4 - 4 )
Partition 5 (D.46438_5 - 5 )
Partition 6 (D.46439_6 - 6 )
Partition 7 (D.46440_7 - 7 )
Partition 8 (D.46441_8 - 8 )
Partition 11 (.MEM_11(D) - 11 )

switch_core_session_media_handle_ready (struct switch_core_session_t * session)
{
  switch_status_t D.46444;
  _Bool D.46441;
  int D.46440;
  int D.46439;
  smh_flag_t D.46438;
  struct switch_media_handle_t * D.46435;

<bb 2>:
  D.46435_3 = session_2(D)->media_handle;
  if (D.46435_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 3>:
  D.46435_4 = session_2(D)->media_handle;
  D.46438_5 = D.46435_4->flags;
  D.46439_6 = (int) D.46438_5;
  D.46440_7 = D.46439_6 & 1;
  D.46441_8 = (_Bool) D.46440_7;
  if (D.46441_8 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.46444_9 = 0;
  goto <bb 6>;

<bb 5>:
  D.46444_10 = 1;

<bb 6>:
  # D.46444_1 = PHI <D.46444_9(4), D.46444_10(5)>
  return D.46444_1;

}



;; Function switch_core_session_check_outgoing_crypto (switch_core_session_check_outgoing_crypto)

Try : i_1(P1) & i_7(P7) : Same root, coalesced --> P1.
Try : i_1(P1) & i_13(P13) : Same root, coalesced --> P1.

Partition map 

Partition 1 (i_1 - 1 7 13 )
Partition 2 (session_2(D) - 2 )
Partition 3 (channel_3 - 3 )
Partition 4 (D.46663_4 - 4 )
Partition 5 (smh_5 - 5 )
Partition 6 (D.46668_6 - 6 )
Partition 8 (D.46672_8 - 8 )
Partition 9 (D.46671_9 - 9 )
Partition 10 (D.46672_10 - 10 )
Partition 11 (D.46671_11 - 11 )
Partition 12 (D.46672_12 - 12 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15(D) - 15 )
Partition 16 (.MEM_16 - 16 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (.MEM_19 - 19 )
Partition 20 (.MEM_20 - 20 )

switch_core_session_check_outgoing_crypto (struct switch_core_session_t * session)
{
  int i;
  struct switch_media_handle_t * smh;
  struct switch_channel_t * channel;
  switch_rtp_crypto_key_type_t D.46672;
  struct switch_media_handle_t * D.46671;
  switch_rtp_crypto_mode_t D.46668;
  switch_status_t D.46663;

<bb 2>:
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  D.46663_4 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46663_4 != 0)
    goto <bb 8>;
  else
    goto <bb 3>;

<bb 3>:
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 8>;
  else
    goto <bb 4>;

<bb 4>:
  D.46668_6 = smh_5->crypto_mode;
  if (D.46668_6 > 1)
    goto <bb 8>;
  else
    goto <bb 5>;

<bb 5>:
  switch_channel_set_flag_value (channel_3, 92, 1);
  i_7 = 0;
  # DEBUG i => i_7
  goto <bb 7>;

<bb 6>:
  D.46671_9 = session_2(D)->media_handle;
  D.46672_10 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_9, 0, 0, D.46672_10, 0, 0);
  D.46671_11 = session_2(D)->media_handle;
  D.46672_12 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_11, 1, 0, D.46672_12, 0, 0);
  i_13 = i_1 + 1;
  # DEBUG i => i_13

<bb 7>:
  # i_1 = PHI <i_7(5), i_13(6)>
  # DEBUG i => i_1
  D.46672_8 = smh_5->crypto_suite_order[i_1];
  if (D.46672_8 != 9)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 8>:
  return;

}



;; Function switch_core_session_get_media_handle (switch_core_session_get_media_handle)

Try : D.46433_1(P1) & D.46433_4(P4) : Same root, coalesced --> P1.
Try : D.46433_1(P1) & D.46433_5(P5) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.46433_1 - 1 4 5 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.46430_3 - 3 )
Partition 6 (.MEM_6(D) - 6 )
Partition 7 (.MEM_7 - 7 )

switch_core_session_get_media_handle (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46433;
  switch_status_t D.46430;

<bb 2>:
  D.46430_3 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46430_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.46433_4 = session_2(D)->media_handle;
  goto <bb 5>;

<bb 4>:
  D.46433_5 = 0B;

<bb 5>:
  # D.46433_1 = PHI <D.46433_4(3), D.46433_5(4)>
  return D.46433_1;

}



;; Function switch_core_session_clear_media_handle (switch_core_session_clear_media_handle)

Try : D.46428_1(P1) & D.46428_4(P4) : Same root, coalesced --> P1.
Try : D.46428_1(P1) & D.46428_5(P5) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.46428_1 - 1 4 5 )
Partition 2 (session_2(D) - 2 )
Partition 3 (D.46425_3 - 3 )
Partition 6 (.MEM_6(D) - 6 )

switch_core_session_clear_media_handle (struct switch_core_session_t * session)
{
  switch_status_t D.46428;
  struct switch_media_handle_t * D.46425;

<bb 2>:
  D.46425_3 = session_2(D)->media_handle;
  if (D.46425_3 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.46428_4 = 1;
  goto <bb 5>;

<bb 4>:
  D.46428_5 = 0;

<bb 5>:
  # D.46428_1 = PHI <D.46428_4(3), D.46428_5(4)>
  return D.46428_1;

}



;; Function switch_core_media_get_mparams (switch_core_media_get_mparams)


Partition map 

Partition 1 (smh_1(D) - 1 )
Partition 2 (D.46423_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )

switch_core_media_get_mparams (struct switch_media_handle_t * smh)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_get_mparams";
  struct switch_core_media_params_t * D.46423;

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1545, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46423_2 = smh_1(D)->mparams;
  return D.46423_2;

}



;; Function switch_core_media_prepare_codecs (switch_core_media_prepare_codecs)

Try : codec_string_18(P18) & abs_17(P17) : 2 different USER vars. No coalesce.
Try : codec_string_31(P31) & ocodec_26(P26) : 2 different USER vars. No coalesce.
Try : codec_string_30(P30) & ocodec_26(P26) : 2 different USER vars. No coalesce.
Try : codec_string_1(P1) & codec_string_20(P20) : Same root, coalesced --> P1.
Try : codec_string_1(P1) & codec_string_22(P22) : Same root, coalesced --> P1.
Try : codec_string_2(P2) & codec_string_18(P18) : Same root, coalesced --> P2.
Try : codec_string_2(P2) & codec_string_24(P24) : Same root, coalesced --> P2.
Try : codec_string_2(P2) & codec_string_1(P1) : Same root, coalesced --> P2.
Try : codec_string_2(P2) & codec_string_31(P31) : Same root, coalesced --> P2.
Try : codec_string_2(P2) & codec_string_29(P29) : Same root, coalesced --> P2.
Try : codec_string_2(P2) & codec_string_30(P30) : Same root, coalesced --> P2.

Partition map 

Partition 2 (codec_string_2 - 1 2 18 20 22 24 29 30 31 )
Partition 3 (codec_string_3 - 3 )
Partition 4 (ocodec_4 - 4 )
Partition 5 (session_5(D) - 5 )
Partition 6 (smh_6 - 6 )
Partition 7 (force_7(D) - 7 )
Partition 8 (D.46379_8 - 8 )
Partition 9 (D.46380_9 - 9 )
Partition 10 (D.46379_10 - 10 )
Partition 11 (D.46382_11 - 11 )
Partition 12 (D.46385_12 - 12 )
Partition 13 (D.46385_13 - 13 )
Partition 14 (D.46386_14 - 14 )
Partition 15 (D.46389_15 - 15 )
Partition 16 (D.46379_16 - 16 )
Partition 17 (abs_17 - 17 )
Partition 19 (D.46379_19 - 19 )
Partition 21 (D.46389_21 - 21 )
Partition 23 (D.46398_23 - 23 )
Partition 25 (D.46379_25 - 25 )
Partition 26 (ocodec_26 - 26 )
Partition 27 (D.46407_27 - 27 )
Partition 28 (D.46389_28 - 28 )
Partition 32 (D.46389_32 - 32 )
Partition 33 (tmp_codec_string_33 - 33 )
Partition 34 (D.46379_34 - 34 )
Partition 35 (D.46412_35 - 35 )
Partition 36 (D.46413_36 - 36 )
Partition 37 (D.46414_37 - 37 )
Partition 38 (D.46385_38 - 38 )
Partition 39 (D.46415_39 - 39 )
Partition 40 (D.46412_40 - 40 )
Partition 41 (D.46416_41 - 41 )
Partition 42 (D.46417_42 - 42 )
Partition 43 (D.46385_43 - 43 )
Partition 44 (D.46415_44 - 44 )
Partition 45 (D.46419_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50(D) - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )

switch_core_media_prepare_codecs (struct switch_core_session_t * session, switch_bool_t force)
{
  char * tmp_codec_string;
  static const char __func__[33] = "switch_core_media_prepare_codecs";
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_prepare_codecs";
  struct switch_media_handle_t * smh;
  const char * ocodec;
  const char * codec_string;
  const char * abs;
  int D.46419;
  int D.46417;
  int D.46416;
  const struct switch_codec_implementation_t *[50] * D.46415;
  int D.46414;
  unsigned int D.46413;
  char *[50] * D.46412;
  switch_core_media_flag_t D.46407;
  const char D.46398;
  struct switch_core_session_t * D.46389;
  int D.46386;
  struct switch_core_media_params_t * D.46385;
  uint32_t D.46382;
  uint32_t D.46380;
  struct switch_channel_t * D.46379;

<bb 2>:
  codec_string_3 = 0B;
  # DEBUG codec_string => codec_string_3
  ocodec_4 = 0B;
  # DEBUG ocodec => ocodec_4
  if (session_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1555, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_6 = session_5(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 29>;
  else
    goto <bb 5>;

<bb 5>:
  if (force_7(D) == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.46379_8 = session_5(D)->channel;
  D.46380_9 = switch_channel_test_flag (D.46379_8, 15);
  if (D.46380_9 != 0)
    goto <bb 29>;
  else
    goto <bb 7>;

<bb 7>:
  D.46379_10 = session_5(D)->channel;
  D.46382_11 = switch_channel_test_flag (D.46379_10, 29);
  if (D.46382_11 != 0)
    goto <bb 29>;
  else
    goto <bb 8>;

<bb 8>:
  if (force_7(D) != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.46385_12 = smh_6->mparams;
  D.46385_12->num_codecs = 0;

<bb 10>:
  D.46385_13 = smh_6->mparams;
  D.46386_14 = D.46385_13->num_codecs;
  if (D.46386_14 != 0)
    goto <bb 29>;
  else
    goto <bb 11>;

<bb 11>:
  smh_6->payload_space = 0;
  D.46389_15 = smh_6->session;
  if (D.46389_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  __assert_fail ("smh->session != ((void *)0)", "src/switch_core_media.c", 1575, &__PRETTY_FUNCTION__);

<bb 13>:
  D.46379_16 = session_5(D)->channel;
  abs_17 = switch_channel_get_variable_dup (D.46379_16, "absolute_codec_string", 1, -1);
  # DEBUG abs => abs_17
  if (abs_17 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  codec_string_18 = abs_17;
  # DEBUG codec_string => codec_string_18
  goto <bb 26> (ready);

<bb 15>:
  D.46379_19 = session_5(D)->channel;
  codec_string_20 = switch_channel_get_variable_dup (D.46379_19, "codec_string", 1, -1);
  # DEBUG codec_string => codec_string_20
  if (codec_string_20 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.46389_21 = smh_6->session;
  codec_string_22 = switch_core_media_get_codec_string (D.46389_21);
  # DEBUG codec_string => codec_string_22

<bb 17>:
  # codec_string_1 = PHI <codec_string_20(15), codec_string_22(16)>
  # DEBUG codec_string => codec_string_1
  if (codec_string_1 != 0B)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 18>:
  D.46398_23 = *codec_string_1;
  if (D.46398_23 == 61)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  codec_string_24 = codec_string_1 + 1;
  # DEBUG codec_string => codec_string_24
  goto <bb 26> (ready);

<bb 20>:
  D.46379_25 = session_5(D)->channel;
  ocodec_26 = switch_channel_get_variable_dup (D.46379_25, "originator_codec", 1, -1);
  # DEBUG ocodec => ocodec_26
  if (ocodec_26 != 0B)
    goto <bb 21>;
  else
    goto <bb 26> (ready);

<bb 21>:
  if (codec_string_1 == 0B)
    goto <bb 23>;
  else
    goto <bb 22>;

<bb 22>:
  D.46407_27 = smh_6->media_flags[1];
  if (D.46407_27 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  codec_string_31 = ocodec_26;
  # DEBUG codec_string => codec_string_31
  goto <bb 26> (ready);

<bb 24>:
  D.46389_28 = smh_6->session;
  codec_string_29 = switch_core_session_sprintf (D.46389_28, "%s,%s", ocodec_26, codec_string_1);
  # DEBUG codec_string => codec_string_29
  if (codec_string_29 == 0B)
    goto <bb 25>;
  else
    goto <bb 26> (ready);

<bb 25>:
  codec_string_30 = ocodec_26;
  # DEBUG codec_string => codec_string_30

  # codec_string_2 = PHI <codec_string_18(14), codec_string_24(19), codec_string_1(20), codec_string_31(23), codec_string_29(24), codec_string_30(25)>
ready:
  # DEBUG codec_string => codec_string_2
  if (codec_string_2 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.46389_32 = smh_6->session;
  tmp_codec_string_33 = switch_core_perform_session_strdup (D.46389_32, codec_string_2, "src/switch_core_media.c", &__func__, 1603);
  # DEBUG tmp_codec_string => tmp_codec_string_33
  D.46379_34 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.46379_34, "rtp_use_codec_string", codec_string_2, 1);
  D.46412_35 = &smh_6->codec_order;
  D.46413_36 = switch_separate_string (tmp_codec_string_33, 44, D.46412_35, 50);
  D.46414_37 = (int) D.46413_36;
  smh_6->codec_order_last = D.46414_37;
  D.46385_38 = smh_6->mparams;
  D.46415_39 = &smh_6->codecs;
  D.46412_40 = &smh_6->codec_order;
  D.46416_41 = smh_6->codec_order_last;
  D.46417_42 = switch_loadable_module_get_codecs_sorted (D.46415_39, 50, D.46412_40, D.46416_41);
  D.46385_38->num_codecs = D.46417_42;
  goto <bb 29>;

<bb 28>:
  D.46385_43 = smh_6->mparams;
  D.46415_44 = &smh_6->codecs;
  D.46419_45 = switch_loadable_module_get_codecs (D.46415_44, 50);
  D.46385_43->num_codecs = D.46419_45;

<bb 29>:
  return;

}



;; Function switch_core_media_write_frame (switch_core_media_write_frame)

Try : D.47721_75(P75) & D.47728_67(P67) --> P75 D.47721
Try : D.46099_23(P23) & D.47721_75(P75) --> P75 D.47721
Try : D.47730_76(P76) & D.47737_74(P74) --> P76 D.47730
Try : D.46103_26(P26) & D.47730_76(P76) --> P76 D.47730
Try : D.46080_47(P47) & status_1(P1) --> P47 status
Try : frames_3(P3) & frames_35(P35) : Same root, coalesced --> P3.
Try : frames_3(P3) & frames_36(P36) : Same root, coalesced --> P3.
Try : samples_2(P2) & samples_7(P7) : Same root, coalesced --> P2.
Try : samples_2(P2) & samples_40(P40) : Same root, coalesced --> P2.
Try : status_1(P47) & status_5(P5) : Same root, coalesced --> P47.
Try : status_1(P47) & status_46(P46) : Same root, coalesced --> P47.
Try : D.46080_4(P4) & D.46080_11(P11) : Same root, coalesced --> P4.
Try : D.46080_4(P4) & D.46080_13(P13) : Same root, coalesced --> P4.
Try : D.46080_4(P4) & D.46080_52(P52) : Same root, coalesced --> P4.
Try : D.46080_4(P4) & D.46080_49(P49) : Same root, coalesced --> P4.
Try : D.46080_4(P4) & D.46080_48(P48) : Same root, coalesced --> P4.
Try : D.46080_4(P4) & status_47(P47) --> P4 status

Partition map 

Partition 2 (samples_2 - 2 7 40 )
Partition 3 (frames_3 - 3 35 36 )
Partition 4 (status_4 - 1 4 5 11 13 46 47 48 49 52 )
Partition 6 (bytes_6 - 6 )
Partition 8 (frames_8 - 8 )
Partition 9 (session_9(D) - 9 )
Partition 10 (smh_10 - 10 )
Partition 12 (D.46081_12 - 12 )
Partition 14 (D.46084_14 - 14 )
Partition 15 (type_15(D) - 15 )
Partition 16 (D.46085_16 - 16 )
Partition 17 (engine_17 - 17 )
Partition 18 (D.46091_18 - 18 )
Partition 19 (D.46093_19 - 19 )
Partition 20 (D.46094_20 - 20 )
Partition 21 (D.46091_21 - 21 )
Partition 22 (D.46098_22 - 22 )
Partition 24 (D.46091_24 - 24 )
Partition 25 (D.46098_25 - 25 )
Partition 27 (frame_27(D) - 27 )
Partition 28 (D.46104_28 - 28 )
Partition 29 (D.46105_29 - 29 )
Partition 30 (D.46108_30 - 30 )
Partition 31 (D.46108_31 - 31 )
Partition 32 (bytes_32 - 32 )
Partition 33 (D.46111_33 - 33 )
Partition 34 (D.46112_34 - 34 )
Partition 37 (D.46114_37 - 37 )
Partition 38 (frames.127_38 - 38 )
Partition 39 (D.46116_39 - 39 )
Partition 41 (D.46117_41 - 41 )
Partition 42 (samples.128_42 - 42 )
Partition 43 (D.46119_43 - 43 )
Partition 44 (D.46093_44 - 44 )
Partition 45 (D.46120_45 - 45 )
Partition 50 (D.46086_50 - 50 )
Partition 51 (D.46087_51 - 51 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55(D) - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (D.47726_61 - 61 )
Partition 62 (D.47725_62 - 62 )
Partition 63 (D.47724_63 - 63 )
Partition 64 (D.47723_64 - 64 )
Partition 65 (D.47722_65 - 65 )
Partition 66 (iftmp.104_66 - 66 )
Partition 68 (D.47735_68 - 68 )
Partition 69 (D.47734_69 - 69 )
Partition 70 (D.47733_70 - 70 )
Partition 71 (D.47732_71 - 71 )
Partition 72 (D.47731_72 - 72 )
Partition 73 (iftmp.104_73 - 73 )
Partition 75 (D.47721_75 - 23 67 75 )
Partition 76 (D.47730_76 - 26 74 76 )

Coalesced D.46080_11 to status_4
Coalesced D.46080_13 to status_4
Coalesced D.46099_23 to D.47721_75
Coalesced D.46103_26 to D.47730_76
Coalesced D.46080_48 to status_4
Coalesced D.46080_49 to status_4
Coalesced D.46080_52 to status_4
Coalesced D.47728_67 to D.47721_75
Coalesced D.47737_74 to D.47730_76
Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;
  int bytes;
  int samples;
  int frames;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_write_frame";

  { Scope block #142 src/switch_core_media.c:2021 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #143 Originating from :#0 

    }

  }

  { Scope block #144 src/switch_core_media.c:2016 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #145 Originating from :#0 

    }

  }

}
switch_core_media_write_frame (struct switch_core_session_t * session, struct switch_frame_t * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47735;
  uint32_t D.47734;
  struct switch_mutex_t * D.47733;
  struct switch_codec_interface_t * D.47732;
  const struct switch_codec_implementation_t * D.47731;
  switch_bool_t D.47730;
  int iftmp.104;
  uint32_t D.47726;
  uint32_t D.47725;
  struct switch_mutex_t * D.47724;
  struct switch_codec_interface_t * D.47723;
  const struct switch_codec_implementation_t * D.47722;
  switch_bool_t D.47721;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_write_frame";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  int frames;
  int samples;
  int bytes;
  switch_status_t status;
  int D.46120;
  uint32_t D.46119;
  uint32_t samples.128;
  uint32_t D.46117;
  uint32_t D.46116;
  uint32_t frames.127;
  uint32_t D.46114;
  int D.46112;
  uint32_t D.46111;
  uint32_t D.46108;
  unsigned int D.46105;
  unsigned int D.46104;
  struct switch_codec_t * D.46098;
  uint8_t D.46094;
  struct switch_rtp_t * D.46093;
  const struct switch_codec_implementation_t * D.46091;
  int D.46087;
  struct switch_channel_t * D.46086;
  unsigned int D.46085;
  struct switch_rtp_engine_t[2] * D.46084;
  switch_core_media_flag_t D.46081;

<bb 2>:
  status_5 = 0;
  # DEBUG status => status_5
  bytes_6 = 0;
  # DEBUG bytes => bytes_6
  samples_7 = 0;
  # DEBUG samples => samples_7
  frames_8 = 0;
  # DEBUG frames => frames_8
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1996, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_11 = 1;
  goto <bb 40>;

<bb 6>:
  D.46081_12 = smh_10->media_flags[0];
  if (D.46081_12 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  status_13 = 1;
  goto <bb 40>;

<bb 8>:
  D.46084_14 = &smh_10->engines;
  D.46085_16 = type_15(D) * 11416;
  engine_17 = D.46084_14 + D.46085_16;
  # DEBUG engine => engine_17
  goto <bb 12>;

<bb 9>:
  D.46086_50 = session_9(D)->channel;
  D.46087_51 = switch_channel_test_ready (D.46086_50, 1, 0);
  if (D.46087_51 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  switch_sleep (10000);
  goto <bb 12>;

<bb 11>:
  status_52 = 9;
  goto <bb 40>;

<bb 12>:
  D.46091_18 = engine_17->read_codec.implementation;
  if (D.46091_18 == 0B)
    goto <bb 9>;
  else
    goto <bb 13>;

<bb 13>:
  D.46093_19 = engine_17->rtp_session;
  D.46094_20 = switch_rtp_ready (D.46093_19);
  if (D.46094_20 == 0)
    goto <bb 9>;
  else
    goto <bb 14>;

<bb 14>:
  D.46091_21 = engine_17->read_codec.implementation;
  if (D.46091_21 == 0B)
    goto <bb 22>;
  else
    goto <bb 15>;

<bb 15>:
  D.46098_22 = &engine_17->read_codec;
  # DEBUG codec => D.46098_22
  if (D.46098_22 != 0B)
    goto <bb 16>;
  else
    goto <bb 20>;

<bb 16>:
  D.47726_61 = D.46098_22->flags;
  D.47725_62 = D.47726_61 & 256;
  if (D.47725_62 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

<bb 17>:
  D.47724_63 = D.46098_22->mutex;
  if (D.47724_63 != 0B)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 18>:
  D.47723_64 = D.46098_22->codec_interface;
  if (D.47723_64 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.47722_65 = D.46098_22->implementation;
  if (D.47722_65 != 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:

<bb 21>:
  # iftmp.104_66 = PHI <1(19), 0(20)>
  D.47721_67 = (switch_bool_t) iftmp.104_66;
  D.47721_75 = D.47721_67;
  D.47721_23 = D.47721_75;
  if (D.47721_23 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  status_49 = 9;
  goto <bb 40>;

<bb 23>:
  D.46091_24 = engine_17->read_codec.implementation;
  if (D.46091_24 == 0B)
    goto <bb 31>;
  else
    goto <bb 24>;

<bb 24>:
  D.46098_25 = &engine_17->read_codec;
  # DEBUG codec => D.46098_25
  if (D.46098_25 != 0B)
    goto <bb 25>;
  else
    goto <bb 29>;

<bb 25>:
  D.47735_68 = D.46098_25->flags;
  D.47734_69 = D.47735_68 & 256;
  if (D.47734_69 != 0)
    goto <bb 26>;
  else
    goto <bb 29>;

<bb 26>:
  D.47733_70 = D.46098_25->mutex;
  if (D.47733_70 != 0B)
    goto <bb 27>;
  else
    goto <bb 29>;

<bb 27>:
  D.47732_71 = D.46098_25->codec_interface;
  if (D.47732_71 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.47731_72 = D.46098_25->implementation;
  if (D.47731_72 != 0B)
    goto <bb 30>;
  else
    goto <bb 29>;

<bb 29>:

<bb 30>:
  # iftmp.104_73 = PHI <1(28), 0(29)>
  D.47730_74 = (switch_bool_t) iftmp.104_73;
  D.47730_76 = D.47730_74;
  D.47730_26 = D.47730_76;
  if (D.47730_26 == 0)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  status_48 = 1;
  goto <bb 40>;

<bb 32>:
  D.46104_28 = BIT_FIELD_REF <*frame_27(D), 32, 480>;
  D.46105_29 = D.46104_28 & 33;
  if (D.46105_29 == 0)
    goto <bb 33>;
  else
    goto <bb 37>;

<bb 33>:
  D.46108_30 = engine_17->read_impl.encoded_bytes_per_packet;
  if (D.46108_30 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  D.46108_31 = engine_17->read_impl.encoded_bytes_per_packet;
  bytes_32 = (int) D.46108_31;
  # DEBUG bytes => bytes_32
  D.46111_33 = frame_27(D)->datalen;
  D.46112_34 = (int) D.46111_33;
  frames_35 = D.46112_34 / bytes_32;
  # DEBUG frames => frames_35
  goto <bb 36>;

<bb 35>:
  frames_36 = 1;
  # DEBUG frames => frames_36

<bb 36>:
  # frames_3 = PHI <frames_35(34), frames_36(35)>
  # DEBUG frames => frames_3
  D.46114_37 = engine_17->read_impl.samples_per_packet;
  frames.127_38 = (uint32_t) frames_3;
  D.46116_39 = D.46114_37 * frames.127_38;
  samples_40 = (int) D.46116_39;
  # DEBUG samples => samples_40

<bb 37>:
  # samples_2 = PHI <samples_7(32), samples_40(36)>
  # DEBUG samples => samples_2
  D.46117_41 = engine_17->timestamp_send;
  samples.128_42 = (uint32_t) samples_2;
  D.46119_43 = D.46117_41 + samples.128_42;
  engine_17->timestamp_send = D.46119_43;
  D.46093_44 = engine_17->rtp_session;
  D.46120_45 = switch_rtp_write_frame (D.46093_44, frame_27(D));
  if (D.46120_45 < 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  status_46 = 1;
  # DEBUG status => status_46

<bb 39>:
  # status_1 = PHI <status_5(37), status_46(38)>
  # DEBUG status => status_1
  status_47 = status_1;

<bb 40>:
  # status_4 = PHI <status_11(5), status_13(7), status_52(11), status_49(22), status_48(31), status_47(39)>
  return status_4;

}



;; Function switch_core_media_copy_t38_options (switch_core_media_copy_t38_options)

Try : local_t38_options_1(P1) & local_t38_options_4(P4) : Same root, coalesced --> P1.
Try : local_t38_options_1(P1) & local_t38_options_6(P6) : Same root, coalesced --> P1.

Partition map 

Partition 1 (local_t38_options_1 - 1 4 6 )
Partition 2 (session_2(D) - 2 )
Partition 3 (channel_3 - 3 )
Partition 5 (t38_options_5(D) - 5 )
Partition 7 (D.46061_7 - 7 )
Partition 8 (D.46062_8 - 8 )
Partition 9 (D.46063_9 - 9 )
Partition 10 (D.46064_10 - 10 )
Partition 11 (D.46065_11 - 11 )
Partition 12 (D.46066_12 - 12 )
Partition 13 (D.46067_13 - 13 )
Partition 14 (D.46068_14 - 14 )
Partition 15 (D.46069_15 - 15 )
Partition 16 (D.46070_16 - 16 )
Partition 17 (D.46071_17 - 17 )
Partition 18 (D.46072_18 - 18 )
Partition 19 (D.46073_19 - 19 )
Partition 20 (D.46074_20 - 20 )
Partition 21 (D.46075_21 - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23(D) - 23 )
Partition 24 (.MEM_24 - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )

switch_core_media_copy_t38_options (struct switch_t38_options_t * t38_options, struct switch_core_session_t * session)
{
  static const char __func__[35] = "switch_core_media_copy_t38_options";
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_copy_t38_options";
  struct switch_t38_options_t * local_t38_options;
  struct switch_channel_t * channel;
  uint16_t D.46075;
  char * D.46074;
  const char * D.46073;
  char * D.46072;
  const char * D.46071;
  char * D.46070;
  const char * D.46069;
  uint32_t D.46068;
  uint32_t D.46067;
  char * D.46066;
  const char * D.46065;
  switch_bool_t D.46064;
  switch_bool_t D.46063;
  switch_bool_t D.46062;
  uint32_t D.46061;

<bb 2>:
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  local_t38_options_4 = switch_channel_get_private (channel_3, "t38_options");
  # DEBUG local_t38_options => local_t38_options_4
  if (t38_options_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("t38_options", "src/switch_core_media.c", 2052, &__PRETTY_FUNCTION__);

<bb 4>:
  if (local_t38_options_4 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  local_t38_options_6 = switch_core_perform_session_alloc (session_2(D), 60, "src/switch_core_media.c", &__func__, 2055);
  # DEBUG local_t38_options => local_t38_options_6

<bb 6>:
  # local_t38_options_1 = PHI <local_t38_options_4(4), local_t38_options_6(5)>
  # DEBUG local_t38_options => local_t38_options_1
  D.46061_7 = t38_options_5(D)->T38MaxBitRate;
  local_t38_options_1->T38MaxBitRate = D.46061_7;
  D.46062_8 = t38_options_5(D)->T38FaxFillBitRemoval;
  local_t38_options_1->T38FaxFillBitRemoval = D.46062_8;
  D.46063_9 = t38_options_5(D)->T38FaxTranscodingMMR;
  local_t38_options_1->T38FaxTranscodingMMR = D.46063_9;
  D.46064_10 = t38_options_5(D)->T38FaxTranscodingJBIG;
  local_t38_options_1->T38FaxTranscodingJBIG = D.46064_10;
  D.46065_11 = t38_options_5(D)->T38FaxRateManagement;
  D.46066_12 = switch_core_perform_session_strdup (session_2(D), D.46065_11, "src/switch_core_media.c", &__func__, 2062);
  local_t38_options_1->T38FaxRateManagement = D.46066_12;
  D.46067_13 = t38_options_5(D)->T38FaxMaxBuffer;
  local_t38_options_1->T38FaxMaxBuffer = D.46067_13;
  D.46068_14 = t38_options_5(D)->T38FaxMaxDatagram;
  local_t38_options_1->T38FaxMaxDatagram = D.46068_14;
  D.46069_15 = t38_options_5(D)->T38FaxUdpEC;
  D.46070_16 = switch_core_perform_session_strdup (session_2(D), D.46069_15, "src/switch_core_media.c", &__func__, 2065);
  local_t38_options_1->T38FaxUdpEC = D.46070_16;
  D.46071_17 = t38_options_5(D)->T38VendorInfo;
  D.46072_18 = switch_core_perform_session_strdup (session_2(D), D.46071_17, "src/switch_core_media.c", &__func__, 2066);
  local_t38_options_1->T38VendorInfo = D.46072_18;
  D.46073_19 = t38_options_5(D)->remote_ip;
  D.46074_20 = switch_core_perform_session_strdup (session_2(D), D.46073_19, "src/switch_core_media.c", &__func__, 2067);
  local_t38_options_1->remote_ip = D.46074_20;
  D.46075_21 = t38_options_5(D)->remote_port;
  local_t38_options_1->remote_port = D.46075_21;
  switch_channel_set_private (channel_3, "t38_options", local_t38_options_1);
  return;

}



;; Function switch_core_media_process_t38_passthru (switch_core_media_process_t38_passthru)

Try : D.47109_1(P1) & D.47109_4(P4) : Same root, coalesced --> P1.
Try : D.47109_1(P1) & D.47109_50(P50) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.47109_1 - 1 4 50 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (a_engine_5 - 5 )
Partition 6 (D.47110_6 - 6 )
Partition 7 (remote_host_7 - 7 )
Partition 8 (D.47110_8 - 8 )
Partition 9 (remote_port_9 - 9 )
Partition 10 (D.47111_10 - 10 )
Partition 11 (t38_options_11(D) - 11 )
Partition 12 (D.47112_12 - 12 )
Partition 13 (D.47113_13 - 13 )
Partition 14 (D.47111_14 - 14 )
Partition 15 (D.47114_15 - 15 )
Partition 16 (D.47117_16 - 16 )
Partition 17 (D.47118_17 - 17 )
Partition 18 (D.47119_18 - 18 )
Partition 19 (D.47111_19 - 19 )
Partition 20 (D.47121_20 - 20 )
Partition 21 (D.38429_21 - 21 )
Partition 22 (D.47111_22 - 22 )
Partition 23 (D.47123_23 - 23 )
Partition 24 (D.47125_24 - 24 )
Partition 25 (D.47126_25 - 25 )
Partition 26 (D.47125_26 - 26 )
Partition 27 (D.47127_27 - 27 )
Partition 28 (D.47128_28 - 28 )
Partition 29 (D.47111_29 - 29 )
Partition 30 (D.47121_30 - 30 )
Partition 31 (D.47111_31 - 31 )
Partition 32 (D.47123_32 - 32 )
Partition 33 (D.47129_33 - 33 )
Partition 34 (D.47111_34 - 34 )
Partition 35 (D.47123_35 - 35 )
Partition 36 (D.47129_36 - 36 )
Partition 37 (D.47125_37 - 37 )
Partition 38 (D.47111_38 - 38 )
Partition 39 (D.47121_39 - 39 )
Partition 40 (D.47125_40 - 40 )
Partition 41 (D.47110_41 - 41 )
Partition 42 (D.47111_42 - 42 )
Partition 43 (D.47121_43 - 43 )
Partition 44 (D.47111_44 - 44 )
Partition 45 (D.47123_45 - 45 )
Partition 46 (D.47130_46 - 46 )
Partition 47 (err.171_47 - 47 )
Partition 48 (D.47125_48 - 48 )
Partition 49 (other_session_49(D) - 49 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52(D) - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67 - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (.MEM_69 - 69 )
Partition 70 (.MEM_70 - 70 )

switch_core_media_process_t38_passthru (struct switch_core_session_t * session, struct switch_core_session_t * other_session, struct switch_t38_options_t * t38_options)
{
  const char * err;
  static const char __func__[39] = "switch_core_media_process_t38_passthru";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_process_t38_passthru";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  const char * err.171;
  switch_status_t D.47130;
  int D.47129;
  int D.47128;
  char * D.47127;
  char * D.47126;
  struct switch_channel_t * D.47125;
  switch_port_t D.47123;
  char * D.47121;
  int D.38429;
  _Bool D.47119;
  _Bool D.47118;
  _Bool D.47117;
  uint16_t D.47114;
  char * D.47113;
  const char * D.47112;
  struct payload_map_t * D.47111;
  struct switch_rtp_t * D.47110;
  switch_status_t D.47109;

<bb 2>:
  tmp = "";
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 473, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47109_4 = 1;
  goto <bb 13>;

<bb 6>:
  a_engine_5 = &smh_3->engines;
  # DEBUG a_engine => a_engine_5
  D.47110_6 = a_engine_5->rtp_session;
  remote_host_7 = switch_rtp_get_remote_host (D.47110_6);
  # DEBUG remote_host => remote_host_7
  D.47110_8 = a_engine_5->rtp_session;
  remote_port_9 = switch_rtp_get_remote_port (D.47110_8);
  # DEBUG remote_port => remote_port_9
  D.47111_10 = a_engine_5->cur_payload_map;
  D.47112_12 = t38_options_11(D)->remote_ip;
  D.47113_13 = switch_core_perform_session_strdup (session_2(D), D.47112_12, "src/switch_core_media.c", &__func__, 484);
  D.47111_10->remote_sdp_ip = D.47113_13;
  D.47111_14 = a_engine_5->cur_payload_map;
  D.47114_15 = t38_options_11(D)->remote_port;
  D.47111_14->remote_sdp_port = D.47114_15;
  D.47117_16 = remote_host_7 != 0B;
  D.47118_17 = remote_port_9 != 0;
  D.47119_18 = D.47117_16 && D.47118_17;
  if (D.47119_18 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 7>:
  D.47111_19 = a_engine_5->cur_payload_map;
  D.47121_20 = D.47111_19->remote_sdp_ip;
  D.38429_21 = __builtin_strcmp (remote_host_7, D.47121_20);
  if (D.38429_21 == 0)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.47111_22 = a_engine_5->cur_payload_map;
  D.47123_23 = D.47111_22->remote_sdp_port;
  if (D.47123_23 == remote_port_9)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.47125_24 = session_2(D)->channel;
  D.47126_25 = switch_channel_get_name (D.47125_24);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 489, session_2(D), 7, "Audio params are unchanged for %s.\n", D.47126_25);
  goto <bb 12>;

<bb 10>:
  err = 0B;
  D.47125_26 = session_2(D)->channel;
  D.47127_27 = switch_channel_get_name (D.47125_26);
  D.47128_28 = (int) remote_port_9;
  D.47111_29 = a_engine_5->cur_payload_map;
  D.47121_30 = D.47111_29->remote_sdp_ip;
  D.47111_31 = a_engine_5->cur_payload_map;
  D.47123_32 = D.47111_31->remote_sdp_port;
  D.47129_33 = (int) D.47123_32;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 495, session_2(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.47127_27, remote_host_7, D.47128_28, D.47121_30, D.47129_33);
  D.47111_34 = a_engine_5->cur_payload_map;
  D.47123_35 = D.47111_34->remote_sdp_port;
  D.47129_36 = (int) D.47123_35;
  switch_snprintf (&tmp, 32, "%d", D.47129_36);
  D.47125_37 = session_2(D)->channel;
  D.47111_38 = a_engine_5->cur_payload_map;
  D.47121_39 = D.47111_38->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.47125_37, "remote_media_ip", D.47121_39, 1);
  D.47125_40 = session_2(D)->channel;
  switch_channel_set_variable_var_check (D.47125_40, "remote_media_port", &tmp, 1);
  D.47110_41 = a_engine_5->rtp_session;
  D.47111_42 = a_engine_5->cur_payload_map;
  D.47121_43 = D.47111_42->remote_sdp_ip;
  D.47111_44 = a_engine_5->cur_payload_map;
  D.47123_45 = D.47111_44->remote_sdp_port;
  D.47130_46 = switch_rtp_set_remote_address (D.47110_41, D.47121_43, D.47123_45, 0, 1, &err);
  if (D.47130_46 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  err.171_47 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 505, session_2(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.171_47);
  D.47125_48 = session_2(D)->channel;
  switch_channel_perform_hangup (D.47125_48, "src/switch_core_media.c", &__func__, 506, 88);

<bb 12>:
  switch_core_media_copy_t38_options (t38_options_11(D), other_session_49(D));
  D.47109_50 = 0;

<bb 13>:
  # D.47109_1 = PHI <D.47109_4(5), D.47109_50(12)>
  return D.47109_1;

}



;; Function switch_core_media_get_offered_pt (switch_core_media_get_offered_pt)

Try : i_1(P1) & i_7(P7) : Same root, coalesced --> P1.
Try : i_1(P1) & i_19(P19) : Same root, coalesced --> P1.
Try : D.46043_2(P2) & D.46043_21(P21) : Same root, coalesced --> P2.
Try : D.46043_2(P2) & D.46043_18(P18) : Same root, coalesced --> P2.
Try : D.46043_2(P2) & D.46043_20(P20) : Same root, coalesced --> P2.

Partition map 

Partition 1 (i_1 - 1 7 19 )
Partition 2 (D.46043_2 - 2 18 20 21 )
Partition 3 (i_3 - 3 )
Partition 4 (session_4(D) - 4 )
Partition 5 (smh_5 - 5 )
Partition 6 (mimp_6(D) - 6 )
Partition 8 (D.46054_8 - 8 )
Partition 9 (D.46055_9 - 9 )
Partition 10 (imp_10 - 10 )
Partition 11 (D.46044_11 - 11 )
Partition 12 (D.46045_12 - 12 )
Partition 13 (D.46046_13 - 13 )
Partition 14 (D.46049_14 - 14 )
Partition 15 (D.46050_15 - 15 )
Partition 16 (D.46053_16 - 16 )
Partition 17 (pt_17(D) - 17 )
Partition 22 (.MEM_22(D) - 22 )
Partition 23 (.MEM_23 - 23 )

switch_core_media_get_offered_pt (struct switch_core_session_t * session, const struct switch_codec_implementation_t * mimp, switch_payload_t * pt)
{
  const struct switch_codec_implementation_t * imp;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_get_offered_pt";
  struct switch_media_handle_t * smh;
  int i;
  int D.46055;
  struct switch_core_media_params_t * D.46054;
  switch_payload_t D.46053;
  const uint32_t D.46050;
  const uint32_t D.46049;
  int D.46046;
  char * const D.46045;
  char * const D.46044;
  switch_status_t D.46043;

<bb 2>:
  i_3 = 0;
  # DEBUG i => i_3
  if (session_4(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2081, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_5 = session_4(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  if (mimp_6(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.46043_21 = 1;
  goto <bb 14>;

<bb 7>:
  i_7 = 0;
  # DEBUG i => i_7
  goto <bb 12>;

<bb 8>:
  imp_10 = smh_5->codecs[i_1];
  # DEBUG imp => imp_10
  D.46044_11 = imp_10->iananame;
  D.46045_12 = mimp_6(D)->iananame;
  D.46046_13 = strcasecmp (D.46044_11, D.46045_12);
  if (D.46046_13 == 0)
    goto <bb 9>;
  else
    goto <bb 11>;

<bb 9>:
  D.46049_14 = imp_10->actual_samples_per_second;
  D.46050_15 = mimp_6(D)->actual_samples_per_second;
  if (D.46049_14 == D.46050_15)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.46053_16 = smh_5->ianacodes[i_1];
  *pt_17(D) = D.46053_16;
  D.46043_18 = 0;
  goto <bb 14>;

<bb 11>:
  i_19 = i_1 + 1;
  # DEBUG i => i_19

<bb 12>:
  # i_1 = PHI <i_7(7), i_19(11)>
  # DEBUG i => i_1
  D.46054_8 = smh_5->mparams;
  D.46055_9 = D.46054_8->num_codecs;
  if (D.46055_9 > i_1)
    goto <bb 8>;
  else
    goto <bb 13>;

<bb 13>:
  D.46043_20 = 1;

<bb 14>:
  # D.46043_2 = PHI <D.46043_21(6), D.46043_18(10), D.46043_20(13)>
  return D.46043_2;

}



;; Function switch_core_media_set_video_codec (switch_core_media_set_video_codec)

Try : D.47743_132(P132) & D.47750_131(P131) --> P132 D.47743
Try : D.46002_10(P10) & D.47743_132(P132) --> P132 D.47743
Try : D.45994_1(P1) & D.45994_4(P4) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_7(P7) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_12(P12) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_24(P24) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_40(P40) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_50(P50) : Same root, coalesced --> P1.
Try : D.45994_1(P1) & D.45994_90(P90) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.45994_1 - 1 4 7 12 24 40 50 90 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (v_engine_5 - 5 )
Partition 6 (D.45995_6 - 6 )
Partition 8 (D.45998_8 - 8 )
Partition 9 (D.46001_9 - 9 )
Partition 11 (force_11(D) - 11 )
Partition 13 (D.45998_13 - 13 )
Partition 14 (D.46010_14 - 14 )
Partition 15 (D.46011_15 - 15 )
Partition 16 (D.46012_16 - 16 )
Partition 17 (D.46013_17 - 17 )
Partition 18 (D.45998_18 - 18 )
Partition 19 (D.46015_19 - 19 )
Partition 20 (D.46011_20 - 20 )
Partition 21 (D.46016_21 - 21 )
Partition 22 (D.45998_22 - 22 )
Partition 23 (D.46010_23 - 23 )
Partition 25 (D.45998_25 - 25 )
Partition 26 (D.46010_26 - 26 )
Partition 27 (D.46011_27 - 27 )
Partition 28 (D.46012_28 - 28 )
Partition 29 (D.46001_29 - 29 )
Partition 30 (D.46017_30 - 30 )
Partition 31 (D.46001_31 - 31 )
Partition 32 (D.46011_32 - 32 )
Partition 33 (D.46012_33 - 33 )
Partition 34 (D.46011_34 - 34 )
Partition 35 (D.46018_35 - 35 )
Partition 36 (D.46011_36 - 36 )
Partition 37 (D.46016_37 - 37 )
Partition 38 (D.46019_38 - 38 )
Partition 39 (D.46020_39 - 39 )
Partition 41 (D.46017_41 - 41 )
Partition 42 (D.46011_42 - 42 )
Partition 43 (D.46012_43 - 43 )
Partition 44 (D.46011_44 - 44 )
Partition 45 (D.46018_45 - 45 )
Partition 46 (D.46011_46 - 46 )
Partition 47 (D.46016_47 - 47 )
Partition 48 (D.46023_48 - 48 )
Partition 49 (D.46024_49 - 49 )
Partition 51 (D.46011_51 - 51 )
Partition 52 (D.46016_52 - 52 )
Partition 53 (D.46027_53 - 53 )
Partition 54 (D.46028_54 - 54 )
Partition 55 (D.46011_55 - 55 )
Partition 56 (D.46012_56 - 56 )
Partition 57 (D.46011_57 - 57 )
Partition 58 (D.46016_58 - 58 )
Partition 59 (D.46011_59 - 59 )
Partition 60 (D.46029_60 - 60 )
Partition 61 (D.46001_61 - 61 )
Partition 62 (D.46030_62 - 62 )
Partition 63 (D.46031_63 - 63 )
Partition 64 (D.46011_64 - 64 )
Partition 65 (D.46032_65 - 65 )
Partition 66 (D.46011_66 - 66 )
Partition 67 (D.46032_67 - 67 )
Partition 68 (D.46001_68 - 68 )
Partition 69 (D.46017_69 - 69 )
Partition 70 (D.46027_70 - 70 )
Partition 71 (D.46011_71 - 71 )
Partition 72 (D.46012_72 - 72 )
Partition 73 (D.46011_73 - 73 )
Partition 74 (D.46016_74 - 74 )
Partition 75 (D.46033_75 - 75 )
Partition 76 (D.46034_76 - 76 )
Partition 77 (D.46033_77 - 77 )
Partition 78 (D.46011_78 - 78 )
Partition 79 (D.46032_79 - 79 )
Partition 80 (D.46027_80 - 80 )
Partition 81 (D.46011_81 - 81 )
Partition 82 (D.46012_82 - 82 )
Partition 83 (D.46027_83 - 83 )
Partition 84 (D.46011_84 - 84 )
Partition 85 (D.46018_85 - 85 )
Partition 86 (D.46027_86 - 86 )
Partition 87 (D.46011_87 - 87 )
Partition 88 (D.46016_88 - 88 )
Partition 89 (D.46027_89 - 89 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93(D) - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )
Partition 120 (.MEM_120 - 120 )
Partition 121 (.MEM_121 - 121 )
Partition 122 (.MEM_122 - 122 )
Partition 123 (.MEM_123 - 123 )
Partition 124 (.MEM_124 - 124 )
Partition 125 (D.47748_125 - 125 )
Partition 126 (D.47747_126 - 126 )
Partition 127 (D.47746_127 - 127 )
Partition 128 (D.47745_128 - 128 )
Partition 129 (D.47744_129 - 129 )
Partition 130 (iftmp.104_130 - 130 )
Partition 132 (D.47743_132 - 10 131 132 )

Coalesced D.46002_10 to D.47743_132
Coalesced D.47750_131 to D.47743_132
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_set_video_codec";
  static const char __func__[34] = "switch_core_media_set_video_codec";

  { Scope block #146 src/switch_core_media.c:2121 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #147 Originating from :#0 

    }

  }

  { Scope block #148 
    struct switch_core_session_message_t msg;

  }

}
switch_core_media_set_video_codec (struct switch_core_session_t * session, int force)
{
  int iftmp.104;
  uint32_t D.47748;
  uint32_t D.47747;
  struct switch_mutex_t * D.47746;
  struct switch_codec_interface_t * D.47745;
  const struct switch_codec_implementation_t * D.47744;
  switch_bool_t D.47743;
  struct switch_core_session_message_t msg;
  static const char __func__[34] = "switch_core_media_set_video_codec";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_set_video_codec";
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  uint8_t D.46034;
  struct switch_rtp_t * D.46033;
  switch_payload_t D.46032;
  char * D.46031;
  char * D.46030;
  uint32_t D.46029;
  char * D.46028;
  struct switch_channel_t * D.46027;
  switch_status_t D.46024;
  struct switch_memory_pool_t * D.46023;
  switch_status_t D.46020;
  struct switch_memory_pool_t * D.46019;
  char * D.46018;
  struct switch_codec_t * D.46017;
  long unsigned int D.46016;
  const uint32_t D.46015;
  int D.46013;
  char * D.46012;
  struct payload_map_t * D.46011;
  char * const D.46010;
  struct switch_codec_t * D.46001;
  const struct switch_codec_implementation_t * D.45998;
  uint8_t D.45995;
  switch_status_t D.45994;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2109, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.45994_4 = 1;
  goto <bb 29>;

<bb 6>:
  v_engine_5 = &smh_3->engines[1];
  # DEBUG v_engine => v_engine_5
  D.45995_6 = v_engine_5->codec_negotiated;
  if (D.45995_6 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.45994_7 = 1;
  goto <bb 29>;

<bb 8>:
  D.45998_8 = v_engine_5->read_codec.implementation;
  if (D.45998_8 != 0B)
    goto <bb 9>;
  else
    goto <bb 22>;

<bb 9>:
  D.46001_9 = &v_engine_5->read_codec;
  # DEBUG codec => D.46001_9
  if (D.46001_9 != 0B)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 10>:
  D.47748_125 = D.46001_9->flags;
  D.47747_126 = D.47748_125 & 256;
  if (D.47747_126 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.47746_127 = D.46001_9->mutex;
  if (D.47746_127 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.47745_128 = D.46001_9->codec_interface;
  if (D.47745_128 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.47744_129 = D.46001_9->implementation;
  if (D.47744_129 != 0B)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # iftmp.104_130 = PHI <1(13), 0(14)>
  D.47743_131 = (switch_bool_t) iftmp.104_130;
  D.47743_132 = D.47743_131;
  D.47743_10 = D.47743_132;
  if (D.47743_10 != 0)
    goto <bb 16>;
  else
    goto <bb 22>;

<bb 16>:
  if (force_11(D) == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.45994_12 = 0;
  goto <bb 29>;

<bb 18>:
  D.45998_13 = v_engine_5->read_codec.implementation;
  D.46010_14 = D.45998_13->iananame;
  D.46011_15 = v_engine_5->cur_payload_map;
  D.46012_16 = D.46011_15->rm_encoding;
  D.46013_17 = strcasecmp (D.46010_14, D.46012_16);
  if (D.46013_17 != 0)
    goto <bb 20>;
  else
    goto <bb 19>;

<bb 19>:
  D.45998_18 = v_engine_5->read_codec.implementation;
  D.46015_19 = D.45998_18->samples_per_second;
  D.46011_20 = v_engine_5->cur_payload_map;
  D.46016_21 = D.46011_20->rm_rate;
  if (D.46015_19 != D.46016_21)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.45998_25 = v_engine_5->read_codec.implementation;
  D.46010_26 = D.45998_25->iananame;
  D.46011_27 = v_engine_5->cur_payload_map;
  D.46012_28 = D.46011_27->rm_encoding;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2128, session_2(D), 7, "Changing Codec from %s to %s\n", D.46010_26, D.46012_28);
  D.46001_29 = &v_engine_5->read_codec;
  switch_core_codec_destroy (D.46001_29);
  D.46017_30 = &v_engine_5->write_codec;
  switch_core_codec_destroy (D.46017_30);
  goto <bb 22>;

<bb 21>:
  D.45998_22 = v_engine_5->read_codec.implementation;
  D.46010_23 = D.45998_22->iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2133, session_2(D), 7, "Already using %s\n", D.46010_23);
  D.45994_24 = 0;
  goto <bb 29>;

<bb 22>:
  D.46001_31 = &v_engine_5->read_codec;
  D.46011_32 = v_engine_5->cur_payload_map;
  D.46012_33 = D.46011_32->rm_encoding;
  D.46011_34 = v_engine_5->cur_payload_map;
  D.46018_35 = D.46011_34->rm_fmtp;
  D.46011_36 = v_engine_5->cur_payload_map;
  D.46016_37 = D.46011_36->rm_rate;
  D.46019_38 = switch_core_session_get_pool (session_2(D));
  D.46020_39 = switch_core_codec_init_with_bitrate (D.46001_31, D.46012_33, D.46018_35, D.46016_37, 0, 1, 0, 3, 0B, D.46019_38);
  if (D.46020_39 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2149, session_2(D), 3, "Can\'t load codec?\n");
  D.45994_40 = 1;
  goto <bb 29>;

<bb 24>:
  D.46017_41 = &v_engine_5->write_codec;
  D.46011_42 = v_engine_5->cur_payload_map;
  D.46012_43 = D.46011_42->rm_encoding;
  D.46011_44 = v_engine_5->cur_payload_map;
  D.46018_45 = D.46011_44->rm_fmtp;
  D.46011_46 = v_engine_5->cur_payload_map;
  D.46016_47 = D.46011_46->rm_rate;
  D.46023_48 = switch_core_session_get_pool (session_2(D));
  D.46024_49 = switch_core_codec_init_with_bitrate (D.46017_41, D.46012_43, D.46018_45, D.46016_47, 0, 1, 0, 3, 0B, D.46023_48);
  if (D.46024_49 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2160, session_2(D), 3, "Can\'t load codec?\n");
  D.45994_50 = 1;
  goto <bb 29>;

<bb 26>:
  D.46011_51 = v_engine_5->cur_payload_map;
  D.46016_52 = D.46011_51->rm_rate;
  v_engine_5->read_frame.rate = D.46016_52;
  D.46027_53 = session_2(D)->channel;
  D.46028_54 = switch_channel_get_name (D.46027_53);
  D.46011_55 = v_engine_5->cur_payload_map;
  D.46012_56 = D.46011_55->rm_encoding;
  D.46011_57 = v_engine_5->cur_payload_map;
  D.46016_58 = D.46011_57->rm_rate;
  D.46011_59 = v_engine_5->cur_payload_map;
  D.46029_60 = D.46011_59->codec_ms;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2164, session_2(D), 7, "Set VIDEO Codec %s %s/%ld %d ms\n", D.46028_54, D.46012_56, D.46016_58, D.46029_60);
  D.46001_61 = &v_engine_5->read_codec;
  v_engine_5->read_frame.codec = D.46001_61;
  D.46030_62 = v_engine_5->write_codec.fmtp_out;
  D.46031_63 = switch_core_perform_session_strdup (session_2(D), D.46030_62, "src/switch_core_media.c", &__func__, 2169);
  v_engine_5->write_codec.fmtp_out = D.46031_63;
  D.46011_64 = v_engine_5->cur_payload_map;
  D.46032_65 = D.46011_64->agreed_pt;
  v_engine_5->write_codec.agreed_pt = D.46032_65;
  D.46011_66 = v_engine_5->cur_payload_map;
  D.46032_67 = D.46011_66->agreed_pt;
  v_engine_5->read_codec.agreed_pt = D.46032_67;
  D.46001_68 = &v_engine_5->read_codec;
  switch_core_session_set_video_read_codec (session_2(D), D.46001_68);
  D.46017_69 = &v_engine_5->write_codec;
  switch_core_session_set_video_write_codec (session_2(D), D.46017_69);
  D.46027_70 = session_2(D)->channel;
  D.46011_71 = v_engine_5->cur_payload_map;
  D.46012_72 = D.46011_71->rm_encoding;
  D.46011_73 = v_engine_5->cur_payload_map;
  D.46016_74 = D.46011_73->rm_rate;
  switch_channel_set_variable_printf (D.46027_70, "rtp_last_video_codec_string", "%s@%dh", D.46012_72, D.46016_74);
  D.46033_75 = v_engine_5->rtp_session;
  D.46034_76 = switch_rtp_ready (D.46033_75);
  if (D.46034_76 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  msg = {};
  msg.from = "src/switch_core_media.c";
  msg.message_id = 17;
  D.46033_77 = v_engine_5->rtp_session;
  D.46011_78 = v_engine_5->cur_payload_map;
  D.46032_79 = D.46011_78->agreed_pt;
  switch_rtp_set_default_payload (D.46033_77, D.46032_79);
  switch_core_session_perform_receive_message (session_2(D), &msg, "src/switch_core_media.c", &__func__, 2191);

<bb 28>:
  D.46027_80 = session_2(D)->channel;
  D.46011_81 = v_engine_5->cur_payload_map;
  D.46012_82 = D.46011_81->rm_encoding;
  switch_channel_set_variable_var_check (D.46027_80, "rtp_use_video_codec_name", D.46012_82, 1);
  D.46027_83 = session_2(D)->channel;
  D.46011_84 = v_engine_5->cur_payload_map;
  D.46018_85 = D.46011_84->rm_fmtp;
  switch_channel_set_variable_var_check (D.46027_83, "rtp_use_video_codec_fmtp", D.46018_85, 1);
  D.46027_86 = session_2(D)->channel;
  D.46011_87 = v_engine_5->cur_payload_map;
  D.46016_88 = D.46011_87->rm_rate;
  switch_channel_set_variable_printf (D.46027_86, "rtp_use_video_codec_rate", "%d", D.46016_88);
  D.46027_89 = session_2(D)->channel;
  switch_channel_set_variable_printf (D.46027_89, "rtp_use_video_codec_ptime", "%d", 0);
  D.45994_90 = 0;

<bb 29>:
  # D.45994_1 = PHI <D.45994_4(5), D.45994_7(7), D.45994_12(17), D.45994_24(21), D.45994_40(23), D.45994_50(25), D.45994_90(28)>
  return D.45994_1;

}



;; Function switch_core_media_set_codec (switch_core_media_set_codec)

Try : D.47753_242(P242) & D.47760_234(P234) --> P242 D.47753
Try : D.45912_15(P15) & D.47753_242(P242) --> P242 D.47753
Try : D.47762_243(P243) & D.47769_241(P241) --> P243 D.47762
Try : D.45973_136(P136) & D.47762_243(P243) --> P243 D.47762
Try : D.45906_163(P163) & status_1(P1) --> P163 status
Try : resetting_2(P2) & resetting_6(P6) : Same root, coalesced --> P2.
Try : resetting_2(P2) & resetting_53(P53) : Same root, coalesced --> P2.
Try : status_1(P163) & status_13(P13) : Same root, coalesced --> P163.
Try : status_1(P163) & status_17(P17) : Same root, coalesced --> P163.
Try : status_1(P163) & status_31(P31) : Same root, coalesced --> P163.
Try : status_1(P163) & status_78(P78) : Same root, coalesced --> P163.
Try : status_1(P163) & status_97(P97) : Same root, coalesced --> P163.
Try : status_1(P163) & status_132(P132) : Same root, coalesced --> P163.
Try : status_1(P163) & status_137(P137) : Same root, coalesced --> P163.
Try : status_1(P163) & status_5(P5) : Same root, coalesced --> P163.
Try : status_1(P163) & status_5(P163) : Already coalesced.
Try : resetting_3(P3) & resetting_6(P2) : Same root, coalesced --> P2.
Try : resetting_3(P2) & resetting_6(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_6(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : resetting_3(P2) & resetting_2(P2) : Already coalesced.
Try : D.45906_4(P4) & D.45906_9(P9) : Same root, coalesced --> P4.
Try : D.45906_4(P4) & status_163(P163) --> P163 status

Partition map 

Partition 2 (resetting_2 - 2 3 6 53 )
Partition 7 (session_7(D) - 7 )
Partition 8 (smh_8 - 8 )
Partition 10 (a_engine_10 - 10 )
Partition 11 (D.45907_11 - 11 )
Partition 12 (D.45908_12 - 12 )
Partition 14 (D.45911_14 - 14 )
Partition 16 (force_16(D) - 16 )
Partition 18 (D.45920_18 - 18 )
Partition 19 (D.45907_19 - 19 )
Partition 20 (D.45908_20 - 20 )
Partition 21 (D.45921_21 - 21 )
Partition 22 (D.45923_22 - 22 )
Partition 23 (D.45924_23 - 23 )
Partition 24 (D.45925_24 - 24 )
Partition 25 (D.45907_25 - 25 )
Partition 26 (D.45926_26 - 26 )
Partition 27 (D.45928_27 - 27 )
Partition 28 (D.45907_28 - 28 )
Partition 29 (D.45929_29 - 29 )
Partition 30 (D.45920_30 - 30 )
Partition 32 (D.45930_32 - 32 )
Partition 33 (D.45933_33 - 33 )
Partition 34 (D.45934_34 - 34 )
Partition 35 (D.45933_35 - 35 )
Partition 36 (D.45935_36 - 36 )
Partition 37 (D.45933_37 - 37 )
Partition 38 (D.45938_38 - 38 )
Partition 39 (D.45933_39 - 39 )
Partition 40 (D.45939_40 - 40 )
Partition 41 (D.45920_41 - 41 )
Partition 42 (D.45923_42 - 42 )
Partition 43 (D.45940_43 - 43 )
Partition 44 (D.45928_44 - 44 )
Partition 45 (D.45907_45 - 45 )
Partition 46 (D.45908_46 - 46 )
Partition 47 (D.45907_47 - 47 )
Partition 48 (D.45926_48 - 48 )
Partition 49 (D.45907_49 - 49 )
Partition 50 (D.45929_50 - 50 )
Partition 51 (D.45923_51 - 51 )
Partition 52 (D.45941_52 - 52 )
Partition 54 (D.45923_54 - 54 )
Partition 55 (D.45941_55 - 55 )
Partition 56 (D.45911_56 - 56 )
Partition 57 (D.45942_57 - 57 )
Partition 58 (D.45939_58 - 58 )
Partition 59 (D.45911_59 - 59 )
Partition 60 (D.45907_60 - 60 )
Partition 61 (D.45908_61 - 61 )
Partition 62 (D.45907_62 - 62 )
Partition 63 (D.45943_63 - 63 )
Partition 64 (D.45907_64 - 64 )
Partition 65 (D.45929_65 - 65 )
Partition 66 (D.45907_66 - 66 )
Partition 67 (D.45926_67 - 67 )
Partition 68 (D.45944_68 - 68 )
Partition 69 (D.45907_69 - 69 )
Partition 70 (D.45945_70 - 70 )
Partition 71 (D.45907_71 - 71 )
Partition 72 (D.45946_72 - 72 )
Partition 73 (codec_flags_73(D) - 73 )
Partition 74 (D.45947_74 - 74 )
Partition 75 (D.45948_75 - 75 )
Partition 76 (D.45949_76 - 76 )
Partition 77 (D.45939_77 - 77 )
Partition 79 (D.45942_79 - 79 )
Partition 80 (D.45907_80 - 80 )
Partition 81 (D.45908_81 - 81 )
Partition 82 (D.45907_82 - 82 )
Partition 83 (D.45943_83 - 83 )
Partition 84 (D.45907_84 - 84 )
Partition 85 (D.45929_85 - 85 )
Partition 86 (D.45907_86 - 86 )
Partition 87 (D.45926_87 - 87 )
Partition 88 (D.45944_88 - 88 )
Partition 89 (D.45907_89 - 89 )
Partition 90 (D.45945_90 - 90 )
Partition 91 (D.45907_91 - 91 )
Partition 92 (D.45946_92 - 92 )
Partition 93 (D.45947_93 - 93 )
Partition 94 (D.45952_94 - 94 )
Partition 95 (D.45953_95 - 95 )
Partition 96 (D.45939_96 - 96 )
Partition 98 (D.45939_98 - 98 )
Partition 99 (D.45907_99 - 99 )
Partition 100 (D.45908_100 - 100 )
Partition 101 (D.45939_101 - 101 )
Partition 102 (D.45907_102 - 102 )
Partition 103 (D.45943_103 - 103 )
Partition 104 (D.45939_104 - 104 )
Partition 105 (D.45907_105 - 105 )
Partition 106 (D.45929_106 - 106 )
Partition 107 (D.45939_107 - 107 )
Partition 108 (D.45907_108 - 108 )
Partition 109 (D.45926_109 - 109 )
Partition 110 (D.45939_110 - 110 )
Partition 111 (D.45907_111 - 111 )
Partition 112 (D.45908_112 - 112 )
Partition 113 (D.45907_113 - 113 )
Partition 114 (D.45929_114 - 114 )
Partition 115 (D.45907_115 - 115 )
Partition 116 (D.45926_116 - 116 )
Partition 117 (D.45956_117 - 117 )
Partition 118 (D.45959_118 - 118 )
Partition 119 (D.45956_119 - 119 )
Partition 120 (D.45959_120 - 120 )
Partition 121 (D.45956_121 - 121 )
Partition 122 (D.45959_122 - 122 )
Partition 123 (D.45962_123 - 123 )
Partition 124 (D.45963_124 - 124 )
Partition 125 (D.45956_125 - 125 )
Partition 126 (D.45962_126 - 126 )
Partition 127 (D.45923_127 - 127 )
Partition 128 (D.45968_128 - 128 )
Partition 129 (D.45969_129 - 129 )
Partition 130 (D.45970_130 - 130 )
Partition 131 (D.45939_131 - 131 )
Partition 133 (D.45907_133 - 133 )
Partition 134 (D.45929_134 - 134 )
Partition 135 (D.45911_135 - 135 )
Partition 138 (D.45939_138 - 138 )
Partition 139 (D.45976_139 - 139 )
Partition 140 (D.45907_140 - 140 )
Partition 141 (D.45908_141 - 141 )
Partition 142 (D.45907_142 - 142 )
Partition 143 (D.45929_143 - 143 )
Partition 144 (D.45907_144 - 144 )
Partition 145 (D.45926_145 - 145 )
Partition 146 (D.45969_146 - 146 )
Partition 147 (D.45977_147 - 147 )
Partition 148 (D.45911_148 - 148 )
Partition 149 (D.45907_149 - 149 )
Partition 150 (D.45978_150 - 150 )
Partition 151 (D.45907_151 - 151 )
Partition 152 (D.45978_152 - 152 )
Partition 153 (D.45911_153 - 153 )
Partition 154 (D.45942_154 - 154 )
Partition 155 (D.45907_155 - 155 )
Partition 156 (D.45981_156 - 156 )
Partition 157 (D.45982_157 - 157 )
Partition 158 (D.45962_158 - 158 )
Partition 159 (D.45983_159 - 159 )
Partition 160 (D.45962_160 - 160 )
Partition 161 (D.45907_161 - 161 )
Partition 162 (D.45986_162 - 162 )
Partition 163 (status_163 - 1 4 5 9 13 17 31 78 97 132 137 163 )
Partition 164 (.MEM_164 - 164 )
Partition 165 (.MEM_165 - 165 )
Partition 166 (.MEM_166 - 166 )
Partition 167 (.MEM_167 - 167 )
Partition 168 (.MEM_168 - 168 )
Partition 169 (.MEM_169 - 169 )
Partition 170 (.MEM_170(D) - 170 )
Partition 171 (.MEM_171 - 171 )
Partition 172 (.MEM_172 - 172 )
Partition 173 (.MEM_173 - 173 )
Partition 174 (.MEM_174 - 174 )
Partition 175 (.MEM_175 - 175 )
Partition 176 (.MEM_176 - 176 )
Partition 177 (.MEM_177 - 177 )
Partition 178 (.MEM_178 - 178 )
Partition 179 (.MEM_179 - 179 )
Partition 180 (.MEM_180 - 180 )
Partition 181 (.MEM_181 - 181 )
Partition 182 (.MEM_182 - 182 )
Partition 183 (.MEM_183 - 183 )
Partition 184 (.MEM_184 - 184 )
Partition 185 (.MEM_185 - 185 )
Partition 186 (.MEM_186 - 186 )
Partition 187 (.MEM_187 - 187 )
Partition 188 (.MEM_188 - 188 )
Partition 189 (.MEM_189 - 189 )
Partition 190 (.MEM_190 - 190 )
Partition 191 (.MEM_191 - 191 )
Partition 192 (.MEM_192 - 192 )
Partition 193 (.MEM_193 - 193 )
Partition 194 (.MEM_194 - 194 )
Partition 195 (.MEM_195 - 195 )
Partition 196 (.MEM_196 - 196 )
Partition 197 (.MEM_197 - 197 )
Partition 198 (.MEM_198 - 198 )
Partition 199 (.MEM_199 - 199 )
Partition 200 (.MEM_200 - 200 )
Partition 201 (.MEM_201 - 201 )
Partition 202 (.MEM_202 - 202 )
Partition 203 (.MEM_203 - 203 )
Partition 204 (.MEM_204 - 204 )
Partition 205 (.MEM_205 - 205 )
Partition 206 (.MEM_206 - 206 )
Partition 207 (.MEM_207 - 207 )
Partition 208 (.MEM_208 - 208 )
Partition 209 (.MEM_209 - 209 )
Partition 210 (.MEM_210 - 210 )
Partition 211 (.MEM_211 - 211 )
Partition 212 (.MEM_212 - 212 )
Partition 213 (.MEM_213 - 213 )
Partition 214 (.MEM_214 - 214 )
Partition 215 (.MEM_215 - 215 )
Partition 216 (.MEM_216 - 216 )
Partition 217 (.MEM_217 - 217 )
Partition 218 (.MEM_218 - 218 )
Partition 219 (.MEM_219 - 219 )
Partition 220 (.MEM_220 - 220 )
Partition 221 (.MEM_221 - 221 )
Partition 222 (.MEM_222 - 222 )
Partition 223 (.MEM_223 - 223 )
Partition 224 (.MEM_224 - 224 )
Partition 225 (.MEM_225 - 225 )
Partition 226 (.MEM_226 - 226 )
Partition 227 (.MEM_227 - 227 )
Partition 228 (D.47758_228 - 228 )
Partition 229 (D.47757_229 - 229 )
Partition 230 (D.47756_230 - 230 )
Partition 231 (D.47755_231 - 231 )
Partition 232 (D.47754_232 - 232 )
Partition 233 (iftmp.104_233 - 233 )
Partition 235 (D.47767_235 - 235 )
Partition 236 (D.47766_236 - 236 )
Partition 237 (D.47765_237 - 237 )
Partition 238 (D.47764_238 - 238 )
Partition 239 (D.47763_239 - 239 )
Partition 240 (iftmp.104_240 - 240 )
Partition 242 (D.47753_242 - 15 234 242 )
Partition 243 (D.47762_243 - 136 241 243 )

Coalesced D.45906_4 to status_163
Coalesced D.45906_9 to status_163
Coalesced D.45912_15 to D.47753_242
Coalesced D.45973_136 to D.47762_243
Coalesced D.47760_234 to D.47753_242
Coalesced D.47769_241 to D.47762_243
Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;
  int resetting;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_set_codec";
  static const char __func__[28] = "switch_core_media_set_codec";
  void end = <<< error >>>; (unused)

  { Scope block #149 src/switch_core_media.c:2338 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #150 Originating from :#0 

    }

  }

  { Scope block #151 src/switch_core_media.c:2227 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #152 Originating from :#0 

    }

  }

}
switch_core_media_set_codec (struct switch_core_session_t * session, int force, uint32_t codec_flags)
{
  int iftmp.104;
  uint32_t D.47767;
  uint32_t D.47766;
  struct switch_mutex_t * D.47765;
  struct switch_codec_interface_t * D.47764;
  const struct switch_codec_implementation_t * D.47763;
  switch_bool_t D.47762;
  int iftmp.104;
  uint32_t D.47758;
  uint32_t D.47757;
  struct switch_mutex_t * D.47756;
  struct switch_codec_interface_t * D.47755;
  const struct switch_codec_implementation_t * D.47754;
  switch_bool_t D.47753;
  static const char __func__[28] = "switch_core_media_set_codec";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_set_codec";
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  int resetting;
  switch_status_t status;
  switch_payload_t D.45986;
  uint8_t D.45983;
  char * D.45982;
  char * D.45981;
  switch_payload_t D.45978;
  int D.45977;
  char * D.45976;
  switch_status_t D.45970;
  uint32_t D.45969;
  uint32_t D.45968;
  uint8_t D.45963;
  struct switch_rtp_t * D.45962;
  const struct switch_codec_implementation_t * D.45959;
  const struct switch_codec_implementation_t * D.45956;
  switch_status_t D.45953;
  struct switch_memory_pool_t * D.45952;
  switch_status_t D.45949;
  struct switch_memory_pool_t * D.45948;
  uint32_t D.45947;
  uint32_t D.45946;
  int D.45945;
  int D.45944;
  char * D.45943;
  struct switch_codec_t * D.45942;
  switch_interval_time_t D.45941;
  int D.45940;
  struct switch_channel_t * D.45939;
  struct switch_audio_resampler_t * * D.45938;
  struct switch_audio_resampler_t * D.45935;
  struct switch_audio_resampler_t * * D.45934;
  struct switch_mutex_t * D.45933;
  struct switch_audio_resampler_t * D.45930;
  long unsigned int D.45929;
  uint32_t D.45928;
  uint32_t D.45926;
  unsigned int D.45925;
  unsigned int D.45924;
  int D.45923;
  int D.45921;
  char * D.45920;
  struct switch_codec_t * D.45911;
  char * D.45908;
  struct payload_map_t * D.45907;

<bb 2>:
  status_5 = 0;
  # DEBUG status => status_5
  resetting_6 = 0;
  # DEBUG resetting => resetting_6
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2215, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_9 = 1;
  goto <bb 54>;

<bb 6>:
  a_engine_10 = &smh_8->engines;
  # DEBUG a_engine => a_engine_10
  D.45907_11 = a_engine_10->cur_payload_map;
  D.45908_12 = D.45907_11->iananame;
  if (D.45908_12 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2223, session_7(D), 7, "No audio codec available\n");
  status_13 = 1;
  # DEBUG status => status_13
  goto <bb 51> (end);

<bb 8>:
  D.45911_14 = &a_engine_10->read_codec;
  # DEBUG codec => D.45911_14
  if (D.45911_14 != 0B)
    goto <bb 9>;
  else
    goto <bb 13>;

<bb 9>:
  D.47758_228 = D.45911_14->flags;
  D.47757_229 = D.47758_228 & 256;
  if (D.47757_229 != 0)
    goto <bb 10>;
  else
    goto <bb 13>;

<bb 10>:
  D.47756_230 = D.45911_14->mutex;
  if (D.47756_230 != 0B)
    goto <bb 11>;
  else
    goto <bb 13>;

<bb 11>:
  D.47755_231 = D.45911_14->codec_interface;
  if (D.47755_231 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.47754_232 = D.45911_14->implementation;
  if (D.47754_232 != 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

<bb 13>:

<bb 14>:
  # iftmp.104_233 = PHI <1(12), 0(13)>
  D.47753_234 = (switch_bool_t) iftmp.104_233;
  D.47753_242 = D.47753_234;
  D.47753_15 = D.47753_242;
  if (D.47753_15 != 0)
    goto <bb 15>;
  else
    goto <bb 26>;

<bb 15>:
  if (force_16(D) == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  status_17 = 0;
  # DEBUG status => status_17
  goto <bb 51> (end);

<bb 17>:
  D.45920_18 = a_engine_10->read_impl.iananame;
  D.45907_19 = a_engine_10->cur_payload_map;
  D.45908_20 = D.45907_19->iananame;
  D.45921_21 = strcasecmp (D.45920_18, D.45908_20);
  if (D.45921_21 != 0)
    goto <bb 20>;
  else
    goto <bb 18>;

<bb 18>:
  D.45923_22 = a_engine_10->read_impl.microseconds_per_packet;
  D.45924_23 = (unsigned int) D.45923_22;
  D.45925_24 = D.45924_23 / 1000;
  D.45907_25 = a_engine_10->cur_payload_map;
  D.45926_26 = D.45907_25->codec_ms;
  if (D.45925_24 != D.45926_26)
    goto <bb 20>;
  else
    goto <bb 19>;

<bb 19>:
  D.45928_27 = a_engine_10->read_impl.samples_per_second;
  D.45907_28 = a_engine_10->cur_payload_map;
  D.45929_29 = D.45907_28->rm_rate;
  if (D.45928_27 != D.45929_29)
    goto <bb 20>;
  else
    goto <bb 25>;

<bb 20>:
  D.45930_32 = session_7(D)->read_resampler;
  if (D.45930_32 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.45933_33 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_33);
  D.45934_34 = &session_7(D)->read_resampler;
  switch_resample_destroy (D.45934_34);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2238, session_7(D), 5, "Deactivating read resampler\n");
  D.45933_35 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_35);

<bb 22>:
  D.45935_36 = session_7(D)->write_resampler;
  if (D.45935_36 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.45933_37 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_37);
  D.45938_38 = &session_7(D)->write_resampler;
  switch_resample_destroy (D.45938_38);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2245, session_7(D), 5, "Deactivating write resampler\n");
  D.45933_39 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_39);

<bb 24>:
  switch_core_session_reset (session_7(D), 0, 0);
  D.45939_40 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_40, "src/switch_core_media.c", &__func__, 2250);
  D.45920_41 = a_engine_10->read_impl.iananame;
  D.45923_42 = a_engine_10->read_impl.microseconds_per_packet;
  D.45940_43 = D.45923_42 / 1000;
  D.45928_44 = a_engine_10->read_impl.samples_per_second;
  D.45907_45 = a_engine_10->cur_payload_map;
  D.45908_46 = D.45907_45->iananame;
  D.45907_47 = a_engine_10->cur_payload_map;
  D.45926_48 = D.45907_47->codec_ms;
  D.45907_49 = a_engine_10->cur_payload_map;
  D.45929_50 = D.45907_49->rm_rate;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2252, session_7(D), 7, "Changing Codec from %s@%dms@%dhz to %s@%dms@%luhz\n", D.45920_41, D.45940_43, D.45928_44, D.45908_46, D.45926_48, D.45929_50);
  D.45923_51 = a_engine_10->read_impl.microseconds_per_packet;
  D.45941_52 = (switch_interval_time_t) D.45923_51;
  switch_sleep (D.45941_52);
  switch_core_session_lock_codec_write (session_7(D));
  switch_core_session_lock_codec_read (session_7(D));
  resetting_53 = 1;
  # DEBUG resetting => resetting_53
  D.45923_54 = a_engine_10->read_impl.microseconds_per_packet;
  D.45941_55 = (switch_interval_time_t) D.45923_54;
  switch_sleep (D.45941_55);
  D.45911_56 = &a_engine_10->read_codec;
  switch_core_codec_destroy (D.45911_56);
  D.45942_57 = &a_engine_10->write_codec;
  switch_core_codec_destroy (D.45942_57);
  D.45939_58 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_58, "src/switch_core_media.c", &__func__, 2269);
  goto <bb 26>;

<bb 25>:
  D.45920_30 = a_engine_10->read_impl.iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2271, session_7(D), 7, "Already using %s\n", D.45920_30);
  status_31 = 0;
  # DEBUG status => status_31
  goto <bb 51> (end);

<bb 26>:
  # resetting_2 = PHI <resetting_6(14), resetting_53(24)>
  # DEBUG resetting => resetting_2
  D.45911_59 = &a_engine_10->read_codec;
  D.45907_60 = a_engine_10->cur_payload_map;
  D.45908_61 = D.45907_60->iananame;
  D.45907_62 = a_engine_10->cur_payload_map;
  D.45943_63 = D.45907_62->rm_fmtp;
  D.45907_64 = a_engine_10->cur_payload_map;
  D.45929_65 = D.45907_64->rm_rate;
  D.45907_66 = a_engine_10->cur_payload_map;
  D.45926_67 = D.45907_66->codec_ms;
  D.45944_68 = (int) D.45926_67;
  D.45907_69 = a_engine_10->cur_payload_map;
  D.45945_70 = D.45907_69->channels;
  D.45907_71 = a_engine_10->cur_payload_map;
  D.45946_72 = D.45907_71->bitrate;
  D.45947_74 = codec_flags_73(D) | 3;
  D.45948_75 = switch_core_session_get_pool (session_7(D));
  D.45949_76 = switch_core_codec_init_with_bitrate (D.45911_59, D.45908_61, D.45943_63, D.45929_65, D.45944_68, D.45945_70, D.45946_72, D.45947_74, 0B, D.45948_75);
  if (D.45949_76 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2285, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_77 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_77, "src/switch_core_media.c", &__func__, 2286, 88);
  status_78 = 1;
  # DEBUG status => status_78
  goto <bb 51> (end);

<bb 28>:
  a_engine_10->read_codec.session = session_7(D);
  D.45942_79 = &a_engine_10->write_codec;
  D.45907_80 = a_engine_10->cur_payload_map;
  D.45908_81 = D.45907_80->iananame;
  D.45907_82 = a_engine_10->cur_payload_map;
  D.45943_83 = D.45907_82->rm_fmtp;
  D.45907_84 = a_engine_10->cur_payload_map;
  D.45929_85 = D.45907_84->rm_rate;
  D.45907_86 = a_engine_10->cur_payload_map;
  D.45926_87 = D.45907_86->codec_ms;
  D.45944_88 = (int) D.45926_87;
  D.45907_89 = a_engine_10->cur_payload_map;
  D.45945_90 = D.45907_89->channels;
  D.45907_91 = a_engine_10->cur_payload_map;
  D.45946_92 = D.45907_91->bitrate;
  D.45947_93 = codec_flags_73(D) | 3;
  D.45952_94 = switch_core_session_get_pool (session_7(D));
  D.45953_95 = switch_core_codec_init_with_bitrate (D.45942_79, D.45908_81, D.45943_83, D.45929_85, D.45944_88, D.45945_90, D.45946_92, D.45947_93, 0B, D.45952_94);
  if (D.45953_95 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2302, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_96 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_96, "src/switch_core_media.c", &__func__, 2303, 88);
  status_97 = 1;
  # DEBUG status => status_97
  goto <bb 51> (end);

<bb 30>:
  a_engine_10->write_codec.session = session_7(D);
  D.45939_98 = session_7(D)->channel;
  D.45907_99 = a_engine_10->cur_payload_map;
  D.45908_100 = D.45907_99->iananame;
  switch_channel_set_variable_var_check (D.45939_98, "rtp_use_codec_name", D.45908_100, 1);
  D.45939_101 = session_7(D)->channel;
  D.45907_102 = a_engine_10->cur_payload_map;
  D.45943_103 = D.45907_102->rm_fmtp;
  switch_channel_set_variable_var_check (D.45939_101, "rtp_use_codec_fmtp", D.45943_103, 1);
  D.45939_104 = session_7(D)->channel;
  D.45907_105 = a_engine_10->cur_payload_map;
  D.45929_106 = D.45907_105->rm_rate;
  switch_channel_set_variable_printf (D.45939_104, "rtp_use_codec_rate", "%d", D.45929_106);
  D.45939_107 = session_7(D)->channel;
  D.45907_108 = a_engine_10->cur_payload_map;
  D.45926_109 = D.45907_108->codec_ms;
  switch_channel_set_variable_printf (D.45939_107, "rtp_use_codec_ptime", "%d", D.45926_109);
  D.45939_110 = session_7(D)->channel;
  D.45907_111 = a_engine_10->cur_payload_map;
  D.45908_112 = D.45907_111->iananame;
  D.45907_113 = a_engine_10->cur_payload_map;
  D.45929_114 = D.45907_113->rm_rate;
  D.45907_115 = a_engine_10->cur_payload_map;
  D.45926_116 = D.45907_115->codec_ms;
  switch_channel_set_variable_printf (D.45939_110, "rtp_last_audio_codec_string", "%s@%dh@%di", D.45908_112, D.45929_114, D.45926_116);
  D.45956_117 = a_engine_10->read_codec.implementation;
  if (D.45956_117 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2316, &__PRETTY_FUNCTION__);

<bb 32>:
  D.45959_118 = a_engine_10->write_codec.implementation;
  if (D.45959_118 == 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  __assert_fail ("a_engine->write_codec.implementation", "src/switch_core_media.c", 2317, &__PRETTY_FUNCTION__);

<bb 34>:
  D.45956_119 = a_engine_10->read_codec.implementation;
  a_engine_10->read_impl = *D.45956_119;
  D.45959_120 = a_engine_10->write_codec.implementation;
  a_engine_10->write_impl = *D.45959_120;
  D.45956_121 = a_engine_10->read_codec.implementation;
  switch_core_session_set_read_impl (session_7(D), D.45956_121);
  D.45959_122 = a_engine_10->write_codec.implementation;
  switch_core_session_set_write_impl (session_7(D), D.45959_122);
  D.45962_123 = a_engine_10->rtp_session;
  D.45963_124 = switch_rtp_ready (D.45962_123);
  if (D.45963_124 != 0)
    goto <bb 35>;
  else
    goto <bb 39>;

<bb 35>:
  D.45956_125 = a_engine_10->read_codec.implementation;
  if (D.45956_125 == 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2326, &__PRETTY_FUNCTION__);

<bb 37>:
  D.45962_126 = a_engine_10->rtp_session;
  D.45923_127 = a_engine_10->read_impl.microseconds_per_packet;
  D.45968_128 = (uint32_t) D.45923_127;
  D.45969_129 = a_engine_10->read_impl.samples_per_packet;
  D.45970_130 = switch_rtp_change_interval (D.45962_126, D.45968_128, D.45969_129);
  if (D.45970_130 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.45939_131 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_131, "src/switch_core_media.c", &__func__, 2331, 27);
  status_132 = 1;
  # DEBUG status => status_132
  goto <bb 51> (end);

<bb 39>:
  D.45907_133 = a_engine_10->cur_payload_map;
  D.45929_134 = D.45907_133->rm_rate;
  a_engine_10->read_frame.rate = D.45929_134;
  D.45911_135 = &a_engine_10->read_codec;
  # DEBUG codec => D.45911_135
  if (D.45911_135 != 0B)
    goto <bb 40>;
  else
    goto <bb 44>;

<bb 40>:
  D.47767_235 = D.45911_135->flags;
  D.47766_236 = D.47767_235 & 256;
  if (D.47766_236 != 0)
    goto <bb 41>;
  else
    goto <bb 44>;

<bb 41>:
  D.47765_237 = D.45911_135->mutex;
  if (D.47765_237 != 0B)
    goto <bb 42>;
  else
    goto <bb 44>;

<bb 42>:
  D.47764_238 = D.45911_135->codec_interface;
  if (D.47764_238 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.47763_239 = D.45911_135->implementation;
  if (D.47763_239 != 0B)
    goto <bb 45>;
  else
    goto <bb 44>;

<bb 44>:

<bb 45>:
  # iftmp.104_240 = PHI <1(43), 0(44)>
  D.47762_241 = (switch_bool_t) iftmp.104_240;
  D.47762_243 = D.47762_241;
  D.47762_136 = D.47762_243;
  if (D.47762_136 == 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2339, session_7(D), 3, "Can\'t load codec?\n");
  status_137 = 1;
  # DEBUG status => status_137
  goto <bb 51> (end);

<bb 47>:
  D.45939_138 = session_7(D)->channel;
  D.45976_139 = switch_channel_get_name (D.45939_138);
  D.45907_140 = a_engine_10->cur_payload_map;
  D.45908_141 = D.45907_140->iananame;
  D.45907_142 = a_engine_10->cur_payload_map;
  D.45929_143 = D.45907_142->rm_rate;
  D.45907_144 = a_engine_10->cur_payload_map;
  D.45926_145 = D.45907_144->codec_ms;
  D.45969_146 = a_engine_10->read_impl.samples_per_packet;
  D.45977_147 = a_engine_10->read_impl.bits_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2343, session_7(D), 7, "Set Codec %s %s/%ld %d ms %d samples %d bits\n", D.45976_139, D.45908_141, D.45929_143, D.45926_145, D.45969_146, D.45977_147);
  D.45911_148 = &a_engine_10->read_codec;
  a_engine_10->read_frame.codec = D.45911_148;
  D.45907_149 = a_engine_10->cur_payload_map;
  D.45978_150 = D.45907_149->agreed_pt;
  a_engine_10->write_codec.agreed_pt = D.45978_150;
  D.45907_151 = a_engine_10->cur_payload_map;
  D.45978_152 = D.45907_151->agreed_pt;
  a_engine_10->read_codec.agreed_pt = D.45978_152;
  if (force_16(D) != 2)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  D.45911_153 = &a_engine_10->read_codec;
  switch_core_session_set_real_read_codec (session_7(D), D.45911_153);
  D.45942_154 = &a_engine_10->write_codec;
  switch_core_session_set_write_codec (session_7(D), D.45942_154);

<bb 49>:
  D.45907_155 = a_engine_10->cur_payload_map;
  D.45981_156 = a_engine_10->write_codec.fmtp_out;
  D.45982_157 = switch_core_perform_session_strdup (session_7(D), D.45981_156, "src/switch_core_media.c", &__func__, 2357);
  D.45907_155->fmtp_out = D.45982_157;
  D.45962_158 = a_engine_10->rtp_session;
  D.45983_159 = switch_rtp_ready (D.45962_158);
  if (D.45983_159 != 0)
    goto <bb 50>;
  else
    goto <bb 51> (end);

<bb 50>:
  D.45962_160 = a_engine_10->rtp_session;
  D.45907_161 = a_engine_10->cur_payload_map;
  D.45986_162 = D.45907_161->pt;
  switch_rtp_set_default_payload (D.45962_160, D.45986_162);

  # status_1 = PHI <status_13(7), status_17(16), status_31(25), status_78(27), status_97(29), status_132(38), status_137(46), status_5(49), status_5(50)>
  # resetting_3 = PHI <resetting_6(7), resetting_6(16), resetting_6(25), resetting_2(27), resetting_2(29), resetting_2(38), resetting_2(46), resetting_2(49), resetting_2(50)>
end:
  # DEBUG resetting => resetting_3
  # DEBUG status => status_1
  if (resetting_3 != 0)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  switch_core_session_unlock_codec_write (session_7(D));
  switch_core_session_unlock_codec_read (session_7(D));

<bb 53>:
  status_163 = status_1;

<bb 54>:
  # status_4 = PHI <status_9(5), status_163(53)>
  return status_4;

}



;; Function switch_core_media_read_frame (switch_core_media_read_frame)

Try : D.47772_442(P442) & D.47779_430(P430) --> P442 D.47772
Try : D.46139_24(P24) & D.47772_442(P442) --> P442 D.47772
Try : D.47781_444(P444) & D.47782_431(P431) --> P444 D.47781
Try : v_75(P75) & D.47781_444(P444) --> P444 v
Try : rtp_timeout_sec_76(P76) & v_75(P444) : 2 different USER vars. No coalesce.
Try : D.47784_446(P446) & D.47785_432(P432) --> P446 D.47784
Try : v_79(P79) & D.47784_446(P446) --> P446 v
Try : rtp_hold_timeout_sec_80(P80) & v_79(P446) : 2 different USER vars. No coalesce.
Try : D.47787_447(P447) & D.47794_439(P439) --> P447 D.47787
Try : D.46272_188(P188) & D.47787_447(P447) --> P447 D.47787
Try : D.46128_289(P289) & status_1(P1) --> P289 status
Try : iftmp.129_11(P11) & iftmp.129_37(P37) : Same root, coalesced --> P11.
Try : iftmp.129_11(P11) & iftmp.129_38(P38) : Same root, coalesced --> P11.
Try : rtp_timeout_sec_4(P4) & rtp_timeout_sec_67(P67) : Same root, coalesced --> P4.
Try : rtp_timeout_sec_4(P4) & rtp_timeout_sec_67(P4) : Already coalesced.
Try : rtp_timeout_sec_4(P4) & rtp_timeout_sec_76(P76) : Same root, coalesced --> P4.
Try : rtp_hold_timeout_sec_5(P5) & rtp_hold_timeout_sec_68(P68) : Same root, coalesced --> P5.
Try : rtp_hold_timeout_sec_5(P5) & rtp_hold_timeout_sec_68(P5) : Already coalesced.
Try : rtp_hold_timeout_sec_5(P5) & rtp_hold_timeout_sec_80(P80) : Same root, coalesced --> P5.
Try : rtp_hold_timeout_sec_6(P6) & rtp_hold_timeout_sec_5(P5) : Same root, coalesced --> P5.
Try : rtp_hold_timeout_sec_6(P5) & rtp_hold_timeout_sec_5(P5) : Already coalesced.
Try : rtp_hold_timeout_sec_6(P5) & rtp_hold_timeout_sec_88(P88) : Same root, coalesced --> P5.
Try : do_cng_2(P2) & do_cng_3(P3) : Same root, coalesced --> P2.
Try : do_cng_2(P2) & do_cng_94(P94) : Same root, coalesced --> P2.
Try : i_7(P7) & i_140(P140) : Same root, coalesced --> P7.
Try : i_7(P7) & i_172(P172) : Same root, coalesced --> P7.
Try : pmap_9(P9) & pmap_262(P262) : Same root, coalesced --> P9.
Try : pmap_9(P9) & pmap_270(P270) : Same root, coalesced --> P9.
Try : frames_8(P8) & frames_183(P183) : Same root, coalesced --> P8.
Try : frames_8(P8) & frames_278(P278) : Same root, coalesced --> P8.
Try : do_cng_3(P2) & do_cng_12(P12) : Same root, coalesced --> P2.
Try : do_cng_3(P2) & do_cng_2(P2) : Already coalesced.
Try : do_cng_3(P2) & do_cng_2(P2) : Already coalesced.
Try : do_cng_3(P2) & do_cng_12(P2) : Already coalesced.
Try : status_1(P289) & status_64(P64) : Same root, coalesced --> P289.
Try : status_1(P289) & status_45(P45) : Same root, coalesced --> P289.
Try : status_1(P289) & status_72(P72) : Same root, coalesced --> P289.
Try : status_1(P289) & status_106(P106) : Same root, coalesced --> P289.
Try : status_1(P289) & status_176(P176) : Same root, coalesced --> P289.
Try : status_1(P289) & status_283(P283) : Same root, coalesced --> P289.
Try : status_1(P289) & status_286(P286) : Same root, coalesced --> P289.
Try : status_1(P289) & status_45(P289) : Already coalesced.
Try : D.46128_10(P10) & D.46128_15(P15) : Same root, coalesced --> P10.
Try : D.46128_10(P10) & D.46128_17(P17) : Same root, coalesced --> P10.
Try : D.46128_10(P10) & D.46128_291(P291) : Same root, coalesced --> P10.
Try : D.46128_10(P10) & D.46128_290(P290) : Same root, coalesced --> P10.
Try : D.46128_10(P10) & D.46128_39(P39) : Same root, coalesced --> P10.
Try : D.46128_10(P10) & status_289(P289) --> P289 status

Partition map 

Partition 2 (do_cng_2 - 2 3 12 94 )
Partition 4 (rtp_timeout_sec_4 - 4 67 76 )
Partition 5 (rtp_hold_timeout_sec_5 - 5 6 68 80 88 )
Partition 7 (i_7 - 7 140 172 )
Partition 8 (frames_8 - 8 183 278 )
Partition 9 (pmap_9 - 9 262 270 )
Partition 11 (iftmp.129_11 - 11 37 38 )
Partition 13 (session_13(D) - 13 )
Partition 14 (smh_14 - 14 )
Partition 16 (D.46129_16 - 16 )
Partition 18 (D.46132_18 - 18 )
Partition 19 (type_19(D) - 19 )
Partition 20 (D.46133_20 - 20 )
Partition 21 (engine_21 - 21 )
Partition 22 (D.46136_22 - 22 )
Partition 23 (D.46138_23 - 23 )
Partition 25 (D.46140_25 - 25 )
Partition 26 (D.46145_26 - 26 )
Partition 27 (D.46146_27 - 27 )
Partition 28 (D.46140_28 - 28 )
Partition 29 (D.46148_29 - 29 )
Partition 30 (D.46145_30 - 30 )
Partition 31 (D.46150_31 - 31 )
Partition 32 (D.46151_32 - 32 )
Partition 33 (D.46151_33 - 33 )
Partition 34 (D.46154_34 - 34 )
Partition 35 (D.46145_35 - 35 )
Partition 36 (D.46157_36 - 36 )
Partition 40 (D.46129_40 - 40 )
Partition 41 (D.46263_41 - 41 )
Partition 42 (D.46140_42 - 42 )
Partition 43 (D.46162_43 - 43 )
Partition 44 (flags_44(D) - 44 )
Partition 46 (D.46163_46 - 46 )
Partition 47 (D.46164_47 - 47 )
Partition 48 (D.46165_48 - 48 )
Partition 49 (D.46145_49 - 49 )
Partition 50 (D.46170_50 - 50 )
Partition 51 (D.46162_51 - 51 )
Partition 52 (frame_52(D) - 52 )
Partition 53 (D.46173_53 - 53 )
Partition 54 (D.46173_54 - 54 )
Partition 55 (D.46174_55 - 55 )
Partition 56 (D.46175_56 - 56 )
Partition 57 (D.46173_57 - 57 )
Partition 58 (D.46176_58 - 58 )
Partition 59 (D.46173_59 - 59 )
Partition 60 (D.46177_60 - 60 )
Partition 61 (D.46173_61 - 61 )
Partition 62 (D.46178_62 - 62 )
Partition 63 (D.46145_63 - 63 )
Partition 65 (D.46145_65 - 65 )
Partition 66 (D.46179_66 - 66 )
Partition 69 (D.46140_69 - 69 )
Partition 70 (D.46182_70 - 70 )
Partition 71 (D.46188_71 - 71 )
Partition 73 (D.46145_73 - 73 )
Partition 74 (val_74 - 74 )
Partition 77 (D.46145_77 - 77 )
Partition 78 (val_78 - 78 )
Partition 81 (D.46201_81 - 81 )
Partition 82 (rtp_timeout_sec.130_82 - 82 )
Partition 83 (D.46203_83 - 83 )
Partition 84 (D.46204_84 - 84 )
Partition 85 (D.46205_85 - 85 )
Partition 86 (D.46140_86 - 86 )
Partition 87 (D.46206_87 - 87 )
Partition 89 (D.46201_89 - 89 )
Partition 90 (rtp_hold_timeout_sec.131_90 - 90 )
Partition 91 (D.46212_91 - 91 )
Partition 92 (D.46204_92 - 92 )
Partition 93 (D.46213_93 - 93 )
Partition 95 (D.46162_95 - 95 )
Partition 96 (D.46173_96 - 96 )
Partition 97 (D.46173_97 - 97 )
Partition 98 (D.46174_98 - 98 )
Partition 99 (D.46175_99 - 99 )
Partition 100 (D.46173_100 - 100 )
Partition 101 (D.46176_101 - 101 )
Partition 102 (D.46173_102 - 102 )
Partition 103 (D.46177_103 - 103 )
Partition 104 (D.46173_104 - 104 )
Partition 105 (D.46178_105 - 105 )
Partition 107 (D.46140_107 - 107 )
Partition 108 (D.46216_108 - 108 )
Partition 109 (D.46219_109 - 109 )
Partition 110 (uuid_110 - 110 )
Partition 111 (event.132_111 - 111 )
Partition 112 (D.46225_112 - 112 )
Partition 113 (D.46226_113 - 113 )
Partition 114 (D.46227_114 - 114 )
Partition 115 (event.132_115 - 115 )
Partition 116 (D.46228_116 - 116 )
Partition 117 (D.46229_117 - 117 )
Partition 118 (event.132_118 - 118 )
Partition 119 (D.46228_119 - 119 )
Partition 120 (D.46230_120 - 120 )
Partition 121 (event.132_121 - 121 )
Partition 122 (D.46228_122 - 122 )
Partition 123 (D.46231_123 - 123 )
Partition 124 (event.132_124 - 124 )
Partition 125 (D.46228_125 - 125 )
Partition 126 (D.46232_126 - 126 )
Partition 127 (event.132_127 - 127 )
Partition 128 (D.46228_128 - 128 )
Partition 129 (D.46233_129 - 129 )
Partition 130 (event.132_130 - 130 )
Partition 131 (D.46234_131 - 131 )
Partition 132 (D.46235_132 - 132 )
Partition 133 (event.132_133 - 133 )
Partition 134 (D.46228_134 - 134 )
Partition 135 (D.46236_135 - 135 )
Partition 136 (event.132_136 - 136 )
Partition 137 (D.46237_137 - 137 )
Partition 138 (D.46238_138 - 138 )
Partition 139 (event.132_139 - 139 )
Partition 141 (D.46254_141 - 141 )
Partition 142 (D.46255_142 - 142 )
Partition 143 (D.46239_143 - 143 )
Partition 144 (D.46226_144 - 144 )
Partition 145 (D.46240_145 - 145 )
Partition 146 (event.132_146 - 146 )
Partition 147 (D.46241_147 - 147 )
Partition 148 (D.46228_148 - 148 )
Partition 149 (D.46242_149 - 149 )
Partition 150 (D.46243_150 - 150 )
Partition 151 (event.132_151 - 151 )
Partition 152 (D.46244_152 - 152 )
Partition 153 (D.46228_153 - 153 )
Partition 154 (D.46245_154 - 154 )
Partition 155 (event.132_155 - 155 )
Partition 156 (D.46246_156 - 156 )
Partition 157 (D.46228_157 - 157 )
Partition 158 (D.46247_158 - 158 )
Partition 159 (event.132_159 - 159 )
Partition 160 (D.46248_160 - 160 )
Partition 161 (D.46228_161 - 161 )
Partition 162 (D.46249_162 - 162 )
Partition 163 (event.132_163 - 163 )
Partition 164 (D.46250_164 - 164 )
Partition 165 (D.46228_165 - 165 )
Partition 166 (D.46251_166 - 166 )
Partition 167 (event.132_167 - 167 )
Partition 168 (D.46252_168 - 168 )
Partition 169 (D.46228_169 - 169 )
Partition 170 (D.46253_170 - 170 )
Partition 171 (event.132_171 - 171 )
Partition 173 (D.46256_173 - 173 )
Partition 174 (D.46257_174 - 174 )
Partition 175 (D.46162_175 - 175 )
Partition 177 (D.46140_177 - 177 )
Partition 178 (D.46260_178 - 178 )
Partition 179 (D.46140_179 - 179 )
Partition 180 (D.46145_180 - 180 )
Partition 181 (D.46263_181 - 181 )
Partition 182 (bytes_182 - 182 )
Partition 184 (D.46256_184 - 184 )
Partition 185 (D.46266_185 - 185 )
Partition 186 (D.46136_186 - 186 )
Partition 187 (D.46138_187 - 187 )
Partition 189 (D.46273_189 - 189 )
Partition 190 (D.46276_190 - 190 )
Partition 191 (D.46276_191 - 191 )
Partition 192 (D.46279_192 - 192 )
Partition 193 (D.46176_193 - 193 )
Partition 194 (D.46273_194 - 194 )
Partition 195 (D.46263_195 - 195 )
Partition 196 (D.46285_196 - 196 )
Partition 197 (D.46289_197 - 197 )
Partition 198 (D.46263_198 - 198 )
Partition 199 (D.46176_199 - 199 )
Partition 200 (D.46235_200 - 200 )
Partition 201 (D.46289_201 - 201 )
Partition 202 (D.46292_202 - 202 )
Partition 203 (D.46201_203 - 203 )
Partition 204 (D.46293_204 - 204 )
Partition 205 (codec_ms_205 - 205 )
Partition 206 (D.46296_206 - 206 )
Partition 207 (D.46204_207 - 207 )
Partition 208 (D.46298_208 - 208 )
Partition 209 (D.46299_209 - 209 )
Partition 210 (D.46299_210 - 210 )
Partition 211 (D.46304_211 - 211 )
Partition 212 (D.46305_212 - 212 )
Partition 213 (D.46304_213 - 213 )
Partition 214 (D.46308_214 - 214 )
Partition 215 (D.46309_215 - 215 )
Partition 216 (codec_ms.133_216 - 216 )
Partition 217 (D.46308_217 - 217 )
Partition 218 (D.46309_218 - 218 )
Partition 219 (D.46308_219 - 219 )
Partition 220 (D.46309_220 - 220 )
Partition 221 (D.46317_221 - 221 )
Partition 222 (codec_ms.133_222 - 222 )
Partition 223 (D.46145_223 - 223 )
Partition 224 (D.46308_224 - 224 )
Partition 225 (D.46309_225 - 225 )
Partition 226 (D.46317_226 - 226 )
Partition 227 (codec_ms.133_227 - 227 )
Partition 228 (D.46308_228 - 228 )
Partition 229 (D.46235_229 - 229 )
Partition 230 (D.46179_230 - 230 )
Partition 231 (D.46324_231 - 231 )
Partition 232 (D.46327_232 - 232 )
Partition 233 (D.46328_233 - 233 )
Partition 234 (D.46330_234 - 234 )
Partition 235 (D.46327_235 - 235 )
Partition 236 (D.46328_236 - 236 )
Partition 237 (D.46327_237 - 237 )
Partition 238 (D.46331_238 - 238 )
Partition 239 (D.46330_239 - 239 )
Partition 240 (D.46327_240 - 240 )
Partition 241 (D.46331_241 - 241 )
Partition 242 (D.46327_242 - 242 )
Partition 243 (D.46333_243 - 243 )
Partition 244 (D.46330_244 - 244 )
Partition 245 (D.46327_245 - 245 )
Partition 246 (D.46333_246 - 246 )
Partition 247 (D.46330_247 - 247 )
Partition 248 (D.46308_248 - 248 )
Partition 249 (D.46335_249 - 249 )
Partition 250 (D.46330_250 - 250 )
Partition 251 (D.46308_251 - 251 )
Partition 252 (D.46338_252 - 252 )
Partition 253 (D.46330_253 - 253 )
Partition 254 (D.46308_254 - 254 )
Partition 255 (D.46341_255 - 255 )
Partition 256 (D.46330_256 - 256 )
Partition 257 (D.46344_257 - 257 )
Partition 258 (D.46308_258 - 258 )
Partition 259 (D.46338_259 - 259 )
Partition 260 (D.46345_260 - 260 )
Partition 261 (D.46346_261 - 261 )
Partition 263 (D.46330_263 - 263 )
Partition 264 (D.46347_264 - 264 )
Partition 265 (D.46350_265 - 265 )
Partition 266 (D.46308_266 - 266 )
Partition 267 (D.46353_267 - 267 )
Partition 268 (D.46354_268 - 268 )
Partition 269 (D.46355_269 - 269 )
Partition 271 (D.46346_271 - 271 )
Partition 272 (D.46179_272 - 272 )
Partition 273 (D.46330_273 - 273 )
Partition 274 (D.46344_274 - 274 )
Partition 275 (bytes_275 - 275 )
Partition 276 (D.46263_276 - 276 )
Partition 277 (D.46360_277 - 277 )
Partition 279 (D.46204_279 - 279 )
Partition 280 (frames.134_280 - 280 )
Partition 281 (D.46362_281 - 281 )
Partition 282 (D.46263_282 - 282 )
Partition 284 (D.46263_284 - 284 )
Partition 285 (D.46162_285 - 285 )
Partition 287 (D.46151_287 - 287 )
Partition 288 (D.46151_288 - 288 )
Partition 289 (status_289 - 1 10 15 17 39 45 64 72 106 176 283 286 289 290 291 )
Partition 292 (.MEM_292 - 292 )
Partition 293 (.MEM_293 - 293 )
Partition 294 (.MEM_294 - 294 )
Partition 295 (.MEM_295 - 295 )
Partition 296 (.MEM_296 - 296 )
Partition 297 (.MEM_297 - 297 )
Partition 298 (.MEM_298 - 298 )
Partition 299 (.MEM_299 - 299 )
Partition 300 (.MEM_300 - 300 )
Partition 301 (.MEM_301 - 301 )
Partition 302 (.MEM_302 - 302 )
Partition 303 (.MEM_303 - 303 )
Partition 304 (.MEM_304 - 304 )
Partition 305 (.MEM_305 - 305 )
Partition 306 (.MEM_306 - 306 )
Partition 307 (.MEM_307 - 307 )
Partition 308 (.MEM_308 - 308 )
Partition 309 (.MEM_309(D) - 309 )
Partition 310 (.MEM_310 - 310 )
Partition 311 (.MEM_311 - 311 )
Partition 312 (.MEM_312 - 312 )
Partition 313 (.MEM_313 - 313 )
Partition 314 (.MEM_314 - 314 )
Partition 315 (.MEM_315 - 315 )
Partition 316 (.MEM_316 - 316 )
Partition 317 (.MEM_317 - 317 )
Partition 318 (.MEM_318 - 318 )
Partition 319 (.MEM_319 - 319 )
Partition 320 (.MEM_320 - 320 )
Partition 321 (.MEM_321 - 321 )
Partition 322 (.MEM_322 - 322 )
Partition 323 (.MEM_323 - 323 )
Partition 324 (.MEM_324 - 324 )
Partition 325 (.MEM_325 - 325 )
Partition 326 (.MEM_326 - 326 )
Partition 327 (.MEM_327 - 327 )
Partition 328 (.MEM_328 - 328 )
Partition 329 (.MEM_329 - 329 )
Partition 330 (.MEM_330 - 330 )
Partition 331 (.MEM_331 - 331 )
Partition 332 (.MEM_332 - 332 )
Partition 333 (.MEM_333 - 333 )
Partition 334 (.MEM_334 - 334 )
Partition 335 (.MEM_335 - 335 )
Partition 336 (.MEM_336 - 336 )
Partition 337 (.MEM_337 - 337 )
Partition 338 (.MEM_338 - 338 )
Partition 339 (.MEM_339 - 339 )
Partition 340 (.MEM_340 - 340 )
Partition 341 (.MEM_341 - 341 )
Partition 342 (.MEM_342 - 342 )
Partition 343 (.MEM_343 - 343 )
Partition 344 (.MEM_344 - 344 )
Partition 345 (.MEM_345 - 345 )
Partition 346 (.MEM_346 - 346 )
Partition 347 (.MEM_347 - 347 )
Partition 348 (.MEM_348 - 348 )
Partition 349 (.MEM_349 - 349 )
Partition 350 (.MEM_350 - 350 )
Partition 351 (.MEM_351 - 351 )
Partition 352 (.MEM_352 - 352 )
Partition 353 (.MEM_353 - 353 )
Partition 354 (.MEM_354 - 354 )
Partition 355 (.MEM_355 - 355 )
Partition 356 (.MEM_356 - 356 )
Partition 357 (.MEM_357 - 357 )
Partition 358 (.MEM_358 - 358 )
Partition 359 (.MEM_359 - 359 )
Partition 360 (.MEM_360 - 360 )
Partition 361 (.MEM_361 - 361 )
Partition 362 (.MEM_362 - 362 )
Partition 363 (.MEM_363 - 363 )
Partition 364 (.MEM_364 - 364 )
Partition 365 (.MEM_365 - 365 )
Partition 366 (.MEM_366 - 366 )
Partition 367 (.MEM_367 - 367 )
Partition 368 (.MEM_368 - 368 )
Partition 369 (.MEM_369 - 369 )
Partition 370 (.MEM_370 - 370 )
Partition 371 (.MEM_371 - 371 )
Partition 372 (.MEM_372 - 372 )
Partition 373 (.MEM_373 - 373 )
Partition 374 (.MEM_374 - 374 )
Partition 375 (.MEM_375 - 375 )
Partition 376 (.MEM_376 - 376 )
Partition 377 (.MEM_377 - 377 )
Partition 378 (.MEM_378 - 378 )
Partition 379 (.MEM_379 - 379 )
Partition 380 (.MEM_380 - 380 )
Partition 381 (.MEM_381 - 381 )
Partition 382 (.MEM_382 - 382 )
Partition 383 (.MEM_383 - 383 )
Partition 384 (.MEM_384 - 384 )
Partition 385 (.MEM_385 - 385 )
Partition 386 (.MEM_386 - 386 )
Partition 387 (.MEM_387 - 387 )
Partition 388 (.MEM_388 - 388 )
Partition 389 (.MEM_389 - 389 )
Partition 390 (.MEM_390 - 390 )
Partition 391 (.MEM_391 - 391 )
Partition 392 (.MEM_392 - 392 )
Partition 393 (.MEM_393 - 393 )
Partition 394 (.MEM_394 - 394 )
Partition 395 (.MEM_395 - 395 )
Partition 396 (.MEM_396 - 396 )
Partition 397 (.MEM_397 - 397 )
Partition 398 (.MEM_398 - 398 )
Partition 399 (.MEM_399 - 399 )
Partition 400 (.MEM_400 - 400 )
Partition 401 (.MEM_401 - 401 )
Partition 402 (.MEM_402 - 402 )
Partition 403 (.MEM_403 - 403 )
Partition 404 (.MEM_404 - 404 )
Partition 405 (.MEM_405 - 405 )
Partition 406 (.MEM_406 - 406 )
Partition 407 (.MEM_407 - 407 )
Partition 408 (.MEM_408 - 408 )
Partition 409 (.MEM_409 - 409 )
Partition 410 (.MEM_410 - 410 )
Partition 411 (.MEM_411 - 411 )
Partition 412 (.MEM_412 - 412 )
Partition 413 (.MEM_413 - 413 )
Partition 414 (.MEM_414 - 414 )
Partition 415 (.MEM_415 - 415 )
Partition 416 (.MEM_416 - 416 )
Partition 417 (.MEM_417 - 417 )
Partition 418 (.MEM_418 - 418 )
Partition 419 (.MEM_419 - 419 )
Partition 420 (.MEM_420 - 420 )
Partition 421 (.MEM_421 - 421 )
Partition 422 (.MEM_422 - 422 )
Partition 423 (.MEM_423 - 423 )
Partition 424 (D.47777_424 - 424 )
Partition 425 (D.47776_425 - 425 )
Partition 426 (D.47775_426 - 426 )
Partition 427 (D.47774_427 - 427 )
Partition 428 (D.47773_428 - 428 )
Partition 429 (iftmp.104_429 - 429 )
Partition 433 (D.47792_433 - 433 )
Partition 434 (D.47791_434 - 434 )
Partition 435 (D.47790_435 - 435 )
Partition 436 (D.47789_436 - 436 )
Partition 437 (D.47788_437 - 437 )
Partition 438 (iftmp.104_438 - 438 )
Partition 440 (.MEM_440 - 440 )
Partition 441 (.MEM_441 - 441 )
Partition 442 (D.47772_442 - 24 430 442 )
Partition 443 (.MEM_443 - 443 )
Partition 444 (v_444 - 75 431 444 )
Partition 445 (.MEM_445 - 445 )
Partition 446 (v_446 - 79 432 446 )
Partition 447 (D.47787_447 - 188 439 447 )

Coalesced D.46128_10 to status_289
Coalesced D.46128_15 to status_289
Coalesced D.46128_17 to status_289
Coalesced D.46139_24 to D.47772_442
Coalesced D.46128_39 to status_289
Coalesced D.46272_188 to D.47787_447
Coalesced D.46128_290 to status_289
Coalesced D.46128_291 to status_289
Coalesced D.47779_430 to D.47772_442
Coalesced D.47782_431 to v_444
Coalesced D.47785_432 to v_446
Coalesced D.47794_439 to D.47787_447
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtcp_frame_t rtcp_frame;
  struct switch_rtp_engine_t * engine;
  switch_status_t status;
  struct switch_media_handle_t * smh;
  int do_cng;
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_read_frame";
  static const char __func__[29] = "switch_core_media_read_frame";
  void end = <<< error >>>; (unused)
  void skip = <<< error >>>; (unused)

  { Scope block #153 src/switch_core_media.c:1637 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #154 Originating from :#0 

    }

  }

  { Scope block #155 
    const char * val;
    int rtp_timeout_sec;
    int rtp_hold_timeout_sec;

    { Scope block #156 
      int v;

      { Scope block #157 src/switch_core_media.c:1698 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #158 Originating from :#0 

        }

      }

    }

    { Scope block #159 
      int v;

      { Scope block #160 src/switch_core_media.c:1705 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #161 Originating from :#0 

        }

      }

    }

  }

  { Scope block #162 
    struct switch_event_t * event;

    { Scope block #163 
      char value[30];
      char header[50];
      int i;
      char * uuid;

    }

  }

  { Scope block #164 
    struct switch_dtmf_t dtmf;

  }

  { Scope block #165 
    uint32_t bytes;
    int frames;

    { Scope block #166 src/switch_core_media.c:1832 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
      struct switch_codec_t * codec; (unused)

      { Scope block #167 Originating from :#0 

      }

    }

    { Scope block #168 
      uint32_t codec_ms;

    }

    { Scope block #169 
      struct payload_map_t * pmap;

    }

  }

}
switch_core_media_read_frame (struct switch_core_session_t * session, struct switch_frame_t * * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47792;
  uint32_t D.47791;
  struct switch_mutex_t * D.47790;
  struct switch_codec_interface_t * D.47789;
  const struct switch_codec_implementation_t * D.47788;
  switch_bool_t D.47787;
  int iftmp.104;
  uint32_t D.47777;
  uint32_t D.47776;
  struct switch_mutex_t * D.47775;
  struct switch_codec_interface_t * D.47774;
  const struct switch_codec_implementation_t * D.47773;
  switch_bool_t D.47772;
  struct payload_map_t * pmap;
  uint32_t codec_ms;
  int frames;
  uint32_t bytes;
  struct switch_dtmf_t dtmf;
  char * uuid;
  int i;
  char header[50];
  char value[30];
  struct switch_event_t * event;
  int v;
  int v;
  int rtp_hold_timeout_sec;
  int rtp_timeout_sec;
  const char * val;
  static const char __func__[29] = "switch_core_media_read_frame";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_read_frame";
  int do_cng;
  struct switch_media_handle_t * smh;
  switch_status_t status;
  struct switch_rtp_engine_t * engine;
  struct switch_rtcp_frame_t rtcp_frame;
  uint32_t D.46362;
  uint32_t frames.134;
  uint32_t D.46360;
  int D.46355;
  switch_payload_t D.46354;
  char * D.46353;
  uint8_t D.46350;
  switch_payload_t D.46347;
  struct switch_mutex_t * D.46346;
  int D.46345;
  int D.46344;
  switch_payload_t D.46341;
  switch_payload_t D.46338;
  switch_payload_t D.46335;
  switch_payload_t D.46333;
  switch_payload_t D.46331;
  switch_payload_t D.46330;
  switch_payload_t D.46328;
  struct switch_core_media_params_t * D.46327;
  uint8_t D.46324;
  int D.46317;
  int codec_ms.133;
  uint32_t D.46309;
  struct payload_map_t * D.46308;
  uint32_t D.46305;
  uint32_t D.46304;
  uint32_t D.46299;
  uint32_t D.46298;
  uint32_t D.46296;
  uint32_t D.46293;
  switch_size_t D.46292;
  switch_size_t D.46289;
  uint32_t D.46285;
  uint32_t D.46279;
  uint32_t D.46276;
  switch_core_media_flag_t D.46273;
  switch_frame_flag_t D.46266;
  uint32_t D.46263;
  switch_size_t D.46260;
  switch_frame_flag_t D.46257;
  switch_frame_flag_t D.46256;
  int D.46255;
  uint16_t D.46254;
  uint32_t D.46253;
  const char * restrict D.46252;
  uint32_t D.46251;
  const char * restrict D.46250;
  uint32_t D.46249;
  const char * restrict D.46248;
  uint32_t D.46247;
  const char * restrict D.46246;
  uint32_t D.46245;
  const char * restrict D.46244;
  int D.46243;
  uint8_t D.46242;
  const char * restrict D.46241;
  uint32_t D.46240;
  const char * restrict D.46239;
  switch_time_t D.46238;
  const char * restrict D.46237;
  uint32_t D.46236;
  switch_size_t D.46235;
  const char * restrict D.46234;
  uint32_t D.46233;
  uint32_t D.46232;
  uint32_t D.46231;
  uint32_t D.46230;
  uint32_t D.46229;
  const char * restrict D.46228;
  uint32_t D.46227;
  const char * restrict D.46226;
  char * D.46225;
  struct switch_event_t * event.132;
  switch_status_t D.46219;
  switch_status_t D.46216;
  uint32_t D.46213;
  uint32_t D.46212;
  uint32_t rtp_hold_timeout_sec.131;
  uint32_t D.46206;
  uint32_t D.46205;
  uint32_t D.46204;
  uint32_t D.46203;
  uint32_t rtp_timeout_sec.130;
  uint32_t D.46201;
  switch_status_t D.46188;
  uint8_t D.46182;
  uint8_t D.46179;
  uint32_t D.46178;
  void * D.46177;
  uint32_t D.46176;
  switch_frame_flag_t D.46175;
  switch_frame_flag_t D.46174;
  struct switch_frame_t * D.46173;
  const char * D.46170;
  _Bool D.46165;
  _Bool D.46164;
  _Bool D.46163;
  struct switch_frame_t * D.46162;
  char * iftmp.129;
  char * D.46157;
  switch_status_t D.46154;
  struct switch_mutex_t * D.46151;
  uint32_t D.46150;
  uint8_t D.46148;
  switch_channel_state_t D.46146;
  struct switch_channel_t * D.46145;
  struct switch_rtp_t * D.46140;
  struct switch_codec_t * D.46138;
  const struct switch_codec_implementation_t * D.46136;
  unsigned int D.46133;
  struct switch_rtp_engine_t[2] * D.46132;
  switch_core_media_flag_t D.46129;

<bb 2>:
  do_cng_12 = 0;
  # DEBUG do_cng => do_cng_12
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1623, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_14 = session_13(D)->media_handle;
  # DEBUG smh => smh_14
  if (smh_14 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_15 = 1;
  goto <bb 131>;

<bb 6>:
  D.46129_16 = smh_14->media_flags[0];
  if (D.46129_16 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  status_17 = 1;
  goto <bb 131>;

<bb 8>:
  D.46132_18 = &smh_14->engines;
  D.46133_20 = type_19(D) * 11416;
  engine_21 = D.46132_18 + D.46133_20;
  # DEBUG engine => engine_21
  engine_21->read_frame.datalen = 0;
  D.46136_22 = engine_21->read_codec.implementation;
  if (D.46136_22 == 0B)
    goto <bb 16>;
  else
    goto <bb 9>;

<bb 9>:
  D.46138_23 = &engine_21->read_codec;
  # DEBUG codec => D.46138_23
  if (D.46138_23 != 0B)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 10>:
  D.47777_424 = D.46138_23->flags;
  D.47776_425 = D.47777_424 & 256;
  if (D.47776_425 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.47775_426 = D.46138_23->mutex;
  if (D.47775_426 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.47774_427 = D.46138_23->codec_interface;
  if (D.47774_427 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.47773_428 = D.46138_23->implementation;
  if (D.47773_428 != 0B)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # iftmp.104_429 = PHI <1(13), 0(14)>
  D.47772_430 = (switch_bool_t) iftmp.104_429;
  D.47772_442 = D.47772_430;
  D.47772_24 = D.47772_442;
  if (D.47772_24 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  status_291 = 1;
  goto <bb 131>;

<bb 17>:
  D.46140_25 = engine_21->rtp_session;
  if (D.46140_25 == 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  __assert_fail ("engine->rtp_session != ((void *)0)", "src/switch_core_media.c", 1641, &__PRETTY_FUNCTION__);

<bb 19>:
  engine_21->read_frame.datalen = 0;
  D.46145_26 = session_13(D)->channel;
  D.46146_27 = switch_channel_get_state (D.46145_26);
  if (D.46146_27 > 9)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 20>:
  D.46140_28 = engine_21->rtp_session;
  D.46148_29 = switch_rtp_ready (D.46140_28);
  if (D.46148_29 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

<bb 21>:
  D.46145_30 = session_13(D)->channel;
  D.46150_31 = switch_channel_test_flag (D.46145_30, 45);
  if (D.46150_31 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  status_290 = 1;
  goto <bb 131>;

<bb 23>:
  D.46151_32 = engine_21->read_mutex[type_19(D)];
  if (D.46151_32 != 0B)
    goto <bb 24>;
  else
    goto <bb 123>;

<bb 24>:
  D.46151_33 = engine_21->read_mutex[type_19(D)];
  D.46154_34 = switch_mutex_trylock (D.46151_33);
  if (D.46154_34 != 0)
    goto <bb 25>;
  else
    goto <bb 123>;

<bb 25>:
  D.46145_35 = session_13(D)->channel;
  D.46157_36 = switch_channel_get_name (D.46145_35);
  if (type_19(D) == 1)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  iftmp.129_37 = "video";
  goto <bb 28>;

<bb 27>:
  iftmp.129_38 = "audio";

<bb 28>:
  # iftmp.129_11 = PHI <iftmp.129_37(26), iftmp.129_38(27)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1650, session_13(D), 101, "%s is already being read for %s\n", D.46157_36, iftmp.129_11);
  status_39 = 10;
  goto <bb 131>;

<bb 29>:
  engine_21->read_frame.flags = 0;
  D.46140_42 = engine_21->rtp_session;
  D.46162_43 = &engine_21->read_frame;
  status_45 = switch_rtp_zerocopy_read_frame (D.46140_42, D.46162_43, flags_44(D));
  # DEBUG status => status_45
  D.46163_46 = status_45 != 0;
  D.46164_47 = status_45 != 11;
  D.46165_48 = D.46163_46 && D.46164_47;
  if (D.46165_48 != 0)
    goto <bb 30>;
  else
    goto <bb 34>;

<bb 30>:
  if (status_45 == 2)
    goto <bb 31>;
  else
    goto <bb 128> (end);

<bb 31>:
  D.46145_49 = session_13(D)->channel;
  D.46170_50 = switch_channel_get_variable_dup (D.46145_49, "execute_on_media_timeout", 1, -1);
  if (D.46170_50 != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  D.46162_51 = &engine_21->read_frame;
  *frame_52(D) = D.46162_51;
  D.46173_53 = *frame_52(D);
  D.46173_54 = *frame_52(D);
  D.46174_55 = D.46173_54->flags;
  D.46175_56 = D.46174_55 | 1;
  D.46173_54->flags = D.46175_56;
  D.46173_57 = *frame_52(D);
  D.46176_58 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_57->datalen = D.46176_58;
  D.46173_59 = *frame_52(D);
  D.46177_60 = D.46173_59->data;
  D.46173_61 = *frame_52(D);
  D.46178_62 = D.46173_61->datalen;
  memset (D.46177_60, 0, D.46178_62);
  D.46145_63 = session_13(D)->channel;
  switch_channel_execute_on (D.46145_63, "execute_on_media_timeout");
  status_64 = 0;
  # DEBUG status => status_64
  goto <bb 128> (end);

<bb 33>:
  D.46145_65 = session_13(D)->channel;
  switch_channel_perform_hangup (D.46145_65, "src/switch_core_media.c", &__func__, 1674, 604);
  goto <bb 128> (end);

<bb 34>:
  D.46179_66 = engine_21->reset_codec;
  if (D.46179_66 != 0)
    goto <bb 35>;
  else
    goto <bb 52>;

<bb 35>:
  rtp_timeout_sec_67 = 0;
  # DEBUG rtp_timeout_sec => rtp_timeout_sec_67
  rtp_hold_timeout_sec_68 = 0;
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_68
  engine_21->reset_codec = 0;
  D.46140_69 = engine_21->rtp_session;
  D.46182_70 = switch_rtp_ready (D.46140_69);
  if (D.46182_70 != 0)
    goto <bb 36>;
  else
    goto <bb 51>;

<bb 36>:
  if (type_19(D) == 1)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  switch_core_media_set_video_codec (session_13(D), 1);
  goto <bb 40>;

<bb 38>:
  D.46188_71 = switch_core_media_set_codec (session_13(D), 1, 0);
  if (D.46188_71 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  *frame_52(D) = 0B;
  status_72 = 9;
  # DEBUG status => status_72
  goto <bb 128> (end);

<bb 40>:
  D.46145_73 = session_13(D)->channel;
  val_74 = switch_channel_get_variable_dup (D.46145_73, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_74
  if (val_74 != 0B)
    goto <bb 41>;
  else
    goto <bb 43>;

<bb 41>:
  # DEBUG __nptr => val_74
  v_431 = strtol (val_74, 0B, 10);
  v_444 = v_431;
  v_75 = v_444;
  # DEBUG v => NULL
  if (v_75 >= 0)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  rtp_timeout_sec_76 = v_75;
  # DEBUG rtp_timeout_sec => rtp_timeout_sec_76

<bb 43>:
  # rtp_timeout_sec_4 = PHI <rtp_timeout_sec_67(40), rtp_timeout_sec_67(41), rtp_timeout_sec_76(42)>
  # DEBUG rtp_timeout_sec => rtp_timeout_sec_4
  D.46145_77 = session_13(D)->channel;
  val_78 = switch_channel_get_variable_dup (D.46145_77, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_78
  if (val_78 != 0B)
    goto <bb 44>;
  else
    goto <bb 46>;

<bb 44>:
  # DEBUG __nptr => val_78
  v_432 = strtol (val_78, 0B, 10);
  v_446 = v_432;
  v_79 = v_446;
  # DEBUG v => NULL
  if (v_79 >= 0)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  rtp_hold_timeout_sec_80 = v_79;
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_80

<bb 46>:
  # rtp_hold_timeout_sec_5 = PHI <rtp_hold_timeout_sec_68(43), rtp_hold_timeout_sec_68(44), rtp_hold_timeout_sec_80(45)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_5
  if (rtp_timeout_sec_4 != 0)
    goto <bb 47>;
  else
    goto <bb 49>;

<bb 47>:
  D.46201_81 = engine_21->read_impl.samples_per_second;
  rtp_timeout_sec.130_82 = (uint32_t) rtp_timeout_sec_4;
  D.46203_83 = D.46201_81 * rtp_timeout_sec.130_82;
  D.46204_84 = engine_21->read_impl.samples_per_packet;
  D.46205_85 = D.46203_83 / D.46204_84;
  engine_21->max_missed_packets = D.46205_85;
  D.46140_86 = engine_21->rtp_session;
  D.46206_87 = engine_21->max_missed_packets;
  switch_rtp_set_max_missed_packets (D.46140_86, D.46206_87);
  if (rtp_hold_timeout_sec_5 == 0)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  rtp_hold_timeout_sec_88 = rtp_timeout_sec_4 * 10;
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_88

<bb 49>:
  # rtp_hold_timeout_sec_6 = PHI <rtp_hold_timeout_sec_5(46), rtp_hold_timeout_sec_5(47), rtp_hold_timeout_sec_88(48)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_6
  if (rtp_hold_timeout_sec_6 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  D.46201_89 = engine_21->read_impl.samples_per_second;
  rtp_hold_timeout_sec.131_90 = (uint32_t) rtp_hold_timeout_sec_6;
  D.46212_91 = D.46201_89 * rtp_hold_timeout_sec.131_90;
  D.46204_92 = engine_21->read_impl.samples_per_packet;
  D.46213_93 = D.46212_91 / D.46204_92;
  engine_21->max_missed_hold_packets = D.46213_93;

<bb 51>:
  engine_21->check_frames = 0;
  engine_21->last_ts = 0;
  do_cng_94 = 1;
  # DEBUG do_cng => do_cng_94

<bb 52>:
  # do_cng_2 = PHI <do_cng_3(34), do_cng_94(51)>
  # DEBUG do_cng => do_cng_2
  if (do_cng_2 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  D.46162_95 = &engine_21->read_frame;
  *frame_52(D) = D.46162_95;
  D.46173_96 = *frame_52(D);
  D.46173_97 = *frame_52(D);
  D.46174_98 = D.46173_97->flags;
  D.46175_99 = D.46174_98 | 1;
  D.46173_97->flags = D.46175_99;
  D.46173_100 = *frame_52(D);
  D.46176_101 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_100->datalen = D.46176_101;
  D.46173_102 = *frame_52(D);
  D.46177_103 = D.46173_102->data;
  D.46173_104 = *frame_52(D);
  D.46178_105 = D.46173_104->datalen;
  memset (D.46177_103, 0, D.46178_105);
  status_106 = 0;
  # DEBUG status => status_106
  goto <bb 128> (end);

<bb 54>:
  D.46140_107 = engine_21->rtp_session;
  D.46216_108 = switch_rtcp_zerocopy_read_frame (D.46140_107, &rtcp_frame);
  if (D.46216_108 == 0)
    goto <bb 55>;
  else
    goto <bb 62>;

<bb 55>:
  D.46219_109 = switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 1747, &event, 71, 0B);
  if (D.46219_109 == 0)
    goto <bb 56>;
  else
    goto <bb 62>;

<bb 56>:
  uuid_110 = switch_core_session_get_uuid (session_13(D));
  # DEBUG uuid => uuid_110
  if (uuid_110 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  event.132_111 = event;
  D.46225_112 = switch_core_session_get_uuid (session_13(D));
  switch_event_add_header_string (event.132_111, 1, "Unique-ID", D.46225_112);

<bb 58>:
  D.46226_113 = (const char * restrict) &"%.8x"[0];
  D.46227_114 = rtcp_frame.ssrc;
  snprintf (&value, 30, D.46226_113, D.46227_114);
  event.132_115 = event;
  switch_event_add_header_string (event.132_115, 1, "SSRC", &value);
  D.46228_116 = (const char * restrict) &"%u"[0];
  D.46229_117 = rtcp_frame.ntp_msw;
  snprintf (&value, 30, D.46228_116, D.46229_117);
  event.132_118 = event;
  switch_event_add_header_string (event.132_118, 1, "NTP-Most-Significant-Word", &value);
  D.46228_119 = (const char * restrict) &"%u"[0];
  D.46230_120 = rtcp_frame.ntp_lsw;
  snprintf (&value, 30, D.46228_119, D.46230_120);
  event.132_121 = event;
  switch_event_add_header_string (event.132_121, 1, "NTP-Least-Significant-Word", &value);
  D.46228_122 = (const char * restrict) &"%u"[0];
  D.46231_123 = rtcp_frame.timestamp;
  snprintf (&value, 30, D.46228_122, D.46231_123);
  event.132_124 = event;
  switch_event_add_header_string (event.132_124, 1, "RTP-Timestamp", &value);
  D.46228_125 = (const char * restrict) &"%u"[0];
  D.46232_126 = rtcp_frame.packet_count;
  snprintf (&value, 30, D.46228_125, D.46232_126);
  event.132_127 = event;
  switch_event_add_header_string (event.132_127, 1, "Sender-Packet-Count", &value);
  D.46228_128 = (const char * restrict) &"%u"[0];
  D.46233_129 = rtcp_frame.octect_count;
  snprintf (&value, 30, D.46228_128, D.46233_129);
  event.132_130 = event;
  switch_event_add_header_string (event.132_130, 1, "Octect-Packet-Count", &value);
  D.46234_131 = (const char * restrict) &"%d"[0];
  D.46235_132 = engine_21->read_frame.timestamp;
  snprintf (&value, 30, D.46234_131, D.46235_132);
  event.132_133 = event;
  switch_event_add_header_string (event.132_133, 1, "Last-RTP-Timestamp", &value);
  D.46228_134 = (const char * restrict) &"%u"[0];
  D.46236_135 = engine_21->read_frame.rate;
  snprintf (&value, 30, D.46228_134, D.46236_135);
  event.132_136 = event;
  switch_event_add_header_string (event.132_136, 1, "RTP-Rate", &value);
  D.46237_137 = (const char * restrict) &"%lld"[0];
  D.46238_138 = switch_time_now ();
  snprintf (&value, 30, D.46237_137, D.46238_138);
  event.132_139 = event;
  switch_event_add_header_string (event.132_139, 1, "Capture-Time", &value);
  i_140 = 0;
  # DEBUG i => i_140
  goto <bb 60>;

<bb 59>:
  D.46239_143 = (const char * restrict) &"Source%u-SSRC"[0];
  snprintf (&header, 50, D.46239_143, i_7);
  D.46226_144 = (const char * restrict) &"%.8x"[0];
  D.46240_145 = rtcp_frame.reports[i_7].ssrc;
  snprintf (&value, 30, D.46226_144, D.46240_145);
  event.132_146 = event;
  switch_event_add_header_string (event.132_146, 1, &header, &value);
  D.46241_147 = (const char * restrict) &"Source%u-Fraction"[0];
  snprintf (&header, 50, D.46241_147, i_7);
  D.46228_148 = (const char * restrict) &"%u"[0];
  D.46242_149 = rtcp_frame.reports[i_7].fraction;
  D.46243_150 = (int) D.46242_149;
  snprintf (&value, 30, D.46228_148, D.46243_150);
  event.132_151 = event;
  switch_event_add_header_string (event.132_151, 1, &header, &value);
  D.46244_152 = (const char * restrict) &"Source%u-Lost"[0];
  snprintf (&header, 50, D.46244_152, i_7);
  D.46228_153 = (const char * restrict) &"%u"[0];
  D.46245_154 = rtcp_frame.reports[i_7].lost;
  snprintf (&value, 30, D.46228_153, D.46245_154);
  event.132_155 = event;
  switch_event_add_header_string (event.132_155, 1, &header, &value);
  D.46246_156 = (const char * restrict) &"Source%u-Highest-Sequence-Number-Received"[0];
  snprintf (&header, 50, D.46246_156, i_7);
  D.46228_157 = (const char * restrict) &"%u"[0];
  D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
  snprintf (&value, 30, D.46228_157, D.46247_158);
  event.132_159 = event;
  switch_event_add_header_string (event.132_159, 1, &header, &value);
  D.46248_160 = (const char * restrict) &"Source%u-Jitter"[0];
  snprintf (&header, 50, D.46248_160, i_7);
  D.46228_161 = (const char * restrict) &"%u"[0];
  D.46249_162 = rtcp_frame.reports[i_7].jitter;
  snprintf (&value, 30, D.46228_161, D.46249_162);
  event.132_163 = event;
  switch_event_add_header_string (event.132_163, 1, &header, &value);
  D.46250_164 = (const char * restrict) &"Source%u-LSR"[0];
  snprintf (&header, 50, D.46250_164, i_7);
  D.46228_165 = (const char * restrict) &"%u"[0];
  D.46251_166 = rtcp_frame.reports[i_7].lsr;
  snprintf (&value, 30, D.46228_165, D.46251_166);
  event.132_167 = event;
  switch_event_add_header_string (event.132_167, 1, &header, &value);
  D.46252_168 = (const char * restrict) &"Source%u-DLSR"[0];
  snprintf (&header, 50, D.46252_168, i_7);
  D.46228_169 = (const char * restrict) &"%u"[0];
  D.46253_170 = rtcp_frame.reports[i_7].dlsr;
  snprintf (&value, 30, D.46228_169, D.46253_170);
  event.132_171 = event;
  switch_event_add_header_string (event.132_171, 1, &header, &value);
  i_172 = i_7 + 1;
  # DEBUG i => i_172

<bb 60>:
  # i_7 = PHI <i_140(58), i_172(59)>
  # DEBUG i => i_7
  D.46254_141 = rtcp_frame.report_count;
  D.46255_142 = (int) D.46254_141;
  if (D.46255_142 > i_7)
    goto <bb 59>;
  else
    goto <bb 61>;

<bb 61>:
  switch_event_fire_detailed ("src/switch_core_media.c", &__func__, 1809, &event, 0B);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1810, session_13(D), 110, "Dispatched RTCP event\n");

<bb 62>:
  D.46256_173 = engine_21->read_frame.flags;
  D.46257_174 = D.46256_173 & 32;
  if (D.46257_174 != 0)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  D.46162_175 = &engine_21->read_frame;
  *frame_52(D) = D.46162_175;
  status_176 = 0;
  # DEBUG status => status_176
  goto <bb 128> (end);

<bb 64>:
  D.46140_177 = engine_21->rtp_session;
  D.46260_178 = switch_rtp_has_dtmf (D.46140_177);
  if (D.46260_178 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  dtmf = {};
  D.46140_179 = engine_21->rtp_session;
  switch_rtp_dequeue_dtmf (D.46140_179, &dtmf);
  D.46145_180 = session_13(D)->channel;
  switch_channel_queue_dtmf (D.46145_180, &dtmf);

<bb 66>:
  D.46263_181 = engine_21->read_frame.datalen;
  if (D.46263_181 != 0)
    goto <bb 67>;
  else
    goto <bb 123>;

<bb 67>:
  bytes_182 = 0;
  # DEBUG bytes => bytes_182
  frames_183 = 1;
  # DEBUG frames => frames_183
  D.46256_184 = engine_21->read_frame.flags;
  D.46266_185 = D.46256_184 & 1;
  if (D.46266_185 == 0)
    goto <bb 68>;
  else
    goto <bb 125>;

<bb 68>:
  D.46136_186 = engine_21->read_codec.implementation;
  if (D.46136_186 == 0B)
    goto <bb 76>;
  else
    goto <bb 69>;

<bb 69>:
  D.46138_187 = &engine_21->read_codec;
  # DEBUG codec => D.46138_187
  if (D.46138_187 != 0B)
    goto <bb 70>;
  else
    goto <bb 74>;

<bb 70>:
  D.47792_433 = D.46138_187->flags;
  D.47791_434 = D.47792_433 & 256;
  if (D.47791_434 != 0)
    goto <bb 71>;
  else
    goto <bb 74>;

<bb 71>:
  D.47790_435 = D.46138_187->mutex;
  if (D.47790_435 != 0B)
    goto <bb 72>;
  else
    goto <bb 74>;

<bb 72>:
  D.47789_436 = D.46138_187->codec_interface;
  if (D.47789_436 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  D.47788_437 = D.46138_187->implementation;
  if (D.47788_437 != 0B)
    goto <bb 75>;
  else
    goto <bb 74>;

<bb 74>:

<bb 75>:
  # iftmp.104_438 = PHI <1(73), 0(74)>
  D.47787_439 = (switch_bool_t) iftmp.104_438;
  D.47787_447 = D.47787_439;
  D.47787_188 = D.47787_447;
  if (D.47787_188 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;

<bb 76>:
  *frame_52(D) = 0B;
  status_283 = 9;
  # DEBUG status => status_283
  goto <bb 128> (end);

<bb 77>:
  D.46273_189 = smh_14->media_flags[2];
  if (D.46273_189 != 0)
    goto <bb 78>;
  else
    goto <bb 100>;

<bb 78>:
  D.46276_190 = engine_21->check_frames;
  if (D.46276_190 <= 49)
    goto <bb 79>;
  else
    goto <bb 100>;

<bb 79>:
  D.46276_191 = engine_21->check_frames;
  D.46279_192 = D.46276_191 + 1;
  engine_21->check_frames = D.46279_192;
  D.46176_193 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46176_193 == 0)
    goto <bb 80>;
  else
    goto <bb 81>;

<bb 80>:
  engine_21->check_frames = 50;
  goto <bb 119> (skip);

<bb 81>:
  D.46273_194 = smh_14->media_flags[2];
  if (D.46273_194 != 0)
    goto <bb 82>;
  else
    goto <bb 99>;

<bb 82>:
  D.46263_195 = engine_21->read_frame.datalen;
  D.46285_196 = D.46263_195 % 10;
  if (D.46285_196 == 0)
    goto <bb 83>;
  else
    goto <bb 99>;

<bb 83>:
  D.46289_197 = engine_21->last_ts;
  if (D.46289_197 != 0)
    goto <bb 84>;
  else
    goto <bb 97>;

<bb 84>:
  D.46263_198 = engine_21->read_frame.datalen;
  D.46176_199 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46263_198 != D.46176_199)
    goto <bb 85>;
  else
    goto <bb 97>;

<bb 85>:
  D.46235_200 = engine_21->read_frame.timestamp;
  D.46289_201 = engine_21->last_ts;
  D.46292_202 = D.46235_200 - D.46289_201;
  D.46201_203 = engine_21->read_impl.samples_per_second;
  D.46293_204 = D.46201_203 / 1000;
  codec_ms_205 = D.46292_202 / D.46293_204;
  # DEBUG codec_ms => codec_ms_205
  D.46296_206 = codec_ms_205 % 10;
  if (D.46296_206 != 0)
    goto <bb 87>;
  else
    goto <bb 86>;

<bb 86>:
  D.46204_207 = engine_21->read_impl.samples_per_packet;
  D.46298_208 = D.46204_207 * 10;
  if (D.46298_208 < codec_ms_205)
    goto <bb 87>;
  else
    goto <bb 88>;

<bb 87>:
  engine_21->last_ts = 0;
  goto <bb 119> (skip);

<bb 88>:
  D.46299_209 = engine_21->last_codec_ms;
  if (D.46299_209 != 0)
    goto <bb 89>;
  else
    goto <bb 91>;

<bb 89>:
  D.46299_210 = engine_21->last_codec_ms;
  if (D.46299_210 == codec_ms_205)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  D.46304_211 = engine_21->mismatch_count;
  D.46305_212 = D.46304_211 + 1;
  engine_21->mismatch_count = D.46305_212;

<bb 91>:
  engine_21->last_codec_ms = codec_ms_205;
  D.46304_213 = engine_21->mismatch_count;
  if (D.46304_213 > 5)
    goto <bb 92>;
  else
    goto <bb 98>;

<bb 92>:
  D.46308_214 = engine_21->cur_payload_map;
  D.46309_215 = D.46308_214->codec_ms;
  if (D.46309_215 != codec_ms_205)
    goto <bb 93>;
  else
    goto <bb 98>;

<bb 93>:
  if (codec_ms_205 > 120)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  codec_ms.133_216 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1871, session_13(D), 4, "Your phone is trying to send timestamps that suggest an increment of %dms per packet\nThat seems hard to believe so I am going to go on ahead and um ignore that, mmkay?\n", codec_ms.133_216);
  engine_21->check_frames = 50;
  goto <bb 119> (skip);

<bb 95>:
  engine_21->read_frame.datalen = 0;
  D.46308_217 = engine_21->cur_payload_map;
  D.46309_218 = D.46308_217->codec_ms;
  if (D.46309_218 != codec_ms_205)
    goto <bb 96>;
  else
    goto <bb 98>;

<bb 96>:
  D.46308_219 = engine_21->cur_payload_map;
  D.46309_220 = D.46308_219->codec_ms;
  D.46317_221 = (int) D.46309_220;
  codec_ms.133_222 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1882, session_13(D), 4, "Asynchronous PTIME not supported, changing our end from %d to %d\n", D.46317_221, codec_ms.133_222);
  D.46145_223 = session_13(D)->channel;
  D.46308_224 = engine_21->cur_payload_map;
  D.46309_225 = D.46308_224->codec_ms;
  D.46317_226 = (int) D.46309_225;
  codec_ms.133_227 = (int) codec_ms_205;
  switch_channel_set_variable_printf (D.46145_223, "rtp_h_X-Broken-PTIME", "Adv=%d;Sent=%d", D.46317_226, codec_ms.133_227);
  D.46308_228 = engine_21->cur_payload_map;
  D.46308_228->codec_ms = codec_ms_205;
  engine_21->reset_codec = 2;
  goto <bb 98>;

<bb 97>:
  engine_21->mismatch_count = 0;

<bb 98>:
  D.46235_229 = engine_21->read_frame.timestamp;
  engine_21->last_ts = D.46235_229;
  goto <bb 100>;

<bb 99>:
  engine_21->mismatch_count = 0;
  engine_21->last_ts = 0;

<bb 100>:
  D.46179_230 = engine_21->reset_codec;
  if (D.46179_230 == 0)
    goto <bb 101>;
  else
    goto <bb 119> (skip);

<bb 101>:
  D.46324_231 = engine_21->codec_negotiated;
  if (D.46324_231 != 0)
    goto <bb 102>;
  else
    goto <bb 119> (skip);

<bb 102>:
  D.46327_232 = smh_14->mparams;
  D.46328_233 = D.46327_232->cng_pt;
  if (D.46328_233 == 0)
    goto <bb 104>;
  else
    goto <bb 103>;

<bb 103>:
  D.46330_234 = engine_21->read_frame.payload;
  D.46327_235 = smh_14->mparams;
  D.46328_236 = D.46327_235->cng_pt;
  if (D.46330_234 != D.46328_236)
    goto <bb 104>;
  else
    goto <bb 119> (skip);

<bb 104>:
  D.46327_237 = smh_14->mparams;
  D.46331_238 = D.46327_237->recv_te;
  if (D.46331_238 == 0)
    goto <bb 106>;
  else
    goto <bb 105>;

<bb 105>:
  D.46330_239 = engine_21->read_frame.payload;
  D.46327_240 = smh_14->mparams;
  D.46331_241 = D.46327_240->recv_te;
  if (D.46330_239 != D.46331_241)
    goto <bb 106>;
  else
    goto <bb 119> (skip);

<bb 106>:
  D.46327_242 = smh_14->mparams;
  D.46333_243 = D.46327_242->te;
  if (D.46333_243 == 0)
    goto <bb 108>;
  else
    goto <bb 107>;

<bb 107>:
  D.46330_244 = engine_21->read_frame.payload;
  D.46327_245 = smh_14->mparams;
  D.46333_246 = D.46327_245->te;
  if (D.46330_244 != D.46333_246)
    goto <bb 108>;
  else
    goto <bb 119> (skip);

<bb 108>:
  D.46330_247 = engine_21->read_frame.payload;
  D.46308_248 = engine_21->cur_payload_map;
  D.46335_249 = D.46308_248->recv_pt;
  if (D.46330_247 != D.46335_249)
    goto <bb 109>;
  else
    goto <bb 119> (skip);

<bb 109>:
  D.46330_250 = engine_21->read_frame.payload;
  D.46308_251 = engine_21->cur_payload_map;
  D.46338_252 = D.46308_251->agreed_pt;
  if (D.46330_250 != D.46338_252)
    goto <bb 110>;
  else
    goto <bb 119> (skip);

<bb 110>:
  D.46330_253 = engine_21->read_frame.payload;
  D.46308_254 = engine_21->cur_payload_map;
  D.46341_255 = D.46308_254->pt;
  if (D.46330_253 != D.46341_255)
    goto <bb 111>;
  else
    goto <bb 119> (skip);

<bb 111>:
  D.46330_256 = engine_21->read_frame.payload;
  D.46344_257 = (int) D.46330_256;
  D.46308_258 = engine_21->cur_payload_map;
  D.46338_259 = D.46308_258->agreed_pt;
  D.46345_260 = (int) D.46338_259;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1926, session_13(D), 7, "alternate payload received (received %d, expecting %d)\n", D.46344_257, D.46345_260);
  D.46346_261 = smh_14->sdp_mutex;
  switch_mutex_lock (D.46346_261);
  pmap_262 = engine_21->payload_map;
  # DEBUG pmap => pmap_262
  goto <bb 116>;

<bb 112>:
  D.46330_263 = engine_21->read_frame.payload;
  D.46347_264 = pmap_9->recv_pt;
  if (D.46330_263 == D.46347_264)
    goto <bb 113>;
  else
    goto <bb 115>;

<bb 113>:
  D.46350_265 = pmap_9->negotiated;
  if (D.46350_265 != 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  engine_21->cur_payload_map = pmap_9;
  D.46308_266 = engine_21->cur_payload_map;
  D.46308_266->current = 1;
  D.46353_267 = pmap_9->iananame;
  D.46354_268 = pmap_9->pt;
  D.46355_269 = (int) D.46354_268;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1937, session_13(D), 4, "Changing current codec to %s (payload type %d).\n", D.46353_267, D.46355_269);
  engine_21->reset_codec = 1;
  goto <bb 117>;

<bb 115>:
  pmap_270 = pmap_9->next;
  # DEBUG pmap => pmap_270

<bb 116>:
  # pmap_9 = PHI <pmap_262(111), pmap_270(115)>
  # DEBUG pmap => pmap_9
  if (pmap_9 != 0B)
    goto <bb 112>;
  else
    goto <bb 117>;

<bb 117>:
  D.46346_271 = smh_14->sdp_mutex;
  switch_mutex_unlock (D.46346_271);
  D.46179_272 = engine_21->reset_codec;
  if (D.46179_272 == 0)
    goto <bb 118>;
  else
    goto <bb 119> (skip);

<bb 118>:
  D.46330_273 = engine_21->read_frame.payload;
  D.46344_274 = (int) D.46330_273;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1949, session_13(D), 4, "Could not change to payload type %d, ignoring...\n", D.46344_274);

skip:
  bytes_275 = engine_21->read_impl.encoded_bytes_per_packet;
  # DEBUG bytes => bytes_275
  if (bytes_275 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

<bb 120>:
  D.46263_276 = engine_21->read_frame.datalen;
  D.46360_277 = D.46263_276 / bytes_275;
  frames_278 = (int) D.46360_277;
  # DEBUG frames => frames_278

<bb 121>:
  # frames_8 = PHI <frames_183(119), frames_278(120)>
  # DEBUG frames => frames_8
  D.46204_279 = engine_21->read_impl.samples_per_packet;
  frames.134_280 = (uint32_t) frames_8;
  D.46362_281 = D.46204_279 * frames.134_280;
  engine_21->read_frame.samples = D.46362_281;
  D.46263_282 = engine_21->read_frame.datalen;
  if (D.46263_282 == 0)
    goto <bb 122>;
  else
    goto <bb 125>;

<bb 122>:
  // predicted unlikely by continue predictor.

<bb 123>:
  # do_cng_3 = PHI <do_cng_12(24), do_cng_2(66), do_cng_2(122), do_cng_12(23)>
  # DEBUG do_cng => do_cng_3
  D.46129_40 = smh_14->media_flags[0];
  if (D.46129_40 != 0)
    goto <bb 124>;
  else
    goto <bb 125>;

<bb 124>:
  D.46263_41 = engine_21->read_frame.datalen;
  if (D.46263_41 == 0)
    goto <bb 29>;
  else
    goto <bb 125>;

<bb 125>:
  D.46263_284 = engine_21->read_frame.datalen;
  if (D.46263_284 == 0)
    goto <bb 126>;
  else
    goto <bb 127>;

<bb 126>:
  *frame_52(D) = 0B;

<bb 127>:
  D.46162_285 = &engine_21->read_frame;
  *frame_52(D) = D.46162_285;
  status_286 = 0;
  # DEBUG status => status_286

  # status_1 = PHI <status_64(32), status_45(33), status_72(39), status_106(53), status_176(63), status_283(76), status_286(127), status_45(30)>
end:
  # DEBUG status => status_1
  D.46151_287 = engine_21->read_mutex[type_19(D)];
  if (D.46151_287 != 0B)
    goto <bb 129>;
  else
    goto <bb 130>;

<bb 129>:
  D.46151_288 = engine_21->read_mutex[type_19(D)];
  switch_mutex_unlock (D.46151_288);

<bb 130>:
  status_289 = status_1;

<bb 131>:
  # status_10 = PHI <status_15(5), status_17(7), status_291(16), status_290(22), status_39(28), status_289(130)>
  return status_10;

}



;; Function switch_core_media_add_ice_acl (switch_core_media_add_ice_acl)

Try : D.45893_1(P1) & D.45893_4(P4) : Same root, coalesced --> P1.
Try : D.45893_1(P1) & D.45893_14(P14) : Same root, coalesced --> P1.
Try : D.45893_1(P1) & D.45893_15(P15) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.45893_1 - 1 4 14 15 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (D.45894_5 - 5 )
Partition 6 (type_6(D) - 6 )
Partition 7 (D.45895_7 - 7 )
Partition 8 (engine_8 - 8 )
Partition 9 (D.45896_9 - 9 )
Partition 10 (D.45896_10 - 10 )
Partition 11 (acl_name_11(D) - 11 )
Partition 12 (D.45900_12 - 12 )
Partition 13 (D.45899_13 - 13 )
Partition 16 (.MEM_16(D) - 16 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (.MEM_19 - 19 )

switch_core_media_add_ice_acl (struct switch_core_session_t * session, switch_media_type_t type, const char * acl_name)
{
  static const char __func__[30] = "switch_core_media_add_ice_acl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_add_ice_acl";
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.45900;
  int D.45899;
  int D.45896;
  unsigned int D.45895;
  struct switch_rtp_engine_t[2] * D.45894;
  switch_status_t D.45893;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2379, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.45893_4 = 1;
  goto <bb 9>;

<bb 6>:
  D.45894_5 = &smh_3->engines;
  D.45895_7 = type_6(D) * 11416;
  engine_8 = D.45894_5 + D.45895_7;
  # DEBUG engine => engine_8
  D.45896_9 = engine_8->cand_acl_count;
  if (D.45896_9 <= 24)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.45896_10 = engine_8->cand_acl_count;
  D.45900_12 = switch_core_perform_session_strdup (session_2(D), acl_name_11(D), "src/switch_core_media.c", &__func__, 2388);
  engine_8->cand_acl[D.45896_10] = D.45900_12;
  D.45899_13 = D.45896_10 + 1;
  engine_8->cand_acl_count = D.45899_13;
  D.45893_14 = 0;
  goto <bb 9>;

<bb 8>:
  D.45893_15 = 1;

<bb 9>:
  # D.45893_1 = PHI <D.45893_4(5), D.45893_14(7), D.45893_15(8)>
  return D.45893_1;

}



;; Function switch_core_media_check_video_codecs (switch_core_media_check_video_codecs)

Try : i_1(P1) & i_8(P8) : Same root, coalesced --> P1.
Try : i_1(P1) & i_19(P19) : Same root, coalesced --> P1.

Partition map 

Partition 1 (i_1 - 1 8 19 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 4 (D.45866_4 - 4 )
Partition 5 (D.45867_5 - 5 )
Partition 6 (D.45870_6 - 6 )
Partition 7 (D.45871_7 - 7 )
Partition 9 (D.45866_9 - 9 )
Partition 10 (D.45867_10 - 10 )
Partition 11 (D.45874_11 - 11 )
Partition 12 (D.45875_12 - 12 )
Partition 13 (D.45870_13 - 13 )
Partition 14 (D.45878_14 - 14 )
Partition 15 (D.45870_15 - 15 )
Partition 16 (D.45881_16 - 16 )
Partition 17 (D.45884_17 - 17 )
Partition 18 (D.45885_18 - 18 )
Partition 20 (D.45884_20 - 20 )
Partition 21 (D.45870_21 - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23 - 23 )
Partition 24 (.MEM_24 - 24 )
Partition 25 (.MEM_25(D) - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )

switch_core_media_check_video_codecs (struct switch_core_session_t * session)
{
  int i;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_check_video_codecs";
  struct switch_media_handle_t * smh;
  int D.45885;
  int D.45884;
  uint32_t D.45881;
  switch_call_direction_t D.45878;
  const switch_codec_type_t D.45875;
  const struct switch_codec_implementation_t * D.45874;
  uint32_t D.45871;
  struct switch_channel_t * D.45870;
  int D.45867;
  struct switch_core_media_params_t * D.45866;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2400, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 17>;
  else
    goto <bb 5>;

<bb 5>:
  D.45866_4 = smh_3->mparams;
  D.45867_5 = D.45866_4->num_codecs;
  if (D.45867_5 != 0)
    goto <bb 6>;
  else
    goto <bb 17>;

<bb 6>:
  D.45870_6 = session_2(D)->channel;
  D.45871_7 = switch_channel_test_flag (D.45870_6, 98);
  if (D.45871_7 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;

<bb 7>:
  smh_3->video_count = 0;
  i_8 = 0;
  # DEBUG i => i_8
  goto <bb 14>;

<bb 8>:
  D.45874_11 = smh_3->codecs[i_1];
  D.45875_12 = D.45874_11->codec_type;
  if (D.45875_12 == 1)
    goto <bb 9>;
  else
    goto <bb 13>;

<bb 9>:
  D.45870_13 = session_2(D)->channel;
  D.45878_14 = switch_channel_direction (D.45870_13);
  if (D.45878_14 == 0)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.45870_15 = session_2(D)->channel;
  D.45881_16 = switch_channel_test_flag (D.45870_15, 114);
  if (D.45881_16 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  // predicted unlikely by continue predictor.
  goto <bb 13>;

<bb 12>:
  D.45884_17 = smh_3->video_count;
  D.45885_18 = D.45884_17 + 1;
  smh_3->video_count = D.45885_18;

<bb 13>:
  i_19 = i_1 + 1;
  # DEBUG i => i_19

<bb 14>:
  # i_1 = PHI <i_8(7), i_19(13)>
  # DEBUG i => i_1
  D.45866_9 = smh_3->mparams;
  D.45867_10 = D.45866_9->num_codecs;
  if (D.45867_10 > i_1)
    goto <bb 8>;
  else
    goto <bb 15>;

<bb 15>:
  D.45884_20 = smh_3->video_count;
  if (D.45884_20 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.45870_21 = session_2(D)->channel;
  switch_channel_set_flag_value (D.45870_21, 98, 1);

<bb 17>:
  return;

}



;; Function switch_ice_direction (switch_ice_direction)

Try : D.45860_16(P16) & r_2(P2) --> P16 r
Try : r_1(P1) & r_5(P5) : Same root, coalesced --> P1.
Try : r_1(P1) & r_8(P8) : Same root, coalesced --> P1.
Try : r_2(P16) & r_1(P1) : Same root, coalesced --> P1.
Try : r_2(P1) & r_1(P1) : Already coalesced.
Try : r_2(P1) & r_15(P15) : Same root, coalesced --> P1.

Partition map 

Partition 1 (r_1 - 1 2 5 8 15 16 )
Partition 3 (session_3(D) - 3 )
Partition 4 (D.45848_4 - 4 )
Partition 6 (D.45848_6 - 6 )
Partition 7 (D.45849_7 - 7 )
Partition 9 (D.45848_9 - 9 )
Partition 10 (D.45854_10 - 10 )
Partition 11 (D.45848_11 - 11 )
Partition 12 (D.45856_12 - 12 )
Partition 13 (D.45848_13 - 13 )
Partition 14 (D.45857_14 - 14 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18(D) - 18 )
Partition 19 (.MEM_19 - 19 )
Partition 20 (.MEM_20 - 20 )
Partition 21 (.MEM_21 - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23 - 23 )

Scope blocks after cleanups:

{ Scope block #0 
  switch_call_direction_t r;

}
switch_ice_direction (struct switch_core_session_t * session)
{
  switch_call_direction_t r;
  uint32_t D.45857;
  uint32_t D.45856;
  uint32_t D.45854;
  uint32_t D.45849;
  struct switch_channel_t * D.45848;

<bb 2>:
  D.45848_4 = session_3(D)->channel;
  r_5 = switch_channel_direction (D.45848_4);
  # DEBUG r => r_5
  D.45848_6 = session_3(D)->channel;
  D.45849_7 = switch_channel_test_flag (D.45848_6, 112);
  if (D.45849_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  r_8 = r_5 == 0;
  # DEBUG r => r_8

<bb 4>:
  # r_1 = PHI <r_5(2), r_8(3)>
  # DEBUG r => r_1
  D.45848_9 = session_3(D)->channel;
  D.45854_10 = switch_channel_test_flag (D.45848_9, 103);
  if (D.45854_10 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.45848_11 = session_3(D)->channel;
  D.45856_12 = switch_channel_test_flag (D.45848_11, 84);
  if (D.45856_12 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.45848_13 = session_3(D)->channel;
  D.45857_14 = switch_channel_test_flag (D.45848_13, 106);
  if (D.45857_14 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  r_15 = 1;
  # DEBUG r => r_15

<bb 8>:
  # r_2 = PHI <r_1(5), r_1(6), r_15(7)>
  # DEBUG r => r_2
  r_16 = r_2;
  return r_16;

}



;; Function check_dtls_reinvite (check_dtls_reinvite)

Try : D.47800_42(P42) & D.47802_41(P41) --> P42 D.47800
Try : D.43910_9(P9) & D.47800_42(P42) --> P42 D.47800
Try : dtype_15(P15) & iftmp.74_2(P2) --> P15 dtype
Try : iftmp.74_2(P15) & iftmp.74_13(P13) --> P15 dtype
Try : iftmp.74_2(P15) & iftmp.74_14(P14) --> P15 dtype
Try : iftmp.75_3(P3) & iftmp.75_17(P17) : Same root, coalesced --> P3.
Try : iftmp.75_3(P3) & iftmp.75_18(P18) : Same root, coalesced --> P3.
Try : xtype_1(P1) & xtype_19(P19) : Same root, coalesced --> P1.
Try : xtype_1(P1) & xtype_21(P21) : Same root, coalesced --> P1.

Partition map 

Partition 1 (xtype_1 - 1 19 21 )
Partition 3 (iftmp.75_3 - 3 17 18 )
Partition 4 (session_4(D) - 4 )
Partition 5 (D.43905_5 - 5 )
Partition 6 (D.43906_6 - 6 )
Partition 7 (engine_7(D) - 7 )
Partition 8 (D.43909_8 - 8 )
Partition 10 (D.43913_10 - 10 )
Partition 11 (D.43916_11 - 11 )
Partition 12 (D.43920_12 - 12 )
Partition 15 (dtype_15 - 2 13 14 15 )
Partition 16 (D.43925_16 - 16 )
Partition 20 (D.43929_20 - 20 )
Partition 22 (D.43932_22 - 22 )
Partition 23 (D.43933_23 - 23 )
Partition 24 (D.43934_24 - 24 )
Partition 25 (D.43935_25 - 25 )
Partition 26 (D.43929_26 - 26 )
Partition 27 (xtype_27 - 27 )
Partition 28 (D.43932_28 - 28 )
Partition 29 (D.43933_29 - 29 )
Partition 30 (D.43934_30 - 30 )
Partition 31 (D.43935_31 - 31 )
Partition 32 (.MEM_32(D) - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (D.47801_40 - 40 )
Partition 42 (D.47800_42 - 9 41 42 )

Coalesced iftmp.74_2 to dtype_15
Coalesced D.43910_9 to D.47800_42
Coalesced iftmp.74_13 to dtype_15
Coalesced iftmp.74_14 to dtype_15
Coalesced D.47802_41 to D.47800_42
Scope blocks after cleanups:

{ Scope block #0 
  static const char __func__[20] = "check_dtls_reinvite";

  { Scope block #170 src/switch_core_media.c:4699 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #171 Originating from :#0 

    }

  }

  { Scope block #172 
    dtls_type_t xtype;
    dtls_type_t dtype;

  }

}
check_dtls_reinvite (struct switch_core_session_t * session, struct switch_rtp_engine_t * engine)
{
  const char D.47801;
  int D.47800;
  dtls_type_t dtype;
  dtls_type_t xtype;
  static const char __func__[20] = "check_dtls_reinvite";
  unsigned int D.43935;
  struct dtls_fingerprint_t * D.43934;
  struct dtls_fingerprint_t * D.43933;
  struct switch_rtp_t * D.43932;
  int8_t D.43929;
  switch_media_type_t D.43925;
  char * iftmp.75;
  switch_call_direction_t D.43920;
  int D.43916;
  int D.43913;
  char[192] * D.43909;
  uint32_t D.43906;
  struct switch_channel_t * D.43905;

<bb 2>:
  D.43905_5 = session_4(D)->channel;
  D.43906_6 = switch_channel_test_flag (D.43905_5, 103);
  if (D.43906_6 != 0)
    goto <bb 3>;
  else
    goto <bb 19>;

<bb 3>:
  D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
  # DEBUG s => D.43909_8
  if (D.43909_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;

<bb 4>:
  D.47801_40 = MEM[(const char *)D.43909_8];
  if (D.47801_40 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:

<bb 6>:
  # D.47800_41 = PHI <1(3), 1(4), 0(5)>
  D.47800_42 = D.47800_41;
  D.47800_9 = D.47800_42;
  if (D.47800_9 == 0)
    goto <bb 7>;
  else
    goto <bb 19>;

<bb 7>:
  D.43913_10 = switch_rtp_has_dtls ();
  if (D.43913_10 != 0)
    goto <bb 8>;
  else
    goto <bb 19>;

<bb 8>:
  D.43916_11 = dtls_ok (session_4(D));
  if (D.43916_11 != 0)
    goto <bb 9>;
  else
    goto <bb 19>;

<bb 9>:
  D.43920_12 = switch_ice_direction (session_4(D));
  if (D.43920_12 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  dtype_13 = 1;
  goto <bb 12>;

<bb 11>:
  dtype_14 = 2;

<bb 12>:
  # dtype_2 = PHI <dtype_13(10), dtype_14(11)>
  dtype_15 = dtype_2;
  # DEBUG dtype => dtype_15
  D.43925_16 = engine_7(D)->type;
  if (D.43925_16 == 1)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  iftmp.75_17 = "video";
  goto <bb 15>;

<bb 14>:
  iftmp.75_18 = "audio";

<bb 15>:
  # iftmp.75_3 = PHI <iftmp.75_17(13), iftmp.75_18(14)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);
  xtype_19 = 4;
  # DEBUG xtype => xtype_19
  D.43929_20 = engine_7(D)->rtcp_mux;
  if (D.43929_20 > 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  xtype_21 = xtype_19 | 8;
  # DEBUG xtype => xtype_21

<bb 17>:
  # xtype_1 = PHI <xtype_19(15), xtype_21(16)>
  # DEBUG xtype => xtype_1
  D.43932_22 = engine_7(D)->rtp_session;
  D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_25 = dtype_15 | xtype_1;
  switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);
  D.43929_26 = engine_7(D)->rtcp_mux;
  if (D.43929_26 <= 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  xtype_27 = 8;
  # DEBUG xtype => xtype_27
  D.43932_28 = engine_7(D)->rtp_session;
  D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_31 = dtype_15 | xtype_27;
  switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);

<bb 19>:
  return;

}



;; Function check_ice (check_ice)

Try : D.47828_657(P657) & D.47830_641(P641) --> P657 D.47828
Try : D.45476_54(P54) & D.47828_657(P657) --> P657 D.47828
Try : D.47832_658(P658) & D.47834_643(P643) --> P658 D.47832
Try : D.45503_76(P76) & D.47832_658(P658) --> P658 D.47832
Try : D.47836_660(P660) & D.47837_644(P644) --> P660 D.47836
Try : D.45517_91(P91) & D.47836_660(P660) --> P660 D.47836
Try : D.47839_662(P662) & D.47840_645(P645) --> P662 D.47839
Try : D.45546_119(P119) & D.47839_662(P662) --> P662 D.47839
Try : D.47842_664(P664) & D.47843_646(P646) --> P664 D.47842
Try : D.45571_162(P162) & D.47842_664(P664) --> P664 D.47842
Try : D.47845_666(P666) & D.47846_647(P647) --> P666 D.47845
Try : D.45574_169(P169) & D.47845_666(P666) --> P666 D.47845
Try : D.47848_668(P668) & D.47849_648(P648) --> P668 D.47848
Try : D.45577_177(P177) & D.47848_668(P668) --> P668 D.47848
Try : D.47851_670(P670) & D.47852_649(P649) --> P670 D.47851
Try : D.45595_201(P201) & D.47851_670(P670) --> P670 D.47851
Try : D.47854_671(P671) & D.47856_651(P651) --> P671 D.47854
Try : D.45722_328(P328) & D.47854_671(P671) --> P671 D.47854
Try : D.47858_672(P672) & D.47860_653(P653) --> P672 D.47858
Try : D.45725_330(P330) & D.47858_672(P672) --> P672 D.47858
Try : val_430(P430) & iftmp.119_27(P27) --> P430 val
Try : D.47862_674(P674) & D.47863_654(P654) --> P674 D.47862
Try : D.45800_440(P440) & D.47862_674(P674) --> P674 D.47862
Try : D.47865_676(P676) & D.47866_655(P655) --> P676 D.47865
Try : interval_450(P450) & D.47865_676(P676) --> P676 interval
Try : i_2(P2) & i_121(P121) : Same root, coalesced --> P2.
Try : i_2(P2) & i_124(P124) : Same root, coalesced --> P2.
Try : iftmp.105_13(P13) & iftmp.105_141(P141) : Same root, coalesced --> P13.
Try : iftmp.105_13(P13) & iftmp.105_142(P142) : Same root, coalesced --> P13.
Try : iftmp.106_14(P14) & iftmp.106_149(P149) : Same root, coalesced --> P14.
Try : iftmp.106_14(P14) & iftmp.106_150(P150) : Same root, coalesced --> P14.
Try : j_10(P10) & j_179(P179) : Same root, coalesced --> P10.
Try : j_10(P10) & j_210(P210) : Same root, coalesced --> P10.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P8) : Same root, coalesced --> P7.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_101(P101) : Same root, coalesced --> P7.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : got_rtcp_mux_7(P7) & got_rtcp_mux_8(P7) : Already coalesced.
Try : attr_1(P1) & attr_49(P49) : Same root, coalesced --> P1.
Try : attr_1(P1) & attr_216(P216) : Same root, coalesced --> P1.
Try : attr_1(P1) & attr_47(P47) : Same root, coalesced --> P1.
Try : got_rtcp_mux_8(P7) & got_rtcp_mux_40(P40) : Same root, coalesced --> P7.
Try : got_rtcp_mux_8(P7) & got_rtcp_mux_7(P7) : Already coalesced.
Try : got_rtcp_mux_8(P7) & got_rtcp_mux_40(P7) : Already coalesced.
Try : iftmp.107_15(P15) & iftmp.107_232(P232) : Same root, coalesced --> P15.
Try : iftmp.107_15(P15) & iftmp.107_233(P233) : Same root, coalesced --> P15.
Try : iftmp.108_16(P16) & iftmp.108_243(P243) : Same root, coalesced --> P16.
Try : iftmp.108_16(P16) & iftmp.108_244(P244) : Same root, coalesced --> P16.
Try : i_3(P3) & i_219(P219) : Same root, coalesced --> P3.
Try : i_3(P3) & i_245(P245) : Same root, coalesced --> P3.
Try : iftmp.109_17(P17) & iftmp.109_259(P259) : Same root, coalesced --> P17.
Try : iftmp.109_17(P17) & iftmp.109_260(P260) : Same root, coalesced --> P17.
Try : iftmp.110_18(P18) & iftmp.110_268(P268) : Same root, coalesced --> P18.
Try : iftmp.110_18(P18) & iftmp.110_269(P269) : Same root, coalesced --> P18.
Try : i_4(P4) & i_248(P248) : Same root, coalesced --> P4.
Try : i_4(P4) & i_270(P270) : Same root, coalesced --> P4.
Try : iftmp.111_19(P19) & iftmp.111_294(P294) : Same root, coalesced --> P19.
Try : iftmp.111_19(P19) & iftmp.111_295(P295) : Same root, coalesced --> P19.
Try : iftmp.112_20(P20) & iftmp.112_313(P313) : Same root, coalesced --> P20.
Try : iftmp.112_20(P20) & iftmp.112_314(P314) : Same root, coalesced --> P20.
Try : iftmp.113_21(P21) & iftmp.113_321(P321) : Same root, coalesced --> P21.
Try : iftmp.113_21(P21) & iftmp.113_322(P322) : Same root, coalesced --> P21.
Try : i_5(P5) & i_303(P303) : Same root, coalesced --> P5.
Try : i_5(P5) & i_323(P323) : Same root, coalesced --> P5.
Try : i_6(P6) & i_324(P324) : Same root, coalesced --> P6.
Try : i_6(P6) & i_332(P332) : Same root, coalesced --> P6.
Try : iftmp.114_22(P22) & iftmp.114_343(P343) : Same root, coalesced --> P22.
Try : iftmp.114_22(P22) & iftmp.114_344(P344) : Same root, coalesced --> P22.
Try : iftmp.115_23(P23) & iftmp.115_382(P382) : Same root, coalesced --> P23.
Try : iftmp.115_23(P23) & iftmp.115_383(P383) : Same root, coalesced --> P23.
Try : iftmp.116_24(P24) & iftmp.116_408(P408) : Same root, coalesced --> P24.
Try : iftmp.116_24(P24) & iftmp.116_409(P409) : Same root, coalesced --> P24.
Try : iftmp.117_25(P25) & iftmp.117_417(P417) : Same root, coalesced --> P25.
Try : iftmp.117_25(P25) & iftmp.117_418(P418) : Same root, coalesced --> P25.
Try : iftmp.118_26(P26) & iftmp.118_423(P423) : Same root, coalesced --> P26.
Try : iftmp.118_26(P26) & iftmp.118_424(P424) : Same root, coalesced --> P26.
Try : iftmp.119_27(P430) & iftmp.119_427(P427) --> P430 val
Try : iftmp.119_27(P430) & iftmp.119_429(P429) --> P430 val
Try : val_9(P9) & val_425(P425) : Same root, coalesced --> P9.
Try : val_9(P9) & val_430(P430) : Same root, coalesced --> P430.
Try : iftmp.120_28(P28) & iftmp.120_433(P433) : Same root, coalesced --> P28.
Try : iftmp.120_28(P28) & iftmp.120_434(P434) : Same root, coalesced --> P28.
Try : remote_rtcp_port_11(P11) & remote_rtcp_port_436(P436) : Same root, coalesced --> P11.
Try : remote_rtcp_port_11(P11) & remote_rtcp_port_441(P441) : Same root, coalesced --> P11.
Try : iftmp.121_29(P29) & iftmp.121_444(P444) : Same root, coalesced --> P29.
Try : iftmp.121_29(P29) & iftmp.121_445(P445) : Same root, coalesced --> P29.
Try : interval_12(P12) & interval_450(P676) : Same root, coalesced --> P676.
Try : interval_12(P676) & interval_454(P454) : Same root, coalesced --> P676.
Try : iftmp.123_30(P30) & iftmp.123_456(P456) : Same root, coalesced --> P30.
Try : iftmp.123_30(P30) & iftmp.123_457(P457) : Same root, coalesced --> P30.
Try : iftmp.124_31(P31) & iftmp.124_475(P475) : Same root, coalesced --> P31.
Try : iftmp.124_31(P31) & iftmp.124_476(P476) : Same root, coalesced --> P31.
Try : iftmp.125_32(P32) & iftmp.125_478(P478) : Same root, coalesced --> P32.
Try : iftmp.125_32(P32) & iftmp.125_479(P479) : Same root, coalesced --> P32.
Try : iftmp.126_33(P33) & iftmp.126_487(P487) : Same root, coalesced --> P33.
Try : iftmp.126_33(P33) & iftmp.126_488(P488) : Same root, coalesced --> P33.

Partition map 

Partition 1 (attr_1 - 1 47 49 216 )
Partition 2 (i_2 - 2 121 124 )
Partition 3 (i_3 - 3 219 245 )
Partition 4 (i_4 - 4 248 270 )
Partition 5 (i_5 - 5 303 323 )
Partition 6 (i_6 - 6 324 332 )
Partition 7 (got_rtcp_mux_7 - 7 8 40 101 )
Partition 10 (j_10 - 10 179 210 )
Partition 11 (remote_rtcp_port_11 - 11 436 441 )
Partition 13 (iftmp.105_13 - 13 141 142 )
Partition 14 (iftmp.106_14 - 14 149 150 )
Partition 15 (iftmp.107_15 - 15 232 233 )
Partition 16 (iftmp.108_16 - 16 243 244 )
Partition 17 (iftmp.109_17 - 17 259 260 )
Partition 18 (iftmp.110_18 - 18 268 269 )
Partition 19 (iftmp.111_19 - 19 294 295 )
Partition 20 (iftmp.112_20 - 20 313 314 )
Partition 21 (iftmp.113_21 - 21 321 322 )
Partition 22 (iftmp.114_22 - 22 343 344 )
Partition 23 (iftmp.115_23 - 23 382 383 )
Partition 24 (iftmp.116_24 - 24 408 409 )
Partition 25 (iftmp.117_25 - 25 417 418 )
Partition 26 (iftmp.118_26 - 26 423 424 )
Partition 28 (iftmp.120_28 - 28 433 434 )
Partition 29 (iftmp.121_29 - 29 444 445 )
Partition 30 (iftmp.123_30 - 30 456 457 )
Partition 31 (iftmp.124_31 - 31 475 476 )
Partition 32 (iftmp.125_32 - 32 478 479 )
Partition 33 (iftmp.126_33 - 33 487 488 )
Partition 34 (smh_34(D) - 34 )
Partition 35 (D.45459_35 - 35 )
Partition 36 (type_36(D) - 36 )
Partition 37 (D.45460_37 - 37 )
Partition 38 (engine_38 - 38 )
Partition 39 (i_39 - 39 )
Partition 41 (D.45461_41 - 41 )
Partition 42 (D.45464_42 - 42 )
Partition 43 (D.45467_43 - 43 )
Partition 44 (D.45468_44 - 44 )
Partition 45 (D.45469_45 - 45 )
Partition 46 (m_46(D) - 46 )
Partition 48 (sdp_48(D) - 48 )
Partition 50 (argc_50 - 50 )
Partition 51 (j_51 - 51 )
Partition 52 (cid_52 - 52 )
Partition 53 (D.45475_53 - 53 )
Partition 55 (D.45475_55 - 55 )
Partition 56 (D.45479_56 - 56 )
Partition 57 (D.45467_57 - 57 )
Partition 58 (D.45482_58 - 58 )
Partition 59 (D.45483_59 - 59 )
Partition 60 (D.45475_60 - 60 )
Partition 61 (D.45485_61 - 61 )
Partition 62 (D.45467_62 - 62 )
Partition 63 (D.45482_63 - 63 )
Partition 64 (D.45488_64 - 64 )
Partition 65 (D.45475_65 - 65 )
Partition 66 (D.45490_66 - 66 )
Partition 67 (D.45467_67 - 67 )
Partition 68 (D.45482_68 - 68 )
Partition 69 (D.45493_69 - 69 )
Partition 70 (D.45497_70 - 70 )
Partition 71 (D.45467_71 - 71 )
Partition 72 (D.45499_72 - 72 )
Partition 73 (D.45475_73 - 73 )
Partition 74 (D.45501_74 - 74 )
Partition 75 (D.45482_75 - 75 )
Partition 77 (D.45467_77 - 77 )
Partition 78 (D.45482_78 - 78 )
Partition 79 (D.45505_79 - 79 )
Partition 80 (D.45506_80 - 80 )
Partition 81 (p_81 - 81 )
Partition 82 (p_82 - 82 )
Partition 83 (D.45509_83 - 83 )
Partition 84 (D.45467_84 - 84 )
Partition 85 (D.45468_85 - 85 )
Partition 86 (D.45512_86 - 86 )
Partition 87 (D.45475_87 - 87 )
Partition 88 (D.45514_88 - 88 )
Partition 89 (D.45482_89 - 89 )
Partition 90 (D.45482_90 - 90 )
Partition 92 (D.45518_92 - 92 )
Partition 93 (D.45519_93 - 93 )
Partition 94 (D.45512_94 - 94 )
Partition 95 (D.45519_95 - 95 )
Partition 96 (D.45512_96 - 96 )
Partition 97 (D.45475_97 - 97 )
Partition 98 (D.45524_98 - 98 )
Partition 99 (D.45527_99 - 99 )
Partition 100 (D.45528_100 - 100 )
Partition 102 (D.45475_102 - 102 )
Partition 103 (D.45530_103 - 103 )
Partition 104 (D.45467_104 - 104 )
Partition 105 (D.45468_105 - 105 )
Partition 106 (D.45533_106 - 106 )
Partition 107 (D.45533_107 - 107 )
Partition 108 (D.45536_108 - 108 )
Partition 109 (D.45467_109 - 109 )
Partition 110 (D.45482_110 - 110 )
Partition 111 (D.45537_111 - 111 )
Partition 112 (D.45467_112 - 112 )
Partition 113 (D.45482_113 - 113 )
Partition 114 (data_114 - 114 )
Partition 115 (D.45540_115 - 115 )
Partition 116 (argc_116 - 116 )
Partition 117 (D.45544_117 - 117 )
Partition 118 (D.45545_118 - 118 )
Partition 120 (cid_120 - 120 )
Partition 122 (D.45467_122 - 122 )
Partition 123 (D.45547_123 - 123 )
Partition 125 (D.45467_125 - 125 )
Partition 126 (D.45548_126 - 126 )
Partition 127 (D.45549_127 - 127 )
Partition 128 (D.45550_128 - 128 )
Partition 129 (D.45551_129 - 129 )
Partition 130 (D.45552_130 - 130 )
Partition 131 (D.45544_131 - 131 )
Partition 132 (D.45553_132 - 132 )
Partition 133 (i_133 - 133 )
Partition 134 (D.45533_134 - 134 )
Partition 135 (D.45556_135 - 135 )
Partition 136 (D.45551_136 - 136 )
Partition 137 (D.45558_137 - 137 )
Partition 138 (D.45559_138 - 138 )
Partition 139 (D.45544_139 - 139 )
Partition 140 (D.45467_140 - 140 )
Partition 143 (D.45548_143 - 143 )
Partition 144 (D.45549_144 - 144 )
Partition 145 (D.45550_145 - 145 )
Partition 146 (D.45551_146 - 146 )
Partition 147 (D.45552_147 - 147 )
Partition 148 (D.45467_148 - 148 )
Partition 151 (D.45548_151 - 151 )
Partition 152 (D.45549_152 - 152 )
Partition 153 (D.45550_153 - 153 )
Partition 154 (D.45551_154 - 154 )
Partition 155 (D.45552_155 - 155 )
Partition 156 (D.45544_156 - 156 )
Partition 157 (D.45467_157 - 157 )
Partition 158 (D.45569_158 - 158 )
Partition 159 (D.45570_159 - 159 )
Partition 160 (D.45544_160 - 160 )
Partition 161 (D.45545_161 - 161 )
Partition 163 (D.45544_163 - 163 )
Partition 164 (D.45467_164 - 164 )
Partition 165 (D.45549_165 - 165 )
Partition 166 (D.45572_166 - 166 )
Partition 167 (D.45544_167 - 167 )
Partition 168 (D.45573_168 - 168 )
Partition 170 (D.45575_170 - 170 )
Partition 171 (D.45544_171 - 171 )
Partition 172 (D.45467_172 - 172 )
Partition 173 (D.45551_173 - 173 )
Partition 174 (D.45576_174 - 174 )
Partition 175 (D.45544_175 - 175 )
Partition 176 (D.45552_176 - 176 )
Partition 178 (D.45578_178 - 178 )
Partition 180 (D.45583_180 - 180 )
Partition 181 (D.45584_181 - 181 )
Partition 182 (D.45579_182 - 182 )
Partition 183 (D.45580_183 - 183 )
Partition 184 (D.45544_184 - 184 )
Partition 185 (D.45467_185 - 185 )
Partition 186 (D.45583_186 - 186 )
Partition 187 (D.45584_187 - 187 )
Partition 188 (D.45585_188 - 188 )
Partition 189 (D.45579_189 - 189 )
Partition 190 (D.45587_190 - 190 )
Partition 191 (D.45544_191 - 191 )
Partition 192 (D.45467_192 - 192 )
Partition 193 (D.45583_193 - 193 )
Partition 194 (D.45584_194 - 194 )
Partition 195 (D.45590_195 - 195 )
Partition 196 (D.45579_196 - 196 )
Partition 197 (D.45592_197 - 197 )
Partition 198 (D.45544_198 - 198 )
Partition 199 (D.45583_199 - 199 )
Partition 200 (D.45584_200 - 200 )
Partition 202 (D.45596_202 - 202 )
Partition 203 (D.45579_203 - 203 )
Partition 204 (D.45598_204 - 204 )
Partition 205 (D.45544_205 - 205 )
Partition 206 (D.45467_206 - 206 )
Partition 207 (D.45583_207 - 207 )
Partition 208 (D.45584_208 - 208 )
Partition 209 (D.45601_209 - 209 )
Partition 211 (D.45556_211 - 211 )
Partition 212 (D.45556_212 - 212 )
Partition 213 (D.45605_213 - 213 )
Partition 214 (D.45606_214 - 214 )
Partition 215 (D.45467_215 - 215 )
Partition 217 (D.45461_217 - 217 )
Partition 218 (D.45464_218 - 218 )
Partition 220 (D.45544_220 - 220 )
Partition 221 (D.45461_221 - 221 )
Partition 222 (D.45464_222 - 222 )
Partition 223 (D.45461_223 - 223 )
Partition 224 (D.45611_224 - 224 )
Partition 225 (D.45614_225 - 225 )
Partition 226 (D.45617_226 - 226 )
Partition 227 (D.45618_227 - 227 )
Partition 228 (D.45461_228 - 228 )
Partition 229 (D.45621_229 - 229 )
Partition 230 (D.45622_230 - 230 )
Partition 231 (D.45467_231 - 231 )
Partition 234 (D.45464_234 - 234 )
Partition 235 (D.45629_235 - 235 )
Partition 236 (D.45632_236 - 236 )
Partition 237 (D.45635_237 - 237 )
Partition 238 (D.45636_238 - 238 )
Partition 239 (D.45464_239 - 239 )
Partition 240 (D.45639_240 - 240 )
Partition 241 (D.45640_241 - 241 )
Partition 242 (D.45467_242 - 242 )
Partition 246 (D.45461_246 - 246 )
Partition 247 (D.45464_247 - 247 )
Partition 249 (D.45544_249 - 249 )
Partition 250 (D.45461_250 - 250 )
Partition 251 (D.45464_251 - 251 )
Partition 252 (D.45461_252 - 252 )
Partition 253 (D.45611_253 - 253 )
Partition 254 (D.45614_254 - 254 )
Partition 255 (D.45461_255 - 255 )
Partition 256 (D.45621_256 - 256 )
Partition 257 (D.45622_257 - 257 )
Partition 258 (D.45467_258 - 258 )
Partition 261 (D.45464_261 - 261 )
Partition 262 (D.45629_262 - 262 )
Partition 263 (D.45632_263 - 263 )
Partition 264 (D.45464_264 - 264 )
Partition 265 (D.45639_265 - 265 )
Partition 266 (D.45640_266 - 266 )
Partition 267 (D.45467_267 - 267 )
Partition 271 (D.45461_271 - 271 )
Partition 272 (D.45464_272 - 272 )
Partition 273 (D.45673_273 - 273 )
Partition 274 (D.45674_274 - 274 )
Partition 275 (D.45675_275 - 275 )
Partition 276 (D.45461_276 - 276 )
Partition 277 (D.45678_277 - 277 )
Partition 278 (D.45679_278 - 278 )
Partition 279 (D.45464_279 - 279 )
Partition 280 (D.45680_280 - 280 )
Partition 281 (D.45681_281 - 281 )
Partition 282 (D.45682_282 - 282 )
Partition 283 (D.45683_283 - 283 )
Partition 284 (D.45678_284 - 284 )
Partition 285 (D.45684_285 - 285 )
Partition 286 (D.45461_286 - 286 )
Partition 287 (D.45685_287 - 287 )
Partition 288 (D.45686_288 - 288 )
Partition 289 (D.45687_289 - 289 )
Partition 290 (D.45464_290 - 290 )
Partition 291 (D.45639_291 - 291 )
Partition 292 (D.45640_292 - 292 )
Partition 293 (D.45467_293 - 293 )
Partition 296 (D.45464_296 - 296 )
Partition 297 (D.45692_297 - 297 )
Partition 298 (D.45464_298 - 298 )
Partition 299 (D.45693_299 - 299 )
Partition 300 (D.45694_300 - 300 )
Partition 301 (D.45461_301 - 301 )
Partition 302 (D.45464_302 - 302 )
Partition 304 (D.45544_304 - 304 )
Partition 305 (D.45461_305 - 305 )
Partition 306 (D.45464_306 - 306 )
Partition 307 (D.45461_307 - 307 )
Partition 308 (D.45611_308 - 308 )
Partition 309 (D.45461_309 - 309 )
Partition 310 (D.45621_310 - 310 )
Partition 311 (D.45622_311 - 311 )
Partition 312 (D.45467_312 - 312 )
Partition 315 (D.45464_315 - 315 )
Partition 316 (D.45629_316 - 316 )
Partition 317 (D.45464_317 - 317 )
Partition 318 (D.45639_318 - 318 )
Partition 319 (D.45640_319 - 319 )
Partition 320 (D.45467_320 - 320 )
Partition 325 (D.45715_325 - 325 )
Partition 326 (D.45716_326 - 326 )
Partition 327 (D.45721_327 - 327 )
Partition 329 (D.45724_329 - 329 )
Partition 331 (D.45715_331 - 331 )
Partition 333 (D.45461_333 - 333 )
Partition 334 (D.45726_334 - 334 )
Partition 335 (D.45461_335 - 335 )
Partition 336 (D.45729_336 - 336 )
Partition 337 (D.45527_337 - 337 )
Partition 338 (D.45467_338 - 338 )
Partition 339 (D.45461_339 - 339 )
Partition 340 (D.45726_340 - 340 )
Partition 341 (D.45732_341 - 341 )
Partition 342 (D.45467_342 - 342 )
Partition 345 (D.45461_345 - 345 )
Partition 346 (D.45726_346 - 346 )
Partition 347 (D.45461_347 - 347 )
Partition 348 (D.45729_348 - 348 )
Partition 349 (D.45737_349 - 349 )
Partition 350 (D.45461_350 - 350 )
Partition 351 (D.45621_351 - 351 )
Partition 352 (D.45622_352 - 352 )
Partition 353 (D.45461_353 - 353 )
Partition 354 (D.45729_354 - 354 )
Partition 355 (D.45467_355 - 355 )
Partition 356 (D.45461_356 - 356 )
Partition 357 (D.45726_357 - 357 )
Partition 358 (D.45738_358 - 358 )
Partition 359 (D.45527_359 - 359 )
Partition 360 (D.45467_360 - 360 )
Partition 361 (D.45461_361 - 361 )
Partition 362 (D.45726_362 - 362 )
Partition 363 (D.45739_363 - 363 )
Partition 364 (D.45527_364 - 364 )
Partition 365 (D.45461_365 - 365 )
Partition 366 (D.45729_366 - 366 )
Partition 367 (D.45740_367 - 367 )
Partition 368 (D.45527_368 - 368 )
Partition 369 (D.45528_369 - 369 )
Partition 370 (D.45527_370 - 370 )
Partition 371 (D.45528_371 - 371 )
Partition 372 (D.45743_372 - 372 )
Partition 373 (D.45467_373 - 373 )
Partition 374 (D.45468_374 - 374 )
Partition 375 (D.45527_375 - 375 )
Partition 376 (D.45744_376 - 376 )
Partition 377 (D.45467_377 - 377 )
Partition 378 (D.45468_378 - 378 )
Partition 379 (D.45464_379 - 379 )
Partition 380 (D.45693_380 - 380 )
Partition 381 (D.45467_381 - 381 )
Partition 384 (D.45464_384 - 384 )
Partition 385 (D.45692_385 - 385 )
Partition 386 (D.45464_386 - 386 )
Partition 387 (D.45693_387 - 387 )
Partition 388 (D.45694_388 - 388 )
Partition 389 (D.45464_389 - 389 )
Partition 390 (D.45693_390 - 390 )
Partition 391 (D.45467_391 - 391 )
Partition 392 (D.45464_392 - 392 )
Partition 393 (D.45692_393 - 393 )
Partition 394 (D.45751_394 - 394 )
Partition 395 (D.45464_395 - 395 )
Partition 396 (D.45693_396 - 396 )
Partition 397 (D.45752_397 - 397 )
Partition 398 (D.45753_398 - 398 )
Partition 399 (D.45754_399 - 399 )
Partition 400 (D.45467_400 - 400 )
Partition 401 (D.45468_401 - 401 )
Partition 402 (D.45757_402 - 402 )
Partition 403 (D.45519_403 - 403 )
Partition 404 (D.45760_404 - 404 )
Partition 405 (D.45461_405 - 405 )
Partition 406 (D.45621_406 - 406 )
Partition 407 (D.45467_407 - 407 )
Partition 410 (D.45519_410 - 410 )
Partition 411 (D.45721_411 - 411 )
Partition 412 (D.45769_412 - 412 )
Partition 413 (D.45770_413 - 413 )
Partition 414 (D.45724_414 - 414 )
Partition 415 (D.45467_415 - 415 )
Partition 416 (D.45772_416 - 416 )
Partition 419 (D.45776_419 - 419 )
Partition 420 (D.45519_420 - 420 )
Partition 421 (D.45467_421 - 421 )
Partition 422 (D.45468_422 - 422 )
Partition 426 (D.45789_426 - 426 )
Partition 428 (D.45789_428 - 428 )
Partition 430 (val_430 - 9 27 425 427 429 430 )
Partition 431 (D.45467_431 - 431 )
Partition 432 (D.45468_432 - 432 )
Partition 435 (rport_435 - 435 )
Partition 437 (D.45795_437 - 437 )
Partition 438 (D.45796_438 - 438 )
Partition 439 (D.45797_439 - 439 )
Partition 442 (D.45801_442 - 442 )
Partition 443 (D.45467_443 - 443 )
Partition 446 (D.45808_446 - 446 )
Partition 447 (D.45519_447 - 447 )
Partition 448 (D.45809_448 - 448 )
Partition 449 (D.45810_449 - 449 )
Partition 451 (interval.122_451 - 451 )
Partition 452 (D.45813_452 - 452 )
Partition 453 (D.45467_453 - 453 )
Partition 455 (D.45467_455 - 455 )
Partition 458 (D.45808_458 - 458 )
Partition 459 (D.45519_459 - 459 )
Partition 460 (D.45809_460 - 460 )
Partition 461 (D.45810_461 - 461 )
Partition 462 (D.45464_462 - 462 )
Partition 463 (D.45639_463 - 463 )
Partition 464 (D.45809_464 - 464 )
Partition 465 (D.45464_465 - 465 )
Partition 466 (D.45692_466 - 466 )
Partition 467 (D.45461_467 - 467 )
Partition 468 (D.45726_468 - 468 )
Partition 469 (D.38904_469 - 469 )
Partition 470 (D.45464_470 - 470 )
Partition 471 (D.45693_471 - 471 )
Partition 472 (D.45461_472 - 472 )
Partition 473 (D.45729_473 - 473 )
Partition 474 (D.45467_474 - 474 )
Partition 477 (D.45467_477 - 477 )
Partition 480 (D.45519_480 - 480 )
Partition 481 (D.45721_481 - 481 )
Partition 482 (D.45769_482 - 482 )
Partition 483 (D.45770_483 - 483 )
Partition 484 (D.45724_484 - 484 )
Partition 485 (D.45467_485 - 485 )
Partition 486 (D.45836_486 - 486 )
Partition 489 (D.45776_489 - 489 )
Partition 490 (.MEM_490 - 490 )
Partition 491 (.MEM_491 - 491 )
Partition 492 (.MEM_492 - 492 )
Partition 493 (.MEM_493 - 493 )
Partition 494 (.MEM_494 - 494 )
Partition 495 (.MEM_495 - 495 )
Partition 496 (.MEM_496 - 496 )
Partition 497 (.MEM_497 - 497 )
Partition 498 (.MEM_498 - 498 )
Partition 499 (.MEM_499 - 499 )
Partition 500 (.MEM_500 - 500 )
Partition 501 (.MEM_501 - 501 )
Partition 502 (.MEM_502 - 502 )
Partition 503 (.MEM_503 - 503 )
Partition 504 (.MEM_504 - 504 )
Partition 505 (.MEM_505 - 505 )
Partition 506 (.MEM_506 - 506 )
Partition 507 (.MEM_507 - 507 )
Partition 508 (.MEM_508 - 508 )
Partition 509 (.MEM_509 - 509 )
Partition 510 (.MEM_510 - 510 )
Partition 511 (.MEM_511 - 511 )
Partition 512 (.MEM_512 - 512 )
Partition 513 (.MEM_513 - 513 )
Partition 514 (.MEM_514 - 514 )
Partition 515 (.MEM_515 - 515 )
Partition 516 (.MEM_516 - 516 )
Partition 517 (.MEM_517 - 517 )
Partition 518 (.MEM_518 - 518 )
Partition 519 (.MEM_519 - 519 )
Partition 520 (.MEM_520 - 520 )
Partition 521 (.MEM_521 - 521 )
Partition 522 (.MEM_522 - 522 )
Partition 523 (.MEM_523(D) - 523 )
Partition 524 (.MEM_524 - 524 )
Partition 525 (.MEM_525 - 525 )
Partition 526 (.MEM_526 - 526 )
Partition 527 (.MEM_527 - 527 )
Partition 528 (.MEM_528 - 528 )
Partition 529 (.MEM_529 - 529 )
Partition 530 (.MEM_530 - 530 )
Partition 531 (.MEM_531 - 531 )
Partition 532 (.MEM_532 - 532 )
Partition 533 (.MEM_533 - 533 )
Partition 534 (.MEM_534 - 534 )
Partition 535 (.MEM_535 - 535 )
Partition 536 (.MEM_536 - 536 )
Partition 537 (.MEM_537 - 537 )
Partition 538 (.MEM_538 - 538 )
Partition 539 (.MEM_539 - 539 )
Partition 540 (.MEM_540 - 540 )
Partition 541 (.MEM_541 - 541 )
Partition 542 (.MEM_542 - 542 )
Partition 543 (.MEM_543 - 543 )
Partition 544 (.MEM_544 - 544 )
Partition 545 (.MEM_545 - 545 )
Partition 546 (.MEM_546 - 546 )
Partition 547 (.MEM_547 - 547 )
Partition 548 (.MEM_548 - 548 )
Partition 549 (.MEM_549 - 549 )
Partition 550 (.MEM_550 - 550 )
Partition 551 (.MEM_551 - 551 )
Partition 552 (.MEM_552 - 552 )
Partition 553 (.MEM_553 - 553 )
Partition 554 (.MEM_554 - 554 )
Partition 555 (.MEM_555 - 555 )
Partition 556 (.MEM_556 - 556 )
Partition 557 (.MEM_557 - 557 )
Partition 558 (.MEM_558 - 558 )
Partition 559 (.MEM_559 - 559 )
Partition 560 (.MEM_560 - 560 )
Partition 561 (.MEM_561 - 561 )
Partition 562 (.MEM_562 - 562 )
Partition 563 (.MEM_563 - 563 )
Partition 564 (.MEM_564 - 564 )
Partition 565 (.MEM_565 - 565 )
Partition 566 (.MEM_566 - 566 )
Partition 567 (.MEM_567 - 567 )
Partition 568 (.MEM_568 - 568 )
Partition 569 (.MEM_569 - 569 )
Partition 570 (.MEM_570 - 570 )
Partition 571 (.MEM_571 - 571 )
Partition 572 (.MEM_572 - 572 )
Partition 573 (.MEM_573 - 573 )
Partition 574 (.MEM_574 - 574 )
Partition 575 (.MEM_575 - 575 )
Partition 576 (.MEM_576 - 576 )
Partition 577 (.MEM_577 - 577 )
Partition 578 (.MEM_578 - 578 )
Partition 579 (.MEM_579 - 579 )
Partition 580 (.MEM_580 - 580 )
Partition 581 (.MEM_581 - 581 )
Partition 582 (.MEM_582 - 582 )
Partition 583 (.MEM_583 - 583 )
Partition 584 (.MEM_584 - 584 )
Partition 585 (.MEM_585 - 585 )
Partition 586 (.MEM_586 - 586 )
Partition 587 (.MEM_587 - 587 )
Partition 588 (.MEM_588 - 588 )
Partition 589 (.MEM_589 - 589 )
Partition 590 (.MEM_590 - 590 )
Partition 591 (.MEM_591 - 591 )
Partition 592 (.MEM_592 - 592 )
Partition 593 (.MEM_593 - 593 )
Partition 594 (.MEM_594 - 594 )
Partition 595 (.MEM_595 - 595 )
Partition 596 (.MEM_596 - 596 )
Partition 597 (.MEM_597 - 597 )
Partition 598 (.MEM_598 - 598 )
Partition 599 (.MEM_599 - 599 )
Partition 600 (.MEM_600 - 600 )
Partition 601 (.MEM_601 - 601 )
Partition 602 (.MEM_602 - 602 )
Partition 603 (.MEM_603 - 603 )
Partition 604 (.MEM_604 - 604 )
Partition 605 (.MEM_605 - 605 )
Partition 606 (.MEM_606 - 606 )
Partition 607 (.MEM_607 - 607 )
Partition 608 (.MEM_608 - 608 )
Partition 609 (.MEM_609 - 609 )
Partition 610 (.MEM_610 - 610 )
Partition 611 (.MEM_611 - 611 )
Partition 612 (.MEM_612 - 612 )
Partition 613 (.MEM_613 - 613 )
Partition 614 (.MEM_614 - 614 )
Partition 615 (.MEM_615 - 615 )
Partition 616 (.MEM_616 - 616 )
Partition 617 (.MEM_617 - 617 )
Partition 618 (.MEM_618 - 618 )
Partition 619 (.MEM_619 - 619 )
Partition 620 (.MEM_620 - 620 )
Partition 621 (.MEM_621 - 621 )
Partition 622 (.MEM_622 - 622 )
Partition 623 (.MEM_623 - 623 )
Partition 624 (.MEM_624 - 624 )
Partition 625 (.MEM_625 - 625 )
Partition 626 (.MEM_626 - 626 )
Partition 627 (.MEM_627 - 627 )
Partition 628 (.MEM_628 - 628 )
Partition 629 (.MEM_629 - 629 )
Partition 630 (.MEM_630 - 630 )
Partition 631 (.MEM_631 - 631 )
Partition 632 (.MEM_632 - 632 )
Partition 633 (.MEM_633 - 633 )
Partition 634 (.MEM_634 - 634 )
Partition 635 (.MEM_635 - 635 )
Partition 636 (.MEM_636 - 636 )
Partition 637 (.MEM_637 - 637 )
Partition 638 (.MEM_638 - 638 )
Partition 639 (.MEM_639 - 639 )
Partition 640 (D.47829_640 - 640 )
Partition 642 (D.47833_642 - 642 )
Partition 650 (D.47855_650 - 650 )
Partition 652 (D.47859_652 - 652 )
Partition 656 (.MEM_656 - 656 )
Partition 657 (D.47828_657 - 54 641 657 )
Partition 658 (D.47832_658 - 76 643 658 )
Partition 659 (.MEM_659 - 659 )
Partition 660 (D.47836_660 - 91 644 660 )
Partition 661 (.MEM_661 - 661 )
Partition 662 (D.47839_662 - 119 645 662 )
Partition 663 (.MEM_663 - 663 )
Partition 664 (D.47842_664 - 162 646 664 )
Partition 665 (.MEM_665 - 665 )
Partition 666 (D.47845_666 - 169 647 666 )
Partition 667 (.MEM_667 - 667 )
Partition 668 (D.47848_668 - 177 648 668 )
Partition 669 (.MEM_669 - 669 )
Partition 670 (D.47851_670 - 201 649 670 )
Partition 671 (D.47854_671 - 328 651 671 )
Partition 672 (D.47858_672 - 330 653 672 )
Partition 673 (.MEM_673 - 673 )
Partition 674 (D.47862_674 - 440 654 674 )
Partition 675 (.MEM_675 - 675 )
Partition 676 (interval_676 - 12 450 454 655 676 )

Coalesced iftmp.119_27 to val_430
Coalesced D.45476_54 to D.47828_657
Coalesced D.45503_76 to D.47832_658
Coalesced D.45517_91 to D.47836_660
Coalesced D.45546_119 to D.47839_662
Coalesced D.45571_162 to D.47842_664
Coalesced D.45574_169 to D.47845_666
Coalesced D.45577_177 to D.47848_668
Coalesced D.45595_201 to D.47851_670
Coalesced D.45722_328 to D.47854_671
Coalesced D.45725_330 to D.47858_672
Coalesced iftmp.119_427 to val_430
Coalesced iftmp.119_429 to val_430
Coalesced D.45800_440 to D.47862_674
Coalesced D.47830_641 to D.47828_657
Coalesced D.47834_643 to D.47832_658
Coalesced D.47837_644 to D.47836_660
Coalesced D.47840_645 to D.47839_662
Coalesced D.47843_646 to D.47842_664
Coalesced D.47846_647 to D.47845_666
Coalesced D.47849_648 to D.47848_668
Coalesced D.47852_649 to D.47851_670
Coalesced D.47856_651 to D.47854_671
Coalesced D.47860_653 to D.47858_672
Coalesced D.47863_654 to D.47862_674
Coalesced D.47866_655 to interval_676
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtp_engine_t * engine;
  struct sdp_attribute_t * attr;
  int i;
  int got_rtcp_mux;
  const char * val;
  static const char __func__[10] = "check_ice";

  { Scope block #176 src/switch_core_media.c:2700 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #177 Originating from :#0 

    }

  }

  { Scope block #178 src/switch_core_media.c:2700 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #179 Originating from :#0 

    }

  }

  { Scope block #180 
    char * data;
    char * fields[15];
    int argc;
    int j;
    int cid;

    { Scope block #181 src/switch_core_media.c:2608 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #182 Originating from :#0 

      }

    }

    { Scope block #183 src/switch_core_media.c:2597 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #184 Originating from :#0 

      }

    }

    { Scope block #185 src/switch_core_media.c:2595 Originating from :  extern long int atol (const char *); 
      const char * __nptr; (unused)

      { Scope block #186 Originating from :#0 

      }

    }

    { Scope block #187 src/switch_core_media.c:2593 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #188 Originating from :#0 

      }

    }

    { Scope block #189 src/switch_core_media.c:2565 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #190 Originating from :#0 

      }

    }

    { Scope block #191 src/switch_core_media.c:2530 Originating from :  extern long int atol (const char *); 
      const char * __nptr; (unused)

      { Scope block #192 Originating from :#0 

      }

    }

    { Scope block #193 src/switch_core_media.c:2509 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #194 Originating from :#0 

      }

    }

    { Scope block #195 src/switch_core_media.c:2498 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #196 Originating from :#0 

      }

    }

    { Scope block #197 
      char * p;

    }

  }

  { Scope block #198 
    char tmp[80];

  }

  { Scope block #199 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #200 src/switch_core_media.c:2783 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #201 Originating from :#0 

      }

    }

    { Scope block #202 
      int interval;

      { Scope block #203 src/switch_core_media.c:2791 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #204 Originating from :#0 

        }

      }

    }

  }

  { Scope block #205 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

}
check_ice (struct switch_media_handle_t * smh, switch_media_type_t type, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47862;
  const char D.47859;
  int D.47858;
  const char D.47855;
  int D.47854;
  int D.47851;
  int D.47848;
  long int D.47845;
  int D.47842;
  int D.47839;
  long int D.47836;
  const char D.47833;
  int D.47832;
  const char D.47829;
  int D.47828;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char tmp[80];
  char * p;
  int cid;
  int j;
  int argc;
  char * fields[15];
  char * data;
  static const char __func__[10] = "check_ice";
  const char * val;
  int got_rtcp_mux;
  int i;
  struct sdp_attribute_t * attr;
  struct switch_rtp_engine_t * engine;
  switch_call_direction_t D.45836;
  switch_core_media_ice_type_t iftmp.126;
  char * iftmp.125;
  char * iftmp.124;
  int D.38904;
  char * iftmp.123;
  unsigned int D.45813;
  unsigned int interval.122;
  switch_bool_t D.45810;
  int8_t D.45809;
  int D.45808;
  char * iftmp.121;
  int D.45801;
  _Bool D.45797;
  _Bool D.45796;
  _Bool D.45795;
  char[27] * iftmp.120;
  struct switch_core_media_params_t * D.45789;
  char[25] * iftmp.118;
  struct ice_t * D.45776;
  switch_call_direction_t D.45772;
  switch_core_media_ice_type_t iftmp.117;
  char * D.45770;
  char * D.45769;
  char * iftmp.116;
  uint8_t D.45760;
  uint32_t D.45757;
  _Bool D.45754;
  _Bool D.45753;
  _Bool D.45752;
  char * D.45751;
  char * iftmp.115;
  char * D.45744;
  int D.45743;
  switch_port_t D.45740;
  char * D.45739;
  char * D.45738;
  int D.45737;
  char * iftmp.114;
  char * D.45732;
  switch_port_t D.45729;
  char * D.45726;
  char * D.45724;
  char * D.45721;
  uint8_t D.45716;
  int D.45715;
  char * iftmp.113;
  char * iftmp.112;
  int D.45694;
  switch_port_t D.45693;
  char * D.45692;
  char * iftmp.111;
  const void * restrict D.45687;
  unsigned int D.45686;
  unsigned int D.45685;
  const void * restrict D.45684;
  void * restrict D.45683;
  unsigned int D.45682;
  unsigned int D.45681;
  unsigned int D.45680;
  void * restrict D.45679;
  struct icand_t * D.45678;
  _Bool D.45675;
  _Bool D.45674;
  _Bool D.45673;
  char * iftmp.110;
  char * iftmp.109;
  char * iftmp.108;
  uint8_t D.45640;
  uint8_t D.45639;
  switch_bool_t D.45636;
  char * D.45635;
  switch_port_t D.45632;
  int D.45629;
  char * iftmp.107;
  uint8_t D.45622;
  uint8_t D.45621;
  switch_bool_t D.45618;
  char * D.45617;
  switch_port_t D.45614;
  int D.45611;
  uint8_t D.45606;
  uint8_t D.45605;
  char * D.45601;
  int D.45598;
  short unsigned int D.45596;
  int D.45592;
  char * D.45590;
  int D.45587;
  char * D.45585;
  char * D.45584;
  int D.45583;
  int D.45580;
  char * D.45579;
  short unsigned int D.45578;
  char * D.45576;
  uint32_t D.45575;
  char * D.45573;
  char * D.45572;
  char * D.45570;
  char * D.45569;
  char * iftmp.106;
  char * iftmp.105;
  switch_bool_t D.45559;
  char * D.45558;
  int D.45556;
  int D.45553;
  char * D.45552;
  char * D.45551;
  char * D.45550;
  char * D.45549;
  int D.45548;
  char * D.45547;
  char * D.45545;
  int D.45544;
  unsigned int D.45540;
  const char * D.45537;
  int D.45536;
  int D.45533;
  int D.45530;
  switch_port_t D.45528;
  struct payload_map_t * D.45527;
  int D.45524;
  struct switch_rtp_t * D.45519;
  unsigned int D.45518;
  int D.45514;
  uint32_t D.45512;
  char[192] * D.45509;
  char * D.45506;
  char * D.45505;
  int D.45501;
  int D.45499;
  int D.45497;
  char * D.45493;
  int D.45490;
  char * D.45488;
  int D.45485;
  char * D.45483;
  const char * D.45482;
  int D.45479;
  const char * D.45475;
  uint32_t D.45469;
  struct switch_channel_t * D.45468;
  struct switch_core_session_t * D.45467;
  int D.45464;
  int D.45461;
  unsigned int D.45460;
  struct switch_rtp_engine_t[2] * D.45459;

<bb 2>:
  D.45459_35 = &smh_34(D)->engines;
  D.45460_37 = type_36(D) * 11416;
  engine_38 = D.45459_35 + D.45460_37;
  # DEBUG engine => engine_38
  i_39 = 0;
  # DEBUG i => i_39
  got_rtcp_mux_40 = 0;
  # DEBUG got_rtcp_mux => got_rtcp_mux_40
  D.45461_41 = engine_38->ice_in.chosen[0];
  if (D.45461_41 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 3>:
  D.45464_42 = engine_38->ice_in.chosen[1];
  if (D.45464_42 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.45467_43 = smh_34(D)->session;
  D.45468_44 = D.45467_43->channel;
  D.45469_45 = switch_channel_test_flag (D.45468_44, 103);
  if (D.45469_45 == 0)
    goto <bb 222>;
  else
    goto <bb 5>;

<bb 5>:
  engine_38->ice_in.chosen[0] = 0;
  engine_38->ice_in.chosen[1] = 0;
  engine_38->ice_in.cand_idx = 0;
  if (m_46(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  attr_47 = m_46(D)->m_attributes;
  # DEBUG attr => attr_47
  goto <bb 74>;

<bb 7>:
  attr_49 = sdp_48(D)->sdp_attributes;
  # DEBUG attr => attr_49
  goto <bb 74>;

<bb 8>:
  argc_50 = 0;
  # DEBUG argc => argc_50
  j_51 = 0;
  # DEBUG j => j_51
  cid_52 = 0;
  # DEBUG cid => cid_52
  D.45475_53 = attr_1->a_name;
  # DEBUG s => D.45475_53
  if (D.45475_53 == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;

<bb 9>:
  D.47829_640 = *D.45475_53;
  if (D.47829_640 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # D.47828_641 = PHI <1(8), 1(9), 0(10)>
  D.47828_657 = D.47828_641;
  D.47828_54 = D.47828_657;
  if (D.47828_54 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  // predicted unlikely by continue predictor.
  goto <bb 73>;

<bb 13>:
  D.45475_55 = attr_1->a_name;
  D.45479_56 = strcasecmp (D.45475_55, "ice-ufrag");
  if (D.45479_56 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.45467_57 = smh_34(D)->session;
  D.45482_58 = attr_1->a_value;
  D.45483_59 = switch_core_perform_session_strdup (D.45467_57, D.45482_58, "src/switch_core_media.c", &__func__, 2503);
  engine_38->ice_in.ufrag = D.45483_59;
  goto <bb 73>;

<bb 15>:
  D.45475_60 = attr_1->a_name;
  D.45485_61 = strcasecmp (D.45475_60, "ice-pwd");
  if (D.45485_61 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.45467_62 = smh_34(D)->session;
  D.45482_63 = attr_1->a_value;
  D.45488_64 = switch_core_perform_session_strdup (D.45467_62, D.45482_63, "src/switch_core_media.c", &__func__, 2505);
  engine_38->ice_in.pwd = D.45488_64;
  goto <bb 73>;

<bb 17>:
  D.45475_65 = attr_1->a_name;
  D.45490_66 = strcasecmp (D.45475_65, "ice-options");
  if (D.45490_66 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.45467_67 = smh_34(D)->session;
  D.45482_68 = attr_1->a_value;
  D.45493_69 = switch_core_perform_session_strdup (D.45467_67, D.45482_68, "src/switch_core_media.c", &__func__, 2507);
  engine_38->ice_in.options = D.45493_69;
  goto <bb 73>;

<bb 19>:
  D.45497_70 = switch_rtp_has_dtls ();
  if (D.45497_70 != 0)
    goto <bb 20>;
  else
    goto <bb 29>;

<bb 20>:
  D.45467_71 = smh_34(D)->session;
  D.45499_72 = dtls_ok (D.45467_71);
  if (D.45499_72 != 0)
    goto <bb 21>;
  else
    goto <bb 29>;

<bb 21>:
  D.45475_73 = attr_1->a_name;
  D.45501_74 = strcasecmp (D.45475_73, "fingerprint");
  if (D.45501_74 == 0)
    goto <bb 22>;
  else
    goto <bb 29>;

<bb 22>:
  D.45482_75 = attr_1->a_value;
  # DEBUG s => D.45482_75
  if (D.45482_75 == 0B)
    goto <bb 25>;
  else
    goto <bb 23>;

<bb 23>:
  D.47833_642 = *D.45482_75;
  if (D.47833_642 == 0)
    goto <bb 25>;
  else
    goto <bb 24>;

<bb 24>:

<bb 25>:
  # D.47832_643 = PHI <1(22), 1(23), 0(24)>
  D.47832_658 = D.47832_643;
  D.47832_76 = D.47832_658;
  if (D.47832_76 == 0)
    goto <bb 26>;
  else
    goto <bb 29>;

<bb 26>:
  D.45467_77 = smh_34(D)->session;
  D.45482_78 = attr_1->a_value;
  D.45505_79 = switch_core_perform_session_strdup (D.45467_77, D.45482_78, "src/switch_core_media.c", &__func__, 2512);
  engine_38->remote_dtls_fingerprint.type = D.45505_79;
  D.45506_80 = engine_38->remote_dtls_fingerprint.type;
  p_81 = __builtin_strchr (D.45506_80, 32);
  # DEBUG p => p_81
  if (p_81 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  *p_81 = 0;
  p_82 = p_81 + 1;
  # DEBUG p => p_82
  D.45509_83 = &engine_38->local_dtls_fingerprint.str;
  switch_copy_string (D.45509_83, p_82, 192);

<bb 28>:
  generate_local_fingerprint (smh_34(D), type_36(D));
  D.45467_84 = smh_34(D)->session;
  D.45468_85 = D.45467_84->channel;
  switch_channel_set_flag_value (D.45468_85, 109, 1);
  goto <bb 73>;

<bb 29>:
  D.45512_86 = engine_38->remote_ssrc;
  if (D.45512_86 == 0)
    goto <bb 30>;
  else
    goto <bb 35>;

<bb 30>:
  D.45475_87 = attr_1->a_name;
  D.45514_88 = strcasecmp (D.45475_87, "ssrc");
  if (D.45514_88 == 0)
    goto <bb 31>;
  else
    goto <bb 35>;

<bb 31>:
  D.45482_89 = attr_1->a_value;
  if (D.45482_89 != 0B)
    goto <bb 32>;
  else
    goto <bb 35>;

<bb 32>:
  D.45482_90 = attr_1->a_value;
  # DEBUG __nptr => D.45482_90
  D.47836_644 = strtol (D.45482_90, 0B, 10);
  D.47836_660 = D.47836_644;
  D.47836_91 = D.47836_660;
  D.45518_92 = (unsigned int) D.47836_91;
  engine_38->remote_ssrc = D.45518_92;
  D.45519_93 = engine_38->rtp_session;
  if (D.45519_93 != 0B)
    goto <bb 33>;
  else
    goto <bb 73>;

<bb 33>:
  D.45512_94 = engine_38->remote_ssrc;
  if (D.45512_94 != 0)
    goto <bb 34>;
  else
    goto <bb 73>;

<bb 34>:
  D.45519_95 = engine_38->rtp_session;
  D.45512_96 = engine_38->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.45519_95, D.45512_96);
  goto <bb 73>;

<bb 35>:
  D.45475_97 = attr_1->a_name;
  D.45524_98 = strcasecmp (D.45475_97, "rtcp-mux");
  if (D.45524_98 == 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  engine_38->rtcp_mux = 1;
  D.45527_99 = engine_38->cur_payload_map;
  D.45528_100 = D.45527_99->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_100;
  got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
  # DEBUG got_rtcp_mux => got_rtcp_mux_101
  goto <bb 73>;

<bb 37>:
  D.45475_102 = attr_1->a_name;
  D.45530_103 = strcasecmp (D.45475_102, "candidate");
  if (D.45530_103 == 0)
    goto <bb 38>;
  else
    goto <bb 73>;

<bb 38>:
  D.45467_104 = smh_34(D)->session;
  D.45468_105 = D.45467_104->channel;
  switch_channel_set_flag_value (D.45468_105, 108, 1);
  D.45533_106 = engine_38->cand_acl_count;
  if (D.45533_106 == 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.45533_107 = engine_38->cand_acl_count;
  engine_38->cand_acl[D.45533_107] = "wan.auto";
  D.45536_108 = D.45533_107 + 1;
  engine_38->cand_acl_count = D.45536_108;
  D.45467_109 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45467_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");

<bb 40>:
  D.45482_110 = attr_1->a_value;
  D.45537_111 = switch_stristr (" udp ", D.45482_110);
  if (D.45537_111 == 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  // predicted unlikely by continue predictor.
  goto <bb 73>;

<bb 42>:
  D.45467_112 = smh_34(D)->session;
  D.45482_113 = attr_1->a_value;
  data_114 = switch_core_perform_session_strdup (D.45467_112, D.45482_113, "src/switch_core_media.c", &__func__, 2556);
  # DEBUG data => data_114
  D.45540_115 = switch_separate_string (data_114, 32, &fields, 15);
  argc_116 = (int) D.45540_115;
  # DEBUG argc => argc_116
  if (argc_116 <= 4)
    goto <bb 44>;
  else
    goto <bb 43>;

<bb 43>:
  D.45544_117 = engine_38->ice_in.cand_idx;
  if (D.45544_117 > 48)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.45467_215 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45467_215, 4, "Invalid data\n");
  // predicted unlikely by continue predictor.
  goto <bb 73>;

<bb 45>:
  D.45545_118 = fields[1];
  # DEBUG __nptr => D.45545_118
  D.47839_645 = strtol (D.45545_118, 0B, 10);
  D.47839_662 = D.47839_645;
  D.47839_119 = D.47839_662;
  cid_120 = D.47839_119 + -1;
  # DEBUG cid => cid_120
  i_121 = 0;
  # DEBUG i => i_121
  goto <bb 47>;

<bb 46>:
  D.45467_122 = smh_34(D)->session;
  D.45547_123 = fields[i_2];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45467_122, 101, "CAND %d [%s]\n", i_2, D.45547_123);
  i_124 = i_2 + 1;
  # DEBUG i => i_124

<bb 47>:
  # i_2 = PHI <i_121(45), i_124(46)>
  # DEBUG i => i_2
  if (i_2 < argc_116)
    goto <bb 46>;
  else
    goto <bb 48>;

<bb 48>:
  D.45467_125 = smh_34(D)->session;
  D.45548_126 = cid_120 + 1;
  D.45549_127 = fields[2];
  D.45550_128 = fields[7];
  D.45551_129 = fields[4];
  D.45552_130 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45467_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.45548_126, D.45549_127, D.45550_128, D.45551_129, D.45552_130);
  D.45544_131 = engine_38->ice_in.cand_idx;
  D.45553_132 = D.45544_131 + 1;
  engine_38->ice_in.cand_idx = D.45553_132;
  i_133 = 0;
  # DEBUG i => i_133
  D.45533_134 = engine_38->cand_acl_count;
  if (D.45533_134 > i_133)
    goto <bb 49>;
  else
    goto <bb 73>;

<bb 49>:
  D.45556_135 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_135 == 0)
    goto <bb 50>;
  else
    goto <bb 55>;

<bb 50>:
  D.45551_136 = fields[4];
  D.45558_137 = engine_38->cand_acl[i_133];
  D.45559_138 = switch_check_network_list_ip_token (D.45551_136, D.45558_137, 0B);
  if (D.45559_138 != 0)
    goto <bb 51>;
  else
    goto <bb 55>;

<bb 51>:
  D.45544_139 = engine_38->ice_in.cand_idx;
  engine_38->ice_in.chosen[cid_120] = D.45544_139;
  D.45467_140 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  iftmp.105_141 = "video";
  goto <bb 54>;

<bb 53>:
  iftmp.105_142 = "audio";

<bb 54>:
  # iftmp.105_13 = PHI <iftmp.105_141(52), iftmp.105_142(53)>
  D.45548_143 = cid_120 + 1;
  D.45549_144 = fields[2];
  D.45550_145 = fields[7];
  D.45551_146 = fields[4];
  D.45552_147 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45467_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.45548_143, D.45549_144, D.45550_145, D.45551_146, D.45552_147);
  goto <bb 59>;

<bb 55>:
  D.45467_148 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 56>;
  else
    goto <bb 57>;

<bb 56>:
  iftmp.106_149 = "video";
  goto <bb 58>;

<bb 57>:
  iftmp.106_150 = "audio";

<bb 58>:
  # iftmp.106_14 = PHI <iftmp.106_149(56), iftmp.106_150(57)>
  D.45548_151 = cid_120 + 1;
  D.45549_152 = fields[2];
  D.45550_153 = fields[7];
  D.45551_154 = fields[4];
  D.45552_155 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45467_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.45548_151, D.45549_152, D.45550_153, D.45551_154, D.45552_155);

<bb 59>:
  D.45544_156 = engine_38->ice_in.cand_idx;
  D.45467_157 = smh_34(D)->session;
  D.45569_158 = fields[0];
  D.45570_159 = switch_core_perform_session_strdup (D.45467_157, D.45569_158, "src/switch_core_media.c", &__func__, 2592);
  engine_38->ice_in.cands[D.45544_156][cid_120].foundation = D.45570_159;
  D.45544_160 = engine_38->ice_in.cand_idx;
  D.45545_161 = fields[1];
  # DEBUG __nptr => D.45545_161
  D.47842_646 = strtol (D.45545_161, 0B, 10);
  D.47842_664 = D.47842_646;
  D.47842_162 = D.47842_664;
  engine_38->ice_in.cands[D.45544_160][cid_120].component_id = D.47842_162;
  D.45544_163 = engine_38->ice_in.cand_idx;
  D.45467_164 = smh_34(D)->session;
  D.45549_165 = fields[2];
  D.45572_166 = switch_core_perform_session_strdup (D.45467_164, D.45549_165, "src/switch_core_media.c", &__func__, 2594);
  engine_38->ice_in.cands[D.45544_163][cid_120].transport = D.45572_166;
  D.45544_167 = engine_38->ice_in.cand_idx;
  D.45573_168 = fields[3];
  # DEBUG __nptr => D.45573_168
  D.47845_647 = strtol (D.45573_168, 0B, 10);
  D.47845_666 = D.47845_647;
  D.47845_169 = D.47845_666;
  D.45575_170 = (uint32_t) D.47845_169;
  engine_38->ice_in.cands[D.45544_167][cid_120].priority = D.45575_170;
  D.45544_171 = engine_38->ice_in.cand_idx;
  D.45467_172 = smh_34(D)->session;
  D.45551_173 = fields[4];
  D.45576_174 = switch_core_perform_session_strdup (D.45467_172, D.45551_173, "src/switch_core_media.c", &__func__, 2596);
  engine_38->ice_in.cands[D.45544_171][cid_120].con_addr = D.45576_174;
  D.45544_175 = engine_38->ice_in.cand_idx;
  D.45552_176 = fields[5];
  # DEBUG __nptr => D.45552_176
  D.47848_648 = strtol (D.45552_176, 0B, 10);
  D.47848_668 = D.47848_648;
  D.47848_177 = D.47848_668;
  D.45578_178 = (short unsigned int) D.47848_177;
  engine_38->ice_in.cands[D.45544_175][cid_120].con_port = D.45578_178;
  j_179 = 6;
  # DEBUG j => j_179
  goto <bb 69>;

<bb 60>:
  D.45579_182 = fields[j_10];
  D.45580_183 = strcasecmp (D.45579_182, "typ");
  if (D.45580_183 == 0)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  D.45544_184 = engine_38->ice_in.cand_idx;
  D.45467_185 = smh_34(D)->session;
  D.45583_186 = j_10 + 1;
  D.45584_187 = fields[D.45583_186];
  D.45585_188 = switch_core_perform_session_strdup (D.45467_185, D.45584_187, "src/switch_core_media.c", &__func__, 2604);
  engine_38->ice_in.cands[D.45544_184][cid_120].cand_type = D.45585_188;
  goto <bb 68>;

<bb 62>:
  D.45579_189 = fields[j_10];
  D.45587_190 = strcasecmp (D.45579_189, "raddr");
  if (D.45587_190 == 0)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  D.45544_191 = engine_38->ice_in.cand_idx;
  D.45467_192 = smh_34(D)->session;
  D.45583_193 = j_10 + 1;
  D.45584_194 = fields[D.45583_193];
  D.45590_195 = switch_core_perform_session_strdup (D.45467_192, D.45584_194, "src/switch_core_media.c", &__func__, 2606);
  engine_38->ice_in.cands[D.45544_191][cid_120].raddr = D.45590_195;
  goto <bb 68>;

<bb 64>:
  D.45579_196 = fields[j_10];
  D.45592_197 = strcasecmp (D.45579_196, "rport");
  if (D.45592_197 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  D.45544_198 = engine_38->ice_in.cand_idx;
  D.45583_199 = j_10 + 1;
  D.45584_200 = fields[D.45583_199];
  # DEBUG __nptr => D.45584_200
  D.47851_649 = strtol (D.45584_200, 0B, 10);
  D.47851_670 = D.47851_649;
  D.47851_201 = D.47851_670;
  D.45596_202 = (short unsigned int) D.47851_201;
  engine_38->ice_in.cands[D.45544_198][cid_120].rport = D.45596_202;
  goto <bb 68>;

<bb 66>:
  D.45579_203 = fields[j_10];
  D.45598_204 = strcasecmp (D.45579_203, "generation");
  if (D.45598_204 == 0)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  D.45544_205 = engine_38->ice_in.cand_idx;
  D.45467_206 = smh_34(D)->session;
  D.45583_207 = j_10 + 1;
  D.45584_208 = fields[D.45583_207];
  D.45601_209 = switch_core_perform_session_strdup (D.45467_206, D.45584_208, "src/switch_core_media.c", &__func__, 2610);
  engine_38->ice_in.cands[D.45544_205][cid_120].generation = D.45601_209;

<bb 68>:
  j_210 = j_10 + 2;
  # DEBUG j => j_210

<bb 69>:
  # j_10 = PHI <j_179(59), j_210(68)>
  # DEBUG j => j_10
  if (j_10 < argc_116)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  D.45583_180 = j_10 + 1;
  D.45584_181 = fields[D.45583_180];
  if (D.45584_181 != 0B)
    goto <bb 60>;
  else
    goto <bb 71>;

<bb 71>:
  D.45556_211 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_211 != 0)
    goto <bb 72>;
  else
    goto <bb 73>;

<bb 72>:
  D.45556_212 = engine_38->ice_in.chosen[cid_120];
  D.45605_213 = engine_38->ice_in.cands[D.45556_212][cid_120].ready;
  D.45606_214 = D.45605_213 + 1;
  engine_38->ice_in.cands[D.45556_212][cid_120].ready = D.45606_214;

<bb 73>:
  # got_rtcp_mux_7 = PHI <got_rtcp_mux_8(12), got_rtcp_mux_8(14), got_rtcp_mux_8(16), got_rtcp_mux_8(18), got_rtcp_mux_8(28), got_rtcp_mux_8(33), got_rtcp_mux_101(36), got_rtcp_mux_8(37), got_rtcp_mux_8(41), got_rtcp_mux_8(44), got_rtcp_mux_8(72), got_rtcp_mux_8(48), got_rtcp_mux_8(32), got_rtcp_mux_8(34), got_rtcp_mux_8(71)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_7
  attr_216 = attr_1->a_next;
  # DEBUG attr => attr_216

<bb 74>:
  # attr_1 = PHI <attr_49(7), attr_216(73), attr_47(6)>
  # got_rtcp_mux_8 = PHI <got_rtcp_mux_40(7), got_rtcp_mux_7(73), got_rtcp_mux_40(6)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_8
  # DEBUG attr => attr_1
  if (attr_1 != 0B)
    goto <bb 8>;
  else
    goto <bb 75>;

<bb 75>:
  D.45461_217 = engine_38->ice_in.chosen[0];
  if (D.45461_217 == 0)
    goto <bb 77>;
  else
    goto <bb 76>;

<bb 76>:
  D.45464_218 = engine_38->ice_in.chosen[1];
  if (D.45464_218 == 0)
    goto <bb 77>;
  else
    goto <bb 98>;

<bb 77>:
  i_219 = 0;
  # DEBUG i => i_219
  goto <bb 95>;

<bb 78>:
  D.45461_223 = engine_38->ice_in.chosen[0];
  if (D.45461_223 == 0)
    goto <bb 79>;
  else
    goto <bb 86>;

<bb 79>:
  D.45611_224 = engine_38->ice_in.cands[i_3][0].component_id;
  if (D.45611_224 == 1)
    goto <bb 80>;
  else
    goto <bb 86>;

<bb 80>:
  D.45614_225 = engine_38->ice_in.cands[i_3][0].rport;
  if (D.45614_225 == 0)
    goto <bb 81>;
  else
    goto <bb 86>;

<bb 81>:
  D.45617_226 = engine_38->ice_in.cands[i_3][0].con_addr;
  D.45618_227 = switch_check_network_list_ip_token (D.45617_226, "localnet.auto", 0B);
  if (D.45618_227 != 0)
    goto <bb 82>;
  else
    goto <bb 86>;

<bb 82>:
  engine_38->ice_in.chosen[0] = i_3;
  D.45461_228 = engine_38->ice_in.chosen[0];
  D.45621_229 = engine_38->ice_in.cands[D.45461_228][0].ready;
  D.45622_230 = D.45621_229 + 1;
  engine_38->ice_in.cands[D.45461_228][0].ready = D.45622_230;
  D.45467_231 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  iftmp.107_232 = "video";
  goto <bb 85>;

<bb 84>:
  iftmp.107_233 = "audio";

<bb 85>:
  # iftmp.107_15 = PHI <iftmp.107_232(83), iftmp.107_233(84)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45467_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);

<bb 86>:
  D.45464_234 = engine_38->ice_in.chosen[1];
  if (D.45464_234 == 0)
    goto <bb 87>;
  else
    goto <bb 94>;

<bb 87>:
  D.45629_235 = engine_38->ice_in.cands[i_3][1].component_id;
  if (D.45629_235 == 2)
    goto <bb 88>;
  else
    goto <bb 94>;

<bb 88>:
  D.45632_236 = engine_38->ice_in.cands[i_3][1].rport;
  if (D.45632_236 == 0)
    goto <bb 89>;
  else
    goto <bb 94>;

<bb 89>:
  D.45635_237 = engine_38->ice_in.cands[i_3][1].con_addr;
  D.45636_238 = switch_check_network_list_ip_token (D.45635_237, "localnet.auto", 0B);
  if (D.45636_238 != 0)
    goto <bb 90>;
  else
    goto <bb 94>;

<bb 90>:
  engine_38->ice_in.chosen[1] = i_3;
  D.45464_239 = engine_38->ice_in.chosen[1];
  D.45639_240 = engine_38->ice_in.cands[D.45464_239][1].ready;
  D.45640_241 = D.45639_240 + 1;
  engine_38->ice_in.cands[D.45464_239][1].ready = D.45640_241;
  D.45467_242 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 91>;
  else
    goto <bb 92>;

<bb 91>:
  iftmp.108_243 = "video";
  goto <bb 93>;

<bb 92>:
  iftmp.108_244 = "audio";

<bb 93>:
  # iftmp.108_16 = PHI <iftmp.108_243(91), iftmp.108_244(92)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45467_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);

<bb 94>:
  i_245 = i_3 + 1;
  # DEBUG i => i_245

<bb 95>:
  # i_3 = PHI <i_219(77), i_245(94)>
  # DEBUG i => i_3
  D.45544_220 = engine_38->ice_in.cand_idx;
  if (D.45544_220 >= i_3)
    goto <bb 96>;
  else
    goto <bb 98>;

<bb 96>:
  D.45461_221 = engine_38->ice_in.chosen[0];
  if (D.45461_221 == 0)
    goto <bb 78>;
  else
    goto <bb 97>;

<bb 97>:
  D.45464_222 = engine_38->ice_in.chosen[1];
  if (D.45464_222 == 0)
    goto <bb 78>;
  else
    goto <bb 98>;

<bb 98>:
  D.45461_246 = engine_38->ice_in.chosen[0];
  if (D.45461_246 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;

<bb 99>:
  D.45464_247 = engine_38->ice_in.chosen[1];
  if (D.45464_247 == 0)
    goto <bb 100>;
  else
    goto <bb 119>;

<bb 100>:
  i_248 = 0;
  # DEBUG i => i_248
  goto <bb 116>;

<bb 101>:
  D.45461_252 = engine_38->ice_in.chosen[0];
  if (D.45461_252 == 0)
    goto <bb 102>;
  else
    goto <bb 108>;

<bb 102>:
  D.45611_253 = engine_38->ice_in.cands[i_4][0].component_id;
  if (D.45611_253 == 1)
    goto <bb 103>;
  else
    goto <bb 108>;

<bb 103>:
  D.45614_254 = engine_38->ice_in.cands[i_4][0].rport;
  if (D.45614_254 != 0)
    goto <bb 104>;
  else
    goto <bb 108>;

<bb 104>:
  engine_38->ice_in.chosen[0] = i_4;
  D.45461_255 = engine_38->ice_in.chosen[0];
  D.45621_256 = engine_38->ice_in.cands[D.45461_255][0].ready;
  D.45622_257 = D.45621_256 + 1;
  engine_38->ice_in.cands[D.45461_255][0].ready = D.45622_257;
  D.45467_258 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 105>;
  else
    goto <bb 106>;

<bb 105>:
  iftmp.109_259 = "video";
  goto <bb 107>;

<bb 106>:
  iftmp.109_260 = "audio";

<bb 107>:
  # iftmp.109_17 = PHI <iftmp.109_259(105), iftmp.109_260(106)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45467_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);

<bb 108>:
  D.45464_261 = engine_38->ice_in.chosen[1];
  if (D.45464_261 == 0)
    goto <bb 109>;
  else
    goto <bb 115>;

<bb 109>:
  D.45629_262 = engine_38->ice_in.cands[i_4][1].component_id;
  if (D.45629_262 == 2)
    goto <bb 110>;
  else
    goto <bb 115>;

<bb 110>:
  D.45632_263 = engine_38->ice_in.cands[i_4][1].rport;
  if (D.45632_263 != 0)
    goto <bb 111>;
  else
    goto <bb 115>;

<bb 111>:
  engine_38->ice_in.chosen[1] = i_4;
  D.45464_264 = engine_38->ice_in.chosen[1];
  D.45639_265 = engine_38->ice_in.cands[D.45464_264][1].ready;
  D.45640_266 = D.45639_265 + 1;
  engine_38->ice_in.cands[D.45464_264][1].ready = D.45640_266;
  D.45467_267 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 112>;
  else
    goto <bb 113>;

<bb 112>:
  iftmp.110_268 = "video";
  goto <bb 114>;

<bb 113>:
  iftmp.110_269 = "audio";

<bb 114>:
  # iftmp.110_18 = PHI <iftmp.110_268(112), iftmp.110_269(113)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45467_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);

<bb 115>:
  i_270 = i_4 + 1;
  # DEBUG i => i_270

<bb 116>:
  # i_4 = PHI <i_248(100), i_270(115)>
  # DEBUG i => i_4
  D.45544_249 = engine_38->ice_in.cand_idx;
  if (D.45544_249 >= i_4)
    goto <bb 117>;
  else
    goto <bb 119>;

<bb 117>:
  D.45461_250 = engine_38->ice_in.chosen[0];
  if (D.45461_250 == 0)
    goto <bb 101>;
  else
    goto <bb 118>;

<bb 118>:
  D.45464_251 = engine_38->ice_in.chosen[1];
  if (D.45464_251 == 0)
    goto <bb 101>;
  else
    goto <bb 119>;

<bb 119>:
  D.45461_271 = engine_38->ice_in.chosen[0];
  if (D.45461_271 != 0)
    goto <bb 120>;
  else
    goto <bb 125>;

<bb 120>:
  D.45464_272 = engine_38->ice_in.chosen[1];
  D.45673_273 = D.45464_272 == 0;
  D.45674_274 = got_rtcp_mux_8 != 0;
  D.45675_275 = D.45673_273 && D.45674_274;
  if (D.45675_275 != 0)
    goto <bb 121>;
  else
    goto <bb 125>;

<bb 121>:
  D.45461_276 = engine_38->ice_in.chosen[0];
  engine_38->ice_in.chosen[1] = D.45461_276;
  D.45678_277 = &engine_38->ice_in.cands[0][0];
  D.45679_278 = (void * restrict) D.45678_277;
  D.45464_279 = engine_38->ice_in.chosen[1];
  D.45680_280 = (unsigned int) D.45464_279;
  D.45681_281 = D.45680_280 * 88;
  D.45682_282 = D.45681_281 + 44;
  D.45683_283 = D.45679_278 + D.45682_282;
  D.45678_284 = &engine_38->ice_in.cands[0][0];
  D.45684_285 = (const void * restrict) D.45678_284;
  D.45461_286 = engine_38->ice_in.chosen[0];
  D.45685_287 = (unsigned int) D.45461_286;
  D.45686_288 = D.45685_287 * 88;
  D.45687_289 = D.45684_285 + D.45686_288;
  memcpy (D.45683_283, D.45687_289, 44);
  D.45464_290 = engine_38->ice_in.chosen[1];
  D.45639_291 = engine_38->ice_in.cands[D.45464_290][1].ready;
  D.45640_292 = D.45639_291 + 1;
  engine_38->ice_in.cands[D.45464_290][1].ready = D.45640_292;
  D.45467_293 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 122>;
  else
    goto <bb 123>;

<bb 122>:
  iftmp.111_294 = "video";
  goto <bb 124>;

<bb 123>:
  iftmp.111_295 = "audio";

<bb 124>:
  # iftmp.111_19 = PHI <iftmp.111_294(122), iftmp.111_295(123)>
  D.45464_296 = engine_38->ice_in.chosen[1];
  D.45692_297 = engine_38->ice_in.cands[D.45464_296][1].con_addr;
  D.45464_298 = engine_38->ice_in.chosen[1];
  D.45693_299 = engine_38->ice_in.cands[D.45464_298][1].con_port;
  D.45694_300 = (int) D.45693_299;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45467_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45692_297, D.45694_300);

<bb 125>:
  D.45461_301 = engine_38->ice_in.chosen[0];
  if (D.45461_301 == 0)
    goto <bb 127>;
  else
    goto <bb 126>;

<bb 126>:
  D.45464_302 = engine_38->ice_in.chosen[1];
  if (D.45464_302 == 0)
    goto <bb 127>;
  else
    goto <bb 144>;

<bb 127>:
  i_303 = 0;
  # DEBUG i => i_303
  goto <bb 141>;

<bb 128>:
  D.45461_307 = engine_38->ice_in.chosen[0];
  if (D.45461_307 == 0)
    goto <bb 129>;
  else
    goto <bb 134>;

<bb 129>:
  D.45611_308 = engine_38->ice_in.cands[i_5][0].component_id;
  if (D.45611_308 == 1)
    goto <bb 130>;
  else
    goto <bb 134>;

<bb 130>:
  engine_38->ice_in.chosen[0] = i_5;
  D.45461_309 = engine_38->ice_in.chosen[0];
  D.45621_310 = engine_38->ice_in.cands[D.45461_309][0].ready;
  D.45622_311 = D.45621_310 + 1;
  engine_38->ice_in.cands[D.45461_309][0].ready = D.45622_311;
  D.45467_312 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 131>;
  else
    goto <bb 132>;

<bb 131>:
  iftmp.112_313 = "video";
  goto <bb 133>;

<bb 132>:
  iftmp.112_314 = "audio";

<bb 133>:
  # iftmp.112_20 = PHI <iftmp.112_313(131), iftmp.112_314(132)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45467_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);

<bb 134>:
  D.45464_315 = engine_38->ice_in.chosen[1];
  if (D.45464_315 == 0)
    goto <bb 135>;
  else
    goto <bb 140>;

<bb 135>:
  D.45629_316 = engine_38->ice_in.cands[i_5][1].component_id;
  if (D.45629_316 == 2)
    goto <bb 136>;
  else
    goto <bb 140>;

<bb 136>:
  engine_38->ice_in.chosen[1] = i_5;
  D.45464_317 = engine_38->ice_in.chosen[1];
  D.45639_318 = engine_38->ice_in.cands[D.45464_317][1].ready;
  D.45640_319 = D.45639_318 + 1;
  engine_38->ice_in.cands[D.45464_317][1].ready = D.45640_319;
  D.45467_320 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 137>;
  else
    goto <bb 138>;

<bb 137>:
  iftmp.113_321 = "video";
  goto <bb 139>;

<bb 138>:
  iftmp.113_322 = "audio";

<bb 139>:
  # iftmp.113_21 = PHI <iftmp.113_321(137), iftmp.113_322(138)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45467_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);

<bb 140>:
  i_323 = i_5 + 1;
  # DEBUG i => i_323

<bb 141>:
  # i_5 = PHI <i_303(127), i_323(140)>
  # DEBUG i => i_5
  D.45544_304 = engine_38->ice_in.cand_idx;
  if (D.45544_304 >= i_5)
    goto <bb 142>;
  else
    goto <bb 144>;

<bb 142>:
  D.45461_305 = engine_38->ice_in.chosen[0];
  if (D.45461_305 == 0)
    goto <bb 128>;
  else
    goto <bb 143>;

<bb 143>:
  D.45464_306 = engine_38->ice_in.chosen[1];
  if (D.45464_306 == 0)
    goto <bb 128>;
  else
    goto <bb 144>;

<bb 144>:
  i_324 = 0;
  # DEBUG i => i_324
  goto <bb 156>;

<bb 145>:
  D.45715_325 = engine_38->ice_in.chosen[i_6];
  D.45716_326 = engine_38->ice_in.cands[D.45715_325][i_6].ready;
  if (D.45716_326 != 0)
    goto <bb 146>;
  else
    goto <bb 155>;

<bb 146>:
  D.45721_327 = engine_38->ice_in.ufrag;
  # DEBUG s => D.45721_327
  if (D.45721_327 == 0B)
    goto <bb 149>;
  else
    goto <bb 147>;

<bb 147>:
  D.47855_650 = MEM[(const char *)D.45721_327];
  if (D.47855_650 == 0)
    goto <bb 149>;
  else
    goto <bb 148>;

<bb 148>:

<bb 149>:
  # D.47854_651 = PHI <1(146), 1(147), 0(148)>
  D.47854_671 = D.47854_651;
  D.47854_328 = D.47854_671;
  if (D.47854_328 != 0)
    goto <bb 154>;
  else
    goto <bb 150>;

<bb 150>:
  D.45724_329 = engine_38->ice_in.pwd;
  # DEBUG s => D.45724_329
  if (D.45724_329 == 0B)
    goto <bb 153>;
  else
    goto <bb 151>;

<bb 151>:
  D.47859_652 = MEM[(const char *)D.45724_329];
  if (D.47859_652 == 0)
    goto <bb 153>;
  else
    goto <bb 152>;

<bb 152>:

<bb 153>:
  # D.47858_653 = PHI <1(150), 1(151), 0(152)>
  D.47858_672 = D.47858_653;
  D.47858_330 = D.47858_672;
  if (D.47858_330 != 0)
    goto <bb 154>;
  else
    goto <bb 155>;

<bb 154>:
  D.45715_331 = engine_38->ice_in.chosen[i_6];
  engine_38->ice_in.cands[D.45715_331][i_6].ready = 0;

<bb 155>:
  i_332 = i_6 + 1;
  # DEBUG i => i_332

<bb 156>:
  # i_6 = PHI <i_324(144), i_332(155)>
  # DEBUG i => i_6
  if (i_6 <= 1)
    goto <bb 145>;
  else
    goto <bb 157>;

<bb 157>:
  D.45461_333 = engine_38->ice_in.chosen[0];
  D.45726_334 = engine_38->ice_in.cands[D.45461_333][0].con_addr;
  if (D.45726_334 != 0B)
    goto <bb 158>;
  else
    goto <bb 165>;

<bb 158>:
  D.45461_335 = engine_38->ice_in.chosen[0];
  D.45729_336 = engine_38->ice_in.cands[D.45461_335][0].con_port;
  if (D.45729_336 != 0)
    goto <bb 159>;
  else
    goto <bb 165>;

<bb 159>:
  tmp = "";
  D.45527_337 = engine_38->cur_payload_map;
  D.45467_338 = smh_34(D)->session;
  D.45461_339 = engine_38->ice_in.chosen[0];
  D.45726_340 = engine_38->ice_in.cands[D.45461_339][0].con_addr;
  D.45732_341 = switch_core_perform_session_strdup (D.45467_338, D.45726_340, "src/switch_core_media.c", &__func__, 2709);
  D.45527_337->remote_sdp_ip = D.45732_341;
  D.45467_342 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 160>;
  else
    goto <bb 161>;

<bb 160>:
  iftmp.114_343 = "video";
  goto <bb 162>;

<bb 161>:
  iftmp.114_344 = "audio";

<bb 162>:
  # iftmp.114_22 = PHI <iftmp.114_343(160), iftmp.114_344(161)>
  D.45461_345 = engine_38->ice_in.chosen[0];
  D.45726_346 = engine_38->ice_in.cands[D.45461_345][0].con_addr;
  D.45461_347 = engine_38->ice_in.chosen[0];
  D.45729_348 = engine_38->ice_in.cands[D.45461_347][0].con_port;
  D.45737_349 = (int) D.45729_348;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45467_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45726_346, D.45737_349);
  D.45461_350 = engine_38->ice_in.chosen[0];
  D.45621_351 = engine_38->ice_in.cands[D.45461_350][0].ready;
  D.45622_352 = D.45621_351 + 1;
  engine_38->ice_in.cands[D.45461_350][0].ready = D.45622_352;
  D.45461_353 = engine_38->ice_in.chosen[0];
  D.45729_354 = engine_38->ice_in.cands[D.45461_353][0].con_port;
  engine_38->remote_rtp_ice_port = D.45729_354;
  D.45467_355 = smh_34(D)->session;
  D.45461_356 = engine_38->ice_in.chosen[0];
  D.45726_357 = engine_38->ice_in.cands[D.45461_356][0].con_addr;
  D.45738_358 = switch_core_perform_session_strdup (D.45467_355, D.45726_357, "src/switch_core_media.c", &__func__, 2716);
  engine_38->remote_rtp_ice_addr = D.45738_358;
  D.45527_359 = engine_38->cur_payload_map;
  D.45467_360 = smh_34(D)->session;
  D.45461_361 = engine_38->ice_in.chosen[0];
  D.45726_362 = engine_38->ice_in.cands[D.45461_361][0].con_addr;
  D.45739_363 = switch_core_perform_session_strdup (D.45467_360, D.45726_362, "src/switch_core_media.c", &__func__, 2718);
  D.45527_359->remote_sdp_ip = D.45739_363;
  D.45527_364 = engine_38->cur_payload_map;
  D.45461_365 = engine_38->ice_in.chosen[0];
  D.45729_366 = engine_38->ice_in.cands[D.45461_365][0].con_port;
  D.45527_364->remote_sdp_port = D.45729_366;
  D.45740_367 = engine_38->remote_rtcp_port;
  if (D.45740_367 != 0)
    goto <bb 163>;
  else
    goto <bb 164>;

<bb 163>:
  D.45527_368 = engine_38->cur_payload_map;
  D.45528_369 = D.45527_368->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_369;

<bb 164>:
  D.45527_370 = engine_38->cur_payload_map;
  D.45528_371 = D.45527_370->remote_sdp_port;
  D.45743_372 = (int) D.45528_371;
  switch_snprintf (&tmp, 80, "%d", D.45743_372);
  D.45467_373 = smh_34(D)->session;
  D.45468_374 = D.45467_373->channel;
  D.45527_375 = engine_38->cur_payload_map;
  D.45744_376 = D.45527_375->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.45468_374, "remote_media_ip", D.45744_376, 1);
  D.45467_377 = smh_34(D)->session;
  D.45468_378 = D.45467_377->channel;
  switch_channel_set_variable_var_check (D.45468_378, "remote_media_port", &tmp, 1);

<bb 165>:
  D.45464_379 = engine_38->ice_in.chosen[1];
  D.45693_380 = engine_38->ice_in.cands[D.45464_379][1].con_port;
  if (D.45693_380 != 0)
    goto <bb 166>;
  else
    goto <bb 170>;

<bb 166>:
  D.45467_381 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 167>;
  else
    goto <bb 168>;

<bb 167>:
  iftmp.115_382 = "video";
  goto <bb 169>;

<bb 168>:
  iftmp.115_383 = "audio";

<bb 169>:
  # iftmp.115_23 = PHI <iftmp.115_382(167), iftmp.115_383(168)>
  D.45464_384 = engine_38->ice_in.chosen[1];
  D.45692_385 = engine_38->ice_in.cands[D.45464_384][1].con_addr;
  D.45464_386 = engine_38->ice_in.chosen[1];
  D.45693_387 = engine_38->ice_in.cands[D.45464_386][1].con_port;
  D.45694_388 = (int) D.45693_387;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45467_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45692_385, D.45694_388);
  D.45464_389 = engine_38->ice_in.chosen[1];
  D.45693_390 = engine_38->ice_in.cands[D.45464_389][1].con_port;
  engine_38->remote_rtcp_ice_port = D.45693_390;
  D.45467_391 = smh_34(D)->session;
  D.45464_392 = engine_38->ice_in.chosen[1];
  D.45692_393 = engine_38->ice_in.cands[D.45464_392][1].con_addr;
  D.45751_394 = switch_core_perform_session_strdup (D.45467_391, D.45692_393, "src/switch_core_media.c", &__func__, 2734);
  engine_38->remote_rtcp_ice_addr = D.45751_394;
  D.45464_395 = engine_38->ice_in.chosen[1];
  D.45693_396 = engine_38->ice_in.cands[D.45464_395][1].con_port;
  engine_38->remote_rtcp_port = D.45693_396;

<bb 170>:
  D.45752_397 = m_46(D) != 0B;
  D.45753_398 = got_rtcp_mux_8 == 0;
  D.45754_399 = D.45752_397 && D.45753_398;
  if (D.45754_399 != 0)
    goto <bb 171>;
  else
    goto <bb 172>;

<bb 171>:
  engine_38->rtcp_mux = -1;

<bb 172>:
  D.45467_400 = smh_34(D)->session;
  D.45468_401 = D.45467_400->channel;
  D.45757_402 = switch_channel_test_flag (D.45468_401, 103);
  if (D.45757_402 != 0)
    goto <bb 173>;
  else
    goto <bb 222>;

<bb 173>:
  D.45519_403 = engine_38->rtp_session;
  D.45760_404 = switch_rtp_ready (D.45519_403);
  if (D.45760_404 != 0)
    goto <bb 174>;
  else
    goto <bb 182>;

<bb 174>:
  D.45461_405 = engine_38->ice_in.chosen[0];
  D.45621_406 = engine_38->ice_in.cands[D.45461_405][0].ready;
  if (D.45621_406 != 0)
    goto <bb 175>;
  else
    goto <bb 182>;

<bb 175>:
  D.45467_407 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 176>;
  else
    goto <bb 177>;

<bb 176>:
  iftmp.116_408 = "video";
  goto <bb 178>;

<bb 177>:
  iftmp.116_409 = "audio";

<bb 178>:
  # iftmp.116_24 = PHI <iftmp.116_408(176), iftmp.116_409(177)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45467_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);
  D.45519_410 = engine_38->rtp_session;
  D.45721_411 = engine_38->ice_in.ufrag;
  D.45769_412 = engine_38->ice_out.ufrag;
  D.45770_413 = engine_38->ice_out.pwd;
  D.45724_414 = engine_38->ice_in.pwd;
  D.45467_415 = smh_34(D)->session;
  D.45772_416 = switch_ice_direction (D.45467_415);
  if (D.45772_416 == 1)
    goto <bb 179>;
  else
    goto <bb 180>;

<bb 179>:
  iftmp.117_417 = 2;
  goto <bb 181>;

<bb 180>:
  iftmp.117_418 = 6;

<bb 181>:
  # iftmp.117_25 = PHI <iftmp.117_417(179), iftmp.117_418(180)>
  D.45776_419 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_410, D.45721_411, D.45769_412, D.45770_413, D.45724_414, 0, iftmp.117_25, D.45776_419);

<bb 182>:
  D.45519_420 = engine_38->rtp_session;
  if (D.45519_420 != 0B)
    goto <bb 183>;
  else
    goto <bb 207>;

<bb 183>:
  D.45467_421 = smh_34(D)->session;
  D.45468_422 = D.45467_421->channel;
  if (type_36(D) == 1)
    goto <bb 184>;
  else
    goto <bb 185>;

<bb 184>:
  iftmp.118_423 = "rtcp_video_interval_msec";
  goto <bb 186>;

<bb 185>:
  iftmp.118_424 = "rtcp_audio_interval_msec";

<bb 186>:
  # iftmp.118_26 = PHI <iftmp.118_423(184), iftmp.118_424(185)>
  val_425 = switch_channel_get_variable_dup (D.45468_422, iftmp.118_26, 1, -1);
  # DEBUG val => val_425
  if (val_425 != 0B)
    goto <bb 191>;
  else
    goto <bb 187>;

<bb 187>:
  if (type_36(D) == 1)
    goto <bb 188>;
  else
    goto <bb 189>;

<bb 188>:
  D.45789_426 = smh_34(D)->mparams;
  val_427 = D.45789_426->rtcp_video_interval_msec;
  goto <bb 190>;

<bb 189>:
  D.45789_428 = smh_34(D)->mparams;
  val_429 = D.45789_428->rtcp_audio_interval_msec;

<bb 190>:
  # val_27 = PHI <val_427(188), val_429(189)>
  val_430 = val_27;
  # DEBUG val => val_430
  if (val_430 != 0B)
    goto <bb 191>;
  else
    goto <bb 207>;

<bb 191>:
  # val_9 = PHI <val_425(186), val_430(190)>
  # DEBUG val => val_9
  D.45467_431 = smh_34(D)->session;
  D.45468_432 = D.45467_431->channel;
  if (type_36(D) == 1)
    goto <bb 192>;
  else
    goto <bb 193>;

<bb 192>:
  iftmp.120_433 = "rtp_remote_video_rtcp_port";
  goto <bb 194>;

<bb 193>:
  iftmp.120_434 = "rtp_remote_audio_rtcp_port";

<bb 194>:
  # iftmp.120_28 = PHI <iftmp.120_433(192), iftmp.120_434(193)>
  rport_435 = switch_channel_get_variable_dup (D.45468_432, iftmp.120_28, 1, -1);
  # DEBUG rport => rport_435
  remote_rtcp_port_436 = engine_38->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_436
  D.45795_437 = remote_rtcp_port_436 == 0;
  D.45796_438 = rport_435 != 0B;
  D.45797_439 = D.45795_437 && D.45796_438;
  if (D.45797_439 != 0)
    goto <bb 195>;
  else
    goto <bb 196>;

<bb 195>:
  # DEBUG __nptr => rport_435
  D.47862_654 = strtol (rport_435, 0B, 10);
  D.47862_674 = D.47862_654;
  D.47862_440 = D.47862_674;
  remote_rtcp_port_441 = (switch_port_t) D.47862_440;
  # DEBUG remote_rtcp_port => remote_rtcp_port_441

<bb 196>:
  # remote_rtcp_port_11 = PHI <remote_rtcp_port_436(194), remote_rtcp_port_441(195)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_11
  D.45801_442 = strcasecmp (val_9, "passthru");
  if (D.45801_442 == 0)
    goto <bb 197>;
  else
    goto <bb 201>;

<bb 197>:
  D.45467_443 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 198>;
  else
    goto <bb 199>;

<bb 198>:
  iftmp.121_444 = "video";
  goto <bb 200>;

<bb 199>:
  iftmp.121_445 = "audio";

<bb 200>:
  # iftmp.121_29 = PHI <iftmp.121_444(198), iftmp.121_445(199)>
  D.45808_446 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45467_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45808_446);
  D.45519_447 = engine_38->rtp_session;
  D.45809_448 = engine_38->rtcp_mux;
  D.45810_449 = D.45809_448 > 0;
  switch_rtp_activate_rtcp (D.45519_447, -1, remote_rtcp_port_11, D.45810_449);
  goto <bb 207>;

<bb 201>:
  # DEBUG __nptr => val_9
  interval_655 = strtol (val_9, 0B, 10);
  interval_676 = interval_655;
  interval_450 = interval_676;
  # DEBUG interval => NULL
  interval.122_451 = (unsigned int) interval_450;
  D.45813_452 = interval.122_451 + 4294967196;
  if (D.45813_452 > 499900)
    goto <bb 202>;
  else
    goto <bb 203>;

<bb 202>:
  D.45467_453 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45467_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_450);
  interval_454 = 10000;
  # DEBUG interval => interval_454

<bb 203>:
  # interval_12 = PHI <interval_450(201), interval_454(202)>
  # DEBUG interval => interval_12
  D.45467_455 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 204>;
  else
    goto <bb 205>;

<bb 204>:
  iftmp.123_456 = "video";
  goto <bb 206>;

<bb 205>:
  iftmp.123_457 = "audio";

<bb 206>:
  # iftmp.123_30 = PHI <iftmp.123_456(204), iftmp.123_457(205)>
  D.45808_458 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45467_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45808_458);
  D.45519_459 = engine_38->rtp_session;
  D.45809_460 = engine_38->rtcp_mux;
  D.45810_461 = D.45809_460 > 0;
  switch_rtp_activate_rtcp (D.45519_459, interval_12, remote_rtcp_port_11, D.45810_461);

<bb 207>:
  D.45464_462 = engine_38->ice_in.chosen[1];
  D.45639_463 = engine_38->ice_in.cands[D.45464_462][1].ready;
  if (D.45639_463 != 0)
    goto <bb 208>;
  else
    goto <bb 222>;

<bb 208>:
  D.45809_464 = engine_38->rtcp_mux;
  if (D.45809_464 > 0)
    goto <bb 209>;
  else
    goto <bb 215>;

<bb 209>:
  D.45464_465 = engine_38->ice_in.chosen[1];
  D.45692_466 = engine_38->ice_in.cands[D.45464_465][1].con_addr;
  D.45461_467 = engine_38->ice_in.chosen[0];
  D.45726_468 = engine_38->ice_in.cands[D.45461_467][0].con_addr;
  D.38904_469 = __builtin_strcmp (D.45692_466, D.45726_468);
  if (D.38904_469 == 0)
    goto <bb 210>;
  else
    goto <bb 215>;

<bb 210>:
  D.45464_470 = engine_38->ice_in.chosen[1];
  D.45693_471 = engine_38->ice_in.cands[D.45464_470][1].con_port;
  D.45461_472 = engine_38->ice_in.chosen[0];
  D.45729_473 = engine_38->ice_in.cands[D.45461_472][0].con_port;
  if (D.45693_471 == D.45729_473)
    goto <bb 211>;
  else
    goto <bb 215>;

<bb 211>:
  D.45467_474 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 212>;
  else
    goto <bb 213>;

<bb 212>:
  iftmp.124_475 = "video";
  goto <bb 214>;

<bb 213>:
  iftmp.124_476 = "audio";

<bb 214>:
  # iftmp.124_31 = PHI <iftmp.124_475(212), iftmp.124_476(213)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45467_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);
  goto <bb 222>;

<bb 215>:
  D.45467_477 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 216>;
  else
    goto <bb 217>;

<bb 216>:
  iftmp.125_478 = "video";
  goto <bb 218>;

<bb 217>:
  iftmp.125_479 = "audio";

<bb 218>:
  # iftmp.125_32 = PHI <iftmp.125_478(216), iftmp.125_479(217)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45467_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);
  D.45519_480 = engine_38->rtp_session;
  D.45721_481 = engine_38->ice_in.ufrag;
  D.45769_482 = engine_38->ice_out.ufrag;
  D.45770_483 = engine_38->ice_out.pwd;
  D.45724_484 = engine_38->ice_in.pwd;
  D.45467_485 = smh_34(D)->session;
  D.45836_486 = switch_ice_direction (D.45467_485);
  if (D.45836_486 == 1)
    goto <bb 219>;
  else
    goto <bb 220>;

<bb 219>:
  iftmp.126_487 = 2;
  goto <bb 221>;

<bb 220>:
  iftmp.126_488 = 6;

<bb 221>:
  # iftmp.126_33 = PHI <iftmp.126_487(219), iftmp.126_488(220)>
  D.45776_489 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_480, D.45721_481, D.45769_482, D.45770_483, D.45724_484, 1, iftmp.126_33, D.45776_489);

<bb 222>:
  return;

}



;; Function switch_core_session_set_ice (switch_core_session_set_ice)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (D.45845_3 - 3 )
Partition 4 (D.45845_4 - 4 )
Partition 5 (D.45845_5 - 5 )
Partition 6 (D.45846_6 - 6 )
Partition 7 (D.45846_7 - 7 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (.MEM_10 - 10 )
Partition 11 (.MEM_11 - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )

switch_core_session_set_ice (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_session_set_ice";
  struct switch_media_handle_t * smh;
  struct switch_core_media_params_t * D.45846;
  struct switch_channel_t * D.45845;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2840, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.45845_3 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_3, 110, 1);
  D.45845_4 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_4, 106, 1);
  D.45845_5 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_5, 108, 1);
  D.45846_6 = smh_2->mparams;
  D.45846_6->rtcp_audio_interval_msec = "10000";
  D.45846_7 = smh_2->mparams;
  D.45846_7->rtcp_video_interval_msec = "10000";

<bb 6>:
  return;

}



;; Function switch_core_media_toggle_hold (switch_core_media_toggle_hold)

Try : D.44359_106(P106) & changed_2(P2) --> P106 changed
Try : b_channel_3(P3) & b_channel_8(P8) : Same root, coalesced --> P3.
Try : b_channel_3(P3) & b_channel_16(P16) : Same root, coalesced --> P3.
Try : msg_5(P5) & msg_22(P22) : Same root, coalesced --> P5.
Try : msg_5(P5) & msg_22(P5) : Already coalesced.
Try : msg_5(P5) & msg_35(P35) : Same root, coalesced --> P5.
Try : stream_4(P4) & stream_49(P49) : Same root, coalesced --> P4.
Try : stream_4(P4) & stream_50(P50) : Same root, coalesced --> P4.
Try : changed_1(P1) & changed_7(P7) : Same root, coalesced --> P1.
Try : changed_1(P1) & changed_68(P68) : Same root, coalesced --> P1.
Try : changed_2(P106) & changed_31(P31) : Same root, coalesced --> P106.
Try : changed_2(P106) & changed_43(P43) : Same root, coalesced --> P106.
Try : changed_2(P106) & changed_1(P1) : Same root, coalesced --> P106.
Try : changed_2(P106) & changed_103(P103) : Same root, coalesced --> P106.
Try : changed_2(P106) & changed_7(P106) : Already coalesced.
Try : changed_2(P106) & changed_43(P106) : Already coalesced.
Try : changed_2(P106) & changed_43(P106) : Already coalesced.
Try : changed_2(P106) & changed_43(P106) : Already coalesced.
Try : changed_2(P106) & changed_43(P106) : Already coalesced.
Try : D.44359_6(P6) & D.44359_11(P11) : Same root, coalesced --> P6.
Try : D.44359_6(P6) & changed_106(P106) --> P106 changed

Partition map 

Partition 3 (b_channel_3 - 3 8 16 )
Partition 4 (stream_4 - 4 49 50 )
Partition 5 (msg_5 - 5 22 35 )
Partition 9 (session_9(D) - 9 )
Partition 10 (smh_10 - 10 )
Partition 12 (a_engine_12 - 12 )
Partition 13 (v_engine_13 - 13 )
Partition 14 (D.44360_14 - 14 )
Partition 15 (b_session.86_15 - 15 )
Partition 17 (sendonly_17(D) - 17 )
Partition 18 (D.44367_18 - 18 )
Partition 19 (D.44368_19 - 19 )
Partition 20 (D.44367_20 - 20 )
Partition 21 (D.44370_21 - 21 )
Partition 23 (D.44367_23 - 23 )
Partition 24 (D.44376_24 - 24 )
Partition 25 (D.44367_25 - 25 )
Partition 26 (D.44378_26 - 26 )
Partition 27 (D.44380_27 - 27 )
Partition 28 (D.44367_28 - 28 )
Partition 29 (sendonly.87_29 - 29 )
Partition 30 (D.44367_30 - 30 )
Partition 32 (D.44367_32 - 32 )
Partition 33 (info_33 - 33 )
Partition 34 (D.44384_34 - 34 )
Partition 36 (D.44387_36 - 36 )
Partition 37 (D.44387_37 - 37 )
Partition 38 (D.44390_38 - 38 )
Partition 39 (D.44390_39 - 39 )
Partition 40 (D.44367_40 - 40 )
Partition 41 (D.44367_41 - 41 )
Partition 42 (D.44367_42 - 42 )
Partition 44 (D.44393_44 - 44 )
Partition 45 (D.44387_45 - 45 )
Partition 46 (D.44387_46 - 46 )
Partition 47 (D.44393_47 - 47 )
Partition 48 (D.44367_48 - 48 )
Partition 51 (D.44404_51 - 51 )
Partition 52 (D.44408_52 - 52 )
Partition 53 (D.44409_53 - 53 )
Partition 54 (D.44367_54 - 54 )
Partition 55 (D.44367_55 - 55 )
Partition 56 (b_session.86_56 - 56 )
Partition 57 (D.44412_57 - 57 )
Partition 58 (b_session.86_58 - 58 )
Partition 59 (D.44414_59 - 59 )
Partition 60 (D.44367_60 - 60 )
Partition 61 (D.44415_61 - 61 )
Partition 62 (D.44367_62 - 62 )
Partition 63 (D.44367_63 - 63 )
Partition 64 (D.44387_64 - 64 )
Partition 65 (D.44387_65 - 65 )
Partition 66 (D.44390_66 - 66 )
Partition 67 (D.44390_67 - 67 )
Partition 69 (D.44367_69 - 69 )
Partition 70 (D.44367_70 - 70 )
Partition 71 (D.44422_71 - 71 )
Partition 72 (D.44367_72 - 72 )
Partition 73 (D.44429_73 - 73 )
Partition 74 (D.44431_74 - 74 )
Partition 75 (D.44432_75 - 75 )
Partition 76 (D.44433_76 - 76 )
Partition 77 (D.44387_77 - 77 )
Partition 78 (D.44387_78 - 78 )
Partition 79 (D.44387_79 - 79 )
Partition 80 (D.44433_80 - 80 )
Partition 81 (D.44367_81 - 81 )
Partition 82 (D.44440_82 - 82 )
Partition 83 (b_session.86_83 - 83 )
Partition 84 (D.44367_84 - 84 )
Partition 85 (D.44367_85 - 85 )
Partition 86 (D.44444_86 - 86 )
Partition 87 (D.44449_87 - 87 )
Partition 88 (D.44367_88 - 88 )
Partition 89 (val_89 - 89 )
Partition 90 (D.44453_90 - 90 )
Partition 91 (D.44367_91 - 91 )
Partition 92 (D.44454_92 - 92 )
Partition 93 (D.44387_93 - 93 )
Partition 94 (D.44387_94 - 94 )
Partition 95 (D.44390_95 - 95 )
Partition 96 (D.44390_96 - 96 )
Partition 97 (D.44367_97 - 97 )
Partition 98 (D.44367_98 - 98 )
Partition 99 (D.44367_99 - 99 )
Partition 100 (D.44387_100 - 100 )
Partition 101 (D.44390_101 - 101 )
Partition 102 (D.44390_102 - 102 )
Partition 104 (b_session.86_104 - 104 )
Partition 105 (b_session.86_105 - 105 )
Partition 106 (changed_106 - 1 2 6 7 11 31 43 68 103 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )
Partition 120 (.MEM_120 - 120 )
Partition 121 (.MEM_121 - 121 )
Partition 122 (.MEM_122 - 122 )
Partition 123 (.MEM_123 - 123 )
Partition 124 (.MEM_124 - 124 )
Partition 125 (.MEM_125 - 125 )
Partition 126 (.MEM_126 - 126 )
Partition 127 (.MEM_127 - 127 )
Partition 128 (.MEM_128 - 128 )
Partition 129 (.MEM_129 - 129 )
Partition 130 (.MEM_130(D) - 130 )
Partition 131 (.MEM_131 - 131 )
Partition 132 (.MEM_132 - 132 )
Partition 133 (.MEM_133 - 133 )
Partition 134 (.MEM_134 - 134 )
Partition 135 (.MEM_135 - 135 )
Partition 136 (.MEM_136 - 136 )
Partition 137 (.MEM_137 - 137 )
Partition 138 (.MEM_138 - 138 )
Partition 139 (.MEM_139 - 139 )
Partition 140 (.MEM_140 - 140 )
Partition 141 (.MEM_141 - 141 )
Partition 142 (.MEM_142 - 142 )
Partition 143 (.MEM_143 - 143 )
Partition 144 (.MEM_144 - 144 )
Partition 145 (.MEM_145 - 145 )
Partition 146 (.MEM_146 - 146 )
Partition 147 (.MEM_147 - 147 )
Partition 148 (.MEM_148 - 148 )
Partition 149 (.MEM_149 - 149 )
Partition 150 (.MEM_150 - 150 )
Partition 151 (.MEM_151 - 151 )
Partition 152 (.MEM_152 - 152 )
Partition 153 (.MEM_153 - 153 )
Partition 154 (.MEM_154 - 154 )
Partition 155 (.MEM_155 - 155 )
Partition 156 (.MEM_156 - 156 )
Partition 157 (.MEM_157 - 157 )
Partition 158 (.MEM_158 - 158 )
Partition 159 (.MEM_159 - 159 )
Partition 160 (.MEM_160 - 160 )
Partition 161 (.MEM_161 - 161 )
Partition 162 (.MEM_162 - 162 )
Partition 163 (.MEM_163 - 163 )
Partition 164 (.MEM_164 - 164 )
Partition 165 (.MEM_165 - 165 )
Partition 166 (.MEM_166 - 166 )
Partition 167 (.MEM_167 - 167 )
Partition 168 (.MEM_168 - 168 )
Partition 169 (.MEM_169 - 169 )
Partition 170 (.MEM_170 - 170 )
Partition 171 (.MEM_171 - 171 )
Partition 172 (.MEM_172 - 172 )
Partition 173 (.MEM_173 - 173 )
Partition 174 (.MEM_174 - 174 )
Partition 175 (.MEM_175 - 175 )
Partition 176 (.MEM_176 - 176 )
Partition 177 (.MEM_177 - 177 )
Partition 178 (.MEM_178 - 178 )
Partition 179 (.MEM_179 - 179 )
Partition 180 (.MEM_180 - 180 )
Partition 181 (.MEM_181 - 181 )
Partition 182 (.MEM_182 - 182 )
Partition 183 (.MEM_183 - 183 )
Partition 184 (.MEM_184 - 184 )
Partition 185 (.MEM_185 - 185 )
Partition 186 (.MEM_186 - 186 )
Partition 187 (.MEM_187 - 187 )
Partition 188 (.MEM_188 - 188 )
Partition 189 (.MEM_189 - 189 )
Partition 190 (.MEM_190 - 190 )
Partition 191 (.MEM_191 - 191 )

Coalesced D.44359_6 to changed_106
Coalesced D.44359_11 to changed_106
Scope blocks after cleanups:

{ Scope block #0 
  int changed;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  struct switch_core_session_t * b_session;
  struct switch_channel_t * b_channel;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_toggle_hold";
  static const char __func__[30] = "switch_core_media_toggle_hold";
  void end = <<< error >>>; (unused)

  { Scope block #0 
    const char * stream;
    const char * msg;
    const char * info;

  }

  { Scope block #0 
    const char * val;

  }

}
switch_core_media_toggle_hold (struct switch_core_session_t * session, int sendonly)
{
  const char * val;
  const char * info;
  const char * msg;
  const char * stream;
  static const char __func__[30] = "switch_core_media_toggle_hold";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_toggle_hold";
  struct switch_channel_t * b_channel;
  struct switch_core_session_t * b_session;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  int changed;
  uint32_t D.44454;
  int D.44453;
  int32_t D.44449;
  uint32_t D.44444;
  uint32_t D.44440;
  uint32_t D.44433;
  char * D.44432;
  uint32_t D.44431;
  uint32_t D.44429;
  uint32_t D.44422;
  uint32_t D.44415;
  char * D.44414;
  char * D.44412;
  int D.44409;
  uint32_t D.44408;
  int D.44404;
  uint32_t D.44393;
  struct switch_rtp_t * D.44390;
  struct switch_rtp_t * D.44387;
  const char * D.44384;
  switch_bool_t sendonly.87;
  uint32_t D.44380;
  uint32_t D.44378;
  uint32_t D.44376;
  uint32_t D.44370;
  uint32_t D.44368;
  struct switch_channel_t * D.44367;
  struct switch_core_session_t * b_session.86;
  switch_status_t D.44360;

<bb 2>:
  changed_7 = 0;
  # DEBUG changed => changed_7
  b_session = 0B;
  b_channel_8 = 0B;
  # DEBUG b_channel => b_channel_8
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 3872, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  changed_11 = 0;
  goto <bb 69>;

<bb 6>:
  a_engine_12 = &smh_10->engines;
  # DEBUG a_engine => a_engine_12
  v_engine_13 = &smh_10->engines[1];
  # DEBUG v_engine => v_engine_13
  D.44360_14 = switch_core_session_perform_get_partner (session_9(D), &b_session, "src/switch_core_media.c", &__func__, 3882);
  if (D.44360_14 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  b_session.86_15 = b_session;
  b_channel_16 = switch_core_session_get_channel (b_session.86_15);
  # DEBUG b_channel => b_channel_16

<bb 8>:
  # b_channel_3 = PHI <b_channel_8(6), b_channel_16(7)>
  # DEBUG b_channel => b_channel_3
  if (sendonly_17(D) != 0)
    goto <bb 9>;
  else
    goto <bb 35>;

<bb 9>:
  D.44367_18 = session_9(D)->channel;
  D.44368_19 = switch_channel_test_flag (D.44367_18, 1);
  if (D.44368_19 != 0)
    goto <bb 10>;
  else
    goto <bb 35>;

<bb 10>:
  D.44367_20 = session_9(D)->channel;
  D.44370_21 = switch_channel_test_flag (D.44367_20, 96);
  if (D.44370_21 == 0)
    goto <bb 11>;
  else
    goto <bb 66> (end);

<bb 11>:
  msg_22 = "hold";
  # DEBUG msg => msg_22
  D.44367_23 = session_9(D)->channel;
  D.44376_24 = switch_channel_test_flag (D.44367_23, 94);
  if (D.44376_24 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:
  D.44367_25 = session_9(D)->channel;
  D.44378_26 = switch_channel_test_flag (D.44367_25, 95);
  if (D.44378_26 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 13>:
  if (b_channel_3 == 0B)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:
  D.44380_27 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44380_27 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.44367_28 = session_9(D)->channel;
  sendonly.87_29 = (switch_bool_t) sendonly_17(D);
  switch_channel_mark_hold (D.44367_28, sendonly.87_29);
  D.44367_30 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_30, 96, 1);
  changed_31 = 0;
  # DEBUG changed => changed_31
  goto <bb 66> (end);

<bb 16>:
  D.44367_32 = session_9(D)->channel;
  info_33 = switch_channel_get_variable_dup (D.44367_32, "presence_call_info", 1, -1);
  # DEBUG info => info_33
  if (info_33 != 0B)
    goto <bb 17>;
  else
    goto <bb 19>;

<bb 17>:
  D.44384_34 = switch_stristr ("private", info_33);
  if (D.44384_34 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  msg_35 = "hold-private";
  # DEBUG msg => msg_35

<bb 19>:
  # msg_5 = PHI <msg_22(16), msg_22(17), msg_35(18)>
  # DEBUG msg => msg_5
  D.44387_36 = a_engine_12->rtp_session;
  if (D.44387_36 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.44387_37 = a_engine_12->rtp_session;
  switch_rtp_set_flag (D.44387_37, 35);

<bb 21>:
  D.44390_38 = v_engine_13->rtp_session;
  if (D.44390_38 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.44390_39 = v_engine_13->rtp_session;
  switch_rtp_set_flag (D.44390_39, 35);

<bb 23>:
  D.44367_40 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_40, 96, 1);
  D.44367_41 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_41, 1);
  D.44367_42 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_42, "unknown", msg_5, 0B, "src/switch_core_media.c", &__func__, 3918);
  changed_43 = 1;
  # DEBUG changed => changed_43
  D.44393_44 = a_engine_12->max_missed_hold_packets;
  if (D.44393_44 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 24>:
  D.44387_45 = a_engine_12->rtp_session;
  if (D.44387_45 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.44387_46 = a_engine_12->rtp_session;
  D.44393_47 = a_engine_12->max_missed_hold_packets;
  switch_rtp_set_max_missed_packets (D.44387_46, D.44393_47);

<bb 26>:
  D.44367_48 = session_9(D)->channel;
  stream_49 = switch_channel_get_hold_music (D.44367_48);
  # DEBUG stream => stream_49
  if (stream_49 == 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  stream_50 = "local_stream://moh";
  # DEBUG stream => stream_50

<bb 28>:
  # stream_4 = PHI <stream_49(26), stream_50(27)>
  # DEBUG stream => stream_4
  if (stream_4 != 0B)
    goto <bb 29>;
  else
    goto <bb 66> (end);

<bb 29>:
  D.44404_51 = strcasecmp (stream_4, "silence");
  if (D.44404_51 != 0)
    goto <bb 30>;
  else
    goto <bb 66> (end);

<bb 30>:
  if (b_channel_3 == 0B)
    goto <bb 32>;
  else
    goto <bb 31>;

<bb 31>:
  D.44408_52 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44408_52 == 0)
    goto <bb 32>;
  else
    goto <bb 66> (end);

<bb 32>:
  D.44409_53 = strcasecmp (stream_4, "indicate_hold");
  if (D.44409_53 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.44367_54 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_54, 16, 1);
  D.44367_55 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_55, 10, 1);
  b_session.86_56 = b_session;
  D.44412_57 = switch_core_session_get_uuid (b_session.86_56);
  switch_ivr_hold_uuid (D.44412_57, 0B, 0);
  goto <bb 66> (end);

<bb 34>:
  b_session.86_58 = b_session;
  D.44414_59 = switch_core_session_get_uuid (b_session.86_58);
  switch_ivr_broadcast (D.44414_59, stream_4, 274);
  switch_sleep (250000);
  goto <bb 66> (end);

<bb 35>:
  D.44367_60 = session_9(D)->channel;
  D.44415_61 = switch_channel_test_flag (D.44367_60, 97);
  if (D.44415_61 != 0)
    goto <bb 36>;
  else
    goto <bb 41>;

<bb 36>:
  D.44367_62 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_62, 96, 1);
  D.44367_63 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_63, 1);
  D.44387_64 = a_engine_12->rtp_session;
  if (D.44387_64 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  D.44387_65 = a_engine_12->rtp_session;
  switch_rtp_set_flag (D.44387_65, 35);

<bb 38>:
  D.44390_66 = v_engine_13->rtp_session;
  if (D.44390_66 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.44390_67 = v_engine_13->rtp_session;
  switch_rtp_set_flag (D.44390_67, 35);

<bb 40>:
  changed_68 = 1;
  # DEBUG changed => changed_68

<bb 41>:
  # changed_1 = PHI <changed_7(35), changed_68(40)>
  # DEBUG changed => changed_1
  D.44367_69 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_69, 97);
  D.44367_70 = session_9(D)->channel;
  D.44422_71 = switch_channel_test_flag (D.44367_70, 96);
  if (D.44422_71 != 0)
    goto <bb 42>;
  else
    goto <bb 66> (end);

<bb 42>:
  switch_sleep (250000);
  if (b_channel_3 != 0B)
    goto <bb 43>;
  else
    goto <bb 46>;

<bb 43>:
  D.44367_72 = session_9(D)->channel;
  D.44429_73 = switch_channel_test_flag (D.44367_72, 120);
  if (D.44429_73 != 0)
    goto <bb 45>;
  else
    goto <bb 44>;

<bb 44>:
  D.44431_74 = switch_channel_test_flag (b_channel_3, 120);
  if (D.44431_74 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.44432_75 = switch_core_session_get_uuid (session_9(D));
  switch_ivr_nomedia (D.44432_75, 1);

<bb 46>:
  D.44433_76 = a_engine_12->max_missed_packets;
  if (D.44433_76 != 0)
    goto <bb 47>;
  else
    goto <bb 49>;

<bb 47>:
  D.44387_77 = a_engine_12->rtp_session;
  if (D.44387_77 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  D.44387_78 = a_engine_12->rtp_session;
  switch_rtp_reset_media_timer (D.44387_78);
  D.44387_79 = a_engine_12->rtp_session;
  D.44433_80 = a_engine_12->max_missed_packets;
  switch_rtp_set_max_missed_packets (D.44387_79, D.44433_80);

<bb 49>:
  if (b_channel_3 != 0B)
    goto <bb 50>;
  else
    goto <bb 55>;

<bb 50>:
  D.44367_81 = session_9(D)->channel;
  D.44440_82 = switch_channel_test_flag (D.44367_81, 10);
  if (D.44440_82 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  b_session.86_83 = b_session;
  switch_ivr_unhold (b_session.86_83);
  D.44367_84 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_84, 16);
  D.44367_85 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_85, 10);
  goto <bb 55>;

<bb 52>:
  D.44444_86 = switch_channel_test_flag (b_channel_3, 21);
  if (D.44444_86 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  switch_channel_set_flag_value (b_channel_3, 28, 1);
  switch_channel_set_flag_value (b_channel_3, 20, 1);

<bb 54>:
  switch_channel_wait_for_flag (b_channel_3, 21, 0, 5000, 0B);

<bb 55>:
  D.44449_87 = switch_media_handle_test_media_flag (smh_10, 10);
  if (D.44449_87 == 0)
    goto <bb 56>;
  else
    goto <bb 63>;

<bb 56>:
  D.44367_88 = session_9(D)->channel;
  val_89 = switch_channel_get_variable_dup (D.44367_88, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_89
  if (val_89 == 0B)
    goto <bb 58>;
  else
    goto <bb 57>;

<bb 57>:
  D.44453_90 = switch_true (val_89);
  if (D.44453_90 == 0)
    goto <bb 58>;
  else
    goto <bb 63>;

<bb 58>:
  D.44367_91 = session_9(D)->channel;
  D.44454_92 = switch_channel_test_flag (D.44367_91, 106);
  if (D.44454_92 == 0)
    goto <bb 59>;
  else
    goto <bb 63>;

<bb 59>:
  D.44387_93 = a_engine_12->rtp_session;
  if (D.44387_93 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.44387_94 = a_engine_12->rtp_session;
  switch_rtp_set_flag (D.44387_94, 7);

<bb 61>:
  D.44390_95 = v_engine_13->rtp_session;
  if (D.44390_95 != 0B)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  D.44390_96 = v_engine_13->rtp_session;
  switch_rtp_set_flag (D.44390_96, 7);

<bb 63>:
  D.44367_97 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_97, 96);
  D.44367_98 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_98, 0);
  D.44367_99 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_99, "unknown", "unhold", 0B, "src/switch_core_media.c", &__func__, 4004);
  D.44387_100 = a_engine_12->rtp_session;
  switch_rtp_clear_flag (D.44387_100, 35);
  D.44390_101 = v_engine_13->rtp_session;
  if (D.44390_101 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  D.44390_102 = v_engine_13->rtp_session;
  switch_rtp_clear_flag (D.44390_102, 35);

<bb 65>:
  changed_103 = 1;
  # DEBUG changed => changed_103

  # changed_2 = PHI <changed_31(15), changed_43(28), changed_1(41), changed_103(65), changed_7(10), changed_43(34), changed_43(33), changed_43(31), changed_43(29)>
end:
  # DEBUG changed => changed_2
  b_session.86_104 = b_session;
  if (b_session.86_104 != 0B)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  b_session.86_105 = b_session;
  switch_core_session_rwunlock (b_session.86_105);

<bb 68>:
  changed_106 = changed_2;

<bb 69>:
  # changed_6 = PHI <changed_11(5), changed_106(68)>
  return changed_6;

}



;; Function switch_core_media_negotiate_sdp (switch_core_media_negotiate_sdp)

Try : D.39007_296(P296) & __result_123(P123) --> P296 __result
Try : iftmp.88_297(P297) & __result_296(P296) --> P296 __result
Try : D.39008_301(P301) & iftmp.88_143(P143) --> P301 D.39008
Try : D.47877_1520(P1520) & D.47879_1467(P1467) --> P1520 D.47877
Try : D.44591_305(P305) & D.47877_1520(P1520) --> P1520 D.47877
Try : D.47881_1522(P1522) & D.47882_1468(P1468) --> P1522 D.47881
Try : dptime_329(P329) & D.47881_1522(P1522) --> P1522 dptime
Try : D.47884_1524(P1524) & D.47885_1469(P1469) --> P1524 D.47884
Try : dmaxptime_333(P333) & D.47884_1524(P1524) --> P1524 dmaxptime
Try : ptime_371(P371) & dptime_37(P37) : 2 different USER vars. No coalesce.
Try : maxptime_372(P372) & dmaxptime_41(P41) : 2 different USER vars. No coalesce.
Try : D.47887_1525(P1525) & D.47889_1471(P1471) --> P1525 D.47887
Try : D.44790_504(P504) & D.47887_1525(P1525) --> P1525 D.47887
Try : D.47891_1527(P1527) & D.47892_1472(P1472) --> P1527 D.47891
Try : D.44798_514(P514) & D.47891_1527(P1527) --> P1527 D.47891
Try : D.47894_1529(P1529) & D.47895_1473(P1473) --> P1529 D.47894
Try : ptime_523(P523) & D.47894_1529(P1529) --> P1529 ptime
Try : D.47897_1531(P1531) & D.47898_1474(P1474) --> P1531 D.47897
Try : maxptime_528(P528) & D.47897_1531(P1531) --> P1531 maxptime
Try : D.47900_1532(P1532) & D.47902_1476(P1476) --> P1532 D.47900
Try : D.44818_532(P532) & D.47900_1532(P1532) --> P1532 D.47900
Try : D.47904_1534(P1534) & D.47905_1477(P1477) --> P1534 D.47904
Try : crypto_tag_545(P545) & D.47904_1534(P1534) --> P1534 crypto_tag
Try : codec_ms_581(P581) & ptime_35(P35) : 2 different USER vars. No coalesce.
Try : codec_ms_585(P585) & maxptime_39(P39) : 2 different USER vars. No coalesce.
Try : csui.173_1478(P1478) & D.44886_591(P591) --> P1478 csui.173
Try : D.47907_1535(P1535) & D.47909_1481(P1481) --> P1535 D.47907
Try : map_bit_rate_592(P592) & D.47907_1535(P1535) --> P1535 map_bit_rate
Try : D.47915_1536(P1536) & D.47917_1483(P1483) --> P1536 D.47915
Try : D.44894_599(P599) & D.47915_1536(P1536) --> P1536 D.47915
Try : D.47919_1537(P1537) & D.47921_1485(P1485) --> P1537 D.47919
Try : D.44935_644(P644) & D.47919_1537(P1537) --> P1537 D.47919
Try : remote_codec_rate_663(P663) & fmtp_remote_codec_rate_99(P99) : 2 different USER vars. No coalesce.
Try : m_idx_719(P719) & nm_idx_718(P718) : 2 different USER vars. No coalesce.
Try : iftmp.95_731(P731) & near_rate_726(P726) --> P731 near_rate
Try : timp_734(P734) & near_match_727(P727) : 2 different USER vars. No coalesce.
Try : D.47923_1539(P1539) & D.47924_1486(P1486) --> P1539 D.47923
Try : iftmp.97_786(P786) & D.47923_1539(P1539) --> P1539 D.47923
Try : D.47926_1540(P1540) & D.47928_1488(P1488) --> P1540 D.47926
Try : D.45081_792(P792) & D.47926_1540(P1540) --> P1540 D.47926
Try : D.47930_1541(P1541) & D.47937_1495(P1495) --> P1541 D.47930
Try : D.45096_821(P821) & D.47930_1541(P1541) --> P1541 D.47930
Try : D.47939_1542(P1542) & D.47941_1497(P1497) --> P1542 D.47939
Try : D.45147_891(P891) & D.47939_1542(P1542) --> P1542 D.47939
Try : D.47943_1543(P1543) & D.47945_1499(P1499) --> P1543 D.47943
Try : D.45158_901(P901) & D.47943_1543(P1543) --> P1543 D.47943
Try : D.39088_948(P948) & __result_140(P140) --> P948 __result
Try : iftmp.98_949(P949) & __result_948(P948) --> P948 __result
Try : D.39089_952(P952) & iftmp.98_147(P147) --> P952 D.39089
Try : D.47947_1545(P1545) & D.47948_1500(P1500) --> P1545 D.47947
Try : D.45213_956(P956) & D.47947_1545(P1545) --> P1545 D.47947
Try : D.47950_1546(P1546) & D.47952_1502(P1502) --> P1546 D.47950
Try : D.45223_964(P964) & D.47950_1546(P1546) --> P1546 D.47950
Try : D.47954_1548(P1548) & D.47955_1503(P1503) --> P1548 D.47954
Try : crypto_tag_977(P977) & D.47954_1548(P1548) --> P1548 crypto_tag
Try : D.47957_1549(P1549) & D.47959_1505(P1505) --> P1549 D.47957
Try : D.45257_998(P998) & D.47957_1549(P1549) --> P1549 D.47957
Try : D.47961_1550(P1550) & D.47968_1512(P1512) --> P1550 D.47961
Try : D.45314_1092(P1092) & D.47961_1550(P1550) --> P1550 D.47961
Try : D.44470_1096(P1096) & match_17(P17) --> P1096 match
Try : pmap_1459(P1459) & pmap_1458(P1458) : Same root, coalesced --> P1459.
Try : pmap_1459(P1459) & pmap_1460(P1460) : Same root, coalesced --> P1459.
Try : pmap_1463(P1463) & pmap_1462(P1462) : Same root, coalesced --> P1463.
Try : pmap_1463(P1463) & pmap_1464(P1464) : Same root, coalesced --> P1463.
Try : greedy_47(P47) & greedy_211(P211) : Same root, coalesced --> P47.
Try : greedy_47(P47) & greedy_216(P216) : Same root, coalesced --> P47.
Try : greedy_47(P47) & greedy_219(P219) : Same root, coalesced --> P47.
Try : greedy_47(P47) & greedy_223(P223) : Same root, coalesced --> P47.
Try : greedy_47(P47) & greedy_211(P47) : Already coalesced.
Try : scrooge_80(P80) & scrooge_213(P213) : Same root, coalesced --> P80.
Try : scrooge_80(P80) & scrooge_217(P217) : Same root, coalesced --> P80.
Try : scrooge_80(P80) & scrooge_220(P220) : Same root, coalesced --> P80.
Try : scrooge_80(P80) & scrooge_222(P222) : Same root, coalesced --> P80.
Try : scrooge_80(P80) & scrooge_213(P80) : Already coalesced.
Try : __result_123(P296) & __result_265(P265) : Same root, coalesced --> P296.
Try : __result_123(P296) & __result_275(P275) : Same root, coalesced --> P296.
Try : __result_123(P296) & __result_285(P285) : Same root, coalesced --> P296.
Try : __result_123(P296) & __result_295(P295) : Same root, coalesced --> P296.
Try : iftmp.88_143(P301) & iftmp.88_297(P296) --> P296 __result
Try : iftmp.88_143(P296) & iftmp.88_300(P300) --> P296 __result
Try : sendonly_42(P42) & sendonly_156(P156) : Same root, coalesced --> P42.
Try : sendonly_42(P42) & sendonly_156(P42) : Already coalesced.
Try : sendonly_42(P42) & sendonly_156(P42) : Already coalesced.
Try : sendonly_42(P42) & sendonly_156(P42) : Already coalesced.
Try : sendonly_42(P42) & sendonly_302(P302) : Same root, coalesced --> P42.
Try : dptime_36(P36) & dptime_37(P37) : Same root, coalesced --> P36.
Try : dptime_36(P36) & dptime_37(P36) : Already coalesced.
Try : dptime_36(P36) & dptime_37(P36) : Already coalesced.
Try : dptime_36(P36) & dptime_37(P36) : Already coalesced.
Try : dptime_36(P36) & dptime_37(P36) : Already coalesced.
Try : dptime_36(P36) & dptime_329(P1522) : Same root, coalesced --> P1522.
Try : dptime_36(P1522) & dptime_37(P1522) : Already coalesced.
Try : dptime_36(P1522) & dptime_37(P1522) : Already coalesced.
Try : dptime_36(P1522) & dptime_37(P1522) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P41) : Same root, coalesced --> P40.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_41(P40) : Already coalesced.
Try : dmaxptime_40(P40) & dmaxptime_333(P1524) : Same root, coalesced --> P1524.
Try : dmaxptime_40(P1524) & dmaxptime_41(P1524) : Already coalesced.
Try : sendonly_43(P43) & sendonly_44(P44) : Same root, coalesced --> P43.
Try : sendonly_43(P43) & sendonly_308(P308) : Same root, coalesced --> P43.
Try : sendonly_43(P43) & sendonly_312(P312) : Same root, coalesced --> P43.
Try : sendonly_43(P43) & sendonly_44(P43) : Already coalesced.
Try : sendonly_43(P43) & sendonly_325(P325) : Same root, coalesced --> P43.
Try : sendonly_43(P43) & sendonly_44(P43) : Already coalesced.
Try : sendonly_43(P43) & sendonly_44(P43) : Already coalesced.
Try : sendonly_43(P43) & sendonly_44(P43) : Already coalesced.
Try : sendonly_43(P43) & sendonly_44(P43) : Already coalesced.
Try : recvonly_45(P45) & recvonly_46(P46) : Same root, coalesced --> P45.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_317(P317) : Same root, coalesced --> P45.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_46(P45) : Already coalesced.
Try : recvonly_45(P45) & recvonly_317(P45) : Already coalesced.
Try : attr_29(P29) & attr_303(P303) : Same root, coalesced --> P29.
Try : attr_29(P29) & attr_334(P334) : Same root, coalesced --> P29.
Try : dptime_37(P1522) & dptime_153(P153) : Same root, coalesced --> P1522.
Try : dptime_37(P1522) & dptime_36(P1522) : Already coalesced.
Try : dmaxptime_41(P1524) & dmaxptime_155(P155) : Same root, coalesced --> P1524.
Try : dmaxptime_41(P1524) & dmaxptime_40(P1524) : Already coalesced.
Try : sendonly_44(P43) & sendonly_42(P42) : Same root, coalesced --> P43.
Try : sendonly_44(P43) & sendonly_43(P43) : Already coalesced.
Try : recvonly_46(P45) & recvonly_157(P157) : Same root, coalesced --> P45.
Try : recvonly_46(P45) & recvonly_45(P45) : Already coalesced.
Try : reneg_81(P81) & reneg_175(P175) : Same root, coalesced --> P81.
Try : reneg_81(P81) & reneg_175(P81) : Already coalesced.
Try : reneg_81(P81) & reneg_175(P81) : Already coalesced.
Try : reneg_81(P81) & reneg_175(P81) : Already coalesced.
Try : reneg_81(P81) & reneg_349(P349) : Same root, coalesced --> P81.
Try : reneg_81(P81) & reneg_352(P352) : Same root, coalesced --> P81.
Try : reneg_82(P82) & reneg_81(P81) : Same root, coalesced --> P81.
Try : reneg_82(P81) & reneg_353(P353) : Same root, coalesced --> P81.
Try : reneg_82(P81) & reneg_356(P356) : Same root, coalesced --> P81.
Try : reneg_83(P83) & reneg_82(P81) : Same root, coalesced --> P81.
Try : reneg_83(P81) & reneg_358(P358) : Same root, coalesced --> P81.
Try : codec_array_84(P84) & codec_array_360(P360) : Same root, coalesced --> P84.
Try : codec_array_84(P84) & codec_array_190(P190) : Same root, coalesced --> P84.
Try : codec_array_84(P84) & codec_array_363(P363) : Same root, coalesced --> P84.
Try : total_codecs_85(P85) & total_codecs_361(P361) : Same root, coalesced --> P85.
Try : total_codecs_85(P85) & total_codecs_192(P192) : Same root, coalesced --> P85.
Try : total_codecs_85(P85) & total_codecs_365(P365) : Same root, coalesced --> P85.
Try : got_webrtc_78(P78) & got_webrtc_79(P79) : Same root, coalesced --> P78.
Try : got_webrtc_78(P78) & got_webrtc_374(P374) : Same root, coalesced --> P78.
Try : got_avp_68(P68) & got_avp_69(P69) : Same root, coalesced --> P68.
Try : got_avp_68(P68) & got_avp_69(P68) : Already coalesced.
Try : got_avp_68(P68) & got_avp_69(P68) : Already coalesced.
Try : got_avp_68(P68) & got_avp_69(P68) : Already coalesced.
Try : got_avp_68(P68) & got_avp_69(P68) : Already coalesced.
Try : got_avp_68(P68) & got_avp_388(P388) : Same root, coalesced --> P68.
Try : got_video_avp_70(P70) & got_video_avp_71(P71) : Same root, coalesced --> P70.
Try : got_video_avp_70(P70) & got_video_avp_389(P389) : Same root, coalesced --> P70.
Try : got_video_avp_70(P70) & got_video_avp_71(P70) : Already coalesced.
Try : got_video_avp_70(P70) & got_video_avp_71(P70) : Already coalesced.
Try : got_video_avp_70(P70) & got_video_avp_71(P70) : Already coalesced.
Try : got_video_avp_70(P70) & got_video_avp_71(P70) : Already coalesced.
Try : got_video_savp_72(P72) & got_video_savp_385(P385) : Same root, coalesced --> P72.
Try : got_video_savp_72(P72) & got_video_savp_73(P73) : Same root, coalesced --> P72.
Try : got_video_savp_72(P72) & got_video_savp_73(P72) : Already coalesced.
Try : got_video_savp_72(P72) & got_video_savp_73(P72) : Already coalesced.
Try : got_video_savp_72(P72) & got_video_savp_73(P72) : Already coalesced.
Try : got_video_savp_72(P72) & got_video_savp_73(P72) : Already coalesced.
Try : got_savp_74(P74) & got_savp_75(P75) : Same root, coalesced --> P74.
Try : got_savp_74(P74) & got_savp_75(P74) : Already coalesced.
Try : got_savp_74(P74) & got_savp_75(P74) : Already coalesced.
Try : got_savp_74(P74) & got_savp_75(P74) : Already coalesced.
Try : got_savp_74(P74) & got_savp_384(P384) : Same root, coalesced --> P74.
Try : got_savp_74(P74) & got_savp_75(P74) : Already coalesced.
Try : got_udptl_76(P76) & got_udptl_77(P77) : Same root, coalesced --> P76.
Try : got_udptl_76(P76) & got_udptl_77(P76) : Already coalesced.
Try : got_udptl_76(P76) & got_udptl_77(P76) : Already coalesced.
Try : got_udptl_76(P76) & got_udptl_391(P391) : Same root, coalesced --> P76.
Try : got_udptl_76(P76) & got_udptl_77(P76) : Already coalesced.
Try : got_udptl_76(P76) & got_udptl_77(P76) : Already coalesced.
Try : pass_126(P126) & pass_406(P406) : Same root, coalesced --> P126.
Try : pass_126(P126) & pass_409(P409) : Same root, coalesced --> P126.
Try : pass_126(P126) & pass_409(P126) : Already coalesced.
Try : pass_126(P126) & pass_411(P411) : Same root, coalesced --> P126.
Try : pass_127(P127) & pass_126(P126) : Same root, coalesced --> P126.
Try : pass_127(P126) & pass_423(P423) : Same root, coalesced --> P126.
Try : got_crypto_50(P50) & got_crypto_51(P51) : Same root, coalesced --> P50.
Try : got_crypto_50(P50) & got_crypto_51(P50) : Already coalesced.
Try : got_crypto_50(P50) & got_crypto_505(P505) : Same root, coalesced --> P50.
Try : attr_30(P30) & attr_500(P500) : Same root, coalesced --> P30.
Try : attr_30(P30) & attr_506(P506) : Same root, coalesced --> P30.
Try : got_crypto_51(P50) & got_crypto_56(P56) : Same root, coalesced --> P50.
Try : got_crypto_51(P50) & got_crypto_50(P50) : Already coalesced.
Try : got_crypto_52(P52) & got_crypto_56(P50) : Same root, coalesced --> P50.
Try : got_crypto_52(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_52(P50) & got_crypto_51(P50) : Already coalesced.
Try : ptime_34(P34) & ptime_35(P35) : Same root, coalesced --> P34.
Try : ptime_34(P34) & ptime_523(P1529) : Same root, coalesced --> P1529.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : ptime_34(P1529) & ptime_35(P1529) : Already coalesced.
Try : maxptime_38(P38) & maxptime_39(P39) : Same root, coalesced --> P38.
Try : maxptime_38(P38) & maxptime_39(P38) : Already coalesced.
Try : maxptime_38(P38) & maxptime_528(P1531) : Same root, coalesced --> P1531.
Try : maxptime_38(P1531) & maxptime_39(P1531) : Already coalesced.
Try : maxptime_38(P1531) & maxptime_39(P1531) : Already coalesced.
Try : maxptime_38(P1531) & maxptime_39(P1531) : Already coalesced.
Try : maxptime_38(P1531) & maxptime_39(P1531) : Already coalesced.
Try : maxptime_38(P1531) & maxptime_39(P1531) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_54(P54) : Same root, coalesced --> P53.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : got_crypto_53(P53) & got_crypto_547(P547) : Same root, coalesced --> P53.
Try : got_crypto_53(P53) & got_crypto_54(P53) : Already coalesced.
Try : attr_31(P31) & attr_507(P507) : Same root, coalesced --> P31.
Try : attr_31(P31) & attr_548(P548) : Same root, coalesced --> P31.
Try : ptime_35(P1529) & ptime_371(P371) : Same root, coalesced --> P1529.
Try : ptime_35(P1529) & ptime_34(P1529) : Already coalesced.
Try : maxptime_39(P1531) & maxptime_372(P372) : Same root, coalesced --> P1531.
Try : maxptime_39(P1531) & maxptime_38(P1531) : Already coalesced.
Try : got_crypto_54(P53) & got_crypto_52(P50) : Same root, coalesced --> P50.
Try : got_crypto_54(P50) & got_crypto_53(P50) : Already coalesced.
Try : connection_124(P124) & connection_554(P554) : Same root, coalesced --> P124.
Try : connection_124(P124) & connection_556(P556) : Same root, coalesced --> P124.
Try : rm_encoding_130(P130) & rm_encoding_561(P561) : Same root, coalesced --> P130.
Try : rm_encoding_130(P130) & rm_encoding_562(P562) : Same root, coalesced --> P130.
Try : best_te_18(P18) & best_te_20(P20) : Same root, coalesced --> P18.
Try : best_te_18(P18) & best_te_568(P568) : Same root, coalesced --> P18.
Try : codec_ms_86(P86) & codec_ms_581(P581) : Same root, coalesced --> P86.
Try : codec_ms_86(P86) & codec_ms_581(P86) : Already coalesced.
Try : codec_ms_86(P86) & codec_ms_585(P585) : Same root, coalesced --> P86.
Try : codec_ms_87(P87) & codec_ms_86(P86) : Same root, coalesced --> P86.
Try : codec_ms_87(P86) & codec_ms_589(P589) : Same root, coalesced --> P86.
Try : D.47909_1481(P1535) & D.47909_1479(P1479) --> P1535 map_bit_rate
Try : D.47909_1481(P1535) & D.47909_1480(P1480) --> P1535 map_bit_rate
Try : codec_ms_88(P88) & codec_ms_87(P86) : Same root, coalesced --> P86.
Try : codec_ms_88(P86) & codec_ms_87(P86) : Already coalesced.
Try : codec_ms_88(P86) & codec_ms_595(P595) : Same root, coalesced --> P86.
Try : map_bit_rate_131(P131) & map_bit_rate_592(P1535) : Same root, coalesced --> P1535.
Try : map_bit_rate_131(P1535) & map_bit_rate_615(P615) : Same root, coalesced --> P1535.
Try : codec_ms_89(P89) & codec_ms_88(P86) : Same root, coalesced --> P86.
Try : codec_ms_89(P86) & codec_ms_618(P618) : Same root, coalesced --> P86.
Try : codec_ms_90(P90) & codec_ms_606(P606) : Same root, coalesced --> P90.
Try : codec_ms_90(P90) & codec_ms_88(P86) : Same root, coalesced --> P86.
Try : codec_ms_90(P86) & codec_ms_89(P86) : Already coalesced.
Try : codec_ms_90(P86) & codec_ms_89(P86) : Already coalesced.
Try : codec_ms_90(P86) & codec_ms_602(P602) : Same root, coalesced --> P86.
Try : codec_ms_90(P86) & codec_ms_88(P86) : Already coalesced.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_597(P597) : Same root, coalesced --> P99.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_597(P99) : Already coalesced.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_597(P99) : Already coalesced.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_620(P620) : Same root, coalesced --> P99.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_597(P99) : Already coalesced.
Try : fmtp_remote_codec_rate_99(P99) & fmtp_remote_codec_rate_597(P99) : Already coalesced.
Try : map_bit_rate_132(P132) & map_bit_rate_607(P607) : Same root, coalesced --> P132.
Try : map_bit_rate_132(P132) & map_bit_rate_592(P1535) : Same root, coalesced --> P1535.
Try : map_bit_rate_132(P1535) & map_bit_rate_131(P1535) : Already coalesced.
Try : map_bit_rate_132(P1535) & map_bit_rate_131(P1535) : Already coalesced.
Try : map_bit_rate_132(P1535) & map_bit_rate_603(P603) : Same root, coalesced --> P1535.
Try : map_bit_rate_132(P1535) & map_bit_rate_608(P608) : Same root, coalesced --> P1535.
Try : iftmp.93_144(P144) & iftmp.93_660(P660) : Same root, coalesced --> P144.
Try : iftmp.93_144(P144) & iftmp.93_661(P661) : Same root, coalesced --> P144.
Try : match_1(P1) & match_656(P656) : Same root, coalesced --> P1.
Try : match_1(P1) & match_662(P662) : Same root, coalesced --> P1.
Try : match_1(P1) & match_662(P1) : Already coalesced.
Try : remote_codec_rate_96(P96) & remote_codec_rate_98(P98) : Same root, coalesced --> P96.
Try : remote_codec_rate_96(P96) & remote_codec_rate_98(P96) : Already coalesced.
Try : remote_codec_rate_96(P96) & remote_codec_rate_663(P663) : Same root, coalesced --> P96.
Try : match_2(P2) & match_1(P1) : Same root, coalesced --> P1.
Try : match_2(P1) & match_1(P1) : Already coalesced.
Try : match_2(P1) & match_1(P1) : Already coalesced.
Try : match_2(P1) & match_1(P1) : Already coalesced.
Try : match_2(P1) & match_674(P674) : Same root, coalesced --> P1.
Try : match_3(P3) & match_2(P1) : Same root, coalesced --> P1.
Try : match_3(P1) & match_2(P1) : Already coalesced.
Try : match_3(P1) & match_2(P1) : Already coalesced.
Try : match_3(P1) & match_685(P685) : Same root, coalesced --> P1.
Try : match_4(P4) & match_5(P5) : Same root, coalesced --> P4.
Try : match_4(P4) & match_3(P1) : Same root, coalesced --> P1.
Try : match_4(P1) & match_695(P695) : Same root, coalesced --> P1.
Try : match_4(P1) & match_710(P710) : Same root, coalesced --> P1.
Try : remote_codec_rate_97(P97) & remote_codec_rate_98(P96) : Same root, coalesced --> P96.
Try : remote_codec_rate_97(P96) & remote_codec_rate_96(P96) : Already coalesced.
Try : remote_codec_rate_97(P96) & remote_codec_rate_96(P96) : Already coalesced.
Try : remote_codec_rate_97(P96) & remote_codec_rate_96(P96) : Already coalesced.
Try : m_idx_100(P100) & m_idx_101(P101) : Same root, coalesced --> P100.
Try : m_idx_100(P100) & m_idx_101(P100) : Already coalesced.
Try : m_idx_100(P100) & m_idx_101(P100) : Already coalesced.
Try : m_idx_100(P100) & m_idx_704(P704) : Same root, coalesced --> P100.
Try : nm_idx_115(P115) & nm_idx_116(P116) : Same root, coalesced --> P115.
Try : nm_idx_115(P115) & nm_idx_116(P115) : Already coalesced.
Try : nm_idx_115(P115) & nm_idx_702(P702) : Same root, coalesced --> P115.
Try : nm_idx_115(P115) & nm_idx_116(P115) : Already coalesced.
Try : match_5(P1) & match_8(P8) : Same root, coalesced --> P1.
Try : match_5(P1) & match_4(P1) : Already coalesced.
Try : remote_codec_rate_98(P96) & remote_codec_rate_596(P596) : Same root, coalesced --> P96.
Try : remote_codec_rate_98(P96) & remote_codec_rate_97(P96) : Already coalesced.
Try : m_idx_101(P100) & m_idx_104(P104) : Same root, coalesced --> P100.
Try : m_idx_101(P100) & m_idx_100(P100) : Already coalesced.
Try : nm_idx_116(P115) & nm_idx_118(P118) : Same root, coalesced --> P115.
Try : nm_idx_116(P115) & nm_idx_115(P115) : Already coalesced.
Try : i_129(P129) & i_621(P621) : Same root, coalesced --> P129.
Try : i_129(P129) & i_711(P711) : Same root, coalesced --> P129.
Try : match_6(P6) & match_3(P1) : Same root, coalesced --> P1.
Try : match_6(P1) & match_5(P1) : Already coalesced.
Try : m_idx_102(P102) & m_idx_704(P100) : Same root, coalesced --> P100.
Try : m_idx_102(P100) & m_idx_101(P100) : Already coalesced.
Try : match_7(P7) & match_8(P1) : Same root, coalesced --> P1.
Try : match_7(P1) & match_8(P1) : Already coalesced.
Try : match_7(P1) & match_8(P1) : Already coalesced.
Try : match_7(P1) & match_8(P1) : Already coalesced.
Try : match_7(P1) & match_6(P1) : Already coalesced.
Try : best_te_19(P19) & best_te_18(P18) : Same root, coalesced --> P18.
Try : best_te_19(P18) & best_te_20(P18) : Already coalesced.
Try : best_te_19(P18) & best_te_20(P18) : Already coalesced.
Try : best_te_19(P18) & best_te_20(P18) : Already coalesced.
Try : best_te_19(P18) & best_te_20(P18) : Already coalesced.
Try : cng_pt_24(P24) & cng_pt_25(P25) : Same root, coalesced --> P24.
Try : cng_pt_24(P24) & cng_pt_573(P573) : Same root, coalesced --> P24.
Try : cng_pt_24(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_24(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_24(P24) & cng_pt_25(P24) : Already coalesced.
Try : x_48(P48) & x_49(P49) : Same root, coalesced --> P48.
Try : x_48(P48) & x_49(P48) : Already coalesced.
Try : x_48(P48) & x_580(P580) : Same root, coalesced --> P48.
Try : x_48(P48) & x_580(P48) : Already coalesced.
Try : x_48(P48) & x_580(P48) : Already coalesced.
Try : codec_ms_91(P91) & codec_ms_92(P92) : Same root, coalesced --> P91.
Try : codec_ms_91(P91) & codec_ms_92(P91) : Already coalesced.
Try : codec_ms_91(P91) & codec_ms_92(P91) : Already coalesced.
Try : codec_ms_91(P91) & codec_ms_92(P91) : Already coalesced.
Try : codec_ms_91(P91) & codec_ms_90(P86) : Same root, coalesced --> P86.
Try : m_idx_103(P103) & m_idx_104(P100) : Same root, coalesced --> P100.
Try : m_idx_103(P100) & m_idx_104(P100) : Already coalesced.
Try : m_idx_103(P100) & m_idx_104(P100) : Already coalesced.
Try : m_idx_103(P100) & m_idx_104(P100) : Already coalesced.
Try : m_idx_103(P100) & m_idx_102(P100) : Already coalesced.
Try : nm_idx_117(P117) & nm_idx_118(P115) : Same root, coalesced --> P115.
Try : nm_idx_117(P115) & nm_idx_118(P115) : Already coalesced.
Try : nm_idx_117(P115) & nm_idx_118(P115) : Already coalesced.
Try : nm_idx_117(P115) & nm_idx_118(P115) : Already coalesced.
Try : nm_idx_117(P115) & nm_idx_116(P115) : Already coalesced.
Try : match_8(P1) & match_16(P16) : Same root, coalesced --> P1.
Try : match_8(P1) & match_7(P1) : Already coalesced.
Try : best_te_20(P18) & best_te_23(P23) : Same root, coalesced --> P18.
Try : best_te_20(P18) & best_te_19(P18) : Already coalesced.
Try : cng_pt_25(P24) & cng_pt_27(P27) : Same root, coalesced --> P24.
Try : cng_pt_25(P24) & cng_pt_24(P24) : Already coalesced.
Try : x_49(P48) & x_558(P558) : Same root, coalesced --> P48.
Try : x_49(P48) & x_48(P48) : Already coalesced.
Try : codec_ms_92(P86) & codec_ms_95(P95) : Same root, coalesced --> P86.
Try : codec_ms_92(P86) & codec_ms_91(P86) : Already coalesced.
Try : m_idx_104(P100) & m_idx_114(P114) : Same root, coalesced --> P100.
Try : m_idx_104(P100) & m_idx_103(P100) : Already coalesced.
Try : nm_idx_118(P115) & nm_idx_122(P122) : Same root, coalesced --> P115.
Try : nm_idx_118(P115) & nm_idx_117(P115) : Already coalesced.
Try : map_128(P128) & map_559(P559) : Same root, coalesced --> P128.
Try : map_128(P128) & map_712(P712) : Same root, coalesced --> P128.
Try : match_9(P9) & match_6(P1) : Same root, coalesced --> P1.
Try : match_9(P1) & match_8(P1) : Already coalesced.
Try : codec_ms_93(P93) & codec_ms_90(P86) : Same root, coalesced --> P86.
Try : codec_ms_93(P86) & codec_ms_92(P86) : Already coalesced.
Try : m_idx_105(P105) & m_idx_102(P100) : Same root, coalesced --> P100.
Try : m_idx_105(P100) & m_idx_104(P100) : Already coalesced.
Try : nm_idx_119(P119) & nm_idx_116(P115) : Same root, coalesced --> P115.
Try : nm_idx_119(P115) & nm_idx_118(P115) : Already coalesced.
Try : match_10(P10) & match_9(P1) : Same root, coalesced --> P1.
Try : match_10(P1) & match_717(P717) : Same root, coalesced --> P1.
Try : m_idx_106(P106) & m_idx_105(P100) : Same root, coalesced --> P100.
Try : m_idx_106(P100) & m_idx_719(P719) : Same root, coalesced --> P100.
Try : nm_idx_120(P120) & nm_idx_119(P115) : Same root, coalesced --> P115.
Try : nm_idx_120(P115) & nm_idx_718(P718) : Same root, coalesced --> P115.
Try : iftmp.95_145(P145) & iftmp.95_730(P730) : Same root, coalesced --> P145.
Try : iftmp.95_145(P145) & near_rate_731(P731) --> P145 near_rate
Try : timp_134(P134) & timp_733(P733) : Same root, coalesced --> P134.
Try : timp_134(P134) & timp_734(P734) : Same root, coalesced --> P134.
Try : j_133(P133) & j_723(P723) : Same root, coalesced --> P133.
Try : j_133(P133) & j_737(P737) : Same root, coalesced --> P133.
Try : match_11(P11) & match_10(P1) : Same root, coalesced --> P1.
Try : match_11(P1) & match_742(P742) : Same root, coalesced --> P1.
Try : match_11(P1) & match_10(P1) : Already coalesced.
Try : m_idx_107(P107) & m_idx_106(P100) : Same root, coalesced --> P100.
Try : m_idx_107(P100) & m_idx_745(P745) : Same root, coalesced --> P100.
Try : m_idx_107(P100) & m_idx_106(P100) : Already coalesced.
Try : iftmp.97_146(P146) & iftmp.97_786(P1539) --> P1539 D.47923
Try : iftmp.97_146(P1539) & iftmp.97_787(P787) --> P1539 D.47923
Try : j_135(P135) & j_747(P747) : Same root, coalesced --> P135.
Try : j_135(P135) & j_808(P808) : Same root, coalesced --> P135.
Try : match_12(P12) & match_11(P1) : Same root, coalesced --> P1.
Try : match_12(P1) & match_746(P746) : Same root, coalesced --> P1.
Try : match_13(P13) & match_12(P1) : Same root, coalesced --> P1.
Try : match_13(P1) & match_12(P1) : Already coalesced.
Try : match_13(P1) & match_826(P826) : Same root, coalesced --> P1.
Try : got_audio_65(P65) & got_audio_67(P67) : Same root, coalesced --> P65.
Try : got_audio_65(P65) & got_audio_825(P825) : Same root, coalesced --> P65.
Try : got_audio_65(P65) & got_audio_67(P65) : Already coalesced.
Try : best_te_21(P21) & best_te_20(P18) : Same root, coalesced --> P18.
Try : best_te_21(P18) & best_te_20(P18) : Already coalesced.
Try : best_te_21(P18) & best_te_834(P834) : Same root, coalesced --> P18.
Try : connection_125(P125) & connection_880(P880) : Same root, coalesced --> P125.
Try : connection_125(P125) & connection_882(P882) : Same root, coalesced --> P125.
Try : got_video_crypto_57(P57) & got_video_crypto_58(P58) : Same root, coalesced --> P57.
Try : got_video_crypto_57(P57) & got_video_crypto_58(P57) : Already coalesced.
Try : got_video_crypto_57(P57) & got_video_crypto_892(P892) : Same root, coalesced --> P57.
Try : attr_32(P32) & attr_887(P887) : Same root, coalesced --> P32.
Try : attr_32(P32) & attr_893(P893) : Same root, coalesced --> P32.
Try : got_video_crypto_58(P57) & got_video_crypto_62(P62) : Same root, coalesced --> P57.
Try : got_video_crypto_58(P57) & got_video_crypto_57(P57) : Already coalesced.
Try : got_video_crypto_59(P59) & got_video_crypto_62(P57) : Same root, coalesced --> P57.
Try : got_video_crypto_59(P57) & got_video_crypto_62(P57) : Already coalesced.
Try : got_video_crypto_59(P57) & got_video_crypto_58(P57) : Already coalesced.
Try : __result_140(P948) & __result_917(P917) : Same root, coalesced --> P948.
Try : __result_140(P948) & __result_927(P927) : Same root, coalesced --> P948.
Try : __result_140(P948) & __result_937(P937) : Same root, coalesced --> P948.
Try : __result_140(P948) & __result_947(P947) : Same root, coalesced --> P948.
Try : iftmp.98_147(P952) & iftmp.98_949(P948) --> P948 __result
Try : iftmp.98_147(P948) & iftmp.98_951(P951) --> P948 __result
Try : got_video_crypto_60(P60) & got_video_crypto_61(P61) : Same root, coalesced --> P60.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_978(P978) : Same root, coalesced --> P60.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : got_video_crypto_60(P60) & got_video_crypto_61(P60) : Already coalesced.
Try : attr_33(P33) & attr_894(P894) : Same root, coalesced --> P33.
Try : attr_33(P33) & attr_979(P979) : Same root, coalesced --> P33.
Try : got_video_crypto_61(P60) & got_video_crypto_59(P57) : Same root, coalesced --> P57.
Try : got_video_crypto_61(P57) & got_video_crypto_60(P57) : Already coalesced.
Try : rm_encoding_137(P137) & rm_encoding_980(P980) : Same root, coalesced --> P137.
Try : rm_encoding_137(P137) & rm_encoding_981(P981) : Same root, coalesced --> P137.
Try : vmatch_138(P138) & vmatch_1010(P1010) : Same root, coalesced --> P138.
Try : vmatch_138(P138) & vmatch_1013(P1013) : Same root, coalesced --> P138.
Try : m_idx_108(P108) & m_idx_110(P110) : Same root, coalesced --> P108.
Try : m_idx_108(P108) & m_idx_110(P108) : Already coalesced.
Try : m_idx_108(P108) & m_idx_1019(P1019) : Same root, coalesced --> P108.
Try : m_idx_109(P109) & m_idx_110(P108) : Same root, coalesced --> P108.
Try : m_idx_109(P108) & m_idx_110(P108) : Already coalesced.
Try : m_idx_109(P108) & m_idx_108(P108) : Already coalesced.
Try : m_idx_110(P108) & m_idx_111(P111) : Same root, coalesced --> P108.
Try : m_idx_110(P108) & m_idx_109(P108) : Already coalesced.
Try : i_139(P139) & i_982(P982) : Same root, coalesced --> P139.
Try : i_139(P139) & i_1021(P1021) : Same root, coalesced --> P139.
Try : got_video_crypto_62(P57) & got_video_crypto_64(P64) : Same root, coalesced --> P57.
Try : got_video_crypto_62(P57) & got_video_crypto_61(P57) : Already coalesced.
Try : m_idx_111(P108) & m_idx_878(P878) : Same root, coalesced --> P108.
Try : m_idx_111(P108) & m_idx_110(P108) : Already coalesced.
Try : map_136(P136) & map_884(P884) : Same root, coalesced --> P136.
Try : map_136(P136) & map_1022(P1022) : Same root, coalesced --> P136.
Try : m_idx_112(P112) & m_idx_111(P108) : Same root, coalesced --> P108.
Try : m_idx_112(P108) & m_idx_1028(P1028) : Same root, coalesced --> P108.
Try : j_141(P141) & j_1031(P1031) : Same root, coalesced --> P141.
Try : j_141(P141) & j_1068(P1068) : Same root, coalesced --> P141.
Try : match_14(P14) & match_16(P1) : Same root, coalesced --> P1.
Try : match_14(P1) & match_1090(P1090) : Same root, coalesced --> P1.
Try : match_15(P15) & match_13(P1) : Same root, coalesced --> P1.
Try : match_15(P1) & match_16(P1) : Already coalesced.
Try : match_15(P1) & match_16(P1) : Already coalesced.
Try : match_15(P1) & match_16(P1) : Already coalesced.
Try : match_15(P1) & match_14(P1) : Already coalesced.
Try : match_15(P1) & match_14(P1) : Already coalesced.
Try : match_15(P1) & match_13(P1) : Already coalesced.
Try : match_15(P1) & match_13(P1) : Already coalesced.
Try : match_15(P1) & match_13(P1) : Already coalesced.
Try : match_15(P1) & match_13(P1) : Already coalesced.
Try : match_15(P1) & match_13(P1) : Already coalesced.
Try : best_te_22(P22) & best_te_21(P18) : Same root, coalesced --> P18.
Try : best_te_22(P18) & best_te_23(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_23(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_23(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_23(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_23(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_21(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_21(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_21(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_21(P18) : Already coalesced.
Try : best_te_22(P18) & best_te_21(P18) : Already coalesced.
Try : cng_pt_26(P26) & cng_pt_25(P24) : Same root, coalesced --> P24.
Try : cng_pt_26(P24) & cng_pt_27(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_27(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_27(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_27(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_27(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_25(P24) : Already coalesced.
Try : cng_pt_26(P24) & cng_pt_25(P24) : Already coalesced.
Try : got_crypto_55(P55) & got_crypto_54(P50) : Same root, coalesced --> P50.
Try : got_crypto_55(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_56(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_54(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_54(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_54(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_54(P50) : Already coalesced.
Try : got_crypto_55(P50) & got_crypto_54(P50) : Already coalesced.
Try : got_video_crypto_63(P63) & got_video_crypto_64(P57) : Same root, coalesced --> P57.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_62(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_62(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_62(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_video_crypto_63(P57) & got_video_crypto_64(P57) : Already coalesced.
Try : got_audio_66(P66) & got_audio_65(P65) : Same root, coalesced --> P65.
Try : got_audio_66(P65) & got_audio_67(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_67(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_67(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_67(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_67(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_65(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_65(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_65(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_65(P65) : Already coalesced.
Try : got_audio_66(P65) & got_audio_65(P65) : Already coalesced.
Try : codec_ms_94(P94) & codec_ms_93(P86) : Same root, coalesced --> P86.
Try : codec_ms_94(P86) & codec_ms_95(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_95(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_95(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_95(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_95(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_93(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_93(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_93(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_93(P86) : Already coalesced.
Try : codec_ms_94(P86) & codec_ms_93(P86) : Already coalesced.
Try : m_idx_113(P113) & m_idx_107(P100) : Same root, coalesced --> P100.
Try : m_idx_113(P100) & m_idx_114(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_114(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_112(P108) : Same root, coalesced --> P100.
Try : m_idx_113(P100) & m_idx_112(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_112(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_107(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_107(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_107(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_107(P100) : Already coalesced.
Try : m_idx_113(P100) & m_idx_107(P100) : Already coalesced.
Try : nm_idx_121(P121) & nm_idx_120(P115) : Same root, coalesced --> P115.
Try : nm_idx_121(P115) & nm_idx_122(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_122(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_877(P877) : Same root, coalesced --> P115.
Try : nm_idx_121(P115) & nm_idx_877(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_877(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_120(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_120(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_120(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_120(P115) : Already coalesced.
Try : nm_idx_121(P115) & nm_idx_120(P115) : Already coalesced.
Try : match_16(P1) & match_148(P148) : Same root, coalesced --> P1.
Try : match_16(P1) & match_15(P1) : Already coalesced.
Try : best_te_23(P18) & best_te_149(P149) : Same root, coalesced --> P18.
Try : best_te_23(P18) & best_te_22(P18) : Already coalesced.
Try : cng_pt_27(P24) & cng_pt_151(P151) : Same root, coalesced --> P24.
Try : cng_pt_27(P24) & cng_pt_26(P24) : Already coalesced.
Try : m_28(P28) & m_370(P370) : Same root, coalesced --> P28.
Try : m_28(P28) & m_1094(P1094) : Same root, coalesced --> P28.
Try : got_crypto_56(P50) & got_crypto_164(P164) : Same root, coalesced --> P50.
Try : got_crypto_56(P50) & got_crypto_55(P50) : Already coalesced.
Try : got_video_crypto_64(P57) & got_video_crypto_165(P165) : Same root, coalesced --> P57.
Try : got_video_crypto_64(P57) & got_video_crypto_63(P57) : Already coalesced.
Try : got_audio_67(P65) & got_audio_166(P166) : Same root, coalesced --> P65.
Try : got_audio_67(P65) & got_audio_66(P65) : Already coalesced.
Try : got_avp_69(P68) & got_avp_167(P167) : Same root, coalesced --> P68.
Try : got_avp_69(P68) & got_avp_68(P68) : Already coalesced.
Try : got_video_avp_71(P70) & got_video_avp_168(P168) : Same root, coalesced --> P70.
Try : got_video_avp_71(P70) & got_video_avp_70(P70) : Already coalesced.
Try : got_video_savp_73(P72) & got_video_savp_169(P169) : Same root, coalesced --> P72.
Try : got_video_savp_73(P72) & got_video_savp_72(P72) : Already coalesced.
Try : got_savp_75(P74) & got_savp_170(P170) : Same root, coalesced --> P74.
Try : got_savp_75(P74) & got_savp_74(P74) : Already coalesced.
Try : got_udptl_77(P76) & got_udptl_171(P171) : Same root, coalesced --> P76.
Try : got_udptl_77(P76) & got_udptl_76(P76) : Already coalesced.
Try : got_webrtc_79(P78) & got_webrtc_172(P172) : Same root, coalesced --> P78.
Try : got_webrtc_79(P78) & got_webrtc_78(P78) : Already coalesced.
Try : codec_ms_95(P86) & codec_ms_181(P181) : Same root, coalesced --> P86.
Try : codec_ms_95(P86) & codec_ms_94(P86) : Already coalesced.
Try : m_idx_114(P100) & m_idx_184(P184) : Same root, coalesced --> P100.
Try : m_idx_114(P100) & m_idx_113(P100) : Already coalesced.
Try : nm_idx_122(P115) & nm_idx_185(P185) : Same root, coalesced --> P115.
Try : nm_idx_122(P115) & nm_idx_121(P115) : Already coalesced.
Try : match_17(P1096) & match_397(P397) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_401(P401) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_437(P437) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_492(P492) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_543(P543) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_553(P553) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_557(P557) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_883(P883) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_975(P975) : Same root, coalesced --> P1096.
Try : match_17(P1096) & match_16(P1) : Same root, coalesced --> P1.
Try : D.44470_142(P142) & D.44470_187(P187) : Same root, coalesced --> P142.
Try : D.44470_142(P142) & D.44470_197(P197) : Same root, coalesced --> P142.
Try : D.44470_142(P142) & D.44470_199(P199) : Same root, coalesced --> P142.
Try : D.44470_142(P142) & match_1096(P1) --> P1 match

Partition map 

Partition 1 (match_1 - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 142 148 187 197 199 397 401 437 492 543 553 557 656 662 674 685 695 710 717 742 746 826 883 975 1090 1096 )
Partition 18 (best_te_18 - 18 19 20 21 22 23 149 568 834 )
Partition 24 (cng_pt_24 - 24 25 26 27 151 573 )
Partition 28 (m_28 - 28 370 1094 )
Partition 29 (attr_29 - 29 303 334 )
Partition 30 (attr_30 - 30 500 506 )
Partition 31 (attr_31 - 31 507 548 )
Partition 32 (attr_32 - 32 887 893 )
Partition 33 (attr_33 - 33 894 979 )
Partition 43 (sendonly_43 - 42 43 44 156 302 308 312 325 )
Partition 45 (recvonly_45 - 45 46 157 317 )
Partition 47 (greedy_47 - 47 211 216 219 223 )
Partition 48 (x_48 - 48 49 558 580 )
Partition 50 (got_crypto_50 - 50 51 52 53 54 55 56 164 505 547 )
Partition 57 (got_video_crypto_57 - 57 58 59 60 61 62 63 64 165 892 978 )
Partition 65 (got_audio_65 - 65 66 67 166 825 )
Partition 68 (got_avp_68 - 68 69 167 388 )
Partition 70 (got_video_avp_70 - 70 71 168 389 )
Partition 72 (got_video_savp_72 - 72 73 169 385 )
Partition 74 (got_savp_74 - 74 75 170 384 )
Partition 76 (got_udptl_76 - 76 77 171 391 )
Partition 78 (got_webrtc_78 - 78 79 172 374 )
Partition 80 (scrooge_80 - 80 213 217 220 222 )
Partition 81 (reneg_81 - 81 82 83 175 349 352 353 356 358 )
Partition 84 (codec_array_84 - 84 190 360 363 )
Partition 85 (total_codecs_85 - 85 192 361 365 )
Partition 86 (codec_ms_86 - 86 87 88 89 90 91 92 93 94 95 181 581 585 589 595 602 606 618 )
Partition 96 (remote_codec_rate_96 - 96 97 98 596 663 )
Partition 99 (fmtp_remote_codec_rate_99 - 99 597 620 )
Partition 100 (m_idx_100 - 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 184 704 719 745 878 1019 1028 )
Partition 115 (nm_idx_115 - 115 116 117 118 119 120 121 122 185 702 718 877 )
Partition 124 (connection_124 - 124 554 556 )
Partition 125 (connection_125 - 125 880 882 )
Partition 126 (pass_126 - 126 127 406 409 411 423 )
Partition 128 (map_128 - 128 559 712 )
Partition 129 (i_129 - 129 621 711 )
Partition 130 (rm_encoding_130 - 130 561 562 )
Partition 133 (j_133 - 133 723 737 )
Partition 134 (timp_134 - 134 733 734 )
Partition 135 (j_135 - 135 747 808 )
Partition 136 (map_136 - 136 884 1022 )
Partition 137 (rm_encoding_137 - 137 980 981 )
Partition 138 (vmatch_138 - 138 1010 1013 )
Partition 139 (i_139 - 139 982 1021 )
Partition 141 (j_141 - 141 1031 1068 )
Partition 144 (iftmp.93_144 - 144 660 661 )
Partition 145 (near_rate_145 - 145 726 730 731 )
Partition 150 (te_150 - 150 )
Partition 152 (ptime_152 - 152 )
Partition 154 (maxptime_154 - 154 )
Partition 158 (greedy_158 - 158 )
Partition 159 (x_159 - 159 )
Partition 160 (skip_160 - 160 )
Partition 161 (session_161(D) - 161 )
Partition 162 (channel_162 - 162 )
Partition 163 (crypto_163 - 163 )
Partition 173 (scrooge_173 - 173 )
Partition 174 (parser_174 - 174 )
Partition 176 (near_rate_176 - 176 )
Partition 177 (mimp_177 - 177 )
Partition 178 (near_match_178 - 178 )
Partition 179 (mmap_179 - 179 )
Partition 180 (near_map_180 - 180 )
Partition 182 (remote_codec_rate_182 - 182 )
Partition 183 (fmtp_remote_codec_rate_183 - 183 )
Partition 186 (smh_186 - 186 )
Partition 188 (a_engine_188 - 188 )
Partition 189 (v_engine_189 - 189 )
Partition 191 (D.44471_191 - 191 )
Partition 193 (r_sdp_193(D) - 193 )
Partition 194 (D.44472_194 - 194 )
Partition 195 (D.44473_195 - 195 )
Partition 196 (parser_196 - 196 )
Partition 198 (sdp_198 - 198 )
Partition 200 (D.44478_200 - 200 )
Partition 201 (D.44481_201 - 201 )
Partition 202 (D.44482_202 - 202 )
Partition 203 (tmp_203 - 203 )
Partition 204 (D.44485_204 - 204 )
Partition 205 (D.44481_205 - 205 )
Partition 206 (D.44482_206 - 206 )
Partition 207 (D.44481_207 - 207 )
Partition 208 (D.44482_208 - 208 )
Partition 209 (proceed_209(D) - 209 )
Partition 210 (D.44490_210 - 210 )
Partition 212 (D.44491_212 - 212 )
Partition 214 (val_214 - 214 )
Partition 215 (D.44494_215 - 215 )
Partition 218 (D.44498_218 - 218 )
Partition 221 (D.44502_221 - 221 )
Partition 224 (D.44506_224 - 224 )
Partition 225 (D.44507_225 - 225 )
Partition 226 (D.44508_226 - 226 )
Partition 227 (D.44509_227 - 227 )
Partition 228 (D.44471_228 - 228 )
Partition 229 (D.44512_229 - 229 )
Partition 230 (D.44513_230 - 230 )
Partition 231 (D.44514_231 - 231 )
Partition 232 (D.44515_232 - 232 )
Partition 233 (D.44509_233 - 233 )
Partition 234 (D.44518_234 - 234 )
Partition 235 (D.44521_235 - 235 )
Partition 236 (D.44522_236 - 236 )
Partition 237 (D.44471_237 - 237 )
Partition 238 (D.44512_238 - 238 )
Partition 239 (D.44523_239 - 239 )
Partition 240 (D.44509_240 - 240 )
Partition 241 (D.44526_241 - 241 )
Partition 242 (D.44521_242 - 242 )
Partition 243 (D.44529_243 - 243 )
Partition 244 (D.44530_244 - 244 )
Partition 245 (val_245 - 245 )
Partition 246 (D.44533_246 - 246 )
Partition 247 (D.44530_247 - 247 )
Partition 248 (m_248 - 248 )
Partition 249 (D.44540_249 - 249 )
Partition 250 (D.44541_250 - 250 )
Partition 251 (D.44542_251 - 251 )
Partition 252 (D.44543_252 - 252 )
Partition 253 (D.44544_253 - 253 )
Partition 254 (D.44546_254 - 254 )
Partition 255 (D.44546_255 - 255 )
Partition 256 (D.44548_256 - 256 )
Partition 257 (__s2_len_257 - 257 )
Partition 258 (D.44546_258 - 258 )
Partition 259 (__s1_259 - 259 )
Partition 260 (D.44553_260 - 260 )
Partition 261 (D.44554_261 - 261 )
Partition 262 (D.44555_262 - 262 )
Partition 263 (D.44556_263 - 263 )
Partition 264 (D.44557_264 - 264 )
Partition 266 (D.44558_266 - 266 )
Partition 267 (D.44559_267 - 267 )
Partition 268 (D.44560_268 - 268 )
Partition 269 (D.44563_269 - 269 )
Partition 270 (D.44564_270 - 270 )
Partition 271 (D.44565_271 - 271 )
Partition 272 (D.44566_272 - 272 )
Partition 273 (D.44567_273 - 273 )
Partition 274 (D.44568_274 - 274 )
Partition 276 (D.44569_276 - 276 )
Partition 277 (D.44559_277 - 277 )
Partition 278 (D.44570_278 - 278 )
Partition 279 (D.44573_279 - 279 )
Partition 280 (D.44574_280 - 280 )
Partition 281 (D.44575_281 - 281 )
Partition 282 (D.44576_282 - 282 )
Partition 283 (D.44577_283 - 283 )
Partition 284 (D.44578_284 - 284 )
Partition 286 (D.44579_286 - 286 )
Partition 287 (D.44559_287 - 287 )
Partition 288 (D.44580_288 - 288 )
Partition 289 (D.44583_289 - 289 )
Partition 290 (D.44584_290 - 290 )
Partition 291 (D.44585_291 - 291 )
Partition 292 (D.44586_292 - 292 )
Partition 293 (D.44587_293 - 293 )
Partition 294 (D.44588_294 - 294 )
Partition 296 (__result_296 - 123 143 265 275 285 295 296 297 300 301 )
Partition 298 (D.44546_298 - 298 )
Partition 299 (D.44548_299 - 299 )
Partition 304 (D.44590_304 - 304 )
Partition 306 (D.44590_306 - 306 )
Partition 307 (D.44594_307 - 307 )
Partition 309 (D.44530_309 - 309 )
Partition 310 (D.44590_310 - 310 )
Partition 311 (D.44598_311 - 311 )
Partition 313 (D.44530_313 - 313 )
Partition 314 (D.44590_314 - 314 )
Partition 315 (D.44602_315 - 315 )
Partition 316 (D.44530_316 - 316 )
Partition 318 (D.44605_318 - 318 )
Partition 319 (D.44606_319 - 319 )
Partition 320 (D.44605_320 - 320 )
Partition 321 (D.44530_321 - 321 )
Partition 322 (D.44530_322 - 322 )
Partition 323 (D.44590_323 - 323 )
Partition 324 (D.44614_324 - 324 )
Partition 326 (D.44590_326 - 326 )
Partition 327 (D.44616_327 - 327 )
Partition 328 (D.44619_328 - 328 )
Partition 330 (D.44590_330 - 330 )
Partition 331 (D.44621_331 - 331 )
Partition 332 (D.44619_332 - 332 )
Partition 335 (D.44624_335 - 335 )
Partition 336 (D.44625_336 - 336 )
Partition 337 (D.44626_337 - 337 )
Partition 338 (D.44530_338 - 338 )
Partition 339 (D.44631_339 - 339 )
Partition 340 (D.44530_340 - 340 )
Partition 341 (val_341 - 341 )
Partition 342 (D.44635_342 - 342 )
Partition 343 (D.44471_343 - 343 )
Partition 344 (D.44636_344 - 344 )
Partition 345 (D.44471_345 - 345 )
Partition 346 (D.44636_346 - 346 )
Partition 347 (D.44639_347 - 347 )
Partition 348 (D.44640_348 - 348 )
Partition 350 (D.44530_350 - 350 )
Partition 351 (val_351 - 351 )
Partition 354 (D.44530_354 - 354 )
Partition 355 (val_355 - 355 )
Partition 357 (D.44649_357 - 357 )
Partition 359 (D.44655_359 - 359 )
Partition 362 (D.44471_362 - 362 )
Partition 364 (D.44471_364 - 364 )
Partition 366 (D.44661_366 - 366 )
Partition 367 (D.44663_367 - 367 )
Partition 368 (D.44665_368 - 368 )
Partition 369 (D.44530_369 - 369 )
Partition 373 (D.44666_373 - 373 )
Partition 375 (D.44669_375 - 375 )
Partition 376 (D.44669_376 - 376 )
Partition 377 (D.44672_377 - 377 )
Partition 378 (D.44530_378 - 378 )
Partition 379 (D.44675_379 - 379 )
Partition 380 (D.44676_380 - 380 )
Partition 381 (D.44677_381 - 381 )
Partition 382 (D.44678_382 - 382 )
Partition 383 (D.44681_383 - 383 )
Partition 386 (D.44666_386 - 386 )
Partition 387 (D.44681_387 - 387 )
Partition 390 (D.44666_390 - 390 )
Partition 392 (D.44681_392 - 392 )
Partition 393 (D.44697_393 - 393 )
Partition 394 (t38_options_394 - 394 )
Partition 395 (D.44530_395 - 395 )
Partition 396 (D.44699_396 - 396 )
Partition 398 (D.44702_398 - 398 )
Partition 399 (D.44703_399 - 399 )
Partition 400 (D.44530_400 - 400 )
Partition 402 (var_402 - 402 )
Partition 403 (D.44481_403 - 403 )
Partition 404 (D.44482_404 - 404 )
Partition 405 (D.44706_405 - 405 )
Partition 407 (D.44530_407 - 407 )
Partition 408 (D.44707_408 - 408 )
Partition 410 (D.44716_410 - 410 )
Partition 412 (D.44481_412 - 412 )
Partition 413 (D.44482_413 - 413 )
Partition 414 (D.44723_414 - 414 )
Partition 415 (D.44530_415 - 415 )
Partition 416 (D.44724_416 - 416 )
Partition 417 (D.44530_417 - 417 )
Partition 418 (D.44726_418 - 418 )
Partition 419 (D.44530_419 - 419 )
Partition 420 (D.44728_420 - 420 )
Partition 421 (D.44605_421 - 421 )
Partition 422 (D.44730_422 - 422 )
Partition 424 (D.44733_424 - 424 )
Partition 425 (other_session.89_425 - 425 )
Partition 426 (other_channel_426 - 426 )
Partition 427 (D.44605_427 - 427 )
Partition 428 (remote_host_428 - 428 )
Partition 429 (D.44605_429 - 429 )
Partition 430 (remote_port_430 - 430 )
Partition 431 (D.44737_431 - 431 )
Partition 432 (D.44530_432 - 432 )
Partition 433 (D.44740_433 - 433 )
Partition 434 (D.44741_434 - 434 )
Partition 435 (other_session.89_435 - 435 )
Partition 436 (pass_436 - 436 )
Partition 438 (D.44530_438 - 438 )
Partition 439 (D.44742_439 - 439 )
Partition 440 (D.44743_440 - 440 )
Partition 441 (D.44530_441 - 441 )
Partition 442 (D.44746_442 - 442 )
Partition 443 (D.44747_443 - 443 )
Partition 444 (D.44750_444 - 444 )
Partition 445 (D.44751_445 - 445 )
Partition 446 (D.44752_446 - 446 )
Partition 447 (D.44750_447 - 447 )
Partition 448 (D.44753_448 - 448 )
Partition 449 (D.44756_449 - 449 )
Partition 450 (D.44757_450 - 450 )
Partition 451 (D.44758_451 - 451 )
Partition 452 (D.44750_452 - 452 )
Partition 453 (D.44760_453 - 453 )
Partition 454 (D.39032_454 - 454 )
Partition 455 (D.44750_455 - 455 )
Partition 456 (D.44762_456 - 456 )
Partition 457 (D.44530_457 - 457 )
Partition 458 (D.44764_458 - 458 )
Partition 459 (D.44530_459 - 459 )
Partition 460 (D.44765_460 - 460 )
Partition 461 (D.44766_461 - 461 )
Partition 462 (D.44750_462 - 462 )
Partition 463 (D.44760_463 - 463 )
Partition 464 (D.44750_464 - 464 )
Partition 465 (D.44762_465 - 465 )
Partition 466 (D.44767_466 - 466 )
Partition 467 (D.44750_467 - 467 )
Partition 468 (D.44762_468 - 468 )
Partition 469 (D.44767_469 - 469 )
Partition 470 (D.44530_470 - 470 )
Partition 471 (D.44750_471 - 471 )
Partition 472 (D.44760_472 - 472 )
Partition 473 (D.44530_473 - 473 )
Partition 474 (D.44605_474 - 474 )
Partition 475 (D.44750_475 - 475 )
Partition 476 (D.44760_476 - 476 )
Partition 477 (D.44750_477 - 477 )
Partition 478 (D.44762_478 - 478 )
Partition 479 (D.44768_479 - 479 )
Partition 480 (err.90_480 - 480 )
Partition 481 (other_session.89_481 - 481 )
Partition 482 (D.44481_482 - 482 )
Partition 483 (D.44482_483 - 483 )
Partition 484 (other_session.89_484 - 484 )
Partition 485 (D.44772_485 - 485 )
Partition 486 (other_session.89_486 - 486 )
Partition 487 (msg_487 - 487 )
Partition 488 (other_session.89_488 - 488 )
Partition 489 (D.44773_489 - 489 )
Partition 490 (other_session.89_490 - 490 )
Partition 491 (other_session.89_491 - 491 )
Partition 493 (D.44681_493 - 493 )
Partition 494 (D.44697_494 - 494 )
Partition 495 (D.44777_495 - 495 )
Partition 496 (D.44778_496 - 496 )
Partition 497 (D.44779_497 - 497 )
Partition 498 (D.44781_498 - 498 )
Partition 499 (D.44784_499 - 499 )
Partition 501 (D.44590_501 - 501 )
Partition 502 (D.44787_502 - 502 )
Partition 503 (D.44619_503 - 503 )
Partition 508 (D.44590_508 - 508 )
Partition 509 (D.44795_509 - 509 )
Partition 510 (D.44619_510 - 510 )
Partition 511 (D.44530_511 - 511 )
Partition 512 (D.44619_512 - 512 )
Partition 513 (D.44619_513 - 513 )
Partition 515 (D.44799_515 - 515 )
Partition 516 (D.44471_516 - 516 )
Partition 517 (D.44800_517 - 517 )
Partition 518 (D.44471_518 - 518 )
Partition 519 (D.44590_519 - 519 )
Partition 520 (D.44805_520 - 520 )
Partition 521 (D.44619_521 - 521 )
Partition 522 (D.44619_522 - 522 )
Partition 524 (D.44590_524 - 524 )
Partition 525 (D.44810_525 - 525 )
Partition 526 (D.44619_526 - 526 )
Partition 527 (D.44619_527 - 527 )
Partition 529 (D.44590_529 - 529 )
Partition 530 (D.44815_530 - 530 )
Partition 531 (D.44619_531 - 531 )
Partition 533 (D.44471_533 - 533 )
Partition 534 (D.44821_534 - 534 )
Partition 535 (D.44822_535 - 535 )
Partition 536 (D.44530_536 - 536 )
Partition 537 (D.44825_537 - 537 )
Partition 538 (D.44826_538 - 538 )
Partition 539 (D.44666_539 - 539 )
Partition 540 (D.44829_540 - 540 )
Partition 541 (D.44830_541 - 541 )
Partition 542 (D.44831_542 - 542 )
Partition 544 (crypto_544 - 544 )
Partition 546 (sdp_type_546(D) - 546 )
Partition 549 (D.44834_549 - 549 )
Partition 550 (D.44835_550 - 550 )
Partition 551 (D.44836_551 - 551 )
Partition 552 (D.44839_552 - 552 )
Partition 555 (D.44546_555 - 555 )
Partition 560 (map_bit_rate_560 - 560 )
Partition 563 (D.44848_563 - 563 )
Partition 564 (D.44854_564 - 564 )
Partition 565 (D.44750_565 - 565 )
Partition 566 (D.44855_566 - 566 )
Partition 567 (D.44856_567 - 567 )
Partition 569 (D.44857_569 - 569 )
Partition 570 (D.44858_570 - 570 )
Partition 571 (D.44863_571 - 571 )
Partition 572 (D.44856_572 - 572 )
Partition 574 (D.44605_574 - 574 )
Partition 575 (D.44868_575 - 575 )
Partition 576 (D.44605_576 - 576 )
Partition 577 (D.44471_577 - 577 )
Partition 578 (D.44869_578 - 578 )
Partition 579 (D.44870_579 - 579 )
Partition 582 (D.44877_582 - 582 )
Partition 583 (D.44878_583 - 583 )
Partition 584 (D.44879_584 - 584 )
Partition 586 (D.44856_586 - 586 )
Partition 587 (D.44884_587 - 587 )
Partition 588 (D.44885_588 - 588 )
Partition 590 (D.44856_590 - 590 )
Partition 593 (D.44889_593 - 593 )
Partition 594 (D.44890_594 - 594 )
Partition 598 (D.44893_598 - 598 )
Partition 600 (D.44889_600 - 600 )
Partition 601 (D.44897_601 - 601 )
Partition 604 (D.44889_604 - 604 )
Partition 605 (D.44901_605 - 605 )
Partition 609 (D.44889_609 - 609 )
Partition 610 (D.44893_610 - 610 )
Partition 611 (D.44854_611 - 611 )
Partition 612 (D.44906_612 - 612 )
Partition 613 (D.44909_613 - 613 )
Partition 614 (D.44909_614 - 614 )
Partition 616 (D.44912_616 - 616 )
Partition 617 (D.44912_617 - 617 )
Partition 619 (D.44915_619 - 619 )
Partition 622 (D.44471_622 - 622 )
Partition 623 (D.44997_623 - 623 )
Partition 624 (D.44998_624 - 624 )
Partition 625 (D.44999_625 - 625 )
Partition 626 (D.45000_626 - 626 )
Partition 627 (i.91_627 - 627 )
Partition 628 (D.44919_628 - 628 )
Partition 629 (D.44920_629 - 629 )
Partition 630 (imp_630 - 630 )
Partition 631 (D.44921_631 - 631 )
Partition 632 (bit_rate_632 - 632 )
Partition 633 (codec_rate_633 - 633 )
Partition 634 (D.44922_634 - 634 )
Partition 635 (D.44856_635 - 635 )
Partition 636 (D.44925_636 - 636 )
Partition 637 (remote_codec_rate.92_637 - 637 )
Partition 638 (D.44927_638 - 638 )
Partition 639 (D.44928_639 - 639 )
Partition 640 (D.44929_640 - 640 )
Partition 641 (D.44930_641 - 641 )
Partition 642 (D.44931_642 - 642 )
Partition 643 (D.44889_643 - 643 )
Partition 645 (D.44471_645 - 645 )
Partition 646 (D.44821_646 - 646 )
Partition 647 (D.44937_647 - 647 )
Partition 648 (D.44938_648 - 648 )
Partition 649 (D.44939_649 - 649 )
Partition 650 (D.44856_650 - 650 )
Partition 651 (D.44925_651 - 651 )
Partition 652 (D.44856_652 - 652 )
Partition 653 (D.44925_653 - 653 )
Partition 654 (D.44928_654 - 654 )
Partition 655 (D.44929_655 - 655 )
Partition 657 (D.44927_657 - 657 )
Partition 658 (D.44945_658 - 658 )
Partition 659 (D.44948_659 - 659 )
Partition 664 (D.44951_664 - 664 )
Partition 665 (D.44952_665 - 665 )
Partition 666 (D.44953_666 - 666 )
Partition 667 (D.44956_667 - 667 )
Partition 668 (D.44957_668 - 668 )
Partition 669 (D.44958_669 - 669 )
Partition 670 (D.44889_670 - 670 )
Partition 671 (D.44961_671 - 671 )
Partition 672 (D.44889_672 - 672 )
Partition 673 (D.44964_673 - 673 )
Partition 675 (D.44951_675 - 675 )
Partition 676 (D.44969_676 - 676 )
Partition 677 (D.44970_677 - 677 )
Partition 678 (D.44973_678 - 678 )
Partition 679 (D.44974_679 - 679 )
Partition 680 (D.44975_680 - 680 )
Partition 681 (D.44889_681 - 681 )
Partition 682 (D.44978_682 - 682 )
Partition 683 (D.44889_683 - 683 )
Partition 684 (D.44980_684 - 684 )
Partition 686 (D.44927_686 - 686 )
Partition 687 (D.44985_687 - 687 )
Partition 688 (D.44930_688 - 688 )
Partition 689 (D.44931_689 - 689 )
Partition 690 (D.44990_690 - 690 )
Partition 691 (D.44991_691 - 691 )
Partition 692 (D.44992_692 - 692 )
Partition 693 (D.44994_693 - 693 )
Partition 694 (D.44930_694 - 694 )
Partition 696 (D.44927_696 - 696 )
Partition 697 (D.44928_697 - 697 )
Partition 698 (D.44929_698 - 698 )
Partition 699 (D.44930_699 - 699 )
Partition 700 (D.44931_700 - 700 )
Partition 701 (remote_codec_rate.92_701 - 701 )
Partition 703 (codec_rate.94_703 - 703 )
Partition 705 (D.44927_705 - 705 )
Partition 706 (D.44928_706 - 706 )
Partition 707 (D.44929_707 - 707 )
Partition 708 (D.44930_708 - 708 )
Partition 709 (D.44931_709 - 709 )
Partition 713 (D.45002_713 - 713 )
Partition 714 (D.45003_714 - 714 )
Partition 715 (D.45004_715 - 715 )
Partition 716 (D.45005_716 - 716 )
Partition 720 (D.45008_720 - 720 )
Partition 721 (D.45009_721 - 721 )
Partition 722 (D.45010_722 - 722 )
Partition 724 (timp_724 - 724 )
Partition 725 (D.45013_725 - 725 )
Partition 727 (near_match_727 - 727 )
Partition 728 (near_map_728 - 728 )
Partition 729 (D.45014_729 - 729 )
Partition 732 (num_732 - 732 )
Partition 735 (D.45025_735 - 735 )
Partition 736 (D.45026_736 - 736 )
Partition 738 (D.45027_738 - 738 )
Partition 739 (D.45025_739 - 739 )
Partition 740 (D.45026_740 - 740 )
Partition 741 (D.45028_741 - 741 )
Partition 743 (D.45029_743 - 743 )
Partition 744 (near_rate.96_744 - 744 )
Partition 748 (D.45035_748 - 748 )
Partition 749 (D.45036_749 - 749 )
Partition 750 (D.45035_750 - 750 )
Partition 751 (D.45037_751 - 751 )
Partition 752 (D.45035_752 - 752 )
Partition 753 (D.45038_753 - 753 )
Partition 754 (D.45039_754 - 754 )
Partition 755 (D.45040_755 - 755 )
Partition 756 (D.45041_756 - 756 )
Partition 757 (D.45040_757 - 757 )
Partition 758 (D.45042_758 - 758 )
Partition 759 (D.45043_759 - 759 )
Partition 760 (D.45044_760 - 760 )
Partition 761 (pmap_761 - 761 )
Partition 762 (mimp_762 - 762 )
Partition 763 (mmap_763 - 763 )
Partition 764 (D.44750_764 - 764 )
Partition 765 (D.44605_765 - 765 )
Partition 766 (D.44605_766 - 766 )
Partition 767 (D.45049_767 - 767 )
Partition 768 (D.45050_768 - 768 )
Partition 769 (D.45051_769 - 769 )
Partition 770 (D.45052_770 - 770 )
Partition 771 (D.45053_771 - 771 )
Partition 772 (D.45054_772 - 772 )
Partition 773 (D.45055_773 - 773 )
Partition 774 (D.45056_774 - 774 )
Partition 775 (D.45056_775 - 775 )
Partition 776 (D.45052_776 - 776 )
Partition 777 (D.45057_777 - 777 )
Partition 778 (D.45060_778 - 778 )
Partition 779 (D.45061_779 - 779 )
Partition 780 (D.45062_780 - 780 )
Partition 781 (D.45063_781 - 781 )
Partition 782 (D.45064_782 - 782 )
Partition 783 (D.45065_783 - 783 )
Partition 784 (D.45067_784 - 784 )
Partition 785 (D.45067_785 - 785 )
Partition 788 (D.45050_788 - 788 )
Partition 789 (D.45071_789 - 789 )
Partition 790 (D.45074_790 - 790 )
Partition 791 (D.45080_791 - 791 )
Partition 793 (D.45080_793 - 793 )
Partition 794 (D.45083_794 - 794 )
Partition 795 (D.45074_795 - 795 )
Partition 796 (D.45086_796 - 796 )
Partition 797 (D.45087_797 - 797 )
Partition 798 (D.44697_798 - 798 )
Partition 799 (D.45088_799 - 799 )
Partition 800 (D.45080_800 - 800 )
Partition 801 (D.45089_801 - 801 )
Partition 802 (D.45054_802 - 802 )
Partition 803 (D.45055_803 - 803 )
Partition 804 (D.44655_804 - 804 )
Partition 805 (D.45090_805 - 805 )
Partition 806 (D.45054_806 - 806 )
Partition 807 (D.45055_807 - 807 )
Partition 809 (D.44750_809 - 809 )
Partition 810 (D.44762_810 - 810 )
Partition 811 (D.44767_811 - 811 )
Partition 812 (D.44530_812 - 812 )
Partition 813 (D.44750_813 - 813 )
Partition 814 (D.44760_814 - 814 )
Partition 815 (D.44530_815 - 815 )
Partition 816 (D.44750_816 - 816 )
Partition 817 (D.45093_817 - 817 )
Partition 818 (D.45094_818 - 818 )
Partition 819 (D.44530_819 - 819 )
Partition 820 (D.45095_820 - 820 )
Partition 822 (D.44471_822 - 822 )
Partition 823 (D.45099_823 - 823 )
Partition 824 (D.45100_824 - 824 )
Partition 827 (D.45108_827 - 827 )
Partition 828 (D.44530_828 - 828 )
Partition 829 (D.45110_829 - 829 )
Partition 830 (D.44471_830 - 830 )
Partition 831 (D.45111_831 - 831 )
Partition 832 (D.45112_832 - 832 )
Partition 833 (D.44471_833 - 833 )
Partition 835 (D.45115_835 - 835 )
Partition 836 (D.44471_836 - 836 )
Partition 837 (te_837 - 837 )
Partition 838 (D.44857_838 - 838 )
Partition 839 (D.44530_839 - 839 )
Partition 840 (D.44471_840 - 840 )
Partition 841 (D.44605_841 - 841 )
Partition 842 (D.44605_842 - 842 )
Partition 843 (D.44530_843 - 843 )
Partition 844 (D.44857_844 - 844 )
Partition 845 (D.44471_845 - 845 )
Partition 846 (D.44471_846 - 846 )
Partition 847 (D.45111_847 - 847 )
Partition 848 (te_848 - 848 )
Partition 849 (D.45121_849 - 849 )
Partition 850 (D.44530_850 - 850 )
Partition 851 (D.44471_851 - 851 )
Partition 852 (D.44605_852 - 852 )
Partition 853 (D.44605_853 - 853 )
Partition 854 (D.44530_854 - 854 )
Partition 855 (D.45121_855 - 855 )
Partition 856 (D.44605_856 - 856 )
Partition 857 (D.44530_857 - 857 )
Partition 858 (D.45121_858 - 858 )
Partition 859 (D.45125_859 - 859 )
Partition 860 (D.45126_860 - 860 )
Partition 861 (D.44530_861 - 861 )
Partition 862 (D.44471_862 - 862 )
Partition 863 (D.44471_863 - 863 )
Partition 864 (D.44471_864 - 864 )
Partition 865 (D.45111_865 - 865 )
Partition 866 (te_866 - 866 )
Partition 867 (D.44530_867 - 867 )
Partition 868 (D.44471_868 - 868 )
Partition 869 (D.44471_869 - 869 )
Partition 870 (D.44471_870 - 870 )
Partition 871 (D.45111_871 - 871 )
Partition 872 (te_872 - 872 )
Partition 873 (D.44681_873 - 873 )
Partition 874 (D.44697_874 - 874 )
Partition 875 (mimp_875 - 875 )
Partition 876 (vmatch_876 - 876 )
Partition 879 (D.44530_879 - 879 )
Partition 881 (D.44546_881 - 881 )
Partition 885 (D.45138_885 - 885 )
Partition 886 (D.45141_886 - 886 )
Partition 888 (D.44590_888 - 888 )
Partition 889 (D.45144_889 - 889 )
Partition 890 (D.44619_890 - 890 )
Partition 895 (D.44590_895 - 895 )
Partition 896 (D.45152_896 - 896 )
Partition 897 (D.44619_897 - 897 )
Partition 898 (D.44590_898 - 898 )
Partition 899 (D.45155_899 - 899 )
Partition 900 (D.44619_900 - 900 )
Partition 902 (D.44619_902 - 902 )
Partition 903 (D.45161_903 - 903 )
Partition 904 (D.45164_904 - 904 )
Partition 905 (D.45165_905 - 905 )
Partition 906 (D.44471_906 - 906 )
Partition 907 (D.44590_907 - 907 )
Partition 908 (D.45169_908 - 908 )
Partition 909 (D.44619_909 - 909 )
Partition 910 (__s2_len_910 - 910 )
Partition 911 (__s1_911 - 911 )
Partition 912 (D.45175_912 - 912 )
Partition 913 (D.45176_913 - 913 )
Partition 914 (D.45177_914 - 914 )
Partition 915 (D.45178_915 - 915 )
Partition 916 (D.45179_916 - 916 )
Partition 918 (D.45180_918 - 918 )
Partition 919 (D.45181_919 - 919 )
Partition 920 (D.45182_920 - 920 )
Partition 921 (D.45185_921 - 921 )
Partition 922 (D.45186_922 - 922 )
Partition 923 (D.45187_923 - 923 )
Partition 924 (D.45188_924 - 924 )
Partition 925 (D.45189_925 - 925 )
Partition 926 (D.45190_926 - 926 )
Partition 928 (D.45191_928 - 928 )
Partition 929 (D.45181_929 - 929 )
Partition 930 (D.45192_930 - 930 )
Partition 931 (D.45195_931 - 931 )
Partition 932 (D.45196_932 - 932 )
Partition 933 (D.45197_933 - 933 )
Partition 934 (D.45198_934 - 934 )
Partition 935 (D.45199_935 - 935 )
Partition 936 (D.45200_936 - 936 )
Partition 938 (D.45201_938 - 938 )
Partition 939 (D.45181_939 - 939 )
Partition 940 (D.45202_940 - 940 )
Partition 941 (D.45205_941 - 941 )
Partition 942 (D.45206_942 - 942 )
Partition 943 (D.45207_943 - 943 )
Partition 944 (D.45208_944 - 944 )
Partition 945 (D.45209_945 - 945 )
Partition 946 (D.45210_946 - 946 )
Partition 948 (__result_948 - 140 147 917 927 937 947 948 949 951 952 )
Partition 950 (D.44619_950 - 950 )
Partition 953 (D.44530_953 - 953 )
Partition 954 (D.44619_954 - 954 )
Partition 955 (D.44619_955 - 955 )
Partition 957 (D.45214_957 - 957 )
Partition 958 (D.44471_958 - 958 )
Partition 959 (D.45215_959 - 959 )
Partition 960 (D.44471_960 - 960 )
Partition 961 (D.44590_961 - 961 )
Partition 962 (D.45220_962 - 962 )
Partition 963 (D.44619_963 - 963 )
Partition 965 (D.44471_965 - 965 )
Partition 966 (D.44821_966 - 966 )
Partition 967 (D.44822_967 - 967 )
Partition 968 (D.44530_968 - 968 )
Partition 969 (D.45228_969 - 969 )
Partition 970 (D.45229_970 - 970 )
Partition 971 (D.44666_971 - 971 )
Partition 972 (D.44829_972 - 972 )
Partition 973 (D.44830_973 - 973 )
Partition 974 (D.44831_974 - 974 )
Partition 976 (crypto_976 - 976 )
Partition 983 (i.99_983 - 983 )
Partition 984 (D.45237_984 - 984 )
Partition 985 (D.45238_985 - 985 )
Partition 986 (imp_986 - 986 )
Partition 987 (D.45239_987 - 987 )
Partition 988 (D.44530_988 - 988 )
Partition 989 (D.45242_989 - 989 )
Partition 990 (D.44530_990 - 990 )
Partition 991 (D.45245_991 - 991 )
Partition 992 (D.45248_992 - 992 )
Partition 993 (D.45249_993 - 993 )
Partition 994 (D.45250_994 - 994 )
Partition 995 (D.45251_995 - 995 )
Partition 996 (D.45252_996 - 996 )
Partition 997 (D.45256_997 - 997 )
Partition 999 (D.44471_999 - 999 )
Partition 1000 (D.44821_1000 - 1000 )
Partition 1001 (D.44937_1001 - 1001 )
Partition 1002 (D.44938_1002 - 1002 )
Partition 1003 (D.44939_1003 - 1003 )
Partition 1004 (D.45248_1004 - 1004 )
Partition 1005 (D.45249_1005 - 1005 )
Partition 1006 (D.45248_1006 - 1006 )
Partition 1007 (D.45249_1007 - 1007 )
Partition 1008 (D.45251_1008 - 1008 )
Partition 1009 (D.45252_1009 - 1009 )
Partition 1011 (D.45250_1011 - 1011 )
Partition 1012 (D.45260_1012 - 1012 )
Partition 1014 (D.45263_1014 - 1014 )
Partition 1015 (D.45264_1015 - 1015 )
Partition 1016 (D.45250_1016 - 1016 )
Partition 1017 (D.45251_1017 - 1017 )
Partition 1018 (D.45252_1018 - 1018 )
Partition 1020 (vmatch_1020 - 1020 )
Partition 1023 (D.45002_1023 - 1023 )
Partition 1024 (D.45003_1024 - 1024 )
Partition 1025 (D.45267_1025 - 1025 )
Partition 1026 (D.45268_1026 - 1026 )
Partition 1027 (vmatch_1027 - 1027 )
Partition 1029 (j_1029 - 1029 )
Partition 1030 (vmatch_1030 - 1030 )
Partition 1032 (D.45275_1032 - 1032 )
Partition 1033 (D.45276_1033 - 1033 )
Partition 1034 (D.45275_1034 - 1034 )
Partition 1035 (D.45277_1035 - 1035 )
Partition 1036 (D.45275_1036 - 1036 )
Partition 1037 (D.45278_1037 - 1037 )
Partition 1038 (D.45279_1038 - 1038 )
Partition 1039 (D.45280_1039 - 1039 )
Partition 1040 (D.45281_1040 - 1040 )
Partition 1041 (D.45280_1041 - 1041 )
Partition 1042 (D.45282_1042 - 1042 )
Partition 1043 (D.45283_1043 - 1043 )
Partition 1044 (D.45284_1044 - 1044 )
Partition 1045 (pmap_1045 - 1045 )
Partition 1046 (D.45287_1046 - 1046 )
Partition 1047 (D.45288_1047 - 1047 )
Partition 1048 (D.45288_1048 - 1048 )
Partition 1049 (D.45291_1049 - 1049 )
Partition 1050 (mimp_1050 - 1050 )
Partition 1051 (map_1051 - 1051 )
Partition 1052 (D.45256_1052 - 1052 )
Partition 1053 (D.45292_1053 - 1053 )
Partition 1054 (D.45248_1054 - 1054 )
Partition 1055 (D.45293_1055 - 1055 )
Partition 1056 (D.45263_1056 - 1056 )
Partition 1057 (D.45294_1057 - 1057 )
Partition 1058 (D.45295_1058 - 1058 )
Partition 1059 (D.45296_1059 - 1059 )
Partition 1060 (D.45086_1060 - 1060 )
Partition 1061 (D.45297_1061 - 1061 )
Partition 1062 (D.44697_1062 - 1062 )
Partition 1063 (D.45088_1063 - 1063 )
Partition 1064 (D.45298_1064 - 1064 )
Partition 1065 (D.45299_1065 - 1065 )
Partition 1066 (D.45248_1066 - 1066 )
Partition 1067 (D.45293_1067 - 1067 )
Partition 1069 (D.45287_1069 - 1069 )
Partition 1070 (D.45300_1070 - 1070 )
Partition 1071 (D.45301_1071 - 1071 )
Partition 1072 (D.44530_1072 - 1072 )
Partition 1073 (D.45287_1073 - 1073 )
Partition 1074 (D.45302_1074 - 1074 )
Partition 1075 (D.44530_1075 - 1075 )
Partition 1076 (D.44530_1076 - 1076 )
Partition 1077 (D.45287_1077 - 1077 )
Partition 1078 (D.45303_1078 - 1078 )
Partition 1079 (D.45287_1079 - 1079 )
Partition 1080 (D.45304_1080 - 1080 )
Partition 1081 (D.45305_1081 - 1081 )
Partition 1082 (D.44530_1082 - 1082 )
Partition 1083 (D.45287_1083 - 1083 )
Partition 1084 (D.45306_1084 - 1084 )
Partition 1085 (D.45307_1085 - 1085 )
Partition 1086 (D.44530_1086 - 1086 )
Partition 1087 (D.45308_1087 - 1087 )
Partition 1088 (D.45309_1088 - 1088 )
Partition 1089 (D.45310_1089 - 1089 )
Partition 1091 (D.45313_1091 - 1091 )
Partition 1093 (D.45317_1093 - 1093 )
Partition 1095 (D.44471_1095 - 1095 )
Partition 1097 (.MEM_1097 - 1097 )
Partition 1098 (.MEM_1098 - 1098 )
Partition 1099 (.MEM_1099 - 1099 )
Partition 1100 (.MEM_1100 - 1100 )
Partition 1101 (.MEM_1101 - 1101 )
Partition 1102 (.MEM_1102 - 1102 )
Partition 1103 (.MEM_1103 - 1103 )
Partition 1104 (.MEM_1104 - 1104 )
Partition 1105 (.MEM_1105 - 1105 )
Partition 1106 (.MEM_1106 - 1106 )
Partition 1107 (.MEM_1107 - 1107 )
Partition 1108 (.MEM_1108 - 1108 )
Partition 1109 (.MEM_1109 - 1109 )
Partition 1110 (.MEM_1110 - 1110 )
Partition 1111 (.MEM_1111 - 1111 )
Partition 1112 (.MEM_1112 - 1112 )
Partition 1113 (.MEM_1113 - 1113 )
Partition 1114 (.MEM_1114 - 1114 )
Partition 1115 (.MEM_1115 - 1115 )
Partition 1116 (.MEM_1116 - 1116 )
Partition 1117 (.MEM_1117 - 1117 )
Partition 1118 (.MEM_1118 - 1118 )
Partition 1119 (.MEM_1119 - 1119 )
Partition 1120 (.MEM_1120 - 1120 )
Partition 1121 (.MEM_1121 - 1121 )
Partition 1122 (.MEM_1122 - 1122 )
Partition 1123 (.MEM_1123 - 1123 )
Partition 1124 (.MEM_1124 - 1124 )
Partition 1125 (.MEM_1125 - 1125 )
Partition 1126 (.MEM_1126 - 1126 )
Partition 1127 (.MEM_1127 - 1127 )
Partition 1128 (.MEM_1128 - 1128 )
Partition 1129 (.MEM_1129 - 1129 )
Partition 1130 (.MEM_1130 - 1130 )
Partition 1131 (.MEM_1131 - 1131 )
Partition 1132 (.MEM_1132 - 1132 )
Partition 1133 (.MEM_1133 - 1133 )
Partition 1134 (.MEM_1134 - 1134 )
Partition 1135 (.MEM_1135 - 1135 )
Partition 1136 (.MEM_1136 - 1136 )
Partition 1137 (.MEM_1137 - 1137 )
Partition 1138 (.MEM_1138 - 1138 )
Partition 1139 (.MEM_1139 - 1139 )
Partition 1140 (.MEM_1140 - 1140 )
Partition 1141 (.MEM_1141 - 1141 )
Partition 1142 (.MEM_1142 - 1142 )
Partition 1143 (.MEM_1143 - 1143 )
Partition 1144 (.MEM_1144 - 1144 )
Partition 1145 (.MEM_1145 - 1145 )
Partition 1146 (.MEM_1146 - 1146 )
Partition 1147 (.MEM_1147 - 1147 )
Partition 1148 (.MEM_1148 - 1148 )
Partition 1149 (.MEM_1149 - 1149 )
Partition 1150 (.MEM_1150 - 1150 )
Partition 1151 (.MEM_1151 - 1151 )
Partition 1152 (.MEM_1152 - 1152 )
Partition 1153 (.MEM_1153 - 1153 )
Partition 1154 (.MEM_1154 - 1154 )
Partition 1155 (.MEM_1155 - 1155 )
Partition 1156 (.MEM_1156 - 1156 )
Partition 1157 (.MEM_1157 - 1157 )
Partition 1158 (.MEM_1158 - 1158 )
Partition 1159 (.MEM_1159 - 1159 )
Partition 1160 (.MEM_1160 - 1160 )
Partition 1161 (.MEM_1161 - 1161 )
Partition 1162 (.MEM_1162 - 1162 )
Partition 1163 (.MEM_1163 - 1163 )
Partition 1164 (.MEM_1164 - 1164 )
Partition 1165 (.MEM_1165 - 1165 )
Partition 1166 (.MEM_1166 - 1166 )
Partition 1167 (.MEM_1167 - 1167 )
Partition 1168 (.MEM_1168 - 1168 )
Partition 1169 (.MEM_1169 - 1169 )
Partition 1170 (.MEM_1170 - 1170 )
Partition 1171 (.MEM_1171 - 1171 )
Partition 1172 (.MEM_1172 - 1172 )
Partition 1173 (.MEM_1173(D) - 1173 )
Partition 1174 (.MEM_1174 - 1174 )
Partition 1175 (.MEM_1175 - 1175 )
Partition 1176 (.MEM_1176 - 1176 )
Partition 1177 (.MEM_1177 - 1177 )
Partition 1178 (.MEM_1178 - 1178 )
Partition 1179 (.MEM_1179 - 1179 )
Partition 1180 (.MEM_1180 - 1180 )
Partition 1181 (.MEM_1181 - 1181 )
Partition 1182 (.MEM_1182 - 1182 )
Partition 1183 (.MEM_1183 - 1183 )
Partition 1184 (.MEM_1184 - 1184 )
Partition 1185 (.MEM_1185 - 1185 )
Partition 1186 (.MEM_1186 - 1186 )
Partition 1187 (.MEM_1187 - 1187 )
Partition 1188 (.MEM_1188 - 1188 )
Partition 1189 (.MEM_1189 - 1189 )
Partition 1190 (.MEM_1190 - 1190 )
Partition 1191 (.MEM_1191 - 1191 )
Partition 1192 (.MEM_1192 - 1192 )
Partition 1193 (.MEM_1193 - 1193 )
Partition 1194 (.MEM_1194 - 1194 )
Partition 1195 (.MEM_1195 - 1195 )
Partition 1196 (.MEM_1196 - 1196 )
Partition 1197 (.MEM_1197 - 1197 )
Partition 1198 (.MEM_1198 - 1198 )
Partition 1199 (.MEM_1199 - 1199 )
Partition 1200 (.MEM_1200 - 1200 )
Partition 1201 (.MEM_1201 - 1201 )
Partition 1202 (.MEM_1202 - 1202 )
Partition 1203 (.MEM_1203 - 1203 )
Partition 1204 (.MEM_1204 - 1204 )
Partition 1205 (.MEM_1205 - 1205 )
Partition 1206 (.MEM_1206 - 1206 )
Partition 1207 (.MEM_1207 - 1207 )
Partition 1208 (.MEM_1208 - 1208 )
Partition 1209 (.MEM_1209 - 1209 )
Partition 1210 (.MEM_1210 - 1210 )
Partition 1211 (.MEM_1211 - 1211 )
Partition 1212 (.MEM_1212 - 1212 )
Partition 1213 (.MEM_1213 - 1213 )
Partition 1214 (.MEM_1214 - 1214 )
Partition 1215 (.MEM_1215 - 1215 )
Partition 1216 (.MEM_1216 - 1216 )
Partition 1217 (.MEM_1217 - 1217 )
Partition 1218 (.MEM_1218 - 1218 )
Partition 1219 (.MEM_1219 - 1219 )
Partition 1220 (.MEM_1220 - 1220 )
Partition 1221 (.MEM_1221 - 1221 )
Partition 1222 (.MEM_1222 - 1222 )
Partition 1223 (.MEM_1223 - 1223 )
Partition 1224 (.MEM_1224 - 1224 )
Partition 1225 (.MEM_1225 - 1225 )
Partition 1226 (.MEM_1226 - 1226 )
Partition 1227 (.MEM_1227 - 1227 )
Partition 1228 (.MEM_1228 - 1228 )
Partition 1229 (.MEM_1229 - 1229 )
Partition 1230 (.MEM_1230 - 1230 )
Partition 1231 (.MEM_1231 - 1231 )
Partition 1232 (.MEM_1232 - 1232 )
Partition 1233 (.MEM_1233 - 1233 )
Partition 1234 (.MEM_1234 - 1234 )
Partition 1235 (.MEM_1235 - 1235 )
Partition 1236 (.MEM_1236 - 1236 )
Partition 1237 (.MEM_1237 - 1237 )
Partition 1238 (.MEM_1238 - 1238 )
Partition 1239 (.MEM_1239 - 1239 )
Partition 1240 (.MEM_1240 - 1240 )
Partition 1241 (.MEM_1241 - 1241 )
Partition 1242 (.MEM_1242 - 1242 )
Partition 1243 (.MEM_1243 - 1243 )
Partition 1244 (.MEM_1244 - 1244 )
Partition 1245 (.MEM_1245 - 1245 )
Partition 1246 (.MEM_1246 - 1246 )
Partition 1247 (.MEM_1247 - 1247 )
Partition 1248 (.MEM_1248 - 1248 )
Partition 1249 (.MEM_1249 - 1249 )
Partition 1250 (.MEM_1250 - 1250 )
Partition 1251 (.MEM_1251 - 1251 )
Partition 1252 (.MEM_1252 - 1252 )
Partition 1253 (.MEM_1253 - 1253 )
Partition 1254 (.MEM_1254 - 1254 )
Partition 1255 (.MEM_1255 - 1255 )
Partition 1256 (.MEM_1256 - 1256 )
Partition 1257 (.MEM_1257 - 1257 )
Partition 1258 (.MEM_1258 - 1258 )
Partition 1259 (.MEM_1259 - 1259 )
Partition 1260 (.MEM_1260 - 1260 )
Partition 1261 (.MEM_1261 - 1261 )
Partition 1262 (.MEM_1262 - 1262 )
Partition 1263 (.MEM_1263 - 1263 )
Partition 1264 (.MEM_1264 - 1264 )
Partition 1265 (.MEM_1265 - 1265 )
Partition 1266 (.MEM_1266 - 1266 )
Partition 1267 (.MEM_1267 - 1267 )
Partition 1268 (.MEM_1268 - 1268 )
Partition 1269 (.MEM_1269 - 1269 )
Partition 1270 (.MEM_1270 - 1270 )
Partition 1271 (.MEM_1271 - 1271 )
Partition 1272 (.MEM_1272 - 1272 )
Partition 1273 (.MEM_1273 - 1273 )
Partition 1274 (.MEM_1274 - 1274 )
Partition 1275 (.MEM_1275 - 1275 )
Partition 1276 (.MEM_1276 - 1276 )
Partition 1277 (.MEM_1277 - 1277 )
Partition 1278 (.MEM_1278 - 1278 )
Partition 1279 (.MEM_1279 - 1279 )
Partition 1280 (.MEM_1280 - 1280 )
Partition 1281 (.MEM_1281 - 1281 )
Partition 1282 (.MEM_1282 - 1282 )
Partition 1283 (.MEM_1283 - 1283 )
Partition 1284 (.MEM_1284 - 1284 )
Partition 1285 (.MEM_1285 - 1285 )
Partition 1286 (.MEM_1286 - 1286 )
Partition 1287 (.MEM_1287 - 1287 )
Partition 1288 (.MEM_1288 - 1288 )
Partition 1289 (.MEM_1289 - 1289 )
Partition 1290 (.MEM_1290 - 1290 )
Partition 1291 (.MEM_1291 - 1291 )
Partition 1292 (.MEM_1292 - 1292 )
Partition 1293 (.MEM_1293 - 1293 )
Partition 1294 (.MEM_1294 - 1294 )
Partition 1295 (.MEM_1295 - 1295 )
Partition 1296 (.MEM_1296 - 1296 )
Partition 1297 (.MEM_1297 - 1297 )
Partition 1298 (.MEM_1298 - 1298 )
Partition 1299 (.MEM_1299 - 1299 )
Partition 1300 (.MEM_1300 - 1300 )
Partition 1301 (.MEM_1301 - 1301 )
Partition 1302 (.MEM_1302 - 1302 )
Partition 1303 (.MEM_1303 - 1303 )
Partition 1304 (.MEM_1304 - 1304 )
Partition 1305 (.MEM_1305 - 1305 )
Partition 1306 (.MEM_1306 - 1306 )
Partition 1307 (.MEM_1307 - 1307 )
Partition 1308 (.MEM_1308 - 1308 )
Partition 1309 (.MEM_1309 - 1309 )
Partition 1310 (.MEM_1310 - 1310 )
Partition 1311 (.MEM_1311 - 1311 )
Partition 1312 (.MEM_1312 - 1312 )
Partition 1313 (.MEM_1313 - 1313 )
Partition 1314 (.MEM_1314 - 1314 )
Partition 1315 (.MEM_1315 - 1315 )
Partition 1316 (.MEM_1316 - 1316 )
Partition 1317 (.MEM_1317 - 1317 )
Partition 1318 (.MEM_1318 - 1318 )
Partition 1319 (.MEM_1319 - 1319 )
Partition 1320 (.MEM_1320 - 1320 )
Partition 1321 (.MEM_1321 - 1321 )
Partition 1322 (.MEM_1322 - 1322 )
Partition 1323 (.MEM_1323 - 1323 )
Partition 1324 (.MEM_1324 - 1324 )
Partition 1325 (.MEM_1325 - 1325 )
Partition 1326 (.MEM_1326 - 1326 )
Partition 1327 (.MEM_1327 - 1327 )
Partition 1328 (.MEM_1328 - 1328 )
Partition 1329 (.MEM_1329 - 1329 )
Partition 1330 (.MEM_1330 - 1330 )
Partition 1331 (.MEM_1331 - 1331 )
Partition 1332 (.MEM_1332 - 1332 )
Partition 1333 (.MEM_1333 - 1333 )
Partition 1334 (.MEM_1334 - 1334 )
Partition 1335 (.MEM_1335 - 1335 )
Partition 1336 (.MEM_1336 - 1336 )
Partition 1337 (.MEM_1337 - 1337 )
Partition 1338 (.MEM_1338 - 1338 )
Partition 1339 (.MEM_1339 - 1339 )
Partition 1340 (.MEM_1340 - 1340 )
Partition 1341 (.MEM_1341 - 1341 )
Partition 1342 (.MEM_1342 - 1342 )
Partition 1343 (.MEM_1343 - 1343 )
Partition 1344 (.MEM_1344 - 1344 )
Partition 1345 (.MEM_1345 - 1345 )
Partition 1346 (.MEM_1346 - 1346 )
Partition 1347 (.MEM_1347 - 1347 )
Partition 1348 (.MEM_1348 - 1348 )
Partition 1349 (.MEM_1349 - 1349 )
Partition 1350 (.MEM_1350 - 1350 )
Partition 1351 (.MEM_1351 - 1351 )
Partition 1352 (.MEM_1352 - 1352 )
Partition 1353 (.MEM_1353 - 1353 )
Partition 1354 (.MEM_1354 - 1354 )
Partition 1355 (.MEM_1355 - 1355 )
Partition 1356 (.MEM_1356 - 1356 )
Partition 1357 (.MEM_1357 - 1357 )
Partition 1358 (.MEM_1358 - 1358 )
Partition 1359 (.MEM_1359 - 1359 )
Partition 1360 (.MEM_1360 - 1360 )
Partition 1361 (.MEM_1361 - 1361 )
Partition 1362 (.MEM_1362 - 1362 )
Partition 1363 (.MEM_1363 - 1363 )
Partition 1364 (.MEM_1364 - 1364 )
Partition 1365 (.MEM_1365 - 1365 )
Partition 1366 (.MEM_1366 - 1366 )
Partition 1367 (.MEM_1367 - 1367 )
Partition 1368 (.MEM_1368 - 1368 )
Partition 1369 (.MEM_1369 - 1369 )
Partition 1370 (.MEM_1370 - 1370 )
Partition 1371 (.MEM_1371 - 1371 )
Partition 1372 (.MEM_1372 - 1372 )
Partition 1373 (.MEM_1373 - 1373 )
Partition 1374 (.MEM_1374 - 1374 )
Partition 1375 (.MEM_1375 - 1375 )
Partition 1376 (.MEM_1376 - 1376 )
Partition 1377 (.MEM_1377 - 1377 )
Partition 1378 (.MEM_1378 - 1378 )
Partition 1379 (.MEM_1379 - 1379 )
Partition 1380 (.MEM_1380 - 1380 )
Partition 1381 (.MEM_1381 - 1381 )
Partition 1382 (.MEM_1382 - 1382 )
Partition 1383 (.MEM_1383 - 1383 )
Partition 1384 (.MEM_1384 - 1384 )
Partition 1385 (.MEM_1385 - 1385 )
Partition 1386 (.MEM_1386 - 1386 )
Partition 1387 (.MEM_1387 - 1387 )
Partition 1388 (.MEM_1388 - 1388 )
Partition 1389 (.MEM_1389 - 1389 )
Partition 1390 (.MEM_1390 - 1390 )
Partition 1391 (.MEM_1391 - 1391 )
Partition 1392 (.MEM_1392 - 1392 )
Partition 1393 (.MEM_1393 - 1393 )
Partition 1394 (.MEM_1394 - 1394 )
Partition 1395 (.MEM_1395 - 1395 )
Partition 1396 (.MEM_1396 - 1396 )
Partition 1397 (.MEM_1397 - 1397 )
Partition 1398 (.MEM_1398 - 1398 )
Partition 1399 (.MEM_1399 - 1399 )
Partition 1400 (.MEM_1400 - 1400 )
Partition 1401 (.MEM_1401 - 1401 )
Partition 1402 (.MEM_1402 - 1402 )
Partition 1403 (.MEM_1403 - 1403 )
Partition 1404 (.MEM_1404 - 1404 )
Partition 1405 (.MEM_1405 - 1405 )
Partition 1406 (.MEM_1406 - 1406 )
Partition 1407 (.MEM_1407 - 1407 )
Partition 1408 (.MEM_1408 - 1408 )
Partition 1409 (.MEM_1409 - 1409 )
Partition 1410 (.MEM_1410 - 1410 )
Partition 1411 (.MEM_1411 - 1411 )
Partition 1412 (.MEM_1412 - 1412 )
Partition 1413 (.MEM_1413 - 1413 )
Partition 1414 (.MEM_1414 - 1414 )
Partition 1415 (.MEM_1415 - 1415 )
Partition 1416 (.MEM_1416 - 1416 )
Partition 1417 (.MEM_1417 - 1417 )
Partition 1418 (.MEM_1418 - 1418 )
Partition 1419 (.MEM_1419 - 1419 )
Partition 1420 (.MEM_1420 - 1420 )
Partition 1421 (.MEM_1421 - 1421 )
Partition 1422 (.MEM_1422 - 1422 )
Partition 1423 (.MEM_1423 - 1423 )
Partition 1424 (.MEM_1424 - 1424 )
Partition 1425 (.MEM_1425 - 1425 )
Partition 1426 (.MEM_1426 - 1426 )
Partition 1427 (.MEM_1427 - 1427 )
Partition 1428 (.MEM_1428 - 1428 )
Partition 1429 (.MEM_1429 - 1429 )
Partition 1430 (.MEM_1430 - 1430 )
Partition 1431 (.MEM_1431 - 1431 )
Partition 1432 (.MEM_1432 - 1432 )
Partition 1433 (.MEM_1433 - 1433 )
Partition 1434 (.MEM_1434 - 1434 )
Partition 1435 (.MEM_1435 - 1435 )
Partition 1436 (.MEM_1436 - 1436 )
Partition 1437 (.MEM_1437 - 1437 )
Partition 1438 (.MEM_1438 - 1438 )
Partition 1439 (.MEM_1439 - 1439 )
Partition 1440 (.MEM_1440 - 1440 )
Partition 1441 (.MEM_1441 - 1441 )
Partition 1442 (.MEM_1442 - 1442 )
Partition 1443 (.MEM_1443 - 1443 )
Partition 1444 (.MEM_1444 - 1444 )
Partition 1445 (.MEM_1445 - 1445 )
Partition 1446 (.MEM_1446 - 1446 )
Partition 1447 (.MEM_1447 - 1447 )
Partition 1448 (.MEM_1448 - 1448 )
Partition 1449 (.MEM_1449 - 1449 )
Partition 1450 (.MEM_1450 - 1450 )
Partition 1451 (.MEM_1451 - 1451 )
Partition 1452 (.MEM_1452 - 1452 )
Partition 1453 (.MEM_1453 - 1453 )
Partition 1454 (.MEM_1454 - 1454 )
Partition 1455 (.MEM_1455 - 1455 )
Partition 1456 (.MEM_1456 - 1456 )
Partition 1457 (.MEM_1457 - 1457 )
Partition 1459 (pmap_1459 - 1458 1459 1460 )
Partition 1461 (D.47872_1461 - 1461 )
Partition 1463 (pmap_1463 - 1462 1463 1464 )
Partition 1465 (D.47875_1465 - 1465 )
Partition 1466 (D.47878_1466 - 1466 )
Partition 1470 (D.47888_1470 - 1470 )
Partition 1475 (D.47901_1475 - 1475 )
Partition 1478 (csui.173_1478 - 591 1478 )
Partition 1482 (D.47916_1482 - 1482 )
Partition 1484 (D.47920_1484 - 1484 )
Partition 1487 (D.47927_1487 - 1487 )
Partition 1489 (D.47935_1489 - 1489 )
Partition 1490 (D.47934_1490 - 1490 )
Partition 1491 (D.47933_1491 - 1491 )
Partition 1492 (D.47932_1492 - 1492 )
Partition 1493 (D.47931_1493 - 1493 )
Partition 1494 (iftmp.104_1494 - 1494 )
Partition 1496 (D.47940_1496 - 1496 )
Partition 1498 (D.47944_1498 - 1498 )
Partition 1501 (D.47951_1501 - 1501 )
Partition 1504 (D.47958_1504 - 1504 )
Partition 1506 (D.47966_1506 - 1506 )
Partition 1507 (D.47965_1507 - 1507 )
Partition 1508 (D.47964_1508 - 1508 )
Partition 1509 (D.47963_1509 - 1509 )
Partition 1510 (D.47962_1510 - 1510 )
Partition 1511 (iftmp.104_1511 - 1511 )
Partition 1513 (.MEM_1513 - 1513 )
Partition 1514 (.MEM_1514 - 1514 )
Partition 1515 (.MEM_1515 - 1515 )
Partition 1516 (.MEM_1516 - 1516 )
Partition 1517 (.MEM_1517 - 1517 )
Partition 1518 (.MEM_1518 - 1518 )
Partition 1519 (.MEM_1519 - 1519 )
Partition 1520 (D.47877_1520 - 305 1467 1520 )
Partition 1521 (.MEM_1521 - 1521 )
Partition 1522 (dptime_1522 - 36 37 153 329 1468 1522 )
Partition 1523 (.MEM_1523 - 1523 )
Partition 1524 (dmaxptime_1524 - 40 41 155 333 1469 1524 )
Partition 1525 (D.47887_1525 - 504 1471 1525 )
Partition 1526 (.MEM_1526 - 1526 )
Partition 1527 (D.47891_1527 - 514 1472 1527 )
Partition 1528 (.MEM_1528 - 1528 )
Partition 1529 (ptime_1529 - 34 35 371 523 1473 1529 )
Partition 1530 (.MEM_1530 - 1530 )
Partition 1531 (maxptime_1531 - 38 39 372 528 1474 1531 )
Partition 1532 (D.47900_1532 - 532 1476 1532 )
Partition 1533 (.MEM_1533 - 1533 )
Partition 1534 (crypto_tag_1534 - 545 1477 1534 )
Partition 1535 (map_bit_rate_1535 - 131 132 592 603 607 608 615 1479 1480 1481 1535 )
Partition 1536 (D.47915_1536 - 599 1483 1536 )
Partition 1537 (D.47919_1537 - 644 1485 1537 )
Partition 1538 (.MEM_1538 - 1538 )
Partition 1539 (D.47923_1539 - 146 786 787 1486 1539 )
Partition 1540 (D.47926_1540 - 792 1488 1540 )
Partition 1541 (D.47930_1541 - 821 1495 1541 )
Partition 1542 (D.47939_1542 - 891 1497 1542 )
Partition 1543 (D.47943_1543 - 901 1499 1543 )
Partition 1544 (.MEM_1544 - 1544 )
Partition 1545 (D.47947_1545 - 956 1500 1545 )
Partition 1546 (D.47950_1546 - 964 1502 1546 )
Partition 1547 (.MEM_1547 - 1547 )
Partition 1548 (crypto_tag_1548 - 977 1503 1548 )
Partition 1549 (D.47957_1549 - 998 1505 1549 )
Partition 1550 (D.47961_1550 - 1092 1512 1550 )

Coalesced D.44470_142 to match_1
Coalesced iftmp.88_143 to __result_296
Coalesced iftmp.97_146 to D.47923_1539
Coalesced iftmp.98_147 to __result_948
Coalesced D.44470_187 to match_1
Coalesced D.44470_197 to match_1
Coalesced D.44470_199 to match_1
Coalesced iftmp.88_297 to __result_296
Coalesced iftmp.88_300 to __result_296
Coalesced D.39008_301 to __result_296
Coalesced D.44591_305 to D.47877_1520
Coalesced D.44790_504 to D.47887_1525
Coalesced D.44798_514 to D.47891_1527
Coalesced D.44818_532 to D.47900_1532
Coalesced D.44886_591 to csui.173_1478
Coalesced D.44894_599 to D.47915_1536
Coalesced D.44935_644 to D.47919_1537
Coalesced iftmp.95_730 to near_rate_145
Coalesced iftmp.97_786 to D.47923_1539
Coalesced iftmp.97_787 to D.47923_1539
Coalesced D.45081_792 to D.47926_1540
Coalesced D.45096_821 to D.47930_1541
Coalesced D.45147_891 to D.47939_1542
Coalesced D.45158_901 to D.47943_1543
Coalesced iftmp.98_949 to __result_948
Coalesced iftmp.98_951 to __result_948
Coalesced D.39089_952 to __result_948
Coalesced D.45213_956 to D.47947_1545
Coalesced D.45223_964 to D.47950_1546
Coalesced D.45257_998 to D.47957_1549
Coalesced D.45314_1092 to D.47961_1550
Coalesced D.47879_1467 to D.47877_1520
Coalesced D.47882_1468 to dptime_1522
Coalesced D.47885_1469 to dmaxptime_1524
Coalesced D.47889_1471 to D.47887_1525
Coalesced D.47892_1472 to D.47891_1527
Coalesced D.47895_1473 to ptime_1529
Coalesced D.47898_1474 to maxptime_1531
Coalesced D.47902_1476 to D.47900_1532
Coalesced D.47905_1477 to crypto_tag_1534
Coalesced D.47909_1479 to map_bit_rate_1535
Coalesced D.47909_1480 to map_bit_rate_1535
Coalesced D.47909_1481 to map_bit_rate_1535
Coalesced D.47917_1483 to D.47915_1536
Coalesced D.47921_1485 to D.47919_1537
Coalesced D.47924_1486 to D.47923_1539
Coalesced D.47928_1488 to D.47926_1540
Coalesced D.47937_1495 to D.47930_1541
Coalesced D.47941_1497 to D.47939_1542
Coalesced D.47945_1499 to D.47943_1543
Coalesced D.47948_1500 to D.47947_1545
Coalesced D.47952_1502 to D.47950_1546
Coalesced D.47955_1503 to crypto_tag_1548
Coalesced D.47959_1505 to D.47957_1549
Coalesced D.47968_1512 to D.47961_1550
Scope blocks after cleanups:

{ Scope block #0 
  uint8_t match;
  switch_payload_t best_te;
  switch_payload_t te;
  switch_payload_t cng_pt;
  struct sdp_media_t * m;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  int maxptime;
  int dmaxptime;
  int sendonly;
  int recvonly;
  int greedy;
  int x;
  int skip;
  struct switch_channel_t * channel;
  const char * val;
  const char * crypto;
  int got_crypto;
  int got_video_crypto;
  int got_audio;
  int got_avp;
  int got_video_avp;
  int got_video_savp;
  int got_savp;
  int got_udptl;
  int got_webrtc;
  int scrooge;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  int reneg;
  const struct switch_codec_implementation_t * * codec_array;
  int total_codecs;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  uint32_t near_rate;
  const struct switch_codec_implementation_t * mimp;
  const struct switch_codec_implementation_t * near_match;
  struct sdp_rtpmap_t * mmap;
  struct sdp_rtpmap_t * near_map;
  struct matches matches[30];
  struct matches near_matches[30];
  int codec_ms;
  uint32_t remote_codec_rate;
  uint32_t fmtp_remote_codec_rate;
  const char * tmp;
  int m_idx;
  int nm_idx;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  void done = <<< error >>>; (unused)

  { Scope block #206 src/switch_core_media.c:3033 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #207 Originating from :#0 

    }

  }

  { Scope block #208 src/switch_core_media.c:3031 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #209 Originating from :#0 

    }

  }

  { Scope block #210 src/switch_core_media.c:3006 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #211 Originating from :#0 

    }

  }

  { Scope block #212 src/switch_core_media.c:2951 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
    struct switch_rtp_engine_t * engine; (unused)

    { Scope block #213 Originating from :#0 
      struct payload_map_t * pmap;

    }

  }

  { Scope block #214 src/switch_core_media.c:2950 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
    struct switch_rtp_engine_t * engine; (unused)

    { Scope block #215 Originating from :#0 
      struct payload_map_t * pmap;

    }

  }

  { Scope block #216 
    size_t __s1_len; (unused)
    size_t __s2_len;

    { Scope block #217 
      const unsigned char * __s1;
      register int __result;

    }

  }

  { Scope block #218 
    struct sdp_connection_t * connection;
    struct switch_core_session_t * other_session;

    { Scope block #219 
      struct switch_t38_options_t * t38_options;

      { Scope block #220 
        const char * var;
        int pass;

        { Scope block #221 
          struct switch_channel_t * other_channel;
          struct switch_core_session_message_t * msg;
          char * remote_host;
          switch_port_t remote_port;
          char tmp[32];

          { Scope block #222 
            size_t __s1_len; (unused)
            size_t __s2_len; (unused)

          }

          { Scope block #223 
            const char * err;

          }

        }

      }

    }

    { Scope block #224 
      struct sdp_rtpmap_t * map;

      { Scope block #225 src/switch_core_media.c:3256 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #226 Originating from :#0 

        }

      }

      { Scope block #227 src/switch_core_media.c:3255 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #228 Originating from :#0 

        }

      }

      { Scope block #229 src/switch_core_media.c:3253 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #230 Originating from :#0 

        }

      }

      { Scope block #231 src/switch_core_media.c:3248 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #232 Originating from :#0 

        }

      }

      { Scope block #233 src/switch_core_media.c:3238 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #234 Originating from :#0 

        }

      }

      { Scope block #235 
        int crypto_tag;

        { Scope block #236 src/switch_core_media.c:3269 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #237 Originating from :#0 

          }

        }

      }

      { Scope block #238 
        int32_t i;
        const char * rm_encoding;
        uint32_t map_bit_rate;
        struct switch_codec_fmtp_t codec_fmtp;

        { Scope block #239 src/switch_core_media.c:3352 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #240 Originating from :#0 

          }

        }

        { Scope block #241 src/switch_core_media.c:3342 Originating from :  static uint32_t switch_known_bitrate (switch_payload_t); 
          switch_payload_t payload; (unused)

        }

        { Scope block #243 
          const struct switch_codec_implementation_t * imp;
          uint32_t bit_rate;
          uint32_t codec_rate;

          { Scope block #244 src/switch_core_media.c:3386 Originating from :  static int _zstr (const char *); 
            const char * s; (unused)

            { Scope block #245 Originating from :#0 

            }

          }

        }

      }

      { Scope block #246 
        int j;

        { Scope block #247 
          const struct switch_codec_implementation_t * search[1];
          char * prefs[1];
          char tmp[80];
          int num;
          const struct switch_codec_implementation_t * timp;

        }

      }

      { Scope block #248 
        int j;

        { Scope block #249 
          struct payload_map_t * pmap;

          { Scope block #250 src/switch_core_media.c:3554 Originating from :  static int _zstr (const char *); 
            const char * s; (unused)

            { Scope block #251 Originating from :#0 

            }

          }

          { Scope block #252 src/switch_core_media.c:3545 Originating from :  extern int atoi (const char *); 
            const char * __nptr; (unused)

            { Scope block #253 Originating from :#0 

            }

          }

        }

      }

      { Scope block #254 
        char tmp[50];

        { Scope block #255 src/switch_core_media.c:3595 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
          struct switch_codec_t * codec; (unused)

          { Scope block #256 Originating from :#0 

          }

        }

      }

    }

    { Scope block #257 
      struct sdp_rtpmap_t * map;
      const char * rm_encoding;
      const struct switch_codec_implementation_t * mimp;
      int vmatch;
      int i;

      { Scope block #258 src/switch_core_media.c:3705 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #259 Originating from :#0 

        }

      }

      { Scope block #260 src/switch_core_media.c:3701 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #261 Originating from :#0 

        }

      }

      { Scope block #262 src/switch_core_media.c:3688 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #263 Originating from :#0 

        }

      }

      { Scope block #264 src/switch_core_media.c:3678 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #265 Originating from :#0 

        }

      }

      { Scope block #266 
        size_t __s1_len; (unused)
        size_t __s2_len;

        { Scope block #267 
          const unsigned char * __s1;
          register int __result;

        }

      }

      { Scope block #268 
        int crypto_tag;

        { Scope block #269 src/switch_core_media.c:3718 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #270 Originating from :#0 

          }

        }

      }

      { Scope block #271 
        const struct switch_codec_implementation_t * imp;

        { Scope block #272 src/switch_core_media.c:3745 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #273 Originating from :#0 

          }

        }

      }

      { Scope block #274 
        char tmp[50];
        int j;

        { Scope block #275 src/switch_core_media.c:3838 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
          struct switch_codec_t * codec; (unused)

          { Scope block #276 Originating from :#0 

          }

        }

        { Scope block #277 
          struct payload_map_t * pmap;

        }

      }

    }

  }

}
switch_core_media_negotiate_sdp (struct switch_core_session_t * session, const char * r_sdp, uint8_t * proceed, switch_sdp_type_t sdp_type)
{
  int iftmp.104;
  uint32_t D.47966;
  uint32_t D.47965;
  struct switch_mutex_t * D.47964;
  struct switch_codec_interface_t * D.47963;
  const struct switch_codec_implementation_t * D.47962;
  switch_bool_t D.47961;
  const char D.47958;
  int D.47957;
  const char D.47951;
  int D.47950;
  int D.47947;
  const char D.47944;
  int D.47943;
  const char D.47940;
  int D.47939;
  int iftmp.104;
  uint32_t D.47935;
  uint32_t D.47934;
  struct switch_mutex_t * D.47933;
  struct switch_codec_interface_t * D.47932;
  const struct switch_codec_implementation_t * D.47931;
  switch_bool_t D.47930;
  const char D.47927;
  int D.47926;
  int D.47923;
  const char D.47920;
  int D.47919;
  const char D.47916;
  int D.47915;
  unsigned char csui.173;
  const char D.47901;
  int D.47900;
  int D.47891;
  const char D.47888;
  int D.47887;
  const char D.47878;
  int D.47877;
  uint8_t D.47875;
  struct payload_map_t * pmap;
  uint8_t D.47872;
  struct payload_map_t * pmap;
  struct payload_map_t * pmap;
  int j;
  char tmp[50];
  const struct switch_codec_implementation_t * imp;
  int crypto_tag;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  int i;
  int vmatch;
  const struct switch_codec_implementation_t * mimp;
  const char * rm_encoding;
  struct sdp_rtpmap_t * map;
  char tmp[50];
  struct payload_map_t * pmap;
  int j;
  const struct switch_codec_implementation_t * timp;
  int num;
  char tmp[80];
  char * prefs[1];
  const struct switch_codec_implementation_t * search[1];
  int j;
  uint32_t codec_rate;
  uint32_t bit_rate;
  const struct switch_codec_implementation_t * imp;
  struct switch_codec_fmtp_t codec_fmtp;
  uint32_t map_bit_rate;
  const char * rm_encoding;
  int32_t i;
  int crypto_tag;
  struct sdp_rtpmap_t * map;
  const char * err;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  struct switch_core_session_message_t * msg;
  struct switch_channel_t * other_channel;
  int pass;
  const char * var;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * other_session;
  struct sdp_connection_t * connection;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  int nm_idx;
  int m_idx;
  const char * tmp;
  uint32_t fmtp_remote_codec_rate;
  uint32_t remote_codec_rate;
  int codec_ms;
  struct matches near_matches[30];
  struct matches matches[30];
  struct sdp_rtpmap_t * near_map;
  struct sdp_rtpmap_t * mmap;
  const struct switch_codec_implementation_t * near_match;
  const struct switch_codec_implementation_t * mimp;
  uint32_t near_rate;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  int total_codecs;
  const struct switch_codec_implementation_t * * codec_array;
  int reneg;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  int scrooge;
  int got_webrtc;
  int got_udptl;
  int got_savp;
  int got_video_savp;
  int got_video_avp;
  int got_avp;
  int got_audio;
  int got_video_crypto;
  int got_crypto;
  const char * crypto;
  const char * val;
  struct switch_channel_t * channel;
  int skip;
  int x;
  int greedy;
  int recvonly;
  int sendonly;
  int dmaxptime;
  int maxptime;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  switch_payload_t cng_pt;
  switch_payload_t te;
  switch_payload_t best_te;
  uint8_t match;
  switch_status_t D.45317;
  struct switch_codec_t * D.45313;
  _Bool D.45310;
  _Bool D.45309;
  _Bool D.45308;
  int D.45307;
  switch_payload_t D.45306;
  int D.45305;
  switch_payload_t D.45304;
  char * D.45303;
  char * D.45302;
  int D.45301;
  switch_port_t D.45300;
  char * D.45299;
  const char * D.45298;
  char * D.45297;
  uint32_t D.45296;
  int D.45295;
  const int D.45294;
  unsigned char D.45293;
  char * D.45292;
  switch_payload_t D.45291;
  struct switch_rtp_t * D.45288;
  struct payload_map_t * D.45287;
  uint32_t D.45284;
  int D.45283;
  const int D.45282;
  const uint32_t D.45281;
  const struct switch_codec_implementation_t * D.45280;
  uint32_t D.45279;
  <unnamed-unsigned:7> D.45278;
  const char * D.45277;
  const char * D.45276;
  struct sdp_rtpmap_t * D.45275;
  _Bool D.45268;
  _Bool D.45267;
  const uint32_t D.45264;
  long unsigned int D.45263;
  int D.45260;
  const char * D.45256;
  int D.45252;
  const switch_payload_t D.45251;
  char * const D.45250;
  int D.45249;
  <unnamed-unsigned:7> D.45248;
  uint32_t D.45245;
  switch_call_direction_t D.45242;
  const switch_codec_type_t D.45239;
  const struct switch_codec_implementation_t * * D.45238;
  unsigned int D.45237;
  unsigned int i.99;
  int D.45229;
  const char * D.45228;
  int D.45220;
  char * D.45215;
  short unsigned int D.45214;
  int D.45210;
  const unsigned char D.45209;
  char * D.45208;
  int D.45207;
  const unsigned char D.45206;
  const unsigned char * D.45205;
  _Bool D.45202;
  _Bool D.45201;
  int D.45200;
  const unsigned char D.45199;
  char * D.45198;
  int D.45197;
  const unsigned char D.45196;
  const unsigned char * D.45195;
  _Bool D.45192;
  _Bool D.45191;
  int D.45190;
  const unsigned char D.45189;
  char * D.45188;
  int D.45187;
  const unsigned char D.45186;
  const unsigned char * D.45185;
  _Bool D.45182;
  _Bool D.45181;
  _Bool D.45180;
  int D.45179;
  const unsigned char D.45178;
  char[2] * D.45177;
  int D.45176;
  const unsigned char D.45175;
  int D.45169;
  uint8_t D.45165;
  uint8_t D.45164;
  const char * D.45161;
  int D.45155;
  int D.45152;
  int D.45144;
  int D.45141;
  int D.45138;
  int D.45126;
  const char * D.45125;
  int D.45121;
  switch_call_direction_t D.45115;
  int D.45112;
  switch_payload_t D.45111;
  uint32_t D.45110;
  int32_t D.45108;
  switch_status_t D.45100;
  uint32_t D.45099;
  struct switch_codec_t * D.45095;
  int D.45094;
  switch_payload_t D.45093;
  int D.45090;
  char * D.45089;
  short unsigned int D.45088;
  char * D.45087;
  const char * D.45086;
  const char * D.45083;
  const char * D.45080;
  int D.45074;
  int D.45071;
  const char * D.45067;
  uint32_t D.45065;
  const int D.45064;
  uint32_t D.45063;
  int D.45062;
  const int D.45061;
  const uint32_t D.45060;
  int D.45057;
  const uint32_t D.45056;
  unsigned char D.45055;
  <unnamed-unsigned:7> D.45054;
  char * D.45053;
  char * const D.45052;
  char * D.45051;
  const char * D.45050;
  switch_payload_t D.45049;
  uint32_t D.45044;
  int D.45043;
  const int D.45042;
  const uint32_t D.45041;
  const struct switch_codec_implementation_t * D.45040;
  uint32_t D.45039;
  <unnamed-unsigned:7> D.45038;
  const char * D.45037;
  const char * D.45036;
  struct sdp_rtpmap_t * D.45035;
  int near_rate.96;
  int D.45029;
  const uint32_t D.45028;
  char * const D.45027;
  int D.45026;
  const int D.45025;
  char * const D.45014;
  int D.45013;
  _Bool D.45010;
  _Bool D.45009;
  _Bool D.45008;
  _Bool D.45005;
  _Bool D.45004;
  _Bool D.45003;
  switch_rtp_crypto_mode_t D.45002;
  _Bool D.45000;
  _Bool D.44999;
  _Bool D.44998;
  int D.44997;
  int codec_rate.94;
  int D.44994;
  _Bool D.44992;
  _Bool D.44991;
  _Bool D.44990;
  const uint32_t D.44985;
  int D.44980;
  int D.44978;
  _Bool D.44975;
  _Bool D.44974;
  _Bool D.44973;
  _Bool D.44970;
  _Bool D.44969;
  int D.44964;
  int D.44961;
  _Bool D.44958;
  _Bool D.44957;
  _Bool D.44956;
  _Bool D.44953;
  _Bool D.44952;
  _Bool D.44951;
  const uint32_t D.44948;
  int D.44945;
  int iftmp.93;
  _Bool D.44939;
  int D.44938;
  int D.44937;
  int D.44931;
  const int D.44930;
  int D.44929;
  const switch_payload_t D.44928;
  char * const D.44927;
  int remote_codec_rate.92;
  int D.44925;
  const switch_codec_type_t D.44922;
  const int D.44921;
  const struct switch_codec_implementation_t * * D.44920;
  unsigned int D.44919;
  unsigned int i.91;
  uint32_t D.44915;
  int D.44912;
  int D.44909;
  switch_status_t D.44906;
  int D.44901;
  int D.44897;
  const char * D.44893;
  int D.44890;
  const char * D.44889;
  uint32_t D.44885;
  uint32_t D.44884;
  _Bool D.44879;
  _Bool D.44878;
  _Bool D.44877;
  _Bool D.44870;
  switch_payload_t D.44869;
  int D.44868;
  int D.44863;
  int32_t D.44858;
  int D.44857;
  <unnamed-unsigned:7> D.44856;
  long unsigned int D.44855;
  long unsigned int D.44854;
  int D.44848;
  int D.44839;
  _Bool D.44836;
  _Bool D.44835;
  _Bool D.44834;
  _Bool D.44831;
  _Bool D.44830;
  _Bool D.44829;
  int D.44826;
  const char * D.44825;
  unsigned int D.44822;
  switch_core_media_NDLB_t D.44821;
  int D.44815;
  int D.44810;
  int D.44805;
  char * D.44800;
  short unsigned int D.44799;
  int D.44795;
  int D.44787;
  int D.44784;
  int D.44781;
  _Bool D.44779;
  _Bool D.44778;
  _Bool D.44777;
  char * D.44773;
  struct switch_channel_t * D.44772;
  const char * err.90;
  switch_status_t D.44768;
  int D.44767;
  int D.44766;
  char * D.44765;
  char * D.44764;
  switch_port_t D.44762;
  char * D.44760;
  int D.39032;
  _Bool D.44758;
  _Bool D.44757;
  _Bool D.44756;
  uint16_t D.44753;
  char * D.44752;
  const char * D.44751;
  struct payload_map_t * D.44750;
  int D.44747;
  const char * D.44746;
  int D.44743;
  const char * D.44742;
  char * D.44741;
  char * D.44740;
  uint32_t D.44737;
  struct switch_core_session_t * other_session.89;
  switch_status_t D.44733;
  uint8_t D.44730;
  uint32_t D.44728;
  uint32_t D.44726;
  uint32_t D.44724;
  uint32_t D.44723;
  int D.44716;
  int D.44707;
  uint32_t D.44706;
  int D.44703;
  const char * D.44702;
  int D.44699;
  long unsigned int D.44697;
  sdp_media_e D.44681;
  _Bool D.44678;
  _Bool D.44677;
  _Bool D.44676;
  sdp_proto_e D.44675;
  int D.44672;
  const char * D.44669;
  sdp_proto_e D.44666;
  const char * D.44665;
  const char * D.44663;
  const char * D.44661;
  int D.44655;
  struct switch_media_bug_t * D.44649;
  int D.44640;
  int D.44639;
  int D.44636;
  int D.44635;
  int32_t D.44631;
  _Bool D.44626;
  _Bool D.44625;
  _Bool D.44624;
  int D.44621;
  const char * D.44619;
  int D.44616;
  int D.44614;
  uint8_t D.44606;
  struct switch_rtp_t * D.44605;
  int D.44602;
  int D.44598;
  int D.44594;
  const char * D.44590;
  int D.44588;
  const unsigned char D.44587;
  char * D.44586;
  int D.44585;
  const unsigned char D.44584;
  const unsigned char * D.44583;
  _Bool D.44580;
  _Bool D.44579;
  int D.44578;
  const unsigned char D.44577;
  char * D.44576;
  int D.44575;
  const unsigned char D.44574;
  const unsigned char * D.44573;
  _Bool D.44570;
  _Bool D.44569;
  int D.44568;
  const unsigned char D.44567;
  char * D.44566;
  int D.44565;
  const unsigned char D.44564;
  const unsigned char * D.44563;
  _Bool D.44560;
  _Bool D.44559;
  _Bool D.44558;
  int D.44557;
  const unsigned char D.44556;
  char[8] * D.44555;
  int D.44554;
  const unsigned char D.44553;
  const char * D.44548;
  struct sdp_connection_t * D.44546;
  _Bool D.44544;
  _Bool D.44543;
  _Bool D.44542;
  unsigned char D.44541;
  unsigned char D.44540;
  int D.44533;
  struct switch_channel_t * D.44530;
  unsigned int D.44529;
  char * D.44526;
  unsigned int D.44523;
  unsigned int D.44522;
  switch_rtp_bug_flag_t D.44521;
  char * D.44518;
  _Bool D.44515;
  int D.44514;
  int D.44513;
  switch_rtp_bug_flag_t D.44512;
  char * D.44509;
  char * D.44508;
  const char * D.44507;
  struct sdp_origin_t * D.44506;
  int D.44502;
  int D.44498;
  int D.44494;
  int32_t D.44491;
  int32_t D.44490;
  int D.44485;
  struct switch_channel_t * D.44482;
  struct switch_core_session_t * D.44481;
  int D.44478;
  int D.44473;
  size_t D.44472;
  struct switch_core_media_params_t * D.44471;

<bb 2>:
  match_148 = 0;
  # DEBUG match => match_148
  best_te_149 = 0;
  # DEBUG best_te => best_te_149
  te_150 = 0;
  # DEBUG te => te_150
  cng_pt_151 = 0;
  # DEBUG cng_pt => cng_pt_151
  ptime_152 = 0;
  # DEBUG ptime => ptime_152
  dptime_153 = 0;
  # DEBUG dptime => dptime_153
  maxptime_154 = 0;
  # DEBUG maxptime => maxptime_154
  dmaxptime_155 = 0;
  # DEBUG dmaxptime => dmaxptime_155
  sendonly_156 = 0;
  # DEBUG sendonly => sendonly_156
  recvonly_157 = 0;
  # DEBUG recvonly => recvonly_157
  greedy_158 = 0;
  # DEBUG greedy => greedy_158
  x_159 = 0;
  # DEBUG x => x_159
  skip_160 = 0;
  # DEBUG skip => skip_160
  channel_162 = switch_core_session_get_channel (session_161(D));
  # DEBUG channel => channel_162
  crypto_163 = 0B;
  # DEBUG crypto => crypto_163
  got_crypto_164 = 0;
  # DEBUG got_crypto => got_crypto_164
  got_video_crypto_165 = 0;
  # DEBUG got_video_crypto => got_video_crypto_165
  got_audio_166 = 0;
  # DEBUG got_audio => got_audio_166
  got_avp_167 = 0;
  # DEBUG got_avp => got_avp_167
  got_video_avp_168 = 0;
  # DEBUG got_video_avp => got_video_avp_168
  got_video_savp_169 = 0;
  # DEBUG got_video_savp => got_video_savp_169
  got_savp_170 = 0;
  # DEBUG got_savp => got_savp_170
  got_udptl_171 = 0;
  # DEBUG got_udptl => got_udptl_171
  got_webrtc_172 = 0;
  # DEBUG got_webrtc => got_webrtc_172
  scrooge_173 = 0;
  # DEBUG scrooge => scrooge_173
  parser_174 = 0B;
  # DEBUG parser => parser_174
  reneg_175 = 1;
  # DEBUG reneg => reneg_175
  near_rate_176 = 0;
  # DEBUG near_rate => near_rate_176
  mimp_177 = 0B;
  # DEBUG mimp => mimp_177
  near_match_178 = 0B;
  # DEBUG near_match => near_match_178
  mmap_179 = 0B;
  # DEBUG mmap => mmap_179
  near_map_180 = 0B;
  # DEBUG near_map => near_map_180
  matches = {};
  near_matches = {};
  codec_ms_181 = 0;
  # DEBUG codec_ms => codec_ms_181
  remote_codec_rate_182 = 0;
  # DEBUG remote_codec_rate => remote_codec_rate_182
  fmtp_remote_codec_rate_183 = 0;
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_183
  m_idx_184 = 0;
  # DEBUG m_idx => m_idx_184
  nm_idx_185 = 0;
  # DEBUG nm_idx => nm_idx_185
  if (session_161(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_186 = session_161(D)->media_handle;
  # DEBUG smh => smh_186
  if (smh_186 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  match_187 = 0;
  goto <bb 455>;

<bb 6>:
  a_engine_188 = &smh_186->engines;
  # DEBUG a_engine => a_engine_188
  v_engine_189 = &smh_186->engines[1];
  # DEBUG v_engine => v_engine_189
  codec_array_190 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_190
  D.44471_191 = smh_186->mparams;
  total_codecs_192 = D.44471_191->num_codecs;
  # DEBUG total_codecs => total_codecs_192
  D.44472_194 = strlen (r_sdp_193(D));
  D.44473_195 = (int) D.44472_194;
  parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);
  # DEBUG parser => parser_196
  if (parser_196 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  match_197 = 0;
  goto <bb 455>;

<bb 8>:
  sdp_198 = sdp_session (parser_196);
  # DEBUG sdp => sdp_198
  if (sdp_198 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  sdp_parser_free (parser_196);
  match_199 = 0;
  goto <bb 455>;

<bb 10>:
  D.44478_200 = dtls_ok (session_161(D));
  if (D.44478_200 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.44481_201 = smh_186->session;
  D.44482_202 = D.44481_201->channel;
  tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_203
  if (tmp_203 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.44485_204 = switch_false (tmp_203);
  if (D.44485_204 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.44481_205 = smh_186->session;
  D.44482_206 = D.44481_205->channel;
  switch_channel_clear_flag (D.44482_206, 111);
  D.44481_207 = smh_186->session;
  D.44482_208 = D.44481_207->channel;
  switch_channel_clear_flag (D.44482_208, 109);

<bb 14>:
  switch_core_session_parse_crypto_prefs (session_161(D));
  # DEBUG engine => a_engine_188
  pmap_1458 = a_engine_188->payload_map;
  # DEBUG pmap => pmap_1458
  goto <bb 16>;

<bb 15>:
  pmap_1459->negotiated = 0;
  pmap_1459->current = 0;
  pmap_1460 = pmap_1459->next;
  # DEBUG pmap => pmap_1460

<bb 16>:
  # pmap_1459 = PHI <pmap_1458(14), pmap_1460(15)>
  # DEBUG pmap => pmap_1459
  if (pmap_1459 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.47872_1461 = pmap_1459->allocated;
  if (D.47872_1461 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

<bb 18>:
  # DEBUG engine => v_engine_189
  pmap_1462 = v_engine_189->payload_map;
  # DEBUG pmap => pmap_1462
  goto <bb 20>;

<bb 19>:
  pmap_1463->negotiated = 0;
  pmap_1463->current = 0;
  pmap_1464 = pmap_1463->next;
  # DEBUG pmap => pmap_1464

<bb 20>:
  # pmap_1463 = PHI <pmap_1462(18), pmap_1464(19)>
  # DEBUG pmap => pmap_1463
  if (pmap_1463 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.47875_1465 = pmap_1463->allocated;
  if (D.47875_1465 != 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 22>:
  if (proceed_209(D) != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  *proceed_209(D) = 1;

<bb 24>:
  D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);
  greedy_211 = D.44490_210 != 0;
  # DEBUG greedy => greedy_211
  D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);
  scrooge_213 = D.44491_212 != 0;
  # DEBUG scrooge => scrooge_213
  val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);
  # DEBUG val => val_214
  if (val_214 != 0B)
    goto <bb 25>;
  else
    goto <bb 32>;

<bb 25>:
  D.44494_215 = strcasecmp (val_214, "generous");
  if (D.44494_215 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  greedy_216 = 0;
  # DEBUG greedy => greedy_216
  scrooge_217 = 0;
  # DEBUG scrooge => scrooge_217
  goto <bb 32>;

<bb 27>:
  D.44498_218 = strcasecmp (val_214, "greedy");
  if (D.44498_218 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  greedy_219 = 1;
  # DEBUG greedy => greedy_219
  scrooge_220 = 0;
  # DEBUG scrooge => scrooge_220
  goto <bb 32>;

<bb 29>:
  D.44502_221 = strcasecmp (val_214, "scrooge");
  if (D.44502_221 == 0)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  scrooge_222 = 1;
  # DEBUG scrooge => scrooge_222
  greedy_223 = 1;
  # DEBUG greedy => greedy_223
  goto <bb 32>;

<bb 31>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);

<bb 32>:
  # greedy_47 = PHI <greedy_211(24), greedy_216(26), greedy_219(28), greedy_223(30), greedy_211(31)>
  # scrooge_80 = PHI <scrooge_213(24), scrooge_217(26), scrooge_220(28), scrooge_222(30), scrooge_213(31)>
  # DEBUG scrooge => scrooge_80
  # DEBUG greedy => greedy_47
  D.44506_224 = sdp_198->sdp_origin;
  D.44507_225 = D.44506_224->o_username;
  D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);
  smh_186->origin = D.44508_226;
  D.44509_227 = smh_186->origin;
  if (D.44509_227 != 0B)
    goto <bb 33>;
  else
    goto <bb 39>;

<bb 33>:
  D.44471_228 = smh_186->mparams;
  D.44512_229 = D.44471_228->auto_rtp_bugs;
  D.44513_230 = (int) D.44512_229;
  D.44514_231 = D.44513_230 & 1;
  D.44515_232 = (_Bool) D.44514_231;
  if (D.44515_232 != 0)
    goto <bb 34>;
  else
    goto <bb 36>;

<bb 34>:
  D.44509_233 = smh_186->origin;
  D.44518_234 = strstr (D.44509_233, "CiscoSystemsSIP-GW-UserAgent");
  if (D.44518_234 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.44521_235 = a_engine_188->rtp_bugs;
  D.44522_236 = D.44521_235 | 1;
  a_engine_188->rtp_bugs = D.44522_236;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");

<bb 36>:
  D.44471_237 = smh_186->mparams;
  D.44512_238 = D.44471_237->auto_rtp_bugs;
  D.44523_239 = D.44512_238 & 2;
  if (D.44523_239 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  D.44509_240 = smh_186->origin;
  D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
  if (D.44526_241 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.44521_242 = a_engine_188->rtp_bugs;
  D.44529_243 = D.44521_242 | 2;
  a_engine_188->rtp_bugs = D.44529_243;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");

<bb 39>:
  D.44530_244 = session_161(D)->channel;
  val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);
  # DEBUG val => val_245
  if (val_245 != 0B)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  D.44533_246 = switch_true (val_245);
  if (D.44533_246 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.44530_247 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_247, 93, 1);

<bb 42>:
  m_248 = sdp_198->sdp_media;
  # DEBUG m => m_248
  if (m_248 != 0B)
    goto <bb 43>;
  else
    goto <bb 55>;

<bb 43>:
  D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
  D.44541_250 = D.44540_249 & 6;
  D.44542_251 = D.44541_250 == 2;
  D.44543_252 = D.44541_250 == 0;
  D.44544_253 = D.44542_251 || D.44543_252;
  if (D.44544_253 != 0)
    goto <bb 54>;
  else
    goto <bb 44>;

<bb 44>:
  D.44546_254 = m_248->m_connections;
  if (D.44546_254 != 0B)
    goto <bb 45>;
  else
    goto <bb 55>;

<bb 45>:
  D.44546_255 = m_248->m_connections;
  D.44548_256 = D.44546_255->c_address;
  if (D.44548_256 != 0B)
    goto <bb 46>;
  else
    goto <bb 55>;

<bb 46>:
  __s2_len_257 = 7;
  # DEBUG __s2_len => __s2_len_257
  if (__s2_len_257 <= 3)
    goto <bb 47>;
  else
    goto <bb 52>;

<bb 47>:
  D.44546_258 = m_248->m_connections;
  __s1_259 = D.44546_258->c_address;
  # DEBUG __s1 => __s1_259
  D.44553_260 = *__s1_259;
  D.44554_261 = (int) D.44553_260;
  D.44555_262 = "0.0.0.0";
  D.44556_263 = MEM[(const unsigned char *)D.44555_262];
  D.44557_264 = (int) D.44556_263;
  __result_265 = D.44554_261 - D.44557_264;
  # DEBUG __result => __result_265
  D.44558_266 = __s2_len_257 != 0;
  D.44559_267 = __result_265 == 0;
  D.44560_268 = D.44558_266 && D.44559_267;
  if (D.44560_268 != 0)
    goto <bb 48>;
  else
    goto <bb 51>;

<bb 48>:
  D.44563_269 = __s1_259 + 1;
  D.44564_270 = *D.44563_269;
  D.44565_271 = (int) D.44564_270;
  D.44566_272 = &"0.0.0.0"[1];
  D.44567_273 = MEM[(const unsigned char *)D.44566_272];
  D.44568_274 = (int) D.44567_273;
  __result_275 = D.44565_271 - D.44568_274;
  # DEBUG __result => __result_275
  D.44569_276 = __s2_len_257 > 1;
  D.44559_277 = __result_275 == 0;
  D.44570_278 = D.44569_276 && D.44559_277;
  if (D.44570_278 != 0)
    goto <bb 49>;
  else
    goto <bb 51>;

<bb 49>:
  D.44573_279 = __s1_259 + 2;
  D.44574_280 = *D.44573_279;
  D.44575_281 = (int) D.44574_280;
  D.44576_282 = &"0.0.0.0"[2];
  D.44577_283 = MEM[(const unsigned char *)D.44576_282];
  D.44578_284 = (int) D.44577_283;
  __result_285 = D.44575_281 - D.44578_284;
  # DEBUG __result => __result_285
  D.44579_286 = __s2_len_257 > 2;
  D.44559_287 = __result_285 == 0;
  D.44580_288 = D.44579_286 && D.44559_287;
  if (D.44580_288 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  D.44583_289 = __s1_259 + 3;
  D.44584_290 = *D.44583_289;
  D.44585_291 = (int) D.44584_290;
  D.44586_292 = &"0.0.0.0"[3];
  D.44587_293 = MEM[(const unsigned char *)D.44586_292];
  D.44588_294 = (int) D.44587_293;
  __result_295 = D.44585_291 - D.44588_294;
  # DEBUG __result => __result_295

<bb 51>:
  # __result_123 = PHI <__result_265(47), __result_275(48), __result_285(49), __result_295(50)>
  # DEBUG __result => __result_123
  __result_296 = __result_123;
  __result_297 = __result_296;
  goto <bb 53>;

<bb 52>:
  D.44546_298 = m_248->m_connections;
  D.44548_299 = D.44546_298->c_address;
  __result_300 = __builtin_strcmp (D.44548_299, "0.0.0.0");

<bb 53>:
  # __result_143 = PHI <__result_297(51), __result_300(52)>
  __result_301 = __result_143;
  if (__result_301 == 0)
    goto <bb 54>;
  else
    goto <bb 55>;

<bb 54>:
  sendonly_302 = 2;
  # DEBUG sendonly => sendonly_302

<bb 55>:
  # sendonly_42 = PHI <sendonly_156(42), sendonly_156(44), sendonly_156(45), sendonly_156(53), sendonly_302(54)>
  # DEBUG sendonly => sendonly_42
  attr_303 = sdp_198->sdp_attributes;
  # DEBUG attr => attr_303
  goto <bb 77>;

<bb 56>:
  D.44590_304 = attr_29->a_name;
  # DEBUG s => D.44590_304
  if (D.44590_304 == 0B)
    goto <bb 59>;
  else
    goto <bb 57>;

<bb 57>:
  D.47878_1466 = *D.44590_304;
  if (D.47878_1466 == 0)
    goto <bb 59>;
  else
    goto <bb 58>;

<bb 58>:

<bb 59>:
  # D.47877_1467 = PHI <1(56), 1(57), 0(58)>
  D.47877_1520 = D.47877_1467;
  D.47877_305 = D.47877_1520;
  if (D.47877_305 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  // predicted unlikely by continue predictor.
  goto <bb 76>;

<bb 61>:
  D.44590_306 = attr_29->a_name;
  D.44594_307 = strcasecmp (D.44590_306, "sendonly");
  if (D.44594_307 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  sendonly_308 = 1;
  # DEBUG sendonly => sendonly_308
  D.44530_309 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);
  goto <bb 76>;

<bb 63>:
  D.44590_310 = attr_29->a_name;
  D.44598_311 = strcasecmp (D.44590_310, "inactive");
  if (D.44598_311 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  sendonly_312 = 1;
  # DEBUG sendonly => sendonly_312
  D.44530_313 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);
  goto <bb 76>;

<bb 65>:
  D.44590_314 = attr_29->a_name;
  D.44602_315 = strcasecmp (D.44590_314, "recvonly");
  if (D.44602_315 == 0)
    goto <bb 66>;
  else
    goto <bb 69>;

<bb 66>:
  D.44530_316 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);
  recvonly_317 = 1;
  # DEBUG recvonly => recvonly_317
  D.44605_318 = a_engine_188->rtp_session;
  D.44606_319 = switch_rtp_ready (D.44605_318);
  if (D.44606_319 != 0)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  D.44605_320 = a_engine_188->rtp_session;
  switch_rtp_set_max_missed_packets (D.44605_320, 0);
  a_engine_188->max_missed_hold_packets = 0;
  a_engine_188->max_missed_packets = 0;
  goto <bb 76>;

<bb 68>:
  D.44530_321 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);
  D.44530_322 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);
  goto <bb 76>;

<bb 69>:
  if (sendonly_44 <= 1)
    goto <bb 70>;
  else
    goto <bb 72>;

<bb 70>:
  D.44590_323 = attr_29->a_name;
  D.44614_324 = strcasecmp (D.44590_323, "sendrecv");
  if (D.44614_324 == 0)
    goto <bb 71>;
  else
    goto <bb 72>;

<bb 71>:
  sendonly_325 = 0;
  # DEBUG sendonly => sendonly_325
  goto <bb 76>;

<bb 72>:
  D.44590_326 = attr_29->a_name;
  D.44616_327 = strcasecmp (D.44590_326, "ptime");
  if (D.44616_327 == 0)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  D.44619_328 = attr_29->a_value;
  # DEBUG __nptr => D.44619_328
  dptime_1468 = strtol (D.44619_328, 0B, 10);
  dptime_1522 = dptime_1468;
  dptime_329 = dptime_1522;
  # DEBUG dptime => NULL
  goto <bb 76>;

<bb 74>:
  D.44590_330 = attr_29->a_name;
  D.44621_331 = strcasecmp (D.44590_330, "maxptime");
  if (D.44621_331 == 0)
    goto <bb 75>;
  else
    goto <bb 76>;

<bb 75>:
  D.44619_332 = attr_29->a_value;
  # DEBUG __nptr => D.44619_332
  dmaxptime_1469 = strtol (D.44619_332, 0B, 10);
  dmaxptime_1524 = dmaxptime_1469;
  dmaxptime_333 = dmaxptime_1524;
  # DEBUG dmaxptime => NULL

<bb 76>:
  # dptime_36 = PHI <dptime_37(60), dptime_37(62), dptime_37(64), dptime_37(68), dptime_37(71), dptime_329(73), dptime_37(74), dptime_37(75), dptime_37(67)>
  # dmaxptime_40 = PHI <dmaxptime_41(60), dmaxptime_41(62), dmaxptime_41(64), dmaxptime_41(68), dmaxptime_41(71), dmaxptime_41(73), dmaxptime_41(74), dmaxptime_333(75), dmaxptime_41(67)>
  # sendonly_43 = PHI <sendonly_44(60), sendonly_308(62), sendonly_312(64), sendonly_44(68), sendonly_325(71), sendonly_44(73), sendonly_44(74), sendonly_44(75), sendonly_44(67)>
  # recvonly_45 = PHI <recvonly_46(60), recvonly_46(62), recvonly_46(64), recvonly_317(68), recvonly_46(71), recvonly_46(73), recvonly_46(74), recvonly_46(75), recvonly_317(67)>
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  attr_334 = attr_29->a_next;
  # DEBUG attr => attr_334

<bb 77>:
  # attr_29 = PHI <attr_303(55), attr_334(76)>
  # dptime_37 = PHI <dptime_153(55), dptime_36(76)>
  # dmaxptime_41 = PHI <dmaxptime_155(55), dmaxptime_40(76)>
  # sendonly_44 = PHI <sendonly_42(55), sendonly_43(76)>
  # recvonly_46 = PHI <recvonly_157(55), recvonly_45(76)>
  # DEBUG recvonly => recvonly_46
  # DEBUG sendonly => sendonly_44
  # DEBUG dmaxptime => dmaxptime_41
  # DEBUG dptime => dptime_37
  # DEBUG attr => attr_29
  if (attr_29 != 0B)
    goto <bb 56>;
  else
    goto <bb 78>;

<bb 78>:
  D.44624_335 = sendonly_44 != 1;
  D.44625_336 = recvonly_46 != 1;
  D.44626_337 = D.44624_335 && D.44625_336;
  if (D.44626_337 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

<bb 79>:
  D.44530_338 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);

<bb 80>:
  D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);
  if (D.44631_339 == 0)
    goto <bb 81>;
  else
    goto <bb 87>;

<bb 81>:
  D.44530_340 = session_161(D)->channel;
  val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);
  # DEBUG val => val_341
  if (val_341 == 0B)
    goto <bb 83>;
  else
    goto <bb 82>;

<bb 82>:
  D.44635_342 = switch_true (val_341);
  if (D.44635_342 == 0)
    goto <bb 83>;
  else
    goto <bb 87>;

<bb 83>:
  D.44471_343 = smh_186->mparams;
  D.44636_344 = D.44471_343->hold_laps;
  if (D.44636_344 == 0)
    goto <bb 84>;
  else
    goto <bb 87>;

<bb 84>:
  D.44471_345 = smh_186->mparams;
  D.44636_346 = D.44471_345->hold_laps;
  D.44639_347 = D.44636_346 + 1;
  D.44471_345->hold_laps = D.44639_347;
  D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_44);
  if (D.44640_348 != 0)
    goto <bb 85>;
  else
    goto <bb 87>;

<bb 85>:
  reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);
  # DEBUG reneg => reneg_349
  D.44530_350 = session_161(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

<bb 86>:
  reneg_352 = switch_true (val_351);
  # DEBUG reneg => reneg_352

<bb 87>:
  # reneg_81 = PHI <reneg_175(80), reneg_175(82), reneg_175(83), reneg_175(84), reneg_349(85), reneg_352(86)>
  # DEBUG reneg => reneg_81
  if (reneg_81 != 0)
    goto <bb 88>;
  else
    goto <bb 90>;

<bb 88>:
  reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);
  # DEBUG reneg => reneg_353
  D.44530_354 = session_161(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 89>;
  else
    goto <bb 90>;

<bb 89>:
  reneg_356 = switch_true (val_355);
  # DEBUG reneg => reneg_356

<bb 90>:
  # reneg_82 = PHI <reneg_81(87), reneg_353(88), reneg_356(89)>
  # DEBUG reneg => reneg_82
  D.44649_357 = session_161(D)->bugs;
  if (D.44649_357 != 0B)
    goto <bb 91>;
  else
    goto <bb 92>;

<bb 91>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");
  reneg_358 = 0;
  # DEBUG reneg => reneg_358

<bb 92>:
  # reneg_83 = PHI <reneg_82(90), reneg_358(91)>
  # DEBUG reneg => reneg_83
  if (reneg_83 == 0)
    goto <bb 93>;
  else
    goto <bb 95>;

<bb 93>:
  D.44655_359 = smh_186->num_negotiated_codecs;
  if (D.44655_359 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  codec_array_360 = &smh_186->negotiated_codecs;
  # DEBUG codec_array => codec_array_360
  total_codecs_361 = smh_186->num_negotiated_codecs;
  # DEBUG total_codecs => total_codecs_361
  goto <bb 97>;

<bb 95>:
  if (reneg_83 != 0)
    goto <bb 96>;
  else
    goto <bb 97>;

<bb 96>:
  D.44471_362 = smh_186->mparams;
  D.44471_362->num_codecs = 0;
  switch_core_media_prepare_codecs (session_161(D), 0);
  codec_array_363 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_363
  D.44471_364 = smh_186->mparams;
  total_codecs_365 = D.44471_364->num_codecs;
  # DEBUG total_codecs => total_codecs_365

<bb 97>:
  # codec_array_84 = PHI <codec_array_360(94), codec_array_190(95), codec_array_363(96)>
  # total_codecs_85 = PHI <total_codecs_361(94), total_codecs_192(95), total_codecs_365(96)>
  # DEBUG total_codecs => total_codecs_85
  # DEBUG codec_array => codec_array_84
  D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));
  if (D.44661_366 != 0B)
    goto <bb 100>;
  else
    goto <bb 98>;

<bb 98>:
  D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));
  if (D.44663_367 != 0B)
    goto <bb 100>;
  else
    goto <bb 99>;

<bb 99>:
  D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));
  if (D.44665_368 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  D.44530_369 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);

<bb 101>:
  switch_core_media_find_zrtp_hash (session_161(D), sdp_198);
  switch_core_media_pass_zrtp_hash (session_161(D));
  check_ice (smh_186, 0, sdp_198, 0B);
  check_ice (smh_186, 1, sdp_198, 0B);
  m_370 = sdp_198->sdp_media;
  # DEBUG m => m_370
  goto <bb 451>;

<bb 102>:
  ptime_371 = dptime_37;
  # DEBUG ptime => ptime_371
  maxptime_372 = dmaxptime_41;
  # DEBUG maxptime => maxptime_372
  D.44666_373 = m_28->m_proto;
  if (D.44666_373 == 261)
    goto <bb 103>;
  else
    goto <bb 104>;

<bb 103>:
  got_webrtc_374 = got_webrtc_79 + 1;
  # DEBUG got_webrtc => got_webrtc_374
  switch_core_session_set_ice (session_161(D));

<bb 104>:
  # got_webrtc_78 = PHI <got_webrtc_79(102), got_webrtc_374(103)>
  # DEBUG got_webrtc => got_webrtc_78
  D.44669_375 = m_28->m_proto_name;
  if (D.44669_375 != 0B)
    goto <bb 105>;
  else
    goto <bb 107>;

<bb 105>:
  D.44669_376 = m_28->m_proto_name;
  D.44672_377 = strcasecmp (D.44669_376, "UDP/TLS/RTP/SAVPF");
  if (D.44672_377 == 0)
    goto <bb 106>;
  else
    goto <bb 107>;

<bb 106>:
  D.44530_378 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_378, 107, 1);

<bb 107>:
  D.44675_379 = m_28->m_proto;
  D.44676_380 = D.44675_379 == 257;
  D.44677_381 = D.44675_379 == 261;
  D.44678_382 = D.44676_380 || D.44677_381;
  if (D.44678_382 != 0)
    goto <bb 108>;
  else
    goto <bb 111>;

<bb 108>:
  D.44681_383 = m_28->m_type;
  if (D.44681_383 == 2)
    goto <bb 109>;
  else
    goto <bb 110>;

<bb 109>:
  got_savp_384 = got_savp_75 + 1;
  # DEBUG got_savp => got_savp_384
  goto <bb 117>;

<bb 110>:
  got_video_savp_385 = got_video_savp_73 + 1;
  # DEBUG got_video_savp => got_video_savp_385
  goto <bb 117>;

<bb 111>:
  D.44666_386 = m_28->m_proto;
  if (D.44666_386 == 256)
    goto <bb 112>;
  else
    goto <bb 115>;

<bb 112>:
  D.44681_387 = m_28->m_type;
  if (D.44681_387 == 2)
    goto <bb 113>;
  else
    goto <bb 114>;

<bb 113>:
  got_avp_388 = got_avp_69 + 1;
  # DEBUG got_avp => got_avp_388
  goto <bb 117>;

<bb 114>:
  got_video_avp_389 = got_video_avp_71 + 1;
  # DEBUG got_video_avp => got_video_avp_389
  goto <bb 117>;

<bb 115>:
  D.44666_390 = m_28->m_proto;
  if (D.44666_390 == 258)
    goto <bb 116>;
  else
    goto <bb 117>;

<bb 116>:
  got_udptl_391 = got_udptl_77 + 1;
  # DEBUG got_udptl => got_udptl_391

<bb 117>:
  # got_avp_68 = PHI <got_avp_69(110), got_avp_69(114), got_avp_69(115), got_avp_69(116), got_avp_69(109), got_avp_388(113)>
  # got_video_avp_70 = PHI <got_video_avp_71(110), got_video_avp_389(114), got_video_avp_71(115), got_video_avp_71(116), got_video_avp_71(109), got_video_avp_71(113)>
  # got_video_savp_72 = PHI <got_video_savp_385(110), got_video_savp_73(114), got_video_savp_73(115), got_video_savp_73(116), got_video_savp_73(109), got_video_savp_73(113)>
  # got_savp_74 = PHI <got_savp_75(110), got_savp_75(114), got_savp_75(115), got_savp_75(116), got_savp_384(109), got_savp_75(113)>
  # got_udptl_76 = PHI <got_udptl_77(110), got_udptl_77(114), got_udptl_77(115), got_udptl_391(116), got_udptl_77(109), got_udptl_77(113)>
  # DEBUG got_udptl => got_udptl_76
  # DEBUG got_savp => got_savp_74
  # DEBUG got_video_savp => got_video_savp_72
  # DEBUG got_video_avp => got_video_avp_70
  # DEBUG got_avp => got_avp_68
  if (got_udptl_76 != 0)
    goto <bb 118>;
  else
    goto <bb 153>;

<bb 118>:
  D.44681_392 = m_28->m_type;
  if (D.44681_392 == 8)
    goto <bb 119>;
  else
    goto <bb 153>;

<bb 119>:
  D.44697_393 = m_28->m_port;
  if (D.44697_393 != 0)
    goto <bb 120>;
  else
    goto <bb 153>;

<bb 120>:
  t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_28);
  # DEBUG t38_options => t38_options_394
  D.44530_395 = session_161(D)->channel;
  D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);
  if (D.44699_396 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

<bb 121>:
  match_397 = 1;
  # DEBUG match => match_397
  goto <bb 452> (done);

<bb 122>:
  D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);
  D.44703_399 = switch_true (D.44702_398);
  if (D.44703_399 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

<bb 123>:
  D.44530_400 = session_161(D)->channel;
  switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);
  match_401 = 0;
  # DEBUG match => match_401
  goto <bb 452> (done);

<bb 124>:
  var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);
  # DEBUG var => var_402
  D.44481_403 = smh_186->session;
  D.44482_404 = D.44481_403->channel;
  D.44706_405 = switch_channel_test_flag (D.44482_404, 101);
  pass_406 = (int) D.44706_405;
  # DEBUG pass => pass_406
  D.44530_407 = session_161(D)->channel;
  D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);
  if (D.44707_408 != 0)
    goto <bb 125>;
  else
    goto <bb 127>;

<bb 125>:
  if (proceed_209(D) != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;

<bb 126>:
  *proceed_209(D) = 0;

<bb 127>:
  if (var_402 != 0B)
    goto <bb 128>;
  else
    goto <bb 131>;

<bb 128>:
  pass_409 = switch_true (var_402);
  # DEBUG pass => pass_409
  if (pass_409 == 0)
    goto <bb 129>;
  else
    goto <bb 131>;

<bb 129>:
  D.44716_410 = strcasecmp (var_402, "once");
  if (D.44716_410 == 0)
    goto <bb 130>;
  else
    goto <bb 131>;

<bb 130>:
  pass_411 = 2;
  # DEBUG pass => pass_411

<bb 131>:
  # pass_126 = PHI <pass_406(127), pass_409(128), pass_409(129), pass_411(130)>
  # DEBUG pass => pass_126
  if (pass_126 == 2)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  D.44481_412 = smh_186->session;
  D.44482_413 = D.44481_412->channel;
  D.44723_414 = switch_channel_test_flag (D.44482_413, 101);
  if (D.44723_414 != 0)
    goto <bb 137>;
  else
    goto <bb 133>;

<bb 133>:
  D.44530_415 = session_161(D)->channel;
  D.44724_416 = switch_channel_test_flag (D.44530_415, 103);
  if (D.44724_416 == 0)
    goto <bb 137>;
  else
    goto <bb 134>;

<bb 134>:
  D.44530_417 = session_161(D)->channel;
  D.44726_418 = switch_channel_test_flag (D.44530_417, 15);
  if (D.44726_418 != 0)
    goto <bb 137>;
  else
    goto <bb 135>;

<bb 135>:
  D.44530_419 = session_161(D)->channel;
  D.44728_420 = switch_channel_test_flag (D.44530_419, 29);
  if (D.44728_420 != 0)
    goto <bb 137>;
  else
    goto <bb 136>;

<bb 136>:
  D.44605_421 = a_engine_188->rtp_session;
  D.44730_422 = switch_rtp_ready (D.44605_421);
  if (D.44730_422 == 0)
    goto <bb 137>;
  else
    goto <bb 138>;

<bb 137>:
  pass_423 = 0;
  # DEBUG pass => pass_423

<bb 138>:
  # pass_127 = PHI <pass_126(136), pass_423(137)>
  # DEBUG pass => pass_127
  if (pass_127 != 0)
    goto <bb 139>;
  else
    goto <bb 152>;

<bb 139>:
  D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);
  if (D.44733_424 == 0)
    goto <bb 140>;
  else
    goto <bb 152>;

<bb 140>:
  other_session.89_425 = other_session;
  other_channel_426 = switch_core_session_get_channel (other_session.89_425);
  # DEBUG other_channel => other_channel_426
  D.44605_427 = a_engine_188->rtp_session;
  remote_host_428 = switch_rtp_get_remote_host (D.44605_427);
  # DEBUG remote_host => remote_host_428
  D.44605_429 = a_engine_188->rtp_session;
  remote_port_430 = switch_rtp_get_remote_port (D.44605_429);
  # DEBUG remote_port => remote_port_430
  tmp = "";
  D.44737_431 = switch_channel_test_flag (other_channel_426, 1);
  if (D.44737_431 == 0)
    goto <bb 141>;
  else
    goto <bb 142>;

<bb 141>:
  D.44530_432 = session_161(D)->channel;
  D.44740_433 = switch_channel_get_name (D.44530_432);
  D.44741_434 = switch_channel_get_name (other_channel_426);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);
  other_session.89_435 = other_session;
  switch_core_session_rwunlock (other_session.89_435);
  pass_436 = 0;
  # DEBUG pass => pass_436
  match_437 = 0;
  # DEBUG match => match_437
  goto <bb 452> (done);

<bb 142>:
  D.44530_438 = session_161(D)->channel;
  D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);
  D.44743_440 = switch_true (D.44742_439);
  if (D.44743_440 != 0)
    goto <bb 143>;
  else
    goto <bb 145>;

<bb 143>:
  D.44530_441 = session_161(D)->channel;
  D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);
  D.44747_443 = switch_true (D.44746_442);
  if (D.44747_443 != 0)
    goto <bb 144>;
  else
    goto <bb 145>;

<bb 144>:
  switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);

<bb 145>:
  D.44750_444 = a_engine_188->cur_payload_map;
  D.44751_445 = t38_options_394->remote_ip;
  D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);
  D.44750_444->remote_sdp_ip = D.44752_446;
  D.44750_447 = a_engine_188->cur_payload_map;
  D.44753_448 = t38_options_394->remote_port;
  D.44750_447->remote_sdp_port = D.44753_448;
  D.44756_449 = remote_host_428 != 0B;
  D.44757_450 = remote_port_430 != 0;
  D.44758_451 = D.44756_449 && D.44757_450;
  if (D.44758_451 != 0)
    goto <bb 146>;
  else
    goto <bb 149>;

<bb 146>:
  D.44750_452 = a_engine_188->cur_payload_map;
  D.44760_453 = D.44750_452->remote_sdp_ip;
  D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
  if (D.39032_454 == 0)
    goto <bb 147>;
  else
    goto <bb 149>;

<bb 147>:
  D.44750_455 = a_engine_188->cur_payload_map;
  D.44762_456 = D.44750_455->remote_sdp_port;
  if (D.44762_456 == remote_port_430)
    goto <bb 148>;
  else
    goto <bb 149>;

<bb 148>:
  D.44530_457 = session_161(D)->channel;
  D.44764_458 = switch_channel_get_name (D.44530_457);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);
  goto <bb 151>;

<bb 149>:
  err = 0B;
  D.44530_459 = session_161(D)->channel;
  D.44765_460 = switch_channel_get_name (D.44530_459);
  D.44766_461 = (int) remote_port_430;
  D.44750_462 = a_engine_188->cur_payload_map;
  D.44760_463 = D.44750_462->remote_sdp_ip;
  D.44750_464 = a_engine_188->cur_payload_map;
  D.44762_465 = D.44750_464->remote_sdp_port;
  D.44767_466 = (int) D.44762_465;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);
  D.44750_467 = a_engine_188->cur_payload_map;
  D.44762_468 = D.44750_467->remote_sdp_port;
  D.44767_469 = (int) D.44762_468;
  switch_snprintf (&tmp, 32, "%d", D.44767_469);
  D.44530_470 = session_161(D)->channel;
  D.44750_471 = a_engine_188->cur_payload_map;
  D.44760_472 = D.44750_471->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);
  D.44530_473 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);
  D.44605_474 = a_engine_188->rtp_session;
  D.44750_475 = a_engine_188->cur_payload_map;
  D.44760_476 = D.44750_475->remote_sdp_ip;
  D.44750_477 = a_engine_188->cur_payload_map;
  D.44762_478 = D.44750_477->remote_sdp_port;
  D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);
  if (D.44768_479 != 0)
    goto <bb 150>;
  else
    goto <bb 151>;

<bb 150>:
  err.90_480 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);
  switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);

<bb 151>:
  other_session.89_481 = other_session;
  switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);
  D.44481_482 = smh_186->session;
  D.44482_483 = D.44481_482->channel;
  switch_channel_set_flag_value (D.44482_483, 101, 1);
  other_session.89_484 = other_session;
  D.44772_485 = other_session.89_484->channel;
  switch_channel_set_flag_value (D.44772_485, 101, 1);
  other_session.89_486 = other_session;
  msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);
  # DEBUG msg => msg_487
  msg_487->message_id = 21;
  msg_487->from = "src/switch_core_media.c";
  other_session.89_488 = other_session;
  D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);
  msg_487->string_arg = D.44773_489;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));
  other_session.89_490 = other_session;
  switch_core_session_queue_message (other_session.89_490, msg_487);
  other_session.89_491 = other_session;
  switch_core_session_rwunlock (other_session.89_491);

<bb 152>:
  match_492 = 1;
  # DEBUG match => match_492
  goto <bb 452> (done);

<bb 153>:
  D.44681_493 = m_28->m_type;
  if (D.44681_493 == 2)
    goto <bb 154>;
  else
    goto <bb 349>;

<bb 154>:
  D.44697_494 = m_28->m_port;
  D.44777_495 = D.44697_494 != 0;
  D.44778_496 = got_audio_67 == 0;
  D.44779_497 = D.44777_495 && D.44778_496;
  if (D.44779_497 != 0)
    goto <bb 155>;
  else
    goto <bb 349>;

<bb 155>:
  D.44781_498 = switch_rtp_has_dtls ();
  if (D.44781_498 != 0)
    goto <bb 156>;
  else
    goto <bb 166>;

<bb 156>:
  D.44784_499 = dtls_ok (session_161(D));
  if (D.44784_499 != 0)
    goto <bb 157>;
  else
    goto <bb 166>;

<bb 157>:
  attr_500 = m_28->m_attributes;
  # DEBUG attr => attr_500
  goto <bb 165>;

<bb 158>:
  D.44590_501 = attr_30->a_name;
  D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
  if (D.44787_502 == 0)
    goto <bb 159>;
  else
    goto <bb 164>;

<bb 159>:
  D.44619_503 = attr_30->a_value;
  # DEBUG s => D.44619_503
  if (D.44619_503 == 0B)
    goto <bb 162>;
  else
    goto <bb 160>;

<bb 160>:
  D.47888_1470 = *D.44619_503;
  if (D.47888_1470 == 0)
    goto <bb 162>;
  else
    goto <bb 161>;

<bb 161>:

<bb 162>:
  # D.47887_1471 = PHI <1(159), 1(160), 0(161)>
  D.47887_1525 = D.47887_1471;
  D.47887_504 = D.47887_1525;
  if (D.47887_504 == 0)
    goto <bb 163>;
  else
    goto <bb 164>;

<bb 163>:
  got_crypto_505 = 1;
  # DEBUG got_crypto => got_crypto_505

<bb 164>:
  # got_crypto_50 = PHI <got_crypto_51(158), got_crypto_51(162), got_crypto_505(163)>
  # DEBUG got_crypto => got_crypto_50
  attr_506 = attr_30->a_next;
  # DEBUG attr => attr_506

<bb 165>:
  # attr_30 = PHI <attr_500(157), attr_506(164)>
  # got_crypto_51 = PHI <got_crypto_56(157), got_crypto_50(164)>
  # DEBUG got_crypto => got_crypto_51
  # DEBUG attr => attr_30
  if (attr_30 != 0B)
    goto <bb 158>;
  else
    goto <bb 166>;

<bb 166>:
  # got_crypto_52 = PHI <got_crypto_56(155), got_crypto_56(156), got_crypto_51(165)>
  # DEBUG got_crypto => got_crypto_52
  attr_507 = m_28->m_attributes;
  # DEBUG attr => attr_507
  goto <bb 189>;

<bb 167>:
  D.44590_508 = attr_31->a_name;
  D.44795_509 = strcasecmp (D.44590_508, "rtcp");
  if (D.44795_509 == 0)
    goto <bb 168>;
  else
    goto <bb 171>;

<bb 168>:
  D.44619_510 = attr_31->a_value;
  if (D.44619_510 != 0B)
    goto <bb 169>;
  else
    goto <bb 171>;

<bb 169>:
  D.44530_511 = session_161(D)->channel;
  D.44619_512 = attr_31->a_value;
  switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_512, 1);
  D.44619_513 = attr_31->a_value;
  # DEBUG __nptr => D.44619_513
  D.47891_1472 = strtol (D.44619_513, 0B, 10);
  D.47891_1527 = D.47891_1472;
  D.47891_514 = D.47891_1527;
  D.44799_515 = (short unsigned int) D.47891_514;
  a_engine_188->remote_rtcp_port = D.44799_515;
  D.44471_516 = smh_186->mparams;
  D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
  if (D.44800_517 == 0B)
    goto <bb 170>;
  else
    goto <bb 188>;

<bb 170>:
  D.44471_518 = smh_186->mparams;
  D.44471_518->rtcp_audio_interval_msec = "5000";
  goto <bb 188>;

<bb 171>:
  D.44590_519 = attr_31->a_name;
  D.44805_520 = strcasecmp (D.44590_519, "ptime");
  if (D.44805_520 == 0)
    goto <bb 172>;
  else
    goto <bb 174>;

<bb 172>:
  D.44619_521 = attr_31->a_value;
  if (D.44619_521 != 0B)
    goto <bb 173>;
  else
    goto <bb 174>;

<bb 173>:
  D.44619_522 = attr_31->a_value;
  # DEBUG __nptr => D.44619_522
  ptime_1473 = strtol (D.44619_522, 0B, 10);
  ptime_1529 = ptime_1473;
  ptime_523 = ptime_1529;
  # DEBUG ptime => NULL
  goto <bb 188>;

<bb 174>:
  D.44590_524 = attr_31->a_name;
  D.44810_525 = strcasecmp (D.44590_524, "maxptime");
  if (D.44810_525 == 0)
    goto <bb 175>;
  else
    goto <bb 177>;

<bb 175>:
  D.44619_526 = attr_31->a_value;
  if (D.44619_526 != 0B)
    goto <bb 176>;
  else
    goto <bb 177>;

<bb 176>:
  D.44619_527 = attr_31->a_value;
  # DEBUG __nptr => D.44619_527
  maxptime_1474 = strtol (D.44619_527, 0B, 10);
  maxptime_1531 = maxptime_1474;
  maxptime_528 = maxptime_1531;
  # DEBUG maxptime => NULL
  goto <bb 188>;

<bb 177>:
  if (got_crypto_54 <= 0)
    goto <bb 178>;
  else
    goto <bb 188>;

<bb 178>:
  D.44590_529 = attr_31->a_name;
  D.44815_530 = strcasecmp (D.44590_529, "crypto");
  if (D.44815_530 == 0)
    goto <bb 179>;
  else
    goto <bb 188>;

<bb 179>:
  D.44619_531 = attr_31->a_value;
  # DEBUG s => D.44619_531
  if (D.44619_531 == 0B)
    goto <bb 182>;
  else
    goto <bb 180>;

<bb 180>:
  D.47901_1475 = *D.44619_531;
  if (D.47901_1475 == 0)
    goto <bb 182>;
  else
    goto <bb 181>;

<bb 181>:

<bb 182>:
  # D.47900_1476 = PHI <1(179), 1(180), 0(181)>
  D.47900_1532 = D.47900_1476;
  D.47900_532 = D.47900_1532;
  if (D.47900_532 == 0)
    goto <bb 183>;
  else
    goto <bb 188>;

<bb 183>:
  D.44471_533 = smh_186->mparams;
  D.44821_534 = D.44471_533->ndlb;
  D.44822_535 = D.44821_534 & 4;
  if (D.44822_535 == 0)
    goto <bb 184>;
  else
    goto <bb 187>;

<bb 184>:
  D.44530_536 = session_161(D)->channel;
  D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);
  D.44826_538 = switch_true (D.44825_537);
  if (D.44826_538 == 0)
    goto <bb 185>;
  else
    goto <bb 187>;

<bb 185>:
  D.44666_539 = m_28->m_proto;
  D.44829_540 = D.44666_539 != 257;
  D.44830_541 = got_webrtc_78 == 0;
  D.44831_542 = D.44829_540 && D.44830_541;
  if (D.44831_542 != 0)
    goto <bb 186>;
  else
    goto <bb 187>;

<bb 186>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  match_543 = 0;
  # DEBUG match => match_543
  goto <bb 452> (done);

<bb 187>:
  crypto_544 = attr_31->a_value;
  # DEBUG crypto => crypto_544
  # DEBUG __nptr => crypto_544
  crypto_tag_1477 = strtol (crypto_544, 0B, 10);
  crypto_tag_1534 = crypto_tag_1477;
  crypto_tag_545 = crypto_tag_1534;
  # DEBUG crypto_tag => NULL
  got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, crypto_544, crypto_tag_545, sdp_type_546(D));
  # DEBUG got_crypto => got_crypto_547

<bb 188>:
  # ptime_34 = PHI <ptime_35(170), ptime_523(173), ptime_35(176), ptime_35(177), ptime_35(178), ptime_35(182), ptime_35(187), ptime_35(169)>
  # maxptime_38 = PHI <maxptime_39(170), maxptime_39(173), maxptime_528(176), maxptime_39(177), maxptime_39(178), maxptime_39(182), maxptime_39(187), maxptime_39(169)>
  # got_crypto_53 = PHI <got_crypto_54(170), got_crypto_54(173), got_crypto_54(176), got_crypto_54(177), got_crypto_54(178), got_crypto_54(182), got_crypto_547(187), got_crypto_54(169)>
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  attr_548 = attr_31->a_next;
  # DEBUG attr => attr_548

<bb 189>:
  # attr_31 = PHI <attr_507(166), attr_548(188)>
  # ptime_35 = PHI <ptime_371(166), ptime_34(188)>
  # maxptime_39 = PHI <maxptime_372(166), maxptime_38(188)>
  # got_crypto_54 = PHI <got_crypto_52(166), got_crypto_53(188)>
  # DEBUG got_crypto => got_crypto_54
  # DEBUG maxptime => maxptime_39
  # DEBUG ptime => ptime_35
  # DEBUG attr => attr_31
  if (attr_31 != 0B)
    goto <bb 167>;
  else
    goto <bb 190>;

<bb 190>:
  D.44834_549 = got_crypto_54 == -1;
  D.44835_550 = got_savp_74 != 0;
  D.44836_551 = D.44834_549 && D.44835_550;
  if (D.44836_551 != 0)
    goto <bb 191>;
  else
    goto <bb 193>;

<bb 191>:
  D.44839_552 = got_avp_68 | got_webrtc_78;
  if (D.44839_552 == 0)
    goto <bb 192>;
  else
    goto <bb 193>;

<bb 192>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");
  match_553 = 0;
  # DEBUG match => match_553
  goto <bb 452> (done);

<bb 193>:
  connection_554 = sdp_198->sdp_connection;
  # DEBUG connection => connection_554
  D.44546_555 = m_28->m_connections;
  if (D.44546_555 != 0B)
    goto <bb 194>;
  else
    goto <bb 195>;

<bb 194>:
  connection_556 = m_28->m_connections;
  # DEBUG connection => connection_556

<bb 195>:
  # connection_124 = PHI <connection_554(193), connection_556(194)>
  # DEBUG connection => connection_124
  if (connection_124 == 0B)
    goto <bb 196>;
  else
    goto <bb 197>;

<bb 196>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  match_557 = 0;
  # DEBUG match => match_557
  goto <bb 452> (done);

<bb 197>:
  x_558 = 0;
  # DEBUG x => x_558
  map_559 = m_28->m_rtpmaps;
  # DEBUG map => map_559
  goto <bb 282>;

<bb 198>:
  map_bit_rate_560 = 0;
  # DEBUG map_bit_rate => map_bit_rate_560
  codec_fmtp = {};
  rm_encoding_561 = map_128->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_561
  if (rm_encoding_561 == 0B)
    goto <bb 199>;
  else
    goto <bb 200>;

<bb 199>:
  rm_encoding_562 = "";
  # DEBUG rm_encoding => rm_encoding_562

<bb 200>:
  # rm_encoding_130 = PHI <rm_encoding_561(198), rm_encoding_562(199)>
  # DEBUG rm_encoding => rm_encoding_130
  D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
  if (D.44848_563 == 0)
    goto <bb 201>;
  else
    goto <bb 205>;

<bb 201>:
  if (best_te_20 == 0)
    goto <bb 203>;
  else
    goto <bb 202>;

<bb 202>:
  D.44854_564 = map_128->rm_rate;
  D.44750_565 = a_engine_188->cur_payload_map;
  D.44855_566 = D.44750_565->rm_rate;
  if (D.44854_564 == D.44855_566)
    goto <bb 203>;
  else
    goto <bb 204>;

<bb 203>:
  D.44856_567 = map_128->rm_pt;
  best_te_568 = (switch_payload_t) D.44856_567;
  # DEBUG best_te => best_te_568
  D.44857_569 = (int) best_te_568;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);

<bb 204>:
  # best_te_18 = PHI <best_te_20(202), best_te_568(203)>
  # DEBUG best_te => best_te_18
  // predicted unlikely by continue predictor.
  goto <bb 281>;

<bb 205>:
  D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);
  if (D.44858_570 == 0)
    goto <bb 206>;
  else
    goto <bb 211>;

<bb 206>:
  if (cng_pt_25 == 0)
    goto <bb 207>;
  else
    goto <bb 211>;

<bb 207>:
  D.44863_571 = strcasecmp (rm_encoding_130, "CN");
  if (D.44863_571 == 0)
    goto <bb 208>;
  else
    goto <bb 211>;

<bb 208>:
  D.44856_572 = map_128->rm_pt;
  cng_pt_573 = (switch_payload_t) D.44856_572;
  # DEBUG cng_pt => cng_pt_573
  D.44605_574 = a_engine_188->rtp_session;
  if (D.44605_574 != 0B)
    goto <bb 209>;
  else
    goto <bb 210>;

<bb 209>:
  D.44868_575 = (int) cng_pt_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);
  D.44605_576 = a_engine_188->rtp_session;
  D.44471_577 = smh_186->mparams;
  D.44869_578 = D.44471_577->cng_pt;
  switch_rtp_set_cng_pt (D.44605_576, D.44869_578);

<bb 210>:
  // predicted unlikely by continue predictor.
  goto <bb 281>;

<bb 211>:
  D.44870_579 = x_49 < skip_160;
  x_580 = x_49 + 1;
  # DEBUG x => x_580
  if (D.44870_579 != 0)
    goto <bb 212>;
  else
    goto <bb 213>;

<bb 212>:
  // predicted unlikely by continue predictor.
  goto <bb 281>;

<bb 213>:
  if (match_8 != 0)
    goto <bb 214>;
  else
    goto <bb 215>;

<bb 214>:
  // predicted unlikely by continue predictor.
  goto <bb 281>;

<bb 215>:
  codec_ms_581 = ptime_35;
  # DEBUG codec_ms => codec_ms_581
  if (maxptime_39 != 0)
    goto <bb 216>;
  else
    goto <bb 218>;

<bb 216>:
  D.44877_582 = codec_ms_581 == 0;
  D.44878_583 = codec_ms_581 > maxptime_39;
  D.44879_584 = D.44877_582 || D.44878_583;
  if (D.44879_584 != 0)
    goto <bb 217>;
  else
    goto <bb 218>;

<bb 217>:
  codec_ms_585 = maxptime_39;
  # DEBUG codec_ms => codec_ms_585

<bb 218>:
  # codec_ms_86 = PHI <codec_ms_581(215), codec_ms_581(216), codec_ms_585(217)>
  # DEBUG codec_ms => codec_ms_86
  if (codec_ms_86 == 0)
    goto <bb 219>;
  else
    goto <bb 220>;

<bb 219>:
  D.44856_586 = map_128->rm_pt;
  D.44884_587 = (uint32_t) D.44856_586;
  D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);
  codec_ms_589 = (int) D.44885_588;
  # DEBUG codec_ms => codec_ms_589

<bb 220>:
  # codec_ms_87 = PHI <codec_ms_86(218), codec_ms_589(219)>
  # DEBUG codec_ms => codec_ms_87
  D.44856_590 = map_128->rm_pt;
  csui.173_591 = (unsigned char) D.44856_590;
  # DEBUG payload => csui.173_591
  csui.173_1478 = csui.173_591;
  if (csui.173_1478 <= 18)
    goto <bb 222> (<L500>);
  else
    goto <bb 221> (<L499>);

<L499>:
  map_bit_rate_1479 = 0;
  goto <bb 223> (<L501>);

<L500>:
  map_bit_rate_1480 = CSWTCH.174[csui.173_1478];

  # map_bit_rate_1481 = PHI <map_bit_rate_1479(221), map_bit_rate_1480(222)>
<L501>:
<L502>:
  map_bit_rate_1535 = map_bit_rate_1481;
  map_bit_rate_592 = map_bit_rate_1535;
  # DEBUG map_bit_rate => NULL
  if (ptime_35 == 0)
    goto <bb 224>;
  else
    goto <bb 226>;

<bb 224>:
  D.44889_593 = map_128->rm_encoding;
  D.44890_594 = strcasecmp (D.44889_593, "g723");
  if (D.44890_594 == 0)
    goto <bb 225>;
  else
    goto <bb 226>;

<bb 225>:
  codec_ms_595 = 33;
  # DEBUG codec_ms => codec_ms_595

<bb 226>:
  # codec_ms_88 = PHI <codec_ms_87(223), codec_ms_87(224), codec_ms_595(225)>
  # DEBUG codec_ms => codec_ms_88
  remote_codec_rate_596 = map_128->rm_rate;
  # DEBUG remote_codec_rate => remote_codec_rate_596
  fmtp_remote_codec_rate_597 = 0;
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_597
  memset (&codec_fmtp, 0, 16);
  D.44893_598 = map_128->rm_fmtp;
  # DEBUG s => D.44893_598
  if (D.44893_598 == 0B)
    goto <bb 229>;
  else
    goto <bb 227>;

<bb 227>:
  D.47916_1482 = *D.44893_598;
  if (D.47916_1482 == 0)
    goto <bb 229>;
  else
    goto <bb 228>;

<bb 228>:

<bb 229>:
  # D.47915_1483 = PHI <1(226), 1(227), 0(228)>
  D.47915_1536 = D.47915_1483;
  D.47915_599 = D.47915_1536;
  if (D.47915_599 != 0)
    goto <bb 230>;
  else
    goto <bb 235>;

<bb 230>:
  D.44889_600 = map_128->rm_encoding;
  D.44897_601 = strcasecmp (D.44889_600, "ilbc");
  if (D.44897_601 == 0)
    goto <bb 231>;
  else
    goto <bb 232>;

<bb 231>:
  codec_ms_602 = 32;
  # DEBUG codec_ms => codec_ms_602
  map_bit_rate_603 = 13332;
  # DEBUG map_bit_rate => map_bit_rate_603
  goto <bb 242>;

<bb 232>:
  D.44889_604 = map_128->rm_encoding;
  D.44901_605 = strcasecmp (D.44889_604, "isac");
  if (D.44901_605 == 0)
    goto <bb 233>;
  else
    goto <bb 234>;

<bb 233>:
  codec_ms_606 = 39;
  # DEBUG codec_ms => codec_ms_606
  map_bit_rate_607 = 32001;
  # DEBUG map_bit_rate => map_bit_rate_607
  goto <bb 242>;

<bb 234>:
  map_bit_rate_608 = 32099;
  # DEBUG map_bit_rate => map_bit_rate_608
  goto <bb 242>;

<bb 235>:
  D.44889_609 = map_128->rm_encoding;
  D.44893_610 = map_128->rm_fmtp;
  D.44854_611 = map_128->rm_rate;
  D.44906_612 = switch_core_codec_parse_fmtp (D.44889_609, D.44893_610, D.44854_611, &codec_fmtp);
  if (D.44906_612 == 0)
    goto <bb 236>;
  else
    goto <bb 242>;

<bb 236>:
  D.44909_613 = codec_fmtp.bits_per_second;
  if (D.44909_613 != 0)
    goto <bb 237>;
  else
    goto <bb 238>;

<bb 237>:
  D.44909_614 = codec_fmtp.bits_per_second;
  map_bit_rate_615 = (uint32_t) D.44909_614;
  # DEBUG map_bit_rate => map_bit_rate_615

<bb 238>:
  # map_bit_rate_131 = PHI <map_bit_rate_592(236), map_bit_rate_615(237)>
  # DEBUG map_bit_rate => map_bit_rate_131
  D.44912_616 = codec_fmtp.microseconds_per_packet;
  if (D.44912_616 != 0)
    goto <bb 239>;
  else
    goto <bb 240>;

<bb 239>:
  D.44912_617 = codec_fmtp.microseconds_per_packet;
  codec_ms_618 = D.44912_617 / 1000;
  # DEBUG codec_ms => codec_ms_618

<bb 240>:
  # codec_ms_89 = PHI <codec_ms_88(238), codec_ms_618(239)>
  # DEBUG codec_ms => codec_ms_89
  D.44915_619 = codec_fmtp.actual_samples_per_second;
  if (D.44915_619 != 0)
    goto <bb 241>;
  else
    goto <bb 242>;

<bb 241>:
  fmtp_remote_codec_rate_620 = codec_fmtp.actual_samples_per_second;
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_620

<bb 242>:
  # codec_ms_90 = PHI <codec_ms_606(233), codec_ms_88(235), codec_ms_89(240), codec_ms_89(241), codec_ms_602(231), codec_ms_88(234)>
  # fmtp_remote_codec_rate_99 = PHI <fmtp_remote_codec_rate_597(233), fmtp_remote_codec_rate_597(235), fmtp_remote_codec_rate_597(240), fmtp_remote_codec_rate_620(241), fmtp_remote_codec_rate_597(231), fmtp_remote_codec_rate_597(234)>
  # map_bit_rate_132 = PHI <map_bit_rate_607(233), map_bit_rate_592(235), map_bit_rate_131(240), map_bit_rate_131(241), map_bit_rate_603(231), map_bit_rate_608(234)>
  # DEBUG map_bit_rate => map_bit_rate_132
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99
  # DEBUG codec_ms => codec_ms_90
  i_621 = 0;
  # DEBUG i => i_621
  goto <bb 279>;

<bb 243>:
  i.91_627 = (unsigned int) i_129;
  D.44919_628 = i.91_627 * 4;
  D.44920_629 = codec_array_84 + D.44919_628;
  imp_630 = *D.44920_629;
  # DEBUG imp => imp_630
  D.44921_631 = imp_630->bits_per_second;
  bit_rate_632 = (uint32_t) D.44921_631;
  # DEBUG bit_rate => bit_rate_632
  codec_rate_633 = imp_630->samples_per_second;
  # DEBUG codec_rate => codec_rate_633
  D.44922_634 = imp_630->codec_type;
  if (D.44922_634 != 0)
    goto <bb 244>;
  else
    goto <bb 245>;

<bb 244>:
  // predicted unlikely by continue predictor.
  goto <bb 278>;

<bb 245>:
  D.44856_635 = map_128->rm_pt;
  D.44925_636 = (int) D.44856_635;
  remote_codec_rate.92_637 = (int) remote_codec_rate_98;
  D.44927_638 = imp_630->iananame;
  D.44928_639 = imp_630->ianacode;
  D.44929_640 = (int) D.44928_639;
  D.44930_641 = imp_630->microseconds_per_packet;
  D.44931_642 = D.44930_641 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44925_636, remote_codec_rate.92_637, codec_ms_90, map_bit_rate_132, D.44927_638, D.44929_640, codec_rate_633, D.44931_642, bit_rate_632);
  D.44889_643 = map_128->rm_encoding;
  # DEBUG s => D.44889_643
  if (D.44889_643 == 0B)
    goto <bb 248>;
  else
    goto <bb 246>;

<bb 246>:
  D.47920_1484 = *D.44889_643;
  if (D.47920_1484 == 0)
    goto <bb 248>;
  else
    goto <bb 247>;

<bb 247>:

<bb 248>:
  # D.47919_1485 = PHI <1(245), 1(246), 0(247)>
  D.47919_1537 = D.47919_1485;
  D.47919_644 = D.47919_1537;
  if (D.47919_644 != 0)
    goto <bb 250>;
  else
    goto <bb 249>;

<bb 249>:
  D.44471_645 = smh_186->mparams;
  D.44821_646 = D.44471_645->ndlb;
  D.44937_647 = (int) D.44821_646;
  D.44938_648 = D.44937_647 & 1;
  D.44939_649 = (_Bool) D.44938_648;
  if (D.44939_649 != 0)
    goto <bb 250>;
  else
    goto <bb 252>;

<bb 250>:
  D.44856_650 = map_128->rm_pt;
  D.44925_651 = (int) D.44856_650;
  if (D.44925_651 <= 95)
    goto <bb 251>;
  else
    goto <bb 252>;

<bb 251>:
  D.44856_652 = map_128->rm_pt;
  D.44925_653 = (int) D.44856_652;
  D.44928_654 = imp_630->ianacode;
  D.44929_655 = (int) D.44928_654;
  match_656 = D.44925_653 == D.44929_655;
  # DEBUG match => match_656
  goto <bb 259>;

<bb 252>:
  D.44927_657 = imp_630->iananame;
  D.44945_658 = strcasecmp (rm_encoding_130, D.44927_657);
  if (D.44945_658 == 0)
    goto <bb 253>;
  else
    goto <bb 256>;

<bb 253>:
  if (remote_codec_rate_98 == codec_rate_633)
    goto <bb 255>;
  else
    goto <bb 254>;

<bb 254>:
  D.44948_659 = imp_630->actual_samples_per_second;
  if (D.44948_659 == fmtp_remote_codec_rate_99)
    goto <bb 255>;
  else
    goto <bb 256>;

<bb 255>:
  iftmp.93_660 = 1;
  goto <bb 257>;

<bb 256>:
  iftmp.93_661 = 0;

<bb 257>:
  # iftmp.93_144 = PHI <iftmp.93_660(255), iftmp.93_661(256)>
  match_662 = (uint8_t) iftmp.93_144;
  # DEBUG match => match_662
  if (fmtp_remote_codec_rate_99 != 0)
    goto <bb 258>;
  else
    goto <bb 259>;

<bb 258>:
  remote_codec_rate_663 = fmtp_remote_codec_rate_99;
  # DEBUG remote_codec_rate => remote_codec_rate_663

<bb 259>:
  # match_1 = PHI <match_656(251), match_662(257), match_662(258)>
  # remote_codec_rate_96 = PHI <remote_codec_rate_98(251), remote_codec_rate_98(257), remote_codec_rate_663(258)>
  # DEBUG remote_codec_rate => remote_codec_rate_96
  # DEBUG match => match_1
  D.44951_664 = match_1 != 0;
  D.44952_665 = bit_rate_632 != 0;
  D.44953_666 = D.44951_664 && D.44952_665;
  if (D.44953_666 != 0)
    goto <bb 260>;
  else
    goto <bb 264>;

<bb 260>:
  D.44956_667 = map_bit_rate_132 != 0;
  D.44957_668 = map_bit_rate_132 != bit_rate_632;
  D.44958_669 = D.44956_667 && D.44957_668;
  if (D.44958_669 != 0)
    goto <bb 261>;
  else
    goto <bb 264>;

<bb 261>:
  D.44889_670 = map_128->rm_encoding;
  D.44961_671 = strcasecmp (D.44889_670, "ilbc");
  if (D.44961_671 != 0)
    goto <bb 262>;
  else
    goto <bb 264>;

<bb 262>:
  D.44889_672 = map_128->rm_encoding;
  D.44964_673 = strcasecmp (D.44889_672, "isac");
  if (D.44964_673 != 0)
    goto <bb 263>;
  else
    goto <bb 264>;

<bb 263>:
  match_674 = 0;
  # DEBUG match => match_674

<bb 264>:
  # match_2 = PHI <match_1(259), match_1(260), match_1(261), match_1(262), match_674(263)>
  # DEBUG match => match_2
  D.44951_675 = match_2 != 0;
  D.44969_676 = remote_codec_rate_96 != 0;
  D.44970_677 = D.44951_675 && D.44969_676;
  if (D.44970_677 != 0)
    goto <bb 265>;
  else
    goto <bb 269>;

<bb 265>:
  D.44973_678 = codec_rate_633 != 0;
  D.44974_679 = remote_codec_rate_96 != codec_rate_633;
  D.44975_680 = D.44973_678 && D.44974_679;
  if (D.44975_680 != 0)
    goto <bb 266>;
  else
    goto <bb 269>;

<bb 266>:
  D.44889_681 = map_128->rm_encoding;
  D.44978_682 = strcasecmp (D.44889_681, "pcma");
  if (D.44978_682 == 0)
    goto <bb 268>;
  else
    goto <bb 267>;

<bb 267>:
  D.44889_683 = map_128->rm_encoding;
  D.44980_684 = strcasecmp (D.44889_683, "pcmu");
  if (D.44980_684 == 0)
    goto <bb 268>;
  else
    goto <bb 269>;

<bb 268>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");
  match_685 = 0;
  # DEBUG match => match_685

<bb 269>:
  # match_3 = PHI <match_2(264), match_2(265), match_2(267), match_685(268)>
  # DEBUG match => match_3
  if (match_3 != 0)
    goto <bb 270>;
  else
    goto <bb 278>;

<bb 270>:
  if (scrooge_80 != 0)
    goto <bb 271>;
  else
    goto <bb 272>;

<bb 271>:
  D.44927_686 = imp_630->iananame;
  D.44985_687 = imp_630->samples_per_second;
  D.44930_688 = imp_630->microseconds_per_packet;
  D.44931_689 = D.44930_688 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44927_686, D.44985_687, D.44931_689);
  goto <bb 276>;

<bb 272>:
  D.44990_690 = ptime_35 != 0;
  D.44991_691 = codec_ms_90 != 0;
  D.44992_692 = D.44990_690 && D.44991_691;
  if (D.44992_692 != 0)
    goto <bb 273>;
  else
    goto <bb 274>;

<bb 273>:
  D.44994_693 = codec_ms_90 * 1000;
  D.44930_694 = imp_630->microseconds_per_packet;
  if (D.44994_693 != D.44930_694)
    goto <bb 275>;
  else
    goto <bb 274>;

<bb 274>:
  if (remote_codec_rate_96 != codec_rate_633)
    goto <bb 275>;
  else
    goto <bb 276>;

<bb 275>:
  match_695 = 0;
  # DEBUG match => match_695
  D.44927_696 = imp_630->iananame;
  D.44928_697 = imp_630->ianacode;
  D.44929_698 = (int) D.44928_697;
  D.44930_699 = imp_630->microseconds_per_packet;
  D.44931_700 = D.44930_699 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44927_696, D.44929_698, codec_rate_633, D.44931_700, bit_rate_632);
  near_matches[nm_idx_116].codec_idx = i_129;
  remote_codec_rate.92_701 = (int) remote_codec_rate_96;
  near_matches[nm_idx_116].rate = remote_codec_rate.92_701;
  near_matches[nm_idx_116].imp = imp_630;
  near_matches[nm_idx_116].map = map_128;
  nm_idx_702 = nm_idx_116 + 1;
  # DEBUG nm_idx => nm_idx_702
  // predicted unlikely by continue predictor.
  goto <bb 278>;

<bb 276>:
  matches[m_idx_101].codec_idx = i_129;
  codec_rate.94_703 = (int) codec_rate_633;
  matches[m_idx_101].rate = codec_rate.94_703;
  matches[m_idx_101].imp = imp_630;
  matches[m_idx_101].map = map_128;
  m_idx_704 = m_idx_101 + 1;
  # DEBUG m_idx => m_idx_704
  D.44927_705 = imp_630->iananame;
  D.44928_706 = imp_630->ianacode;
  D.44929_707 = (int) D.44928_706;
  D.44930_708 = imp_630->microseconds_per_packet;
  D.44931_709 = D.44930_708 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44927_705, D.44929_707, codec_rate_633, D.44931_709, bit_rate_632);
  if (m_idx_704 > 29)
    goto <bb 280>;
  else
    goto <bb 277>;

<bb 277>:
  match_710 = 0;
  # DEBUG match => match_710

<bb 278>:
  # match_4 = PHI <match_5(244), match_3(269), match_695(275), match_710(277)>
  # remote_codec_rate_97 = PHI <remote_codec_rate_98(244), remote_codec_rate_96(269), remote_codec_rate_96(275), remote_codec_rate_96(277)>
  # m_idx_100 = PHI <m_idx_101(244), m_idx_101(269), m_idx_101(275), m_idx_704(277)>
  # nm_idx_115 = PHI <nm_idx_116(244), nm_idx_116(269), nm_idx_702(275), nm_idx_116(277)>
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => match_4
  i_711 = i_129 + 1;
  # DEBUG i => i_711

<bb 279>:
  # match_5 = PHI <match_8(242), match_4(278)>
  # remote_codec_rate_98 = PHI <remote_codec_rate_596(242), remote_codec_rate_97(278)>
  # m_idx_101 = PHI <m_idx_104(242), m_idx_100(278)>
  # nm_idx_116 = PHI <nm_idx_118(242), nm_idx_115(278)>
  # i_129 = PHI <i_621(242), i_711(278)>
  # DEBUG i => i_129
  # DEBUG nm_idx => nm_idx_116
  # DEBUG m_idx => m_idx_101
  # DEBUG remote_codec_rate => remote_codec_rate_98
  # DEBUG match => match_5
  D.44471_622 = smh_186->mparams;
  D.44997_623 = D.44471_622->num_codecs;
  D.44998_624 = D.44997_623 > i_129;
  D.44999_625 = i_129 < total_codecs_85;
  D.45000_626 = D.44998_624 && D.44999_625;
  if (D.45000_626 != 0)
    goto <bb 243>;
  else
    goto <bb 280>;

<bb 280>:
  # match_6 = PHI <match_3(276), match_5(279)>
  # m_idx_102 = PHI <m_idx_704(276), m_idx_101(279)>
  # DEBUG m_idx => m_idx_102
  # DEBUG match => match_6
  if (m_idx_102 > 29)
    goto <bb 283>;
  else
    goto <bb 281>;

<bb 281>:
  # match_7 = PHI <match_8(204), match_8(210), match_8(212), match_8(214), match_6(280)>
  # best_te_19 = PHI <best_te_18(204), best_te_20(210), best_te_20(212), best_te_20(214), best_te_20(280)>
  # cng_pt_24 = PHI <cng_pt_25(204), cng_pt_573(210), cng_pt_25(212), cng_pt_25(214), cng_pt_25(280)>
  # x_48 = PHI <x_49(204), x_49(210), x_580(212), x_580(214), x_580(280)>
  # codec_ms_91 = PHI <codec_ms_92(204), codec_ms_92(210), codec_ms_92(212), codec_ms_92(214), codec_ms_90(280)>
  # m_idx_103 = PHI <m_idx_104(204), m_idx_104(210), m_idx_104(212), m_idx_104(214), m_idx_102(280)>
  # nm_idx_117 = PHI <nm_idx_118(204), nm_idx_118(210), nm_idx_118(212), nm_idx_118(214), nm_idx_116(280)>
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => x_48
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  map_712 = map_128->rm_next;
  # DEBUG map => map_712

<bb 282>:
  # match_8 = PHI <match_16(197), match_7(281)>
  # best_te_20 = PHI <best_te_23(197), best_te_19(281)>
  # cng_pt_25 = PHI <cng_pt_27(197), cng_pt_24(281)>
  # x_49 = PHI <x_558(197), x_48(281)>
  # codec_ms_92 = PHI <codec_ms_95(197), codec_ms_91(281)>
  # m_idx_104 = PHI <m_idx_114(197), m_idx_103(281)>
  # nm_idx_118 = PHI <nm_idx_122(197), nm_idx_117(281)>
  # map_128 = PHI <map_559(197), map_712(281)>
  # DEBUG map => map_128
  # DEBUG nm_idx => nm_idx_118
  # DEBUG m_idx => m_idx_104
  # DEBUG codec_ms => codec_ms_92
  # DEBUG x => x_49
  # DEBUG cng_pt => cng_pt_25
  # DEBUG best_te => best_te_20
  # DEBUG match => match_8
  if (map_128 != 0B)
    goto <bb 198>;
  else
    goto <bb 283>;

<bb 283>:
  # match_9 = PHI <match_6(280), match_8(282)>
  # codec_ms_93 = PHI <codec_ms_90(280), codec_ms_92(282)>
  # m_idx_105 = PHI <m_idx_102(280), m_idx_104(282)>
  # nm_idx_119 = PHI <nm_idx_116(280), nm_idx_118(282)>
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG codec_ms => codec_ms_93
  # DEBUG match => match_9
  D.45002_713 = smh_186->crypto_mode;
  D.45003_714 = D.45002_713 == 1;
  D.45004_715 = got_crypto_54 <= 0;
  D.45005_716 = D.45003_714 && D.45004_715;
  if (D.45005_716 != 0)
    goto <bb 284>;
  else
    goto <bb 285>;

<bb 284>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");
  match_717 = 0;
  # DEBUG match => match_717
  nm_idx_718 = 0;
  # DEBUG nm_idx => nm_idx_718
  m_idx_719 = nm_idx_718;
  # DEBUG m_idx => m_idx_719

<bb 285>:
  # match_10 = PHI <match_9(283), match_717(284)>
  # m_idx_106 = PHI <m_idx_105(283), m_idx_719(284)>
  # nm_idx_120 = PHI <nm_idx_119(283), nm_idx_718(284)>
  # DEBUG nm_idx => nm_idx_120
  # DEBUG m_idx => m_idx_106
  # DEBUG match => match_10
  D.45008_720 = m_idx_106 == 0;
  D.45009_721 = nm_idx_120 != 0;
  D.45010_722 = D.45008_720 && D.45009_721;
  if (D.45010_722 != 0)
    goto <bb 286>;
  else
    goto <bb 298>;

<bb 286>:
  j_723 = 0;
  # DEBUG j => j_723
  goto <bb 297>;

<bb 287>:
  timp_724 = 0B;
  # DEBUG timp => timp_724
  D.45013_725 = near_matches[j_133].rate;
  near_rate_726 = (uint32_t) D.45013_725;
  # DEBUG near_rate => near_rate_726
  near_match_727 = near_matches[j_133].imp;
  # DEBUG near_match => near_match_727
  near_map_728 = near_matches[j_133].map;
  # DEBUG near_map => near_map_728
  D.45014_729 = near_match_727->iananame;
  if (near_rate_726 == 0)
    goto <bb 288>;
  else
    goto <bb 289>;

<bb 288>:
  near_rate_730 = near_match_727->samples_per_second;
  goto <bb 290>;

<bb 289>:
  near_rate_731 = near_rate_726;

<bb 290>:
  # near_rate_145 = PHI <near_rate_730(288), near_rate_731(289)>
  switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45014_729, near_rate_145, codec_ms_93);
  prefs[0] = &tmp;
  num_732 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);
  # DEBUG num => num_732
  if (num_732 != 0)
    goto <bb 291>;
  else
    goto <bb 292>;

<bb 291>:
  timp_733 = search[0];
  # DEBUG timp => timp_733
  goto <bb 293>;

<bb 292>:
  timp_734 = near_match_727;
  # DEBUG timp => timp_734

<bb 293>:
  # timp_134 = PHI <timp_733(291), timp_734(292)>
  # DEBUG timp => timp_134
  if (maxptime_39 == 0)
    goto <bb 295>;
  else
    goto <bb 294>;

<bb 294>:
  D.45025_735 = timp_134->microseconds_per_packet;
  D.45026_736 = D.45025_735 / 1000;
  if (D.45026_736 <= maxptime_39)
    goto <bb 295>;
  else
    goto <bb 296>;

<bb 295>:
  D.45027_738 = timp_134->iananame;
  D.45025_739 = timp_134->microseconds_per_packet;
  D.45026_740 = D.45025_739 / 1000;
  D.45028_741 = timp_134->actual_samples_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45027_738, D.45026_740, D.45028_741);
  match_742 = 1;
  # DEBUG match => match_742
  D.45029_743 = near_matches[j_133].codec_idx;
  matches[m_idx_106].codec_idx = D.45029_743;
  near_rate.96_744 = (int) near_rate_726;
  matches[m_idx_106].rate = near_rate.96_744;
  matches[m_idx_106].imp = timp_134;
  matches[m_idx_106].map = near_map_728;
  m_idx_745 = m_idx_106 + 1;
  # DEBUG m_idx => m_idx_745
  goto <bb 298>;

<bb 296>:
  j_737 = j_133 + 1;
  # DEBUG j => j_737

<bb 297>:
  # j_133 = PHI <j_723(286), j_737(296)>
  # DEBUG j => j_133
  if (j_133 < nm_idx_120)
    goto <bb 287>;
  else
    goto <bb 298>;

<bb 298>:
  # match_11 = PHI <match_10(285), match_742(295), match_10(297)>
  # m_idx_107 = PHI <m_idx_106(285), m_idx_745(295), m_idx_106(297)>
  # DEBUG m_idx => m_idx_107
  # DEBUG match => match_11
  if (m_idx_107 != 0)
    goto <bb 299>;
  else
    goto <bb 324>;

<bb 299>:
  if (greedy_47 != 0)
    goto <bb 300>;
  else
    goto <bb 301>;

<bb 300>:
  greedy_sort (smh_186, &matches, m_idx_107, codec_array_84, total_codecs_85);

<bb 301>:
  match_746 = 1;
  # DEBUG match => match_746
  a_engine_188->codec_negotiated = 1;
  smh_186->num_negotiated_codecs = 0;
  j_747 = 0;
  # DEBUG j => j_747
  goto <bb 323>;

<bb 302>:
  D.45035_748 = matches[j_135].map;
  D.45036_749 = D.45035_748->rm_encoding;
  D.45035_750 = matches[j_135].map;
  D.45037_751 = D.45035_750->rm_fmtp;
  D.45035_752 = matches[j_135].map;
  D.45038_753 = D.45035_752->rm_pt;
  D.45039_754 = (uint32_t) D.45038_753;
  D.45040_755 = matches[j_135].imp;
  D.45041_756 = D.45040_755->samples_per_second;
  D.45040_757 = matches[j_135].imp;
  D.45042_758 = D.45040_757->microseconds_per_packet;
  D.45043_759 = D.45042_758 / 1000;
  D.45044_760 = (uint32_t) D.45043_759;
  pmap_761 = switch_core_media_add_payload_map (session_161(D), 0, D.45036_749, D.45037_751, sdp_type_546(D), D.45039_754, D.45041_756, D.45044_760, 1);
  # DEBUG pmap => pmap_761
  mimp_762 = matches[j_135].imp;
  # DEBUG mimp => mimp_762
  mmap_763 = matches[j_135].map;
  # DEBUG mmap => mmap_763
  if (j_135 == 0)
    goto <bb 303>;
  else
    goto <bb 305>;

<bb 303>:
  a_engine_188->cur_payload_map = pmap_761;
  D.44750_764 = a_engine_188->cur_payload_map;
  D.44750_764->current = 1;
  D.44605_765 = a_engine_188->rtp_session;
  if (D.44605_765 != 0B)
    goto <bb 304>;
  else
    goto <bb 305>;

<bb 304>:
  D.44605_766 = a_engine_188->rtp_session;
  D.45049_767 = pmap_761->pt;
  switch_rtp_set_default_payload (D.44605_766, D.45049_767);

<bb 305>:
  D.45050_768 = mmap_763->rm_encoding;
  D.45051_769 = switch_core_perform_session_strdup (session_161(D), D.45050_768, "src/switch_core_media.c", &__func__, 3535);
  pmap_761->rm_encoding = D.45051_769;
  D.45052_770 = mimp_762->iananame;
  D.45053_771 = switch_core_perform_session_strdup (session_161(D), D.45052_770, "src/switch_core_media.c", &__func__, 3536);
  pmap_761->iananame = D.45053_771;
  D.45054_772 = mmap_763->rm_pt;
  D.45055_773 = (unsigned char) D.45054_772;
  pmap_761->recv_pt = D.45055_773;
  D.45056_774 = mimp_762->samples_per_second;
  pmap_761->rm_rate = D.45056_774;
  D.45056_775 = mimp_762->samples_per_second;
  pmap_761->adv_rm_rate = D.45056_775;
  D.45052_776 = mimp_762->iananame;
  D.45057_777 = strcasecmp (D.45052_776, "g722");
  if (D.45057_777 != 0)
    goto <bb 306>;
  else
    goto <bb 307>;

<bb 306>:
  D.45060_778 = mimp_762->actual_samples_per_second;
  pmap_761->rm_rate = D.45060_778;

<bb 307>:
  D.45061_779 = mimp_762->microseconds_per_packet;
  D.45062_780 = D.45061_779 / 1000;
  D.45063_781 = (uint32_t) D.45062_780;
  pmap_761->codec_ms = D.45063_781;
  D.45064_782 = mimp_762->bits_per_second;
  D.45065_783 = (uint32_t) D.45064_782;
  pmap_761->bitrate = D.45065_783;
  D.45067_784 = mmap_763->rm_params;
  if (D.45067_784 != 0B)
    goto <bb 308>;
  else
    goto <bb 309>;

<bb 308>:
  D.45067_785 = mmap_763->rm_params;
  # DEBUG __nptr => D.45067_785
  D.47923_1486 = strtol (D.45067_785, 0B, 10);
  D.47923_1539 = D.47923_1486;
  D.47923_786 = D.47923_1539;
  goto <bb 310>;

<bb 309>:
  D.47923_787 = 1;

<bb 310>:
  # D.47923_146 = PHI <D.47923_786(308), D.47923_787(309)>
  pmap_761->channels = D.47923_146;
  D.45050_788 = mmap_763->rm_encoding;
  D.45071_789 = strcasecmp (D.45050_788, "opus");
  if (D.45071_789 == 0)
    goto <bb 311>;
  else
    goto <bb 321>;

<bb 311>:
  D.45074_790 = pmap_761->channels;
  if (D.45074_790 == 1)
    goto <bb 312>;
  else
    goto <bb 313>;

<bb 312>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");
  pmap_761->adv_channels = 1;
  goto <bb 314>;

<bb 313>:
  pmap_761->adv_channels = 2;

<bb 314>:
  D.45080_791 = mmap_763->rm_fmtp;
  # DEBUG s => D.45080_791
  if (D.45080_791 == 0B)
    goto <bb 317>;
  else
    goto <bb 315>;

<bb 315>:
  D.47927_1487 = *D.45080_791;
  if (D.47927_1487 == 0)
    goto <bb 317>;
  else
    goto <bb 316>;

<bb 316>:

<bb 317>:
  # D.47926_1488 = PHI <1(314), 1(315), 0(316)>
  D.47926_1540 = D.47926_1488;
  D.47926_792 = D.47926_1540;
  if (D.47926_792 == 0)
    goto <bb 318>;
  else
    goto <bb 320>;

<bb 318>:
  D.45080_793 = mmap_763->rm_fmtp;
  D.45083_794 = switch_stristr ("stereo=1", D.45080_793);
  if (D.45083_794 != 0B)
    goto <bb 319>;
  else
    goto <bb 320>;

<bb 319>:
  pmap_761->channels = 2;
  goto <bb 322>;

<bb 320>:
  pmap_761->channels = 1;
  goto <bb 322>;

<bb 321>:
  D.45074_795 = pmap_761->channels;
  pmap_761->adv_channels = D.45074_795;

<bb 322>:
  D.45086_796 = connection_124->c_address;
  D.45087_797 = switch_core_perform_session_strdup (session_161(D), D.45086_796, "src/switch_core_media.c", &__func__, 3563);
  pmap_761->remote_sdp_ip = D.45087_797;
  D.44697_798 = m_28->m_port;
  D.45088_799 = (short unsigned int) D.44697_798;
  pmap_761->remote_sdp_port = D.45088_799;
  D.45080_800 = mmap_763->rm_fmtp;
  D.45089_801 = switch_core_perform_session_strdup (session_161(D), D.45080_800, "src/switch_core_media.c", &__func__, 3565);
  pmap_761->rm_fmtp = D.45089_801;
  D.45054_802 = mmap_763->rm_pt;
  D.45055_803 = (unsigned char) D.45054_802;
  pmap_761->agreed_pt = D.45055_803;
  D.44655_804 = smh_186->num_negotiated_codecs;
  smh_186->negotiated_codecs[D.44655_804] = mimp_762;
  D.45090_805 = D.44655_804 + 1;
  smh_186->num_negotiated_codecs = D.45090_805;
  D.45054_806 = mmap_763->rm_pt;
  D.45055_807 = (unsigned char) D.45054_806;
  pmap_761->recv_pt = D.45055_807;
  j_808 = j_135 + 1;
  # DEBUG j => j_808

<bb 323>:
  # j_135 = PHI <j_747(301), j_808(322)>
  # DEBUG j => j_135
  if (j_135 < m_idx_107)
    goto <bb 302>;
  else
    goto <bb 324>;

<bb 324>:
  # match_12 = PHI <match_11(298), match_746(323)>
  # DEBUG match => match_12
  if (match_12 != 0)
    goto <bb 325>;
  else
    goto <bb 336>;

<bb 325>:
  D.44750_809 = a_engine_188->cur_payload_map;
  D.44762_810 = D.44750_809->remote_sdp_port;
  D.44767_811 = (int) D.44762_810;
  switch_snprintf (&tmp, 50, "%d", D.44767_811);
  D.44530_812 = session_161(D)->channel;
  D.44750_813 = a_engine_188->cur_payload_map;
  D.44760_814 = D.44750_813->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_812, "remote_media_ip", D.44760_814, 1);
  D.44530_815 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_815, "remote_media_port", &tmp, 1);
  D.44750_816 = a_engine_188->cur_payload_map;
  D.45093_817 = D.44750_816->recv_pt;
  D.45094_818 = (int) D.45093_817;
  switch_snprintf (&tmp, 50, "%d", D.45094_818);
  D.44530_819 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_819, "rtp_audio_recv_pt", &tmp, 1);
  D.45095_820 = &a_engine_188->read_codec;
  # DEBUG codec => D.45095_820
  if (D.45095_820 != 0B)
    goto <bb 326>;
  else
    goto <bb 330>;

<bb 326>:
  D.47935_1489 = D.45095_820->flags;
  D.47934_1490 = D.47935_1489 & 256;
  if (D.47934_1490 != 0)
    goto <bb 327>;
  else
    goto <bb 330>;

<bb 327>:
  D.47933_1491 = D.45095_820->mutex;
  if (D.47933_1491 != 0B)
    goto <bb 328>;
  else
    goto <bb 330>;

<bb 328>:
  D.47932_1492 = D.45095_820->codec_interface;
  if (D.47932_1492 != 0B)
    goto <bb 329>;
  else
    goto <bb 330>;

<bb 329>:
  D.47931_1493 = D.45095_820->implementation;
  if (D.47931_1493 != 0B)
    goto <bb 331>;
  else
    goto <bb 330>;

<bb 330>:

<bb 331>:
  # iftmp.104_1494 = PHI <1(329), 0(330)>
  D.47930_1495 = (switch_bool_t) iftmp.104_1494;
  D.47930_1541 = D.47930_1495;
  D.47930_821 = D.47930_1541;
  if (D.47930_821 != 0)
    goto <bb 332>;
  else
    goto <bb 333>;

<bb 332>:
  a_engine_188->reset_codec = 1;

<bb 333>:
  D.44471_822 = smh_186->mparams;
  D.45099_823 = D.44471_822->codec_flags;
  D.45100_824 = switch_core_media_set_codec (session_161(D), 0, D.45099_823);
  if (D.45100_824 == 0)
    goto <bb 334>;
  else
    goto <bb 335>;

<bb 334>:
  got_audio_825 = 1;
  # DEBUG got_audio => got_audio_825
  check_ice (smh_186, 0, sdp_198, m_28);
  goto <bb 336>;

<bb 335>:
  match_826 = 0;
  # DEBUG match => match_826

<bb 336>:
  # match_13 = PHI <match_12(324), match_12(334), match_826(335)>
  # got_audio_65 = PHI <got_audio_67(324), got_audio_825(334), got_audio_67(335)>
  # DEBUG got_audio => got_audio_65
  # DEBUG match => match_13
  if (best_te_20 == 0)
    goto <bb 337>;
  else
    goto <bb 340>;

<bb 337>:
  D.45108_827 = switch_media_handle_test_media_flag (smh_186, 8);
  if (D.45108_827 != 0)
    goto <bb 339>;
  else
    goto <bb 338>;

<bb 338>:
  D.44530_828 = session_161(D)->channel;
  D.45110_829 = switch_channel_test_flag (D.44530_828, 93);
  if (D.45110_829 != 0)
    goto <bb 339>;
  else
    goto <bb 340>;

<bb 339>:
  D.44471_830 = smh_186->mparams;
  D.45111_831 = D.44471_830->te;
  D.45112_832 = (int) D.45111_831;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45112_832);
  D.44471_833 = smh_186->mparams;
  best_te_834 = D.44471_833->te;
  # DEBUG best_te => best_te_834

<bb 340>:
  # best_te_21 = PHI <best_te_20(336), best_te_20(338), best_te_834(339)>
  # DEBUG best_te => best_te_21
  if (best_te_21 != 0)
    goto <bb 341>;
  else
    goto <bb 346>;

<bb 341>:
  D.45115_835 = switch_channel_direction (channel_162);
  if (D.45115_835 == 1)
    goto <bb 342>;
  else
    goto <bb 344>;

<bb 342>:
  D.44471_836 = smh_186->mparams;
  D.44471_836->te = best_te_21;
  te_837 = D.44471_836->te;
  # DEBUG te => te_837
  D.44857_838 = (int) best_te_21;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_838);
  D.44530_839 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_839, "dtmf_type", "rfc2833", 1);
  D.44471_840 = smh_186->mparams;
  D.44471_840->dtmf_type = 0;
  D.44605_841 = a_engine_188->rtp_session;
  if (D.44605_841 != 0B)
    goto <bb 343>;
  else
    goto <bb 450>;

<bb 343>:
  D.44605_842 = a_engine_188->rtp_session;
  switch_rtp_set_telephony_event (D.44605_842, best_te_21);
  D.44530_843 = session_161(D)->channel;
  D.44857_844 = (int) best_te_21;
  switch_channel_set_variable_printf (D.44530_843, "rtp_2833_send_payload", "%d", D.44857_844);
  goto <bb 450>;

<bb 344>:
  D.44471_845 = smh_186->mparams;
  D.44471_846 = smh_186->mparams;
  D.44471_846->te = best_te_21;
  D.45111_847 = D.44471_846->te;
  D.44471_846->recv_te = D.45111_847;
  te_848 = D.44471_846->recv_te;
  # DEBUG te => te_848
  D.45121_849 = (int) te_848;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45121_849);
  D.44530_850 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_850, "dtmf_type", "rfc2833", 1);
  D.44471_851 = smh_186->mparams;
  D.44471_851->dtmf_type = 0;
  D.44605_852 = a_engine_188->rtp_session;
  if (D.44605_852 != 0B)
    goto <bb 345>;
  else
    goto <bb 450>;

<bb 345>:
  D.44605_853 = a_engine_188->rtp_session;
  switch_rtp_set_telephony_event (D.44605_853, te_848);
  D.44530_854 = session_161(D)->channel;
  D.45121_855 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_854, "rtp_2833_send_payload", "%d", D.45121_855);
  D.44605_856 = a_engine_188->rtp_session;
  switch_rtp_set_telephony_recv_event (D.44605_856, te_848);
  D.44530_857 = session_161(D)->channel;
  D.45121_858 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_857, "rtp_2833_recv_payload", "%d", D.45121_858);
  goto <bb 450>;

<bb 346>:
  D.45125_859 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);
  D.45126_860 = switch_false (D.45125_859);
  if (D.45126_860 == 0)
    goto <bb 347>;
  else
    goto <bb 348>;

<bb 347>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
  D.44530_861 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_861, "dtmf_type", "info", 1);
  D.44471_862 = smh_186->mparams;
  D.44471_862->dtmf_type = 1;
  D.44471_863 = smh_186->mparams;
  D.44471_864 = smh_186->mparams;
  D.44471_864->te = 0;
  D.45111_865 = D.44471_864->te;
  D.44471_864->recv_te = D.45111_865;
  te_866 = D.44471_864->recv_te;
  # DEBUG te => te_866
  goto <bb 450>;

<bb 348>:
  D.44530_867 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_867, "dtmf_type", "none", 1);
  D.44471_868 = smh_186->mparams;
  D.44471_868->dtmf_type = 2;
  D.44471_869 = smh_186->mparams;
  D.44471_870 = smh_186->mparams;
  D.44471_870->te = 0;
  D.45111_871 = D.44471_870->te;
  D.44471_870->recv_te = D.45111_871;
  te_872 = D.44471_870->recv_te;
  # DEBUG te => te_872
  goto <bb 450>;

<bb 349>:
  D.44681_873 = m_28->m_type;
  if (D.44681_873 == 3)
    goto <bb 350>;
  else
    goto <bb 450>;

<bb 350>:
  D.44697_874 = m_28->m_port;
  if (D.44697_874 != 0)
    goto <bb 351>;
  else
    goto <bb 450>;

<bb 351>:
  mimp_875 = 0B;
  # DEBUG mimp => mimp_875
  vmatch_876 = 0;
  # DEBUG vmatch => vmatch_876
  nm_idx_877 = 0;
  # DEBUG nm_idx => nm_idx_877
  m_idx_878 = 0;
  # DEBUG m_idx => m_idx_878
  memset (&matches, 0, 480);
  memset (&near_matches, 0, 480);
  D.44530_879 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_879, "video_possible", "true", 1);
  connection_880 = sdp_198->sdp_connection;
  # DEBUG connection => connection_880
  D.44546_881 = m_28->m_connections;
  if (D.44546_881 != 0B)
    goto <bb 352>;
  else
    goto <bb 353>;

<bb 352>:
  connection_882 = m_28->m_connections;
  # DEBUG connection => connection_882

<bb 353>:
  # connection_125 = PHI <connection_880(351), connection_882(352)>
  # DEBUG connection => connection_125
  if (connection_125 == 0B)
    goto <bb 354>;
  else
    goto <bb 355>;

<bb 354>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  match_883 = 0;
  # DEBUG match => match_883
  goto <bb 452> (done);

<bb 355>:
  map_884 = m_28->m_rtpmaps;
  # DEBUG map => map_884
  goto <bb 426>;

<bb 356>:
  D.45138_885 = switch_rtp_has_dtls ();
  if (D.45138_885 != 0)
    goto <bb 357>;
  else
    goto <bb 367>;

<bb 357>:
  D.45141_886 = dtls_ok (session_161(D));
  if (D.45141_886 != 0)
    goto <bb 358>;
  else
    goto <bb 367>;

<bb 358>:
  attr_887 = m_28->m_attributes;
  # DEBUG attr => attr_887
  goto <bb 366>;

<bb 359>:
  D.44590_888 = attr_32->a_name;
  D.45144_889 = strcasecmp (D.44590_888, "fingerprint");
  if (D.45144_889 == 0)
    goto <bb 360>;
  else
    goto <bb 365>;

<bb 360>:
  D.44619_890 = attr_32->a_value;
  # DEBUG s => D.44619_890
  if (D.44619_890 == 0B)
    goto <bb 363>;
  else
    goto <bb 361>;

<bb 361>:
  D.47940_1496 = *D.44619_890;
  if (D.47940_1496 == 0)
    goto <bb 363>;
  else
    goto <bb 362>;

<bb 362>:

<bb 363>:
  # D.47939_1497 = PHI <1(360), 1(361), 0(362)>
  D.47939_1542 = D.47939_1497;
  D.47939_891 = D.47939_1542;
  if (D.47939_891 == 0)
    goto <bb 364>;
  else
    goto <bb 365>;

<bb 364>:
  got_video_crypto_892 = 1;
  # DEBUG got_video_crypto => got_video_crypto_892

<bb 365>:
  # got_video_crypto_57 = PHI <got_video_crypto_58(359), got_video_crypto_58(363), got_video_crypto_892(364)>
  # DEBUG got_video_crypto => got_video_crypto_57
  attr_893 = attr_32->a_next;
  # DEBUG attr => attr_893

<bb 366>:
  # attr_32 = PHI <attr_887(358), attr_893(365)>
  # got_video_crypto_58 = PHI <got_video_crypto_62(358), got_video_crypto_57(365)>
  # DEBUG got_video_crypto => got_video_crypto_58
  # DEBUG attr => attr_32
  if (attr_32 != 0B)
    goto <bb 359>;
  else
    goto <bb 367>;

<bb 367>:
  # got_video_crypto_59 = PHI <got_video_crypto_62(356), got_video_crypto_62(357), got_video_crypto_58(366)>
  # DEBUG got_video_crypto => got_video_crypto_59
  attr_894 = m_28->m_attributes;
  # DEBUG attr => attr_894
  goto <bb 402>;

<bb 368>:
  D.44590_895 = attr_33->a_name;
  D.45152_896 = strcasecmp (D.44590_895, "framerate");
  if (D.45152_896 == 0)
    goto <bb 369>;
  else
    goto <bb 370>;

<bb 369>:
  D.44619_897 = attr_33->a_value;
  if (D.44619_897 != 0B)
    goto <bb 401>;
  else
    goto <bb 370>;

<bb 370>:
  D.44590_898 = attr_33->a_name;
  D.45155_899 = strcasecmp (D.44590_898, "rtcp-fb");
  if (D.45155_899 == 0)
    goto <bb 371>;
  else
    goto <bb 378>;

<bb 371>:
  D.44619_900 = attr_33->a_value;
  # DEBUG s => D.44619_900
  if (D.44619_900 == 0B)
    goto <bb 374>;
  else
    goto <bb 372>;

<bb 372>:
  D.47944_1498 = *D.44619_900;
  if (D.47944_1498 == 0)
    goto <bb 374>;
  else
    goto <bb 373>;

<bb 373>:

<bb 374>:
  # D.47943_1499 = PHI <1(371), 1(372), 0(373)>
  D.47943_1543 = D.47943_1499;
  D.47943_901 = D.47943_1543;
  if (D.47943_901 == 0)
    goto <bb 375>;
  else
    goto <bb 401>;

<bb 375>:
  D.44619_902 = attr_33->a_value;
  D.45161_903 = switch_stristr ("fir", D.44619_902);
  if (D.45161_903 != 0B)
    goto <bb 376>;
  else
    goto <bb 377>;

<bb 376>:
  D.45164_904 = v_engine_189->fir;
  D.45165_905 = D.45164_904 + 1;
  v_engine_189->fir = D.45165_905;

<bb 377>:
  D.44471_906 = smh_186->mparams;
  D.44471_906->rtcp_video_interval_msec = "10000";
  goto <bb 401>;

<bb 378>:
  D.44590_907 = attr_33->a_name;
  D.45169_908 = strcasecmp (D.44590_907, "rtcp");
  if (D.45169_908 == 0)
    goto <bb 379>;
  else
    goto <bb 390>;

<bb 379>:
  D.44619_909 = attr_33->a_value;
  if (D.44619_909 != 0B)
    goto <bb 380>;
  else
    goto <bb 390>;

<bb 380>:
  __s2_len_910 = 1;
  # DEBUG __s2_len => __s2_len_910
  if (__s2_len_910 <= 3)
    goto <bb 381>;
  else
    goto <bb 386>;

<bb 381>:
  __s1_911 = attr_33->a_value;
  # DEBUG __s1 => __s1_911
  D.45175_912 = *__s1_911;
  D.45176_913 = (int) D.45175_912;
  D.45177_914 = "1";
  D.45178_915 = MEM[(const unsigned char *)D.45177_914];
  D.45179_916 = (int) D.45178_915;
  __result_917 = D.45176_913 - D.45179_916;
  # DEBUG __result => __result_917
  D.45180_918 = __s2_len_910 != 0;
  D.45181_919 = __result_917 == 0;
  D.45182_920 = D.45180_918 && D.45181_919;
  if (D.45182_920 != 0)
    goto <bb 382>;
  else
    goto <bb 385>;

<bb 382>:
  D.45185_921 = __s1_911 + 1;
  D.45186_922 = *D.45185_921;
  D.45187_923 = (int) D.45186_922;
  D.45188_924 = &"1"[1];
  D.45189_925 = MEM[(const unsigned char *)D.45188_924];
  D.45190_926 = (int) D.45189_925;
  __result_927 = D.45187_923 - D.45190_926;
  # DEBUG __result => __result_927
  D.45191_928 = __s2_len_910 > 1;
  D.45181_929 = __result_927 == 0;
  D.45192_930 = D.45191_928 && D.45181_929;
  if (D.45192_930 != 0)
    goto <bb 383>;
  else
    goto <bb 385>;

<bb 383>:
  D.45195_931 = __s1_911 + 2;
  D.45196_932 = *D.45195_931;
  D.45197_933 = (int) D.45196_932;
  D.45198_934 = &"1"[2];
  D.45199_935 = MEM[(const unsigned char *)D.45198_934];
  D.45200_936 = (int) D.45199_935;
  __result_937 = D.45197_933 - D.45200_936;
  # DEBUG __result => __result_937
  D.45201_938 = __s2_len_910 > 2;
  D.45181_939 = __result_937 == 0;
  D.45202_940 = D.45201_938 && D.45181_939;
  if (D.45202_940 != 0)
    goto <bb 384>;
  else
    goto <bb 385>;

<bb 384>:
  D.45205_941 = __s1_911 + 3;
  D.45206_942 = *D.45205_941;
  D.45207_943 = (int) D.45206_942;
  D.45208_944 = &"1"[3];
  D.45209_945 = MEM[(const unsigned char *)D.45208_944];
  D.45210_946 = (int) D.45209_945;
  __result_947 = D.45207_943 - D.45210_946;
  # DEBUG __result => __result_947

<bb 385>:
  # __result_140 = PHI <__result_917(381), __result_927(382), __result_937(383), __result_947(384)>
  # DEBUG __result => __result_140
  __result_948 = __result_140;
  __result_949 = __result_948;
  goto <bb 387>;

<bb 386>:
  D.44619_950 = attr_33->a_value;
  __result_951 = __builtin_strcmp (D.44619_950, "1");

<bb 387>:
  # __result_147 = PHI <__result_949(385), __result_951(386)>
  __result_952 = __result_147;
  if (__result_952 == 0)
    goto <bb 388>;
  else
    goto <bb 390>;

<bb 388>:
  D.44530_953 = session_161(D)->channel;
  D.44619_954 = attr_33->a_value;
  switch_channel_set_variable_var_check (D.44530_953, "rtp_remote_video_rtcp_port", D.44619_954, 1);
  D.44619_955 = attr_33->a_value;
  # DEBUG __nptr => D.44619_955
  D.47947_1500 = strtol (D.44619_955, 0B, 10);
  D.47947_1545 = D.47947_1500;
  D.47947_956 = D.47947_1545;
  D.45214_957 = (short unsigned int) D.47947_956;
  v_engine_189->remote_rtcp_port = D.45214_957;
  D.44471_958 = smh_186->mparams;
  D.45215_959 = D.44471_958->rtcp_video_interval_msec;
  if (D.45215_959 == 0B)
    goto <bb 389>;
  else
    goto <bb 401>;

<bb 389>:
  D.44471_960 = smh_186->mparams;
  D.44471_960->rtcp_video_interval_msec = "5000";
  goto <bb 401>;

<bb 390>:
  if (got_video_crypto_61 == 0)
    goto <bb 391>;
  else
    goto <bb 401>;

<bb 391>:
  D.44590_961 = attr_33->a_name;
  D.45220_962 = strcasecmp (D.44590_961, "crypto");
  if (D.45220_962 == 0)
    goto <bb 392>;
  else
    goto <bb 401>;

<bb 392>:
  D.44619_963 = attr_33->a_value;
  # DEBUG s => D.44619_963
  if (D.44619_963 == 0B)
    goto <bb 395>;
  else
    goto <bb 393>;

<bb 393>:
  D.47951_1501 = *D.44619_963;
  if (D.47951_1501 == 0)
    goto <bb 395>;
  else
    goto <bb 394>;

<bb 394>:

<bb 395>:
  # D.47950_1502 = PHI <1(392), 1(393), 0(394)>
  D.47950_1546 = D.47950_1502;
  D.47950_964 = D.47950_1546;
  if (D.47950_964 == 0)
    goto <bb 396>;
  else
    goto <bb 401>;

<bb 396>:
  D.44471_965 = smh_186->mparams;
  D.44821_966 = D.44471_965->ndlb;
  D.44822_967 = D.44821_966 & 4;
  if (D.44822_967 == 0)
    goto <bb 397>;
  else
    goto <bb 400>;

<bb 397>:
  D.44530_968 = session_161(D)->channel;
  D.45228_969 = switch_channel_get_variable_dup (D.44530_968, "rtp_allow_crypto_in_avp", 1, -1);
  D.45229_970 = switch_true (D.45228_969);
  if (D.45229_970 == 0)
    goto <bb 398>;
  else
    goto <bb 400>;

<bb 398>:
  D.44666_971 = m_28->m_proto;
  D.44829_972 = D.44666_971 != 257;
  D.44830_973 = got_webrtc_78 == 0;
  D.44831_974 = D.44829_972 && D.44830_973;
  if (D.44831_974 != 0)
    goto <bb 399>;
  else
    goto <bb 400>;

<bb 399>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  match_975 = 0;
  # DEBUG match => match_975
  goto <bb 452> (done);

<bb 400>:
  crypto_976 = attr_33->a_value;
  # DEBUG crypto => crypto_976
  # DEBUG __nptr => crypto_976
  crypto_tag_1503 = strtol (crypto_976, 0B, 10);
  crypto_tag_1548 = crypto_tag_1503;
  crypto_tag_977 = crypto_tag_1548;
  # DEBUG crypto_tag => NULL
  got_video_crypto_978 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, crypto_976, crypto_tag_977, sdp_type_546(D));
  # DEBUG got_video_crypto => got_video_crypto_978

<bb 401>:
  # got_video_crypto_60 = PHI <got_video_crypto_61(369), got_video_crypto_61(377), got_video_crypto_61(389), got_video_crypto_61(390), got_video_crypto_61(391), got_video_crypto_61(395), got_video_crypto_978(400), got_video_crypto_61(374), got_video_crypto_61(388)>
  # DEBUG got_video_crypto => got_video_crypto_60
  attr_979 = attr_33->a_next;
  # DEBUG attr => attr_979

<bb 402>:
  # attr_33 = PHI <attr_894(367), attr_979(401)>
  # got_video_crypto_61 = PHI <got_video_crypto_59(367), got_video_crypto_60(401)>
  # DEBUG got_video_crypto => got_video_crypto_61
  # DEBUG attr => attr_33
  if (attr_33 != 0B)
    goto <bb 368>;
  else
    goto <bb 403>;

<bb 403>:
  rm_encoding_980 = map_136->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_980
  if (rm_encoding_980 == 0B)
    goto <bb 404>;
  else
    goto <bb 405>;

<bb 404>:
  rm_encoding_981 = "";
  # DEBUG rm_encoding => rm_encoding_981

<bb 405>:
  # rm_encoding_137 = PHI <rm_encoding_980(403), rm_encoding_981(404)>
  # DEBUG rm_encoding => rm_encoding_137
  i_982 = 0;
  # DEBUG i => i_982
  goto <bb 424>;

<bb 406>:
  i.99_983 = (unsigned int) i_139;
  D.45237_984 = i.99_983 * 4;
  D.45238_985 = codec_array_84 + D.45237_984;
  imp_986 = *D.45238_985;
  # DEBUG imp => imp_986
  D.45239_987 = imp_986->codec_type;
  if (D.45239_987 != 1)
    goto <bb 407>;
  else
    goto <bb 408>;

<bb 407>:
  // predicted unlikely by continue predictor.
  goto <bb 423>;

<bb 408>:
  D.44530_988 = session_161(D)->channel;
  D.45242_989 = switch_channel_direction (D.44530_988);
  if (D.45242_989 == 0)
    goto <bb 409>;
  else
    goto <bb 411>;

<bb 409>:
  D.44530_990 = session_161(D)->channel;
  D.45245_991 = switch_channel_test_flag (D.44530_990, 114);
  if (D.45245_991 != 0)
    goto <bb 410>;
  else
    goto <bb 411>;

<bb 410>:
  // predicted unlikely by continue predictor.
  goto <bb 423>;

<bb 411>:
  D.45248_992 = map_136->rm_pt;
  D.45249_993 = (int) D.45248_992;
  D.45250_994 = imp_986->iananame;
  D.45251_995 = imp_986->ianacode;
  D.45252_996 = (int) D.45251_995;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45249_993, D.45250_994, D.45252_996);
  D.45256_997 = map_136->rm_encoding;
  # DEBUG s => D.45256_997
  if (D.45256_997 == 0B)
    goto <bb 414>;
  else
    goto <bb 412>;

<bb 412>:
  D.47958_1504 = *D.45256_997;
  if (D.47958_1504 == 0)
    goto <bb 414>;
  else
    goto <bb 413>;

<bb 413>:

<bb 414>:
  # D.47957_1505 = PHI <1(411), 1(412), 0(413)>
  D.47957_1549 = D.47957_1505;
  D.47957_998 = D.47957_1549;
  if (D.47957_998 != 0)
    goto <bb 416>;
  else
    goto <bb 415>;

<bb 415>:
  D.44471_999 = smh_186->mparams;
  D.44821_1000 = D.44471_999->ndlb;
  D.44937_1001 = (int) D.44821_1000;
  D.44938_1002 = D.44937_1001 & 1;
  D.44939_1003 = (_Bool) D.44938_1002;
  if (D.44939_1003 != 0)
    goto <bb 416>;
  else
    goto <bb 418>;

<bb 416>:
  D.45248_1004 = map_136->rm_pt;
  D.45249_1005 = (int) D.45248_1004;
  if (D.45249_1005 <= 95)
    goto <bb 417>;
  else
    goto <bb 418>;

<bb 417>:
  D.45248_1006 = map_136->rm_pt;
  D.45249_1007 = (int) D.45248_1006;
  D.45251_1008 = imp_986->ianacode;
  D.45252_1009 = (int) D.45251_1008;
  vmatch_1010 = D.45249_1007 == D.45252_1009;
  # DEBUG vmatch => vmatch_1010
  goto <bb 419>;

<bb 418>:
  D.45250_1011 = imp_986->iananame;
  D.45260_1012 = strcasecmp (rm_encoding_137, D.45250_1011);
  vmatch_1013 = D.45260_1012 == 0;
  # DEBUG vmatch => vmatch_1013

<bb 419>:
  # vmatch_138 = PHI <vmatch_1010(417), vmatch_1013(418)>
  # DEBUG vmatch => vmatch_138
  if (vmatch_138 != 0)
    goto <bb 420>;
  else
    goto <bb 422>;

<bb 420>:
  D.45263_1014 = map_136->rm_rate;
  D.45264_1015 = imp_986->samples_per_second;
  if (D.45263_1014 == D.45264_1015)
    goto <bb 421>;
  else
    goto <bb 422>;

<bb 421>:
  matches[m_idx_110].imp = imp_986;
  matches[m_idx_110].map = map_136;
  D.45250_1016 = imp_986->iananame;
  D.45251_1017 = imp_986->ianacode;
  D.45252_1018 = (int) D.45251_1017;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45250_1016, D.45252_1018);
  m_idx_1019 = m_idx_110 + 1;
  # DEBUG m_idx => m_idx_1019

<bb 422>:
  # m_idx_108 = PHI <m_idx_110(419), m_idx_110(420), m_idx_1019(421)>
  # DEBUG m_idx => m_idx_108
  vmatch_1020 = 0;
  # DEBUG vmatch => vmatch_1020

<bb 423>:
  # m_idx_109 = PHI <m_idx_110(407), m_idx_110(410), m_idx_108(422)>
  # DEBUG m_idx => m_idx_109
  i_1021 = i_139 + 1;
  # DEBUG i => i_1021

<bb 424>:
  # m_idx_110 = PHI <m_idx_111(405), m_idx_109(423)>
  # i_139 = PHI <i_982(405), i_1021(423)>
  # DEBUG i => i_139
  # DEBUG m_idx => m_idx_110
  if (i_139 < total_codecs_85)
    goto <bb 406>;
  else
    goto <bb 425>;

<bb 425>:
  map_1022 = map_136->rm_next;
  # DEBUG map => map_1022

<bb 426>:
  # got_video_crypto_62 = PHI <got_video_crypto_64(355), got_video_crypto_61(425)>
  # m_idx_111 = PHI <m_idx_878(355), m_idx_110(425)>
  # map_136 = PHI <map_884(355), map_1022(425)>
  # DEBUG map => map_136
  # DEBUG m_idx => m_idx_111
  # DEBUG got_video_crypto => got_video_crypto_62
  if (map_136 != 0B)
    goto <bb 356>;
  else
    goto <bb 427>;

<bb 427>:
  D.45002_1023 = smh_186->crypto_mode;
  D.45003_1024 = D.45002_1023 == 1;
  D.45267_1025 = got_video_crypto_62 <= 0;
  D.45268_1026 = D.45003_1024 && D.45267_1025;
  if (D.45268_1026 != 0)
    goto <bb 428>;
  else
    goto <bb 429>;

<bb 428>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");
  vmatch_1027 = 0;
  # DEBUG vmatch => vmatch_1027
  m_idx_1028 = 0;
  # DEBUG m_idx => m_idx_1028

<bb 429>:
  # m_idx_112 = PHI <m_idx_111(427), m_idx_1028(428)>
  # DEBUG m_idx => m_idx_112
  if (m_idx_112 != 0)
    goto <bb 430>;
  else
    goto <bb 450>;

<bb 430>:
  j_1029 = 0;
  # DEBUG j => j_1029
  if (greedy_47 != 0)
    goto <bb 431>;
  else
    goto <bb 432>;

<bb 431>:
  greedy_sort (smh_186, &matches, m_idx_112, codec_array_84, total_codecs_85);

<bb 432>:
  vmatch_1030 = 1;
  # DEBUG vmatch => vmatch_1030
  v_engine_189->codec_negotiated = 1;
  j_1031 = 0;
  # DEBUG j => j_1031
  goto <bb 437>;

<bb 433>:
  D.45275_1032 = matches[j_141].map;
  D.45276_1033 = D.45275_1032->rm_encoding;
  D.45275_1034 = matches[j_141].map;
  D.45277_1035 = D.45275_1034->rm_fmtp;
  D.45275_1036 = matches[j_141].map;
  D.45278_1037 = D.45275_1036->rm_pt;
  D.45279_1038 = (uint32_t) D.45278_1037;
  D.45280_1039 = matches[j_141].imp;
  D.45281_1040 = D.45280_1039->samples_per_second;
  D.45280_1041 = matches[j_141].imp;
  D.45282_1042 = D.45280_1041->microseconds_per_packet;
  D.45283_1043 = D.45282_1042 / 1000;
  D.45284_1044 = (uint32_t) D.45283_1043;
  pmap_1045 = switch_core_media_add_payload_map (session_161(D), 1, D.45276_1033, D.45277_1035, sdp_type_546(D), D.45279_1038, D.45281_1040, D.45284_1044, 1);
  # DEBUG pmap => pmap_1045
  if (j_141 == 0)
    goto <bb 434>;
  else
    goto <bb 436>;

<bb 434>:
  v_engine_189->cur_payload_map = pmap_1045;
  D.45287_1046 = v_engine_189->cur_payload_map;
  D.45287_1046->current = 1;
  D.45288_1047 = v_engine_189->rtp_session;
  if (D.45288_1047 != 0B)
    goto <bb 435>;
  else
    goto <bb 436>;

<bb 435>:
  D.45288_1048 = v_engine_189->rtp_session;
  D.45291_1049 = pmap_1045->pt;
  switch_rtp_set_default_payload (D.45288_1048, D.45291_1049);

<bb 436>:
  mimp_1050 = matches[j_141].imp;
  # DEBUG mimp => mimp_1050
  map_1051 = matches[j_141].map;
  # DEBUG map => map_1051
  D.45256_1052 = map_1051->rm_encoding;
  D.45292_1053 = switch_core_perform_session_strdup (session_161(D), D.45256_1052, "src/switch_core_media.c", &__func__, 3804);
  pmap_1045->rm_encoding = D.45292_1053;
  D.45248_1054 = map_1051->rm_pt;
  D.45293_1055 = (unsigned char) D.45248_1054;
  pmap_1045->recv_pt = D.45293_1055;
  D.45263_1056 = map_1051->rm_rate;
  pmap_1045->rm_rate = D.45263_1056;
  D.45294_1057 = mimp_1050->microseconds_per_packet;
  D.45295_1058 = D.45294_1057 / 1000;
  D.45296_1059 = (uint32_t) D.45295_1058;
  pmap_1045->codec_ms = D.45296_1059;
  D.45086_1060 = connection_125->c_address;
  D.45297_1061 = switch_core_perform_session_strdup (session_161(D), D.45086_1060, "src/switch_core_media.c", &__func__, 3810);
  pmap_1045->remote_sdp_ip = D.45297_1061;
  D.44697_1062 = m_28->m_port;
  D.45088_1063 = (short unsigned int) D.44697_1062;
  pmap_1045->remote_sdp_port = D.45088_1063;
  D.45298_1064 = map_1051->rm_fmtp;
  D.45299_1065 = switch_core_perform_session_strdup (session_161(D), D.45298_1064, "src/switch_core_media.c", &__func__, 3813);
  pmap_1045->rm_fmtp = D.45299_1065;
  D.45248_1066 = map_1051->rm_pt;
  D.45293_1067 = (unsigned char) D.45248_1066;
  pmap_1045->agreed_pt = D.45293_1067;
  j_1068 = j_141 + 1;
  # DEBUG j => j_1068

<bb 437>:
  # j_141 = PHI <j_1031(432), j_1068(436)>
  # DEBUG j => j_141
  if (j_141 < m_idx_112)
    goto <bb 433>;
  else
    goto <bb 438>;

<bb 438>:
  D.45287_1069 = v_engine_189->cur_payload_map;
  D.45300_1070 = D.45287_1069->remote_sdp_port;
  D.45301_1071 = (int) D.45300_1070;
  switch_snprintf (&tmp, 50, "%d", D.45301_1071);
  D.44530_1072 = session_161(D)->channel;
  D.45287_1073 = v_engine_189->cur_payload_map;
  D.45302_1074 = D.45287_1073->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_1072, "remote_video_ip", D.45302_1074, 1);
  D.44530_1075 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1075, "remote_video_port", &tmp, 1);
  D.44530_1076 = session_161(D)->channel;
  D.45287_1077 = v_engine_189->cur_payload_map;
  D.45303_1078 = D.45287_1077->rm_fmtp;
  switch_channel_set_variable_var_check (D.44530_1076, "rtp_video_fmtp", D.45303_1078, 1);
  D.45287_1079 = v_engine_189->cur_payload_map;
  D.45304_1080 = D.45287_1079->agreed_pt;
  D.45305_1081 = (int) D.45304_1080;
  switch_snprintf (&tmp, 50, "%d", D.45305_1081);
  D.44530_1082 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1082, "rtp_video_pt", &tmp, 1);
  switch_core_media_check_video_codecs (session_161(D));
  D.45287_1083 = v_engine_189->cur_payload_map;
  D.45306_1084 = D.45287_1083->recv_pt;
  D.45307_1085 = (int) D.45306_1084;
  switch_snprintf (&tmp, 50, "%d", D.45307_1085);
  D.44530_1086 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1086, "rtp_video_recv_pt", &tmp, 1);
  D.45308_1087 = match_16 == 0;
  D.45309_1088 = vmatch_1030 != 0;
  D.45310_1089 = D.45308_1087 && D.45309_1088;
  if (D.45310_1089 != 0)
    goto <bb 439>;
  else
    goto <bb 440>;

<bb 439>:
  match_1090 = 1;
  # DEBUG match => match_1090

<bb 440>:
  # match_14 = PHI <match_16(438), match_1090(439)>
  # DEBUG match => match_14
  D.45313_1091 = &v_engine_189->read_codec;
  # DEBUG codec => D.45313_1091
  if (D.45313_1091 != 0B)
    goto <bb 441>;
  else
    goto <bb 445>;

<bb 441>:
  D.47966_1506 = D.45313_1091->flags;
  D.47965_1507 = D.47966_1506 & 256;
  if (D.47965_1507 != 0)
    goto <bb 442>;
  else
    goto <bb 445>;

<bb 442>:
  D.47964_1508 = D.45313_1091->mutex;
  if (D.47964_1508 != 0B)
    goto <bb 443>;
  else
    goto <bb 445>;

<bb 443>:
  D.47963_1509 = D.45313_1091->codec_interface;
  if (D.47963_1509 != 0B)
    goto <bb 444>;
  else
    goto <bb 445>;

<bb 444>:
  D.47962_1510 = D.45313_1091->implementation;
  if (D.47962_1510 != 0B)
    goto <bb 446>;
  else
    goto <bb 445>;

<bb 445>:

<bb 446>:
  # iftmp.104_1511 = PHI <1(444), 0(445)>
  D.47961_1512 = (switch_bool_t) iftmp.104_1511;
  D.47961_1550 = D.47961_1512;
  D.47961_1092 = D.47961_1550;
  if (D.47961_1092 != 0)
    goto <bb 447>;
  else
    goto <bb 448>;

<bb 447>:
  v_engine_189->reset_codec = 1;

<bb 448>:
  D.45317_1093 = switch_core_media_set_video_codec (session_161(D), 0);
  if (D.45317_1093 == 0)
    goto <bb 449>;
  else
    goto <bb 450>;

<bb 449>:
  check_ice (smh_186, 1, sdp_198, m_28);

<bb 450>:
  # match_15 = PHI <match_13(347), match_16(349), match_16(350), match_16(429), match_14(448), match_14(449), match_13(344), match_13(345), match_13(342), match_13(343), match_13(348)>
  # best_te_22 = PHI <best_te_21(347), best_te_23(349), best_te_23(350), best_te_23(429), best_te_23(448), best_te_23(449), best_te_21(344), best_te_21(345), best_te_21(342), best_te_21(343), best_te_21(348)>
  # cng_pt_26 = PHI <cng_pt_25(347), cng_pt_27(349), cng_pt_27(350), cng_pt_27(429), cng_pt_27(448), cng_pt_27(449), cng_pt_25(344), cng_pt_25(345), cng_pt_25(342), cng_pt_25(343), cng_pt_25(348)>
  # got_crypto_55 = PHI <got_crypto_54(347), got_crypto_56(349), got_crypto_56(350), got_crypto_56(429), got_crypto_56(448), got_crypto_56(449), got_crypto_54(344), got_crypto_54(345), got_crypto_54(342), got_crypto_54(343), got_crypto_54(348)>
  # got_video_crypto_63 = PHI <got_video_crypto_64(347), got_video_crypto_64(349), got_video_crypto_64(350), got_video_crypto_62(429), got_video_crypto_62(448), got_video_crypto_62(449), got_video_crypto_64(344), got_video_crypto_64(345), got_video_crypto_64(342), got_video_crypto_64(343), got_video_crypto_64(348)>
  # got_audio_66 = PHI <got_audio_65(347), got_audio_67(349), got_audio_67(350), got_audio_67(429), got_audio_67(448), got_audio_67(449), got_audio_65(344), got_audio_65(345), got_audio_65(342), got_audio_65(343), got_audio_65(348)>
  # codec_ms_94 = PHI <codec_ms_93(347), codec_ms_95(349), codec_ms_95(350), codec_ms_95(429), codec_ms_95(448), codec_ms_95(449), codec_ms_93(344), codec_ms_93(345), codec_ms_93(342), codec_ms_93(343), codec_ms_93(348)>
  # m_idx_113 = PHI <m_idx_107(347), m_idx_114(349), m_idx_114(350), m_idx_112(429), m_idx_112(448), m_idx_112(449), m_idx_107(344), m_idx_107(345), m_idx_107(342), m_idx_107(343), m_idx_107(348)>
  # nm_idx_121 = PHI <nm_idx_120(347), nm_idx_122(349), nm_idx_122(350), nm_idx_877(429), nm_idx_877(448), nm_idx_877(449), nm_idx_120(344), nm_idx_120(345), nm_idx_120(342), nm_idx_120(343), nm_idx_120(348)>
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  m_1094 = m_28->m_next;
  # DEBUG m => m_1094

<bb 451>:
  # match_16 = PHI <match_148(101), match_15(450)>
  # best_te_23 = PHI <best_te_149(101), best_te_22(450)>
  # cng_pt_27 = PHI <cng_pt_151(101), cng_pt_26(450)>
  # m_28 = PHI <m_370(101), m_1094(450)>
  # got_crypto_56 = PHI <got_crypto_164(101), got_crypto_55(450)>
  # got_video_crypto_64 = PHI <got_video_crypto_165(101), got_video_crypto_63(450)>
  # got_audio_67 = PHI <got_audio_166(101), got_audio_66(450)>
  # got_avp_69 = PHI <got_avp_167(101), got_avp_68(450)>
  # got_video_avp_71 = PHI <got_video_avp_168(101), got_video_avp_70(450)>
  # got_video_savp_73 = PHI <got_video_savp_169(101), got_video_savp_72(450)>
  # got_savp_75 = PHI <got_savp_170(101), got_savp_74(450)>
  # got_udptl_77 = PHI <got_udptl_171(101), got_udptl_76(450)>
  # got_webrtc_79 = PHI <got_webrtc_172(101), got_webrtc_78(450)>
  # codec_ms_95 = PHI <codec_ms_181(101), codec_ms_94(450)>
  # m_idx_114 = PHI <m_idx_184(101), m_idx_113(450)>
  # nm_idx_122 = PHI <nm_idx_185(101), nm_idx_121(450)>
  # DEBUG nm_idx => nm_idx_122
  # DEBUG m_idx => m_idx_114
  # DEBUG codec_ms => codec_ms_95
  # DEBUG got_webrtc => got_webrtc_79
  # DEBUG got_udptl => got_udptl_77
  # DEBUG got_savp => got_savp_75
  # DEBUG got_video_savp => got_video_savp_73
  # DEBUG got_video_avp => got_video_avp_71
  # DEBUG got_avp => got_avp_69
  # DEBUG got_audio => got_audio_67
  # DEBUG got_video_crypto => got_video_crypto_64
  # DEBUG got_crypto => got_crypto_56
  # DEBUG m => m_28
  # DEBUG cng_pt => cng_pt_27
  # DEBUG best_te => best_te_23
  # DEBUG match => match_16
  if (m_28 != 0B)
    goto <bb 102>;
  else
    goto <bb 452> (done);

  # match_17 = PHI <match_397(121), match_401(123), match_437(141), match_492(152), match_543(186), match_553(192), match_557(196), match_883(354), match_975(399), match_16(451)>
done:
  # DEBUG match => match_17
  if (parser_196 != 0B)
    goto <bb 453>;
  else
    goto <bb 454>;

<bb 453>:
  sdp_parser_free (parser_196);

<bb 454>:
  D.44471_1095 = smh_186->mparams;
  D.44471_1095->cng_pt = cng_pt_27;
  match_1096 = match_17;

<bb 455>:
  # match_142 = PHI <match_187(5), match_197(7), match_199(9), match_1096(454)>
  return match_142;

}



;; Function switch_core_media_proxy_remote_addr (switch_core_media_proxy_remote_addr)

Try : D.47971_376(P376) & D.47973_364(P364) --> P376 D.47971
Try : D.44138_31(P31) & D.47971_376(P376) --> P376 D.47971
Try : D.47975_377(P377) & D.47977_366(P366) --> P377 D.47975
Try : D.44142_34(P34) & D.47975_377(P377) --> P377 D.47975
Try : D.47979_379(P379) & D.47980_367(P367) --> P379 D.47979
Try : D.44153_42(P42) & D.47979_379(P379) --> P379 D.47979
Try : port_ptr_43(P43) & tmp_41(P41) : 2 different USER vars. No coalesce.
Try : p_49(P49) & ip_ptr_6(P6) : 2 different USER vars. No coalesce.
Try : p_71(P71) & port_ptr_8(P8) : 2 different USER vars. No coalesce.
Try : p_83(P83) & vid_port_ptr_9(P9) : 2 different USER vars. No coalesce.
Try : D.47982_381(P381) & D.47983_368(P368) --> P381 D.47982
Try : D.44195_100(P100) & D.47982_381(P381) --> P381 D.47982
Try : D.47985_383(P383) & D.47986_369(P369) --> P383 D.47985
Try : D.44202_106(P106) & D.47985_383(P383) --> P383 D.47985
Try : D.47988_385(P385) & D.47989_370(P370) --> P385 D.47988
Try : D.44214_117(P117) & D.47988_385(P385) --> P385 D.47988
Try : D.47991_387(P387) & D.47992_371(P371) --> P387 D.47991
Try : D.44225_134(P134) & D.47991_387(P387) --> P387 D.47991
Try : __s1_181(P181) & remote_host_161(P161) : 2 different USER vars. No coalesce.
Try : D.39214_218(P218) & __result_16(P16) --> P218 __result
Try : iftmp.84_219(P219) & __result_218(P218) --> P218 __result
Try : D.39215_221(P221) & iftmp.84_19(P19) --> P221 D.39215
Try : D.39223_261(P261) & __result_17(P17) --> P261 __result
Try : iftmp.85_262(P262) & __result_261(P261) --> P261 __result
Try : D.39224_266(P266) & iftmp.85_20(P20) --> P266 D.39224
Try : D.47994_389(P389) & D.47995_372(P372) --> P389 D.47994
Try : D.44336_272(P272) & D.47994_389(P389) --> P389 D.47994
Try : D.44137_296(P296) & status_13(P13) --> P296 status
Try : sdp_str_1(P1) & sdp_str_30(D)(P30) : Same root, coalesced --> P1.
Try : sdp_str_1(P1) & sdp_str_33(P33) : Same root, coalesced --> P1.
Try : p_2(P2) & p_35(P35) : Same root, coalesced --> P2.
Try : p_2(P2) & p_36(P36) : Same root, coalesced --> P2.
Try : ip_ptr_6(P6) & ip_ptr_21(P21) : Same root, coalesced --> P6.
Try : ip_ptr_6(P6) & ip_ptr_37(P37) : Same root, coalesced --> P6.
Try : port_ptr_7(P7) & port_ptr_22(P22) : Same root, coalesced --> P7.
Try : port_ptr_7(P7) & port_ptr_39(P39) : Same root, coalesced --> P7.
Try : port_ptr_8(P8) & port_ptr_7(P7) : Same root, coalesced --> P7.
Try : port_ptr_8(P7) & port_ptr_7(P7) : Already coalesced.
Try : port_ptr_8(P7) & port_ptr_7(P7) : Already coalesced.
Try : port_ptr_8(P7) & port_ptr_43(P43) : Same root, coalesced --> P7.
Try : vid_port_ptr_9(P9) & vid_port_ptr_23(P23) : Same root, coalesced --> P9.
Try : vid_port_ptr_9(P9) & vid_port_ptr_45(P45) : Same root, coalesced --> P9.
Try : p_3(P3) & p_49(P49) : Same root, coalesced --> P3.
Try : p_3(P3) & p_70(P70) : Same root, coalesced --> P3.
Try : x_10(P10) & x_52(P52) : Same root, coalesced --> P10.
Try : x_10(P10) & x_69(P69) : Same root, coalesced --> P10.
Try : p_4(P4) & p_71(P71) : Same root, coalesced --> P4.
Try : p_4(P4) & p_82(P82) : Same root, coalesced --> P4.
Try : x_11(P11) & x_72(P72) : Same root, coalesced --> P11.
Try : x_11(P11) & x_81(P81) : Same root, coalesced --> P11.
Try : p_5(P5) & p_83(P83) : Same root, coalesced --> P5.
Try : p_5(P5) & p_94(P94) : Same root, coalesced --> P5.
Try : x_12(P12) & x_84(P84) : Same root, coalesced --> P12.
Try : x_12(P12) & x_93(P93) : Same root, coalesced --> P12.
Try : remote_rtcp_port_14(P14) & remote_rtcp_port_131(P131) : Same root, coalesced --> P14.
Try : remote_rtcp_port_14(P14) & remote_rtcp_port_131(P14) : Already coalesced.
Try : remote_rtcp_port_14(P14) & remote_rtcp_port_135(P135) : Same root, coalesced --> P14.
Try : __result_16(P218) & __result_187(P187) : Same root, coalesced --> P218.
Try : __result_16(P218) & __result_197(P197) : Same root, coalesced --> P218.
Try : __result_16(P218) & __result_207(P207) : Same root, coalesced --> P218.
Try : __result_16(P218) & __result_217(P217) : Same root, coalesced --> P218.
Try : iftmp.84_19(P221) & iftmp.84_219(P218) --> P218 __result
Try : iftmp.84_19(P218) & iftmp.84_220(P220) --> P218 __result
Try : __result_17(P261) & __result_230(P230) : Same root, coalesced --> P261.
Try : __result_17(P261) & __result_240(P240) : Same root, coalesced --> P261.
Try : __result_17(P261) & __result_250(P250) : Same root, coalesced --> P261.
Try : __result_17(P261) & __result_260(P260) : Same root, coalesced --> P261.
Try : iftmp.85_20(P266) & iftmp.85_262(P261) --> P261 __result
Try : iftmp.85_20(P261) & iftmp.85_265(P265) --> P261 __result
Try : remote_rtcp_port_15(P15) & remote_rtcp_port_165(P165) : Same root, coalesced --> P15.
Try : remote_rtcp_port_15(P15) & remote_rtcp_port_273(P273) : Same root, coalesced --> P15.
Try : status_13(P296) & status_24(P24) : Same root, coalesced --> P296.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_24(P296) : Already coalesced.
Try : status_13(P296) & status_179(P179) : Same root, coalesced --> P296.
Try : status_13(P296) & status_269(P269) : Same root, coalesced --> P296.
Try : status_13(P296) & status_281(P281) : Same root, coalesced --> P296.
Try : status_13(P296) & status_295(P295) : Same root, coalesced --> P296.
Try : D.44137_18(P18) & D.44137_27(P27) : Same root, coalesced --> P18.
Try : D.44137_18(P18) & status_296(P296) --> P296 status

Partition map 

Partition 1 (sdp_str_1 - 1 30 33 )
Partition 2 (p_2 - 2 35 36 )
Partition 3 (p_3 - 3 49 70 )
Partition 4 (p_4 - 4 71 82 )
Partition 5 (p_5 - 5 83 94 )
Partition 6 (ip_ptr_6 - 6 21 37 )
Partition 7 (port_ptr_7 - 7 8 22 39 43 )
Partition 9 (vid_port_ptr_9 - 9 23 45 )
Partition 10 (x_10 - 10 52 69 )
Partition 11 (x_11 - 11 72 81 )
Partition 12 (x_12 - 12 84 93 )
Partition 14 (remote_rtcp_port_14 - 14 131 135 )
Partition 15 (remote_rtcp_port_15 - 15 165 273 )
Partition 25 (session_25(D) - 25 )
Partition 26 (smh_26 - 26 )
Partition 28 (a_engine_28 - 28 )
Partition 29 (v_engine_29 - 29 )
Partition 32 (D.44141_32 - 32 )
Partition 38 (p_38 - 38 )
Partition 40 (p_40 - 40 )
Partition 41 (tmp_41 - 41 )
Partition 44 (p_44 - 44 )
Partition 46 (D.44158_46 - 46 )
Partition 47 (D.44159_47 - 47 )
Partition 48 (D.44160_48 - 48 )
Partition 50 (D.44162_50 - 50 )
Partition 51 (pe_51 - 51 )
Partition 53 (x.82_53 - 53 )
Partition 54 (D.44166_54 - 54 )
Partition 55 (D.44167_55 - 55 )
Partition 56 (D.44168_56 - 56 )
Partition 57 (D.44163_57 - 57 )
Partition 58 (D.44171_58 - 58 )
Partition 59 (D.44172_59 - 59 )
Partition 60 (D.44173_60 - 60 )
Partition 61 (D.44174_61 - 61 )
Partition 62 (D.44175_62 - 62 )
Partition 63 (D.44163_63 - 63 )
Partition 64 (D.44163_64 - 64 )
Partition 65 (D.44178_65 - 65 )
Partition 66 (D.44163_66 - 66 )
Partition 67 (D.44180_67 - 67 )
Partition 68 (D.44163_68 - 68 )
Partition 73 (x.82_73 - 73 )
Partition 74 (D.44166_74 - 74 )
Partition 75 (D.44167_75 - 75 )
Partition 76 (D.44168_76 - 76 )
Partition 77 (D.44163_77 - 77 )
Partition 78 (D.44163_78 - 78 )
Partition 79 (D.44184_79 - 79 )
Partition 80 (D.44163_80 - 80 )
Partition 85 (x.82_85 - 85 )
Partition 86 (D.44166_86 - 86 )
Partition 87 (D.44167_87 - 87 )
Partition 88 (D.44168_88 - 88 )
Partition 89 (D.44163_89 - 89 )
Partition 90 (D.44163_90 - 90 )
Partition 91 (D.44184_91 - 91 )
Partition 92 (D.44163_92 - 92 )
Partition 95 (D.44190_95 - 95 )
Partition 96 (D.44192_96 - 96 )
Partition 97 (D.44193_97 - 97 )
Partition 98 (D.44194_98 - 98 )
Partition 99 (D.44193_99 - 99 )
Partition 101 (D.44196_101 - 101 )
Partition 102 (D.44197_102 - 102 )
Partition 103 (D.44200_103 - 103 )
Partition 104 (D.44201_104 - 104 )
Partition 105 (D.44200_105 - 105 )
Partition 107 (D.44203_107 - 107 )
Partition 108 (D.44204_108 - 108 )
Partition 109 (D.44204_109 - 109 )
Partition 110 (D.44200_110 - 110 )
Partition 111 (D.44205_111 - 111 )
Partition 112 (D.44200_112 - 112 )
Partition 113 (D.44208_113 - 113 )
Partition 114 (D.44200_114 - 114 )
Partition 115 (D.44205_115 - 115 )
Partition 116 (D.39191_116 - 116 )
Partition 118 (D.44200_118 - 118 )
Partition 119 (D.44208_119 - 119 )
Partition 120 (D.44215_120 - 120 )
Partition 121 (D.44200_121 - 121 )
Partition 122 (D.44205_122 - 122 )
Partition 123 (D.44200_123 - 123 )
Partition 124 (D.44208_124 - 124 )
Partition 125 (D.44215_125 - 125 )
Partition 126 (D.44204_126 - 126 )
Partition 127 (D.44204_127 - 127 )
Partition 128 (D.44217_128 - 128 )
Partition 129 (D.44218_129 - 129 )
Partition 130 (rport_130 - 130 )
Partition 132 (D.44204_132 - 132 )
Partition 133 (rport_133 - 133 )
Partition 136 (D.44217_136 - 136 )
Partition 137 (D.44200_137 - 137 )
Partition 138 (D.44205_138 - 138 )
Partition 139 (D.44200_139 - 139 )
Partition 140 (D.44208_140 - 140 )
Partition 141 (D.44226_141 - 141 )
Partition 142 (err.83_142 - 142 )
Partition 143 (D.44200_143 - 143 )
Partition 144 (D.44205_144 - 144 )
Partition 145 (D.44200_145 - 145 )
Partition 146 (D.44208_146 - 146 )
Partition 147 (D.44215_147 - 147 )
Partition 148 (D.44233_148 - 148 )
Partition 149 (D.44204_149 - 149 )
Partition 150 (D.44236_150 - 150 )
Partition 151 (D.44204_151 - 151 )
Partition 152 (val_152 - 152 )
Partition 153 (D.44240_153 - 153 )
Partition 154 (D.44204_154 - 154 )
Partition 155 (D.44241_155 - 155 )
Partition 156 (D.44217_156 - 156 )
Partition 157 (D.44244_157 - 157 )
Partition 158 (D.44247_158 - 158 )
Partition 159 (D.44248_159 - 159 )
Partition 160 (D.44247_160 - 160 )
Partition 161 (remote_host_161 - 161 )
Partition 162 (D.44247_162 - 162 )
Partition 163 (remote_port_163 - 163 )
Partition 164 (rport_164 - 164 )
Partition 166 (D.44252_166 - 166 )
Partition 167 (D.44253_167 - 167 )
Partition 168 (D.44254_168 - 168 )
Partition 169 (D.44193_169 - 169 )
Partition 170 (D.44256_170 - 170 )
Partition 171 (D.39206_171 - 171 )
Partition 172 (D.44193_172 - 172 )
Partition 173 (D.44258_173 - 173 )
Partition 174 (D.44193_174 - 174 )
Partition 175 (D.44256_175 - 175 )
Partition 176 (D.44193_176 - 176 )
Partition 177 (D.44258_177 - 177 )
Partition 178 (D.44260_178 - 178 )
Partition 180 (__s2_len_180 - 180 )
Partition 181 (__s1_181 - 181 )
Partition 182 (D.44268_182 - 182 )
Partition 183 (D.44269_183 - 183 )
Partition 184 (D.44270_184 - 184 )
Partition 185 (D.44271_185 - 185 )
Partition 186 (D.44272_186 - 186 )
Partition 188 (D.44273_188 - 188 )
Partition 189 (D.44274_189 - 189 )
Partition 190 (D.44275_190 - 190 )
Partition 191 (D.44278_191 - 191 )
Partition 192 (D.44279_192 - 192 )
Partition 193 (D.44280_193 - 193 )
Partition 194 (D.44281_194 - 194 )
Partition 195 (D.44282_195 - 195 )
Partition 196 (D.44283_196 - 196 )
Partition 198 (D.44284_198 - 198 )
Partition 199 (D.44274_199 - 199 )
Partition 200 (D.44285_200 - 200 )
Partition 201 (D.44288_201 - 201 )
Partition 202 (D.44289_202 - 202 )
Partition 203 (D.44290_203 - 203 )
Partition 204 (D.44291_204 - 204 )
Partition 205 (D.44292_205 - 205 )
Partition 206 (D.44293_206 - 206 )
Partition 208 (D.44294_208 - 208 )
Partition 209 (D.44274_209 - 209 )
Partition 210 (D.44295_210 - 210 )
Partition 211 (D.44298_211 - 211 )
Partition 212 (D.44299_212 - 212 )
Partition 213 (D.44300_213 - 213 )
Partition 214 (D.44301_214 - 214 )
Partition 215 (D.44302_215 - 215 )
Partition 216 (D.44303_216 - 216 )
Partition 218 (__result_218 - 16 19 187 197 207 217 218 219 220 221 )
Partition 222 (__s2_len_222 - 222 )
Partition 223 (D.44193_223 - 223 )
Partition 224 (__s1_224 - 224 )
Partition 225 (D.44309_225 - 225 )
Partition 226 (D.44310_226 - 226 )
Partition 227 (D.44270_227 - 227 )
Partition 228 (D.44271_228 - 228 )
Partition 229 (D.44272_229 - 229 )
Partition 231 (D.44311_231 - 231 )
Partition 232 (D.44312_232 - 232 )
Partition 233 (D.44313_233 - 233 )
Partition 234 (D.44316_234 - 234 )
Partition 235 (D.44317_235 - 235 )
Partition 236 (D.44318_236 - 236 )
Partition 237 (D.44281_237 - 237 )
Partition 238 (D.44282_238 - 238 )
Partition 239 (D.44283_239 - 239 )
Partition 241 (D.44319_241 - 241 )
Partition 242 (D.44312_242 - 242 )
Partition 243 (D.44320_243 - 243 )
Partition 244 (D.44323_244 - 244 )
Partition 245 (D.44324_245 - 245 )
Partition 246 (D.44325_246 - 246 )
Partition 247 (D.44291_247 - 247 )
Partition 248 (D.44292_248 - 248 )
Partition 249 (D.44293_249 - 249 )
Partition 251 (D.44326_251 - 251 )
Partition 252 (D.44312_252 - 252 )
Partition 253 (D.44327_253 - 253 )
Partition 254 (D.44330_254 - 254 )
Partition 255 (D.44331_255 - 255 )
Partition 256 (D.44332_256 - 256 )
Partition 257 (D.44301_257 - 257 )
Partition 258 (D.44302_258 - 258 )
Partition 259 (D.44303_259 - 259 )
Partition 261 (__result_261 - 17 20 230 240 250 260 261 262 265 266 )
Partition 263 (D.44193_263 - 263 )
Partition 264 (D.44256_264 - 264 )
Partition 267 (D.44193_267 - 267 )
Partition 268 (D.44256_268 - 268 )
Partition 270 (D.44204_270 - 270 )
Partition 271 (rport_271 - 271 )
Partition 274 (D.44247_274 - 274 )
Partition 275 (D.44193_275 - 275 )
Partition 276 (D.44256_276 - 276 )
Partition 277 (D.44193_277 - 277 )
Partition 278 (D.44258_278 - 278 )
Partition 279 (D.44337_279 - 279 )
Partition 280 (err.83_280 - 280 )
Partition 282 (D.44193_282 - 282 )
Partition 283 (D.44256_283 - 283 )
Partition 284 (D.44193_284 - 284 )
Partition 285 (D.44258_285 - 285 )
Partition 286 (D.44260_286 - 286 )
Partition 287 (D.44343_287 - 287 )
Partition 288 (D.44204_288 - 288 )
Partition 289 (val_289 - 289 )
Partition 290 (D.44347_290 - 290 )
Partition 291 (D.44204_291 - 291 )
Partition 292 (D.44348_292 - 292 )
Partition 293 (D.44247_293 - 293 )
Partition 294 (D.44351_294 - 294 )
Partition 296 (status_296 - 13 18 24 27 179 269 281 295 296 )
Partition 297 (.MEM_297 - 297 )
Partition 298 (.MEM_298 - 298 )
Partition 299 (.MEM_299 - 299 )
Partition 300 (.MEM_300 - 300 )
Partition 301 (.MEM_301 - 301 )
Partition 302 (.MEM_302 - 302 )
Partition 303 (.MEM_303 - 303 )
Partition 304 (.MEM_304 - 304 )
Partition 305 (.MEM_305 - 305 )
Partition 306 (.MEM_306 - 306 )
Partition 307 (.MEM_307 - 307 )
Partition 308 (.MEM_308 - 308 )
Partition 309 (.MEM_309(D) - 309 )
Partition 310 (.MEM_310 - 310 )
Partition 311 (.MEM_311 - 311 )
Partition 312 (.MEM_312 - 312 )
Partition 313 (.MEM_313 - 313 )
Partition 314 (.MEM_314 - 314 )
Partition 315 (.MEM_315 - 315 )
Partition 316 (.MEM_316 - 316 )
Partition 317 (.MEM_317 - 317 )
Partition 318 (.MEM_318 - 318 )
Partition 319 (.MEM_319 - 319 )
Partition 320 (.MEM_320 - 320 )
Partition 321 (.MEM_321 - 321 )
Partition 322 (.MEM_322 - 322 )
Partition 323 (.MEM_323 - 323 )
Partition 324 (.MEM_324 - 324 )
Partition 325 (.MEM_325 - 325 )
Partition 326 (.MEM_326 - 326 )
Partition 327 (.MEM_327 - 327 )
Partition 328 (.MEM_328 - 328 )
Partition 329 (.MEM_329 - 329 )
Partition 330 (.MEM_330 - 330 )
Partition 331 (.MEM_331 - 331 )
Partition 332 (.MEM_332 - 332 )
Partition 333 (.MEM_333 - 333 )
Partition 334 (.MEM_334 - 334 )
Partition 335 (.MEM_335 - 335 )
Partition 336 (.MEM_336 - 336 )
Partition 337 (.MEM_337 - 337 )
Partition 338 (.MEM_338 - 338 )
Partition 339 (.MEM_339 - 339 )
Partition 340 (.MEM_340 - 340 )
Partition 341 (.MEM_341 - 341 )
Partition 342 (.MEM_342 - 342 )
Partition 343 (.MEM_343 - 343 )
Partition 344 (.MEM_344 - 344 )
Partition 345 (.MEM_345 - 345 )
Partition 346 (.MEM_346 - 346 )
Partition 347 (.MEM_347 - 347 )
Partition 348 (.MEM_348 - 348 )
Partition 349 (.MEM_349 - 349 )
Partition 350 (.MEM_350 - 350 )
Partition 351 (.MEM_351 - 351 )
Partition 352 (.MEM_352 - 352 )
Partition 353 (.MEM_353 - 353 )
Partition 354 (.MEM_354 - 354 )
Partition 355 (.MEM_355 - 355 )
Partition 356 (.MEM_356 - 356 )
Partition 357 (.MEM_357 - 357 )
Partition 358 (.MEM_358 - 358 )
Partition 359 (.MEM_359 - 359 )
Partition 360 (.MEM_360 - 360 )
Partition 361 (.MEM_361 - 361 )
Partition 362 (.MEM_362 - 362 )
Partition 363 (D.47972_363 - 363 )
Partition 365 (D.47976_365 - 365 )
Partition 373 (.MEM_373 - 373 )
Partition 374 (.MEM_374 - 374 )
Partition 375 (.MEM_375 - 375 )
Partition 376 (D.47971_376 - 31 364 376 )
Partition 377 (D.47975_377 - 34 366 377 )
Partition 378 (.MEM_378 - 378 )
Partition 379 (D.47979_379 - 42 367 379 )
Partition 380 (.MEM_380 - 380 )
Partition 381 (D.47982_381 - 100 368 381 )
Partition 382 (.MEM_382 - 382 )
Partition 383 (D.47985_383 - 106 369 383 )
Partition 384 (.MEM_384 - 384 )
Partition 385 (D.47988_385 - 117 370 385 )
Partition 386 (.MEM_386 - 386 )
Partition 387 (D.47991_387 - 134 371 387 )
Partition 388 (.MEM_388 - 388 )
Partition 389 (D.47994_389 - 272 372 389 )

Coalesced D.44137_18 to status_296
Coalesced iftmp.84_19 to __result_218
Coalesced iftmp.85_20 to __result_261
Coalesced D.44137_27 to status_296
Coalesced D.44138_31 to D.47971_376
Coalesced D.44142_34 to D.47975_377
Coalesced D.44153_42 to D.47979_379
Coalesced D.44195_100 to D.47982_381
Coalesced D.44202_106 to D.47985_383
Coalesced D.44214_117 to D.47988_385
Coalesced D.44225_134 to D.47991_387
Coalesced iftmp.84_219 to __result_218
Coalesced iftmp.84_220 to __result_218
Coalesced D.39215_221 to __result_218
Coalesced iftmp.85_262 to __result_261
Coalesced iftmp.85_265 to __result_261
Coalesced D.39224_266 to __result_261
Coalesced D.44336_272 to D.47994_389
Coalesced D.47973_364 to D.47971_376
Coalesced D.47977_366 to D.47975_377
Coalesced D.47980_367 to D.47979_379
Coalesced D.47983_368 to D.47982_381
Coalesced D.47986_369 to D.47985_383
Coalesced D.47989_370 to D.47988_385
Coalesced D.47992_371 to D.47991_387
Coalesced D.47995_372 to D.47994_389
Scope blocks after cleanups:

{ Scope block #0 
  const char * err;
  char rip[512];
  char rp[512];
  char rvp[512];
  char * p;
  char * ip_ptr;
  char * port_ptr;
  char * vid_port_ptr;
  char * pe;
  int x;
  const char * val;
  switch_status_t status;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[36] = "switch_core_media_proxy_remote_addr";
  void end = <<< error >>>; (unused)
  static const char __func__[36] = "switch_core_media_proxy_remote_addr";

  { Scope block #278 src/switch_core_media.c:4240 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #279 Originating from :#0 

    }

  }

  { Scope block #280 src/switch_core_media.c:4234 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #281 Originating from :#0 

    }

  }

  { Scope block #282 src/switch_core_media.c:4230 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #283 Originating from :#0 

    }

  }

  { Scope block #284 src/switch_core_media.c:4165 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #285 Originating from :#0 

    }

  }

  { Scope block #286 src/switch_core_media.c:4161 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #287 Originating from :#0 

    }

  }

  { Scope block #288 
    char * tmp;

    { Scope block #289 src/switch_core_media.c:4180 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #290 Originating from :#0 

      }

    }

  }

  { Scope block #291 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #292 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #293 src/switch_core_media.c:4252 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #294 Originating from :#0 

      }

    }

  }

  { Scope block #295 
    char * remote_host;
    switch_port_t remote_port;
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #296 src/switch_core_media.c:4299 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #297 Originating from :#0 

      }

    }

    { Scope block #298 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #299 
      size_t __s1_len; (unused)
      size_t __s2_len;

      { Scope block #300 
        const unsigned char * __s1;
        register int __result;

      }

    }

    { Scope block #301 
      size_t __s1_len; (unused)
      size_t __s2_len;

      { Scope block #302 
        const unsigned char * __s1;
        register int __result;

      }

    }

  }

}
switch_core_media_proxy_remote_addr (struct switch_core_session_t * session, const char * sdp_str)
{
  int D.47994;
  int D.47991;
  int D.47988;
  int D.47985;
  int D.47982;
  int D.47979;
  const char D.47976;
  int D.47975;
  const char D.47972;
  int D.47971;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char * tmp;
  static const char __func__[36] = "switch_core_media_proxy_remote_addr";
  static const char __PRETTY_FUNCTION__[36] = "switch_core_media_proxy_remote_addr";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  switch_status_t status;
  const char * val;
  int x;
  char * pe;
  char * vid_port_ptr;
  char * port_ptr;
  char * ip_ptr;
  char * p;
  char rvp[512];
  char rp[512];
  char rip[512];
  const char * err;
  int32_t D.44351;
  uint32_t D.44348;
  int D.44347;
  int32_t D.44343;
  switch_status_t D.44337;
  int D.44332;
  const unsigned char D.44331;
  const unsigned char * D.44330;
  _Bool D.44327;
  _Bool D.44326;
  int D.44325;
  const unsigned char D.44324;
  const unsigned char * D.44323;
  _Bool D.44320;
  _Bool D.44319;
  int D.44318;
  const unsigned char D.44317;
  const unsigned char * D.44316;
  _Bool D.44313;
  _Bool D.44312;
  _Bool D.44311;
  int D.44310;
  const unsigned char D.44309;
  int D.44303;
  const unsigned char D.44302;
  char * D.44301;
  int D.44300;
  const unsigned char D.44299;
  const unsigned char * D.44298;
  _Bool D.44295;
  _Bool D.44294;
  int D.44293;
  const unsigned char D.44292;
  char * D.44291;
  int D.44290;
  const unsigned char D.44289;
  const unsigned char * D.44288;
  _Bool D.44285;
  _Bool D.44284;
  int D.44283;
  const unsigned char D.44282;
  char * D.44281;
  int D.44280;
  const unsigned char D.44279;
  const unsigned char * D.44278;
  _Bool D.44275;
  _Bool D.44274;
  _Bool D.44273;
  int D.44272;
  const unsigned char D.44271;
  char[8] * D.44270;
  int D.44269;
  const unsigned char D.44268;
  int D.44260;
  switch_port_t D.44258;
  char * D.44256;
  int D.39206;
  _Bool D.44254;
  _Bool D.44253;
  _Bool D.44252;
  uint8_t D.44248;
  struct switch_rtp_t * D.44247;
  int32_t D.44244;
  uint32_t D.44241;
  int D.44240;
  uint32_t D.44236;
  int32_t D.44233;
  const char * err.83;
  switch_status_t D.44226;
  uint8_t D.44218;
  struct switch_rtp_t * D.44217;
  int D.44215;
  int D.39191;
  switch_port_t D.44208;
  char * D.44205;
  struct switch_channel_t * D.44204;
  short unsigned int D.44203;
  char * D.44201;
  struct payload_map_t * D.44200;
  char D.44197;
  short unsigned int D.44196;
  char * D.44194;
  struct payload_map_t * D.44193;
  char D.44192;
  char D.44190;
  char D.44184;
  char D.44180;
  char D.44178;
  _Bool D.44175;
  _Bool D.44174;
  _Bool D.44173;
  char D.44172;
  char D.44171;
  _Bool D.44168;
  _Bool D.44167;
  _Bool D.44166;
  unsigned int x.82;
  char D.44163;
  size_t D.44162;
  _Bool D.44160;
  _Bool D.44159;
  _Bool D.44158;
  struct switch_core_media_params_t * D.44141;

<bb 2>:
  rip = "";
  rp = "";
  rvp = "";
  ip_ptr_21 = 0B;
  # DEBUG ip_ptr => ip_ptr_21
  port_ptr_22 = 0B;
  # DEBUG port_ptr => port_ptr_22
  vid_port_ptr_23 = 0B;
  # DEBUG vid_port_ptr => vid_port_ptr_23
  status_24 = 1;
  # DEBUG status => status_24
  if (session_25(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4152, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_26 = session_25(D)->media_handle;
  # DEBUG smh => smh_26
  if (smh_26 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_27 = 1;
  goto <bb 105>;

<bb 6>:
  a_engine_28 = &smh_26->engines;
  # DEBUG a_engine => a_engine_28
  v_engine_29 = &smh_26->engines[1];
  # DEBUG v_engine => v_engine_29
  # DEBUG s => sdp_str_30(D)
  if (sdp_str_30(D) == 0B)
    goto <bb 9>;
  else
    goto <bb 7>;

<bb 7>:
  D.47972_363 = *sdp_str_30(D);
  if (D.47972_363 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;

<bb 8>:

<bb 9>:
  # D.47971_364 = PHI <1(6), 1(7), 0(8)>
  D.47971_376 = D.47971_364;
  D.47971_31 = D.47971_376;
  if (D.47971_31 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.44141_32 = smh_26->mparams;
  sdp_str_33 = D.44141_32->remote_sdp_str;
  # DEBUG sdp_str => sdp_str_33

<bb 11>:
  # sdp_str_1 = PHI <sdp_str_30(D)(9), sdp_str_33(10)>
  # DEBUG sdp_str => sdp_str_1
  # DEBUG s => sdp_str_1
  if (sdp_str_1 == 0B)
    goto <bb 14>;
  else
    goto <bb 12>;

<bb 12>:
  D.47976_365 = *sdp_str_1;
  if (D.47976_365 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

<bb 13>:

<bb 14>:
  # D.47975_366 = PHI <1(11), 1(12), 0(13)>
  D.47975_377 = D.47975_366;
  D.47975_34 = D.47975_377;
  if (D.47975_34 != 0)
    goto <bb 104> (end);
  else
    goto <bb 15>;

<bb 15>:
  p_35 = switch_stristr ("c=IN IP4 ", sdp_str_1);
  # DEBUG p => p_35
  if (p_35 != 0B)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:
  p_36 = switch_stristr ("c=IN IP6 ", sdp_str_1);
  # DEBUG p => p_36
  if (p_36 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  # p_2 = PHI <p_35(15), p_36(16)>
  # DEBUG p => p_2
  ip_ptr_37 = p_2 + 9;
  # DEBUG ip_ptr => ip_ptr_37

<bb 18>:
  # ip_ptr_6 = PHI <ip_ptr_21(16), ip_ptr_37(17)>
  # DEBUG ip_ptr => ip_ptr_6
  p_38 = switch_stristr ("m=audio ", sdp_str_1);
  # DEBUG p => p_38
  if (p_38 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  port_ptr_39 = p_38 + 8;
  # DEBUG port_ptr => port_ptr_39

<bb 20>:
  # port_ptr_7 = PHI <port_ptr_22(18), port_ptr_39(19)>
  # DEBUG port_ptr => port_ptr_7
  p_40 = switch_stristr ("m=image ", sdp_str_1);
  # DEBUG p => p_40
  if (p_40 != 0B)
    goto <bb 21>;
  else
    goto <bb 24>;

<bb 21>:
  tmp_41 = p_40 + 8;
  # DEBUG tmp => tmp_41
  if (tmp_41 != 0B)
    goto <bb 22>;
  else
    goto <bb 24>;

<bb 22>:
  # DEBUG __nptr => tmp_41
  D.47979_367 = strtol (tmp_41, 0B, 10);
  D.47979_379 = D.47979_367;
  D.47979_42 = D.47979_379;
  if (D.47979_42 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  port_ptr_43 = tmp_41;
  # DEBUG port_ptr => port_ptr_43

<bb 24>:
  # port_ptr_8 = PHI <port_ptr_7(20), port_ptr_7(21), port_ptr_7(22), port_ptr_43(23)>
  # DEBUG port_ptr => port_ptr_8
  p_44 = switch_stristr ("m=video ", sdp_str_1);
  # DEBUG p => p_44
  if (p_44 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  vid_port_ptr_45 = p_44 + 8;
  # DEBUG vid_port_ptr => vid_port_ptr_45

<bb 26>:
  # vid_port_ptr_9 = PHI <vid_port_ptr_23(24), vid_port_ptr_45(25)>
  # DEBUG vid_port_ptr => vid_port_ptr_9
  D.44158_46 = ip_ptr_6 == 0B;
  D.44159_47 = port_ptr_8 == 0B;
  D.44160_48 = D.44158_46 || D.44159_47;
  if (D.44160_48 != 0)
    goto <bb 104> (end);
  else
    goto <bb 27>;

<bb 27>:
  p_49 = ip_ptr_6;
  # DEBUG p => p_49
  D.44162_50 = strlen (p_49);
  pe_51 = p_49 + D.44162_50;
  # DEBUG pe => pe_51
  x_52 = 0;
  # DEBUG x => x_52
  goto <bb 29>;

<bb 28>:
  D.44163_68 = *p_3;
  rip[x_10] = D.44163_68;
  x_69 = x_10 + 1;
  # DEBUG x => x_69
  p_70 = p_3 + 1;
  # DEBUG p => p_70
  if (p_70 >= pe_51)
    goto <bb 104> (end);
  else
    goto <bb 29>;

<bb 29>:
  # p_3 = PHI <p_49(27), p_70(28)>
  # x_10 = PHI <x_52(27), x_69(28)>
  # DEBUG x => x_10
  # DEBUG p => p_3
  x.82_53 = (unsigned int) x_10;
  D.44166_54 = x.82_53 <= 510;
  D.44167_55 = p_3 != 0B;
  D.44168_56 = D.44166_54 && D.44167_55;
  if (D.44168_56 != 0)
    goto <bb 30>;
  else
    goto <bb 35>;

<bb 30>:
  D.44163_57 = *p_3;
  if (D.44163_57 != 0)
    goto <bb 31>;
  else
    goto <bb 35>;

<bb 31>:
  D.44171_58 = *p_3;
  D.44172_59 = D.44171_58 + 208;
  D.44173_60 = D.44172_59 <= 9;
  D.44174_61 = D.44171_58 == 46;
  D.44175_62 = D.44173_60 || D.44174_61;
  if (D.44175_62 != 0)
    goto <bb 28>;
  else
    goto <bb 32>;

<bb 32>:
  D.44163_63 = *p_3;
  if (D.44163_63 == 58)
    goto <bb 28>;
  else
    goto <bb 33>;

<bb 33>:
  D.44163_64 = *p_3;
  D.44178_65 = D.44163_64 + 159;
  if (D.44178_65 <= 5)
    goto <bb 28>;
  else
    goto <bb 34>;

<bb 34>:
  D.44163_66 = *p_3;
  D.44180_67 = D.44163_66 + 191;
  if (D.44180_67 <= 5)
    goto <bb 28>;
  else
    goto <bb 35>;

<bb 35>:
  p_71 = port_ptr_8;
  # DEBUG p => p_71
  x_72 = 0;
  # DEBUG x => x_72
  goto <bb 37>;

<bb 36>:
  D.44163_80 = *p_4;
  rp[x_11] = D.44163_80;
  x_81 = x_11 + 1;
  # DEBUG x => x_81
  p_82 = p_4 + 1;
  # DEBUG p => p_82
  if (p_82 >= pe_51)
    goto <bb 104> (end);
  else
    goto <bb 37>;

<bb 37>:
  # p_4 = PHI <p_71(35), p_82(36)>
  # x_11 = PHI <x_72(35), x_81(36)>
  # DEBUG x => x_11
  # DEBUG p => p_4
  x.82_73 = (unsigned int) x_11;
  D.44166_74 = x.82_73 <= 510;
  D.44167_75 = p_4 != 0B;
  D.44168_76 = D.44166_74 && D.44167_75;
  if (D.44168_76 != 0)
    goto <bb 38>;
  else
    goto <bb 40>;

<bb 38>:
  D.44163_77 = *p_4;
  if (D.44163_77 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.44163_78 = *p_4;
  D.44184_79 = D.44163_78 + 208;
  if (D.44184_79 <= 9)
    goto <bb 36>;
  else
    goto <bb 40>;

<bb 40>:
  p_83 = vid_port_ptr_9;
  # DEBUG p => p_83
  x_84 = 0;
  # DEBUG x => x_84
  goto <bb 42>;

<bb 41>:
  D.44163_92 = *p_5;
  rvp[x_12] = D.44163_92;
  x_93 = x_12 + 1;
  # DEBUG x => x_93
  p_94 = p_5 + 1;
  # DEBUG p => p_94
  if (p_94 >= pe_51)
    goto <bb 104> (end);
  else
    goto <bb 42>;

<bb 42>:
  # p_5 = PHI <p_83(40), p_94(41)>
  # x_12 = PHI <x_84(40), x_93(41)>
  # DEBUG x => x_12
  # DEBUG p => p_5
  x.82_85 = (unsigned int) x_12;
  D.44166_86 = x.82_85 <= 510;
  D.44167_87 = p_5 != 0B;
  D.44168_88 = D.44166_86 && D.44167_87;
  if (D.44168_88 != 0)
    goto <bb 43>;
  else
    goto <bb 45>;

<bb 43>:
  D.44163_89 = *p_5;
  if (D.44163_89 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.44163_90 = *p_5;
  D.44184_91 = D.44163_90 + 208;
  if (D.44184_91 <= 9)
    goto <bb 41>;
  else
    goto <bb 45>;

<bb 45>:
  D.44190_95 = rip[0];
  if (D.44190_95 == 0)
    goto <bb 47>;
  else
    goto <bb 46>;

<bb 46>:
  D.44192_96 = rp[0];
  if (D.44192_96 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4225, session_25(D), 3, "invalid SDP\n");
  goto <bb 104> (end);

<bb 48>:
  D.44193_97 = a_engine_28->cur_payload_map;
  D.44194_98 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4229);
  D.44193_97->remote_sdp_ip = D.44194_98;
  D.44193_99 = a_engine_28->cur_payload_map;
  # DEBUG __nptr => &rp
  D.47982_368 = strtol (&rp, 0B, 10);
  D.47982_381 = D.47982_368;
  D.47982_100 = D.47982_381;
  D.44196_101 = (short unsigned int) D.47982_100;
  D.44193_99->remote_sdp_port = D.44196_101;
  D.44197_102 = rvp[0];
  if (D.44197_102 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.44200_103 = v_engine_29->cur_payload_map;
  D.44201_104 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4233);
  D.44200_103->remote_sdp_ip = D.44201_104;
  D.44200_105 = v_engine_29->cur_payload_map;
  # DEBUG __nptr => &rvp
  D.47985_369 = strtol (&rvp, 0B, 10);
  D.47985_383 = D.47985_369;
  D.47985_106 = D.47985_383;
  D.44203_107 = (short unsigned int) D.47985_106;
  D.44200_105->remote_sdp_port = D.44203_107;
  D.44204_108 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_108, 98, 1);
  D.44204_109 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_109, 23, 1);

<bb 50>:
  D.44200_110 = v_engine_29->cur_payload_map;
  D.44205_111 = D.44200_110->remote_sdp_ip;
  if (D.44205_111 != 0B)
    goto <bb 51>;
  else
    goto <bb 69>;

<bb 51>:
  D.44200_112 = v_engine_29->cur_payload_map;
  D.44208_113 = D.44200_112->remote_sdp_port;
  if (D.44208_113 != 0)
    goto <bb 52>;
  else
    goto <bb 69>;

<bb 52>:
  D.44200_114 = v_engine_29->cur_payload_map;
  D.44205_115 = D.44200_114->remote_sdp_ip;
  D.39191_116 = __builtin_strcmp (D.44205_115, &rip);
  if (D.39191_116 == 0)
    goto <bb 53>;
  else
    goto <bb 55>;

<bb 53>:
  # DEBUG __nptr => &rvp
  D.47988_370 = strtol (&rvp, 0B, 10);
  D.47988_385 = D.47988_370;
  D.47988_117 = D.47988_385;
  D.44200_118 = v_engine_29->cur_payload_map;
  D.44208_119 = D.44200_118->remote_sdp_port;
  D.44215_120 = (int) D.44208_119;
  if (D.47988_117 == D.44215_120)
    goto <bb 54>;
  else
    goto <bb 55>;

<bb 54>:
  D.44200_121 = v_engine_29->cur_payload_map;
  D.44205_122 = D.44200_121->remote_sdp_ip;
  D.44200_123 = v_engine_29->cur_payload_map;
  D.44208_124 = D.44200_123->remote_sdp_port;
  D.44215_125 = (int) D.44208_124;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4241, session_25(D), 7, "Remote video address:port [%s:%d] has not changed.\n", D.44205_122, D.44215_125);
  goto <bb 69>;

<bb 55>:
  D.44204_126 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_126, 98, 1);
  D.44204_127 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_127, 23, 1);
  D.44217_128 = v_engine_29->rtp_session;
  D.44218_129 = switch_rtp_ready (D.44217_128);
  if (D.44218_129 != 0)
    goto <bb 56>;
  else
    goto <bb 69>;

<bb 56>:
  rport_130 = 0B;
  # DEBUG rport => rport_130
  remote_rtcp_port_131 = v_engine_29->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_131
  if (remote_rtcp_port_131 == 0)
    goto <bb 57>;
  else
    goto <bb 59>;

<bb 57>:
  D.44204_132 = session_25(D)->channel;
  rport_133 = switch_channel_get_variable_dup (D.44204_132, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_133
  if (rport_133 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

<bb 58>:
  # DEBUG __nptr => rport_133
  D.47991_371 = strtol (rport_133, 0B, 10);
  D.47991_387 = D.47991_371;
  D.47991_134 = D.47991_387;
  remote_rtcp_port_135 = (switch_port_t) D.47991_134;
  # DEBUG remote_rtcp_port => remote_rtcp_port_135

<bb 59>:
  # remote_rtcp_port_14 = PHI <remote_rtcp_port_131(56), remote_rtcp_port_131(57), remote_rtcp_port_135(58)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_14
  D.44217_136 = v_engine_29->rtp_session;
  D.44200_137 = v_engine_29->cur_payload_map;
  D.44205_138 = D.44200_137->remote_sdp_ip;
  D.44200_139 = v_engine_29->cur_payload_map;
  D.44208_140 = D.44200_139->remote_sdp_port;
  D.44226_141 = switch_rtp_set_remote_address (D.44217_136, D.44205_138, D.44208_140, remote_rtcp_port_14, 1, &err);
  if (D.44226_141 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  err.83_142 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4259, session_25(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.83_142);
  goto <bb 69>;

<bb 61>:
  D.44200_143 = v_engine_29->cur_payload_map;
  D.44205_144 = D.44200_143->remote_sdp_ip;
  D.44200_145 = v_engine_29->cur_payload_map;
  D.44208_146 = D.44200_145->remote_sdp_port;
  D.44215_147 = (int) D.44208_146;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4261, session_25(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.44205_144, D.44215_147);
  D.44233_148 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44233_148 == 0)
    goto <bb 62>;
  else
    goto <bb 67>;

<bb 62>:
  D.44204_149 = session_25(D)->channel;
  D.44236_150 = switch_channel_test_flag (D.44204_149, 15);
  if (D.44236_150 == 0)
    goto <bb 63>;
  else
    goto <bb 67>;

<bb 63>:
  D.44204_151 = session_25(D)->channel;
  val_152 = switch_channel_get_variable_dup (D.44204_151, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_152
  if (val_152 == 0B)
    goto <bb 65>;
  else
    goto <bb 64>;

<bb 64>:
  D.44240_153 = switch_true (val_152);
  if (D.44240_153 == 0)
    goto <bb 65>;
  else
    goto <bb 67>;

<bb 65>:
  D.44204_154 = session_25(D)->channel;
  D.44241_155 = switch_channel_test_flag (D.44204_154, 106);
  if (D.44241_155 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.44217_156 = v_engine_29->rtp_session;
  switch_rtp_set_flag (D.44217_156, 7);
  start_video_thread (session_25(D));

<bb 67>:
  D.44244_157 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44244_157 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;

<bb 68>:
  v_engine_29->check_frames = 0;

<bb 69>:
  D.44247_158 = a_engine_28->rtp_session;
  D.44248_159 = switch_rtp_ready (D.44247_158);
  if (D.44248_159 != 0)
    goto <bb 70>;
  else
    goto <bb 104> (end);

<bb 70>:
  D.44247_160 = a_engine_28->rtp_session;
  remote_host_161 = switch_rtp_get_remote_host (D.44247_160);
  # DEBUG remote_host => remote_host_161
  D.44247_162 = a_engine_28->rtp_session;
  remote_port_163 = switch_rtp_get_remote_port (D.44247_162);
  # DEBUG remote_port => remote_port_163
  rport_164 = 0B;
  # DEBUG rport => rport_164
  remote_rtcp_port_165 = 0;
  # DEBUG remote_rtcp_port => remote_rtcp_port_165
  D.44252_166 = remote_host_161 != 0B;
  D.44253_167 = remote_port_163 != 0;
  D.44254_168 = D.44252_166 && D.44253_167;
  if (D.44254_168 != 0)
    goto <bb 71>;
  else
    goto <bb 74>;

<bb 71>:
  D.44193_169 = a_engine_28->cur_payload_map;
  D.44256_170 = D.44193_169->remote_sdp_ip;
  D.39206_171 = __builtin_strcmp (remote_host_161, D.44256_170);
  if (D.39206_171 == 0)
    goto <bb 72>;
  else
    goto <bb 74>;

<bb 72>:
  D.44193_172 = a_engine_28->cur_payload_map;
  D.44258_173 = D.44193_172->remote_sdp_port;
  if (D.44258_173 == remote_port_163)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  D.44193_174 = a_engine_28->cur_payload_map;
  D.44256_175 = D.44193_174->remote_sdp_ip;
  D.44193_176 = a_engine_28->cur_payload_map;
  D.44258_177 = D.44193_176->remote_sdp_port;
  D.44260_178 = (int) D.44258_177;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4286, session_25(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.44256_175, D.44260_178);
  status_179 = 11;
  # DEBUG status => status_179
  goto <bb 104> (end);

<bb 74>:
  if (remote_host_161 != 0B)
    goto <bb 75>;
  else
    goto <bb 92>;

<bb 75>:
  __s2_len_180 = 7;
  # DEBUG __s2_len => __s2_len_180
  if (__s2_len_180 <= 3)
    goto <bb 76>;
  else
    goto <bb 81>;

<bb 76>:
  __s1_181 = remote_host_161;
  # DEBUG __s1 => __s1_181
  D.44268_182 = *__s1_181;
  D.44269_183 = (int) D.44268_182;
  D.44270_184 = "0.0.0.0";
  D.44271_185 = MEM[(const unsigned char *)D.44270_184];
  D.44272_186 = (int) D.44271_185;
  __result_187 = D.44269_183 - D.44272_186;
  # DEBUG __result => __result_187
  D.44273_188 = __s2_len_180 != 0;
  D.44274_189 = __result_187 == 0;
  D.44275_190 = D.44273_188 && D.44274_189;
  if (D.44275_190 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;

<bb 77>:
  D.44278_191 = __s1_181 + 1;
  D.44279_192 = *D.44278_191;
  D.44280_193 = (int) D.44279_192;
  D.44281_194 = &"0.0.0.0"[1];
  D.44282_195 = MEM[(const unsigned char *)D.44281_194];
  D.44283_196 = (int) D.44282_195;
  __result_197 = D.44280_193 - D.44283_196;
  # DEBUG __result => __result_197
  D.44284_198 = __s2_len_180 > 1;
  D.44274_199 = __result_197 == 0;
  D.44285_200 = D.44284_198 && D.44274_199;
  if (D.44285_200 != 0)
    goto <bb 78>;
  else
    goto <bb 80>;

<bb 78>:
  D.44288_201 = __s1_181 + 2;
  D.44289_202 = *D.44288_201;
  D.44290_203 = (int) D.44289_202;
  D.44291_204 = &"0.0.0.0"[2];
  D.44292_205 = MEM[(const unsigned char *)D.44291_204];
  D.44293_206 = (int) D.44292_205;
  __result_207 = D.44290_203 - D.44293_206;
  # DEBUG __result => __result_207
  D.44294_208 = __s2_len_180 > 2;
  D.44274_209 = __result_207 == 0;
  D.44295_210 = D.44294_208 && D.44274_209;
  if (D.44295_210 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

<bb 79>:
  D.44298_211 = __s1_181 + 3;
  D.44299_212 = *D.44298_211;
  D.44300_213 = (int) D.44299_212;
  D.44301_214 = &"0.0.0.0"[3];
  D.44302_215 = MEM[(const unsigned char *)D.44301_214];
  D.44303_216 = (int) D.44302_215;
  __result_217 = D.44300_213 - D.44303_216;
  # DEBUG __result => __result_217

<bb 80>:
  # __result_16 = PHI <__result_187(76), __result_197(77), __result_207(78), __result_217(79)>
  # DEBUG __result => __result_16
  __result_218 = __result_16;
  __result_219 = __result_218;
  goto <bb 82>;

<bb 81>:
  __result_220 = __builtin_strcmp (remote_host_161, "0.0.0.0");

<bb 82>:
  # __result_19 = PHI <__result_219(80), __result_220(81)>
  __result_221 = __result_19;
  if (__result_221 == 0)
    goto <bb 91>;
  else
    goto <bb 83>;

<bb 83>:
  __s2_len_222 = 7;
  # DEBUG __s2_len => __s2_len_222
  if (__s2_len_222 <= 3)
    goto <bb 84>;
  else
    goto <bb 89>;

<bb 84>:
  D.44193_223 = a_engine_28->cur_payload_map;
  __s1_224 = D.44193_223->remote_sdp_ip;
  # DEBUG __s1 => __s1_224
  D.44309_225 = *__s1_224;
  D.44310_226 = (int) D.44309_225;
  D.44270_227 = "0.0.0.0";
  D.44271_228 = MEM[(const unsigned char *)D.44270_227];
  D.44272_229 = (int) D.44271_228;
  __result_230 = D.44310_226 - D.44272_229;
  # DEBUG __result => __result_230
  D.44311_231 = __s2_len_222 != 0;
  D.44312_232 = __result_230 == 0;
  D.44313_233 = D.44311_231 && D.44312_232;
  if (D.44313_233 != 0)
    goto <bb 85>;
  else
    goto <bb 88>;

<bb 85>:
  D.44316_234 = __s1_224 + 1;
  D.44317_235 = *D.44316_234;
  D.44318_236 = (int) D.44317_235;
  D.44281_237 = &"0.0.0.0"[1];
  D.44282_238 = MEM[(const unsigned char *)D.44281_237];
  D.44283_239 = (int) D.44282_238;
  __result_240 = D.44318_236 - D.44283_239;
  # DEBUG __result => __result_240
  D.44319_241 = __s2_len_222 > 1;
  D.44312_242 = __result_240 == 0;
  D.44320_243 = D.44319_241 && D.44312_242;
  if (D.44320_243 != 0)
    goto <bb 86>;
  else
    goto <bb 88>;

<bb 86>:
  D.44323_244 = __s1_224 + 2;
  D.44324_245 = *D.44323_244;
  D.44325_246 = (int) D.44324_245;
  D.44291_247 = &"0.0.0.0"[2];
  D.44292_248 = MEM[(const unsigned char *)D.44291_247];
  D.44293_249 = (int) D.44292_248;
  __result_250 = D.44325_246 - D.44293_249;
  # DEBUG __result => __result_250
  D.44326_251 = __s2_len_222 > 2;
  D.44312_252 = __result_250 == 0;
  D.44327_253 = D.44326_251 && D.44312_252;
  if (D.44327_253 != 0)
    goto <bb 87>;
  else
    goto <bb 88>;

<bb 87>:
  D.44330_254 = __s1_224 + 3;
  D.44331_255 = *D.44330_254;
  D.44332_256 = (int) D.44331_255;
  D.44301_257 = &"0.0.0.0"[3];
  D.44302_258 = MEM[(const unsigned char *)D.44301_257];
  D.44303_259 = (int) D.44302_258;
  __result_260 = D.44332_256 - D.44303_259;
  # DEBUG __result => __result_260

<bb 88>:
  # __result_17 = PHI <__result_230(84), __result_240(85), __result_250(86), __result_260(87)>
  # DEBUG __result => __result_17
  __result_261 = __result_17;
  __result_262 = __result_261;
  goto <bb 90>;

<bb 89>:
  D.44193_263 = a_engine_28->cur_payload_map;
  D.44256_264 = D.44193_263->remote_sdp_ip;
  __result_265 = __builtin_strcmp (D.44256_264, "0.0.0.0");

<bb 90>:
  # __result_20 = PHI <__result_262(88), __result_265(89)>
  __result_266 = __result_20;
  if (__result_266 == 0)
    goto <bb 91>;
  else
    goto <bb 92>;

<bb 91>:
  D.44193_267 = a_engine_28->cur_payload_map;
  D.44256_268 = D.44193_267->remote_sdp_ip;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4292, session_25(D), 7, "Remote address changed from [%s] to [%s]. Ignoring...\n", D.44256_268, remote_host_161);
  status_269 = 11;
  # DEBUG status => status_269
  goto <bb 104> (end);

<bb 92>:
  D.44204_270 = session_25(D)->channel;
  rport_271 = switch_channel_get_variable_dup (D.44204_270, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_271
  if (rport_271 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  # DEBUG __nptr => rport_271
  D.47994_372 = strtol (rport_271, 0B, 10);
  D.47994_389 = D.47994_372;
  D.47994_272 = D.47994_389;
  remote_rtcp_port_273 = (switch_port_t) D.47994_272;
  # DEBUG remote_rtcp_port => remote_rtcp_port_273

<bb 94>:
  # remote_rtcp_port_15 = PHI <remote_rtcp_port_165(92), remote_rtcp_port_273(93)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_15
  D.44247_274 = a_engine_28->rtp_session;
  D.44193_275 = a_engine_28->cur_payload_map;
  D.44256_276 = D.44193_275->remote_sdp_ip;
  D.44193_277 = a_engine_28->cur_payload_map;
  D.44258_278 = D.44193_277->remote_sdp_port;
  D.44337_279 = switch_rtp_set_remote_address (D.44247_274, D.44256_276, D.44258_278, remote_rtcp_port_15, 1, &err);
  if (D.44337_279 != 0)
    goto <bb 95>;
  else
    goto <bb 96>;

<bb 95>:
  err.83_280 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4305, session_25(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.83_280);
  status_281 = 9;
  # DEBUG status => status_281
  goto <bb 104> (end);

<bb 96>:
  D.44193_282 = a_engine_28->cur_payload_map;
  D.44256_283 = D.44193_282->remote_sdp_ip;
  D.44193_284 = a_engine_28->cur_payload_map;
  D.44258_285 = D.44193_284->remote_sdp_port;
  D.44260_286 = (int) D.44258_285;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4308, session_25(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.44256_283, D.44260_286);
  D.44343_287 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44343_287 == 0)
    goto <bb 97>;
  else
    goto <bb 101>;

<bb 97>:
  D.44204_288 = session_25(D)->channel;
  val_289 = switch_channel_get_variable_dup (D.44204_288, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_289
  if (val_289 == 0B)
    goto <bb 99>;
  else
    goto <bb 98>;

<bb 98>:
  D.44347_290 = switch_true (val_289);
  if (D.44347_290 == 0)
    goto <bb 99>;
  else
    goto <bb 101>;

<bb 99>:
  D.44204_291 = session_25(D)->channel;
  D.44348_292 = switch_channel_test_flag (D.44204_291, 106);
  if (D.44348_292 == 0)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  D.44247_293 = a_engine_28->rtp_session;
  switch_rtp_set_flag (D.44247_293, 7);

<bb 101>:
  D.44351_294 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44351_294 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;

<bb 102>:
  a_engine_28->check_frames = 0;

<bb 103>:
  status_295 = 0;
  # DEBUG status => status_295

  # status_13 = PHI <status_24(14), status_24(26), status_24(28), status_24(36), status_24(41), status_24(47), status_24(69), status_179(73), status_269(91), status_281(95), status_295(103)>
end:
  # DEBUG status => status_13
  status_296 = status_13;

<bb 105>:
  # status_18 = PHI <status_27(5), status_296(104)>
  return status_18;

}



;; Function switch_core_media_check_nat (switch_core_media_check_nat)

Try : D.44120_12(P12) & iftmp.81_1(P1) --> P12 D.44120
Try : iftmp.81_1(P12) & iftmp.81_10(P10) --> P12 D.44120
Try : iftmp.81_1(P12) & iftmp.81_11(P11) --> P12 D.44120

Partition map 

Partition 2 (network_ip_2(D) - 2 )
Partition 3 (smh_3(D) - 3 )
Partition 4 (D.44124_4 - 4 )
Partition 5 (D.44125_5 - 5 )
Partition 6 (D.44127_6 - 6 )
Partition 7 (D.44124_7 - 7 )
Partition 8 (D.44129_8 - 8 )
Partition 9 (D.44130_9 - 9 )
Partition 12 (D.44120_12 - 1 10 11 12 )
Partition 13 (.MEM_13(D) - 13 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15 - 15 )

Coalesced iftmp.81_1 to D.44120_12
Coalesced iftmp.81_10 to D.44120_12
Coalesced iftmp.81_11 to D.44120_12
Scope blocks after cleanups:

{ Scope block #0 
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_check_nat";

}
switch_core_media_check_nat (struct switch_media_handle_t * smh, const char * network_ip)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_check_nat";
  switch_bool_t D.44130;
  char * D.44129;
  switch_bool_t D.44127;
  char * D.44125;
  struct switch_core_media_params_t * D.44124;
  int D.44120;

<bb 2>:
  if (network_ip_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("network_ip", "src/switch_core_media.c", 4331, &__PRETTY_FUNCTION__);

<bb 4>:
  D.44124_4 = smh_3(D)->mparams;
  D.44125_5 = D.44124_4->extsipip;
  if (D.44125_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 8>;

<bb 5>:
  D.44127_6 = switch_check_network_list_ip_token (network_ip_2(D), "loopback.auto", 0B);
  if (D.44127_6 == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.44124_7 = smh_3(D)->mparams;
  D.44129_8 = D.44124_7->local_network;
  D.44130_9 = switch_check_network_list_ip_token (network_ip_2(D), D.44129_8, 0B);
  if (D.44130_9 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.44120_10 = 1;
  goto <bb 9>;

<bb 8>:
  D.44120_11 = 0;

<bb 9>:
  # D.44120_1 = PHI <D.44120_10(7), D.44120_11(8)>
  D.44120_12 = D.44120_1;
  return D.44120_12;

}



;; Function switch_core_media_ext_address_lookup (switch_core_media_ext_address_lookup)

Try : D.44074_18(P18) & status_8(P8) --> P18 status
Try : D.48010_91(P91) & D.48011_87(P87) --> P91 D.48010
Try : iport_30(P30) & D.48010_91(P91) --> P91 iport
Try : D.48013_92(P92) & D.48015_89(P89) --> P92 D.48013
Try : D.44093_34(P34) & D.48013_92(P92) --> P92 D.48013
Try : D.44074_62(P62) & status_3(P3) --> P62 status
Try : stun_port_5(P5) & stun_port_11(P11) : Same root, coalesced --> P5.
Try : stun_port_5(P5) & stun_port_11(P5) : Already coalesced.
Try : stun_port_5(P5) & stun_port_33(P33) : Same root, coalesced --> P5.
Try : status_1(P1) & status_8(P18) : Same root, coalesced --> P18.
Try : status_1(P18) & status_36(P36) : Same root, coalesced --> P18.
Try : x_4(P4) & x_35(P35) : Same root, coalesced --> P4.
Try : x_4(P4) & x_37(P37) : Same root, coalesced --> P4.
Try : status_2(P2) & status_36(P18) : Same root, coalesced --> P18.
Try : status_2(P18) & status_1(P18) : Already coalesced.
Try : status_3(P62) & status_24(P24) : Same root, coalesced --> P62.
Try : status_3(P62) & status_8(P18) : Same root, coalesced --> P18.
Try : status_3(P18) & status_2(P18) : Already coalesced.
Try : status_3(P18) & status_2(P18) : Already coalesced.
Try : status_3(P18) & status_44(P44) : Same root, coalesced --> P18.
Try : status_3(P18) & status_60(P60) : Same root, coalesced --> P18.
Try : status_3(P18) & status_44(P18) : Already coalesced.
Try : stun_ip_6(P6) & stun_ip_12(P12) : Same root, coalesced --> P6.
Try : stun_ip_6(P6) & stun_ip_27(P27) : Same root, coalesced --> P6.
Try : stun_ip_6(P6) & stun_ip_27(P6) : Already coalesced.
Try : stun_ip_6(P6) & stun_ip_27(P6) : Already coalesced.
Try : stun_ip_6(P6) & stun_ip_27(P6) : Already coalesced.
Try : stun_ip_6(P6) & stun_ip_12(P6) : Already coalesced.
Try : stun_ip_6(P6) & stun_ip_27(P6) : Already coalesced.
Try : D.44074_7(P7) & D.44074_16(P16) : Same root, coalesced --> P7.
Try : D.44074_7(P7) & status_18(P18) --> P18 status
Try : D.44074_7(P18) & status_62(P18) : Already coalesced.

Partition map 

Partition 4 (x_4 - 4 35 37 )
Partition 5 (stun_port_5 - 5 11 33 )
Partition 6 (stun_ip_6 - 6 12 27 )
Partition 9 (port_9(D) - 9 )
Partition 10 (myport_10 - 10 )
Partition 13 (session_13(D) - 13 )
Partition 14 (pool_14 - 14 )
Partition 15 (smh_15 - 15 )
Partition 17 (sourceip_17(D) - 17 )
Partition 18 (status_18 - 1 2 3 7 8 16 18 24 36 44 60 62 )
Partition 19 (D.44077_19 - 19 )
Partition 20 (D.44080_20 - 20 )
Partition 21 (D.44081_21 - 21 )
Partition 22 (ip_22(D) - 22 )
Partition 23 (D.44082_23 - 23 )
Partition 25 (D.44084_25 - 25 )
Partition 26 (D.44080_26 - 26 )
Partition 28 (p_28 - 28 )
Partition 29 (p_29 - 29 )
Partition 31 (iport.79_31 - 31 )
Partition 32 (D.44090_32 - 32 )
Partition 38 (D.44099_38 - 38 )
Partition 39 (error.80_39 - 39 )
Partition 40 (D.44082_40 - 40 )
Partition 41 (D.44082_41 - 41 )
Partition 42 (D.44103_42 - 42 )
Partition 43 (D.44104_43 - 43 )
Partition 45 (D.44103_45 - 45 )
Partition 46 (D.44082_46 - 46 )
Partition 47 (D.44108_47 - 47 )
Partition 48 (D.44109_48 - 48 )
Partition 49 (D.39263_49 - 49 )
Partition 50 (D.44082_50 - 50 )
Partition 51 (D.44103_51 - 51 )
Partition 52 (D.44104_52 - 52 )
Partition 53 (D.44108_53 - 53 )
Partition 54 (D.44111_54 - 54 )
Partition 55 (D.44108_55 - 55 )
Partition 56 (D.44108_56 - 56 )
Partition 57 (D.44108_57 - 57 )
Partition 58 (D.44112_58 - 58 )
Partition 59 (D.44113_59 - 59 )
Partition 61 (stun_ip_61 - 61 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (.MEM_65 - 65 )
Partition 66 (.MEM_66 - 66 )
Partition 67 (.MEM_67(D) - 67 )
Partition 68 (.MEM_68 - 68 )
Partition 69 (.MEM_69 - 69 )
Partition 70 (.MEM_70 - 70 )
Partition 71 (.MEM_71 - 71 )
Partition 72 (.MEM_72 - 72 )
Partition 73 (.MEM_73 - 73 )
Partition 74 (.MEM_74 - 74 )
Partition 75 (.MEM_75 - 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (.MEM_77 - 77 )
Partition 78 (.MEM_78 - 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 88 (D.48014_88 - 88 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (iport_91 - 30 87 91 )
Partition 92 (D.48013_92 - 34 89 92 )

Coalesced D.44074_7 to status_18
Coalesced D.44074_16 to status_18
Coalesced D.44093_34 to D.48013_92
Coalesced D.48011_87 to iport_91
Coalesced D.48015_89 to D.48013_92
Scope blocks after cleanups:

{ Scope block #0 
  char * error;
  switch_status_t status;
  int x;
  switch_port_t myport;
  switch_port_t stun_port;
  char * stun_ip;
  struct switch_media_handle_t * smh;
  struct switch_memory_pool_t * pool;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_ext_address_lookup";
  static const char __func__[37] = "switch_core_media_ext_address_lookup";
  void out = <<< error >>>; (unused)

  { Scope block #303 
    char * p;

    { Scope block #304 src/switch_core_media.c:4377 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #305 Originating from :#0 

      }

    }

    { Scope block #306 
      int iport;

      { Scope block #307 src/switch_core_media.c:4371 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #308 Originating from :#0 

        }

      }

    }

    { Scope block #309 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

}
switch_core_media_ext_address_lookup (struct switch_core_session_t * session, char * * ip, switch_port_t * port, const char * sourceip)
{
  const char D.48014;
  int D.48013;
  int iport;
  char * p;
  static const char __func__[37] = "switch_core_media_ext_address_lookup";
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_ext_address_lookup";
  struct switch_memory_pool_t * pool;
  struct switch_media_handle_t * smh;
  char * stun_ip;
  switch_port_t stun_port;
  switch_port_t myport;
  int x;
  switch_status_t status;
  char * error;
  uint32_t D.44113;
  uint32_t D.44112;
  char * D.44111;
  char * D.44109;
  struct switch_core_media_params_t * D.44108;
  int D.39263;
  int D.44104;
  switch_port_t D.44103;
  char * error.80;
  int D.44099;
  unsigned int D.44090;
  unsigned int iport.79;
  int D.44084;
  char * D.44082;
  char * D.44081;
  const char * D.44080;
  int D.44077;

<bb 2>:
  error = "";
  status_8 = 1;
  # DEBUG status => status_8
  myport_10 = *port_9(D);
  # DEBUG myport => myport_10
  stun_port_11 = 3478;
  # DEBUG stun_port => stun_port_11
  stun_ip_12 = 0B;
  # DEBUG stun_ip => stun_ip_12
  pool_14 = switch_core_session_get_pool (session_13(D));
  # DEBUG pool => pool_14
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4351, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_15 = session_13(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_16 = 1;
  goto <bb 35>;

<bb 6>:
  if (sourceip_17(D) == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  status_18 = status_8;
  goto <bb 35>;

<bb 8>:
  D.44077_19 = strncasecmp (sourceip_17(D), "host:", 5);
  if (D.44077_19 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.44080_20 = sourceip_17(D) + 5;
  D.44081_21 = switch_stun_host_lookup (D.44080_20, pool_14);
  *ip_22(D) = D.44081_21;
  D.44082_23 = *ip_22(D);
  status_24 = D.44082_23 == 0B;
  # DEBUG status => status_24
  goto <bb 32> (out);

<bb 10>:
  D.44084_25 = strncasecmp (sourceip_17(D), "stun:", 5);
  if (D.44084_25 == 0)
    goto <bb 11>;
  else
    goto <bb 31>;

<bb 11>:
  D.44080_26 = sourceip_17(D) + 5;
  stun_ip_27 = __strdup (D.44080_26);
  # DEBUG stun_ip => stun_ip_27
  p_28 = __builtin_strchr (stun_ip_27, 58);
  # DEBUG p => p_28
  if (p_28 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  *p_28 = 0;
  p_29 = p_28 + 1;
  # DEBUG p => p_29
  # DEBUG __nptr => p_29
  iport_87 = strtol (p_29, 0B, 10);
  iport_91 = iport_87;
  iport_30 = iport_91;
  # DEBUG iport => NULL
  iport.79_31 = (unsigned int) iport_30;
  D.44090_32 = iport.79_31 + 4294967295;
  if (D.44090_32 <= 65533)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  stun_port_33 = (switch_port_t) iport_30;
  # DEBUG stun_port => stun_port_33

<bb 14>:
  # stun_port_5 = PHI <stun_port_11(11), stun_port_11(12), stun_port_33(13)>
  # DEBUG stun_port => stun_port_5
  # DEBUG s => stun_ip_27
  if (stun_ip_27 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;

<bb 15>:
  D.48014_88 = MEM[(const char *)stun_ip_27];
  if (D.48014_88 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:

<bb 17>:
  # D.48013_89 = PHI <1(14), 1(15), 0(16)>
  D.48013_92 = D.48013_89;
  D.48013_34 = D.48013_92;
  if (D.48013_34 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4378, 0B, 3, "STUN Failed! NO STUN SERVER\n");
  goto <bb 32> (out);

<bb 19>:
  x_35 = 0;
  # DEBUG x => x_35
  goto <bb 22>;

<bb 20>:
  status_36 = switch_stun_lookup (ip_22(D), port_9(D), stun_ip_27, stun_port_5, &error, pool_14);
  # DEBUG status => status_36
  if (status_36 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

<bb 21>:
  switch_sleep (100000);
  x_37 = x_4 + 1;
  # DEBUG x => x_37

<bb 22>:
  # status_1 = PHI <status_8(19), status_36(21)>
  # x_4 = PHI <x_35(19), x_37(21)>
  # DEBUG x => x_4
  # DEBUG status => status_1
  if (x_4 <= 4)
    goto <bb 20>;
  else
    goto <bb 23>;

<bb 23>:
  # status_2 = PHI <status_36(20), status_1(22)>
  # DEBUG status => status_2
  if (status_2 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.44099_38 = (int) stun_port_5;
  error.80_39 = error;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4390, 0B, 3, "STUN Failed! %s:%d [%s]\n", stun_ip_27, D.44099_38, error.80_39);
  goto <bb 32> (out);

<bb 25>:
  D.44082_40 = *ip_22(D);
  if (D.44082_40 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4394, 0B, 3, "STUN Failed! No IP returned\n");
  goto <bb 32> (out);

<bb 27>:
  D.44082_41 = *ip_22(D);
  D.44103_42 = *port_9(D);
  D.44104_43 = (int) D.44103_42;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4397, 0B, 7, "STUN Success [%s]:[%d]\n", D.44082_41, D.44104_43);
  status_44 = 0;
  # DEBUG status => status_44
  D.44103_45 = *port_9(D);
  if (D.44103_45 == myport_10)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.44082_46 = *ip_22(D);
  D.44108_47 = smh_15->mparams;
  D.44109_48 = D.44108_47->rtpip;
  D.39263_49 = __builtin_strcmp (D.44082_46, D.44109_48);
  if (D.39263_49 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.44082_50 = *ip_22(D);
  D.44103_51 = *port_9(D);
  D.44104_52 = (int) D.44103_51;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4401, 0B, 7, "STUN Not Required ip and port match. [%s]:[%d]\n", D.44082_50, D.44104_52);
  goto <bb 32> (out);

<bb 30>:
  D.44108_53 = smh_15->mparams;
  D.44111_54 = switch_core_perform_session_strdup (session_13(D), stun_ip_27, "src/switch_core_media.c", &__func__, 4403);
  D.44108_53->stun_ip = D.44111_54;
  D.44108_55 = smh_15->mparams;
  D.44108_55->stun_port = stun_port_5;
  D.44108_56 = smh_15->mparams;
  D.44108_57 = smh_15->mparams;
  D.44112_58 = D.44108_57->stun_flags;
  D.44113_59 = D.44112_58 | 1;
  D.44108_57->stun_flags = D.44113_59;
  goto <bb 32> (out);

<bb 31>:
  *ip_22(D) = sourceip_17(D);
  status_60 = 0;
  # DEBUG status => status_60

  # status_3 = PHI <status_24(9), status_8(18), status_2(24), status_2(26), status_44(30), status_60(31), status_44(29)>
  # stun_ip_6 = PHI <stun_ip_12(9), stun_ip_27(18), stun_ip_27(24), stun_ip_27(26), stun_ip_27(30), stun_ip_12(31), stun_ip_27(29)>
out:
  # DEBUG stun_ip => stun_ip_6
  # DEBUG status => status_3
  if (stun_ip_6 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  free (stun_ip_6);
  stun_ip_61 = 0B;
  # DEBUG stun_ip => stun_ip_61

<bb 34>:
  status_62 = status_3;

<bb 35>:
  # status_7 = PHI <status_16(5), status_18(7), status_62(34)>
  return status_7;

}



;; Function switch_core_media_reset_autofix (switch_core_media_reset_autofix)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (D.44067_3 - 3 )
Partition 4 (type_4(D) - 4 )
Partition 5 (D.44068_5 - 5 )
Partition 6 (engine_6 - 6 )
Partition 7 (.MEM_7(D) - 7 )
Partition 8 (.MEM_8 - 8 )
Partition 9 (.MEM_9 - 9 )

switch_core_media_reset_autofix (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_reset_autofix";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  unsigned int D.44068;
  struct switch_rtp_engine_t[2] * D.44067;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4425, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.44067_3 = &smh_2->engines;
  D.44068_5 = type_4(D) * 11416;
  engine_6 = D.44067_3 + D.44068_5;
  # DEBUG engine => engine_6
  engine_6->check_frames = 0;
  engine_6->last_ts = 0;

<bb 6>:
  return;

}



;; Function switch_core_media_choose_port (switch_core_media_choose_port)

Try : D.48020_109(P109) & D.48021_104(P104) --> P109 D.48020
Try : tstr_6(P6) & D.48020_109(P109) --> P109 tstr
Try : D.48026_110(P110) & D.48028_106(P106) --> P110 D.48026
Try : D.44035_36(P36) & D.48026_110(P110) --> P110 D.48026
Try : D.48030_111(P111) & D.48032_108(P108) --> P111 D.48030
Try : D.44042_45(P45) & D.48030_111(P111) --> P111 D.48030
Try : use_ip_1(P1) & use_ip_42(P42) : Same root, coalesced --> P1.
Try : use_ip_1(P1) & use_ip_42(P1) : Already coalesced.
Try : use_ip_1(P1) & use_ip_47(P47) : Same root, coalesced --> P1.
Try : use_ip_2(P2) & use_ip_52(P52) : Same root, coalesced --> P2.
Try : use_ip_2(P2) & use_ip_54(P54) : Same root, coalesced --> P2.
Try : use_ip_2(P2) & use_ip_50(P50) : Same root, coalesced --> P2.
Try : D.44011_3(P3) & D.44011_9(P9) : Same root, coalesced --> P3.
Try : D.44011_3(P3) & D.44011_21(P21) : Same root, coalesced --> P3.
Try : D.44011_3(P3) & D.44011_30(P30) : Same root, coalesced --> P3.
Try : D.44011_3(P3) & D.44011_49(P49) : Same root, coalesced --> P3.
Try : D.44011_3(P3) & D.44011_73(P73) : Same root, coalesced --> P3.

Partition map 

Partition 1 (use_ip_1 - 1 42 47 )
Partition 2 (use_ip_2 - 2 50 52 54 )
Partition 3 (D.44011_3 - 3 9 21 30 49 73 )
Partition 4 (use_ip_4 - 4 )
Partition 5 (type_5(D) - 5 )
Partition 7 (session_7(D) - 7 )
Partition 8 (smh_8 - 8 )
Partition 10 (D.44012_10 - 10 )
Partition 11 (D.44013_11 - 11 )
Partition 12 (engine_12 - 12 )
Partition 13 (D.44014_13 - 13 )
Partition 14 (lookup_rtpip.76_14 - 14 )
Partition 15 (force_15(D) - 15 )
Partition 16 (D.44020_16 - 16 )
Partition 17 (D.44021_17 - 17 )
Partition 18 (D.44020_18 - 18 )
Partition 19 (D.44023_19 - 19 )
Partition 20 (D.44025_20 - 20 )
Partition 22 (sdp_port.77_22 - 22 )
Partition 23 (D.44014_23 - 23 )
Partition 24 (lookup_rtpip.76_24 - 24 )
Partition 25 (sdp_port.77_25 - 25 )
Partition 26 (D.44014_26 - 26 )
Partition 27 (lookup_rtpip.76_27 - 27 )
Partition 28 (D.44029_28 - 28 )
Partition 29 (sdp_port.77_29 - 29 )
Partition 31 (D.44014_31 - 31 )
Partition 32 (lookup_rtpip.76_32 - 32 )
Partition 33 (sdp_port.77_33 - 33 )
Partition 34 (D.44014_34 - 34 )
Partition 35 (D.44034_35 - 35 )
Partition 37 (D.44014_37 - 37 )
Partition 38 (D.44034_38 - 38 )
Partition 39 (D.44037_39 - 39 )
Partition 40 (sdp_port.77_40 - 40 )
Partition 41 (D.44020_41 - 41 )
Partition 43 (D.44014_43 - 43 )
Partition 44 (D.44041_44 - 44 )
Partition 46 (D.44014_46 - 46 )
Partition 48 (D.44047_48 - 48 )
Partition 51 (D.44014_51 - 51 )
Partition 53 (D.44014_53 - 53 )
Partition 55 (sdp_port.78_55 - 55 )
Partition 56 (D.44014_56 - 56 )
Partition 57 (D.44014_57 - 57 )
Partition 58 (D.44052_58 - 58 )
Partition 59 (D.44041_59 - 59 )
Partition 60 (D.44053_60 - 60 )
Partition 61 (D.44020_61 - 61 )
Partition 62 (D.44056_62 - 62 )
Partition 63 (D.44020_63 - 63 )
Partition 64 (sdp_port.78_64 - 64 )
Partition 65 (D.44057_65 - 65 )
Partition 66 (D.44020_66 - 66 )
Partition 67 (D.44058_67 - 67 )
Partition 68 (D.44020_68 - 68 )
Partition 69 (D.44058_69 - 69 )
Partition 70 (D.44020_70 - 70 )
Partition 71 (sdp_port.78_71 - 71 )
Partition 72 (D.44057_72 - 72 )
Partition 74 (.MEM_74 - 74 )
Partition 75 (.MEM_75 - 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (.MEM_77 - 77 )
Partition 78 (.MEM_78(D) - 78 )
Partition 79 (.MEM_79 - 79 )
Partition 80 (.MEM_80 - 80 )
Partition 81 (.MEM_81 - 81 )
Partition 82 (.MEM_82 - 82 )
Partition 83 (.MEM_83 - 83 )
Partition 84 (.MEM_84 - 84 )
Partition 85 (.MEM_85 - 85 )
Partition 86 (.MEM_86 - 86 )
Partition 87 (.MEM_87 - 87 )
Partition 88 (.MEM_88 - 88 )
Partition 89 (.MEM_89 - 89 )
Partition 90 (.MEM_90 - 90 )
Partition 91 (.MEM_91 - 91 )
Partition 92 (.MEM_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98 - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 105 (D.48027_105 - 105 )
Partition 107 (D.48031_107 - 107 )
Partition 109 (tstr_109 - 6 104 109 )
Partition 110 (D.48026_110 - 36 106 110 )
Partition 111 (D.48030_111 - 45 108 111 )

Coalesced D.44035_36 to D.48026_110
Coalesced D.44042_45 to D.48030_111
Coalesced D.48021_104 to tstr_109
Coalesced D.48028_106 to D.48026_110
Coalesced D.48032_108 to D.48030_111
Scope blocks after cleanups:

{ Scope block #0 
  char * lookup_rtpip;
  switch_port_t sdp_port;
  const char * use_ip;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  const char * tstr;
  char vname[128];
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_choose_port";
  static const char __func__[30] = "switch_core_media_choose_port";

  { Scope block #310 src/switch_core_media.c:4493 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #311 Originating from :#0 

    }

  }

  { Scope block #312 src/switch_core_media.c:4485 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #313 Originating from :#0 

    }

  }

  { Scope block #314 src/switch_core_media.c:4447 Originating from :  static const char * switch_media_type2str (switch_media_type_t); 
    switch_media_type_t type; (unused)

    { Scope block #315 Originating from :#0 

    }

  }

}
switch_core_media_choose_port (struct switch_core_session_t * session, switch_media_type_t type, int force)
{
  const char D.48031;
  int D.48030;
  const char D.48027;
  int D.48026;
  static const char __func__[30] = "switch_core_media_choose_port";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_choose_port";
  char vname[128];
  const char * tstr;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * use_ip;
  switch_port_t sdp_port;
  char * lookup_rtpip;
  char * D.44058;
  int D.44057;
  char * D.44056;
  char * D.44053;
  char * D.44052;
  switch_port_t sdp_port.78;
  switch_status_t D.44047;
  char * D.44041;
  int D.44037;
  char * D.44034;
  switch_port_t D.44029;
  switch_port_t sdp_port.77;
  switch_port_t D.44025;
  uint32_t D.44023;
  uint32_t D.44021;
  struct switch_channel_t * D.44020;
  char * lookup_rtpip.76;
  struct switch_core_media_params_t * D.44014;
  unsigned int D.44013;
  struct switch_rtp_engine_t[2] * D.44012;
  switch_status_t D.44011;

<bb 2>:
  use_ip_4 = 0B;
  # DEBUG use_ip => use_ip_4
  # DEBUG type => type_5(D)
  switch (type_5(D)) <default: <L32>, case 0: <L33>, case 1: <L31>>

<L31>:
  goto <bb 5> (<L33>);

<L32>:

  # tstr_104 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L33>:
  tstr_109 = tstr_104;
  tstr_6 = tstr_109;
  # DEBUG tstr => NULL
  vname = "";
  if (session_7(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  __assert_fail ("session", "src/switch_core_media.c", 4450, &__PRETTY_FUNCTION__);

<bb 7>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.44011_9 = 1;
  goto <bb 39>;

<bb 9>:
  D.44012_10 = &smh_8->engines;
  D.44013_11 = type_5(D) * 11416;
  engine_12 = D.44012_10 + D.44013_11;
  # DEBUG engine => engine_12
  D.44014_13 = smh_8->mparams;
  lookup_rtpip.76_14 = D.44014_13->rtpip;
  lookup_rtpip = lookup_rtpip.76_14;
  if (force_15(D) == 0)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 10>:
  D.44020_16 = session_7(D)->channel;
  D.44021_17 = switch_channel_test_flag (D.44020_16, 15);
  if (D.44021_17 != 0)
    goto <bb 13>;
  else
    goto <bb 11>;

<bb 11>:
  D.44020_18 = session_7(D)->channel;
  D.44023_19 = switch_channel_test_flag (D.44020_18, 29);
  if (D.44023_19 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:
  D.44025_20 = engine_12->adv_sdp_port;
  if (D.44025_20 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.44011_21 = 0;
  goto <bb 39>;

<bb 14>:
  sdp_port.77_22 = engine_12->local_sdp_port;
  if (sdp_port.77_22 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.44014_23 = smh_8->mparams;
  lookup_rtpip.76_24 = D.44014_23->rtpip;
  sdp_port.77_25 = engine_12->local_sdp_port;
  switch_rtp_release_port (lookup_rtpip.76_24, sdp_port.77_25);

<bb 16>:
  D.44014_26 = smh_8->mparams;
  lookup_rtpip.76_27 = D.44014_26->rtpip;
  D.44029_28 = switch_rtp_request_port (lookup_rtpip.76_27);
  engine_12->local_sdp_port = D.44029_28;
  sdp_port.77_29 = engine_12->local_sdp_port;
  if (sdp_port.77_29 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4475, session_7(D), 2, "No %s RTP ports available!\n", tstr_6);
  D.44011_30 = 1;
  goto <bb 39>;

<bb 18>:
  D.44014_31 = smh_8->mparams;
  lookup_rtpip.76_32 = D.44014_31->rtpip;
  engine_12->local_sdp_ip = lookup_rtpip.76_32;
  sdp_port.77_33 = engine_12->local_sdp_port;
  sdp_port = sdp_port.77_33;
  D.44014_34 = smh_8->mparams;
  D.44034_35 = D.44014_34->remote_ip;
  # DEBUG s => D.44034_35
  if (D.44034_35 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;

<bb 19>:
  D.48027_105 = MEM[(const char *)D.44034_35];
  if (D.48027_105 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:

<bb 21>:
  # D.48026_106 = PHI <1(18), 1(19), 0(20)>
  D.48026_110 = D.48026_106;
  D.48026_36 = D.48026_110;
  if (D.48026_36 == 0)
    goto <bb 22>;
  else
    goto <bb 34>;

<bb 22>:
  D.44014_37 = smh_8->mparams;
  D.44034_38 = D.44014_37->remote_ip;
  D.44037_39 = switch_core_media_check_nat (smh_8, D.44034_38);
  if (D.44037_39 != 0)
    goto <bb 23>;
  else
    goto <bb 34>;

<bb 23>:
  sdp_port.77_40 = engine_12->local_sdp_port;
  switch_nat_add_mapping (sdp_port.77_40, 0, &sdp_port, 0);
  switch_snprintf (&vname, 128, "rtp_adv_%s_ip", tstr_6);
  D.44020_41 = session_7(D)->channel;
  use_ip_42 = switch_channel_get_variable_dup (D.44020_41, &vname, 1, -1);
  # DEBUG use_ip => use_ip_42
  if (use_ip_42 == 0B)
    goto <bb 24>;
  else
    goto <bb 29>;

<bb 24>:
  D.44014_43 = smh_8->mparams;
  D.44041_44 = D.44014_43->extrtpip;
  # DEBUG s => D.44041_44
  if (D.44041_44 == 0B)
    goto <bb 27>;
  else
    goto <bb 25>;

<bb 25>:
  D.48031_107 = MEM[(const char *)D.44041_44];
  if (D.48031_107 == 0)
    goto <bb 27>;
  else
    goto <bb 26>;

<bb 26>:

<bb 27>:
  # D.48030_108 = PHI <1(24), 1(25), 0(26)>
  D.48030_111 = D.48030_108;
  D.48030_45 = D.48030_111;
  if (D.48030_45 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.44014_46 = smh_8->mparams;
  use_ip_47 = D.44014_46->extrtpip;
  # DEBUG use_ip => use_ip_47

<bb 29>:
  # use_ip_1 = PHI <use_ip_42(23), use_ip_42(27), use_ip_47(28)>
  # DEBUG use_ip => use_ip_1
  if (use_ip_1 != 0B)
    goto <bb 30>;
  else
    goto <bb 33>;

<bb 30>:
  D.44047_48 = switch_core_media_ext_address_lookup (session_7(D), &lookup_rtpip, &sdp_port, use_ip_1);
  if (D.44047_48 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.44011_49 = 1;
  goto <bb 39>;

<bb 32>:
  use_ip_50 = lookup_rtpip;
  # DEBUG use_ip => use_ip_50
  goto <bb 35>;

<bb 33>:
  D.44014_51 = smh_8->mparams;
  use_ip_52 = D.44014_51->rtpip;
  # DEBUG use_ip => use_ip_52
  goto <bb 35>;

<bb 34>:
  D.44014_53 = smh_8->mparams;
  use_ip_54 = D.44014_53->rtpip;
  # DEBUG use_ip => use_ip_54

<bb 35>:
  # use_ip_2 = PHI <use_ip_52(33), use_ip_54(34), use_ip_50(32)>
  # DEBUG use_ip => use_ip_2
  sdp_port.78_55 = sdp_port;
  engine_12->adv_sdp_port = sdp_port.78_55;
  D.44014_56 = smh_8->mparams;
  D.44014_57 = smh_8->mparams;
  D.44052_58 = switch_core_perform_session_strdup (session_7(D), use_ip_2, "src/switch_core_media.c", &__func__, 4515);
  D.44014_57->extrtpip = D.44052_58;
  D.44041_59 = D.44014_57->extrtpip;
  D.44014_57->adv_sdp_audio_ip = D.44041_59;
  D.44053_60 = D.44014_57->adv_sdp_audio_ip;
  engine_12->adv_sdp_ip = D.44053_60;
  if (type_5(D) == 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.44020_61 = session_7(D)->channel;
  D.44056_62 = engine_12->local_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_61, "local_media_ip", D.44056_62, 1);
  D.44020_63 = session_7(D)->channel;
  sdp_port.78_64 = sdp_port;
  D.44057_65 = (int) sdp_port.78_64;
  switch_channel_set_variable_printf (D.44020_63, "local_media_port", "%d", D.44057_65);
  D.44020_66 = session_7(D)->channel;
  D.44058_67 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_66, "advertised_media_ip", D.44058_67, 1);
  goto <bb 38>;

<bb 37>:
  D.44020_68 = session_7(D)->channel;
  D.44058_69 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_68, "local_video_ip", D.44058_69, 1);
  D.44020_70 = session_7(D)->channel;
  sdp_port.78_71 = sdp_port;
  D.44057_72 = (int) sdp_port.78_71;
  switch_channel_set_variable_printf (D.44020_70, "local_video_port", "%d", D.44057_72);

<bb 38>:
  D.44011_73 = 0;

<bb 39>:
  # D.44011_3 = PHI <D.44011_9(8), D.44011_21(13), D.44011_30(17), D.44011_49(31), D.44011_73(38)>
  return D.44011_3;

}



;; Function switch_core_media_choose_ports (switch_core_media_choose_ports)

Try : D.44005_9(P9) & status_1(P1) --> P9 status
Try : status_1(P9) & status_2(P2) : Same root, coalesced --> P9.
Try : status_1(P9) & status_5(P5) : Same root, coalesced --> P9.
Try : status_1(P9) & status_5(P9) : Already coalesced.
Try : status_1(P9) & status_5(P9) : Already coalesced.
Try : status_1(P9) & status_5(P9) : Already coalesced.

Partition map 

Partition 3 (audio_3(D) - 3 )
Partition 4 (session_4(D) - 4 )
Partition 6 (video_6(D) - 6 )
Partition 7 (D.44001_7 - 7 )
Partition 8 (D.44002_8 - 8 )
Partition 9 (status_9 - 1 2 5 9 )
Partition 10 (.MEM_10(D) - 10 )
Partition 11 (.MEM_11 - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;

}
switch_core_media_choose_ports (struct switch_core_session_t * session, switch_bool_t audio, switch_bool_t video)
{
  switch_status_t status;
  uint32_t D.44002;
  struct switch_channel_t * D.44001;

<bb 2>:
  status_2 = 0;
  # DEBUG status => status_2
  if (audio_3(D) != 0)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 3>:
  status_5 = switch_core_media_choose_port (session_4(D), 0, 0);
  # DEBUG status => status_5
  if (status_5 == 0)
    goto <bb 4>;
  else
    goto <bb 7>;

<bb 4>:
  if (video_6(D) != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  switch_core_media_check_video_codecs (session_4(D));
  D.44001_7 = session_4(D)->channel;
  D.44002_8 = switch_channel_test_flag (D.44001_7, 98);
  if (D.44002_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  switch_core_media_choose_port (session_4(D), 1, 0);

<bb 7>:
  # status_1 = PHI <status_2(2), status_5(3), status_5(4), status_5(5), status_5(6)>
  # DEBUG status => status_1
  status_9 = status_1;
  return status_9;

}



;; Function switch_core_media_deactivate_rtp (switch_core_media_deactivate_rtp)

Try : D.48036_63(P63) & D.48038_60(P60) --> P63 D.48036
Try : D.43970_17(P17) & D.48036_63(P63) --> P63 D.48036
Try : D.48040_64(P64) & D.48042_62(P62) --> P64 D.48040
Try : D.43987_33(P33) & D.48040_64(P64) --> P64 D.48040

Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (a_engine_3 - 3 )
Partition 4 (v_engine_4 - 4 )
Partition 5 (D.43953_5 - 5 )
Partition 6 (D.43956_6 - 6 )
Partition 7 (D.43953_7 - 7 )
Partition 8 (D.43957_8 - 8 )
Partition 9 (D.43960_9 - 9 )
Partition 10 (D.43962_10 - 10 )
Partition 11 (D.43965_11 - 11 )
Partition 12 (D.43966_12 - 12 )
Partition 13 (D.43962_13 - 13 )
Partition 14 (D.43962_14 - 14 )
Partition 15 (D.43965_15 - 15 )
Partition 16 (D.43969_16 - 16 )
Partition 18 (D.43965_18 - 18 )
Partition 19 (D.43969_19 - 19 )
Partition 20 (D.43973_20 - 20 )
Partition 21 (D.43962_21 - 21 )
Partition 22 (D.43962_22 - 22 )
Partition 23 (D.43976_23 - 23 )
Partition 24 (D.43977_24 - 24 )
Partition 25 (D.43980_25 - 25 )
Partition 26 (D.43982_26 - 26 )
Partition 27 (D.43965_27 - 27 )
Partition 28 (D.43966_28 - 28 )
Partition 29 (D.43982_29 - 29 )
Partition 30 (D.43982_30 - 30 )
Partition 31 (D.43965_31 - 31 )
Partition 32 (D.43969_32 - 32 )
Partition 34 (D.43965_34 - 34 )
Partition 35 (D.43969_35 - 35 )
Partition 36 (D.43990_36 - 36 )
Partition 37 (D.43982_37 - 37 )
Partition 38 (D.43982_38 - 38 )
Partition 39 (D.43993_39 - 39 )
Partition 40 (.MEM_40 - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (.MEM_44(D) - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (D.48037_59 - 59 )
Partition 61 (D.48041_61 - 61 )
Partition 63 (D.48036_63 - 17 60 63 )
Partition 64 (D.48040_64 - 33 62 64 )

Coalesced D.43970_17 to D.48036_63
Coalesced D.43987_33 to D.48040_64
Coalesced D.48038_60 to D.48036_63
Coalesced D.48042_62 to D.48040_64
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_deactivate_rtp";

  { Scope block #316 src/switch_core_media.c:4592 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #317 Originating from :#0 

    }

  }

  { Scope block #318 src/switch_core_media.c:4579 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #319 Originating from :#0 

    }

  }

  { Scope block #320 
    switch_status_t st;

  }

}
switch_core_media_deactivate_rtp (struct switch_core_session_t * session)
{
  const char D.48041;
  int D.48040;
  const char D.48037;
  int D.48036;
  switch_status_t st;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_deactivate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  switch_port_t D.43993;
  int D.43990;
  switch_port_t D.43982;
  struct switch_rtp_t * * D.43980;
  struct switch_rtp_t * D.43977;
  switch_port_t D.43976;
  int D.43973;
  char * D.43969;
  char * D.43966;
  struct switch_core_media_params_t * D.43965;
  switch_port_t D.43962;
  struct switch_rtp_t * * D.43960;
  struct switch_rtp_t * D.43957;
  struct switch_channel_t * D.43956;
  struct switch_thread_t * D.43953;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4554, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 29>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_3 = &smh_2->engines;
  # DEBUG a_engine => a_engine_3
  v_engine_4 = &smh_2->engines[1];
  # DEBUG v_engine => v_engine_4
  D.43953_5 = v_engine_4->media_thread;
  if (D.43953_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.43956_6 = session_1(D)->channel;
  switch_channel_clear_flag (D.43956_6, 113);
  v_engine_4->mh.up = 0;
  D.43953_7 = v_engine_4->media_thread;
  switch_thread_join (&st, D.43953_7);
  v_engine_4->media_thread = 0B;

<bb 7>:
  D.43957_8 = v_engine_4->rtp_session;
  if (D.43957_8 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.43960_9 = &v_engine_4->rtp_session;
  switch_rtp_destroy (D.43960_9);
  goto <bb 11>;

<bb 9>:
  D.43962_10 = v_engine_4->local_sdp_port;
  if (D.43962_10 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.43965_11 = smh_2->mparams;
  D.43966_12 = D.43965_11->rtpip;
  D.43962_13 = v_engine_4->local_sdp_port;
  switch_rtp_release_port (D.43966_12, D.43962_13);

<bb 11>:
  D.43962_14 = v_engine_4->local_sdp_port;
  if (D.43962_14 != 0)
    goto <bb 12>;
  else
    goto <bb 18>;

<bb 12>:
  D.43965_15 = smh_2->mparams;
  D.43969_16 = D.43965_15->remote_ip;
  # DEBUG s => D.43969_16
  if (D.43969_16 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;

<bb 13>:
  D.48037_59 = MEM[(const char *)D.43969_16];
  if (D.48037_59 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # D.48036_60 = PHI <1(12), 1(13), 0(14)>
  D.48036_63 = D.48036_60;
  D.48036_17 = D.48036_63;
  if (D.48036_17 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.43965_18 = smh_2->mparams;
  D.43969_19 = D.43965_18->remote_ip;
  D.43973_20 = switch_core_media_check_nat (smh_2, D.43969_19);
  if (D.43973_20 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.43962_21 = v_engine_4->local_sdp_port;
  switch_nat_del_mapping (D.43962_21, 0);
  D.43962_22 = v_engine_4->local_sdp_port;
  D.43976_23 = D.43962_22 + 1;
  switch_nat_del_mapping (D.43976_23, 0);

<bb 18>:
  D.43977_24 = a_engine_3->rtp_session;
  if (D.43977_24 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.43980_25 = &a_engine_3->rtp_session;
  switch_rtp_destroy (D.43980_25);
  goto <bb 22>;

<bb 20>:
  D.43982_26 = a_engine_3->local_sdp_port;
  if (D.43982_26 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.43965_27 = smh_2->mparams;
  D.43966_28 = D.43965_27->rtpip;
  D.43982_29 = a_engine_3->local_sdp_port;
  switch_rtp_release_port (D.43966_28, D.43982_29);

<bb 22>:
  D.43982_30 = a_engine_3->local_sdp_port;
  if (D.43982_30 != 0)
    goto <bb 23>;
  else
    goto <bb 29>;

<bb 23>:
  D.43965_31 = smh_2->mparams;
  D.43969_32 = D.43965_31->remote_ip;
  # DEBUG s => D.43969_32
  if (D.43969_32 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;

<bb 24>:
  D.48041_61 = MEM[(const char *)D.43969_32];
  if (D.48041_61 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:

<bb 26>:
  # D.48040_62 = PHI <1(23), 1(24), 0(25)>
  D.48040_64 = D.48040_62;
  D.48040_33 = D.48040_64;
  if (D.48040_33 == 0)
    goto <bb 27>;
  else
    goto <bb 29>;

<bb 27>:
  D.43965_34 = smh_2->mparams;
  D.43969_35 = D.43965_34->remote_ip;
  D.43990_36 = switch_core_media_check_nat (smh_2, D.43969_35);
  if (D.43990_36 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.43982_37 = a_engine_3->local_sdp_port;
  switch_nat_del_mapping (D.43982_37, 0);
  D.43982_38 = a_engine_3->local_sdp_port;
  D.43993_39 = D.43982_38 + 1;
  switch_nat_del_mapping (D.43993_39, 0);

<bb 29>:
  return;

}



;; Function switch_media_handle_destroy (switch_media_handle_destroy)

Try : D.48045_57(P57) & D.48052_35(P35) --> P57 D.48045
Try : D.46504_6(P6) & D.48045_57(P57) --> P57 D.48045
Try : D.48054_58(P58) & D.48061_42(P42) --> P58 D.48054
Try : D.46508_9(P9) & D.48054_58(P58) --> P58 D.48054
Try : D.48063_59(P59) & D.48070_49(P49) --> P59 D.48063
Try : D.46512_12(P12) & D.48063_59(P59) --> P59 D.48063
Try : D.48072_60(P60) & D.48079_56(P56) --> P60 D.48072
Try : D.46516_15(P15) & D.48072_60(P60) --> P60 D.48072

Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (a_engine_3 - 3 )
Partition 4 (v_engine_4 - 4 )
Partition 5 (D.46503_5 - 5 )
Partition 7 (D.46503_7 - 7 )
Partition 8 (D.46507_8 - 8 )
Partition 10 (D.46507_10 - 10 )
Partition 11 (D.46511_11 - 11 )
Partition 13 (D.46511_13 - 13 )
Partition 14 (D.46515_14 - 14 )
Partition 16 (D.46515_16 - 16 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18 - 18 )
Partition 19 (.MEM_19 - 19 )
Partition 20 (.MEM_20 - 20 )
Partition 21 (.MEM_21(D) - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23 - 23 )
Partition 24 (.MEM_24 - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (D.48050_29 - 29 )
Partition 30 (D.48049_30 - 30 )
Partition 31 (D.48048_31 - 31 )
Partition 32 (D.48047_32 - 32 )
Partition 33 (D.48046_33 - 33 )
Partition 34 (iftmp.104_34 - 34 )
Partition 36 (D.48059_36 - 36 )
Partition 37 (D.48058_37 - 37 )
Partition 38 (D.48057_38 - 38 )
Partition 39 (D.48056_39 - 39 )
Partition 40 (D.48055_40 - 40 )
Partition 41 (iftmp.104_41 - 41 )
Partition 43 (D.48068_43 - 43 )
Partition 44 (D.48067_44 - 44 )
Partition 45 (D.48066_45 - 45 )
Partition 46 (D.48065_46 - 46 )
Partition 47 (D.48064_47 - 47 )
Partition 48 (iftmp.104_48 - 48 )
Partition 50 (D.48077_50 - 50 )
Partition 51 (D.48076_51 - 51 )
Partition 52 (D.48075_52 - 52 )
Partition 53 (D.48074_53 - 53 )
Partition 54 (D.48073_54 - 54 )
Partition 55 (iftmp.104_55 - 55 )
Partition 57 (D.48045_57 - 6 35 57 )
Partition 58 (D.48054_58 - 9 42 58 )
Partition 59 (D.48063_59 - 12 49 59 )
Partition 60 (D.48072_60 - 15 56 60 )

Coalesced D.46504_6 to D.48045_57
Coalesced D.46508_9 to D.48054_58
Coalesced D.46512_12 to D.48063_59
Coalesced D.46516_15 to D.48072_60
Coalesced D.48052_35 to D.48045_57
Coalesced D.48061_42 to D.48054_58
Coalesced D.48070_49 to D.48063_59
Coalesced D.48079_56 to D.48072_60
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  static const char __PRETTY_FUNCTION__[28] = "switch_media_handle_destroy";

  { Scope block #321 src/switch_core_media.c:1400 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #322 Originating from :#0 

    }

  }

  { Scope block #323 src/switch_core_media.c:1396 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #324 Originating from :#0 

    }

  }

  { Scope block #325 src/switch_core_media.c:1392 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #326 Originating from :#0 

    }

  }

  { Scope block #327 src/switch_core_media.c:1388 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #328 Originating from :#0 

    }

  }

}
switch_media_handle_destroy (struct switch_core_session_t * session)
{
  int iftmp.104;
  uint32_t D.48077;
  uint32_t D.48076;
  struct switch_mutex_t * D.48075;
  struct switch_codec_interface_t * D.48074;
  const struct switch_codec_implementation_t * D.48073;
  switch_bool_t D.48072;
  int iftmp.104;
  uint32_t D.48068;
  uint32_t D.48067;
  struct switch_mutex_t * D.48066;
  struct switch_codec_interface_t * D.48065;
  const struct switch_codec_implementation_t * D.48064;
  switch_bool_t D.48063;
  int iftmp.104;
  uint32_t D.48059;
  uint32_t D.48058;
  struct switch_mutex_t * D.48057;
  struct switch_codec_interface_t * D.48056;
  const struct switch_codec_implementation_t * D.48055;
  switch_bool_t D.48054;
  int iftmp.104;
  uint32_t D.48050;
  uint32_t D.48049;
  struct switch_mutex_t * D.48048;
  struct switch_codec_interface_t * D.48047;
  const struct switch_codec_implementation_t * D.48046;
  switch_bool_t D.48045;
  static const char __PRETTY_FUNCTION__[28] = "switch_media_handle_destroy";
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  struct switch_codec_t * D.46515;
  struct switch_codec_t * D.46511;
  struct switch_codec_t * D.46507;
  struct switch_codec_t * D.46503;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1378, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 38>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_3 = &smh_2->engines;
  # DEBUG a_engine => a_engine_3
  v_engine_4 = &smh_2->engines[1];
  # DEBUG v_engine => v_engine_4
  D.46503_5 = &a_engine_3->read_codec;
  # DEBUG codec => D.46503_5
  if (D.46503_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 10>;

<bb 6>:
  D.48050_29 = D.46503_5->flags;
  D.48049_30 = D.48050_29 & 256;
  if (D.48049_30 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 7>:
  D.48048_31 = D.46503_5->mutex;
  if (D.48048_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.48047_32 = D.46503_5->codec_interface;
  if (D.48047_32 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.48046_33 = D.46503_5->implementation;
  if (D.48046_33 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # iftmp.104_34 = PHI <1(9), 0(10)>
  D.48045_35 = (switch_bool_t) iftmp.104_34;
  D.48045_57 = D.48045_35;
  D.48045_6 = D.48045_57;
  if (D.48045_6 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.46503_7 = &a_engine_3->read_codec;
  switch_core_codec_destroy (D.46503_7);

<bb 13>:
  D.46507_8 = &a_engine_3->write_codec;
  # DEBUG codec => D.46507_8
  if (D.46507_8 != 0B)
    goto <bb 14>;
  else
    goto <bb 18>;

<bb 14>:
  D.48059_36 = D.46507_8->flags;
  D.48058_37 = D.48059_36 & 256;
  if (D.48058_37 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

<bb 15>:
  D.48057_38 = D.46507_8->mutex;
  if (D.48057_38 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.48056_39 = D.46507_8->codec_interface;
  if (D.48056_39 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.48055_40 = D.46507_8->implementation;
  if (D.48055_40 != 0B)
    goto <bb 19>;
  else
    goto <bb 18>;

<bb 18>:

<bb 19>:
  # iftmp.104_41 = PHI <1(17), 0(18)>
  D.48054_42 = (switch_bool_t) iftmp.104_41;
  D.48054_58 = D.48054_42;
  D.48054_9 = D.48054_58;
  if (D.48054_9 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.46507_10 = &a_engine_3->write_codec;
  switch_core_codec_destroy (D.46507_10);

<bb 21>:
  D.46511_11 = &v_engine_4->read_codec;
  # DEBUG codec => D.46511_11
  if (D.46511_11 != 0B)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.48068_43 = D.46511_11->flags;
  D.48067_44 = D.48068_43 & 256;
  if (D.48067_44 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.48066_45 = D.46511_11->mutex;
  if (D.48066_45 != 0B)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 24>:
  D.48065_46 = D.46511_11->codec_interface;
  if (D.48065_46 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.48064_47 = D.46511_11->implementation;
  if (D.48064_47 != 0B)
    goto <bb 27>;
  else
    goto <bb 26>;

<bb 26>:

<bb 27>:
  # iftmp.104_48 = PHI <1(25), 0(26)>
  D.48063_49 = (switch_bool_t) iftmp.104_48;
  D.48063_59 = D.48063_49;
  D.48063_12 = D.48063_59;
  if (D.48063_12 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.46511_13 = &v_engine_4->read_codec;
  switch_core_codec_destroy (D.46511_13);

<bb 29>:
  D.46515_14 = &v_engine_4->write_codec;
  # DEBUG codec => D.46515_14
  if (D.46515_14 != 0B)
    goto <bb 30>;
  else
    goto <bb 34>;

<bb 30>:
  D.48077_50 = D.46515_14->flags;
  D.48076_51 = D.48077_50 & 256;
  if (D.48076_51 != 0)
    goto <bb 31>;
  else
    goto <bb 34>;

<bb 31>:
  D.48075_52 = D.46515_14->mutex;
  if (D.48075_52 != 0B)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.48074_53 = D.46515_14->codec_interface;
  if (D.48074_53 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.48073_54 = D.46515_14->implementation;
  if (D.48073_54 != 0B)
    goto <bb 35>;
  else
    goto <bb 34>;

<bb 34>:

<bb 35>:
  # iftmp.104_55 = PHI <1(33), 0(34)>
  D.48072_56 = (switch_bool_t) iftmp.104_55;
  D.48072_60 = D.48072_56;
  D.48072_15 = D.48072_60;
  if (D.48072_15 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.46515_16 = &v_engine_4->write_codec;
  switch_core_codec_destroy (D.46515_16);

<bb 37>:
  switch_core_session_unset_read_codec (session_1(D));
  switch_core_session_unset_write_codec (session_1(D));
  switch_core_media_deactivate_rtp (session_1(D));

<bb 38>:
  return;

}



;; Function switch_core_session_wake_video_thread (switch_core_session_wake_video_thread)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (v_engine_3 - 3 )
Partition 4 (D.43940_4 - 4 )
Partition 5 (D.43943_5 - 5 )
Partition 6 (D.43944_6 - 6 )
Partition 7 (D.43947_7 - 7 )
Partition 8 (D.43943_8 - 8 )
Partition 9 (.MEM_9(D) - 9 )
Partition 10 (.MEM_10 - 10 )
Partition 11 (.MEM_11 - 11 )
Partition 12 (.MEM_12 - 12 )

switch_core_session_wake_video_thread (struct switch_core_session_t * session)
{
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  struct switch_thread_cond_t * D.43947;
  switch_status_t D.43944;
  struct switch_mutex_t * D.43943;
  struct switch_rtp_t * D.43940;

<bb 2>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 3>;

<bb 3>:
  v_engine_3 = &smh_2->engines[1];
  # DEBUG v_engine => v_engine_3
  D.43940_4 = v_engine_3->rtp_session;
  if (D.43940_4 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;

<bb 4>:
  D.43943_5 = v_engine_3->mh.cond_mutex;
  D.43944_6 = switch_mutex_trylock (D.43943_5);
  if (D.43944_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.43947_7 = v_engine_3->mh.cond;
  switch_thread_cond_broadcast (D.43947_7);
  D.43943_8 = v_engine_3->mh.cond_mutex;
  switch_mutex_unlock (D.43943_8);

<bb 6>:
  return;

}



;; Function switch_core_media_activate_rtp (switch_core_media_activate_rtp)

Try : D.48083_1357(P1357) & D.48084_1337(P1337) --> P1357 D.48083
Try : D.43201_178(P178) & D.48083_1357(P1357) --> P1357 D.48083
Try : D.39359_233(P233) & __result_8(P8) --> P233 __result
Try : iftmp.46_234(P234) & __result_233(P233) --> P233 __result
Try : D.39360_238(P238) & iftmp.46_28(P28) --> P238 D.39360
Try : timer_name_290(P290) & var_289(P289) : 2 different USER vars. No coalesce.
Try : D.48086_1359(P1359) & D.48087_1338(P1338) --> P1359 D.48086
Try : D.43392_410(P410) & D.48086_1359(P1359) --> P1359 D.48086
Try : D.48089_1361(P1361) & D.48090_1339(P1339) --> P1361 D.48089
Try : interval_417(P417) & D.48089_1361(P1361) --> P1361 interval
Try : D.48092_1362(P1362) & D.48094_1341(P1341) --> P1362 D.48092
Try : D.43423_447(P447) & D.48092_1362(P1362) --> P1362 D.48092
Try : dtype_456(P456) & iftmp.52_33(P33) --> P456 dtype
Try : dtype_462(P462) & iftmp.53_34(P34) --> P462 dtype
Try : D.48096_1364(P1364) & D.48097_1342(P1342) --> P1364 D.48096
Try : jb_msec_484(P484) & D.48096_1364(P1364) --> P1364 jb_msec
Try : D.48099_1366(P1366) & D.48100_1343(P1343) --> P1366 D.48099
Try : maxlen_489(P489) & D.48099_1366(P1366) --> P1366 maxlen
Try : D.48102_1368(P1368) & D.48103_1344(P1344) --> P1368 D.48102
Try : D.43465_492(P492) & D.48102_1368(P1368) --> P1368 D.48102
Try : D.48105_1370(P1370) & D.48106_1345(P1345) --> P1370 D.48105
Try : v_526(P526) & D.48105_1370(P1370) --> P1370 v
Try : D.48108_1372(P1372) & D.48109_1346(P1346) --> P1372 D.48108
Try : v_531(P531) & D.48108_1372(P1372) --> P1372 v
Try : D.48111_1374(P1374) & D.48112_1347(P1347) --> P1374 D.48111
Try : delayi_592(P592) & D.48111_1374(P1374) --> P1374 delayi
Try : D.48114_1376(P1376) & D.48115_1348(P1348) --> P1376 D.48114
Try : D.43605_698(P698) & D.48114_1376(P1376) --> P1376 D.48114
Try : timer_name_759(P759) & var_758(P758) : 2 different USER vars. No coalesce.
Try : D.48117_1378(P1378) & D.48118_1349(P1349) --> P1378 D.48117
Try : D.43712_850(P850) & D.48117_1378(P1378) --> P1378 D.48117
Try : D.48120_1380(P1380) & D.48121_1350(P1350) --> P1380 D.48120
Try : interval_857(P857) & D.48120_1380(P1380) --> P1380 interval
Try : D.48123_1381(P1381) & D.48125_1352(P1352) --> P1381 D.48123
Try : D.43744_889(P889) & D.48123_1381(P1381) --> P1381 D.48123
Try : dtype_898(P898) & iftmp.66_39(P39) --> P898 dtype
Try : D.43070_944(P944) & status_5(P5) --> P944 status
Try : remote_rtcp_port_7(P7) & remote_rtcp_port_175(P175) : Same root, coalesced --> P7.
Try : remote_rtcp_port_7(P7) & remote_rtcp_port_175(P7) : Already coalesced.
Try : remote_rtcp_port_7(P7) & remote_rtcp_port_179(P179) : Same root, coalesced --> P7.
Try : __result_8(P233) & __result_202(P202) : Same root, coalesced --> P233.
Try : __result_8(P233) & __result_212(P212) : Same root, coalesced --> P233.
Try : __result_8(P233) & __result_222(P222) : Same root, coalesced --> P233.
Try : __result_8(P233) & __result_232(P232) : Same root, coalesced --> P233.
Try : iftmp.46_28(P238) & iftmp.46_234(P233) --> P233 __result
Try : iftmp.46_28(P233) & iftmp.46_237(P237) --> P233 __result
Try : timer_name_6(P6) & timer_name_263(P263) : Same root, coalesced --> P6.
Try : timer_name_6(P6) & timer_name_287(P287) : Same root, coalesced --> P6.
Try : timer_name_6(P6) & timer_name_290(P290) : Same root, coalesced --> P6.
Try : timer_name_6(P6) & timer_name_263(P6) : Already coalesced.
Try : vad_in_9(P9) & vad_in_318(P318) : Same root, coalesced --> P9.
Try : vad_in_9(P9) & vad_in_318(P9) : Already coalesced.
Try : vad_in_9(P9) & vad_in_345(P345) : Same root, coalesced --> P9.
Try : vad_out_11(P11) & vad_out_322(P322) : Same root, coalesced --> P11.
Try : vad_out_11(P11) & vad_out_322(P11) : Already coalesced.
Try : vad_out_11(P11) & vad_out_349(P349) : Same root, coalesced --> P11.
Try : vad_in_10(P10) & vad_in_9(P9) : Same root, coalesced --> P9.
Try : vad_in_10(P9) & vad_in_9(P9) : Already coalesced.
Try : vad_in_10(P9) & vad_in_353(P353) : Same root, coalesced --> P9.
Try : vad_out_12(P12) & vad_out_11(P11) : Same root, coalesced --> P11.
Try : vad_out_12(P11) & vad_out_11(P11) : Already coalesced.
Try : vad_out_12(P11) & vad_out_357(P357) : Same root, coalesced --> P11.
Try : iftmp.47_29(P29) & iftmp.47_385(P385) : Same root, coalesced --> P29.
Try : iftmp.47_29(P29) & iftmp.47_386(P386) : Same root, coalesced --> P29.
Try : iftmp.48_30(P30) & iftmp.48_387(P387) : Same root, coalesced --> P30.
Try : iftmp.48_30(P30) & iftmp.48_388(P388) : Same root, coalesced --> P30.
Try : iftmp.49_31(P31) & iftmp.49_397(P397) : Same root, coalesced --> P31.
Try : iftmp.49_31(P31) & iftmp.49_398(P398) : Same root, coalesced --> P31.
Try : val_1(P1) & val_401(P401) : Same root, coalesced --> P1.
Try : val_1(P1) & val_403(P403) : Same root, coalesced --> P1.
Try : remote_rtcp_port_13(P13) & remote_rtcp_port_406(P406) : Same root, coalesced --> P13.
Try : remote_rtcp_port_13(P13) & remote_rtcp_port_411(P411) : Same root, coalesced --> P13.
Try : interval_14(P14) & interval_417(P1361) : Same root, coalesced --> P1361.
Try : interval_14(P1361) & interval_420(P420) : Same root, coalesced --> P1361.
Try : iftmp.51_32(P32) & iftmp.51_443(P443) : Same root, coalesced --> P32.
Try : iftmp.51_32(P32) & iftmp.51_444(P444) : Same root, coalesced --> P32.
Try : iftmp.52_33(P456) & iftmp.52_454(P454) --> P456 dtype
Try : iftmp.52_33(P456) & iftmp.52_455(P455) --> P456 dtype
Try : iftmp.53_34(P462) & iftmp.53_460(P460) --> P462 dtype
Try : iftmp.53_34(P462) & iftmp.53_461(P461) --> P462 dtype
Try : dtype_16(P16) & dtype_456(P456) : Same root, coalesced --> P456.
Try : dtype_16(P456) & dtype_462(P462) : Same root, coalesced --> P456.
Try : xtype_15(P15) & xtype_463(P463) : Same root, coalesced --> P15.
Try : xtype_15(P15) & xtype_463(P15) : Already coalesced.
Try : xtype_15(P15) & xtype_467(P467) : Same root, coalesced --> P15.
Try : val_2(P2) & val_481(P481) : Same root, coalesced --> P2.
Try : val_2(P2) & val_483(P483) : Same root, coalesced --> P2.
Try : maxlen_18(P18) & maxlen_485(P485) : Same root, coalesced --> P18.
Try : maxlen_18(P18) & maxlen_489(P1366) : Same root, coalesced --> P1366.
Try : maxlen_18(P1366) & maxlen_489(P1366) : Already coalesced.
Try : max_drift_19(P19) & max_drift_486(P486) : Same root, coalesced --> P19.
Try : max_drift_19(P19) & max_drift_486(P19) : Already coalesced.
Try : max_drift_19(P19) & max_drift_493(P493) : Same root, coalesced --> P19.
Try : jb_msec_17(P17) & jb_msec_484(P1364) : Same root, coalesced --> P1364.
Try : jb_msec_17(P1364) & jb_msec_500(P500) : Same root, coalesced --> P1364.
Try : qlen_20(P20) & qlen_506(P506) : Same root, coalesced --> P20.
Try : qlen_20(P20) & qlen_507(P507) : Same root, coalesced --> P20.
Try : maxqlen_21(P21) & maxqlen_503(P503) : Same root, coalesced --> P21.
Try : maxqlen_21(P21) & maxqlen_510(P510) : Same root, coalesced --> P21.
Try : maxqlen_22(P22) & maxqlen_21(P21) : Same root, coalesced --> P21.
Try : maxqlen_22(P21) & maxqlen_511(P511) : Same root, coalesced --> P21.
Try : delayi_23(P23) & delayi_592(P1374) : Same root, coalesced --> P1374.
Try : delayi_23(P1374) & delayi_593(P593) : Same root, coalesced --> P1374.
Try : status_4(P4) & status_43(P43) : Same root, coalesced --> P4.
Try : status_4(P4) & status_73(P73) : Same root, coalesced --> P4.
Try : status_4(P4) & status_73(P4) : Already coalesced.
Try : status_4(P4) & status_73(P4) : Already coalesced.
Try : status_4(P4) & status_73(P4) : Already coalesced.
Try : status_4(P4) & status_73(P4) : Already coalesced.
Try : remote_rtcp_port_24(P24) & remote_rtcp_port_695(P695) : Same root, coalesced --> P24.
Try : remote_rtcp_port_24(P24) & remote_rtcp_port_695(P24) : Already coalesced.
Try : remote_rtcp_port_24(P24) & remote_rtcp_port_699(P699) : Same root, coalesced --> P24.
Try : iftmp.61_35(P35) & iftmp.61_794(P794) : Same root, coalesced --> P35.
Try : iftmp.61_35(P35) & iftmp.61_795(P795) : Same root, coalesced --> P35.
Try : iftmp.62_36(P36) & iftmp.62_812(P812) : Same root, coalesced --> P36.
Try : iftmp.62_36(P36) & iftmp.62_813(P813) : Same root, coalesced --> P36.
Try : iftmp.63_37(P37) & iftmp.63_840(P840) : Same root, coalesced --> P37.
Try : iftmp.63_37(P37) & iftmp.63_841(P841) : Same root, coalesced --> P37.
Try : val_3(P3) & val_844(P844) : Same root, coalesced --> P3.
Try : val_3(P3) & val_846(P846) : Same root, coalesced --> P3.
Try : remote_port_25(P25) & remote_port_849(P849) : Same root, coalesced --> P25.
Try : remote_port_25(P25) & remote_port_851(P851) : Same root, coalesced --> P25.
Try : iftmp.65_38(P38) & iftmp.65_885(P885) : Same root, coalesced --> P38.
Try : iftmp.65_38(P38) & iftmp.65_886(P886) : Same root, coalesced --> P38.
Try : iftmp.66_39(P898) & iftmp.66_896(P896) --> P898 dtype
Try : iftmp.66_39(P898) & iftmp.66_897(P897) --> P898 dtype
Try : xtype_26(P26) & xtype_899(P899) : Same root, coalesced --> P26.
Try : xtype_26(P26) & xtype_899(P26) : Already coalesced.
Try : xtype_26(P26) & xtype_903(P903) : Same root, coalesced --> P26.
Try : iftmp.67_40(P40) & iftmp.67_936(P936) : Same root, coalesced --> P40.
Try : iftmp.67_40(P40) & iftmp.67_937(P937) : Same root, coalesced --> P40.
Try : iftmp.68_41(P41) & iftmp.68_626(P626) : Same root, coalesced --> P41.
Try : iftmp.68_41(P41) & iftmp.68_627(P627) : Same root, coalesced --> P41.
Try : status_5(P944) & status_61(P61) : Same root, coalesced --> P944.
Try : status_5(P944) & status_70(P70) : Same root, coalesced --> P944.
Try : status_5(P944) & status_73(P4) : Same root, coalesced --> P944.
Try : status_5(P944) & status_4(P944) : Already coalesced.
Try : status_5(P944) & status_629(P629) : Same root, coalesced --> P944.
Try : status_5(P944) & status_942(P942) : Same root, coalesced --> P944.
Try : D.43070_27(P27) & D.43070_47(P47) : Same root, coalesced --> P27.
Try : D.43070_27(P27) & D.43070_945(P945) : Same root, coalesced --> P27.
Try : D.43070_27(P27) & status_944(P944) --> P944 status

Partition map 

Partition 1 (val_1 - 1 401 403 )
Partition 2 (val_2 - 2 481 483 )
Partition 3 (val_3 - 3 844 846 )
Partition 6 (timer_name_6 - 6 263 287 290 )
Partition 7 (remote_rtcp_port_7 - 7 175 179 )
Partition 9 (vad_in_9 - 9 10 318 345 353 )
Partition 11 (vad_out_11 - 11 12 322 349 357 )
Partition 13 (remote_rtcp_port_13 - 13 406 411 )
Partition 15 (xtype_15 - 15 463 467 )
Partition 19 (max_drift_19 - 19 486 493 )
Partition 20 (qlen_20 - 20 506 507 )
Partition 21 (maxqlen_21 - 21 22 503 510 511 )
Partition 24 (remote_rtcp_port_24 - 24 695 699 )
Partition 25 (remote_port_25 - 25 849 851 )
Partition 26 (xtype_26 - 26 899 903 )
Partition 29 (iftmp.47_29 - 29 385 386 )
Partition 30 (iftmp.48_30 - 30 387 388 )
Partition 31 (iftmp.49_31 - 31 397 398 )
Partition 32 (iftmp.51_32 - 32 443 444 )
Partition 35 (iftmp.61_35 - 35 794 795 )
Partition 36 (iftmp.62_36 - 36 812 813 )
Partition 37 (iftmp.63_37 - 37 840 841 )
Partition 38 (iftmp.65_38 - 38 885 886 )
Partition 40 (iftmp.67_40 - 40 936 937 )
Partition 41 (iftmp.68_41 - 41 626 627 )
Partition 42 (val_42 - 42 )
Partition 44 (timer_name_44 - 44 )
Partition 45 (session_45(D) - 45 )
Partition 46 (smh_46 - 46 )
Partition 48 (a_engine_48 - 48 )
Partition 49 (v_engine_49 - 49 )
Partition 50 (D.43073_50 - 50 )
Partition 51 (D.43074_51 - 51 )
Partition 52 (D.43073_52 - 52 )
Partition 53 (D.43076_53 - 53 )
Partition 54 (D.43077_54 - 54 )
Partition 55 (D.43078_55 - 55 )
Partition 56 (D.43077_56 - 56 )
Partition 57 (D.43081_57 - 57 )
Partition 58 (D.43073_58 - 58 )
Partition 59 (D.43073_59 - 59 )
Partition 60 (D.43084_60 - 60 )
Partition 62 (D.43073_62 - 62 )
Partition 63 (D.43087_63 - 63 )
Partition 64 (D.43077_64 - 64 )
Partition 65 (D.43090_65 - 65 )
Partition 66 (D.43073_66 - 66 )
Partition 67 (D.43093_67 - 67 )
Partition 68 (D.43096_68 - 68 )
Partition 69 (D.43097_69 - 69 )
Partition 71 (D.43099_71 - 71 )
Partition 72 (D.43100_72 - 72 )
Partition 74 (D.43102_74 - 74 )
Partition 75 (D.43103_75 - 75 )
Partition 76 (D.43106_76 - 76 )
Partition 77 (D.43073_77 - 77 )
Partition 78 (D.43109_78 - 78 )
Partition 79 (D.43073_79 - 79 )
Partition 80 (val_80 - 80 )
Partition 81 (D.43113_81 - 81 )
Partition 82 (D.43114_82 - 82 )
Partition 83 (D.43115_83 - 83 )
Partition 84 (D.43118_84 - 84 )
Partition 85 (D.43073_85 - 85 )
Partition 86 (val_86 - 86 )
Partition 87 (D.43121_87 - 87 )
Partition 88 (D.43073_88 - 88 )
Partition 89 (D.43124_89 - 89 )
Partition 90 (D.43073_90 - 90 )
Partition 91 (val_91 - 91 )
Partition 92 (D.43127_92 - 92 )
Partition 93 (D.43128_93 - 93 )
Partition 94 (D.43129_94 - 94 )
Partition 95 (D.43132_95 - 95 )
Partition 96 (D.43073_96 - 96 )
Partition 97 (val_97 - 97 )
Partition 98 (D.43136_98 - 98 )
Partition 99 (D.43137_99 - 99 )
Partition 100 (D.43138_100 - 100 )
Partition 101 (D.43139_101 - 101 )
Partition 102 (D.43099_102 - 102 )
Partition 103 (D.43099_103 - 103 )
Partition 104 (D.43143_104 - 104 )
Partition 105 (D.43146_105 - 105 )
Partition 106 (D.43147_106 - 106 )
Partition 107 (D.43148_107 - 107 )
Partition 108 (D.43149_108 - 108 )
Partition 109 (D.43152_109 - 109 )
Partition 110 (D.43153_110 - 110 )
Partition 111 (D.43152_111 - 111 )
Partition 112 (D.43073_112 - 112 )
Partition 113 (val_113 - 113 )
Partition 114 (D.43158_114 - 114 )
Partition 115 (D.43077_115 - 115 )
Partition 116 (D.43073_116 - 116 )
Partition 117 (D.43163_117 - 117 )
Partition 118 (D.43077_118 - 118 )
Partition 119 (remote_host_119 - 119 )
Partition 120 (D.43077_120 - 120 )
Partition 121 (remote_port_121 - 121 )
Partition 122 (D.43167_122 - 122 )
Partition 123 (D.43168_123 - 123 )
Partition 124 (D.43169_124 - 124 )
Partition 125 (D.43171_125 - 125 )
Partition 126 (D.43172_126 - 126 )
Partition 127 (D.39348_127 - 127 )
Partition 128 (D.43171_128 - 128 )
Partition 129 (D.43174_129 - 129 )
Partition 130 (D.43073_130 - 130 )
Partition 131 (D.43176_131 - 131 )
Partition 132 (D.43073_132 - 132 )
Partition 133 (D.43177_133 - 133 )
Partition 134 (D.43178_134 - 134 )
Partition 135 (D.43171_135 - 135 )
Partition 136 (D.43172_136 - 136 )
Partition 137 (D.43171_137 - 137 )
Partition 138 (D.43174_138 - 138 )
Partition 139 (D.43179_139 - 139 )
Partition 140 (D.43171_140 - 140 )
Partition 141 (D.43174_141 - 141 )
Partition 142 (D.43179_142 - 142 )
Partition 143 (D.43073_143 - 143 )
Partition 144 (D.43171_144 - 144 )
Partition 145 (D.43172_145 - 145 )
Partition 146 (D.43073_146 - 146 )
Partition 147 (D.43073_147 - 147 )
Partition 148 (D.43180_148 - 148 )
Partition 149 (D.43073_149 - 149 )
Partition 150 (D.43183_150 - 150 )
Partition 151 (D.43184_151 - 151 )
Partition 152 (D.43185_152 - 152 )
Partition 153 (D.43186_153 - 153 )
Partition 154 (D.43171_154 - 154 )
Partition 155 (D.43172_155 - 155 )
Partition 156 (D.43171_156 - 156 )
Partition 157 (D.43174_157 - 157 )
Partition 158 (D.43179_158 - 158 )
Partition 159 (D.43171_159 - 159 )
Partition 160 (D.43187_160 - 160 )
Partition 161 (D.43188_161 - 161 )
Partition 162 (D.43189_162 - 162 )
Partition 163 (D.43190_163 - 163 )
Partition 164 (D.43185_164 - 164 )
Partition 165 (D.43186_165 - 165 )
Partition 166 (D.43073_166 - 166 )
Partition 167 (D.43184_167 - 167 )
Partition 168 (D.43073_168 - 168 )
Partition 169 (D.43073_169 - 169 )
Partition 170 (D.43191_170 - 170 )
Partition 171 (D.43077_171 - 171 )
Partition 172 (D.43073_172 - 172 )
Partition 173 (D.43194_173 - 173 )
Partition 174 (rport_174 - 174 )
Partition 176 (D.43073_176 - 176 )
Partition 177 (rport_177 - 177 )
Partition 180 (D.43077_180 - 180 )
Partition 181 (D.43171_181 - 181 )
Partition 182 (D.43172_182 - 182 )
Partition 183 (D.43171_183 - 183 )
Partition 184 (D.43174_184 - 184 )
Partition 185 (D.43202_185 - 185 )
Partition 186 (err.45_186 - 186 )
Partition 187 (D.43171_187 - 187 )
Partition 188 (D.43172_188 - 188 )
Partition 189 (D.43171_189 - 189 )
Partition 190 (D.43174_190 - 190 )
Partition 191 (D.43179_191 - 191 )
Partition 192 (D.43073_192 - 192 )
Partition 193 (D.43207_193 - 193 )
Partition 194 (__s2_len_194 - 194 )
Partition 195 (D.43171_195 - 195 )
Partition 196 (__s1_196 - 196 )
Partition 197 (D.43213_197 - 197 )
Partition 198 (D.43214_198 - 198 )
Partition 199 (D.43215_199 - 199 )
Partition 200 (D.43216_200 - 200 )
Partition 201 (D.43217_201 - 201 )
Partition 203 (D.43218_203 - 203 )
Partition 204 (D.43219_204 - 204 )
Partition 205 (D.43220_205 - 205 )
Partition 206 (D.43223_206 - 206 )
Partition 207 (D.43224_207 - 207 )
Partition 208 (D.43225_208 - 208 )
Partition 209 (D.43226_209 - 209 )
Partition 210 (D.43227_210 - 210 )
Partition 211 (D.43228_211 - 211 )
Partition 213 (D.43229_213 - 213 )
Partition 214 (D.43219_214 - 214 )
Partition 215 (D.43230_215 - 215 )
Partition 216 (D.43233_216 - 216 )
Partition 217 (D.43234_217 - 217 )
Partition 218 (D.43235_218 - 218 )
Partition 219 (D.43236_219 - 219 )
Partition 220 (D.43237_220 - 220 )
Partition 221 (D.43238_221 - 221 )
Partition 223 (D.43239_223 - 223 )
Partition 224 (D.43219_224 - 224 )
Partition 225 (D.43240_225 - 225 )
Partition 226 (D.43243_226 - 226 )
Partition 227 (D.43244_227 - 227 )
Partition 228 (D.43245_228 - 228 )
Partition 229 (D.43246_229 - 229 )
Partition 230 (D.43247_230 - 230 )
Partition 231 (D.43248_231 - 231 )
Partition 233 (__result_233 - 8 28 202 212 222 232 233 234 237 238 )
Partition 235 (D.43171_235 - 235 )
Partition 236 (D.43172_236 - 236 )
Partition 239 (D.43254_239 - 239 )
Partition 240 (D.43073_240 - 240 )
Partition 241 (val_241 - 241 )
Partition 242 (D.43258_242 - 242 )
Partition 243 (D.43073_243 - 243 )
Partition 244 (D.43259_244 - 244 )
Partition 245 (D.43077_245 - 245 )
Partition 246 (D.43262_246 - 246 )
Partition 247 (D.43263_247 - 247 )
Partition 248 (D.43264_248 - 248 )
Partition 249 (D.43073_249 - 249 )
Partition 250 (D.43267_250 - 250 )
Partition 251 (D.43102_251 - 251 )
Partition 252 (D.43103_252 - 252 )
Partition 253 (D.43270_253 - 253 )
Partition 254 (D.43271_254 - 254 )
Partition 255 (D.43274_255 - 255 )
Partition 256 (D.43073_256 - 256 )
Partition 257 (D.43277_257 - 257 )
Partition 258 (D.43073_258 - 258 )
Partition 259 (val_259 - 259 )
Partition 260 (D.43281_260 - 260 )
Partition 261 (D.43114_261 - 261 )
Partition 262 (D.43115_262 - 262 )
Partition 264 (D.43073_264 - 264 )
Partition 265 (D.43282_265 - 265 )
Partition 266 (D.43171_266 - 266 )
Partition 267 (D.43172_267 - 267 )
Partition 268 (D.43171_268 - 268 )
Partition 269 (D.43174_269 - 269 )
Partition 270 (D.43179_270 - 270 )
Partition 271 (D.43171_271 - 271 )
Partition 272 (D.43172_272 - 272 )
Partition 273 (D.43171_273 - 273 )
Partition 274 (D.43174_274 - 274 )
Partition 275 (D.43179_275 - 275 )
Partition 276 (D.43171_276 - 276 )
Partition 277 (D.43187_277 - 277 )
Partition 278 (D.43188_278 - 278 )
Partition 279 (D.43189_279 - 279 )
Partition 280 (D.43190_280 - 280 )
Partition 281 (D.43077_281 - 281 )
Partition 282 (D.43283_282 - 282 )
Partition 283 (D.43077_283 - 283 )
Partition 284 (D.43171_284 - 284 )
Partition 285 (D.43187_285 - 285 )
Partition 286 (D.43099_286 - 286 )
Partition 288 (D.43073_288 - 288 )
Partition 289 (var_289 - 289 )
Partition 291 (D.43073_291 - 291 )
Partition 292 (D.43291_292 - 292 )
Partition 293 (D.43073_293 - 293 )
Partition 294 (D.43293_294 - 294 )
Partition 295 (D.43184_295 - 295 )
Partition 296 (D.43185_296 - 296 )
Partition 297 (D.43171_297 - 297 )
Partition 298 (D.43172_298 - 298 )
Partition 299 (D.43171_299 - 299 )
Partition 300 (D.43174_300 - 300 )
Partition 301 (D.43171_301 - 301 )
Partition 302 (D.43187_302 - 302 )
Partition 303 (D.43294_303 - 303 )
Partition 304 (D.43171_304 - 304 )
Partition 305 (D.43295_305 - 305 )
Partition 306 (D.43296_306 - 306 )
Partition 307 (D.43297_307 - 307 )
Partition 308 (D.43298_308 - 308 )
Partition 309 (D.43077_309 - 309 )
Partition 310 (D.43299_310 - 310 )
Partition 311 (D.43077_311 - 311 )
Partition 312 (D.43302_312 - 312 )
Partition 313 (D.43077_313 - 313 )
Partition 314 (D.43303_314 - 314 )
Partition 315 (D.43099_315 - 315 )
Partition 316 (D.43306_316 - 316 )
Partition 317 (D.43307_317 - 317 )
Partition 319 (D.43099_319 - 319 )
Partition 320 (D.43306_320 - 320 )
Partition 321 (D.43307_321 - 321 )
Partition 323 (D.43073_323 - 323 )
Partition 324 (D.43308_324 - 324 )
Partition 325 (inb_325 - 325 )
Partition 326 (D.43309_326 - 326 )
Partition 327 (D.43310_327 - 327 )
Partition 328 (D.43073_328 - 328 )
Partition 329 (ssrc_329 - 329 )
Partition 330 (ssrc_ul_330 - 330 )
Partition 331 (D.43077_331 - 331 )
Partition 332 (D.43077_332 - 332 )
Partition 333 (D.43314_333 - 333 )
Partition 334 (D.43315_334 - 334 )
Partition 335 (D.43077_335 - 335 )
Partition 336 (D.43315_336 - 336 )
Partition 337 (D.43073_337 - 337 )
Partition 338 (D.43073_338 - 338 )
Partition 339 (D.43171_339 - 339 )
Partition 340 (D.43187_340 - 340 )
Partition 341 (D.43188_341 - 341 )
Partition 342 (D.43073_342 - 342 )
Partition 343 (val_343 - 343 )
Partition 344 (D.43320_344 - 344 )
Partition 346 (D.43073_346 - 346 )
Partition 347 (val_347 - 347 )
Partition 348 (D.43325_348 - 348 )
Partition 350 (D.43073_350 - 350 )
Partition 351 (val_351 - 351 )
Partition 352 (D.43330_352 - 352 )
Partition 354 (D.43073_354 - 354 )
Partition 355 (val_355 - 355 )
Partition 356 (D.43335_356 - 356 )
Partition 358 (D.43077_358 - 358 )
Partition 359 (D.43338_359 - 359 )
Partition 360 (D.43073_360 - 360 )
Partition 361 (D.43314_361 - 361 )
Partition 362 (D.43099_362 - 362 )
Partition 363 (D.43339_363 - 363 )
Partition 364 (D.43340_364 - 364 )
Partition 365 (D.43343_365 - 365 )
Partition 366 (D.43344_366 - 366 )
Partition 367 (D.43073_367 - 367 )
Partition 368 (val_368 - 368 )
Partition 369 (D.43347_369 - 369 )
Partition 370 (D.43077_370 - 370 )
Partition 371 (D.43343_371 - 371 )
Partition 372 (D.43099_372 - 372 )
Partition 373 (D.43348_373 - 373 )
Partition 374 (D.43349_374 - 374 )
Partition 375 (D.43352_375 - 375 )
Partition 376 (D.43353_376 - 376 )
Partition 377 (D.43354_377 - 377 )
Partition 378 (D.43356_378 - 378 )
Partition 379 (D.43357_379 - 379 )
Partition 380 (D.43358_380 - 380 )
Partition 381 (D.43077_381 - 381 )
Partition 382 (D.43359_382 - 382 )
Partition 383 (D.43360_383 - 383 )
Partition 384 (D.43361_384 - 384 )
Partition 389 (D.43370_389 - 389 )
Partition 390 (D.43371_390 - 390 )
Partition 391 (D.43077_391 - 391 )
Partition 392 (D.43374_392 - 392 )
Partition 393 (D.43375_393 - 393 )
Partition 394 (D.43376_394 - 394 )
Partition 395 (D.43377_395 - 395 )
Partition 396 (D.43379_396 - 396 )
Partition 399 (D.43383_399 - 399 )
Partition 400 (D.43073_400 - 400 )
Partition 402 (D.43099_402 - 402 )
Partition 404 (D.43073_404 - 404 )
Partition 405 (rport_405 - 405 )
Partition 407 (D.43387_407 - 407 )
Partition 408 (D.43388_408 - 408 )
Partition 409 (D.43389_409 - 409 )
Partition 412 (D.43393_412 - 412 )
Partition 413 (D.43396_413 - 413 )
Partition 414 (D.43077_414 - 414 )
Partition 415 (D.43397_415 - 415 )
Partition 416 (D.43398_416 - 416 )
Partition 418 (interval.50_418 - 418 )
Partition 419 (D.43401_419 - 419 )
Partition 421 (D.43396_421 - 421 )
Partition 422 (D.43077_422 - 422 )
Partition 423 (D.43397_423 - 423 )
Partition 424 (D.43398_424 - 424 )
Partition 425 (D.43404_425 - 425 )
Partition 426 (D.43405_426 - 426 )
Partition 427 (D.43397_427 - 427 )
Partition 428 (D.43404_428 - 428 )
Partition 429 (D.43411_429 - 429 )
Partition 430 (D.43370_430 - 430 )
Partition 431 (D.43412_431 - 431 )
Partition 432 (D.39377_432 - 432 )
Partition 433 (D.43404_433 - 433 )
Partition 434 (D.43414_434 - 434 )
Partition 435 (D.43370_435 - 435 )
Partition 436 (D.43415_436 - 436 )
Partition 437 (D.43077_437 - 437 )
Partition 438 (D.43374_438 - 438 )
Partition 439 (D.43375_439 - 439 )
Partition 440 (D.43376_440 - 440 )
Partition 441 (D.43377_441 - 441 )
Partition 442 (D.43418_442 - 442 )
Partition 445 (D.43383_445 - 445 )
Partition 446 (D.43422_446 - 446 )
Partition 448 (D.43426_448 - 448 )
Partition 449 (D.43429_449 - 449 )
Partition 450 (D.43430_450 - 450 )
Partition 451 (D.43429_451 - 451 )
Partition 452 (D.43434_452 - 452 )
Partition 453 (D.43435_453 - 453 )
Partition 456 (dtype_456 - 16 33 34 454 455 456 460 461 462 )
Partition 457 (D.43429_457 - 457 )
Partition 458 (D.43434_458 - 458 )
Partition 459 (D.43439_459 - 459 )
Partition 464 (D.43397_464 - 464 )
Partition 465 (D.43099_465 - 465 )
Partition 466 (D.43448_466 - 466 )
Partition 468 (D.43077_468 - 468 )
Partition 469 (D.43451_469 - 469 )
Partition 470 (D.43452_470 - 470 )
Partition 471 (D.43453_471 - 471 )
Partition 472 (D.43397_472 - 472 )
Partition 473 (D.43099_473 - 473 )
Partition 474 (D.43448_474 - 474 )
Partition 475 (xtype_475 - 475 )
Partition 476 (D.43077_476 - 476 )
Partition 477 (D.43451_477 - 477 )
Partition 478 (D.43452_478 - 478 )
Partition 479 (D.43453_479 - 479 )
Partition 480 (D.43073_480 - 480 )
Partition 482 (D.43099_482 - 482 )
Partition 487 (p_487 - 487 )
Partition 488 (p_488 - 488 )
Partition 490 (q_490 - 490 )
Partition 491 (q_491 - 491 )
Partition 494 (jb_msec.54_494 - 494 )
Partition 495 (D.43467_495 - 495 )
Partition 496 (D.43470_496 - 496 )
Partition 497 (D.43471_497 - 497 )
Partition 498 (D.43472_498 - 498 )
Partition 499 (D.43473_499 - 499 )
Partition 501 (jb_msec.54_501 - 501 )
Partition 502 (D.43474_502 - 502 )
Partition 504 (D.43189_504 - 504 )
Partition 505 (D.43190_505 - 505 )
Partition 508 (D.43189_508 - 508 )
Partition 509 (D.43190_509 - 509 )
Partition 512 (D.43077_512 - 512 )
Partition 513 (qlen.55_513 - 513 )
Partition 514 (maxqlen.56_514 - 514 )
Partition 515 (D.43294_515 - 515 )
Partition 516 (D.43486_516 - 516 )
Partition 517 (max_drift.57_517 - 517 )
Partition 518 (D.43488_518 - 518 )
Partition 519 (D.43073_519 - 519 )
Partition 520 (D.43073_520 - 520 )
Partition 521 (D.43491_521 - 521 )
Partition 522 (D.43492_522 - 522 )
Partition 523 (D.43073_523 - 523 )
Partition 524 (D.43073_524 - 524 )
Partition 525 (val_525 - 525 )
Partition 527 (D.43099_527 - 527 )
Partition 528 (v.58_528 - 528 )
Partition 529 (D.43073_529 - 529 )
Partition 530 (val_530 - 530 )
Partition 532 (D.43099_532 - 532 )
Partition 533 (v.59_533 - 533 )
Partition 534 (D.43099_534 - 534 )
Partition 535 (D.43506_535 - 535 )
Partition 536 (D.43486_536 - 536 )
Partition 537 (D.43099_537 - 537 )
Partition 538 (D.43506_538 - 538 )
Partition 539 (D.43509_539 - 539 )
Partition 540 (D.43294_540 - 540 )
Partition 541 (D.43510_541 - 541 )
Partition 542 (D.43077_542 - 542 )
Partition 543 (D.43511_543 - 543 )
Partition 544 (D.43099_544 - 544 )
Partition 545 (D.43512_545 - 545 )
Partition 546 (D.43099_546 - 546 )
Partition 547 (D.43099_547 - 547 )
Partition 548 (D.43506_548 - 548 )
Partition 549 (D.43515_549 - 549 )
Partition 550 (D.43099_550 - 550 )
Partition 551 (D.43512_551 - 551 )
Partition 552 (D.43486_552 - 552 )
Partition 553 (D.43099_553 - 553 )
Partition 554 (D.43512_554 - 554 )
Partition 555 (D.43518_555 - 555 )
Partition 556 (D.43294_556 - 556 )
Partition 557 (D.43519_557 - 557 )
Partition 558 (D.43099_558 - 558 )
Partition 559 (D.43520_559 - 559 )
Partition 560 (D.43099_560 - 560 )
Partition 561 (D.43520_561 - 561 )
Partition 562 (D.43523_562 - 562 )
Partition 563 (D.43077_563 - 563 )
Partition 564 (D.43099_564 - 564 )
Partition 565 (D.43520_565 - 565 )
Partition 566 (D.43073_566 - 566 )
Partition 567 (D.43099_567 - 567 )
Partition 568 (D.43520_568 - 568 )
Partition 569 (D.43523_569 - 569 )
Partition 570 (D.43099_570 - 570 )
Partition 571 (D.43524_571 - 571 )
Partition 572 (D.43099_572 - 572 )
Partition 573 (D.43524_573 - 573 )
Partition 574 (D.43527_574 - 574 )
Partition 575 (D.43077_575 - 575 )
Partition 576 (D.43099_576 - 576 )
Partition 577 (D.43524_577 - 577 )
Partition 578 (D.43073_578 - 578 )
Partition 579 (D.43099_579 - 579 )
Partition 580 (D.43524_580 - 580 )
Partition 581 (D.43527_581 - 581 )
Partition 582 (D.43531_582 - 582 )
Partition 583 (D.43073_583 - 583 )
Partition 584 (val_584 - 584 )
Partition 585 (D.43534_585 - 585 )
Partition 586 (D.43073_586 - 586 )
Partition 587 (val_587 - 587 )
Partition 588 (D.43536_588 - 588 )
Partition 589 (D.43099_589 - 589 )
Partition 590 (D.43073_590 - 590 )
Partition 591 (val_591 - 591 )
Partition 594 (D.43099_594 - 594 )
Partition 595 (delayi.60_595 - 595 )
Partition 596 (D.43099_596 - 596 )
Partition 597 (D.43542_597 - 597 )
Partition 598 (D.43077_598 - 598 )
Partition 599 (D.43099_599 - 599 )
Partition 600 (D.43542_600 - 600 )
Partition 601 (D.43073_601 - 601 )
Partition 602 (D.43545_602 - 602 )
Partition 603 (D.43099_603 - 603 )
Partition 604 (D.43542_604 - 604 )
Partition 605 (D.43099_605 - 605 )
Partition 606 (D.43143_606 - 606 )
Partition 607 (D.43548_607 - 607 )
Partition 608 (D.43099_608 - 608 )
Partition 609 (D.43143_609 - 609 )
Partition 610 (D.43551_610 - 610 )
Partition 611 (D.43077_611 - 611 )
Partition 612 (D.43099_612 - 612 )
Partition 613 (D.43143_613 - 613 )
Partition 614 (D.43171_614 - 614 )
Partition 615 (D.43174_615 - 615 )
Partition 616 (D.43179_616 - 616 )
Partition 617 (D.43073_617 - 617 )
Partition 618 (D.43171_618 - 618 )
Partition 619 (D.43172_619 - 619 )
Partition 620 (D.43073_620 - 620 )
Partition 621 (D.43073_621 - 621 )
Partition 622 (D.43552_622 - 622 )
Partition 623 (D.43073_623 - 623 )
Partition 624 (D.43077_624 - 624 )
Partition 625 (err.45_625 - 625 )
Partition 628 (D.43073_628 - 628 )
Partition 630 (D.43073_630 - 630 )
Partition 631 (D.43555_631 - 631 )
Partition 632 (D.43073_632 - 632 )
Partition 633 (D.43558_633 - 633 )
Partition 634 (D.43561_634 - 634 )
Partition 635 (D.43562_635 - 635 )
Partition 636 (D.43561_636 - 636 )
Partition 637 (D.43565_637 - 637 )
Partition 638 (D.43096_638 - 638 )
Partition 639 (D.43073_639 - 639 )
Partition 640 (D.43570_640 - 640 )
Partition 641 (D.43096_641 - 641 )
Partition 642 (remote_host_642 - 642 )
Partition 643 (D.43096_643 - 643 )
Partition 644 (remote_port_644 - 644 )
Partition 645 (D.43574_645 - 645 )
Partition 646 (D.43575_646 - 646 )
Partition 647 (D.43576_647 - 647 )
Partition 648 (D.43561_648 - 648 )
Partition 649 (D.43578_649 - 649 )
Partition 650 (D.39400_650 - 650 )
Partition 651 (D.43561_651 - 651 )
Partition 652 (D.43565_652 - 652 )
Partition 653 (D.43073_653 - 653 )
Partition 654 (D.43581_654 - 654 )
Partition 655 (D.43073_655 - 655 )
Partition 656 (D.43582_656 - 656 )
Partition 657 (D.43583_657 - 657 )
Partition 658 (D.43561_658 - 658 )
Partition 659 (D.43578_659 - 659 )
Partition 660 (D.43561_660 - 660 )
Partition 661 (D.43565_661 - 661 )
Partition 662 (D.43584_662 - 662 )
Partition 663 (D.43073_663 - 663 )
Partition 664 (D.43585_664 - 664 )
Partition 665 (D.43096_665 - 665 )
Partition 666 (D.43588_666 - 666 )
Partition 667 (D.43073_667 - 667 )
Partition 668 (D.43591_668 - 668 )
Partition 669 (D.43171_669 - 669 )
Partition 670 (D.43172_670 - 670 )
Partition 671 (D.43592_671 - 671 )
Partition 672 (D.43593_672 - 672 )
Partition 673 (D.43561_673 - 673 )
Partition 674 (D.43578_674 - 674 )
Partition 675 (D.43561_675 - 675 )
Partition 676 (D.43565_676 - 676 )
Partition 677 (D.43584_677 - 677 )
Partition 678 (D.43561_678 - 678 )
Partition 679 (D.43594_679 - 679 )
Partition 680 (D.43595_680 - 680 )
Partition 681 (D.43189_681 - 681 )
Partition 682 (D.43190_682 - 682 )
Partition 683 (D.43096_683 - 683 )
Partition 684 (D.43561_684 - 684 )
Partition 685 (D.43594_685 - 685 )
Partition 686 (D.43592_686 - 686 )
Partition 687 (D.43593_687 - 687 )
Partition 688 (D.43073_688 - 688 )
Partition 689 (D.43191_689 - 689 )
Partition 690 (D.43073_690 - 690 )
Partition 691 (D.43096_691 - 691 )
Partition 692 (D.43073_692 - 692 )
Partition 693 (D.43598_693 - 693 )
Partition 694 (rport_694 - 694 )
Partition 696 (D.43073_696 - 696 )
Partition 697 (rport_697 - 697 )
Partition 700 (D.43096_700 - 700 )
Partition 701 (D.43561_701 - 701 )
Partition 702 (D.43578_702 - 702 )
Partition 703 (D.43561_703 - 703 )
Partition 704 (D.43565_704 - 704 )
Partition 705 (D.43606_705 - 705 )
Partition 706 (err.45_706 - 706 )
Partition 707 (D.43561_707 - 707 )
Partition 708 (D.43578_708 - 708 )
Partition 709 (D.43561_709 - 709 )
Partition 710 (D.43565_710 - 710 )
Partition 711 (D.43584_711 - 711 )
Partition 712 (D.43612_712 - 712 )
Partition 713 (D.43073_713 - 713 )
Partition 714 (D.43615_714 - 714 )
Partition 715 (D.43073_715 - 715 )
Partition 716 (val_716 - 716 )
Partition 717 (D.43619_717 - 717 )
Partition 718 (D.43096_718 - 718 )
Partition 719 (D.43073_719 - 719 )
Partition 720 (D.43620_720 - 720 )
Partition 721 (D.43270_721 - 721 )
Partition 722 (D.43271_722 - 722 )
Partition 723 (D.43102_723 - 723 )
Partition 724 (D.43103_724 - 724 )
Partition 725 (D.43625_725 - 725 )
Partition 726 (D.43073_726 - 726 )
Partition 727 (D.43628_727 - 727 )
Partition 728 (D.43073_728 - 728 )
Partition 729 (val_729 - 729 )
Partition 730 (D.43632_730 - 730 )
Partition 731 (D.43114_731 - 731 )
Partition 732 (D.43115_732 - 732 )
Partition 733 (timer_name_733 - 733 )
Partition 734 (D.43073_734 - 734 )
Partition 735 (D.43633_735 - 735 )
Partition 736 (D.43171_736 - 736 )
Partition 737 (D.43172_737 - 737 )
Partition 738 (D.43592_738 - 738 )
Partition 739 (D.43593_739 - 739 )
Partition 740 (D.43561_740 - 740 )
Partition 741 (D.43578_741 - 741 )
Partition 742 (D.43561_742 - 742 )
Partition 743 (D.43565_743 - 743 )
Partition 744 (D.43584_744 - 744 )
Partition 745 (D.43561_745 - 745 )
Partition 746 (D.43594_746 - 746 )
Partition 747 (D.43595_747 - 747 )
Partition 748 (D.43634_748 - 748 )
Partition 749 (D.43635_749 - 749 )
Partition 750 (D.43096_750 - 750 )
Partition 751 (D.43636_751 - 751 )
Partition 752 (D.43096_752 - 752 )
Partition 753 (D.43561_753 - 753 )
Partition 754 (D.43594_754 - 754 )
Partition 755 (D.43099_755 - 755 )
Partition 756 (timer_name_756 - 756 )
Partition 757 (D.43073_757 - 757 )
Partition 758 (var_758 - 758 )
Partition 759 (timer_name_759 - 759 )
Partition 760 (D.43096_760 - 760 )
Partition 761 (D.43592_761 - 761 )
Partition 762 (D.43102_762 - 762 )
Partition 763 (D.43103_763 - 763 )
Partition 764 (D.43137_764 - 764 )
Partition 765 (D.43138_765 - 765 )
Partition 766 (D.43647_766 - 766 )
Partition 767 (D.43073_767 - 767 )
Partition 768 (D.43650_768 - 768 )
Partition 769 (D.43073_769 - 769 )
Partition 770 (val_770 - 770 )
Partition 771 (D.43654_771 - 771 )
Partition 772 (D.43073_772 - 772 )
Partition 773 (D.43655_773 - 773 )
Partition 774 (D.43114_774 - 774 )
Partition 775 (D.43115_775 - 775 )
Partition 776 (D.43073_776 - 776 )
Partition 777 (D.43658_777 - 777 )
Partition 778 (D.43270_778 - 778 )
Partition 779 (D.43271_779 - 779 )
Partition 780 (D.43661_780 - 780 )
Partition 781 (D.43662_781 - 781 )
Partition 782 (D.43184_782 - 782 )
Partition 783 (D.43592_783 - 783 )
Partition 784 (D.43561_784 - 784 )
Partition 785 (D.43578_785 - 785 )
Partition 786 (D.43561_786 - 786 )
Partition 787 (D.43565_787 - 787 )
Partition 788 (D.43561_788 - 788 )
Partition 789 (D.43594_789 - 789 )
Partition 790 (D.43663_790 - 790 )
Partition 791 (D.43664_791 - 791 )
Partition 792 (D.43073_792 - 792 )
Partition 793 (D.43666_793 - 793 )
Partition 796 (D.43073_796 - 796 )
Partition 797 (D.43670_797 - 797 )
Partition 798 (D.43171_798 - 798 )
Partition 799 (D.43172_799 - 799 )
Partition 800 (D.43592_800 - 800 )
Partition 801 (D.43593_801 - 801 )
Partition 802 (D.43561_802 - 802 )
Partition 803 (D.43578_803 - 803 )
Partition 804 (D.43561_804 - 804 )
Partition 805 (D.43565_805 - 805 )
Partition 806 (D.43584_806 - 806 )
Partition 807 (D.43561_807 - 807 )
Partition 808 (D.43594_808 - 808 )
Partition 809 (D.43595_809 - 809 )
Partition 810 (D.43096_810 - 810 )
Partition 811 (D.43672_811 - 811 )
Partition 814 (D.43096_814 - 814 )
Partition 815 (D.43676_815 - 815 )
Partition 816 (D.43679_816 - 816 )
Partition 817 (D.43096_817 - 817 )
Partition 818 (D.43682_818 - 818 )
Partition 819 (D.43096_819 - 819 )
Partition 820 (D.43096_820 - 820 )
Partition 821 (D.43685_821 - 821 )
Partition 822 (D.43073_822 - 822 )
Partition 823 (D.43073_823 - 823 )
Partition 824 (ssrc_824 - 824 )
Partition 825 (ssrc_ul_825 - 825 )
Partition 826 (D.43096_826 - 826 )
Partition 827 (D.43096_827 - 827 )
Partition 828 (D.43689_828 - 828 )
Partition 829 (D.43690_829 - 829 )
Partition 830 (D.43096_830 - 830 )
Partition 831 (D.43690_831 - 831 )
Partition 832 (D.43693_832 - 832 )
Partition 833 (D.43694_833 - 833 )
Partition 834 (D.43096_834 - 834 )
Partition 835 (D.43697_835 - 835 )
Partition 836 (D.43698_836 - 836 )
Partition 837 (D.43699_837 - 837 )
Partition 838 (D.43700_838 - 838 )
Partition 839 (D.43702_839 - 839 )
Partition 842 (D.43706_842 - 842 )
Partition 843 (D.43073_843 - 843 )
Partition 845 (D.43099_845 - 845 )
Partition 847 (D.43073_847 - 847 )
Partition 848 (rport_848 - 848 )
Partition 852 (D.43713_852 - 852 )
Partition 853 (D.43716_853 - 853 )
Partition 854 (D.43096_854 - 854 )
Partition 855 (D.43717_855 - 855 )
Partition 856 (D.43718_856 - 856 )
Partition 858 (interval.64_858 - 858 )
Partition 859 (D.43721_859 - 859 )
Partition 860 (interval_860 - 860 )
Partition 861 (D.43716_861 - 861 )
Partition 862 (D.43717_862 - 862 )
Partition 863 (D.43724_863 - 863 )
Partition 864 (D.43096_864 - 864 )
Partition 865 (D.43717_865 - 865 )
Partition 866 (D.43718_866 - 866 )
Partition 867 (D.43725_867 - 867 )
Partition 868 (D.43726_868 - 868 )
Partition 869 (D.43717_869 - 869 )
Partition 870 (D.43725_870 - 870 )
Partition 871 (D.43732_871 - 871 )
Partition 872 (D.43693_872 - 872 )
Partition 873 (D.43733_873 - 873 )
Partition 874 (D.39417_874 - 874 )
Partition 875 (D.43725_875 - 875 )
Partition 876 (D.43735_876 - 876 )
Partition 877 (D.43693_877 - 877 )
Partition 878 (D.43736_878 - 878 )
Partition 879 (D.43096_879 - 879 )
Partition 880 (D.43697_880 - 880 )
Partition 881 (D.43698_881 - 881 )
Partition 882 (D.43699_882 - 882 )
Partition 883 (D.43700_883 - 883 )
Partition 884 (D.43739_884 - 884 )
Partition 887 (D.43706_887 - 887 )
Partition 888 (D.43743_888 - 888 )
Partition 890 (D.43747_890 - 890 )
Partition 891 (D.43429_891 - 891 )
Partition 892 (D.43750_892 - 892 )
Partition 893 (D.43429_893 - 893 )
Partition 894 (D.43434_894 - 894 )
Partition 895 (D.43754_895 - 895 )
Partition 898 (dtype_898 - 39 896 897 898 )
Partition 900 (D.43717_900 - 900 )
Partition 901 (D.43099_901 - 901 )
Partition 902 (D.43760_902 - 902 )
Partition 904 (D.43096_904 - 904 )
Partition 905 (D.43763_905 - 905 )
Partition 906 (D.43764_906 - 906 )
Partition 907 (D.43765_907 - 907 )
Partition 908 (D.43717_908 - 908 )
Partition 909 (D.43099_909 - 909 )
Partition 910 (D.43760_910 - 910 )
Partition 911 (xtype_911 - 911 )
Partition 912 (D.43096_912 - 912 )
Partition 913 (D.43763_913 - 913 )
Partition 914 (D.43764_914 - 914 )
Partition 915 (D.43765_915 - 915 )
Partition 916 (D.43073_916 - 916 )
Partition 917 (val_917 - 917 )
Partition 918 (D.43772_918 - 918 )
Partition 919 (D.43096_919 - 919 )
Partition 920 (D.43773_920 - 920 )
Partition 921 (D.43099_921 - 921 )
Partition 922 (D.43774_922 - 922 )
Partition 923 (D.43775_923 - 923 )
Partition 924 (D.43073_924 - 924 )
Partition 925 (D.43561_925 - 925 )
Partition 926 (D.43594_926 - 926 )
Partition 927 (D.43595_927 - 927 )
Partition 928 (D.43096_928 - 928 )
Partition 929 (D.43776_929 - 929 )
Partition 930 (D.43073_930 - 930 )
Partition 931 (D.43689_931 - 931 )
Partition 932 (D.43073_932 - 932 )
Partition 933 (D.43777_933 - 933 )
Partition 934 (D.43096_934 - 934 )
Partition 935 (err.45_935 - 935 )
Partition 938 (D.43073_938 - 938 )
Partition 939 (D.43262_939 - 939 )
Partition 940 (D.43790_940 - 940 )
Partition 941 (D.43791_941 - 941 )
Partition 943 (D.43073_943 - 943 )
Partition 944 (status_944 - 4 5 27 43 47 61 70 73 629 942 944 945 )
Partition 946 (.MEM_946 - 946 )
Partition 947 (.MEM_947 - 947 )
Partition 948 (.MEM_948 - 948 )
Partition 949 (.MEM_949 - 949 )
Partition 950 (.MEM_950 - 950 )
Partition 951 (.MEM_951 - 951 )
Partition 952 (.MEM_952 - 952 )
Partition 953 (.MEM_953 - 953 )
Partition 954 (.MEM_954 - 954 )
Partition 955 (.MEM_955 - 955 )
Partition 956 (.MEM_956 - 956 )
Partition 957 (.MEM_957 - 957 )
Partition 958 (.MEM_958 - 958 )
Partition 959 (.MEM_959 - 959 )
Partition 960 (.MEM_960 - 960 )
Partition 961 (.MEM_961 - 961 )
Partition 962 (.MEM_962 - 962 )
Partition 963 (.MEM_963 - 963 )
Partition 964 (.MEM_964 - 964 )
Partition 965 (.MEM_965 - 965 )
Partition 966 (.MEM_966 - 966 )
Partition 967 (.MEM_967 - 967 )
Partition 968 (.MEM_968 - 968 )
Partition 969 (.MEM_969 - 969 )
Partition 970 (.MEM_970 - 970 )
Partition 971 (.MEM_971 - 971 )
Partition 972 (.MEM_972 - 972 )
Partition 973 (.MEM_973 - 973 )
Partition 974 (.MEM_974 - 974 )
Partition 975 (.MEM_975 - 975 )
Partition 976 (.MEM_976 - 976 )
Partition 977 (.MEM_977 - 977 )
Partition 978 (.MEM_978 - 978 )
Partition 979 (.MEM_979 - 979 )
Partition 980 (.MEM_980 - 980 )
Partition 981 (.MEM_981 - 981 )
Partition 982 (.MEM_982 - 982 )
Partition 983 (.MEM_983 - 983 )
Partition 984 (.MEM_984 - 984 )
Partition 985 (.MEM_985 - 985 )
Partition 986 (.MEM_986 - 986 )
Partition 987 (.MEM_987 - 987 )
Partition 988 (.MEM_988 - 988 )
Partition 989 (.MEM_989 - 989 )
Partition 990 (.MEM_990 - 990 )
Partition 991 (.MEM_991 - 991 )
Partition 992 (.MEM_992 - 992 )
Partition 993 (.MEM_993 - 993 )
Partition 994 (.MEM_994 - 994 )
Partition 995 (.MEM_995 - 995 )
Partition 996 (.MEM_996 - 996 )
Partition 997 (.MEM_997 - 997 )
Partition 998 (.MEM_998 - 998 )
Partition 999 (.MEM_999 - 999 )
Partition 1000 (.MEM_1000 - 1000 )
Partition 1001 (.MEM_1001 - 1001 )
Partition 1002 (.MEM_1002 - 1002 )
Partition 1003 (.MEM_1003 - 1003 )
Partition 1004 (.MEM_1004 - 1004 )
Partition 1005 (.MEM_1005 - 1005 )
Partition 1006 (.MEM_1006 - 1006 )
Partition 1007 (.MEM_1007 - 1007 )
Partition 1008 (.MEM_1008 - 1008 )
Partition 1009 (.MEM_1009 - 1009 )
Partition 1010 (.MEM_1010 - 1010 )
Partition 1011 (.MEM_1011 - 1011 )
Partition 1012 (.MEM_1012 - 1012 )
Partition 1013 (.MEM_1013 - 1013 )
Partition 1014 (.MEM_1014 - 1014 )
Partition 1015 (.MEM_1015 - 1015 )
Partition 1016 (.MEM_1016 - 1016 )
Partition 1017 (.MEM_1017 - 1017 )
Partition 1018 (.MEM_1018 - 1018 )
Partition 1019 (.MEM_1019 - 1019 )
Partition 1020 (.MEM_1020 - 1020 )
Partition 1021 (.MEM_1021 - 1021 )
Partition 1022 (.MEM_1022 - 1022 )
Partition 1023 (.MEM_1023 - 1023 )
Partition 1024 (.MEM_1024 - 1024 )
Partition 1025 (.MEM_1025 - 1025 )
Partition 1026 (.MEM_1026 - 1026 )
Partition 1027 (.MEM_1027(D) - 1027 )
Partition 1028 (.MEM_1028 - 1028 )
Partition 1029 (.MEM_1029 - 1029 )
Partition 1030 (.MEM_1030 - 1030 )
Partition 1031 (.MEM_1031 - 1031 )
Partition 1032 (.MEM_1032 - 1032 )
Partition 1033 (.MEM_1033 - 1033 )
Partition 1034 (.MEM_1034 - 1034 )
Partition 1035 (.MEM_1035 - 1035 )
Partition 1036 (.MEM_1036 - 1036 )
Partition 1037 (.MEM_1037 - 1037 )
Partition 1038 (.MEM_1038 - 1038 )
Partition 1039 (.MEM_1039 - 1039 )
Partition 1040 (.MEM_1040 - 1040 )
Partition 1041 (.MEM_1041 - 1041 )
Partition 1042 (.MEM_1042 - 1042 )
Partition 1043 (.MEM_1043 - 1043 )
Partition 1044 (.MEM_1044 - 1044 )
Partition 1045 (.MEM_1045 - 1045 )
Partition 1046 (.MEM_1046 - 1046 )
Partition 1047 (.MEM_1047 - 1047 )
Partition 1048 (.MEM_1048 - 1048 )
Partition 1049 (.MEM_1049 - 1049 )
Partition 1050 (.MEM_1050 - 1050 )
Partition 1051 (.MEM_1051 - 1051 )
Partition 1052 (.MEM_1052 - 1052 )
Partition 1053 (.MEM_1053 - 1053 )
Partition 1054 (.MEM_1054 - 1054 )
Partition 1055 (.MEM_1055 - 1055 )
Partition 1056 (.MEM_1056 - 1056 )
Partition 1057 (.MEM_1057 - 1057 )
Partition 1058 (.MEM_1058 - 1058 )
Partition 1059 (.MEM_1059 - 1059 )
Partition 1060 (.MEM_1060 - 1060 )
Partition 1061 (.MEM_1061 - 1061 )
Partition 1062 (.MEM_1062 - 1062 )
Partition 1063 (.MEM_1063 - 1063 )
Partition 1064 (.MEM_1064 - 1064 )
Partition 1065 (.MEM_1065 - 1065 )
Partition 1066 (.MEM_1066 - 1066 )
Partition 1067 (.MEM_1067 - 1067 )
Partition 1068 (.MEM_1068 - 1068 )
Partition 1069 (.MEM_1069 - 1069 )
Partition 1070 (.MEM_1070 - 1070 )
Partition 1071 (.MEM_1071 - 1071 )
Partition 1072 (.MEM_1072 - 1072 )
Partition 1073 (.MEM_1073 - 1073 )
Partition 1074 (.MEM_1074 - 1074 )
Partition 1075 (.MEM_1075 - 1075 )
Partition 1076 (.MEM_1076 - 1076 )
Partition 1077 (.MEM_1077 - 1077 )
Partition 1078 (.MEM_1078 - 1078 )
Partition 1079 (.MEM_1079 - 1079 )
Partition 1080 (.MEM_1080 - 1080 )
Partition 1081 (.MEM_1081 - 1081 )
Partition 1082 (.MEM_1082 - 1082 )
Partition 1083 (.MEM_1083 - 1083 )
Partition 1084 (.MEM_1084 - 1084 )
Partition 1085 (.MEM_1085 - 1085 )
Partition 1086 (.MEM_1086 - 1086 )
Partition 1087 (.MEM_1087 - 1087 )
Partition 1088 (.MEM_1088 - 1088 )
Partition 1089 (.MEM_1089 - 1089 )
Partition 1090 (.MEM_1090 - 1090 )
Partition 1091 (.MEM_1091 - 1091 )
Partition 1092 (.MEM_1092 - 1092 )
Partition 1093 (.MEM_1093 - 1093 )
Partition 1094 (.MEM_1094 - 1094 )
Partition 1095 (.MEM_1095 - 1095 )
Partition 1096 (.MEM_1096 - 1096 )
Partition 1097 (.MEM_1097 - 1097 )
Partition 1098 (.MEM_1098 - 1098 )
Partition 1099 (.MEM_1099 - 1099 )
Partition 1100 (.MEM_1100 - 1100 )
Partition 1101 (.MEM_1101 - 1101 )
Partition 1102 (.MEM_1102 - 1102 )
Partition 1103 (.MEM_1103 - 1103 )
Partition 1104 (.MEM_1104 - 1104 )
Partition 1105 (.MEM_1105 - 1105 )
Partition 1106 (.MEM_1106 - 1106 )
Partition 1107 (.MEM_1107 - 1107 )
Partition 1108 (.MEM_1108 - 1108 )
Partition 1109 (.MEM_1109 - 1109 )
Partition 1110 (.MEM_1110 - 1110 )
Partition 1111 (.MEM_1111 - 1111 )
Partition 1112 (.MEM_1112 - 1112 )
Partition 1113 (.MEM_1113 - 1113 )
Partition 1114 (.MEM_1114 - 1114 )
Partition 1115 (.MEM_1115 - 1115 )
Partition 1116 (.MEM_1116 - 1116 )
Partition 1117 (.MEM_1117 - 1117 )
Partition 1118 (.MEM_1118 - 1118 )
Partition 1119 (.MEM_1119 - 1119 )
Partition 1120 (.MEM_1120 - 1120 )
Partition 1121 (.MEM_1121 - 1121 )
Partition 1122 (.MEM_1122 - 1122 )
Partition 1123 (.MEM_1123 - 1123 )
Partition 1124 (.MEM_1124 - 1124 )
Partition 1125 (.MEM_1125 - 1125 )
Partition 1126 (.MEM_1126 - 1126 )
Partition 1127 (.MEM_1127 - 1127 )
Partition 1128 (.MEM_1128 - 1128 )
Partition 1129 (.MEM_1129 - 1129 )
Partition 1130 (.MEM_1130 - 1130 )
Partition 1131 (.MEM_1131 - 1131 )
Partition 1132 (.MEM_1132 - 1132 )
Partition 1133 (.MEM_1133 - 1133 )
Partition 1134 (.MEM_1134 - 1134 )
Partition 1135 (.MEM_1135 - 1135 )
Partition 1136 (.MEM_1136 - 1136 )
Partition 1137 (.MEM_1137 - 1137 )
Partition 1138 (.MEM_1138 - 1138 )
Partition 1139 (.MEM_1139 - 1139 )
Partition 1140 (.MEM_1140 - 1140 )
Partition 1141 (.MEM_1141 - 1141 )
Partition 1142 (.MEM_1142 - 1142 )
Partition 1143 (.MEM_1143 - 1143 )
Partition 1144 (.MEM_1144 - 1144 )
Partition 1145 (.MEM_1145 - 1145 )
Partition 1146 (.MEM_1146 - 1146 )
Partition 1147 (.MEM_1147 - 1147 )
Partition 1148 (.MEM_1148 - 1148 )
Partition 1149 (.MEM_1149 - 1149 )
Partition 1150 (.MEM_1150 - 1150 )
Partition 1151 (.MEM_1151 - 1151 )
Partition 1152 (.MEM_1152 - 1152 )
Partition 1153 (.MEM_1153 - 1153 )
Partition 1154 (.MEM_1154 - 1154 )
Partition 1155 (.MEM_1155 - 1155 )
Partition 1156 (.MEM_1156 - 1156 )
Partition 1157 (.MEM_1157 - 1157 )
Partition 1158 (.MEM_1158 - 1158 )
Partition 1159 (.MEM_1159 - 1159 )
Partition 1160 (.MEM_1160 - 1160 )
Partition 1161 (.MEM_1161 - 1161 )
Partition 1162 (.MEM_1162 - 1162 )
Partition 1163 (.MEM_1163 - 1163 )
Partition 1164 (.MEM_1164 - 1164 )
Partition 1165 (.MEM_1165 - 1165 )
Partition 1166 (.MEM_1166 - 1166 )
Partition 1167 (.MEM_1167 - 1167 )
Partition 1168 (.MEM_1168 - 1168 )
Partition 1169 (.MEM_1169 - 1169 )
Partition 1170 (.MEM_1170 - 1170 )
Partition 1171 (.MEM_1171 - 1171 )
Partition 1172 (.MEM_1172 - 1172 )
Partition 1173 (.MEM_1173 - 1173 )
Partition 1174 (.MEM_1174 - 1174 )
Partition 1175 (.MEM_1175 - 1175 )
Partition 1176 (.MEM_1176 - 1176 )
Partition 1177 (.MEM_1177 - 1177 )
Partition 1178 (.MEM_1178 - 1178 )
Partition 1179 (.MEM_1179 - 1179 )
Partition 1180 (.MEM_1180 - 1180 )
Partition 1181 (.MEM_1181 - 1181 )
Partition 1182 (.MEM_1182 - 1182 )
Partition 1183 (.MEM_1183 - 1183 )
Partition 1184 (.MEM_1184 - 1184 )
Partition 1185 (.MEM_1185 - 1185 )
Partition 1186 (.MEM_1186 - 1186 )
Partition 1187 (.MEM_1187 - 1187 )
Partition 1188 (.MEM_1188 - 1188 )
Partition 1189 (.MEM_1189 - 1189 )
Partition 1190 (.MEM_1190 - 1190 )
Partition 1191 (.MEM_1191 - 1191 )
Partition 1192 (.MEM_1192 - 1192 )
Partition 1193 (.MEM_1193 - 1193 )
Partition 1194 (.MEM_1194 - 1194 )
Partition 1195 (.MEM_1195 - 1195 )
Partition 1196 (.MEM_1196 - 1196 )
Partition 1197 (.MEM_1197 - 1197 )
Partition 1198 (.MEM_1198 - 1198 )
Partition 1199 (.MEM_1199 - 1199 )
Partition 1200 (.MEM_1200 - 1200 )
Partition 1201 (.MEM_1201 - 1201 )
Partition 1202 (.MEM_1202 - 1202 )
Partition 1203 (.MEM_1203 - 1203 )
Partition 1204 (.MEM_1204 - 1204 )
Partition 1205 (.MEM_1205 - 1205 )
Partition 1206 (.MEM_1206 - 1206 )
Partition 1207 (.MEM_1207 - 1207 )
Partition 1208 (.MEM_1208 - 1208 )
Partition 1209 (.MEM_1209 - 1209 )
Partition 1210 (.MEM_1210 - 1210 )
Partition 1211 (.MEM_1211 - 1211 )
Partition 1212 (.MEM_1212 - 1212 )
Partition 1213 (.MEM_1213 - 1213 )
Partition 1214 (.MEM_1214 - 1214 )
Partition 1215 (.MEM_1215 - 1215 )
Partition 1216 (.MEM_1216 - 1216 )
Partition 1217 (.MEM_1217 - 1217 )
Partition 1218 (.MEM_1218 - 1218 )
Partition 1219 (.MEM_1219 - 1219 )
Partition 1220 (.MEM_1220 - 1220 )
Partition 1221 (.MEM_1221 - 1221 )
Partition 1222 (.MEM_1222 - 1222 )
Partition 1223 (.MEM_1223 - 1223 )
Partition 1224 (.MEM_1224 - 1224 )
Partition 1225 (.MEM_1225 - 1225 )
Partition 1226 (.MEM_1226 - 1226 )
Partition 1227 (.MEM_1227 - 1227 )
Partition 1228 (.MEM_1228 - 1228 )
Partition 1229 (.MEM_1229 - 1229 )
Partition 1230 (.MEM_1230 - 1230 )
Partition 1231 (.MEM_1231 - 1231 )
Partition 1232 (.MEM_1232 - 1232 )
Partition 1233 (.MEM_1233 - 1233 )
Partition 1234 (.MEM_1234 - 1234 )
Partition 1235 (.MEM_1235 - 1235 )
Partition 1236 (.MEM_1236 - 1236 )
Partition 1237 (.MEM_1237 - 1237 )
Partition 1238 (.MEM_1238 - 1238 )
Partition 1239 (.MEM_1239 - 1239 )
Partition 1240 (.MEM_1240 - 1240 )
Partition 1241 (.MEM_1241 - 1241 )
Partition 1242 (.MEM_1242 - 1242 )
Partition 1243 (.MEM_1243 - 1243 )
Partition 1244 (.MEM_1244 - 1244 )
Partition 1245 (.MEM_1245 - 1245 )
Partition 1246 (.MEM_1246 - 1246 )
Partition 1247 (.MEM_1247 - 1247 )
Partition 1248 (.MEM_1248 - 1248 )
Partition 1249 (.MEM_1249 - 1249 )
Partition 1250 (.MEM_1250 - 1250 )
Partition 1251 (.MEM_1251 - 1251 )
Partition 1252 (.MEM_1252 - 1252 )
Partition 1253 (.MEM_1253 - 1253 )
Partition 1254 (.MEM_1254 - 1254 )
Partition 1255 (.MEM_1255 - 1255 )
Partition 1256 (.MEM_1256 - 1256 )
Partition 1257 (.MEM_1257 - 1257 )
Partition 1258 (.MEM_1258 - 1258 )
Partition 1259 (.MEM_1259 - 1259 )
Partition 1260 (.MEM_1260 - 1260 )
Partition 1261 (.MEM_1261 - 1261 )
Partition 1262 (.MEM_1262 - 1262 )
Partition 1263 (.MEM_1263 - 1263 )
Partition 1264 (.MEM_1264 - 1264 )
Partition 1265 (.MEM_1265 - 1265 )
Partition 1266 (.MEM_1266 - 1266 )
Partition 1267 (.MEM_1267 - 1267 )
Partition 1268 (.MEM_1268 - 1268 )
Partition 1269 (.MEM_1269 - 1269 )
Partition 1270 (.MEM_1270 - 1270 )
Partition 1271 (.MEM_1271 - 1271 )
Partition 1272 (.MEM_1272 - 1272 )
Partition 1273 (.MEM_1273 - 1273 )
Partition 1274 (.MEM_1274 - 1274 )
Partition 1275 (.MEM_1275 - 1275 )
Partition 1276 (.MEM_1276 - 1276 )
Partition 1277 (.MEM_1277 - 1277 )
Partition 1278 (.MEM_1278 - 1278 )
Partition 1279 (.MEM_1279 - 1279 )
Partition 1280 (.MEM_1280 - 1280 )
Partition 1281 (.MEM_1281 - 1281 )
Partition 1282 (.MEM_1282 - 1282 )
Partition 1283 (.MEM_1283 - 1283 )
Partition 1284 (.MEM_1284 - 1284 )
Partition 1285 (.MEM_1285 - 1285 )
Partition 1286 (.MEM_1286 - 1286 )
Partition 1287 (.MEM_1287 - 1287 )
Partition 1288 (.MEM_1288 - 1288 )
Partition 1289 (.MEM_1289 - 1289 )
Partition 1290 (.MEM_1290 - 1290 )
Partition 1291 (.MEM_1291 - 1291 )
Partition 1292 (.MEM_1292 - 1292 )
Partition 1293 (.MEM_1293 - 1293 )
Partition 1294 (.MEM_1294 - 1294 )
Partition 1295 (.MEM_1295 - 1295 )
Partition 1296 (.MEM_1296 - 1296 )
Partition 1297 (.MEM_1297 - 1297 )
Partition 1298 (.MEM_1298 - 1298 )
Partition 1299 (.MEM_1299 - 1299 )
Partition 1300 (.MEM_1300 - 1300 )
Partition 1301 (.MEM_1301 - 1301 )
Partition 1302 (.MEM_1302 - 1302 )
Partition 1303 (.MEM_1303 - 1303 )
Partition 1304 (.MEM_1304 - 1304 )
Partition 1305 (.MEM_1305 - 1305 )
Partition 1306 (.MEM_1306 - 1306 )
Partition 1307 (.MEM_1307 - 1307 )
Partition 1308 (.MEM_1308 - 1308 )
Partition 1309 (.MEM_1309 - 1309 )
Partition 1310 (.MEM_1310 - 1310 )
Partition 1311 (.MEM_1311 - 1311 )
Partition 1312 (.MEM_1312 - 1312 )
Partition 1313 (.MEM_1313 - 1313 )
Partition 1314 (.MEM_1314 - 1314 )
Partition 1315 (.MEM_1315 - 1315 )
Partition 1316 (.MEM_1316 - 1316 )
Partition 1317 (.MEM_1317 - 1317 )
Partition 1318 (.MEM_1318 - 1318 )
Partition 1319 (.MEM_1319 - 1319 )
Partition 1320 (.MEM_1320 - 1320 )
Partition 1321 (.MEM_1321 - 1321 )
Partition 1322 (.MEM_1322 - 1322 )
Partition 1323 (.MEM_1323 - 1323 )
Partition 1324 (.MEM_1324 - 1324 )
Partition 1325 (.MEM_1325 - 1325 )
Partition 1326 (.MEM_1326 - 1326 )
Partition 1327 (.MEM_1327 - 1327 )
Partition 1328 (.MEM_1328 - 1328 )
Partition 1329 (.MEM_1329 - 1329 )
Partition 1330 (.MEM_1330 - 1330 )
Partition 1331 (.MEM_1331 - 1331 )
Partition 1332 (.MEM_1332 - 1332 )
Partition 1333 (.MEM_1333 - 1333 )
Partition 1334 (.MEM_1334 - 1334 )
Partition 1335 (.MEM_1335 - 1335 )
Partition 1336 (.MEM_1336 - 1336 )
Partition 1340 (D.48093_1340 - 1340 )
Partition 1351 (D.48124_1351 - 1351 )
Partition 1353 (.MEM_1353 - 1353 )
Partition 1354 (.MEM_1354 - 1354 )
Partition 1355 (.MEM_1355 - 1355 )
Partition 1356 (.MEM_1356 - 1356 )
Partition 1357 (D.48083_1357 - 178 1337 1357 )
Partition 1358 (.MEM_1358 - 1358 )
Partition 1359 (D.48086_1359 - 410 1338 1359 )
Partition 1360 (.MEM_1360 - 1360 )
Partition 1361 (interval_1361 - 14 417 420 1339 1361 )
Partition 1362 (D.48092_1362 - 447 1341 1362 )
Partition 1363 (.MEM_1363 - 1363 )
Partition 1364 (jb_msec_1364 - 17 484 500 1342 1364 )
Partition 1365 (.MEM_1365 - 1365 )
Partition 1366 (maxlen_1366 - 18 485 489 1343 1366 )
Partition 1367 (.MEM_1367 - 1367 )
Partition 1368 (D.48102_1368 - 492 1344 1368 )
Partition 1369 (.MEM_1369 - 1369 )
Partition 1370 (v_1370 - 526 1345 1370 )
Partition 1371 (.MEM_1371 - 1371 )
Partition 1372 (v_1372 - 531 1346 1372 )
Partition 1373 (.MEM_1373 - 1373 )
Partition 1374 (delayi_1374 - 23 592 593 1347 1374 )
Partition 1375 (.MEM_1375 - 1375 )
Partition 1376 (D.48114_1376 - 698 1348 1376 )
Partition 1377 (.MEM_1377 - 1377 )
Partition 1378 (D.48117_1378 - 850 1349 1378 )
Partition 1379 (.MEM_1379 - 1379 )
Partition 1380 (interval_1380 - 857 1350 1380 )
Partition 1381 (D.48123_1381 - 889 1352 1381 )

Coalesced D.43070_27 to status_944
Coalesced iftmp.46_28 to __result_233
Coalesced iftmp.52_33 to dtype_456
Coalesced iftmp.53_34 to dtype_456
Coalesced iftmp.66_39 to dtype_898
Coalesced D.43070_47 to status_944
Coalesced D.43201_178 to D.48083_1357
Coalesced iftmp.46_234 to __result_233
Coalesced iftmp.46_237 to __result_233
Coalesced D.39360_238 to __result_233
Coalesced D.43392_410 to D.48086_1359
Coalesced D.43423_447 to D.48092_1362
Coalesced iftmp.52_454 to dtype_456
Coalesced iftmp.52_455 to dtype_456
Coalesced iftmp.53_460 to dtype_456
Coalesced iftmp.53_461 to dtype_456
Coalesced D.43465_492 to D.48102_1368
Coalesced D.43605_698 to D.48114_1376
Coalesced D.43712_850 to D.48117_1378
Coalesced D.43744_889 to D.48123_1381
Coalesced iftmp.66_896 to dtype_898
Coalesced iftmp.66_897 to dtype_898
Coalesced D.43070_945 to status_944
Coalesced D.48084_1337 to D.48083_1357
Coalesced D.48087_1338 to D.48086_1359
Coalesced D.48090_1339 to interval_1361
Coalesced D.48094_1341 to D.48092_1362
Coalesced D.48097_1342 to jb_msec_1364
Coalesced D.48100_1343 to maxlen_1366
Coalesced D.48103_1344 to D.48102_1368
Coalesced D.48106_1345 to v_1370
Coalesced D.48109_1346 to v_1372
Coalesced D.48112_1347 to delayi_1374
Coalesced D.48115_1348 to D.48114_1376
Coalesced D.48118_1349 to D.48117_1378
Coalesced D.48121_1350 to interval_1380
Coalesced D.48125_1352 to D.48123_1381
Scope blocks after cleanups:

{ Scope block #0 
  const char * err;
  const char * val;
  switch_rtp_flag_t flags[39];
  switch_status_t status;
  char tmp[50];
  char * timer_name;
  const char * var;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_activate_rtp";
  void end = <<< error >>>; (unused)
  void video = <<< error >>>; (unused)
  static const char __func__[31] = "switch_core_media_activate_rtp";
  void video_up = <<< error >>>; (unused)

  { Scope block #329 
    char * remote_host;
    switch_port_t remote_port;

    { Scope block #330 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #331 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #332 src/switch_core_media.c:4862 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #333 Originating from :#0 

      }

    }

    { Scope block #334 
      size_t __s1_len; (unused)
      size_t __s2_len;

      { Scope block #335 
        const unsigned char * __s1;
        register int __result;

      }

    }

  }

  { Scope block #336 
    uint8_t vad_in;
    uint8_t vad_out;
    uint8_t inb;
    const char * ssrc;

    { Scope block #337 src/switch_core_media.c:5085 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #338 Originating from :#0 

      }

    }

    { Scope block #339 
      uint32_t ssrc_ul;

    }

    { Scope block #340 
      const char * rport;
      switch_port_t remote_rtcp_port;

      { Scope block #341 src/switch_core_media.c:5039 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #342 Originating from :#0 

        }

      }

      { Scope block #343 
        int interval;

        { Scope block #344 src/switch_core_media.c:5046 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #345 Originating from :#0 

          }

        }

      }

      { Scope block #346 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #347 
      dtls_type_t xtype;
      dtls_type_t dtype;

    }

    { Scope block #348 
      int jb_msec;
      int maxlen;
      int max_drift;
      char * p;
      char * q;

      { Scope block #349 src/switch_core_media.c:5116 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #350 Originating from :#0 

        }

      }

      { Scope block #351 src/switch_core_media.c:5113 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #352 Originating from :#0 

        }

      }

      { Scope block #353 src/switch_core_media.c:5107 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #354 Originating from :#0 

        }

      }

      { Scope block #355 
        int qlen;
        int maxqlen;

      }

    }

    { Scope block #356 
      int v;

      { Scope block #357 src/switch_core_media.c:5161 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #358 Originating from :#0 

        }

      }

    }

    { Scope block #359 
      int v;

      { Scope block #360 src/switch_core_media.c:5168 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #361 Originating from :#0 

        }

      }

    }

    { Scope block #362 
      int delayi;

      { Scope block #363 src/switch_core_media.c:5208 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #364 Originating from :#0 

        }

      }

    }

    { Scope block #365 
      char * remote_host;
      switch_port_t remote_port;

      { Scope block #366 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #367 
      const char * rport;
      switch_port_t remote_rtcp_port;

      { Scope block #368 src/switch_core_media.c:5299 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #369 Originating from :#0 

        }

      }

    }

    { Scope block #370 
      const char * ssrc;

      { Scope block #371 src/switch_core_media.c:5509 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #372 Originating from :#0 

        }

      }

      { Scope block #373 
        uint32_t ssrc_ul;

      }

      { Scope block #374 
        const char * rport;
        switch_port_t remote_port;

        { Scope block #375 src/switch_core_media.c:5459 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #376 Originating from :#0 

          }

        }

        { Scope block #377 
          int interval;

          { Scope block #378 src/switch_core_media.c:5465 Originating from :  extern int atoi (const char *); 
            const char * __nptr; (unused)

            { Scope block #379 Originating from :#0 

            }

          }

        }

        { Scope block #380 
          size_t __s1_len; (unused)
          size_t __s2_len; (unused)

        }

      }

      { Scope block #381 
        dtls_type_t xtype;
        dtls_type_t dtype;

      }

    }

  }

}
switch_core_media_activate_rtp (struct switch_core_session_t * session)
{
  const char D.48124;
  int D.48123;
  int D.48117;
  int D.48114;
  int D.48102;
  const char D.48093;
  int D.48092;
  int D.48086;
  int D.48083;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  int delayi;
  int v;
  int v;
  int maxqlen;
  int qlen;
  char * q;
  char * p;
  int max_drift;
  int maxlen;
  int jb_msec;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  uint8_t inb;
  uint8_t vad_out;
  uint8_t vad_in;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[31] = "switch_core_media_activate_rtp";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_activate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  const char * var;
  char * timer_name;
  char tmp[50];
  switch_status_t status;
  switch_rtp_flag_t flags[39];
  const char * val;
  const char * err;
  _Bool D.43791;
  _Bool D.43790;
  const char * iftmp.68;
  const char * iftmp.67;
  uint32_t D.43777;
  uint32_t D.43776;
  unsigned int D.43775;
  switch_rtp_bug_flag_t D.43774;
  switch_rtp_bug_flag_t D.43773;
  switch_rtp_bug_flag_t * D.43772;
  unsigned int D.43765;
  struct dtls_fingerprint_t * D.43764;
  struct dtls_fingerprint_t * D.43763;
  char * D.43760;
  switch_call_direction_t D.43754;
  int D.43750;
  int D.43747;
  char[192] * D.43743;
  switch_call_direction_t D.43739;
  switch_core_media_ice_type_t iftmp.65;
  switch_port_t D.43736;
  switch_port_t D.43735;
  char * D.43733;
  char * D.43732;
  int D.39417;
  uint8_t D.43726;
  int D.43725;
  int D.43724;
  unsigned int D.43721;
  unsigned int interval.64;
  switch_bool_t D.43718;
  int8_t D.43717;
  int D.43716;
  int D.43713;
  struct ice_t * D.43706;
  switch_call_direction_t D.43702;
  switch_core_media_ice_type_t iftmp.63;
  char * D.43700;
  char * D.43699;
  char * D.43698;
  char * D.43697;
  uint8_t D.43694;
  int D.43693;
  uint32_t D.43690;
  uint32_t D.43689;
  struct payload_map_t * * D.43685;
  uint8_t D.43682;
  uint8_t D.43679;
  uint8_t D.43676;
  uint8_t D.43672;
  const char * iftmp.62;
  char * D.43670;
  uint32_t D.43666;
  char * iftmp.61;
  struct switch_rtp_t * D.43664;
  struct switch_memory_pool_t * D.43663;
  switch_rtp_flag_t D.43662;
  switch_rtp_flag_t D.43661;
  uint32_t D.43658;
  uint32_t D.43655;
  int D.43654;
  uint32_t D.43650;
  int32_t D.43647;
  uint8_t D.43636;
  int D.43635;
  int D.43634;
  char * D.43633;
  int D.43632;
  uint32_t D.43628;
  int32_t D.43625;
  uint32_t D.43620;
  int D.43619;
  uint32_t D.43615;
  int32_t D.43612;
  switch_status_t D.43606;
  uint32_t D.43598;
  int D.43595;
  switch_payload_t D.43594;
  int D.43593;
  switch_port_t D.43592;
  char * D.43591;
  uint8_t D.43588;
  uint32_t D.43585;
  int D.43584;
  int D.43583;
  char * D.43582;
  char * D.43581;
  char * D.43578;
  int D.39400;
  _Bool D.43576;
  _Bool D.43575;
  _Bool D.43574;
  uint32_t D.43570;
  switch_port_t D.43565;
  char * D.43562;
  struct payload_map_t * D.43561;
  uint32_t D.43558;
  switch_call_direction_t D.43555;
  uint32_t D.43552;
  int D.43551;
  int32_t D.43548;
  char * D.43545;
  uint32_t D.43542;
  unsigned int delayi.60;
  int D.43536;
  int D.43534;
  int32_t D.43531;
  int D.43527;
  switch_payload_t D.43524;
  int D.43523;
  switch_payload_t D.43520;
  uint32_t D.43519;
  uint32_t D.43518;
  uint32_t D.43515;
  uint32_t D.43512;
  uint32_t D.43511;
  uint32_t D.43510;
  uint32_t D.43509;
  uint32_t D.43506;
  uint32_t v.59;
  uint32_t v.58;
  int D.43492;
  const char * D.43491;
  switch_status_t D.43488;
  uint32_t max_drift.57;
  uint32_t D.43486;
  uint32_t maxqlen.56;
  uint32_t qlen.55;
  unsigned int D.43474;
  int D.43473;
  int D.43472;
  const int D.43471;
  const struct switch_codec_implementation_t * D.43470;
  unsigned int D.43467;
  unsigned int jb_msec.54;
  unsigned int D.43453;
  struct dtls_fingerprint_t * D.43452;
  struct dtls_fingerprint_t * D.43451;
  char * D.43448;
  uint32_t D.43439;
  switch_call_direction_t D.43435;
  struct switch_channel_t * D.43434;
  int D.43430;
  struct switch_core_session_t * D.43429;
  int D.43426;
  char[192] * D.43422;
  switch_call_direction_t D.43418;
  switch_core_media_ice_type_t iftmp.51;
  switch_port_t D.43415;
  switch_port_t D.43414;
  char * D.43412;
  char * D.43411;
  int D.39377;
  uint8_t D.43405;
  int D.43404;
  unsigned int D.43401;
  unsigned int interval.50;
  switch_bool_t D.43398;
  int8_t D.43397;
  int D.43396;
  int D.43393;
  _Bool D.43389;
  _Bool D.43388;
  _Bool D.43387;
  struct ice_t * D.43383;
  switch_call_direction_t D.43379;
  switch_core_media_ice_type_t iftmp.49;
  char * D.43377;
  char * D.43376;
  char * D.43375;
  char * D.43374;
  uint8_t D.43371;
  int D.43370;
  char * iftmp.48;
  char * iftmp.47;
  char * D.43361;
  struct switch_channel_t * D.43360;
  struct switch_codec_t * D.43359;
  _Bool D.43358;
  _Bool D.43357;
  _Bool D.43356;
  _Bool D.43354;
  _Bool D.43353;
  _Bool D.43352;
  unsigned int D.43349;
  switch_rtp_bug_flag_t D.43348;
  switch_rtp_bug_flag_t * D.43347;
  unsigned int D.43344;
  switch_rtp_bug_flag_t D.43343;
  unsigned int D.43340;
  switch_rtp_bug_flag_t D.43339;
  uint32_t D.43338;
  int D.43335;
  int D.43330;
  int D.43325;
  int D.43320;
  uint32_t D.43315;
  uint32_t D.43314;
  struct switch_memory_pool_t * D.43310;
  struct switch_mutex_t *[2] * D.43309;
  switch_call_direction_t D.43308;
  uint8_t D.43307;
  switch_core_media_vflag_t D.43306;
  uint8_t D.43303;
  struct payload_map_t * * D.43302;
  uint8_t D.43299;
  struct switch_rtp_t * D.43298;
  struct switch_memory_pool_t * D.43297;
  uint32_t D.43296;
  uint32_t D.43295;
  uint32_t D.43294;
  switch_channel_state_t D.43293;
  int D.43291;
  uint8_t D.43283;
  char * D.43282;
  int D.43281;
  uint32_t D.43277;
  int32_t D.43274;
  switch_rtp_flag_t D.43271;
  switch_rtp_flag_t D.43270;
  uint32_t D.43267;
  _Bool D.43264;
  _Bool D.43263;
  _Bool D.43262;
  uint32_t D.43259;
  int D.43258;
  int32_t D.43254;
  int D.43248;
  const unsigned char D.43247;
  char * D.43246;
  int D.43245;
  const unsigned char D.43244;
  const unsigned char * D.43243;
  _Bool D.43240;
  _Bool D.43239;
  int D.43238;
  const unsigned char D.43237;
  char * D.43236;
  int D.43235;
  const unsigned char D.43234;
  const unsigned char * D.43233;
  _Bool D.43230;
  _Bool D.43229;
  int D.43228;
  const unsigned char D.43227;
  char * D.43226;
  int D.43225;
  const unsigned char D.43224;
  const unsigned char * D.43223;
  _Bool D.43220;
  _Bool D.43219;
  _Bool D.43218;
  int D.43217;
  const unsigned char D.43216;
  char[8] * D.43215;
  int D.43214;
  const unsigned char D.43213;
  uint32_t D.43207;
  const char * err.45;
  switch_status_t D.43202;
  uint32_t D.43194;
  char * D.43191;
  int D.43190;
  int D.43189;
  int D.43188;
  switch_payload_t D.43187;
  int D.43186;
  switch_port_t D.43185;
  char * D.43184;
  char * D.43183;
  uint32_t D.43180;
  int D.43179;
  int D.43178;
  char * D.43177;
  char * D.43176;
  switch_port_t D.43174;
  char * D.43172;
  struct payload_map_t * D.43171;
  int D.39348;
  _Bool D.43169;
  _Bool D.43168;
  _Bool D.43167;
  uint32_t D.43163;
  int D.43158;
  switch_rtp_flag_t D.43153;
  switch_rtp_flag_t D.43152;
  int D.43149;
  char * D.43148;
  switch_rtp_flag_t D.43147;
  switch_rtp_flag_t D.43146;
  switch_payload_t D.43143;
  int32_t D.43139;
  switch_rtp_flag_t D.43138;
  switch_rtp_flag_t D.43137;
  int D.43136;
  int32_t D.43132;
  switch_rtp_flag_t D.43129;
  switch_rtp_flag_t D.43128;
  int D.43127;
  int32_t D.43124;
  int D.43121;
  int32_t D.43118;
  switch_rtp_flag_t D.43115;
  switch_rtp_flag_t D.43114;
  int D.43113;
  uint32_t D.43109;
  int32_t D.43106;
  switch_rtp_flag_t D.43103;
  switch_rtp_flag_t D.43102;
  uint32_t D.43100;
  struct switch_core_media_params_t * D.43099;
  uint8_t D.43097;
  struct switch_rtp_t * D.43096;
  uint32_t D.43093;
  uint8_t D.43090;
  uint32_t D.43087;
  uint32_t D.43084;
  switch_rtp_crypto_key_type_t D.43081;
  uint8_t D.43078;
  struct switch_rtp_t * D.43077;
  switch_channel_state_t D.43076;
  int D.43074;
  struct switch_channel_t * D.43073;

<bb 2>:
  err = 0B;
  val_42 = 0B;
  # DEBUG val => val_42
  flags = {};
  status_43 = 0;
  # DEBUG status => status_43
  timer_name_44 = 0B;
  # DEBUG timer_name => timer_name_44
  if (session_45(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4731, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_46 = session_45(D)->media_handle;
  # DEBUG smh => smh_46
  if (smh_46 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_47 = 1;
  goto <bb 338>;

<bb 6>:
  a_engine_48 = &smh_46->engines;
  # DEBUG a_engine => a_engine_48
  v_engine_49 = &smh_46->engines[1];
  # DEBUG v_engine => v_engine_49
  D.43073_50 = session_45(D)->channel;
  D.43074_51 = switch_channel_check_signal (D.43073_50, 1);
  if (D.43074_51 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.43073_52 = session_45(D)->channel;
  D.43076_53 = switch_channel_get_state (D.43073_52);
  if (D.43076_53 > 9)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  status_945 = 1;
  goto <bb 338>;

<bb 9>:
  D.43077_54 = a_engine_48->rtp_session;
  D.43078_55 = switch_rtp_ready (D.43077_54);
  if (D.43078_55 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.43077_56 = a_engine_48->rtp_session;
  switch_rtp_reset_media_timer (D.43077_56);

<bb 11>:
  D.43081_57 = a_engine_48->crypto_type;
  if (D.43081_57 != 9)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.43073_58 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_58, 92, 1);

<bb 13>:
  D.43073_59 = session_45(D)->channel;
  D.43084_60 = switch_channel_test_flag (D.43073_59, 15);
  if (D.43084_60 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  status_61 = 0;
  # DEBUG status => status_61
  goto <bb 337> (end);

<bb 15>:
  D.43073_62 = session_45(D)->channel;
  D.43087_63 = switch_channel_test_flag (D.43073_62, 103);
  if (D.43087_63 == 0)
    goto <bb 16>;
  else
    goto <bb 20>;

<bb 16>:
  D.43077_64 = a_engine_48->rtp_session;
  D.43090_65 = switch_rtp_ready (D.43077_64);
  if (D.43090_65 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

<bb 17>:
  D.43073_66 = session_45(D)->channel;
  D.43093_67 = switch_channel_test_flag (D.43073_66, 98);
  if (D.43093_67 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.43096_68 = v_engine_49->rtp_session;
  D.43097_69 = switch_rtp_ready (D.43096_68);
  if (D.43097_69 == 0)
    goto <bb 220> (video);
  else
    goto <bb 19>;

<bb 19>:
  status_70 = 0;
  # DEBUG status => status_70
  goto <bb 337> (end);

<bb 20>:
  D.43099_71 = smh_46->mparams;
  D.43100_72 = D.43099_71->codec_flags;
  status_73 = switch_core_media_set_codec (session_45(D), 0, D.43100_72);
  # DEBUG status => status_73
  if (status_73 != 0)
    goto <bb 337> (end);
  else
    goto <bb 21>;

<bb 21>:
  switch_core_media_set_video_codec (session_45(D), 0);
  memset (&flags, 0, 156);
  D.43102_74 = flags[13];
  D.43103_75 = D.43102_74 + 1;
  flags[13] = D.43103_75;
  D.43106_76 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43106_76 == 0)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.43073_77 = session_45(D)->channel;
  D.43109_78 = switch_channel_test_flag (D.43073_77, 106);
  if (D.43109_78 == 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.43073_79 = session_45(D)->channel;
  val_80 = switch_channel_get_variable_dup (D.43073_79, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_80
  if (val_80 == 0B)
    goto <bb 25>;
  else
    goto <bb 24>;

<bb 24>:
  D.43113_81 = switch_true (val_80);
  if (D.43113_81 == 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.43114_82 = flags[7];
  D.43115_83 = D.43114_82 + 1;
  flags[7] = D.43115_83;

<bb 26>:
  D.43118_84 = switch_media_handle_test_media_flag (smh_46, 11);
  if (D.43118_84 != 0)
    goto <bb 29>;
  else
    goto <bb 27>;

<bb 27>:
  D.43073_85 = session_45(D)->channel;
  val_86 = switch_channel_get_variable_dup (D.43073_85, "pass_rfc2833", 1, -1);
  # DEBUG val => val_86
  if (val_86 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.43121_87 = switch_true (val_86);
  if (D.43121_87 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.43073_88 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_88, 100, 1);

<bb 30>:
  D.43124_89 = switch_media_handle_test_media_flag (smh_46, 12);
  if (D.43124_89 != 0)
    goto <bb 33>;
  else
    goto <bb 31>;

<bb 31>:
  D.43073_90 = session_45(D)->channel;
  val_91 = switch_channel_get_variable_dup (D.43073_90, "rtp_autoflush", 1, -1);
  # DEBUG val => val_91
  if (val_91 != 0B)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.43127_92 = switch_true (val_91);
  if (D.43127_92 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.43128_93 = flags[22];
  D.43129_94 = D.43128_93 + 1;
  flags[22] = D.43129_94;

<bb 34>:
  D.43132_95 = switch_media_handle_test_media_flag (smh_46, 13);
  if (D.43132_95 == 0)
    goto <bb 35>;
  else
    goto <bb 38>;

<bb 35>:
  D.43073_96 = session_45(D)->channel;
  val_97 = switch_channel_get_variable_dup (D.43073_96, "rtp_rewrite_timestamps", 1, -1);
  # DEBUG val => val_97
  if (val_97 == 0B)
    goto <bb 37>;
  else
    goto <bb 36>;

<bb 36>:
  D.43136_98 = switch_true (val_97);
  if (D.43136_98 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  D.43137_99 = flags[8];
  D.43138_100 = D.43137_99 + 1;
  flags[8] = D.43138_100;

<bb 38>:
  D.43139_101 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43139_101 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.43099_102 = smh_46->mparams;
  D.43099_102->cng_pt = 0;
  goto <bb 42>;

<bb 40>:
  D.43099_103 = smh_46->mparams;
  D.43143_104 = D.43099_103->cng_pt;
  if (D.43143_104 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.43146_105 = flags[16];
  D.43147_106 = D.43146_105 + 1;
  flags[16] = D.43147_106;

<bb 42>:
  D.43148_107 = a_engine_48->read_impl.iananame;
  D.43149_108 = strcasecmp (D.43148_107, "L16");
  if (D.43149_108 == 0)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.43152_109 = flags[14];
  D.43153_110 = D.43152_109 + 1;
  flags[14] = D.43153_110;

<bb 44>:
  D.43152_111 = flags[14];
  if (D.43152_111 != 0)
    goto <bb 45>;
  else
    goto <bb 48>;

<bb 45>:
  D.43073_112 = session_45(D)->channel;
  val_113 = switch_channel_get_variable_dup (D.43073_112, "rtp_disable_byteswap", 1, -1);
  # DEBUG val => val_113
  if (val_113 != 0B)
    goto <bb 46>;
  else
    goto <bb 48>;

<bb 46>:
  D.43158_114 = switch_true (val_113);
  if (D.43158_114 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  flags[14] = 0;

<bb 48>:
  D.43077_115 = a_engine_48->rtp_session;
  if (D.43077_115 != 0B)
    goto <bb 49>;
  else
    goto <bb 55>;

<bb 49>:
  D.43073_116 = session_45(D)->channel;
  D.43163_117 = switch_channel_test_flag (D.43073_116, 103);
  if (D.43163_117 != 0)
    goto <bb 50>;
  else
    goto <bb 55>;

<bb 50>:
  D.43077_118 = a_engine_48->rtp_session;
  remote_host_119 = switch_rtp_get_remote_host (D.43077_118);
  # DEBUG remote_host => remote_host_119
  D.43077_120 = a_engine_48->rtp_session;
  remote_port_121 = switch_rtp_get_remote_port (D.43077_120);
  # DEBUG remote_port => remote_port_121
  D.43167_122 = remote_host_119 != 0B;
  D.43168_123 = remote_port_121 != 0;
  D.43169_124 = D.43167_122 && D.43168_123;
  if (D.43169_124 != 0)
    goto <bb 51>;
  else
    goto <bb 54>;

<bb 51>:
  D.43171_125 = a_engine_48->cur_payload_map;
  D.43172_126 = D.43171_125->remote_sdp_ip;
  D.39348_127 = __builtin_strcmp (remote_host_119, D.43172_126);
  if (D.39348_127 == 0)
    goto <bb 52>;
  else
    goto <bb 54>;

<bb 52>:
  D.43171_128 = a_engine_48->cur_payload_map;
  D.43174_129 = D.43171_128->remote_sdp_port;
  if (D.43174_129 == remote_port_121)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  D.43073_130 = session_45(D)->channel;
  D.43176_131 = switch_channel_get_name (D.43073_130);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4825, session_45(D), 7, "Audio params are unchanged for %s.\n", D.43176_131);
  goto <bb 220> (video);

<bb 54>:
  D.43073_132 = session_45(D)->channel;
  D.43177_133 = switch_channel_get_name (D.43073_132);
  D.43178_134 = (int) remote_port_121;
  D.43171_135 = a_engine_48->cur_payload_map;
  D.43172_136 = D.43171_135->remote_sdp_ip;
  D.43171_137 = a_engine_48->cur_payload_map;
  D.43174_138 = D.43171_137->remote_sdp_port;
  D.43179_139 = (int) D.43174_138;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4830, session_45(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.43177_133, remote_host_119, D.43178_134, D.43172_136, D.43179_139);
  D.43171_140 = a_engine_48->cur_payload_map;
  D.43174_141 = D.43171_140->remote_sdp_port;
  D.43179_142 = (int) D.43174_141;
  switch_snprintf (&tmp, 50, "%d", D.43179_142);
  D.43073_143 = session_45(D)->channel;
  D.43171_144 = a_engine_48->cur_payload_map;
  D.43172_145 = D.43171_144->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_143, "remote_media_ip", D.43172_145, 1);
  D.43073_146 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_146, "remote_media_port", &tmp, 1);

<bb 55>:
  D.43073_147 = session_45(D)->channel;
  D.43180_148 = switch_channel_test_flag (D.43073_147, 29);
  if (D.43180_148 == 0)
    goto <bb 56>;
  else
    goto <bb 57>;

<bb 56>:
  D.43073_149 = session_45(D)->channel;
  D.43183_150 = switch_channel_get_name (D.43073_149);
  D.43184_151 = a_engine_48->local_sdp_ip;
  D.43185_152 = a_engine_48->local_sdp_port;
  D.43186_153 = (int) D.43185_152;
  D.43171_154 = a_engine_48->cur_payload_map;
  D.43172_155 = D.43171_154->remote_sdp_ip;
  D.43171_156 = a_engine_48->cur_payload_map;
  D.43174_157 = D.43171_156->remote_sdp_port;
  D.43179_158 = (int) D.43174_157;
  D.43171_159 = a_engine_48->cur_payload_map;
  D.43187_160 = D.43171_159->agreed_pt;
  D.43188_161 = (int) D.43187_160;
  D.43189_162 = a_engine_48->read_impl.microseconds_per_packet;
  D.43190_163 = D.43189_162 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4841, session_45(D), 7, "AUDIO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43183_150, D.43184_151, D.43186_153, D.43172_155, D.43179_158, D.43188_161, D.43190_163);

<bb 57>:
  D.43185_164 = a_engine_48->local_sdp_port;
  D.43186_165 = (int) D.43185_164;
  switch_snprintf (&tmp, 50, "%d", D.43186_165);
  D.43073_166 = session_45(D)->channel;
  D.43184_167 = a_engine_48->local_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_166, "local_media_ip", D.43184_167, 1);
  D.43073_168 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_168, "local_media_port", &tmp, 1);
  D.43073_169 = session_45(D)->channel;
  D.43191_170 = a_engine_48->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_169, "advertised_media_ip", D.43191_170, 1);
  D.43077_171 = a_engine_48->rtp_session;
  if (D.43077_171 != 0B)
    goto <bb 58>;
  else
    goto <bb 81>;

<bb 58>:
  D.43073_172 = session_45(D)->channel;
  D.43194_173 = switch_channel_test_flag (D.43073_172, 103);
  if (D.43194_173 != 0)
    goto <bb 59>;
  else
    goto <bb 81>;

<bb 59>:
  rport_174 = 0B;
  # DEBUG rport => rport_174
  remote_rtcp_port_175 = a_engine_48->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_175
  if (remote_rtcp_port_175 == 0)
    goto <bb 60>;
  else
    goto <bb 62>;

<bb 60>:
  D.43073_176 = session_45(D)->channel;
  rport_177 = switch_channel_get_variable_dup (D.43073_176, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_177
  if (rport_177 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  # DEBUG __nptr => rport_177
  D.48083_1337 = strtol (rport_177, 0B, 10);
  D.48083_1357 = D.48083_1337;
  D.48083_178 = D.48083_1357;
  remote_rtcp_port_179 = (switch_port_t) D.48083_178;
  # DEBUG remote_rtcp_port => remote_rtcp_port_179

<bb 62>:
  # remote_rtcp_port_7 = PHI <remote_rtcp_port_175(59), remote_rtcp_port_175(60), remote_rtcp_port_179(61)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_7
  D.43077_180 = a_engine_48->rtp_session;
  D.43171_181 = a_engine_48->cur_payload_map;
  D.43172_182 = D.43171_181->remote_sdp_ip;
  D.43171_183 = a_engine_48->cur_payload_map;
  D.43174_184 = D.43171_183->remote_sdp_port;
  D.43202_185 = switch_rtp_set_remote_address (D.43077_180, D.43172_182, D.43174_184, remote_rtcp_port_7, 1, &err);
  if (D.43202_185 != 0)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  err.45_186 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4868, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.45_186);
  goto <bb 79>;

<bb 64>:
  D.43171_187 = a_engine_48->cur_payload_map;
  D.43172_188 = D.43171_187->remote_sdp_ip;
  D.43171_189 = a_engine_48->cur_payload_map;
  D.43174_190 = D.43171_189->remote_sdp_port;
  D.43179_191 = (int) D.43174_190;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4870, session_45(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.43172_188, D.43179_191);
  D.43073_192 = session_45(D)->channel;
  D.43207_193 = switch_channel_test_flag (D.43073_192, 96);
  if (D.43207_193 != 0)
    goto <bb 65>;
  else
    goto <bb 74>;

<bb 65>:
  __s2_len_194 = 7;
  # DEBUG __s2_len => __s2_len_194
  if (__s2_len_194 <= 3)
    goto <bb 66>;
  else
    goto <bb 71>;

<bb 66>:
  D.43171_195 = a_engine_48->cur_payload_map;
  __s1_196 = D.43171_195->remote_sdp_ip;
  # DEBUG __s1 => __s1_196
  D.43213_197 = *__s1_196;
  D.43214_198 = (int) D.43213_197;
  D.43215_199 = "0.0.0.0";
  D.43216_200 = MEM[(const unsigned char *)D.43215_199];
  D.43217_201 = (int) D.43216_200;
  __result_202 = D.43214_198 - D.43217_201;
  # DEBUG __result => __result_202
  D.43218_203 = __s2_len_194 != 0;
  D.43219_204 = __result_202 == 0;
  D.43220_205 = D.43218_203 && D.43219_204;
  if (D.43220_205 != 0)
    goto <bb 67>;
  else
    goto <bb 70>;

<bb 67>:
  D.43223_206 = __s1_196 + 1;
  D.43224_207 = *D.43223_206;
  D.43225_208 = (int) D.43224_207;
  D.43226_209 = &"0.0.0.0"[1];
  D.43227_210 = MEM[(const unsigned char *)D.43226_209];
  D.43228_211 = (int) D.43227_210;
  __result_212 = D.43225_208 - D.43228_211;
  # DEBUG __result => __result_212
  D.43229_213 = __s2_len_194 > 1;
  D.43219_214 = __result_212 == 0;
  D.43230_215 = D.43229_213 && D.43219_214;
  if (D.43230_215 != 0)
    goto <bb 68>;
  else
    goto <bb 70>;

<bb 68>:
  D.43233_216 = __s1_196 + 2;
  D.43234_217 = *D.43233_216;
  D.43235_218 = (int) D.43234_217;
  D.43236_219 = &"0.0.0.0"[2];
  D.43237_220 = MEM[(const unsigned char *)D.43236_219];
  D.43238_221 = (int) D.43237_220;
  __result_222 = D.43235_218 - D.43238_221;
  # DEBUG __result => __result_222
  D.43239_223 = __s2_len_194 > 2;
  D.43219_224 = __result_222 == 0;
  D.43240_225 = D.43239_223 && D.43219_224;
  if (D.43240_225 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

<bb 69>:
  D.43243_226 = __s1_196 + 3;
  D.43244_227 = *D.43243_226;
  D.43245_228 = (int) D.43244_227;
  D.43246_229 = &"0.0.0.0"[3];
  D.43247_230 = MEM[(const unsigned char *)D.43246_229];
  D.43248_231 = (int) D.43247_230;
  __result_232 = D.43245_228 - D.43248_231;
  # DEBUG __result => __result_232

<bb 70>:
  # __result_8 = PHI <__result_202(66), __result_212(67), __result_222(68), __result_232(69)>
  # DEBUG __result => __result_8
  __result_233 = __result_8;
  __result_234 = __result_233;
  goto <bb 72>;

<bb 71>:
  D.43171_235 = a_engine_48->cur_payload_map;
  D.43172_236 = D.43171_235->remote_sdp_ip;
  __result_237 = __builtin_strcmp (D.43172_236, "0.0.0.0");

<bb 72>:
  # __result_28 = PHI <__result_234(70), __result_237(71)>
  __result_238 = __result_28;
  if (__result_238 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  switch_core_media_toggle_hold (session_45(D), 0);

<bb 74>:
  D.43254_239 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43254_239 == 0)
    goto <bb 75>;
  else
    goto <bb 79>;

<bb 75>:
  D.43073_240 = session_45(D)->channel;
  val_241 = switch_channel_get_variable_dup (D.43073_240, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_241
  if (val_241 == 0B)
    goto <bb 77>;
  else
    goto <bb 76>;

<bb 76>:
  D.43258_242 = switch_true (val_241);
  if (D.43258_242 == 0)
    goto <bb 77>;
  else
    goto <bb 79>;

<bb 77>:
  D.43073_243 = session_45(D)->channel;
  D.43259_244 = switch_channel_test_flag (D.43073_243, 106);
  if (D.43259_244 == 0)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  D.43077_245 = a_engine_48->rtp_session;
  switch_rtp_set_flag (D.43077_245, 7);

<bb 79>:
  D.43262_246 = session_45(D) != 0B;
  D.43263_247 = a_engine_48 != 0B;
  D.43264_248 = D.43262_246 && D.43263_247;
  if (D.43264_248 != 0)
    goto <bb 80>;
  else
    goto <bb 220> (video);

<bb 80>:
  check_dtls_reinvite (session_45(D), a_engine_48);
  goto <bb 220> (video);

<bb 81>:
  D.43073_249 = session_45(D)->channel;
  D.43267_250 = switch_channel_test_flag (D.43073_249, 29);
  if (D.43267_250 != 0)
    goto <bb 82>;
  else
    goto <bb 89>;

<bb 82>:
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43102_251 = flags[13];
  D.43103_252 = D.43102_251 + 1;
  flags[13] = D.43103_252;
  D.43270_253 = flags[19];
  D.43271_254 = D.43270_253 + 1;
  flags[19] = D.43271_254;
  D.43274_255 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43274_255 == 0)
    goto <bb 83>;
  else
    goto <bb 87>;

<bb 83>:
  D.43073_256 = session_45(D)->channel;
  D.43277_257 = switch_channel_test_flag (D.43073_256, 106);
  if (D.43277_257 == 0)
    goto <bb 84>;
  else
    goto <bb 87>;

<bb 84>:
  D.43073_258 = session_45(D)->channel;
  val_259 = switch_channel_get_variable_dup (D.43073_258, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_259
  if (val_259 == 0B)
    goto <bb 86>;
  else
    goto <bb 85>;

<bb 85>:
  D.43281_260 = switch_true (val_259);
  if (D.43281_260 == 0)
    goto <bb 86>;
  else
    goto <bb 87>;

<bb 86>:
  D.43114_261 = flags[7];
  D.43115_262 = D.43114_261 + 1;
  flags[7] = D.43115_262;

<bb 87>:
  timer_name_263 = 0B;
  # DEBUG timer_name => timer_name_263
  D.43073_264 = session_45(D)->channel;
  D.43282_265 = switch_channel_get_name (D.43073_264);
  D.43171_266 = a_engine_48->cur_payload_map;
  D.43172_267 = D.43171_266->remote_sdp_ip;
  D.43171_268 = a_engine_48->cur_payload_map;
  D.43174_269 = D.43171_268->remote_sdp_port;
  D.43179_270 = (int) D.43174_269;
  D.43171_271 = a_engine_48->cur_payload_map;
  D.43172_272 = D.43171_271->remote_sdp_ip;
  D.43171_273 = a_engine_48->cur_payload_map;
  D.43174_274 = D.43171_273->remote_sdp_port;
  D.43179_275 = (int) D.43174_274;
  D.43171_276 = a_engine_48->cur_payload_map;
  D.43187_277 = D.43171_276->agreed_pt;
  D.43188_278 = (int) D.43187_277;
  D.43189_279 = a_engine_48->read_impl.microseconds_per_packet;
  D.43190_280 = D.43189_279 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4906, session_45(D), 7, "PROXY AUDIO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43282_265, D.43172_272, D.43179_275, D.43172_272, D.43179_275, D.43188_278, D.43190_280);
  D.43077_281 = a_engine_48->rtp_session;
  D.43283_282 = switch_rtp_ready (D.43077_281);
  if (D.43283_282 != 0)
    goto <bb 88>;
  else
    goto <bb 91>;

<bb 88>:
  D.43077_283 = a_engine_48->rtp_session;
  D.43171_284 = a_engine_48->cur_payload_map;
  D.43187_285 = D.43171_284->agreed_pt;
  switch_rtp_set_default_payload (D.43077_283, D.43187_285);
  goto <bb 91>;

<bb 89>:
  D.43099_286 = smh_46->mparams;
  timer_name_287 = D.43099_286->timer_name;
  # DEBUG timer_name => timer_name_287
  D.43073_288 = session_45(D)->channel;
  var_289 = switch_channel_get_variable_dup (D.43073_288, "rtp_timer_name", 1, -1);
  # DEBUG var => var_289
  if (var_289 != 0B)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  timer_name_290 = var_289;
  # DEBUG timer_name => timer_name_290

<bb 91>:
  # timer_name_6 = PHI <timer_name_263(88), timer_name_287(89), timer_name_290(90), timer_name_263(87)>
  # DEBUG timer_name => timer_name_6
  D.43073_291 = session_45(D)->channel;
  D.43291_292 = switch_channel_check_signal (D.43073_291, 1);
  if (D.43291_292 != 0)
    goto <bb 93>;
  else
    goto <bb 92>;

<bb 92>:
  D.43073_293 = session_45(D)->channel;
  D.43293_294 = switch_channel_get_state (D.43073_293);
  if (D.43293_294 <= 9)
    goto <bb 93>;
  else
    goto <bb 95>;

<bb 93>:
  D.43184_295 = a_engine_48->local_sdp_ip;
  D.43185_296 = a_engine_48->local_sdp_port;
  D.43171_297 = a_engine_48->cur_payload_map;
  D.43172_298 = D.43171_297->remote_sdp_ip;
  D.43171_299 = a_engine_48->cur_payload_map;
  D.43174_300 = D.43171_299->remote_sdp_port;
  D.43171_301 = a_engine_48->cur_payload_map;
  D.43187_302 = D.43171_301->agreed_pt;
  D.43294_303 = a_engine_48->read_impl.samples_per_packet;
  D.43171_304 = a_engine_48->cur_payload_map;
  D.43295_305 = D.43171_304->codec_ms;
  D.43296_306 = D.43295_305 * 1000;
  D.43297_307 = switch_core_session_get_pool (session_45(D));
  D.43298_308 = switch_rtp_new (D.43184_295, D.43185_296, D.43172_298, D.43174_300, D.43187_302, D.43294_303, D.43296_306, &flags, timer_name_6, &err, D.43297_307);
  a_engine_48->rtp_session = D.43298_308;
  D.43077_309 = a_engine_48->rtp_session;
  D.43299_310 = switch_rtp_ready (D.43077_309);
  if (D.43299_310 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  D.43077_311 = a_engine_48->rtp_session;
  D.43302_312 = &a_engine_48->payload_map;
  switch_rtp_set_payload_map (D.43077_311, D.43302_312);

<bb 95>:
  D.43077_313 = a_engine_48->rtp_session;
  D.43303_314 = switch_rtp_ready (D.43077_313);
  if (D.43303_314 != 0)
    goto <bb 96>;
  else
    goto <bb 330>;

<bb 96>:
  D.43099_315 = smh_46->mparams;
  D.43306_316 = D.43099_315->vflags;
  D.43307_317 = (uint8_t) D.43306_316;
  vad_in_318 = D.43307_317 & 1;
  # DEBUG vad_in => vad_in_318
  D.43099_319 = smh_46->mparams;
  D.43306_320 = D.43099_319->vflags;
  D.43307_321 = (uint8_t) D.43306_320;
  vad_out_322 = D.43307_321 & 2;
  # DEBUG vad_out => vad_out_322
  D.43073_323 = session_45(D)->channel;
  D.43308_324 = switch_channel_direction (D.43073_323);
  inb_325 = D.43308_324 == 0;
  # DEBUG inb => inb_325
  D.43309_326 = &a_engine_48->read_mutex;
  D.43310_327 = switch_core_session_get_pool (session_45(D));
  switch_mutex_init (D.43309_326, 1, D.43310_327);
  D.43073_328 = session_45(D)->channel;
  ssrc_329 = switch_channel_get_variable_dup (D.43073_328, "rtp_use_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_329
  if (ssrc_329 != 0B)
    goto <bb 97>;
  else
    goto <bb 98>;

<bb 97>:
  ssrc_ul_330 = strtoul (ssrc_329, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_330
  D.43077_331 = a_engine_48->rtp_session;
  switch_rtp_set_ssrc (D.43077_331, ssrc_ul_330);
  a_engine_48->ssrc = ssrc_ul_330;
  goto <bb 99>;

<bb 98>:
  D.43077_332 = a_engine_48->rtp_session;
  D.43314_333 = a_engine_48->ssrc;
  switch_rtp_set_ssrc (D.43077_332, D.43314_333);

<bb 99>:
  D.43315_334 = a_engine_48->remote_ssrc;
  if (D.43315_334 != 0)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  D.43077_335 = a_engine_48->rtp_session;
  D.43315_336 = a_engine_48->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43077_335, D.43315_336);

<bb 101>:
  D.43073_337 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_337, 36, 1);
  D.43073_338 = session_45(D)->channel;
  D.43171_339 = a_engine_48->cur_payload_map;
  D.43187_340 = D.43171_339->agreed_pt;
  D.43188_341 = (int) D.43187_340;
  switch_channel_set_variable_printf (D.43073_338, "rtp_use_pt", "%d", D.43188_341);
  D.43073_342 = session_45(D)->channel;
  val_343 = switch_channel_get_variable_dup (D.43073_342, "rtp_enable_vad_in", 1, -1);
  # DEBUG val => val_343
  if (val_343 != 0B)
    goto <bb 102>;
  else
    goto <bb 104>;

<bb 102>:
  D.43320_344 = switch_true (val_343);
  if (D.43320_344 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;

<bb 103>:
  vad_in_345 = 1;
  # DEBUG vad_in => vad_in_345

<bb 104>:
  # vad_in_9 = PHI <vad_in_318(101), vad_in_318(102), vad_in_345(103)>
  # DEBUG vad_in => vad_in_9
  D.43073_346 = session_45(D)->channel;
  val_347 = switch_channel_get_variable_dup (D.43073_346, "rtp_enable_vad_out", 1, -1);
  # DEBUG val => val_347
  if (val_347 != 0B)
    goto <bb 105>;
  else
    goto <bb 107>;

<bb 105>:
  D.43325_348 = switch_true (val_347);
  if (D.43325_348 != 0)
    goto <bb 106>;
  else
    goto <bb 107>;

<bb 106>:
  vad_out_349 = 1;
  # DEBUG vad_out => vad_out_349

<bb 107>:
  # vad_out_11 = PHI <vad_out_322(104), vad_out_322(105), vad_out_349(106)>
  # DEBUG vad_out => vad_out_11
  D.43073_350 = session_45(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.43073_350, "rtp_disable_vad_in", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 108>;
  else
    goto <bb 110>;

<bb 108>:
  D.43330_352 = switch_true (val_351);
  if (D.43330_352 != 0)
    goto <bb 109>;
  else
    goto <bb 110>;

<bb 109>:
  vad_in_353 = 0;
  # DEBUG vad_in => vad_in_353

<bb 110>:
  # vad_in_10 = PHI <vad_in_9(107), vad_in_9(108), vad_in_353(109)>
  # DEBUG vad_in => vad_in_10
  D.43073_354 = session_45(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.43073_354, "rtp_disable_vad_out", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 111>;
  else
    goto <bb 113>;

<bb 111>:
  D.43335_356 = switch_true (val_355);
  if (D.43335_356 != 0)
    goto <bb 112>;
  else
    goto <bb 113>;

<bb 112>:
  vad_out_357 = 0;
  # DEBUG vad_out => vad_out_357

<bb 113>:
  # vad_out_12 = PHI <vad_out_11(110), vad_out_11(111), vad_out_357(112)>
  # DEBUG vad_out => vad_out_12
  D.43077_358 = a_engine_48->rtp_session;
  D.43338_359 = switch_rtp_get_ssrc (D.43077_358);
  a_engine_48->ssrc = D.43338_359;
  D.43073_360 = session_45(D)->channel;
  D.43314_361 = a_engine_48->ssrc;
  switch_channel_set_variable_printf (D.43073_360, "rtp_use_ssrc", "%u", D.43314_361);
  D.43099_362 = smh_46->mparams;
  D.43339_363 = D.43099_362->auto_rtp_bugs;
  D.43340_364 = D.43339_363 & 4;
  if (D.43340_364 != 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  D.43343_365 = a_engine_48->rtp_bugs;
  D.43344_366 = D.43343_365 | 4;
  a_engine_48->rtp_bugs = D.43344_366;

<bb 115>:
  D.43073_367 = session_45(D)->channel;
  val_368 = switch_channel_get_variable_dup (D.43073_367, "rtp_manual_rtp_bugs", 1, -1);
  # DEBUG val => val_368
  if (val_368 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;

<bb 116>:
  D.43347_369 = &a_engine_48->rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43347_369, val_368);

<bb 117>:
  D.43077_370 = a_engine_48->rtp_session;
  D.43343_371 = a_engine_48->rtp_bugs;
  D.43099_372 = smh_46->mparams;
  D.43348_373 = D.43099_372->manual_rtp_bugs;
  D.43349_374 = D.43343_371 | D.43348_373;
  switch_rtp_intentional_bugs (D.43077_370, D.43349_374);
  D.43352_375 = vad_in_10 != 0;
  D.43353_376 = inb_325 != 0;
  D.43354_377 = D.43352_375 && D.43353_376;
  if (D.43354_377 != 0)
    goto <bb 119>;
  else
    goto <bb 118>;

<bb 118>:
  D.43356_378 = vad_out_12 != 0;
  D.43357_379 = inb_325 == 0;
  D.43358_380 = D.43356_378 && D.43357_379;
  if (D.43358_380 != 0)
    goto <bb 119>;
  else
    goto <bb 126>;

<bb 119>:
  D.43077_381 = a_engine_48->rtp_session;
  D.43359_382 = &a_engine_48->read_codec;
  switch_rtp_enable_vad (D.43077_381, session_45(D), D.43359_382, 7);
  D.43360_383 = switch_core_session_get_channel (session_45(D));
  D.43361_384 = switch_channel_get_name (D.43360_383);
  if (vad_in_10 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

<bb 120>:
  iftmp.47_385 = "in";
  goto <bb 122>;

<bb 121>:
  iftmp.47_386 = "";

<bb 122>:
  # iftmp.47_29 = PHI <iftmp.47_385(120), iftmp.47_386(121)>
  if (vad_out_12 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

<bb 123>:
  iftmp.48_387 = "out";
  goto <bb 125>;

<bb 124>:
  iftmp.48_388 = "";

<bb 125>:
  # iftmp.48_30 = PHI <iftmp.48_387(123), iftmp.48_388(124)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5001, session_45(D), 7, "AUDIO RTP Engage VAD for %s ( %s %s )\n", D.43361_384, iftmp.47_29, iftmp.48_30);

<bb 126>:
  D.43370_389 = a_engine_48->ice_in.chosen[0];
  D.43371_390 = a_engine_48->ice_in.cands[D.43370_389][0].ready;
  if (D.43371_390 != 0)
    goto <bb 127>;
  else
    goto <bb 131>;

<bb 127>:
  gen_ice (session_45(D), 0, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5010, session_45(D), 6, "Activating Audio ICE\n");
  D.43077_391 = a_engine_48->rtp_session;
  D.43374_392 = a_engine_48->ice_in.ufrag;
  D.43375_393 = a_engine_48->ice_out.ufrag;
  D.43376_394 = a_engine_48->ice_out.pwd;
  D.43377_395 = a_engine_48->ice_in.pwd;
  D.43379_396 = switch_ice_direction (session_45(D));
  if (D.43379_396 == 1)
    goto <bb 128>;
  else
    goto <bb 129>;

<bb 128>:
  iftmp.49_397 = 2;
  goto <bb 130>;

<bb 129>:
  iftmp.49_398 = 6;

<bb 130>:
  # iftmp.49_31 = PHI <iftmp.49_397(128), iftmp.49_398(129)>
  D.43383_399 = &a_engine_48->ice_in;
  switch_rtp_activate_ice (D.43077_391, D.43374_392, D.43375_393, D.43376_394, D.43377_395, 0, iftmp.49_31, D.43383_399);

<bb 131>:
  D.43073_400 = session_45(D)->channel;
  val_401 = switch_channel_get_variable_dup (D.43073_400, "rtcp_audio_interval_msec", 1, -1);
  # DEBUG val => val_401
  if (val_401 != 0B)
    goto <bb 133>;
  else
    goto <bb 132>;

<bb 132>:
  D.43099_402 = smh_46->mparams;
  val_403 = D.43099_402->rtcp_audio_interval_msec;
  # DEBUG val => val_403
  if (val_403 != 0B)
    goto <bb 133>;
  else
    goto <bb 149>;

<bb 133>:
  # val_1 = PHI <val_401(131), val_403(132)>
  # DEBUG val => val_1
  D.43073_404 = session_45(D)->channel;
  rport_405 = switch_channel_get_variable_dup (D.43073_404, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_405
  remote_rtcp_port_406 = a_engine_48->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_406
  D.43387_407 = remote_rtcp_port_406 == 0;
  D.43388_408 = rport_405 != 0B;
  D.43389_409 = D.43387_407 && D.43388_408;
  if (D.43389_409 != 0)
    goto <bb 134>;
  else
    goto <bb 135>;

<bb 134>:
  # DEBUG __nptr => rport_405
  D.48086_1338 = strtol (rport_405, 0B, 10);
  D.48086_1359 = D.48086_1338;
  D.48086_410 = D.48086_1359;
  remote_rtcp_port_411 = (switch_port_t) D.48086_410;
  # DEBUG remote_rtcp_port => remote_rtcp_port_411

<bb 135>:
  # remote_rtcp_port_13 = PHI <remote_rtcp_port_406(133), remote_rtcp_port_411(134)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_13
  D.43393_412 = strcasecmp (val_1, "passthru");
  if (D.43393_412 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  D.43396_413 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5043, session_45(D), 6, "Activating RTCP PASSTHRU PORT %d\n", D.43396_413);
  D.43077_414 = a_engine_48->rtp_session;
  D.43397_415 = a_engine_48->rtcp_mux;
  D.43398_416 = D.43397_415 > 0;
  switch_rtp_activate_rtcp (D.43077_414, -1, remote_rtcp_port_13, D.43398_416);
  goto <bb 140>;

<bb 137>:
  # DEBUG __nptr => val_1
  interval_1339 = strtol (val_1, 0B, 10);
  interval_1361 = interval_1339;
  interval_417 = interval_1361;
  # DEBUG interval => NULL
  interval.50_418 = (unsigned int) interval_417;
  D.43401_419 = interval.50_418 + 4294967196;
  if (D.43401_419 > 499900)
    goto <bb 138>;
  else
    goto <bb 139>;

<bb 138>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5048, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_417);
  interval_420 = 10000;
  # DEBUG interval => interval_420

<bb 139>:
  # interval_14 = PHI <interval_417(137), interval_420(138)>
  # DEBUG interval => interval_14
  D.43396_421 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5053, session_45(D), 6, "Activating RTCP PORT %d\n", D.43396_421);
  D.43077_422 = a_engine_48->rtp_session;
  D.43397_423 = a_engine_48->rtcp_mux;
  D.43398_424 = D.43397_423 > 0;
  switch_rtp_activate_rtcp (D.43077_422, interval_14, remote_rtcp_port_13, D.43398_424);

<bb 140>:
  D.43404_425 = a_engine_48->ice_in.chosen[1];
  D.43405_426 = a_engine_48->ice_in.cands[D.43404_425][1].ready;
  if (D.43405_426 != 0)
    goto <bb 141>;
  else
    goto <bb 149>;

<bb 141>:
  D.43397_427 = a_engine_48->rtcp_mux;
  if (D.43397_427 > 0)
    goto <bb 142>;
  else
    goto <bb 145>;

<bb 142>:
  D.43404_428 = a_engine_48->ice_in.chosen[1];
  D.43411_429 = a_engine_48->ice_in.cands[D.43404_428][1].con_addr;
  D.43370_430 = a_engine_48->ice_in.chosen[0];
  D.43412_431 = a_engine_48->ice_in.cands[D.43370_430][0].con_addr;
  D.39377_432 = __builtin_strcmp (D.43411_429, D.43412_431);
  if (D.39377_432 == 0)
    goto <bb 143>;
  else
    goto <bb 145>;

<bb 143>:
  D.43404_433 = a_engine_48->ice_in.chosen[1];
  D.43414_434 = a_engine_48->ice_in.cands[D.43404_433][1].con_port;
  D.43370_435 = a_engine_48->ice_in.chosen[0];
  D.43415_436 = a_engine_48->ice_in.cands[D.43370_435][0].con_port;
  if (D.43414_434 == D.43415_436)
    goto <bb 144>;
  else
    goto <bb 145>;

<bb 144>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5061, session_45(D), 6, "Skipping RTCP ICE (Same as RTP)\n");
  goto <bb 149>;

<bb 145>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5063, session_45(D), 6, "Activating RTCP ICE\n");
  D.43077_437 = a_engine_48->rtp_session;
  D.43374_438 = a_engine_48->ice_in.ufrag;
  D.43375_439 = a_engine_48->ice_out.ufrag;
  D.43376_440 = a_engine_48->ice_out.pwd;
  D.43377_441 = a_engine_48->ice_in.pwd;
  D.43418_442 = switch_ice_direction (session_45(D));
  if (D.43418_442 == 1)
    goto <bb 146>;
  else
    goto <bb 147>;

<bb 146>:
  iftmp.51_443 = 2;
  goto <bb 148>;

<bb 147>:
  iftmp.51_444 = 6;

<bb 148>:
  # iftmp.51_32 = PHI <iftmp.51_443(146), iftmp.51_444(147)>
  D.43383_445 = &a_engine_48->ice_in;
  switch_rtp_activate_ice (D.43077_437, D.43374_438, D.43375_439, D.43376_440, D.43377_441, 1, iftmp.51_32, D.43383_445);

<bb 149>:
  D.43422_446 = &a_engine_48->local_dtls_fingerprint.str;
  # DEBUG s => D.43422_446
  if (D.43422_446 == 0B)
    goto <bb 152>;
  else
    goto <bb 150>;

<bb 150>:
  D.48093_1340 = MEM[(const char *)D.43422_446];
  if (D.48093_1340 == 0)
    goto <bb 152>;
  else
    goto <bb 151>;

<bb 151>:

<bb 152>:
  # D.48092_1341 = PHI <1(149), 1(150), 0(151)>
  D.48092_1362 = D.48092_1341;
  D.48092_447 = D.48092_1362;
  if (D.48092_447 == 0)
    goto <bb 153>;
  else
    goto <bb 169>;

<bb 153>:
  D.43426_448 = switch_rtp_has_dtls ();
  if (D.43426_448 != 0)
    goto <bb 154>;
  else
    goto <bb 169>;

<bb 154>:
  D.43429_449 = smh_46->session;
  D.43430_450 = dtls_ok (D.43429_449);
  if (D.43430_450 != 0)
    goto <bb 155>;
  else
    goto <bb 169>;

<bb 155>:
  D.43429_451 = smh_46->session;
  D.43434_452 = D.43429_451->channel;
  D.43435_453 = switch_channel_direction (D.43434_452);
  if (D.43435_453 == 0)
    goto <bb 156>;
  else
    goto <bb 157>;

<bb 156>:
  dtype_454 = 1;
  goto <bb 158>;

<bb 157>:
  dtype_455 = 2;

<bb 158>:
  # dtype_33 = PHI <dtype_454(156), dtype_455(157)>
  dtype_456 = dtype_33;
  # DEBUG dtype => dtype_456
  D.43429_457 = smh_46->session;
  D.43434_458 = D.43429_457->channel;
  D.43439_459 = switch_channel_test_flag (D.43434_458, 112);
  if (D.43439_459 != 0)
    goto <bb 159>;
  else
    goto <bb 163>;

<bb 159>:
  if (dtype_456 == 1)
    goto <bb 160>;
  else
    goto <bb 161>;

<bb 160>:
  dtype_460 = 2;
  goto <bb 162>;

<bb 161>:
  dtype_461 = 1;

<bb 162>:
  # dtype_34 = PHI <dtype_460(160), dtype_461(161)>
  dtype_462 = dtype_34;
  # DEBUG dtype => dtype_462

<bb 163>:
  # dtype_16 = PHI <dtype_456(158), dtype_462(162)>
  # DEBUG dtype => dtype_16
  xtype_463 = 4;
  # DEBUG xtype => xtype_463
  D.43397_464 = a_engine_48->rtcp_mux;
  if (D.43397_464 > 0)
    goto <bb 164>;
  else
    goto <bb 166>;

<bb 164>:
  D.43099_465 = smh_46->mparams;
  D.43448_466 = D.43099_465->rtcp_audio_interval_msec;
  if (D.43448_466 != 0B)
    goto <bb 165>;
  else
    goto <bb 166>;

<bb 165>:
  xtype_467 = xtype_463 | 8;
  # DEBUG xtype => xtype_467

<bb 166>:
  # xtype_15 = PHI <xtype_463(163), xtype_463(164), xtype_467(165)>
  # DEBUG xtype => xtype_15
  D.43077_468 = a_engine_48->rtp_session;
  D.43451_469 = &a_engine_48->local_dtls_fingerprint;
  D.43452_470 = &a_engine_48->remote_dtls_fingerprint;
  D.43453_471 = dtype_16 | xtype_15;
  switch_rtp_add_dtls (D.43077_468, D.43451_469, D.43452_470, D.43453_471);
  D.43397_472 = a_engine_48->rtcp_mux;
  if (D.43397_472 <= 0)
    goto <bb 167>;
  else
    goto <bb 169>;

<bb 167>:
  D.43099_473 = smh_46->mparams;
  D.43448_474 = D.43099_473->rtcp_audio_interval_msec;
  if (D.43448_474 != 0B)
    goto <bb 168>;
  else
    goto <bb 169>;

<bb 168>:
  xtype_475 = 8;
  # DEBUG xtype => xtype_475
  D.43077_476 = a_engine_48->rtp_session;
  D.43451_477 = &a_engine_48->local_dtls_fingerprint;
  D.43452_478 = &a_engine_48->remote_dtls_fingerprint;
  D.43453_479 = dtype_16 | xtype_475;
  switch_rtp_add_dtls (D.43077_476, D.43451_477, D.43452_478, D.43453_479);

<bb 169>:
  D.43073_480 = session_45(D)->channel;
  val_481 = switch_channel_get_variable_dup (D.43073_480, "jitterbuffer_msec", 1, -1);
  # DEBUG val => val_481
  if (val_481 != 0B)
    goto <bb 171>;
  else
    goto <bb 170>;

<bb 170>:
  D.43099_482 = smh_46->mparams;
  val_483 = D.43099_482->jb_msec;
  # DEBUG val => val_483
  if (val_483 != 0B)
    goto <bb 171>;
  else
    goto <bb 188>;

<bb 171>:
  # val_2 = PHI <val_481(169), val_483(170)>
  # DEBUG val => val_2
  # DEBUG __nptr => val_2
  jb_msec_1342 = strtol (val_2, 0B, 10);
  jb_msec_1364 = jb_msec_1342;
  jb_msec_484 = jb_msec_1364;
  # DEBUG jb_msec => NULL
  maxlen_485 = 0;
  # DEBUG maxlen => maxlen_485
  max_drift_486 = 0;
  # DEBUG max_drift => max_drift_486
  p_487 = __builtin_strchr (val_2, 58);
  # DEBUG p => p_487
  if (p_487 != 0B)
    goto <bb 172>;
  else
    goto <bb 174>;

<bb 172>:
  p_488 = p_487 + 1;
  # DEBUG p => p_488
  # DEBUG __nptr => p_488
  maxlen_1343 = strtol (p_488, 0B, 10);
  maxlen_1366 = maxlen_1343;
  maxlen_489 = maxlen_1366;
  # DEBUG maxlen => NULL
  q_490 = __builtin_strchr (p_488, 58);
  # DEBUG q => q_490
  if (q_490 != 0B)
    goto <bb 173>;
  else
    goto <bb 174>;

<bb 173>:
  q_491 = q_490 + 1;
  # DEBUG q => q_491
  # DEBUG __nptr => q_491
  D.48102_1344 = strtol (q_491, 0B, 10);
  D.48102_1368 = D.48102_1344;
  D.48102_492 = D.48102_1368;
  max_drift_493 = ABS_EXPR <D.48102_492>;
  # DEBUG max_drift => max_drift_493

<bb 174>:
  # maxlen_18 = PHI <maxlen_485(171), maxlen_489(172), maxlen_489(173)>
  # max_drift_19 = PHI <max_drift_486(171), max_drift_486(172), max_drift_493(173)>
  # DEBUG max_drift => max_drift_19
  # DEBUG maxlen => maxlen_18
  jb_msec.54_494 = (unsigned int) jb_msec_484;
  D.43467_495 = jb_msec.54_494 + 9;
  if (D.43467_495 <= 8)
    goto <bb 175>;
  else
    goto <bb 176>;

<bb 175>:
  D.43470_496 = a_engine_48->read_codec.implementation;
  D.43471_497 = D.43470_496->microseconds_per_packet;
  D.43472_498 = D.43471_497 / 1000;
  D.43473_499 = ABS_EXPR <jb_msec_484>;
  jb_msec_500 = D.43472_498 * D.43473_499;
  # DEBUG jb_msec => jb_msec_500

<bb 176>:
  # jb_msec_17 = PHI <jb_msec_484(174), jb_msec_500(175)>
  # DEBUG jb_msec => jb_msec_17
  jb_msec.54_501 = (unsigned int) jb_msec_17;
  D.43474_502 = jb_msec.54_501 + 4294967276;
  if (D.43474_502 > 9980)
    goto <bb 177>;
  else
    goto <bb 178>;

<bb 177>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5125, session_45(D), 3, "Invalid Jitterbuffer spec [%d] must be between 20 and 10000\n", jb_msec_17);
  goto <bb 188>;

<bb 178>:
  maxqlen_503 = 50;
  # DEBUG maxqlen => maxqlen_503
  D.43189_504 = a_engine_48->read_impl.microseconds_per_packet;
  D.43190_505 = D.43189_504 / 1000;
  qlen_506 = jb_msec_17 / D.43190_505;
  # DEBUG qlen => qlen_506
  if (qlen_506 <= 0)
    goto <bb 179>;
  else
    goto <bb 180>;

<bb 179>:
  qlen_507 = 3;
  # DEBUG qlen => qlen_507

<bb 180>:
  # qlen_20 = PHI <qlen_506(178), qlen_507(179)>
  # DEBUG qlen => qlen_20
  if (maxlen_18 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;

<bb 181>:
  D.43189_508 = a_engine_48->read_impl.microseconds_per_packet;
  D.43190_509 = D.43189_508 / 1000;
  maxqlen_510 = maxlen_18 / D.43190_509;
  # DEBUG maxqlen => maxqlen_510

<bb 182>:
  # maxqlen_21 = PHI <maxqlen_503(180), maxqlen_510(181)>
  # DEBUG maxqlen => maxqlen_21
  if (maxqlen_21 < qlen_20)
    goto <bb 183>;
  else
    goto <bb 184>;

<bb 183>:
  maxqlen_511 = qlen_20 * 5;
  # DEBUG maxqlen => maxqlen_511

<bb 184>:
  # maxqlen_22 = PHI <maxqlen_21(182), maxqlen_511(183)>
  # DEBUG maxqlen => maxqlen_22
  D.43077_512 = a_engine_48->rtp_session;
  qlen.55_513 = (uint32_t) qlen_20;
  maxqlen.56_514 = (uint32_t) maxqlen_22;
  D.43294_515 = a_engine_48->read_impl.samples_per_packet;
  D.43486_516 = a_engine_48->read_impl.samples_per_second;
  max_drift.57_517 = (uint32_t) max_drift_19;
  D.43488_518 = switch_rtp_activate_jitter_buffer (D.43077_512, qlen.55_513, maxqlen.56_514, D.43294_515, D.43486_516, max_drift.57_517);
  if (D.43488_518 == 0)
    goto <bb 185>;
  else
    goto <bb 187>;

<bb 185>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5146, session_45(D), 7, "Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);
  D.43073_519 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_519, 57, 1);
  D.43073_520 = session_45(D)->channel;
  D.43491_521 = switch_channel_get_variable_dup (D.43073_520, "rtp_jitter_buffer_plc", 1, -1);
  D.43492_522 = switch_false (D.43491_521);
  if (D.43492_522 == 0)
    goto <bb 186>;
  else
    goto <bb 188>;

<bb 186>:
  D.43073_523 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_523, 58, 1);
  goto <bb 188>;

<bb 187>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5153, session_45(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

<bb 188>:
  D.43073_524 = session_45(D)->channel;
  val_525 = switch_channel_get_variable_dup (D.43073_524, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_525
  if (val_525 != 0B)
    goto <bb 189>;
  else
    goto <bb 191>;

<bb 189>:
  # DEBUG __nptr => val_525
  v_1345 = strtol (val_525, 0B, 10);
  v_1370 = v_1345;
  v_526 = v_1370;
  # DEBUG v => NULL
  if (v_526 >= 0)
    goto <bb 190>;
  else
    goto <bb 191>;

<bb 190>:
  D.43099_527 = smh_46->mparams;
  v.58_528 = (uint32_t) v_526;
  D.43099_527->rtp_timeout_sec = v.58_528;

<bb 191>:
  D.43073_529 = session_45(D)->channel;
  val_530 = switch_channel_get_variable_dup (D.43073_529, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_530
  if (val_530 != 0B)
    goto <bb 192>;
  else
    goto <bb 194>;

<bb 192>:
  # DEBUG __nptr => val_530
  v_1346 = strtol (val_530, 0B, 10);
  v_1372 = v_1346;
  v_531 = v_1372;
  # DEBUG v => NULL
  if (v_531 >= 0)
    goto <bb 193>;
  else
    goto <bb 194>;

<bb 193>:
  D.43099_532 = smh_46->mparams;
  v.59_533 = (uint32_t) v_531;
  D.43099_532->rtp_hold_timeout_sec = v.59_533;

<bb 194>:
  D.43099_534 = smh_46->mparams;
  D.43506_535 = D.43099_534->rtp_timeout_sec;
  if (D.43506_535 != 0)
    goto <bb 195>;
  else
    goto <bb 197>;

<bb 195>:
  D.43486_536 = a_engine_48->read_impl.samples_per_second;
  D.43099_537 = smh_46->mparams;
  D.43506_538 = D.43099_537->rtp_timeout_sec;
  D.43509_539 = D.43486_536 * D.43506_538;
  D.43294_540 = a_engine_48->read_impl.samples_per_packet;
  D.43510_541 = D.43509_539 / D.43294_540;
  a_engine_48->max_missed_packets = D.43510_541;
  D.43077_542 = a_engine_48->rtp_session;
  D.43511_543 = a_engine_48->max_missed_packets;
  switch_rtp_set_max_missed_packets (D.43077_542, D.43511_543);
  D.43099_544 = smh_46->mparams;
  D.43512_545 = D.43099_544->rtp_hold_timeout_sec;
  if (D.43512_545 == 0)
    goto <bb 196>;
  else
    goto <bb 197>;

<bb 196>:
  D.43099_546 = smh_46->mparams;
  D.43099_547 = smh_46->mparams;
  D.43506_548 = D.43099_547->rtp_timeout_sec;
  D.43515_549 = D.43506_548 * 10;
  D.43099_547->rtp_hold_timeout_sec = D.43515_549;

<bb 197>:
  D.43099_550 = smh_46->mparams;
  D.43512_551 = D.43099_550->rtp_hold_timeout_sec;
  if (D.43512_551 != 0)
    goto <bb 198>;
  else
    goto <bb 199>;

<bb 198>:
  D.43486_552 = a_engine_48->read_impl.samples_per_second;
  D.43099_553 = smh_46->mparams;
  D.43512_554 = D.43099_553->rtp_hold_timeout_sec;
  D.43518_555 = D.43486_552 * D.43512_554;
  D.43294_556 = a_engine_48->read_impl.samples_per_packet;
  D.43519_557 = D.43518_555 / D.43294_556;
  a_engine_48->max_missed_hold_packets = D.43519_557;

<bb 199>:
  D.43099_558 = smh_46->mparams;
  D.43520_559 = D.43099_558->te;
  if (D.43520_559 != 0)
    goto <bb 200>;
  else
    goto <bb 201>;

<bb 200>:
  D.43099_560 = smh_46->mparams;
  D.43520_561 = D.43099_560->te;
  D.43523_562 = (int) D.43520_561;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5188, session_45(D), 7, "Set 2833 dtmf send payload to %u\n", D.43523_562);
  D.43077_563 = a_engine_48->rtp_session;
  D.43099_564 = smh_46->mparams;
  D.43520_565 = D.43099_564->te;
  switch_rtp_set_telephony_event (D.43077_563, D.43520_565);
  D.43073_566 = session_45(D)->channel;
  D.43099_567 = smh_46->mparams;
  D.43520_568 = D.43099_567->te;
  D.43523_569 = (int) D.43520_568;
  switch_channel_set_variable_printf (D.43073_566, "rtp_2833_send_payload", "%d", D.43523_569);

<bb 201>:
  D.43099_570 = smh_46->mparams;
  D.43524_571 = D.43099_570->recv_te;
  if (D.43524_571 != 0)
    goto <bb 202>;
  else
    goto <bb 203>;

<bb 202>:
  D.43099_572 = smh_46->mparams;
  D.43524_573 = D.43099_572->recv_te;
  D.43527_574 = (int) D.43524_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5194, session_45(D), 7, "Set 2833 dtmf receive payload to %u\n", D.43527_574);
  D.43077_575 = a_engine_48->rtp_session;
  D.43099_576 = smh_46->mparams;
  D.43524_577 = D.43099_576->recv_te;
  switch_rtp_set_telephony_recv_event (D.43077_575, D.43524_577);
  D.43073_578 = session_45(D)->channel;
  D.43099_579 = smh_46->mparams;
  D.43524_580 = D.43099_579->recv_te;
  D.43527_581 = (int) D.43524_580;
  switch_channel_set_variable_printf (D.43073_578, "rtp_2833_recv_payload", "%d", D.43527_581);

<bb 203>:
  D.43531_582 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43531_582 != 0)
    goto <bb 208>;
  else
    goto <bb 204>;

<bb 204>:
  D.43073_583 = session_45(D)->channel;
  val_584 = switch_channel_get_variable_dup (D.43073_583, "supress_cng", 1, -1);
  # DEBUG val => val_584
  if (val_584 != 0B)
    goto <bb 205>;
  else
    goto <bb 206>;

<bb 205>:
  D.43534_585 = switch_true (val_584);
  if (D.43534_585 != 0)
    goto <bb 208>;
  else
    goto <bb 206>;

<bb 206>:
  D.43073_586 = session_45(D)->channel;
  val_587 = switch_channel_get_variable_dup (D.43073_586, "suppress_cng", 1, -1);
  # DEBUG val => val_587
  if (val_587 != 0B)
    goto <bb 207>;
  else
    goto <bb 209>;

<bb 207>:
  D.43536_588 = switch_true (val_587);
  if (D.43536_588 != 0)
    goto <bb 208>;
  else
    goto <bb 209>;

<bb 208>:
  D.43099_589 = smh_46->mparams;
  D.43099_589->cng_pt = 0;

<bb 209>:
  D.43073_590 = session_45(D)->channel;
  val_591 = switch_channel_get_variable_dup (D.43073_590, "rtp_digit_delay", 1, -1);
  # DEBUG val => val_591
  if (val_591 != 0B)
    goto <bb 210>;
  else
    goto <bb 213>;

<bb 210>:
  # DEBUG __nptr => val_591
  delayi_1347 = strtol (val_591, 0B, 10);
  delayi_1374 = delayi_1347;
  delayi_592 = delayi_1374;
  # DEBUG delayi => NULL
  if (delayi_592 < 0)
    goto <bb 211>;
  else
    goto <bb 212>;

<bb 211>:
  delayi_593 = 0;
  # DEBUG delayi => delayi_593

<bb 212>:
  # delayi_23 = PHI <delayi_592(210), delayi_593(211)>
  # DEBUG delayi => delayi_23
  D.43099_594 = smh_46->mparams;
  delayi.60_595 = (unsigned int) delayi_23;
  D.43099_594->dtmf_delay = delayi.60_595;

<bb 213>:
  D.43099_596 = smh_46->mparams;
  D.43542_597 = D.43099_596->dtmf_delay;
  if (D.43542_597 != 0)
    goto <bb 214>;
  else
    goto <bb 215>;

<bb 214>:
  D.43077_598 = a_engine_48->rtp_session;
  D.43099_599 = smh_46->mparams;
  D.43542_600 = D.43099_599->dtmf_delay;
  switch_rtp_set_interdigit_delay (D.43077_598, D.43542_600);
  D.43073_601 = session_45(D)->channel;
  D.43545_602 = switch_channel_get_name (D.43073_601);
  D.43099_603 = smh_46->mparams;
  D.43542_604 = D.43099_603->dtmf_delay;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5216, session_45(D), 7, "%s Set rtp dtmf delay to %u\n", D.43545_602, D.43542_604);

<bb 215>:
  D.43099_605 = smh_46->mparams;
  D.43143_606 = D.43099_605->cng_pt;
  if (D.43143_606 != 0)
    goto <bb 216>;
  else
    goto <bb 218>;

<bb 216>:
  D.43548_607 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43548_607 == 0)
    goto <bb 217>;
  else
    goto <bb 218>;

<bb 217>:
  D.43099_608 = smh_46->mparams;
  D.43143_609 = D.43099_608->cng_pt;
  D.43551_610 = (int) D.43143_609;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5222, session_45(D), 7, "Set comfort noise payload to %u\n", D.43551_610);
  D.43077_611 = a_engine_48->rtp_session;
  D.43099_612 = smh_46->mparams;
  D.43143_613 = D.43099_612->cng_pt;
  switch_rtp_set_cng_pt (D.43077_611, D.43143_613);

<bb 218>:
  switch_core_session_apply_crypto (session_45(D), 0);
  D.43171_614 = a_engine_48->cur_payload_map;
  D.43174_615 = D.43171_614->remote_sdp_port;
  D.43179_616 = (int) D.43174_615;
  switch_snprintf (&tmp, 50, "%d", D.43179_616);
  D.43073_617 = session_45(D)->channel;
  D.43171_618 = a_engine_48->cur_payload_map;
  D.43172_619 = D.43171_618->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_617, "remote_media_ip", D.43172_619, 1);
  D.43073_620 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_620, "remote_media_port", &tmp, 1);
  D.43073_621 = session_45(D)->channel;
  D.43552_622 = switch_channel_test_flag (D.43073_621, 74);
  if (D.43552_622 != 0)
    goto <bb 219>;
  else
    goto <bb 220> (video);

<bb 219>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5234, session_45(D), 6, "Activating ZRTP PROXY MODE\n");
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5235, session_45(D), 7, "Disable NOTIMER_DURING_BRIDGE\n");
  D.43073_623 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_623, 99);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5237, session_45(D), 7, "Activating audio UDPTL mode\n");
  D.43077_624 = a_engine_48->rtp_session;
  switch_rtp_udptl_mode (D.43077_624);

  # status_4 = PHI <status_43(18), status_73(53), status_73(80), status_73(218), status_73(219), status_73(79)>
video:
  # DEBUG status => status_4
  D.43073_630 = session_45(D)->channel;
  D.43555_631 = switch_channel_direction (D.43073_630);
  if (D.43555_631 == 1)
    goto <bb 221>;
  else
    goto <bb 222>;

<bb 221>:
  switch_core_media_check_video_codecs (session_45(D));

<bb 222>:
  D.43073_632 = session_45(D)->channel;
  D.43558_633 = switch_channel_test_flag (D.43073_632, 98);
  if (D.43558_633 != 0)
    goto <bb 223>;
  else
    goto <bb 334> (video_up);

<bb 223>:
  D.43561_634 = v_engine_49->cur_payload_map;
  D.43562_635 = D.43561_634->rm_encoding;
  if (D.43562_635 != 0B)
    goto <bb 224>;
  else
    goto <bb 334> (video_up);

<bb 224>:
  D.43561_636 = v_engine_49->cur_payload_map;
  D.43565_637 = D.43561_636->remote_sdp_port;
  if (D.43565_637 != 0)
    goto <bb 225>;
  else
    goto <bb 334> (video_up);

<bb 225>:
  D.43096_638 = v_engine_49->rtp_session;
  if (D.43096_638 != 0B)
    goto <bb 226>;
  else
    goto <bb 232>;

<bb 226>:
  D.43073_639 = session_45(D)->channel;
  D.43570_640 = switch_channel_test_flag (D.43073_639, 103);
  if (D.43570_640 != 0)
    goto <bb 227>;
  else
    goto <bb 232>;

<bb 227>:
  D.43096_641 = v_engine_49->rtp_session;
  remote_host_642 = switch_rtp_get_remote_host (D.43096_641);
  # DEBUG remote_host => remote_host_642
  D.43096_643 = v_engine_49->rtp_session;
  remote_port_644 = switch_rtp_get_remote_port (D.43096_643);
  # DEBUG remote_port => remote_port_644
  D.43574_645 = remote_host_642 != 0B;
  D.43575_646 = remote_port_644 != 0;
  D.43576_647 = D.43574_645 && D.43575_646;
  if (D.43576_647 != 0)
    goto <bb 228>;
  else
    goto <bb 231>;

<bb 228>:
  D.43561_648 = v_engine_49->cur_payload_map;
  D.43578_649 = D.43561_648->remote_sdp_ip;
  D.39400_650 = __builtin_strcmp (remote_host_642, D.43578_649);
  if (D.39400_650 == 0)
    goto <bb 229>;
  else
    goto <bb 231>;

<bb 229>:
  D.43561_651 = v_engine_49->cur_payload_map;
  D.43565_652 = D.43561_651->remote_sdp_port;
  if (D.43565_652 == remote_port_644)
    goto <bb 230>;
  else
    goto <bb 231>;

<bb 230>:
  D.43073_653 = session_45(D)->channel;
  D.43581_654 = switch_channel_get_name (D.43073_653);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5263, session_45(D), 7, "Video params are unchanged for %s.\n", D.43581_654);
  goto <bb 334> (video_up);

<bb 231>:
  D.43073_655 = session_45(D)->channel;
  D.43582_656 = switch_channel_get_name (D.43073_655);
  D.43583_657 = (int) remote_port_644;
  D.43561_658 = v_engine_49->cur_payload_map;
  D.43578_659 = D.43561_658->remote_sdp_ip;
  D.43561_660 = v_engine_49->cur_payload_map;
  D.43565_661 = D.43561_660->remote_sdp_port;
  D.43584_662 = (int) D.43565_661;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5267, session_45(D), 7, "Video params changed for %s from %s:%d to %s:%d\n", D.43582_656, remote_host_642, D.43583_657, D.43578_659, D.43584_662);

<bb 232>:
  D.43073_663 = session_45(D)->channel;
  D.43585_664 = switch_channel_test_flag (D.43073_663, 29);
  if (D.43585_664 == 0)
    goto <bb 233>;
  else
    goto <bb 235>;

<bb 233>:
  D.43096_665 = v_engine_49->rtp_session;
  D.43588_666 = switch_rtp_ready (D.43096_665);
  if (D.43588_666 != 0)
    goto <bb 234>;
  else
    goto <bb 235>;

<bb 234>:
  D.43073_667 = session_45(D)->channel;
  D.43591_668 = switch_channel_get_name (D.43073_667);
  D.43171_669 = a_engine_48->cur_payload_map;
  D.43172_670 = D.43171_669->remote_sdp_ip;
  D.43592_671 = v_engine_49->local_sdp_port;
  D.43593_672 = (int) D.43592_671;
  D.43561_673 = v_engine_49->cur_payload_map;
  D.43578_674 = D.43561_673->remote_sdp_ip;
  D.43561_675 = v_engine_49->cur_payload_map;
  D.43565_676 = D.43561_675->remote_sdp_port;
  D.43584_677 = (int) D.43565_676;
  D.43561_678 = v_engine_49->cur_payload_map;
  D.43594_679 = D.43561_678->agreed_pt;
  D.43595_680 = (int) D.43594_679;
  D.43189_681 = a_engine_48->read_impl.microseconds_per_packet;
  D.43190_682 = D.43189_681 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5275, session_45(D), 7, "VIDEO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43591_668, D.43172_670, D.43593_672, D.43578_674, D.43584_677, D.43595_680, D.43190_682);
  start_video_thread (session_45(D));
  D.43096_683 = v_engine_49->rtp_session;
  D.43561_684 = v_engine_49->cur_payload_map;
  D.43594_685 = D.43561_684->agreed_pt;
  switch_rtp_set_default_payload (D.43096_683, D.43594_685);

<bb 235>:
  D.43592_686 = v_engine_49->local_sdp_port;
  D.43593_687 = (int) D.43592_686;
  switch_snprintf (&tmp, 50, "%d", D.43593_687);
  D.43073_688 = session_45(D)->channel;
  D.43191_689 = a_engine_48->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_688, "local_video_ip", D.43191_689, 1);
  D.43073_690 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_690, "local_video_port", &tmp, 1);
  D.43096_691 = v_engine_49->rtp_session;
  if (D.43096_691 != 0B)
    goto <bb 236>;
  else
    goto <bb 247>;

<bb 236>:
  D.43073_692 = session_45(D)->channel;
  D.43598_693 = switch_channel_test_flag (D.43073_692, 103);
  if (D.43598_693 != 0)
    goto <bb 237>;
  else
    goto <bb 247>;

<bb 237>:
  rport_694 = 0B;
  # DEBUG rport => rport_694
  remote_rtcp_port_695 = v_engine_49->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_695
  if (remote_rtcp_port_695 == 0)
    goto <bb 238>;
  else
    goto <bb 240>;

<bb 238>:
  D.43073_696 = session_45(D)->channel;
  rport_697 = switch_channel_get_variable_dup (D.43073_696, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_697
  if (rport_697 != 0B)
    goto <bb 239>;
  else
    goto <bb 240>;

<bb 239>:
  # DEBUG __nptr => rport_697
  D.48114_1348 = strtol (rport_697, 0B, 10);
  D.48114_1376 = D.48114_1348;
  D.48114_698 = D.48114_1376;
  remote_rtcp_port_699 = (switch_port_t) D.48114_698;
  # DEBUG remote_rtcp_port => remote_rtcp_port_699

<bb 240>:
  # remote_rtcp_port_24 = PHI <remote_rtcp_port_695(237), remote_rtcp_port_695(238), remote_rtcp_port_699(239)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_24
  D.43096_700 = v_engine_49->rtp_session;
  D.43561_701 = v_engine_49->cur_payload_map;
  D.43578_702 = D.43561_701->remote_sdp_ip;
  D.43561_703 = v_engine_49->cur_payload_map;
  D.43565_704 = D.43561_703->remote_sdp_port;
  D.43606_705 = switch_rtp_set_remote_address (D.43096_700, D.43578_702, D.43565_704, remote_rtcp_port_24, 1, &err);
  if (D.43606_705 != 0)
    goto <bb 241>;
  else
    goto <bb 242>;

<bb 241>:
  err.45_706 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5306, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.45_706);
  goto <bb 334> (video_up);

<bb 242>:
  D.43561_707 = v_engine_49->cur_payload_map;
  D.43578_708 = D.43561_707->remote_sdp_ip;
  D.43561_709 = v_engine_49->cur_payload_map;
  D.43565_710 = D.43561_709->remote_sdp_port;
  D.43584_711 = (int) D.43565_710;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5308, session_45(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.43578_708, D.43584_711);
  D.43612_712 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43612_712 == 0)
    goto <bb 243>;
  else
    goto <bb 334> (video_up);

<bb 243>:
  D.43073_713 = session_45(D)->channel;
  D.43615_714 = switch_channel_test_flag (D.43073_713, 106);
  if (D.43615_714 == 0)
    goto <bb 244>;
  else
    goto <bb 334> (video_up);

<bb 244>:
  D.43073_715 = session_45(D)->channel;
  val_716 = switch_channel_get_variable_dup (D.43073_715, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_716
  if (val_716 == 0B)
    goto <bb 246>;
  else
    goto <bb 245>;

<bb 245>:
  D.43619_717 = switch_true (val_716);
  if (D.43619_717 == 0)
    goto <bb 246>;
  else
    goto <bb 334> (video_up);

<bb 246>:
  D.43096_718 = v_engine_49->rtp_session;
  switch_rtp_set_flag (D.43096_718, 7);
  start_video_thread (session_45(D));
  goto <bb 334> (video_up);

<bb 247>:
  D.43073_719 = session_45(D)->channel;
  D.43620_720 = switch_channel_test_flag (D.43073_719, 29);
  if (D.43620_720 != 0)
    goto <bb 248>;
  else
    goto <bb 255>;

<bb 248>:
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43270_721 = flags[19];
  D.43271_722 = D.43270_721 + 1;
  flags[19] = D.43271_722;
  D.43102_723 = flags[13];
  D.43103_724 = D.43102_723 + 1;
  flags[13] = D.43103_724;
  D.43625_725 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43625_725 == 0)
    goto <bb 249>;
  else
    goto <bb 253>;

<bb 249>:
  D.43073_726 = session_45(D)->channel;
  D.43628_727 = switch_channel_test_flag (D.43073_726, 106);
  if (D.43628_727 == 0)
    goto <bb 250>;
  else
    goto <bb 253>;

<bb 250>:
  D.43073_728 = session_45(D)->channel;
  val_729 = switch_channel_get_variable_dup (D.43073_728, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_729
  if (val_729 == 0B)
    goto <bb 252>;
  else
    goto <bb 251>;

<bb 251>:
  D.43632_730 = switch_true (val_729);
  if (D.43632_730 == 0)
    goto <bb 252>;
  else
    goto <bb 253>;

<bb 252>:
  D.43114_731 = flags[7];
  D.43115_732 = D.43114_731 + 1;
  flags[7] = D.43115_732;

<bb 253>:
  timer_name_733 = 0B;
  # DEBUG timer_name => timer_name_733
  D.43073_734 = session_45(D)->channel;
  D.43633_735 = switch_channel_get_name (D.43073_734);
  D.43171_736 = a_engine_48->cur_payload_map;
  D.43172_737 = D.43171_736->remote_sdp_ip;
  D.43592_738 = v_engine_49->local_sdp_port;
  D.43593_739 = (int) D.43592_738;
  D.43561_740 = v_engine_49->cur_payload_map;
  D.43578_741 = D.43561_740->remote_sdp_ip;
  D.43561_742 = v_engine_49->cur_payload_map;
  D.43565_743 = D.43561_742->remote_sdp_port;
  D.43584_744 = (int) D.43565_743;
  D.43561_745 = v_engine_49->cur_payload_map;
  D.43594_746 = D.43561_745->agreed_pt;
  D.43595_747 = (int) D.43594_746;
  D.43634_748 = v_engine_49->read_impl.microseconds_per_packet;
  D.43635_749 = D.43634_748 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5334, session_45(D), 7, "PROXY VIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43633_735, D.43172_737, D.43593_739, D.43578_741, D.43584_744, D.43595_747, D.43635_749);
  D.43096_750 = v_engine_49->rtp_session;
  D.43636_751 = switch_rtp_ready (D.43096_750);
  if (D.43636_751 != 0)
    goto <bb 254>;
  else
    goto <bb 257>;

<bb 254>:
  D.43096_752 = v_engine_49->rtp_session;
  D.43561_753 = v_engine_49->cur_payload_map;
  D.43594_754 = D.43561_753->agreed_pt;
  switch_rtp_set_default_payload (D.43096_752, D.43594_754);
  goto <bb 257>;

<bb 255>:
  D.43099_755 = smh_46->mparams;
  timer_name_756 = D.43099_755->timer_name;
  # DEBUG timer_name => timer_name_756
  D.43073_757 = session_45(D)->channel;
  var_758 = switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);
  # DEBUG var => var_758
  if (var_758 != 0B)
    goto <bb 256>;
  else
    goto <bb 257>;

<bb 256>:
  timer_name_759 = var_758;
  # DEBUG timer_name => timer_name_759

<bb 257>:
  D.43096_760 = v_engine_49->rtp_session;
  if (D.43096_760 != 0B)
    goto <bb 334> (video_up);
  else
    goto <bb 258>;

<bb 258>:
  D.43592_761 = v_engine_49->local_sdp_port;
  if (D.43592_761 == 0)
    goto <bb 259>;
  else
    goto <bb 260>;

<bb 259>:
  switch_core_media_choose_port (session_45(D), 1, 1);

<bb 260>:
  memset (&flags, 0, 156);
  D.43102_762 = flags[13];
  D.43103_763 = D.43102_762 + 1;
  flags[13] = D.43103_763;
  D.43137_764 = flags[8];
  D.43138_765 = D.43137_764 + 1;
  flags[8] = D.43138_765;
  D.43647_766 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43647_766 == 0)
    goto <bb 261>;
  else
    goto <bb 266>;

<bb 261>:
  D.43073_767 = session_45(D)->channel;
  D.43650_768 = switch_channel_test_flag (D.43073_767, 15);
  if (D.43650_768 == 0)
    goto <bb 262>;
  else
    goto <bb 266>;

<bb 262>:
  D.43073_769 = session_45(D)->channel;
  val_770 = switch_channel_get_variable_dup (D.43073_769, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_770
  if (val_770 == 0B)
    goto <bb 264>;
  else
    goto <bb 263>;

<bb 263>:
  D.43654_771 = switch_true (val_770);
  if (D.43654_771 == 0)
    goto <bb 264>;
  else
    goto <bb 266>;

<bb 264>:
  D.43073_772 = session_45(D)->channel;
  D.43655_773 = switch_channel_test_flag (D.43073_772, 106);
  if (D.43655_773 == 0)
    goto <bb 265>;
  else
    goto <bb 266>;

<bb 265>:
  D.43114_774 = flags[7];
  D.43115_775 = D.43114_774 + 1;
  flags[7] = D.43115_775;

<bb 266>:
  D.43073_776 = session_45(D)->channel;
  D.43658_777 = switch_channel_test_flag (D.43073_776, 29);
  if (D.43658_777 != 0)
    goto <bb 267>;
  else
    goto <bb 268>;

<bb 267>:
  D.43270_778 = flags[19];
  D.43271_779 = D.43270_778 + 1;
  flags[19] = D.43271_779;

<bb 268>:
  switch_core_media_set_video_codec (session_45(D), 0);
  flags[3] = 0;
  flags[0] = 0;
  D.43661_780 = flags[30];
  D.43662_781 = D.43661_780 + 1;
  flags[30] = D.43662_781;
  D.43184_782 = a_engine_48->local_sdp_ip;
  D.43592_783 = v_engine_49->local_sdp_port;
  D.43561_784 = v_engine_49->cur_payload_map;
  D.43578_785 = D.43561_784->remote_sdp_ip;
  D.43561_786 = v_engine_49->cur_payload_map;
  D.43565_787 = D.43561_786->remote_sdp_port;
  D.43561_788 = v_engine_49->cur_payload_map;
  D.43594_789 = D.43561_788->agreed_pt;
  D.43663_790 = switch_core_session_get_pool (session_45(D));
  D.43664_791 = switch_rtp_new (D.43184_782, D.43592_783, D.43578_785, D.43565_787, D.43594_789, 1, 90000, &flags, 0B, &err, D.43663_790);
  v_engine_49->rtp_session = D.43664_791;
  D.43073_792 = session_45(D)->channel;
  D.43666_793 = switch_channel_test_flag (D.43073_792, 29);
  if (D.43666_793 != 0)
    goto <bb 269>;
  else
    goto <bb 270>;

<bb 269>:
  iftmp.61_794 = "PROXY ";
  goto <bb 271>;

<bb 270>:
  iftmp.61_795 = "";

<bb 271>:
  # iftmp.61_35 = PHI <iftmp.61_794(269), iftmp.61_795(270)>
  D.43073_796 = session_45(D)->channel;
  D.43670_797 = switch_channel_get_name (D.43073_796);
  D.43171_798 = a_engine_48->cur_payload_map;
  D.43172_799 = D.43171_798->remote_sdp_ip;
  D.43592_800 = v_engine_49->local_sdp_port;
  D.43593_801 = (int) D.43592_800;
  D.43561_802 = v_engine_49->cur_payload_map;
  D.43578_803 = D.43561_802->remote_sdp_ip;
  D.43561_804 = v_engine_49->cur_payload_map;
  D.43565_805 = D.43561_804->remote_sdp_port;
  D.43584_806 = (int) D.43565_805;
  D.43561_807 = v_engine_49->cur_payload_map;
  D.43594_808 = D.43561_807->agreed_pt;
  D.43595_809 = (int) D.43594_808;
  D.43096_810 = v_engine_49->rtp_session;
  D.43672_811 = switch_rtp_ready (D.43096_810);
  if (D.43672_811 == 0)
    goto <bb 272>;
  else
    goto <bb 273>;

<bb 272>:
  iftmp.62_812 = err;
  goto <bb 274>;

<bb 273>:
  iftmp.62_813 = "SUCCESS";

<bb 274>:
  # iftmp.62_36 = PHI <iftmp.62_812(272), iftmp.62_813(273)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5391, session_45(D), 7, "%sVIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d [%s]\n", iftmp.61_35, D.43670_797, D.43172_799, D.43593_801, D.43578_803, D.43584_806, D.43595_809, 0, iftmp.62_36);
  D.43096_814 = v_engine_49->rtp_session;
  D.43676_815 = switch_rtp_ready (D.43096_814);
  if (D.43676_815 != 0)
    goto <bb 275>;
  else
    goto <bb 326>;

<bb 275>:
  D.43679_816 = v_engine_49->fir;
  if (D.43679_816 != 0)
    goto <bb 276>;
  else
    goto <bb 277>;

<bb 276>:
  D.43096_817 = v_engine_49->rtp_session;
  switch_rtp_set_flag (D.43096_817, 36);

<bb 277>:
  D.43682_818 = v_engine_49->pli;
  if (D.43682_818 != 0)
    goto <bb 278>;
  else
    goto <bb 279>;

<bb 278>:
  D.43096_819 = v_engine_49->rtp_session;
  switch_rtp_set_flag (D.43096_819, 37);

<bb 279>:
  D.43096_820 = v_engine_49->rtp_session;
  D.43685_821 = &v_engine_49->payload_map;
  switch_rtp_set_payload_map (D.43096_820, D.43685_821);
  start_video_thread (session_45(D));
  D.43073_822 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_822, 23, 1);
  D.43073_823 = session_45(D)->channel;
  ssrc_824 = switch_channel_get_variable_dup (D.43073_823, "rtp_use_video_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_824
  if (ssrc_824 != 0B)
    goto <bb 280>;
  else
    goto <bb 281>;

<bb 280>:
  ssrc_ul_825 = strtoul (ssrc_824, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_825
  D.43096_826 = v_engine_49->rtp_session;
  switch_rtp_set_ssrc (D.43096_826, ssrc_ul_825);
  v_engine_49->ssrc = ssrc_ul_825;
  goto <bb 282>;

<bb 281>:
  D.43096_827 = v_engine_49->rtp_session;
  D.43689_828 = v_engine_49->ssrc;
  switch_rtp_set_ssrc (D.43096_827, D.43689_828);

<bb 282>:
  D.43690_829 = v_engine_49->remote_ssrc;
  if (D.43690_829 != 0)
    goto <bb 283>;
  else
    goto <bb 284>;

<bb 283>:
  D.43096_830 = v_engine_49->rtp_session;
  D.43690_831 = v_engine_49->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43096_830, D.43690_831);

<bb 284>:
  D.43693_832 = v_engine_49->ice_in.chosen[0];
  D.43694_833 = v_engine_49->ice_in.cands[D.43693_832][0].ready;
  if (D.43694_833 != 0)
    goto <bb 285>;
  else
    goto <bb 289>;

<bb 285>:
  gen_ice (session_45(D), 1, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5433, session_45(D), 6, "Activating Video ICE\n");
  D.43096_834 = v_engine_49->rtp_session;
  D.43697_835 = v_engine_49->ice_in.ufrag;
  D.43698_836 = v_engine_49->ice_out.ufrag;
  D.43699_837 = v_engine_49->ice_out.pwd;
  D.43700_838 = v_engine_49->ice_in.pwd;
  D.43702_839 = switch_ice_direction (session_45(D));
  if (D.43702_839 == 1)
    goto <bb 286>;
  else
    goto <bb 287>;

<bb 286>:
  iftmp.63_840 = 2;
  goto <bb 288>;

<bb 287>:
  iftmp.63_841 = 6;

<bb 288>:
  # iftmp.63_37 = PHI <iftmp.63_840(286), iftmp.63_841(287)>
  D.43706_842 = &v_engine_49->ice_in;
  switch_rtp_activate_ice (D.43096_834, D.43697_835, D.43698_836, D.43699_837, D.43700_838, 0, iftmp.63_37, D.43706_842);

<bb 289>:
  D.43073_843 = session_45(D)->channel;
  val_844 = switch_channel_get_variable_dup (D.43073_843, "rtcp_video_interval_msec", 1, -1);
  # DEBUG val => val_844
  if (val_844 != 0B)
    goto <bb 291>;
  else
    goto <bb 290>;

<bb 290>:
  D.43099_845 = smh_46->mparams;
  val_846 = D.43099_845->rtcp_video_interval_msec;
  # DEBUG val => val_846
  if (val_846 != 0B)
    goto <bb 291>;
  else
    goto <bb 307>;

<bb 291>:
  # val_3 = PHI <val_844(289), val_846(290)>
  # DEBUG val => val_3
  D.43073_847 = session_45(D)->channel;
  rport_848 = switch_channel_get_variable_dup (D.43073_847, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_848
  remote_port_849 = v_engine_49->remote_rtcp_port;
  # DEBUG remote_port => remote_port_849
  if (rport_848 != 0B)
    goto <bb 292>;
  else
    goto <bb 293>;

<bb 292>:
  # DEBUG __nptr => rport_848
  D.48117_1349 = strtol (rport_848, 0B, 10);
  D.48117_1378 = D.48117_1349;
  D.48117_850 = D.48117_1378;
  remote_port_851 = (switch_port_t) D.48117_850;
  # DEBUG remote_port => remote_port_851

<bb 293>:
  # remote_port_25 = PHI <remote_port_849(291), remote_port_851(292)>
  # DEBUG remote_port => remote_port_25
  D.43713_852 = strcasecmp (val_3, "passthru");
  if (D.43713_852 == 0)
    goto <bb 294>;
  else
    goto <bb 295>;

<bb 294>:
  D.43716_853 = (int) remote_port_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5462, session_45(D), 6, "Activating VIDEO RTCP PASSTHRU PORT %d\n", D.43716_853);
  D.43096_854 = v_engine_49->rtp_session;
  D.43717_855 = v_engine_49->rtcp_mux;
  D.43718_856 = D.43717_855 > 0;
  switch_rtp_activate_rtcp (D.43096_854, -1, remote_port_25, D.43718_856);
  goto <bb 298>;

<bb 295>:
  # DEBUG __nptr => val_3
  interval_1350 = strtol (val_3, 0B, 10);
  interval_1380 = interval_1350;
  interval_857 = interval_1380;
  # DEBUG interval => NULL
  interval.64_858 = (unsigned int) interval_857;
  D.43721_859 = interval.64_858 + 4294967196;
  if (D.43721_859 > 499900)
    goto <bb 296>;
  else
    goto <bb 297>;

<bb 296>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5467, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_857);

<bb 297>:
  interval_860 = 10000;
  # DEBUG interval => interval_860
  D.43716_861 = (int) remote_port_25;
  D.43717_862 = v_engine_49->rtcp_mux;
  D.43724_863 = (int) D.43717_862;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5471, session_45(D), 6, "Activating VIDEO RTCP PORT %d mux %d\n", D.43716_861, D.43724_863);
  D.43096_864 = v_engine_49->rtp_session;
  D.43717_865 = v_engine_49->rtcp_mux;
  D.43718_866 = D.43717_865 > 0;
  switch_rtp_activate_rtcp (D.43096_864, interval_860, remote_port_25, D.43718_866);

<bb 298>:
  D.43725_867 = v_engine_49->ice_in.chosen[1];
  D.43726_868 = v_engine_49->ice_in.cands[D.43725_867][1].ready;
  if (D.43726_868 != 0)
    goto <bb 299>;
  else
    goto <bb 307>;

<bb 299>:
  D.43717_869 = v_engine_49->rtcp_mux;
  if (D.43717_869 > 0)
    goto <bb 300>;
  else
    goto <bb 303>;

<bb 300>:
  D.43725_870 = v_engine_49->ice_in.chosen[1];
  D.43732_871 = v_engine_49->ice_in.cands[D.43725_870][1].con_addr;
  D.43693_872 = v_engine_49->ice_in.chosen[0];
  D.43733_873 = v_engine_49->ice_in.cands[D.43693_872][0].con_addr;
  D.39417_874 = __builtin_strcmp (D.43732_871, D.43733_873);
  if (D.39417_874 == 0)
    goto <bb 301>;
  else
    goto <bb 303>;

<bb 301>:
  D.43725_875 = v_engine_49->ice_in.chosen[1];
  D.43735_876 = v_engine_49->ice_in.cands[D.43725_875][1].con_port;
  D.43693_877 = v_engine_49->ice_in.chosen[0];
  D.43736_878 = v_engine_49->ice_in.cands[D.43693_877][0].con_port;
  if (D.43735_876 == D.43736_878)
    goto <bb 302>;
  else
    goto <bb 303>;

<bb 302>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5481, session_45(D), 6, "Skipping VIDEO RTCP ICE (Same as VIDEO RTP)\n");
  goto <bb 307>;

<bb 303>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5484, session_45(D), 6, "Activating VIDEO RTCP ICE\n");
  D.43096_879 = v_engine_49->rtp_session;
  D.43697_880 = v_engine_49->ice_in.ufrag;
  D.43698_881 = v_engine_49->ice_out.ufrag;
  D.43699_882 = v_engine_49->ice_out.pwd;
  D.43700_883 = v_engine_49->ice_in.pwd;
  D.43739_884 = switch_ice_direction (session_45(D));
  if (D.43739_884 == 1)
    goto <bb 304>;
  else
    goto <bb 305>;

<bb 304>:
  iftmp.65_885 = 2;
  goto <bb 306>;

<bb 305>:
  iftmp.65_886 = 6;

<bb 306>:
  # iftmp.65_38 = PHI <iftmp.65_885(304), iftmp.65_886(305)>
  D.43706_887 = &v_engine_49->ice_in;
  switch_rtp_activate_ice (D.43096_879, D.43697_880, D.43698_881, D.43699_882, D.43700_883, 1, iftmp.65_38, D.43706_887);

<bb 307>:
  D.43743_888 = &v_engine_49->local_dtls_fingerprint.str;
  # DEBUG s => D.43743_888
  if (D.43743_888 == 0B)
    goto <bb 310>;
  else
    goto <bb 308>;

<bb 308>:
  D.48124_1351 = MEM[(const char *)D.43743_888];
  if (D.48124_1351 == 0)
    goto <bb 310>;
  else
    goto <bb 309>;

<bb 309>:

<bb 310>:
  # D.48123_1352 = PHI <1(307), 1(308), 0(309)>
  D.48123_1381 = D.48123_1352;
  D.48123_889 = D.48123_1381;
  if (D.48123_889 == 0)
    goto <bb 311>;
  else
    goto <bb 322>;

<bb 311>:
  D.43747_890 = switch_rtp_has_dtls ();
  if (D.43747_890 != 0)
    goto <bb 312>;
  else
    goto <bb 322>;

<bb 312>:
  D.43429_891 = smh_46->session;
  D.43750_892 = dtls_ok (D.43429_891);
  if (D.43750_892 != 0)
    goto <bb 313>;
  else
    goto <bb 322>;

<bb 313>:
  D.43429_893 = smh_46->session;
  D.43434_894 = D.43429_893->channel;
  D.43754_895 = switch_channel_direction (D.43434_894);
  if (D.43754_895 == 0)
    goto <bb 314>;
  else
    goto <bb 315>;

<bb 314>:
  dtype_896 = 1;
  goto <bb 316>;

<bb 315>:
  dtype_897 = 2;

<bb 316>:
  # dtype_39 = PHI <dtype_896(314), dtype_897(315)>
  dtype_898 = dtype_39;
  # DEBUG dtype => dtype_898
  xtype_899 = 4;
  # DEBUG xtype => xtype_899
  D.43717_900 = v_engine_49->rtcp_mux;
  if (D.43717_900 > 0)
    goto <bb 317>;
  else
    goto <bb 319>;

<bb 317>:
  D.43099_901 = smh_46->mparams;
  D.43760_902 = D.43099_901->rtcp_video_interval_msec;
  if (D.43760_902 != 0B)
    goto <bb 318>;
  else
    goto <bb 319>;

<bb 318>:
  xtype_903 = xtype_899 | 8;
  # DEBUG xtype => xtype_903

<bb 319>:
  # xtype_26 = PHI <xtype_899(316), xtype_899(317), xtype_903(318)>
  # DEBUG xtype => xtype_26
  D.43096_904 = v_engine_49->rtp_session;
  D.43763_905 = &v_engine_49->local_dtls_fingerprint;
  D.43764_906 = &v_engine_49->remote_dtls_fingerprint;
  D.43765_907 = dtype_898 | xtype_26;
  switch_rtp_add_dtls (D.43096_904, D.43763_905, D.43764_906, D.43765_907);
  D.43717_908 = v_engine_49->rtcp_mux;
  if (D.43717_908 <= 0)
    goto <bb 320>;
  else
    goto <bb 322>;

<bb 320>:
  D.43099_909 = smh_46->mparams;
  D.43760_910 = D.43099_909->rtcp_video_interval_msec;
  if (D.43760_910 != 0B)
    goto <bb 321>;
  else
    goto <bb 322>;

<bb 321>:
  xtype_911 = 8;
  # DEBUG xtype => xtype_911
  D.43096_912 = v_engine_49->rtp_session;
  D.43763_913 = &v_engine_49->local_dtls_fingerprint;
  D.43764_914 = &v_engine_49->remote_dtls_fingerprint;
  D.43765_915 = dtype_898 | xtype_911;
  switch_rtp_add_dtls (D.43096_912, D.43763_913, D.43764_914, D.43765_915);

<bb 322>:
  D.43073_916 = session_45(D)->channel;
  val_917 = switch_channel_get_variable_dup (D.43073_916, "rtp_manual_video_rtp_bugs", 1, -1);
  # DEBUG val => val_917
  if (val_917 != 0B)
    goto <bb 323>;
  else
    goto <bb 324>;

<bb 323>:
  D.43772_918 = &v_engine_49->rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43772_918, val_917);

<bb 324>:
  D.43096_919 = v_engine_49->rtp_session;
  D.43773_920 = v_engine_49->rtp_bugs;
  D.43099_921 = smh_46->mparams;
  D.43774_922 = D.43099_921->manual_video_rtp_bugs;
  D.43775_923 = D.43773_920 | D.43774_922;
  switch_rtp_intentional_bugs (D.43096_919, D.43775_923);
  D.43073_924 = session_45(D)->channel;
  D.43561_925 = v_engine_49->cur_payload_map;
  D.43594_926 = D.43561_925->agreed_pt;
  D.43595_927 = (int) D.43594_926;
  switch_channel_set_variable_printf (D.43073_924, "rtp_use_video_pt", "%d", D.43595_927);
  D.43096_928 = v_engine_49->rtp_session;
  D.43776_929 = switch_rtp_get_ssrc (D.43096_928);
  v_engine_49->ssrc = D.43776_929;
  D.43073_930 = session_45(D)->channel;
  D.43689_931 = v_engine_49->ssrc;
  switch_channel_set_variable_printf (D.43073_930, "rtp_use_video_ssrc", "%u", D.43689_931);
  switch_core_session_apply_crypto (session_45(D), 1);
  D.43073_932 = session_45(D)->channel;
  D.43777_933 = switch_channel_test_flag (D.43073_932, 74);
  if (D.43777_933 != 0)
    goto <bb 325>;
  else
    goto <bb 334> (video_up);

<bb 325>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5542, session_45(D), 7, "Activating video UDPTL mode\n");
  D.43096_934 = v_engine_49->rtp_session;
  switch_rtp_udptl_mode (D.43096_934);
  goto <bb 334> (video_up);

<bb 326>:
  err.45_935 = err;
  if (err.45_935 != 0B)
    goto <bb 327>;
  else
    goto <bb 328>;

<bb 327>:
  iftmp.67_936 = err;
  goto <bb 329>;

<bb 328>:
  iftmp.67_937 = "";

<bb 329>:
  # iftmp.67_40 = PHI <iftmp.67_936(327), iftmp.67_937(328)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5547, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", iftmp.67_40);
  D.43073_938 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_938, "src/switch_core_media.c", &__func__, 5548, 27);
  goto <bb 337> (end);

<bb 330>:
  err.45_625 = err;
  if (err.45_625 != 0B)
    goto <bb 331>;
  else
    goto <bb 332>;

<bb 331>:
  iftmp.68_626 = err;
  goto <bb 333>;

<bb 332>:
  iftmp.68_627 = "";

<bb 333>:
  # iftmp.68_41 = PHI <iftmp.68_626(331), iftmp.68_627(332)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5554, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", iftmp.68_41);
  D.43073_628 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_628, "src/switch_core_media.c", &__func__, 5555, 27);
  status_629 = 1;
  # DEBUG status => status_629
  goto <bb 337> (end);

video_up:
  D.43262_939 = session_45(D) != 0B;
  D.43790_940 = v_engine_49 != 0B;
  D.43791_941 = D.43262_939 && D.43790_940;
  if (D.43791_941 != 0)
    goto <bb 335>;
  else
    goto <bb 336>;

<bb 335>:
  check_dtls_reinvite (session_45(D), v_engine_49);

<bb 336>:
  status_942 = 0;
  # DEBUG status => status_942

  # status_5 = PHI <status_61(14), status_70(19), status_73(20), status_4(329), status_629(333), status_942(336)>
end:
  # DEBUG status => status_5
  D.43073_943 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_943, 103);
  switch_core_recovery_track (session_45(D));
  status_944 = status_5;

<bb 338>:
  # status_27 = PHI <status_47(5), status_945(8), status_944(337)>
  return status_27;

}



;; Function switch_core_media_check_dtmf_type (switch_core_media_check_dtmf_type)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (D.43050_3 - 3 )
Partition 4 (val_4 - 4 )
Partition 5 (D.43053_5 - 5 )
Partition 6 (D.43056_6 - 6 )
Partition 7 (D.43058_7 - 7 )
Partition 8 (D.43056_8 - 8 )
Partition 9 (D.43062_9 - 9 )
Partition 10 (D.43056_10 - 10 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15 - 15 )

switch_core_media_check_dtmf_type (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_check_dtmf_type";
  struct switch_media_handle_t * smh;
  const char * val;
  int D.43062;
  int D.43058;
  struct switch_core_media_params_t * D.43056;
  int D.43053;
  struct switch_channel_t * D.43050;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5897, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  D.43050_3 = session_1(D)->channel;
  val_4 = switch_channel_get_variable_dup (D.43050_3, "dtmf_type", 1, -1);
  # DEBUG val => val_4
  if (val_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 6>:
  D.43053_5 = strcasecmp (val_4, "rfc2833");
  if (D.43053_5 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.43056_6 = smh_2->mparams;
  D.43056_6->dtmf_type = 0;
  goto <bb 12>;

<bb 8>:
  D.43058_7 = strcasecmp (val_4, "info");
  if (D.43058_7 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.43056_8 = smh_2->mparams;
  D.43056_8->dtmf_type = 1;
  goto <bb 12>;

<bb 10>:
  D.43062_9 = strcasecmp (val_4, "none");
  if (D.43062_9 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.43056_10 = smh_2->mparams;
  D.43056_10->dtmf_type = 2;

<bb 12>:
  return;

}



;; Function switch_core_media_sdp_map (switch_core_media_sdp_map)

Try : br_3(P3) & br_19(P19) : Same root, coalesced --> P3.
Try : br_3(P3) & br_22(P22) : Same root, coalesced --> P3.
Try : br_3(P3) & br_23(P23) : Same root, coalesced --> P3.
Try : map_2(P2) & map_17(P17) : Same root, coalesced --> P2.
Try : map_2(P2) & map_32(P32) : Same root, coalesced --> P2.
Try : m_1(P1) & m_15(P15) : Same root, coalesced --> P1.
Try : m_1(P1) & m_33(P33) : Same root, coalesced --> P1.
Try : D.43022_4(P4) & D.43022_10(P10) : Same root, coalesced --> P4.
Try : D.43022_4(P4) & D.43022_12(P12) : Same root, coalesced --> P4.
Try : D.43022_4(P4) & D.43022_34(P34) : Same root, coalesced --> P4.

Partition map 

Partition 1 (m_1 - 1 15 33 )
Partition 2 (map_2 - 2 17 32 )
Partition 3 (br_3 - 3 19 22 23 )
Partition 4 (D.43022_4 - 4 10 12 34 )
Partition 5 (parser_5 - 5 )
Partition 6 (r_sdp_6(D) - 6 )
Partition 7 (D.43018_7 - 7 )
Partition 8 (D.43019_8 - 8 )
Partition 9 (parser_9 - 9 )
Partition 11 (sdp_11 - 11 )
Partition 13 (fmtp_13(D) - 13 )
Partition 14 (pt_14(D) - 14 )
Partition 16 (D.43025_16 - 16 )
Partition 18 (D.43028_18 - 18 )
Partition 20 (D.43031_20 - 20 )
Partition 21 (D.43031_21 - 21 )
Partition 24 (D.43036_24 - 24 )
Partition 25 (D.43037_25 - 25 )
Partition 26 (D.43028_26 - 26 )
Partition 27 (D.43028_27 - 27 )
Partition 28 (D.43041_28 - 28 )
Partition 29 (D.43031_29 - 29 )
Partition 30 (D.43044_30 - 30 )
Partition 31 (D.43031_31 - 31 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40(D) - 40 )
Partition 41 (.MEM_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43 - 43 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )

switch_core_media_sdp_map (const char * r_sdp, struct switch_event_t * * fmtp, struct switch_event_t * * pt)
{
  char * br;
  char key[128];
  char buf[25];
  struct sdp_rtpmap_t * map;
  static const char __func__[26] = "switch_core_media_sdp_map";
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  struct switch_event_t * D.43044;
  struct switch_event_t * D.43041;
  int D.43037;
  <unnamed-unsigned:7> D.43036;
  const char * D.43031;
  const char * D.43028;
  sdp_proto_e D.43025;
  switch_status_t D.43022;
  int D.43019;
  size_t D.43018;

<bb 2>:
  parser_5 = 0B;
  # DEBUG parser => parser_5
  D.43018_7 = strlen (r_sdp_6(D));
  D.43019_8 = (int) D.43018_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.43022_10 = 1;
  goto <bb 23>;

<bb 4>:
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  sdp_parser_free (parser_9);
  D.43022_12 = 1;
  goto <bb 23>;

<bb 6>:
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);
  m_15 = sdp_11->sdp_media;
  # DEBUG m => m_15
  goto <bb 21>;

<bb 7>:
  D.43025_16 = m_1->m_proto;
  if (D.43025_16 == 256)
    goto <bb 8>;
  else
    goto <bb 20>;

<bb 8>:
  map_17 = m_1->m_rtpmaps;
  # DEBUG map => map_17
  goto <bb 19>;

<bb 9>:
  D.43028_18 = map_2->rm_encoding;
  if (D.43028_18 != 0B)
    goto <bb 10>;
  else
    goto <bb 18>;

<bb 10>:
  buf = "";
  key = "";
  br_19 = 0B;
  # DEBUG br => br_19
  D.43031_20 = map_2->rm_fmtp;
  if (D.43031_20 != 0B)
    goto <bb 11>;
  else
    goto <bb 13>;

<bb 11>:
  D.43031_21 = map_2->rm_fmtp;
  br_22 = strstr (D.43031_21, "bitrate=");
  # DEBUG br => br_22
  if (br_22 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  br_23 = br_22 + 8;
  # DEBUG br => br_23

<bb 13>:
  # br_3 = PHI <br_19(10), br_22(11), br_23(12)>
  # DEBUG br => br_3
  D.43036_24 = map_2->rm_pt;
  D.43037_25 = (int) D.43036_24;
  switch_snprintf (&buf, 25, "%d", D.43037_25);
  if (br_3 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.43028_26 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);
  goto <bb 16>;

<bb 15>:
  D.43028_27 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s", D.43028_27);

<bb 16>:
  D.43041_28 = *pt_14(D);
  switch_event_add_header_string (D.43041_28, 1, &key, &buf);
  D.43031_29 = map_2->rm_fmtp;
  if (D.43031_29 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.43044_30 = *fmtp_13(D);
  D.43031_31 = map_2->rm_fmtp;
  switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);

<bb 18>:
  map_32 = map_2->rm_next;
  # DEBUG map => map_32

<bb 19>:
  # map_2 = PHI <map_17(8), map_32(18)>
  # DEBUG map => map_2
  if (map_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 20>;

<bb 20>:
  m_33 = m_1->m_next;
  # DEBUG m => m_33

<bb 21>:
  # m_1 = PHI <m_15(6), m_33(20)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 7>;
  else
    goto <bb 22>;

<bb 22>:
  sdp_parser_free (parser_9);
  D.43022_34 = 0;

<bb 23>:
  # D.43022_4 = PHI <D.43022_10(3), D.43022_12(5), D.43022_34(22)>
  return D.43022_4;

}



;; Function switch_core_media_set_local_sdp (switch_core_media_set_local_sdp)

Try : iftmp.44_10(P10) & sdp_str_8(D)(P8) --> P10 sdp_str
Try : iftmp.44_1(P1) & iftmp.44_9(P9) : Same root, coalesced --> P1.
Try : iftmp.44_1(P1) & sdp_str_10(P10) --> P1 sdp_str

Partition map 

Partition 1 (sdp_str_1 - 1 8 9 10 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 4 (D.43005_4 - 4 )
Partition 5 (D.43005_5 - 5 )
Partition 6 (D.43008_6 - 6 )
Partition 7 (dup_7(D) - 7 )
Partition 11 (D.43013_11 - 11 )
Partition 12 (D.43008_12 - 12 )
Partition 13 (D.43014_13 - 13 )
Partition 14 (D.43005_14 - 14 )
Partition 15 (D.43005_15 - 15 )
Partition 16 (.MEM_16 - 16 )
Partition 17 (.MEM_17 - 17 )
Partition 18 (.MEM_18(D) - 18 )
Partition 19 (.MEM_19 - 19 )
Partition 20 (.MEM_20 - 20 )
Partition 21 (.MEM_21 - 21 )
Partition 22 (.MEM_22 - 22 )
Partition 23 (.MEM_23 - 23 )

Coalesced iftmp.44_9 to sdp_str_1
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_set_local_sdp";
  static const char __func__[32] = "switch_core_media_set_local_sdp";

}
switch_core_media_set_local_sdp (struct switch_core_session_t * session, const char * sdp_str, switch_bool_t dup)
{
  static const char __func__[32] = "switch_core_media_set_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_set_local_sdp";
  struct switch_media_handle_t * smh;
  char * D.43014;
  struct switch_channel_t * D.43013;
  struct switch_core_media_params_t * D.43008;
  struct switch_mutex_t * D.43005;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5978, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  D.43005_4 = smh_3->sdp_mutex;
  if (D.43005_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.43005_5 = smh_3->sdp_mutex;
  switch_mutex_lock (D.43005_5);

<bb 7>:
  D.43008_6 = smh_3->mparams;
  if (dup_7(D) != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  sdp_str_9 = switch_core_perform_session_strdup (session_2(D), sdp_str_8(D), "src/switch_core_media.c", &__func__, 5985);
  goto <bb 10>;

<bb 9>:
  sdp_str_10 = sdp_str_8(D);

<bb 10>:
  # sdp_str_1 = PHI <sdp_str_9(8), sdp_str_10(9)>
  D.43008_6->local_sdp_str = sdp_str_1;
  D.43013_11 = session_2(D)->channel;
  D.43008_12 = smh_3->mparams;
  D.43014_13 = D.43008_12->local_sdp_str;
  switch_channel_set_variable_var_check (D.43013_11, "rtp_local_sdp_str", D.43014_13, 1);
  D.43005_14 = smh_3->sdp_mutex;
  if (D.43005_14 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.43005_15 = smh_3->sdp_mutex;
  switch_mutex_unlock (D.43005_15);

<bb 12>:
  return;

}



;; Function switch_core_media_gen_local_sdp (switch_core_media_gen_local_sdp)

Try : fmtp_out_216(P216) & fmtp_out_var_82(P82) : 2 different USER vars. No coalesce.
Try : D.48131_1558(P1558) & D.48133_1517(P1517) --> P1558 D.48131
Try : D.41650_227(P227) & D.48131_1558(P1558) --> P1558 D.48131
Try : D.48135_1559(P1559) & D.48137_1519(P1519) --> P1559 D.48135
Try : D.41676_244(P244) & D.48135_1559(P1559) --> P1559 D.48135
Try : sr_247(P247) & var_val_246(P246) : 2 different USER vars. No coalesce.
Try : D.48139_1560(P1560) & D.48141_1521(P1521) --> P1560 D.48139
Try : D.41704_268(P268) & D.48139_1560(P1560) --> P1560 D.48139
Try : family_273(P273) & iftmp.28_59(P59) --> P273 family
Try : iftmp.31_464(P464) & append_audio_78(P78) --> P464 append_audio
Try : D.48143_1561(P1561) & D.48145_1523(P1523) --> P1561 D.48143
Try : D.41892_476(P476) & D.48143_1561(P1561) --> P1561 D.48143
Try : D.48147_1562(P1562) & D.48149_1525(P1525) --> P1562 D.48147
Try : D.41900_482(P482) & D.48147_1562(P1562) --> P1562 D.48147
Try : D.48151_1563(P1563) & D.48153_1527(P1527) --> P1563 D.48151
Try : D.41967_556(P556) & D.48151_1563(P1563) --> P1563 D.48151
Try : D.48155_1564(P1564) & D.48157_1529(P1529) --> P1564 D.48155
Try : D.41970_558(P558) & D.48155_1564(P1564) --> P1564 D.48155
Try : D.48159_1565(P1565) & D.48161_1531(P1531) --> P1565 D.48159
Try : D.41996_593(P593) & D.48159_1565(P1565) --> P1565 D.48159
Try : D.48163_1566(P1566) & D.48165_1533(P1533) --> P1566 D.48163
Try : D.41999_595(P595) & D.48163_1566(P1566) --> P1566 D.48163
Try : D.48167_1567(P1567) & D.48169_1535(P1535) --> P1567 D.48167
Try : D.42017_623(P623) & D.48167_1567(P1567) --> P1567 D.48167
Try : bp_689(P689) & buf_144(P144) : 2 different USER vars. No coalesce.
Try : both_696(P696) & iftmp.32_63(P63) --> P696 both
Try : bp_665(P665) & buf_144(P144) : 2 different USER vars. No coalesce.
Try : cur_ptime_667(P667) & this_ptime_41(P41) : 2 different USER vars. No coalesce.
Try : pass_fmtp_830(P830) & of_829(P829) : 2 different USER vars. No coalesce.
Try : pass_fmtp_831(P831) & ov_fmtp_76(P76) : 2 different USER vars. No coalesce.
Try : iftmp.36_867(P867) & append_video_80(P80) --> P867 append_video
Try : D.48171_1568(P1568) & D.48173_1537(P1537) --> P1568 D.48171
Try : D.42300_909(P909) & D.48171_1568(P1568) --> P1568 D.48171
Try : fmtp_910(P910) & ov_fmtp_76(P76) : 2 different USER vars. No coalesce.
Try : D.48175_1569(P1569) & D.48177_1539(P1539) --> P1569 D.48175
Try : D.42309_917(P917) & D.48175_1569(P1569) --> P1569 D.48175
Try : D.48179_1570(P1570) & D.48181_1541(P1541) --> P1570 D.48179
Try : D.42312_919(P919) & D.48179_1570(P1570) --> P1570 D.48179
Try : fmtp_920(P920) & pass_fmtp_20(P20) : 2 different USER vars. No coalesce.
Try : D.48183_1571(P1571) & D.48185_1543(P1543) --> P1571 D.48183
Try : D.42315_921(P921) & D.48183_1571(P1571) --> P1571 D.48183
Try : D.48187_1572(P1572) & D.48189_1545(P1545) --> P1572 D.48187
Try : D.42333_934(P934) & D.48187_1572(P1572) --> P1572 D.48187
Try : D.48191_1574(P1574) & D.48192_1546(P1546) --> P1574 D.48191
Try : v_979(P979) & D.48191_1574(P1574) --> P1574 v
Try : bw_980(P980) & v_979(P1574) : 2 different USER vars. No coalesce.
Try : D.48194_1575(P1575) & D.48196_1548(P1548) --> P1575 D.48194
Try : D.42434_1038(P1038) & D.48194_1575(P1575) --> P1575 D.48194
Try : D.48198_1576(P1576) & D.48200_1550(P1550) --> P1576 D.48198
Try : D.42437_1040(P1040) & D.48198_1576(P1576) --> P1576 D.48198
Try : D.48202_1577(P1577) & D.48204_1552(P1552) --> P1577 D.48202
Try : D.42461_1075(P1075) & D.48202_1577(P1577) --> P1577 D.48202
Try : D.48206_1578(P1578) & D.48208_1554(P1554) --> P1578 D.48206
Try : D.42465_1077(P1077) & D.48206_1578(P1578) --> P1578 D.48206
Try : D.48210_1579(P1579) & D.48212_1556(P1556) --> P1579 D.48210
Try : D.42491_1111(P1111) & D.48210_1579(P1579) --> P1579 D.48210
Try : use_cng_17(P17) & use_cng_71(P71) : Same root, coalesced --> P17.
Try : use_cng_17(P17) & use_cng_71(P17) : Already coalesced.
Try : use_cng_17(P17) & use_cng_152(P152) : Same root, coalesced --> P17.
Try : i_36(P36) & i_157(P157) : Same root, coalesced --> P36.
Try : i_36(P36) & i_162(P162) : Same root, coalesced --> P36.
Try : i_37(P37) & i_164(P164) : Same root, coalesced --> P37.
Try : i_37(P37) & i_213(P213) : Same root, coalesced --> P37.
Try : fmtp_out_21(P21) & fmtp_out_141(P141) : Same root, coalesced --> P21.
Try : fmtp_out_21(P21) & fmtp_out_216(P216) : Same root, coalesced --> P21.
Try : ip_1(P1) & ip_223(D)(P223) : Same root, coalesced --> P1.
Try : ip_1(P1) & ip_233(P233) : Same root, coalesced --> P1.
Try : ip_1(P1) & ip_234(P234) : Same root, coalesced --> P1.
Try : port_2(P2) & port_238(D)(P238) : Same root, coalesced --> P2.
Try : port_2(P2) & port_239(P239) : Same root, coalesced --> P2.
Try : port_2(P2) & port_240(P240) : Same root, coalesced --> P2.
Try : sr_3(P3) & sr_226(D)(P226) : Same root, coalesced --> P3.
Try : sr_3(P3) & sr_247(P247) : Same root, coalesced --> P3.
Try : sr_3(P3) & sr_248(P248) : Same root, coalesced --> P3.
Try : sr_4(P4) & sr_3(P3) : Same root, coalesced --> P3.
Try : sr_4(P3) & sr_3(P3) : Already coalesced.
Try : sr_4(P3) & sr_269(P269) : Same root, coalesced --> P3.
Try : iftmp.28_59(P273) & iftmp.28_271(P271) --> P273 family
Try : iftmp.28_59(P273) & iftmp.28_272(P272) --> P273 family
Try : iftmp.29_60(P60) & iftmp.29_294(P294) : Same root, coalesced --> P60.
Try : iftmp.29_60(P60) & iftmp.29_295(P295) : Same root, coalesced --> P60.
Try : pmap_34(P34) & pmap_306(P306) : Same root, coalesced --> P34.
Try : pmap_34(P34) & pmap_317(P317) : Same root, coalesced --> P34.
Try : pmap_35(P35) & pmap_389(P389) : Same root, coalesced --> P35.
Try : pmap_35(P35) & pmap_402(P402) : Same root, coalesced --> P35.
Try : ptime_5(P5) & ptime_69(P69) : Same root, coalesced --> P5.
Try : ptime_5(P5) & ptime_410(P410) : Same root, coalesced --> P5.
Try : iftmp.31_62(P62) & iftmp.31_463(P463) : Same root, coalesced --> P62.
Try : iftmp.31_62(P62) & append_audio_464(P464) --> P62 append_audio
Try : iftmp.30_61(P61) & iftmp.30_466(P466) : Same root, coalesced --> P61.
Try : iftmp.30_61(P61) & iftmp.30_467(P467) : Same root, coalesced --> P61.
Try : cng_type_42(P42) & cng_type_636(P636) : Same root, coalesced --> P42.
Try : cng_type_42(P42) & cng_type_636(P42) : Already coalesced.
Try : cng_type_42(P42) & cng_type_645(P645) : Same root, coalesced --> P42.
Try : cng_type_42(P42) & cng_type_645(P42) : Already coalesced.
Try : iftmp.32_63(P696) & iftmp.32_694(P694) --> P696 both
Try : iftmp.32_63(P696) & iftmp.32_695(P695) --> P696 both
Try : bp_43(P43) & bp_689(P689) : Same root, coalesced --> P43.
Try : bp_43(P43) & bp_704(P704) : Same root, coalesced --> P43.
Try : bp_43(P43) & bp_704(P43) : Already coalesced.
Try : both_44(P44) & both_696(P696) : Same root, coalesced --> P696.
Try : both_44(P696) & both_696(P696) : Already coalesced.
Try : both_44(P696) & both_706(P706) : Same root, coalesced --> P696.
Try : this_ptime_41(P41) & this_ptime_659(P659) : Same root, coalesced --> P41.
Try : this_ptime_41(P41) & this_ptime_664(P664) : Same root, coalesced --> P41.
Try : bp_45(P45) & bp_665(P665) : Same root, coalesced --> P45.
Try : bp_45(P45) & bp_677(P677) : Same root, coalesced --> P45.
Try : bp_45(P45) & bp_677(P45) : Already coalesced.
Try : both_46(P46) & both_666(P666) : Same root, coalesced --> P46.
Try : both_46(P46) & both_666(P46) : Already coalesced.
Try : both_46(P46) & both_679(P679) : Same root, coalesced --> P46.
Try : both_47(P47) & both_46(P46) : Same root, coalesced --> P46.
Try : both_47(P46) & both_684(P684) : Same root, coalesced --> P46.
Try : cur_ptime_39(P39) & cur_ptime_40(P40) : Same root, coalesced --> P39.
Try : cur_ptime_39(P39) & cur_ptime_40(P39) : Already coalesced.
Try : cur_ptime_39(P39) & cur_ptime_667(P667) : Same root, coalesced --> P39.
Try : cur_ptime_39(P39) & cur_ptime_667(P39) : Already coalesced.
Try : i_38(P38) & i_653(P653) : Same root, coalesced --> P38.
Try : i_38(P38) & i_688(P688) : Same root, coalesced --> P38.
Try : cur_ptime_40(P39) & cur_ptime_634(P634) : Same root, coalesced --> P39.
Try : cur_ptime_40(P39) & cur_ptime_39(P39) : Already coalesced.
Try : ptime_6(P6) & ptime_5(P5) : Same root, coalesced --> P5.
Try : ptime_6(P5) & ptime_69(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_69(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_69(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_5(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_5(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_5(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_5(P5) : Already coalesced.
Try : ptime_6(P5) & ptime_69(P5) : Already coalesced.
Try : rate_11(P11) & rate_351(P351) : Same root, coalesced --> P11.
Try : rate_11(P11) & rate_70(P70) : Same root, coalesced --> P11.
Try : rate_11(P11) & rate_70(P11) : Already coalesced.
Try : rate_11(P11) & rate_70(P11) : Already coalesced.
Try : rate_11(P11) & rate_351(P11) : Already coalesced.
Try : rate_11(P11) & rate_351(P11) : Already coalesced.
Try : rate_11(P11) & rate_351(P11) : Already coalesced.
Try : rate_11(P11) & rate_351(P11) : Already coalesced.
Try : rate_11(P11) & rate_70(P11) : Already coalesced.
Try : iftmp.34_64(P64) & iftmp.34_739(P739) : Same root, coalesced --> P64.
Try : iftmp.34_64(P64) & iftmp.34_738(P738) : Same root, coalesced --> P64.
Try : pmap_49(P49) & pmap_751(P751) : Same root, coalesced --> P49.
Try : pmap_49(P49) & pmap_762(P762) : Same root, coalesced --> P49.
Try : ptime_7(P7) & ptime_8(P8) : Same root, coalesced --> P7.
Try : ptime_7(P7) & ptime_8(P7) : Already coalesced.
Try : ptime_7(P7) & ptime_8(P7) : Already coalesced.
Try : ptime_7(P7) & ptime_8(P7) : Already coalesced.
Try : ptime_7(P7) & ptime_789(P789) : Same root, coalesced --> P7.
Try : ptime_8(P7) & ptime_10(P10) : Same root, coalesced --> P7.
Try : ptime_8(P7) & ptime_7(P7) : Already coalesced.
Try : i_50(P50) & i_766(P766) : Same root, coalesced --> P50.
Try : i_50(P50) & i_790(P790) : Same root, coalesced --> P50.
Try : ptime_9(P9) & ptime_10(P7) : Same root, coalesced --> P7.
Try : ptime_9(P7) & ptime_10(P7) : Already coalesced.
Try : ptime_9(P7) & ptime_8(P7) : Already coalesced.
Try : ptime_9(P7) & ptime_10(P7) : Already coalesced.
Try : vp8_22(P22) & vp8_27(P27) : Same root, coalesced --> P22.
Try : vp8_22(P22) & vp8_801(P801) : Same root, coalesced --> P22.
Try : red_28(P28) & red_33(P33) : Same root, coalesced --> P28.
Try : red_28(P28) & red_807(P807) : Same root, coalesced --> P28.
Try : pass_fmtp_18(P18) & pass_fmtp_824(P824) : Same root, coalesced --> P18.
Try : pass_fmtp_18(P18) & pass_fmtp_831(P831) : Same root, coalesced --> P18.
Try : pass_fmtp_18(P18) & pass_fmtp_833(P833) : Same root, coalesced --> P18.
Try : pmap_51(P51) & pmap_843(P843) : Same root, coalesced --> P51.
Try : pmap_51(P51) & pmap_857(P857) : Same root, coalesced --> P51.
Try : iftmp.36_66(P66) & iftmp.36_866(P866) : Same root, coalesced --> P66.
Try : iftmp.36_66(P66) & append_video_867(P867) --> P66 append_video
Try : iftmp.35_65(P65) & iftmp.35_869(P869) : Same root, coalesced --> P65.
Try : iftmp.35_65(P65) & iftmp.35_870(P870) : Same root, coalesced --> P65.
Try : rate_12(P12) & rate_14(P14) : Same root, coalesced --> P12.
Try : rate_12(P12) & rate_886(P886) : Same root, coalesced --> P12.
Try : vp8_23(P23) & vp8_25(P25) : Same root, coalesced --> P23.
Try : vp8_23(P23) & vp8_893(P893) : Same root, coalesced --> P23.
Try : red_29(P29) & red_31(P31) : Same root, coalesced --> P29.
Try : red_29(P29) & red_896(P896) : Same root, coalesced --> P29.
Try : fmtp_53(P53) & fmtp_877(P877) : Same root, coalesced --> P53.
Try : fmtp_53(P53) & fmtp_914(P914) : Same root, coalesced --> P53.
Try : fmtp_54(P54) & fmtp_53(P53) : Same root, coalesced --> P53.
Try : fmtp_54(P53) & fmtp_916(P916) : Same root, coalesced --> P53.
Try : fmtp_55(P55) & fmtp_54(P53) : Same root, coalesced --> P53.
Try : fmtp_55(P53) & fmtp_918(P918) : Same root, coalesced --> P53.
Try : fmtp_56(P56) & fmtp_910(P910) : Same root, coalesced --> P56.
Try : fmtp_56(P56) & fmtp_55(P53) : Same root, coalesced --> P53.
Try : fmtp_56(P53) & fmtp_920(P920) : Same root, coalesced --> P53.
Try : rate_13(P13) & rate_14(P12) : Same root, coalesced --> P12.
Try : rate_13(P12) & rate_14(P12) : Already coalesced.
Try : rate_13(P12) & rate_14(P12) : Already coalesced.
Try : rate_13(P12) & rate_12(P12) : Already coalesced.
Try : rate_13(P12) & rate_12(P12) : Already coalesced.
Try : rate_13(P12) & rate_12(P12) : Already coalesced.
Try : vp8_24(P24) & vp8_25(P23) : Same root, coalesced --> P23.
Try : vp8_24(P23) & vp8_25(P23) : Already coalesced.
Try : vp8_24(P23) & vp8_25(P23) : Already coalesced.
Try : vp8_24(P23) & vp8_23(P23) : Already coalesced.
Try : vp8_24(P23) & vp8_23(P23) : Already coalesced.
Try : vp8_24(P23) & vp8_23(P23) : Already coalesced.
Try : red_30(P30) & red_31(P29) : Same root, coalesced --> P29.
Try : red_30(P29) & red_31(P29) : Already coalesced.
Try : red_30(P29) & red_31(P29) : Already coalesced.
Try : red_30(P29) & red_29(P29) : Already coalesced.
Try : red_30(P29) & red_29(P29) : Already coalesced.
Try : red_30(P29) & red_29(P29) : Already coalesced.
Try : rate_14(P12) & rate_16(P16) : Same root, coalesced --> P12.
Try : rate_14(P12) & rate_13(P12) : Already coalesced.
Try : vp8_25(P23) & vp8_27(P22) : Same root, coalesced --> P23.
Try : vp8_25(P23) & vp8_24(P23) : Already coalesced.
Try : red_31(P29) & red_33(P28) : Same root, coalesced --> P29.
Try : red_31(P29) & red_30(P29) : Already coalesced.
Try : i_52(P52) & i_873(P873) : Same root, coalesced --> P52.
Try : i_52(P52) & i_927(P927) : Same root, coalesced --> P52.
Try : rate_15(P15) & rate_809(P809) : Same root, coalesced --> P15.
Try : rate_15(P15) & rate_16(P12) : Same root, coalesced --> P12.
Try : rate_15(P12) & rate_14(P12) : Already coalesced.
Try : rate_15(P12) & rate_809(P12) : Already coalesced.
Try : pass_fmtp_19(P19) & pass_fmtp_18(P18) : Same root, coalesced --> P18.
Try : pass_fmtp_19(P18) & pass_fmtp_20(P20) : Same root, coalesced --> P18.
Try : pass_fmtp_19(P18) & pass_fmtp_20(P18) : Already coalesced.
Try : pass_fmtp_19(P18) & pass_fmtp_18(P18) : Already coalesced.
Try : vp8_26(P26) & vp8_22(P23) : Same root, coalesced --> P23.
Try : vp8_26(P23) & vp8_27(P23) : Already coalesced.
Try : vp8_26(P23) & vp8_25(P23) : Already coalesced.
Try : vp8_26(P23) & vp8_22(P23) : Already coalesced.
Try : red_32(P32) & red_28(P29) : Same root, coalesced --> P29.
Try : red_32(P29) & red_33(P29) : Already coalesced.
Try : red_32(P29) & red_31(P29) : Already coalesced.
Try : red_32(P29) & red_28(P29) : Already coalesced.
Try : iftmp.37_67(P67) & iftmp.37_964(P964) : Same root, coalesced --> P67.
Try : iftmp.37_67(P67) & iftmp.37_965(P965) : Same root, coalesced --> P67.
Try : iftmp.38_68(P68) & iftmp.38_967(P967) : Same root, coalesced --> P68.
Try : iftmp.38_68(P68) & iftmp.38_968(P968) : Same root, coalesced --> P68.
Try : bw_57(P57) & bw_974(P974) : Same root, coalesced --> P57.
Try : bw_57(P57) & bw_980(P980) : Same root, coalesced --> P57.
Try : i_58(P58) & i_1104(P1104) : Same root, coalesced --> P58.
Try : i_58(P58) & i_1117(P1117) : Same root, coalesced --> P58.
Try : ptime_10(P7) & ptime_6(P5) : Same root, coalesced --> P7.
Try : ptime_10(P7) & ptime_9(P7) : Already coalesced.
Try : rate_16(P12) & rate_11(P11) : Same root, coalesced --> P12.
Try : rate_16(P12) & rate_15(P12) : Already coalesced.
Try : pass_fmtp_20(P18) & pass_fmtp_74(P74) : Same root, coalesced --> P18.
Try : pass_fmtp_20(P18) & pass_fmtp_19(P18) : Already coalesced.
Try : vp8_27(P23) & vp8_85(P85) : Same root, coalesced --> P23.
Try : vp8_27(P23) & vp8_26(P23) : Already coalesced.
Try : red_33(P29) & red_86(P86) : Same root, coalesced --> P29.
Try : red_33(P29) & red_32(P29) : Already coalesced.
Try : loops_48(P48) & loops_722(P722) : Same root, coalesced --> P48.
Try : loops_48(P48) & loops_1128(P1128) : Same root, coalesced --> P48.

Partition map 

Partition 1 (ip_1 - 1 223 233 234 )
Partition 2 (port_2 - 2 238 239 240 )
Partition 3 (sr_3 - 3 4 226 247 248 269 )
Partition 7 (ptime_7 - 5 6 7 8 9 10 69 410 789 )
Partition 12 (rate_12 - 11 12 13 14 15 16 70 351 809 886 )
Partition 17 (use_cng_17 - 17 71 152 )
Partition 18 (pass_fmtp_18 - 18 19 20 74 824 831 833 )
Partition 21 (fmtp_out_21 - 21 141 216 )
Partition 23 (vp8_23 - 22 23 24 25 26 27 85 801 893 )
Partition 29 (red_29 - 28 29 30 31 32 33 86 807 896 )
Partition 34 (pmap_34 - 34 306 317 )
Partition 35 (pmap_35 - 35 389 402 )
Partition 36 (i_36 - 36 157 162 )
Partition 37 (i_37 - 37 164 213 )
Partition 38 (i_38 - 38 653 688 )
Partition 39 (cur_ptime_39 - 39 40 634 667 )
Partition 41 (this_ptime_41 - 41 659 664 )
Partition 42 (cng_type_42 - 42 636 645 )
Partition 43 (bp_43 - 43 689 704 )
Partition 45 (bp_45 - 45 665 677 )
Partition 46 (both_46 - 46 47 666 679 684 )
Partition 48 (loops_48 - 48 722 1128 )
Partition 49 (pmap_49 - 49 751 762 )
Partition 50 (i_50 - 50 766 790 )
Partition 51 (pmap_51 - 51 843 857 )
Partition 52 (i_52 - 52 873 927 )
Partition 53 (fmtp_53 - 53 54 55 56 877 910 914 916 918 920 )
Partition 57 (bw_57 - 57 974 980 )
Partition 58 (i_58 - 58 1104 1117 )
Partition 60 (iftmp.29_60 - 60 294 295 )
Partition 61 (iftmp.30_61 - 61 466 467 )
Partition 62 (append_audio_62 - 62 78 463 464 )
Partition 64 (iftmp.34_64 - 64 738 739 )
Partition 65 (iftmp.35_65 - 65 869 870 )
Partition 66 (append_video_66 - 66 80 866 867 )
Partition 67 (iftmp.37_67 - 67 964 965 )
Partition 68 (iftmp.38_68 - 68 967 968 )
Partition 72 (session_72(D) - 72 )
Partition 73 (D.41512_73 - 73 )
Partition 75 (D.41512_75 - 75 )
Partition 76 (ov_fmtp_76 - 76 )
Partition 77 (D.41512_77 - 77 )
Partition 79 (D.41512_79 - 79 )
Partition 81 (D.41512_81 - 81 )
Partition 82 (fmtp_out_var_82 - 82 )
Partition 83 (local_sdp_audio_zrtp_hash_83 - 83 )
Partition 84 (local_sdp_video_zrtp_hash_84 - 84 )
Partition 87 (D.41512_87 - 87 )
Partition 88 (D.41513_88 - 88 )
Partition 89 (is_outbound_89 - 89 )
Partition 90 (smh_90 - 90 )
Partition 91 (a_engine_91 - 91 )
Partition 92 (v_engine_92 - 92 )
Partition 93 (D.41512_93 - 93 )
Partition 94 (D.41518_94 - 94 )
Partition 95 (D.41519_95 - 95 )
Partition 96 (D.41522_96 - 96 )
Partition 97 (D.41523_97 - 97 )
Partition 98 (D.41522_98 - 98 )
Partition 99 (D.41512_99 - 99 )
Partition 100 (D.41526_100 - 100 )
Partition 101 (D.41522_101 - 101 )
Partition 102 (D.41527_102 - 102 )
Partition 103 (D.41522_103 - 103 )
Partition 104 (D.41512_104 - 104 )
Partition 105 (D.41530_105 - 105 )
Partition 106 (D.41531_106 - 106 )
Partition 107 (D.41534_107 - 107 )
Partition 108 (D.41535_108 - 108 )
Partition 109 (tmp_109 - 109 )
Partition 110 (D.41538_110 - 110 )
Partition 111 (D.41534_111 - 111 )
Partition 112 (D.41535_112 - 112 )
Partition 113 (D.41534_113 - 113 )
Partition 114 (D.41535_114 - 114 )
Partition 115 (D.41512_115 - 115 )
Partition 116 (D.41544_116 - 116 )
Partition 117 (D.41512_117 - 117 )
Partition 118 (D.41546_118 - 118 )
Partition 119 (D.41512_119 - 119 )
Partition 120 (D.41547_120 - 120 )
Partition 121 (D.41512_121 - 121 )
Partition 122 (D.41550_122 - 122 )
Partition 123 (D.41551_123 - 123 )
Partition 124 (D.41512_124 - 124 )
Partition 125 (D.41512_125 - 125 )
Partition 126 (D.41522_126 - 126 )
Partition 127 (D.41522_127 - 127 )
Partition 128 (D.41554_128 - 128 )
Partition 129 (D.41557_129 - 129 )
Partition 130 (D.41512_130 - 130 )
Partition 131 (D.41562_131 - 131 )
Partition 132 (D.41534_132 - 132 )
Partition 133 (D.41535_133 - 133 )
Partition 134 (D.41564_134 - 134 )
Partition 135 (D.41565_135 - 135 )
Partition 136 (D.41534_136 - 136 )
Partition 137 (D.41535_137 - 137 )
Partition 138 (D.41534_138 - 138 )
Partition 139 (D.41535_139 - 139 )
Partition 140 (D.41566_140 - 140 )
Partition 142 (D.41522_142 - 142 )
Partition 143 (username_143 - 143 )
Partition 144 (buf_144 - 144 )
Partition 145 (D.41572_145 - 145 )
Partition 146 (D.41512_146 - 146 )
Partition 147 (val_147 - 147 )
Partition 148 (D.41575_148 - 148 )
Partition 149 (D.41512_149 - 149 )
Partition 150 (val_150 - 150 )
Partition 151 (D.41577_151 - 151 )
Partition 153 (D.41522_153 - 153 )
Partition 154 (D.41578_154 - 154 )
Partition 155 (D.41512_155 - 155 )
Partition 156 (D.41581_156 - 156 )
Partition 158 (D.41522_158 - 158 )
Partition 159 (D.41587_159 - 159 )
Partition 160 (D.41585_160 - 160 )
Partition 161 (D.41586_161 - 161 )
Partition 163 (sdp_type_163(D) - 163 )
Partition 165 (D.41522_165 - 165 )
Partition 166 (D.41587_166 - 166 )
Partition 167 (imp_167 - 167 )
Partition 168 (D.41590_168 - 168 )
Partition 169 (D.41522_169 - 169 )
Partition 170 (D.41593_170 - 170 )
Partition 171 (D.41522_171 - 171 )
Partition 172 (D.41596_172 - 172 )
Partition 173 (D.41522_173 - 173 )
Partition 174 (D.41596_174 - 174 )
Partition 175 (D.41599_175 - 175 )
Partition 176 (D.41578_176 - 176 )
Partition 177 (D.41578_177 - 177 )
Partition 178 (D.41602_178 - 178 )
Partition 179 (D.41603_179 - 179 )
Partition 180 (D.41522_180 - 180 )
Partition 181 (D.41606_181 - 181 )
Partition 182 (D.41607_182 - 182 )
Partition 183 (D.41608_183 - 183 )
Partition 184 (D.41609_184 - 184 )
Partition 185 (D.41522_185 - 185 )
Partition 186 (D.41606_186 - 186 )
Partition 187 (D.41612_187 - 187 )
Partition 188 (D.41578_188 - 188 )
Partition 189 (D.41578_189 - 189 )
Partition 190 (D.41602_190 - 190 )
Partition 191 (orig_session.25_191 - 191 )
Partition 192 (orig_session.25_192 - 192 )
Partition 193 (D.41619_193 - 193 )
Partition 194 (D.41620_194 - 194 )
Partition 195 (D.41621_195 - 195 )
Partition 196 (D.41622_196 - 196 )
Partition 197 (orig_pt.26_197 - 197 )
Partition 198 (orig_fmtp.27_198 - 198 )
Partition 199 (orig_fmtp.27_199 - 199 )
Partition 200 (D.41628_200 - 200 )
Partition 201 (D.41578_201 - 201 )
Partition 202 (D.41629_202 - 202 )
Partition 203 (D.41602_203 - 203 )
Partition 204 (D.41619_204 - 204 )
Partition 205 (D.41620_205 - 205 )
Partition 206 (D.41621_206 - 206 )
Partition 207 (D.41590_207 - 207 )
Partition 208 (D.41630_208 - 208 )
Partition 209 (D.41631_209 - 209 )
Partition 210 (D.41632_210 - 210 )
Partition 211 (D.41633_211 - 211 )
Partition 212 (D.41634_212 - 212 )
Partition 214 (orig_session.25_214 - 214 )
Partition 215 (orig_session.25_215 - 215 )
Partition 217 (D.41512_217 - 217 )
Partition 218 (val_218 - 218 )
Partition 219 (D.41642_219 - 219 )
Partition 220 (D.41512_220 - 220 )
Partition 221 (force_221(D) - 221 )
Partition 222 (D.41645_222 - 222 )
Partition 224 (D.41646_224 - 224 )
Partition 225 (D.41647_225 - 225 )
Partition 228 (D.41512_228 - 228 )
Partition 229 (D.41653_229 - 229 )
Partition 230 (D.41512_230 - 230 )
Partition 231 (D.41655_231 - 231 )
Partition 232 (buf_232 - 232 )
Partition 235 (D.41512_235 - 235 )
Partition 236 (D.41664_236 - 236 )
Partition 237 (buf_237 - 237 )
Partition 241 (D.41512_241 - 241 )
Partition 242 (D.41673_242 - 242 )
Partition 243 (buf_243 - 243 )
Partition 245 (D.41512_245 - 245 )
Partition 246 (var_val_246 - 246 )
Partition 249 (D.41682_249 - 249 )
Partition 250 (D.41685_250 - 250 )
Partition 251 (D.41686_251 - 251 )
Partition 252 (D.41687_252 - 252 )
Partition 253 (D.41688_253 - 253 )
Partition 254 (D.41689_254 - 254 )
Partition 255 (D.41682_255 - 255 )
Partition 256 (D.41512_256 - 256 )
Partition 257 (D.41692_257 - 257 )
Partition 258 (D.41693_258 - 258 )
Partition 259 (D.41512_259 - 259 )
Partition 260 (D.41689_260 - 260 )
Partition 261 (D.41696_261 - 261 )
Partition 262 (D.41522_262 - 262 )
Partition 263 (D.41699_263 - 263 )
Partition 264 (D.41700_264 - 264 )
Partition 265 (D.41512_265 - 265 )
Partition 266 (var_val_266 - 266 )
Partition 267 (D.41703_267 - 267 )
Partition 270 (D.41708_270 - 270 )
Partition 273 (family_273 - 59 271 272 273 )
Partition 274 (D.41682_274 - 274 )
Partition 275 (D.41689_275 - 275 )
Partition 276 (D.41534_276 - 276 )
Partition 277 (D.41535_277 - 277 )
Partition 278 (D.41712_278 - 278 )
Partition 279 (D.41715_279 - 279 )
Partition 280 (D.41716_280 - 280 )
Partition 281 (D.41717_281 - 281 )
Partition 282 (D.41718_282 - 282 )
Partition 283 (D.41719_283 - 283 )
Partition 284 (D.41720_284 - 284 )
Partition 285 (D.41723_285 - 285 )
Partition 286 (D.41724_286 - 286 )
Partition 287 (D.41725_287 - 287 )
Partition 288 (D.41726_288 - 288 )
Partition 289 (D.41727_289 - 289 )
Partition 290 (D.41732_290 - 290 )
Partition 291 (D.41512_291 - 291 )
Partition 292 (D.41734_292 - 292 )
Partition 293 (D.41736_293 - 293 )
Partition 296 (D.41737_296 - 296 )
Partition 297 (D.41738_297 - 297 )
Partition 298 (D.41739_298 - 298 )
Partition 299 (D.41740_299 - 299 )
Partition 300 (D.41741_300 - 300 )
Partition 301 (D.41566_301 - 301 )
Partition 302 (D.41742_302 - 302 )
Partition 303 (D.41743_303 - 303 )
Partition 304 (D.41744_304 - 304 )
Partition 305 (D.41747_305 - 305 )
Partition 307 (D.41757_307 - 307 )
Partition 308 (D.41748_308 - 308 )
Partition 309 (D.41566_309 - 309 )
Partition 310 (D.41742_310 - 310 )
Partition 311 (D.41751_311 - 311 )
Partition 312 (D.41752_312 - 312 )
Partition 313 (D.41753_313 - 313 )
Partition 314 (D.41754_314 - 314 )
Partition 315 (D.41748_315 - 315 )
Partition 316 (D.41755_316 - 316 )
Partition 318 (D.41747_318 - 318 )
Partition 319 (D.41522_319 - 319 )
Partition 320 (D.41593_320 - 320 )
Partition 321 (D.41761_321 - 321 )
Partition 322 (D.41512_322 - 322 )
Partition 323 (D.41763_323 - 323 )
Partition 324 (D.41522_324 - 324 )
Partition 325 (D.41596_325 - 325 )
Partition 326 (D.41766_326 - 326 )
Partition 327 (D.41767_327 - 327 )
Partition 328 (D.41768_328 - 328 )
Partition 329 (D.41769_329 - 329 )
Partition 330 (D.41522_330 - 330 )
Partition 331 (D.41596_331 - 331 )
Partition 332 (D.41599_332 - 332 )
Partition 333 (D.41770_333 - 333 )
Partition 334 (D.41522_334 - 334 )
Partition 335 (D.41606_335 - 335 )
Partition 336 (D.41607_336 - 336 )
Partition 337 (D.41608_337 - 337 )
Partition 338 (D.41609_338 - 338 )
Partition 339 (D.41775_339 - 339 )
Partition 340 (D.41776_340 - 340 )
Partition 341 (D.41777_341 - 341 )
Partition 342 (D.41778_342 - 342 )
Partition 343 (D.41522_343 - 343 )
Partition 344 (D.41606_344 - 344 )
Partition 345 (D.41612_345 - 345 )
Partition 346 (D.41779_346 - 346 )
Partition 347 (D.41780_347 - 347 )
Partition 348 (D.41781_348 - 348 )
Partition 349 (D.41782_349 - 349 )
Partition 350 (D.41566_350 - 350 )
Partition 352 (D.41566_352 - 352 )
Partition 353 (D.41783_353 - 353 )
Partition 354 (D.41566_354 - 354 )
Partition 355 (D.41566_355 - 355 )
Partition 356 (D.41786_356 - 356 )
Partition 357 (D.41787_357 - 357 )
Partition 358 (D.41566_358 - 358 )
Partition 359 (D.41783_359 - 359 )
Partition 360 (D.41790_360 - 360 )
Partition 361 (D.41791_361 - 361 )
Partition 362 (D.41792_362 - 362 )
Partition 363 (D.41793_363 - 363 )
Partition 364 (D.41566_364 - 364 )
Partition 365 (D.41794_365 - 365 )
Partition 366 (D.41795_366 - 366 )
Partition 367 (D.41566_367 - 367 )
Partition 368 (D.41786_368 - 368 )
Partition 369 (D.41566_369 - 369 )
Partition 370 (D.41783_370 - 370 )
Partition 371 (D.41797_371 - 371 )
Partition 372 (D.41798_372 - 372 )
Partition 373 (D.41799_373 - 373 )
Partition 374 (D.41800_374 - 374 )
Partition 375 (D.41566_375 - 375 )
Partition 376 (D.41794_376 - 376 )
Partition 377 (D.41795_377 - 377 )
Partition 378 (D.41566_378 - 378 )
Partition 379 (D.41786_379 - 379 )
Partition 380 (D.41803_380 - 380 )
Partition 381 (D.41804_381 - 381 )
Partition 382 (D.41805_382 - 382 )
Partition 383 (D.41806_383 - 383 )
Partition 384 (D.41566_384 - 384 )
Partition 385 (D.41794_385 - 385 )
Partition 386 (D.41795_386 - 386 )
Partition 387 (D.41807_387 - 387 )
Partition 388 (D.41747_388 - 388 )
Partition 390 (D.41757_390 - 390 )
Partition 391 (D.41748_391 - 391 )
Partition 392 (D.41566_392 - 392 )
Partition 393 (D.41742_393 - 393 )
Partition 394 (D.41812_394 - 394 )
Partition 395 (D.41813_395 - 395 )
Partition 396 (D.41814_396 - 396 )
Partition 397 (D.41815_397 - 397 )
Partition 398 (D.41748_398 - 398 )
Partition 399 (D.41755_399 - 399 )
Partition 400 (D.41816_400 - 400 )
Partition 401 (D.41817_401 - 401 )
Partition 403 (D.41747_403 - 403 )
Partition 404 (D.41819_404 - 404 )
Partition 405 (D.41820_405 - 405 )
Partition 406 (D.41821_406 - 406 )
Partition 407 (D.41822_407 - 407 )
Partition 408 (D.41819_408 - 408 )
Partition 409 (D.41825_409 - 409 )
Partition 411 (D.41522_411 - 411 )
Partition 412 (D.41593_412 - 412 )
Partition 413 (D.41829_413 - 413 )
Partition 414 (D.41512_414 - 414 )
Partition 415 (D.41831_415 - 415 )
Partition 416 (D.41522_416 - 416 )
Partition 417 (D.41596_417 - 417 )
Partition 418 (D.41512_418 - 418 )
Partition 419 (D.41834_419 - 419 )
Partition 420 (D.41837_420 - 420 )
Partition 421 (D.41838_421 - 421 )
Partition 422 (D.41839_422 - 422 )
Partition 423 (D.41840_423 - 423 )
Partition 424 (D.41522_424 - 424 )
Partition 425 (D.41596_425 - 425 )
Partition 426 (D.41599_426 - 426 )
Partition 427 (D.41842_427 - 427 )
Partition 428 (D.41843_428 - 428 )
Partition 429 (D.41844_429 - 429 )
Partition 430 (D.41845_430 - 430 )
Partition 431 (D.41522_431 - 431 )
Partition 432 (D.41596_432 - 432 )
Partition 433 (D.41599_433 - 433 )
Partition 434 (D.41522_434 - 434 )
Partition 435 (D.41596_435 - 435 )
Partition 436 (D.41599_436 - 436 )
Partition 437 (D.41846_437 - 437 )
Partition 438 (D.41849_438 - 438 )
Partition 439 (D.41850_439 - 439 )
Partition 440 (D.41851_440 - 440 )
Partition 441 (D.41852_441 - 441 )
Partition 442 (D.41522_442 - 442 )
Partition 443 (D.41606_443 - 443 )
Partition 444 (D.41607_444 - 444 )
Partition 445 (D.41608_445 - 445 )
Partition 446 (D.41609_446 - 446 )
Partition 447 (D.41856_447 - 447 )
Partition 448 (D.41857_448 - 448 )
Partition 449 (D.41858_449 - 449 )
Partition 450 (D.41859_450 - 450 )
Partition 451 (D.41522_451 - 451 )
Partition 452 (D.41606_452 - 452 )
Partition 453 (D.41612_453 - 453 )
Partition 454 (D.41720_454 - 454 )
Partition 455 (D.41522_455 - 455 )
Partition 456 (D.41864_456 - 456 )
Partition 457 (D.41865_457 - 457 )
Partition 458 (D.41866_458 - 458 )
Partition 459 (D.41867_459 - 459 )
Partition 460 (D.41870_460 - 460 )
Partition 461 (D.41873_461 - 461 )
Partition 462 (D.41874_462 - 462 )
Partition 465 (D.41876_465 - 465 )
Partition 468 (D.41882_468 - 468 )
Partition 469 (D.41883_469 - 469 )
Partition 470 (D.41884_470 - 470 )
Partition 471 (D.41885_471 - 471 )
Partition 472 (D.41888_472 - 472 )
Partition 473 (D.41889_473 - 473 )
Partition 474 (D.41890_474 - 474 )
Partition 475 (D.41891_475 - 475 )
Partition 477 (D.41895_477 - 477 )
Partition 478 (D.41896_478 - 478 )
Partition 479 (D.41897_479 - 479 )
Partition 480 (D.41898_480 - 480 )
Partition 481 (D.41899_481 - 481 )
Partition 483 (D.41903_483 - 483 )
Partition 484 (D.41904_484 - 484 )
Partition 485 (D.41905_485 - 485 )
Partition 486 (D.41906_486 - 486 )
Partition 487 (D.41899_487 - 487 )
Partition 488 (D.41907_488 - 488 )
Partition 489 (D.41522_489 - 489 )
Partition 490 (D.41523_490 - 490 )
Partition 491 (D.41910_491 - 491 )
Partition 492 (D.41913_492 - 492 )
Partition 493 (D.41914_493 - 493 )
Partition 494 (D.41915_494 - 494 )
Partition 495 (D.41916_495 - 495 )
Partition 496 (D.41917_496 - 496 )
Partition 497 (D.41918_497 - 497 )
Partition 498 (D.41919_498 - 498 )
Partition 499 (D.41920_499 - 499 )
Partition 500 (D.41727_500 - 500 )
Partition 501 (D.41922_501 - 501 )
Partition 502 (D.41923_502 - 502 )
Partition 503 (D.41924_503 - 503 )
Partition 504 (D.41925_504 - 504 )
Partition 505 (D.41727_505 - 505 )
Partition 506 (D.41926_506 - 506 )
Partition 507 (D.41927_507 - 507 )
Partition 508 (c1_508 - 508 )
Partition 509 (c2_509 - 509 )
Partition 510 (c3_510 - 510 )
Partition 511 (c4_511 - 511 )
Partition 512 (ice_out_512 - 512 )
Partition 513 (D.41930_513 - 513 )
Partition 514 (D.41931_514 - 514 )
Partition 515 (D.41932_515 - 515 )
Partition 516 (D.41933_516 - 516 )
Partition 517 (D.41934_517 - 517 )
Partition 518 (D.41935_518 - 518 )
Partition 519 (D.41936_519 - 519 )
Partition 520 (D.41937_520 - 520 )
Partition 521 (D.41938_521 - 521 )
Partition 522 (D.41939_522 - 522 )
Partition 523 (D.41934_523 - 523 )
Partition 524 (D.41719_524 - 524 )
Partition 525 (D.41940_525 - 525 )
Partition 526 (D.41941_526 - 526 )
Partition 527 (D.41942_527 - 527 )
Partition 528 (D.41943_528 - 528 )
Partition 529 (D.41934_529 - 529 )
Partition 530 (D.41719_530 - 530 )
Partition 531 (D.41944_531 - 531 )
Partition 532 (D.41945_532 - 532 )
Partition 533 (D.41946_533 - 533 )
Partition 534 (D.41947_534 - 534 )
Partition 535 (D.41934_535 - 535 )
Partition 536 (D.41719_536 - 536 )
Partition 537 (D.41948_537 - 537 )
Partition 538 (D.41949_538 - 538 )
Partition 539 (D.41950_539 - 539 )
Partition 540 (D.41951_540 - 540 )
Partition 541 (D.41952_541 - 541 )
Partition 542 (D.41953_542 - 542 )
Partition 543 (D.41954_543 - 543 )
Partition 544 (D.41955_544 - 544 )
Partition 545 (D.41956_545 - 545 )
Partition 546 (D.41957_546 - 546 )
Partition 547 (D.41958_547 - 547 )
Partition 548 (D.41959_548 - 548 )
Partition 549 (D.41960_549 - 549 )
Partition 550 (D.41961_550 - 550 )
Partition 551 (D.41962_551 - 551 )
Partition 552 (D.41963_552 - 552 )
Partition 553 (D.41964_553 - 553 )
Partition 554 (D.41965_554 - 554 )
Partition 555 (D.41966_555 - 555 )
Partition 557 (D.41963_557 - 557 )
Partition 559 (D.41966_559 - 559 )
Partition 560 (D.41963_560 - 560 )
Partition 561 (D.39598_561 - 561 )
Partition 562 (D.41975_562 - 562 )
Partition 563 (D.41964_563 - 563 )
Partition 564 (D.41978_564 - 564 )
Partition 565 (D.41979_565 - 565 )
Partition 566 (D.41980_566 - 566 )
Partition 567 (D.41981_567 - 567 )
Partition 568 (D.41962_568 - 568 )
Partition 569 (D.41963_569 - 569 )
Partition 570 (D.41964_570 - 570 )
Partition 571 (D.41965_571 - 571 )
Partition 572 (D.41966_572 - 572 )
Partition 573 (D.41975_573 - 573 )
Partition 574 (D.41982_574 - 574 )
Partition 575 (D.41910_575 - 575 )
Partition 576 (D.41985_576 - 576 )
Partition 577 (D.41986_577 - 577 )
Partition 578 (D.41987_578 - 578 )
Partition 579 (D.41512_579 - 579 )
Partition 580 (D.41989_580 - 580 )
Partition 581 (D.41990_581 - 581 )
Partition 582 (D.41991_582 - 582 )
Partition 583 (D.41992_583 - 583 )
Partition 584 (D.41993_584 - 584 )
Partition 585 (D.41962_585 - 585 )
Partition 586 (D.41963_586 - 586 )
Partition 587 (D.41964_587 - 587 )
Partition 588 (D.41965_588 - 588 )
Partition 589 (D.41910_589 - 589 )
Partition 590 (D.41994_590 - 590 )
Partition 591 (D.41995_591 - 591 )
Partition 592 (D.41966_592 - 592 )
Partition 594 (D.41963_594 - 594 )
Partition 596 (D.41966_596 - 596 )
Partition 597 (D.41963_597 - 597 )
Partition 598 (D.39607_598 - 598 )
Partition 599 (D.41975_599 - 599 )
Partition 600 (D.41964_600 - 600 )
Partition 601 (D.42006_601 - 601 )
Partition 602 (D.42007_602 - 602 )
Partition 603 (D.42008_603 - 603 )
Partition 604 (D.42009_604 - 604 )
Partition 605 (D.41962_605 - 605 )
Partition 606 (D.41963_606 - 606 )
Partition 607 (D.41964_607 - 607 )
Partition 608 (D.41965_608 - 608 )
Partition 609 (D.41910_609 - 609 )
Partition 610 (D.41994_610 - 610 )
Partition 611 (D.41995_611 - 611 )
Partition 612 (D.41966_612 - 612 )
Partition 613 (D.41975_613 - 613 )
Partition 614 (D.41982_614 - 614 )
Partition 615 (D.41910_615 - 615 )
Partition 616 (D.41994_616 - 616 )
Partition 617 (D.42010_617 - 617 )
Partition 618 (D.41736_618 - 618 )
Partition 619 (D.41512_619 - 619 )
Partition 620 (D.42013_620 - 620 )
Partition 621 (D.41736_621 - 621 )
Partition 622 (D.42016_622 - 622 )
Partition 624 (D.41512_624 - 624 )
Partition 625 (D.42020_625 - 625 )
Partition 626 (D.42023_626 - 626 )
Partition 627 (D.42024_627 - 627 )
Partition 628 (D.42025_628 - 628 )
Partition 629 (D.42026_629 - 629 )
Partition 630 (D.41736_630 - 630 )
Partition 631 (D.42016_631 - 631 )
Partition 632 (D.41522_632 - 632 )
Partition 633 (D.41587_633 - 633 )
Partition 635 (this_ptime_635 - 635 )
Partition 637 (D.42030_637 - 637 )
Partition 638 (D.41522_638 - 638 )
Partition 639 (D.41606_639 - 639 )
Partition 640 (D.41607_640 - 640 )
Partition 641 (D.41608_641 - 641 )
Partition 642 (D.41609_642 - 642 )
Partition 643 (D.41522_643 - 643 )
Partition 644 (D.41606_644 - 644 )
Partition 646 (D.41720_646 - 646 )
Partition 647 (D.41522_647 - 647 )
Partition 648 (D.41512_648 - 648 )
Partition 649 (mult_649 - 649 )
Partition 650 (D.41512_650 - 650 )
Partition 651 (D.42039_651 - 651 )
Partition 652 (D.42042_652 - 652 )
Partition 654 (D.41522_654 - 654 )
Partition 655 (D.41587_655 - 655 )
Partition 656 (imp_656 - 656 )
Partition 657 (D.42065_657 - 657 )
Partition 658 (D.42068_658 - 658 )
Partition 660 (D.42071_660 - 660 )
Partition 661 (D.42072_661 - 661 )
Partition 662 (D.42071_662 - 662 )
Partition 663 (D.42074_663 - 663 )
Partition 668 (D.41732_668 - 668 )
Partition 669 (D.41512_669 - 669 )
Partition 670 (D.42081_670 - 670 )
Partition 671 (D.41512_671 - 671 )
Partition 672 (D.42082_672 - 672 )
Partition 673 (D.42083_673 - 673 )
Partition 674 (D.42084_674 - 674 )
Partition 675 (map.33_675 - 675 )
Partition 676 (D.42085_676 - 676 )
Partition 678 (D.42058_678 - 678 )
Partition 680 (D.41512_680 - 680 )
Partition 681 (D.42090_681 - 681 )
Partition 682 (D.41512_682 - 682 )
Partition 683 (D.42092_683 - 683 )
Partition 685 (D.42095_685 - 685 )
Partition 686 (D.42096_686 - 686 )
Partition 687 (map.33_687 - 687 )
Partition 690 (D.41512_690 - 690 )
Partition 691 (D.42046_691 - 691 )
Partition 692 (D.41512_692 - 692 )
Partition 693 (D.42048_693 - 693 )
Partition 696 (both_696 - 44 63 694 695 696 706 )
Partition 697 (D.41732_697 - 697 )
Partition 698 (D.41512_698 - 698 )
Partition 699 (D.42054_699 - 699 )
Partition 700 (D.41512_700 - 700 )
Partition 701 (D.42055_701 - 701 )
Partition 702 (map.33_702 - 702 )
Partition 703 (D.42057_703 - 703 )
Partition 705 (D.42058_705 - 705 )
Partition 707 (D.42063_707 - 707 )
Partition 708 (D.42064_708 - 708 )
Partition 709 (map.33_709 - 709 )
Partition 710 (D.41512_710 - 710 )
Partition 711 (D.42097_711 - 711 )
Partition 712 (D.41512_712 - 712 )
Partition 713 (D.42100_713 - 713 )
Partition 714 (D.41534_714 - 714 )
Partition 715 (D.41535_715 - 715 )
Partition 716 (D.42103_716 - 716 )
Partition 717 (D.42106_717 - 717 )
Partition 718 (D.41512_718 - 718 )
Partition 719 (D.42109_719 - 719 )
Partition 720 (D.42112_720 - 720 )
Partition 721 (v_port_721 - 721 )
Partition 723 (D.41534_723 - 723 )
Partition 724 (D.41535_724 - 724 )
Partition 725 (D.42115_725 - 725 )
Partition 726 (D.42118_726 - 726 )
Partition 727 (D.42119_727 - 727 )
Partition 728 (D.42120_728 - 728 )
Partition 729 (D.42121_729 - 729 )
Partition 730 (D.42122_730 - 730 )
Partition 731 (D.41512_731 - 731 )
Partition 732 (D.42129_732 - 732 )
Partition 733 (D.41512_733 - 733 )
Partition 734 (D.42131_734 - 734 )
Partition 735 (D.41736_735 - 735 )
Partition 736 (D.41512_736 - 736 )
Partition 737 (D.42133_737 - 737 )
Partition 740 (D.42134_740 - 740 )
Partition 741 (D.42135_741 - 741 )
Partition 742 (D.42138_742 - 742 )
Partition 743 (D.42139_743 - 743 )
Partition 744 (D.42140_744 - 744 )
Partition 745 (D.42141_745 - 745 )
Partition 746 (D.42142_746 - 746 )
Partition 747 (D.42143_747 - 747 )
Partition 748 (D.42144_748 - 748 )
Partition 749 (D.42145_749 - 749 )
Partition 750 (D.41747_750 - 750 )
Partition 752 (D.42158_752 - 752 )
Partition 753 (D.42148_753 - 753 )
Partition 754 (D.42142_754 - 754 )
Partition 755 (D.42149_755 - 755 )
Partition 756 (D.42152_756 - 756 )
Partition 757 (D.42153_757 - 757 )
Partition 758 (D.42154_758 - 758 )
Partition 759 (D.42155_759 - 759 )
Partition 760 (D.42148_760 - 760 )
Partition 761 (D.42156_761 - 761 )
Partition 763 (D.41747_763 - 763 )
Partition 764 (D.41522_764 - 764 )
Partition 765 (D.41587_765 - 765 )
Partition 767 (D.41522_767 - 767 )
Partition 768 (D.41587_768 - 768 )
Partition 769 (imp_769 - 769 )
Partition 770 (D.42162_770 - 770 )
Partition 771 (D.41512_771 - 771 )
Partition 772 (D.42165_772 - 772 )
Partition 773 (D.41512_773 - 773 )
Partition 774 (D.42168_774 - 774 )
Partition 775 (D.42171_775 - 775 )
Partition 776 (D.42172_776 - 776 )
Partition 777 (D.42171_777 - 777 )
Partition 778 (D.42175_778 - 778 )
Partition 779 (D.42176_779 - 779 )
Partition 780 (D.42171_780 - 780 )
Partition 781 (D.42175_781 - 781 )
Partition 782 (D.42179_782 - 782 )
Partition 783 (D.42180_783 - 783 )
Partition 784 (D.42181_784 - 784 )
Partition 785 (D.42182_785 - 785 )
Partition 786 (D.42171_786 - 786 )
Partition 787 (D.42175_787 - 787 )
Partition 788 (D.42185_788 - 788 )
Partition 791 (D.42186_791 - 791 )
Partition 792 (D.42187_792 - 792 )
Partition 793 (D.42188_793 - 793 )
Partition 794 (D.42189_794 - 794 )
Partition 795 (D.42135_795 - 795 )
Partition 796 (D.42142_796 - 796 )
Partition 797 (D.42192_797 - 797 )
Partition 798 (D.42193_798 - 798 )
Partition 799 (D.42142_799 - 799 )
Partition 800 (D.42149_800 - 800 )
Partition 802 (D.42142_802 - 802 )
Partition 803 (D.42192_803 - 803 )
Partition 804 (D.42196_804 - 804 )
Partition 805 (D.42142_805 - 805 )
Partition 806 (D.42149_806 - 806 )
Partition 808 (D.42142_808 - 808 )
Partition 810 (D.42199_810 - 810 )
Partition 811 (D.42200_811 - 811 )
Partition 812 (D.42201_812 - 812 )
Partition 813 (D.42202_813 - 813 )
Partition 814 (D.42142_814 - 814 )
Partition 815 (D.42149_815 - 815 )
Partition 816 (D.42203_816 - 816 )
Partition 817 (D.42142_817 - 817 )
Partition 818 (D.42192_818 - 818 )
Partition 819 (D.42142_819 - 819 )
Partition 820 (D.42204_820 - 820 )
Partition 821 (D.41512_821 - 821 )
Partition 822 (D.42205_822 - 822 )
Partition 823 (D.42142_823 - 823 )
Partition 825 (pass_fmtp_825 - 825 )
Partition 826 (D.41512_826 - 826 )
Partition 827 (D.42209_827 - 827 )
Partition 828 (D.41512_828 - 828 )
Partition 829 (of_829 - 829 )
Partition 830 (pass_fmtp_830 - 830 )
Partition 832 (D.41512_832 - 832 )
Partition 834 (D.42219_834 - 834 )
Partition 835 (D.42220_835 - 835 )
Partition 836 (D.42221_836 - 836 )
Partition 837 (D.42222_837 - 837 )
Partition 838 (D.42142_838 - 838 )
Partition 839 (D.42149_839 - 839 )
Partition 840 (D.42203_840 - 840 )
Partition 841 (D.42223_841 - 841 )
Partition 842 (D.41747_842 - 842 )
Partition 844 (D.42240_844 - 844 )
Partition 845 (D.42226_845 - 845 )
Partition 846 (D.42142_846 - 846 )
Partition 847 (D.42149_847 - 847 )
Partition 848 (D.42229_848 - 848 )
Partition 849 (D.42232_849 - 849 )
Partition 850 (D.42233_850 - 850 )
Partition 851 (D.42234_851 - 851 )
Partition 852 (D.42235_852 - 852 )
Partition 853 (D.42226_853 - 853 )
Partition 854 (D.42236_854 - 854 )
Partition 855 (D.42237_855 - 855 )
Partition 856 (D.42238_856 - 856 )
Partition 858 (D.41747_858 - 858 )
Partition 859 (D.42243_859 - 859 )
Partition 860 (D.42244_860 - 860 )
Partition 861 (D.42245_861 - 861 )
Partition 862 (D.42246_862 - 862 )
Partition 863 (D.42249_863 - 863 )
Partition 864 (D.42252_864 - 864 )
Partition 865 (D.42253_865 - 865 )
Partition 868 (D.42255_868 - 868 )
Partition 871 (D.41522_871 - 871 )
Partition 872 (D.41587_872 - 872 )
Partition 874 (D.41522_874 - 874 )
Partition 875 (D.41587_875 - 875 )
Partition 876 (imp_876 - 876 )
Partition 878 (D.42262_878 - 878 )
Partition 879 (ianacode_879 - 879 )
Partition 880 (D.42263_880 - 880 )
Partition 881 (D.41512_881 - 881 )
Partition 882 (D.42266_882 - 882 )
Partition 883 (D.41512_883 - 883 )
Partition 884 (D.42269_884 - 884 )
Partition 885 (D.42274_885 - 885 )
Partition 887 (D.42279_887 - 887 )
Partition 888 (D.42280_888 - 888 )
Partition 889 (D.42281_889 - 889 )
Partition 890 (channels_890 - 890 )
Partition 891 (D.42279_891 - 891 )
Partition 892 (D.42282_892 - 892 )
Partition 894 (D.42279_894 - 894 )
Partition 895 (D.42285_895 - 895 )
Partition 897 (D.42290_897 - 897 )
Partition 898 (D.42291_898 - 898 )
Partition 899 (D.42292_899 - 899 )
Partition 900 (D.42293_900 - 900 )
Partition 901 (D.42279_901 - 901 )
Partition 902 (D.42294_902 - 902 )
Partition 903 (D.42296_903 - 903 )
Partition 904 (D.42297_904 - 904 )
Partition 905 (D.42298_905 - 905 )
Partition 906 (D.42299_906 - 906 )
Partition 907 (D.42279_907 - 907 )
Partition 908 (D.42294_908 - 908 )
Partition 911 (map.33_911 - 911 )
Partition 912 (map.33_912 - 912 )
Partition 913 (D.42279_913 - 913 )
Partition 915 (D.42306_915 - 915 )
Partition 922 (D.42318_922 - 922 )
Partition 923 (D.42321_923 - 923 )
Partition 924 (D.42322_924 - 924 )
Partition 925 (D.42323_925 - 925 )
Partition 926 (D.42324_926 - 926 )
Partition 928 (D.41512_928 - 928 )
Partition 929 (D.42328_929 - 929 )
Partition 930 (D.41534_930 - 930 )
Partition 931 (D.41535_931 - 931 )
Partition 932 (D.42329_932 - 932 )
Partition 933 (D.42332_933 - 933 )
Partition 935 (D.42336_935 - 935 )
Partition 936 (D.42337_936 - 936 )
Partition 937 (D.42338_937 - 937 )
Partition 938 (D.42339_938 - 938 )
Partition 939 (D.42332_939 - 939 )
Partition 940 (D.42340_940 - 940 )
Partition 941 (D.41522_941 - 941 )
Partition 942 (D.41527_942 - 942 )
Partition 943 (D.42343_943 - 943 )
Partition 944 (D.42346_944 - 944 )
Partition 945 (D.42347_945 - 945 )
Partition 946 (D.42348_946 - 946 )
Partition 947 (D.42349_947 - 947 )
Partition 948 (D.42350_948 - 948 )
Partition 949 (D.42351_949 - 949 )
Partition 950 (D.42352_950 - 950 )
Partition 951 (D.42353_951 - 951 )
Partition 952 (D.42355_952 - 952 )
Partition 953 (D.42356_953 - 953 )
Partition 954 (D.42357_954 - 954 )
Partition 955 (D.42358_955 - 955 )
Partition 956 (D.42359_956 - 956 )
Partition 957 (D.42360_957 - 957 )
Partition 958 (D.42361_958 - 958 )
Partition 959 (D.42364_959 - 959 )
Partition 960 (D.42365_960 - 960 )
Partition 961 (D.42366_961 - 961 )
Partition 962 (D.42367_962 - 962 )
Partition 963 (D.42369_963 - 963 )
Partition 966 (D.42374_966 - 966 )
Partition 969 (D.42378_969 - 969 )
Partition 970 (c1_970 - 970 )
Partition 971 (c2_971 - 971 )
Partition 972 (c3_972 - 972 )
Partition 973 (c4_973 - 973 )
Partition 975 (ice_out_975 - 975 )
Partition 976 (D.41534_976 - 976 )
Partition 977 (D.41535_977 - 977 )
Partition 978 (vbw_978 - 978 )
Partition 981 (D.42385_981 - 981 )
Partition 982 (D.42386_982 - 982 )
Partition 983 (D.42387_983 - 983 )
Partition 984 (D.42388_984 - 984 )
Partition 985 (D.41512_985 - 985 )
Partition 986 (D.42391_986 - 986 )
Partition 987 (D.42394_987 - 987 )
Partition 988 (D.42395_988 - 988 )
Partition 989 (D.42396_989 - 989 )
Partition 990 (D.42397_990 - 990 )
Partition 991 (D.42400_991 - 991 )
Partition 992 (D.42401_992 - 992 )
Partition 993 (D.42402_993 - 993 )
Partition 994 (D.42403_994 - 994 )
Partition 995 (D.42404_995 - 995 )
Partition 996 (D.42405_996 - 996 )
Partition 997 (D.42406_997 - 997 )
Partition 998 (D.42407_998 - 998 )
Partition 999 (D.42408_999 - 999 )
Partition 1000 (D.41935_1000 - 1000 )
Partition 1001 (D.42409_1001 - 1001 )
Partition 1002 (D.42410_1002 - 1002 )
Partition 1003 (D.42411_1003 - 1003 )
Partition 1004 (D.42412_1004 - 1004 )
Partition 1005 (D.42408_1005 - 1005 )
Partition 1006 (D.41719_1006 - 1006 )
Partition 1007 (D.42413_1007 - 1007 )
Partition 1008 (D.42414_1008 - 1008 )
Partition 1009 (D.42415_1009 - 1009 )
Partition 1010 (D.42416_1010 - 1010 )
Partition 1011 (D.42408_1011 - 1011 )
Partition 1012 (D.41719_1012 - 1012 )
Partition 1013 (D.42417_1013 - 1013 )
Partition 1014 (D.42418_1014 - 1014 )
Partition 1015 (D.42419_1015 - 1015 )
Partition 1016 (D.42420_1016 - 1016 )
Partition 1017 (D.42408_1017 - 1017 )
Partition 1018 (D.41719_1018 - 1018 )
Partition 1019 (D.42421_1019 - 1019 )
Partition 1020 (D.42422_1020 - 1020 )
Partition 1021 (D.42423_1021 - 1021 )
Partition 1022 (D.42424_1022 - 1022 )
Partition 1023 (D.41952_1023 - 1023 )
Partition 1024 (D.42425_1024 - 1024 )
Partition 1025 (D.42426_1025 - 1025 )
Partition 1026 (D.42427_1026 - 1026 )
Partition 1027 (D.42428_1027 - 1027 )
Partition 1028 (D.41957_1028 - 1028 )
Partition 1029 (D.42429_1029 - 1029 )
Partition 1030 (D.42430_1030 - 1030 )
Partition 1031 (D.42431_1031 - 1031 )
Partition 1032 (D.42432_1032 - 1032 )
Partition 1033 (D.41962_1033 - 1033 )
Partition 1034 (D.41963_1034 - 1034 )
Partition 1035 (D.41964_1035 - 1035 )
Partition 1036 (D.41965_1036 - 1036 )
Partition 1037 (D.42433_1037 - 1037 )
Partition 1039 (D.41963_1039 - 1039 )
Partition 1041 (D.42433_1041 - 1041 )
Partition 1042 (D.41963_1042 - 1042 )
Partition 1043 (D.39666_1043 - 1043 )
Partition 1044 (D.42106_1044 - 1044 )
Partition 1045 (D.41964_1045 - 1045 )
Partition 1046 (D.42444_1046 - 1046 )
Partition 1047 (D.42445_1047 - 1047 )
Partition 1048 (D.42446_1048 - 1048 )
Partition 1049 (D.42447_1049 - 1049 )
Partition 1050 (D.41962_1050 - 1050 )
Partition 1051 (D.41963_1051 - 1051 )
Partition 1052 (D.41964_1052 - 1052 )
Partition 1053 (D.41965_1053 - 1053 )
Partition 1054 (D.42433_1054 - 1054 )
Partition 1055 (D.42106_1055 - 1055 )
Partition 1056 (D.42448_1056 - 1056 )
Partition 1057 (D.42343_1057 - 1057 )
Partition 1058 (D.42451_1058 - 1058 )
Partition 1059 (D.41986_1059 - 1059 )
Partition 1060 (D.42452_1060 - 1060 )
Partition 1061 (D.41512_1061 - 1061 )
Partition 1062 (D.42454_1062 - 1062 )
Partition 1063 (D.42455_1063 - 1063 )
Partition 1064 (D.42456_1064 - 1064 )
Partition 1065 (D.42457_1065 - 1065 )
Partition 1066 (D.42458_1066 - 1066 )
Partition 1067 (D.41962_1067 - 1067 )
Partition 1068 (D.41963_1068 - 1068 )
Partition 1069 (D.41964_1069 - 1069 )
Partition 1070 (D.41965_1070 - 1070 )
Partition 1071 (D.42343_1071 - 1071 )
Partition 1072 (D.42459_1072 - 1072 )
Partition 1073 (D.42460_1073 - 1073 )
Partition 1074 (D.42433_1074 - 1074 )
Partition 1076 (D.42464_1076 - 1076 )
Partition 1078 (D.42433_1078 - 1078 )
Partition 1079 (D.42464_1079 - 1079 )
Partition 1080 (D.39675_1080 - 1080 )
Partition 1081 (D.42106_1081 - 1081 )
Partition 1082 (D.42470_1082 - 1082 )
Partition 1083 (D.42473_1083 - 1083 )
Partition 1084 (D.42474_1084 - 1084 )
Partition 1085 (D.42475_1085 - 1085 )
Partition 1086 (D.42476_1086 - 1086 )
Partition 1087 (D.41962_1087 - 1087 )
Partition 1088 (D.41963_1088 - 1088 )
Partition 1089 (D.41964_1089 - 1089 )
Partition 1090 (D.41965_1090 - 1090 )
Partition 1091 (D.42343_1091 - 1091 )
Partition 1092 (D.42459_1092 - 1092 )
Partition 1093 (D.42460_1093 - 1093 )
Partition 1094 (D.42433_1094 - 1094 )
Partition 1095 (D.42106_1095 - 1095 )
Partition 1096 (D.42448_1096 - 1096 )
Partition 1097 (D.42343_1097 - 1097 )
Partition 1098 (D.42459_1098 - 1098 )
Partition 1099 (D.42477_1099 - 1099 )
Partition 1100 (D.41512_1100 - 1100 )
Partition 1101 (D.42480_1101 - 1101 )
Partition 1102 (D.41512_1102 - 1102 )
Partition 1103 (D.42483_1103 - 1103 )
Partition 1105 (D.42486_1105 - 1105 )
Partition 1106 (D.42486_1106 - 1106 )
Partition 1107 (j_1107 - 1107 )
Partition 1108 (D.41736_1108 - 1108 )
Partition 1109 (D.41736_1109 - 1109 )
Partition 1110 (D.42490_1110 - 1110 )
Partition 1112 (D.42494_1112 - 1112 )
Partition 1113 (D.42495_1113 - 1113 )
Partition 1114 (D.42496_1114 - 1114 )
Partition 1115 (D.42497_1115 - 1115 )
Partition 1116 (D.42498_1116 - 1116 )
Partition 1118 (D.42501_1118 - 1118 )
Partition 1119 (D.42502_1119 - 1119 )
Partition 1120 (D.42503_1120 - 1120 )
Partition 1121 (D.42504_1121 - 1121 )
Partition 1122 (D.41512_1122 - 1122 )
Partition 1123 (D.42505_1123 - 1123 )
Partition 1124 (D.41512_1124 - 1124 )
Partition 1125 (D.42507_1125 - 1125 )
Partition 1126 (D.42058_1126 - 1126 )
Partition 1127 (D.42058_1127 - 1127 )
Partition 1129 (map.33_1129 - 1129 )
Partition 1130 (ptmap.39_1130 - 1130 )
Partition 1131 (buf_1131 - 1131 )
Partition 1132 (.MEM_1132 - 1132 )
Partition 1133 (.MEM_1133 - 1133 )
Partition 1134 (.MEM_1134 - 1134 )
Partition 1135 (.MEM_1135 - 1135 )
Partition 1136 (.MEM_1136 - 1136 )
Partition 1137 (.MEM_1137 - 1137 )
Partition 1138 (.MEM_1138 - 1138 )
Partition 1139 (.MEM_1139 - 1139 )
Partition 1140 (.MEM_1140 - 1140 )
Partition 1141 (.MEM_1141 - 1141 )
Partition 1142 (.MEM_1142 - 1142 )
Partition 1143 (.MEM_1143 - 1143 )
Partition 1144 (.MEM_1144 - 1144 )
Partition 1145 (.MEM_1145 - 1145 )
Partition 1146 (.MEM_1146 - 1146 )
Partition 1147 (.MEM_1147 - 1147 )
Partition 1148 (.MEM_1148 - 1148 )
Partition 1149 (.MEM_1149 - 1149 )
Partition 1150 (.MEM_1150 - 1150 )
Partition 1151 (.MEM_1151 - 1151 )
Partition 1152 (.MEM_1152 - 1152 )
Partition 1153 (.MEM_1153 - 1153 )
Partition 1154 (.MEM_1154 - 1154 )
Partition 1155 (.MEM_1155 - 1155 )
Partition 1156 (.MEM_1156 - 1156 )
Partition 1157 (.MEM_1157 - 1157 )
Partition 1158 (.MEM_1158 - 1158 )
Partition 1159 (.MEM_1159 - 1159 )
Partition 1160 (.MEM_1160 - 1160 )
Partition 1161 (.MEM_1161 - 1161 )
Partition 1162 (.MEM_1162 - 1162 )
Partition 1163 (.MEM_1163 - 1163 )
Partition 1164 (.MEM_1164 - 1164 )
Partition 1165 (.MEM_1165 - 1165 )
Partition 1166 (.MEM_1166 - 1166 )
Partition 1167 (.MEM_1167 - 1167 )
Partition 1168 (.MEM_1168 - 1168 )
Partition 1169 (.MEM_1169 - 1169 )
Partition 1170 (.MEM_1170 - 1170 )
Partition 1171 (.MEM_1171 - 1171 )
Partition 1172 (.MEM_1172 - 1172 )
Partition 1173 (.MEM_1173 - 1173 )
Partition 1174 (.MEM_1174 - 1174 )
Partition 1175 (.MEM_1175 - 1175 )
Partition 1176 (.MEM_1176 - 1176 )
Partition 1177 (.MEM_1177 - 1177 )
Partition 1178 (.MEM_1178 - 1178 )
Partition 1179 (.MEM_1179 - 1179 )
Partition 1180 (.MEM_1180 - 1180 )
Partition 1181 (.MEM_1181 - 1181 )
Partition 1182 (.MEM_1182 - 1182 )
Partition 1183 (.MEM_1183 - 1183 )
Partition 1184 (.MEM_1184 - 1184 )
Partition 1185 (.MEM_1185 - 1185 )
Partition 1186 (.MEM_1186 - 1186 )
Partition 1187 (.MEM_1187 - 1187 )
Partition 1188 (.MEM_1188 - 1188 )
Partition 1189 (.MEM_1189 - 1189 )
Partition 1190 (.MEM_1190 - 1190 )
Partition 1191 (.MEM_1191 - 1191 )
Partition 1192 (.MEM_1192 - 1192 )
Partition 1193 (.MEM_1193 - 1193 )
Partition 1194 (.MEM_1194 - 1194 )
Partition 1195 (.MEM_1195 - 1195 )
Partition 1196 (.MEM_1196 - 1196 )
Partition 1197 (.MEM_1197 - 1197 )
Partition 1198 (.MEM_1198 - 1198 )
Partition 1199 (.MEM_1199 - 1199 )
Partition 1200 (.MEM_1200 - 1200 )
Partition 1201 (.MEM_1201 - 1201 )
Partition 1202 (.MEM_1202 - 1202 )
Partition 1203 (.MEM_1203 - 1203 )
Partition 1204 (.MEM_1204 - 1204 )
Partition 1205 (.MEM_1205 - 1205 )
Partition 1206 (.MEM_1206 - 1206 )
Partition 1207 (.MEM_1207 - 1207 )
Partition 1208 (.MEM_1208 - 1208 )
Partition 1209 (.MEM_1209 - 1209 )
Partition 1210 (.MEM_1210 - 1210 )
Partition 1211 (.MEM_1211 - 1211 )
Partition 1212 (.MEM_1212 - 1212 )
Partition 1213 (.MEM_1213 - 1213 )
Partition 1214 (.MEM_1214 - 1214 )
Partition 1215 (.MEM_1215 - 1215 )
Partition 1216 (.MEM_1216 - 1216 )
Partition 1217 (.MEM_1217 - 1217 )
Partition 1218 (.MEM_1218 - 1218 )
Partition 1219 (.MEM_1219 - 1219 )
Partition 1220 (.MEM_1220 - 1220 )
Partition 1221 (.MEM_1221 - 1221 )
Partition 1222 (.MEM_1222 - 1222 )
Partition 1223 (.MEM_1223 - 1223 )
Partition 1224 (.MEM_1224 - 1224 )
Partition 1225 (.MEM_1225 - 1225 )
Partition 1226 (.MEM_1226 - 1226 )
Partition 1227 (.MEM_1227 - 1227 )
Partition 1228 (.MEM_1228 - 1228 )
Partition 1229 (.MEM_1229 - 1229 )
Partition 1230 (.MEM_1230 - 1230 )
Partition 1231 (.MEM_1231 - 1231 )
Partition 1232 (.MEM_1232 - 1232 )
Partition 1233 (.MEM_1233 - 1233 )
Partition 1234 (.MEM_1234 - 1234 )
Partition 1235 (.MEM_1235 - 1235 )
Partition 1236 (.MEM_1236 - 1236 )
Partition 1237 (.MEM_1237 - 1237 )
Partition 1238 (.MEM_1238 - 1238 )
Partition 1239 (.MEM_1239 - 1239 )
Partition 1240 (.MEM_1240 - 1240 )
Partition 1241 (.MEM_1241 - 1241 )
Partition 1242 (.MEM_1242 - 1242 )
Partition 1243 (.MEM_1243 - 1243 )
Partition 1244 (.MEM_1244 - 1244 )
Partition 1245 (.MEM_1245 - 1245 )
Partition 1246 (.MEM_1246 - 1246 )
Partition 1247 (.MEM_1247 - 1247 )
Partition 1248 (.MEM_1248 - 1248 )
Partition 1249 (.MEM_1249 - 1249 )
Partition 1250 (.MEM_1250 - 1250 )
Partition 1251 (.MEM_1251 - 1251 )
Partition 1252 (.MEM_1252 - 1252 )
Partition 1253 (.MEM_1253(D) - 1253 )
Partition 1254 (.MEM_1254 - 1254 )
Partition 1255 (.MEM_1255 - 1255 )
Partition 1256 (.MEM_1256 - 1256 )
Partition 1257 (.MEM_1257 - 1257 )
Partition 1258 (.MEM_1258 - 1258 )
Partition 1259 (.MEM_1259 - 1259 )
Partition 1260 (.MEM_1260 - 1260 )
Partition 1261 (.MEM_1261 - 1261 )
Partition 1262 (.MEM_1262 - 1262 )
Partition 1263 (.MEM_1263 - 1263 )
Partition 1264 (.MEM_1264 - 1264 )
Partition 1265 (.MEM_1265 - 1265 )
Partition 1266 (.MEM_1266 - 1266 )
Partition 1267 (.MEM_1267 - 1267 )
Partition 1268 (.MEM_1268 - 1268 )
Partition 1269 (.MEM_1269 - 1269 )
Partition 1270 (.MEM_1270 - 1270 )
Partition 1271 (.MEM_1271 - 1271 )
Partition 1272 (.MEM_1272 - 1272 )
Partition 1273 (.MEM_1273 - 1273 )
Partition 1274 (.MEM_1274 - 1274 )
Partition 1275 (.MEM_1275 - 1275 )
Partition 1276 (.MEM_1276 - 1276 )
Partition 1277 (.MEM_1277 - 1277 )
Partition 1278 (.MEM_1278 - 1278 )
Partition 1279 (.MEM_1279 - 1279 )
Partition 1280 (.MEM_1280 - 1280 )
Partition 1281 (.MEM_1281 - 1281 )
Partition 1282 (.MEM_1282 - 1282 )
Partition 1283 (.MEM_1283 - 1283 )
Partition 1284 (.MEM_1284 - 1284 )
Partition 1285 (.MEM_1285 - 1285 )
Partition 1286 (.MEM_1286 - 1286 )
Partition 1287 (.MEM_1287 - 1287 )
Partition 1288 (.MEM_1288 - 1288 )
Partition 1289 (.MEM_1289 - 1289 )
Partition 1290 (.MEM_1290 - 1290 )
Partition 1291 (.MEM_1291 - 1291 )
Partition 1292 (.MEM_1292 - 1292 )
Partition 1293 (.MEM_1293 - 1293 )
Partition 1294 (.MEM_1294 - 1294 )
Partition 1295 (.MEM_1295 - 1295 )
Partition 1296 (.MEM_1296 - 1296 )
Partition 1297 (.MEM_1297 - 1297 )
Partition 1298 (.MEM_1298 - 1298 )
Partition 1299 (.MEM_1299 - 1299 )
Partition 1300 (.MEM_1300 - 1300 )
Partition 1301 (.MEM_1301 - 1301 )
Partition 1302 (.MEM_1302 - 1302 )
Partition 1303 (.MEM_1303 - 1303 )
Partition 1304 (.MEM_1304 - 1304 )
Partition 1305 (.MEM_1305 - 1305 )
Partition 1306 (.MEM_1306 - 1306 )
Partition 1307 (.MEM_1307 - 1307 )
Partition 1308 (.MEM_1308 - 1308 )
Partition 1309 (.MEM_1309 - 1309 )
Partition 1310 (.MEM_1310 - 1310 )
Partition 1311 (.MEM_1311 - 1311 )
Partition 1312 (.MEM_1312 - 1312 )
Partition 1313 (.MEM_1313 - 1313 )
Partition 1314 (.MEM_1314 - 1314 )
Partition 1315 (.MEM_1315 - 1315 )
Partition 1316 (.MEM_1316 - 1316 )
Partition 1317 (.MEM_1317 - 1317 )
Partition 1318 (.MEM_1318 - 1318 )
Partition 1319 (.MEM_1319 - 1319 )
Partition 1320 (.MEM_1320 - 1320 )
Partition 1321 (.MEM_1321 - 1321 )
Partition 1322 (.MEM_1322 - 1322 )
Partition 1323 (.MEM_1323 - 1323 )
Partition 1324 (.MEM_1324 - 1324 )
Partition 1325 (.MEM_1325 - 1325 )
Partition 1326 (.MEM_1326 - 1326 )
Partition 1327 (.MEM_1327 - 1327 )
Partition 1328 (.MEM_1328 - 1328 )
Partition 1329 (.MEM_1329 - 1329 )
Partition 1330 (.MEM_1330 - 1330 )
Partition 1331 (.MEM_1331 - 1331 )
Partition 1332 (.MEM_1332 - 1332 )
Partition 1333 (.MEM_1333 - 1333 )
Partition 1334 (.MEM_1334 - 1334 )
Partition 1335 (.MEM_1335 - 1335 )
Partition 1336 (.MEM_1336 - 1336 )
Partition 1337 (.MEM_1337 - 1337 )
Partition 1338 (.MEM_1338 - 1338 )
Partition 1339 (.MEM_1339 - 1339 )
Partition 1340 (.MEM_1340 - 1340 )
Partition 1341 (.MEM_1341 - 1341 )
Partition 1342 (.MEM_1342 - 1342 )
Partition 1343 (.MEM_1343 - 1343 )
Partition 1344 (.MEM_1344 - 1344 )
Partition 1345 (.MEM_1345 - 1345 )
Partition 1346 (.MEM_1346 - 1346 )
Partition 1347 (.MEM_1347 - 1347 )
Partition 1348 (.MEM_1348 - 1348 )
Partition 1349 (.MEM_1349 - 1349 )
Partition 1350 (.MEM_1350 - 1350 )
Partition 1351 (.MEM_1351 - 1351 )
Partition 1352 (.MEM_1352 - 1352 )
Partition 1353 (.MEM_1353 - 1353 )
Partition 1354 (.MEM_1354 - 1354 )
Partition 1355 (.MEM_1355 - 1355 )
Partition 1356 (.MEM_1356 - 1356 )
Partition 1357 (.MEM_1357 - 1357 )
Partition 1358 (.MEM_1358 - 1358 )
Partition 1359 (.MEM_1359 - 1359 )
Partition 1360 (.MEM_1360 - 1360 )
Partition 1361 (.MEM_1361 - 1361 )
Partition 1362 (.MEM_1362 - 1362 )
Partition 1363 (.MEM_1363 - 1363 )
Partition 1364 (.MEM_1364 - 1364 )
Partition 1365 (.MEM_1365 - 1365 )
Partition 1366 (.MEM_1366 - 1366 )
Partition 1367 (.MEM_1367 - 1367 )
Partition 1368 (.MEM_1368 - 1368 )
Partition 1369 (.MEM_1369 - 1369 )
Partition 1370 (.MEM_1370 - 1370 )
Partition 1371 (.MEM_1371 - 1371 )
Partition 1372 (.MEM_1372 - 1372 )
Partition 1373 (.MEM_1373 - 1373 )
Partition 1374 (.MEM_1374 - 1374 )
Partition 1375 (.MEM_1375 - 1375 )
Partition 1376 (.MEM_1376 - 1376 )
Partition 1377 (.MEM_1377 - 1377 )
Partition 1378 (.MEM_1378 - 1378 )
Partition 1379 (.MEM_1379 - 1379 )
Partition 1380 (.MEM_1380 - 1380 )
Partition 1381 (.MEM_1381 - 1381 )
Partition 1382 (.MEM_1382 - 1382 )
Partition 1383 (.MEM_1383 - 1383 )
Partition 1384 (.MEM_1384 - 1384 )
Partition 1385 (.MEM_1385 - 1385 )
Partition 1386 (.MEM_1386 - 1386 )
Partition 1387 (.MEM_1387 - 1387 )
Partition 1388 (.MEM_1388 - 1388 )
Partition 1389 (.MEM_1389 - 1389 )
Partition 1390 (.MEM_1390 - 1390 )
Partition 1391 (.MEM_1391 - 1391 )
Partition 1392 (.MEM_1392 - 1392 )
Partition 1393 (.MEM_1393 - 1393 )
Partition 1394 (.MEM_1394 - 1394 )
Partition 1395 (.MEM_1395 - 1395 )
Partition 1396 (.MEM_1396 - 1396 )
Partition 1397 (.MEM_1397 - 1397 )
Partition 1398 (.MEM_1398 - 1398 )
Partition 1399 (.MEM_1399 - 1399 )
Partition 1400 (.MEM_1400 - 1400 )
Partition 1401 (.MEM_1401 - 1401 )
Partition 1402 (.MEM_1402 - 1402 )
Partition 1403 (.MEM_1403 - 1403 )
Partition 1404 (.MEM_1404 - 1404 )
Partition 1405 (.MEM_1405 - 1405 )
Partition 1406 (.MEM_1406 - 1406 )
Partition 1407 (.MEM_1407 - 1407 )
Partition 1408 (.MEM_1408 - 1408 )
Partition 1409 (.MEM_1409 - 1409 )
Partition 1410 (.MEM_1410 - 1410 )
Partition 1411 (.MEM_1411 - 1411 )
Partition 1412 (.MEM_1412 - 1412 )
Partition 1413 (.MEM_1413 - 1413 )
Partition 1414 (.MEM_1414 - 1414 )
Partition 1415 (.MEM_1415 - 1415 )
Partition 1416 (.MEM_1416 - 1416 )
Partition 1417 (.MEM_1417 - 1417 )
Partition 1418 (.MEM_1418 - 1418 )
Partition 1419 (.MEM_1419 - 1419 )
Partition 1420 (.MEM_1420 - 1420 )
Partition 1421 (.MEM_1421 - 1421 )
Partition 1422 (.MEM_1422 - 1422 )
Partition 1423 (.MEM_1423 - 1423 )
Partition 1424 (.MEM_1424 - 1424 )
Partition 1425 (.MEM_1425 - 1425 )
Partition 1426 (.MEM_1426 - 1426 )
Partition 1427 (.MEM_1427 - 1427 )
Partition 1428 (.MEM_1428 - 1428 )
Partition 1429 (.MEM_1429 - 1429 )
Partition 1430 (.MEM_1430 - 1430 )
Partition 1431 (.MEM_1431 - 1431 )
Partition 1432 (.MEM_1432 - 1432 )
Partition 1433 (.MEM_1433 - 1433 )
Partition 1434 (.MEM_1434 - 1434 )
Partition 1435 (.MEM_1435 - 1435 )
Partition 1436 (.MEM_1436 - 1436 )
Partition 1437 (.MEM_1437 - 1437 )
Partition 1438 (.MEM_1438 - 1438 )
Partition 1439 (.MEM_1439 - 1439 )
Partition 1440 (.MEM_1440 - 1440 )
Partition 1441 (.MEM_1441 - 1441 )
Partition 1442 (.MEM_1442 - 1442 )
Partition 1443 (.MEM_1443 - 1443 )
Partition 1444 (.MEM_1444 - 1444 )
Partition 1445 (.MEM_1445 - 1445 )
Partition 1446 (.MEM_1446 - 1446 )
Partition 1447 (.MEM_1447 - 1447 )
Partition 1448 (.MEM_1448 - 1448 )
Partition 1449 (.MEM_1449 - 1449 )
Partition 1450 (.MEM_1450 - 1450 )
Partition 1451 (.MEM_1451 - 1451 )
Partition 1452 (.MEM_1452 - 1452 )
Partition 1453 (.MEM_1453 - 1453 )
Partition 1454 (.MEM_1454 - 1454 )
Partition 1455 (.MEM_1455 - 1455 )
Partition 1456 (.MEM_1456 - 1456 )
Partition 1457 (.MEM_1457 - 1457 )
Partition 1458 (.MEM_1458 - 1458 )
Partition 1459 (.MEM_1459 - 1459 )
Partition 1460 (.MEM_1460 - 1460 )
Partition 1461 (.MEM_1461 - 1461 )
Partition 1462 (.MEM_1462 - 1462 )
Partition 1463 (.MEM_1463 - 1463 )
Partition 1464 (.MEM_1464 - 1464 )
Partition 1465 (.MEM_1465 - 1465 )
Partition 1466 (.MEM_1466 - 1466 )
Partition 1467 (.MEM_1467 - 1467 )
Partition 1468 (.MEM_1468 - 1468 )
Partition 1469 (.MEM_1469 - 1469 )
Partition 1470 (.MEM_1470 - 1470 )
Partition 1471 (.MEM_1471 - 1471 )
Partition 1472 (.MEM_1472 - 1472 )
Partition 1473 (.MEM_1473 - 1473 )
Partition 1474 (.MEM_1474 - 1474 )
Partition 1475 (.MEM_1475 - 1475 )
Partition 1476 (.MEM_1476 - 1476 )
Partition 1477 (.MEM_1477 - 1477 )
Partition 1478 (.MEM_1478 - 1478 )
Partition 1479 (.MEM_1479 - 1479 )
Partition 1480 (.MEM_1480 - 1480 )
Partition 1481 (.MEM_1481 - 1481 )
Partition 1482 (.MEM_1482 - 1482 )
Partition 1483 (.MEM_1483 - 1483 )
Partition 1484 (.MEM_1484 - 1484 )
Partition 1485 (.MEM_1485 - 1485 )
Partition 1486 (.MEM_1486 - 1486 )
Partition 1487 (.MEM_1487 - 1487 )
Partition 1488 (.MEM_1488 - 1488 )
Partition 1489 (.MEM_1489 - 1489 )
Partition 1490 (.MEM_1490 - 1490 )
Partition 1491 (.MEM_1491 - 1491 )
Partition 1492 (.MEM_1492 - 1492 )
Partition 1493 (.MEM_1493 - 1493 )
Partition 1494 (.MEM_1494 - 1494 )
Partition 1495 (.MEM_1495 - 1495 )
Partition 1496 (.MEM_1496 - 1496 )
Partition 1497 (.MEM_1497 - 1497 )
Partition 1498 (.MEM_1498 - 1498 )
Partition 1499 (.MEM_1499 - 1499 )
Partition 1500 (.MEM_1500 - 1500 )
Partition 1501 (.MEM_1501 - 1501 )
Partition 1502 (.MEM_1502 - 1502 )
Partition 1503 (.MEM_1503 - 1503 )
Partition 1504 (.MEM_1504 - 1504 )
Partition 1505 (.MEM_1505 - 1505 )
Partition 1506 (.MEM_1506 - 1506 )
Partition 1507 (.MEM_1507 - 1507 )
Partition 1508 (.MEM_1508 - 1508 )
Partition 1509 (.MEM_1509 - 1509 )
Partition 1510 (.MEM_1510 - 1510 )
Partition 1511 (.MEM_1511 - 1511 )
Partition 1512 (.MEM_1512 - 1512 )
Partition 1513 (.MEM_1513 - 1513 )
Partition 1514 (.MEM_1514 - 1514 )
Partition 1515 (.MEM_1515 - 1515 )
Partition 1516 (D.48132_1516 - 1516 )
Partition 1518 (D.48136_1518 - 1518 )
Partition 1520 (D.48140_1520 - 1520 )
Partition 1522 (D.48144_1522 - 1522 )
Partition 1524 (D.48148_1524 - 1524 )
Partition 1526 (D.48152_1526 - 1526 )
Partition 1528 (D.48156_1528 - 1528 )
Partition 1530 (D.48160_1530 - 1530 )
Partition 1532 (D.48164_1532 - 1532 )
Partition 1534 (D.48168_1534 - 1534 )
Partition 1536 (D.48172_1536 - 1536 )
Partition 1538 (D.48176_1538 - 1538 )
Partition 1540 (D.48180_1540 - 1540 )
Partition 1542 (D.48184_1542 - 1542 )
Partition 1544 (D.48188_1544 - 1544 )
Partition 1547 (D.48195_1547 - 1547 )
Partition 1549 (D.48199_1549 - 1549 )
Partition 1551 (D.48203_1551 - 1551 )
Partition 1553 (D.48207_1553 - 1553 )
Partition 1555 (D.48211_1555 - 1555 )
Partition 1557 (.MEM_1557 - 1557 )
Partition 1558 (D.48131_1558 - 227 1517 1558 )
Partition 1559 (D.48135_1559 - 244 1519 1559 )
Partition 1560 (D.48139_1560 - 268 1521 1560 )
Partition 1561 (D.48143_1561 - 476 1523 1561 )
Partition 1562 (D.48147_1562 - 482 1525 1562 )
Partition 1563 (D.48151_1563 - 556 1527 1563 )
Partition 1564 (D.48155_1564 - 558 1529 1564 )
Partition 1565 (D.48159_1565 - 593 1531 1565 )
Partition 1566 (D.48163_1566 - 595 1533 1566 )
Partition 1567 (D.48167_1567 - 623 1535 1567 )
Partition 1568 (D.48171_1568 - 909 1537 1568 )
Partition 1569 (D.48175_1569 - 917 1539 1569 )
Partition 1570 (D.48179_1570 - 919 1541 1570 )
Partition 1571 (D.48183_1571 - 921 1543 1571 )
Partition 1572 (D.48187_1572 - 934 1545 1572 )
Partition 1573 (.MEM_1573 - 1573 )
Partition 1574 (v_1574 - 979 1546 1574 )
Partition 1575 (D.48194_1575 - 1038 1548 1575 )
Partition 1576 (D.48198_1576 - 1040 1550 1576 )
Partition 1577 (D.48202_1577 - 1075 1552 1577 )
Partition 1578 (D.48206_1578 - 1077 1554 1578 )
Partition 1579 (D.48210_1579 - 1111 1556 1579 )

Coalesced iftmp.28_59 to family_273
Coalesced iftmp.32_63 to both_696
Coalesced D.41650_227 to D.48131_1558
Coalesced D.41676_244 to D.48135_1559
Coalesced D.41704_268 to D.48139_1560
Coalesced iftmp.28_271 to family_273
Coalesced iftmp.28_272 to family_273
Coalesced iftmp.31_463 to append_audio_62
Coalesced D.41892_476 to D.48143_1561
Coalesced D.41900_482 to D.48147_1562
Coalesced D.41967_556 to D.48151_1563
Coalesced D.41970_558 to D.48155_1564
Coalesced D.41996_593 to D.48159_1565
Coalesced D.41999_595 to D.48163_1566
Coalesced D.42017_623 to D.48167_1567
Coalesced iftmp.32_694 to both_696
Coalesced iftmp.32_695 to both_696
Coalesced iftmp.36_866 to append_video_66
Coalesced D.42300_909 to D.48171_1568
Coalesced D.42309_917 to D.48175_1569
Coalesced D.42312_919 to D.48179_1570
Coalesced D.42315_921 to D.48183_1571
Coalesced D.42333_934 to D.48187_1572
Coalesced D.42434_1038 to D.48194_1575
Coalesced D.42437_1040 to D.48198_1576
Coalesced D.42461_1075 to D.48202_1577
Coalesced D.42465_1077 to D.48206_1578
Coalesced D.42491_1111 to D.48210_1579
Coalesced D.48133_1517 to D.48131_1558
Coalesced D.48137_1519 to D.48135_1559
Coalesced D.48141_1521 to D.48139_1560
Coalesced D.48145_1523 to D.48143_1561
Coalesced D.48149_1525 to D.48147_1562
Coalesced D.48153_1527 to D.48151_1563
Coalesced D.48157_1529 to D.48155_1564
Coalesced D.48161_1531 to D.48159_1565
Coalesced D.48165_1533 to D.48163_1566
Coalesced D.48169_1535 to D.48167_1567
Coalesced D.48173_1537 to D.48171_1568
Coalesced D.48177_1539 to D.48175_1569
Coalesced D.48181_1541 to D.48179_1570
Coalesced D.48185_1543 to D.48183_1571
Coalesced D.48189_1545 to D.48187_1572
Coalesced D.48192_1546 to v_1574
Coalesced D.48196_1548 to D.48194_1575
Coalesced D.48200_1550 to D.48198_1576
Coalesced D.48204_1552 to D.48202_1577
Coalesced D.48208_1554 to D.48206_1578
Coalesced D.48212_1556 to D.48210_1579
Scope blocks after cleanups:

{ Scope block #0 
  char * buf;
  int ptime;
  uint32_t rate;
  uint32_t v_port;
  int use_cng;
  const char * val;
  const char * family;
  const char * pass_fmtp;
  const char * ov_fmtp;
  const char * append_audio;
  const char * append_video;
  char srbuf[128];
  const char * var_val;
  const char * username;
  const char * fmtp_out;
  const char * fmtp_out_var;
  struct switch_event_t * map;
  struct switch_event_t * ptmap;
  const char * local_sdp_audio_zrtp_hash;
  const char * local_sdp_video_zrtp_hash;
  const char * tmp;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  struct ice_t * ice_out;
  int vp8;
  int red;
  struct payload_map_t * pmap;
  int is_outbound;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_gen_local_sdp";
  static const char __func__[32] = "switch_core_media_gen_local_sdp";

  { Scope block #382 src/switch_core_media.c:6449 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #383 Originating from :#0 

    }

  }

  { Scope block #384 src/switch_core_media.c:6361 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #385 Originating from :#0 

    }

  }

  { Scope block #386 src/switch_core_media.c:6356 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #387 Originating from :#0 

    }

  }

  { Scope block #388 src/switch_core_media.c:6227 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #389 Originating from :#0 

    }

  }

  { Scope block #390 src/switch_core_media.c:6203 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #391 Originating from :#0 

    }

  }

  { Scope block #392 src/switch_core_media.c:6169 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #393 Originating from :#0 

    }

  }

  { Scope block #394 
    int i;

    { Scope block #395 
      struct switch_core_session_t * orig_session;

      { Scope block #396 
        const struct switch_codec_implementation_t * imp;
        switch_payload_t orig_pt;
        char * orig_fmtp;

      }

    }

  }

  { Scope block #397 
    char tmp1[11];
    char tmp2[11];
    uint32_t c1;
    uint32_t c2;
    uint32_t c3;
    uint32_t c4;

    { Scope block #398 src/switch_core_media.c:6430 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #399 Originating from :#0 

      }

    }

    { Scope block #400 src/switch_core_media.c:6430 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #401 Originating from :#0 

      }

    }

    { Scope block #402 src/switch_core_media.c:6408 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #403 Originating from :#0 

      }

    }

    { Scope block #404 src/switch_core_media.c:6408 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #405 Originating from :#0 

      }

    }

    { Scope block #406 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #407 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #408 
    int i;
    int cur_ptime;
    int this_ptime;
    int cng_type;
    const char * mult;

    { Scope block #409 
      char * bp;
      int both;

    }

    { Scope block #410 
      const struct switch_codec_implementation_t * imp;

      { Scope block #411 
        char * bp;
        int both;

      }

    }

  }

  { Scope block #412 
    int loops;

    { Scope block #413 src/switch_core_media.c:6759 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #414 Originating from :#0 

      }

    }

    { Scope block #415 
      struct payload_map_t * pmap;

    }

    { Scope block #416 
      int i;
      int already_did[128];

      { Scope block #417 
        const struct switch_codec_implementation_t * imp;

      }

    }

    { Scope block #418 
      const char * of;
      struct payload_map_t * pmap;

    }

    { Scope block #419 
      int i;
      int already_did[128];

      { Scope block #420 
        const struct switch_codec_implementation_t * imp;
        char * fmtp;
        uint32_t ianacode;
        int channels;

        { Scope block #421 src/switch_core_media.c:6746 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #422 Originating from :#0 

          }

        }

        { Scope block #423 src/switch_core_media.c:6743 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #424 Originating from :#0 

          }

        }

        { Scope block #425 src/switch_core_media.c:6741 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #426 Originating from :#0 

          }

        }

        { Scope block #427 src/switch_core_media.c:6729 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #428 Originating from :#0 

          }

        }

      }

    }

    { Scope block #429 
      char tmp1[11];
      char tmp2[11];
      uint32_t c1;
      uint32_t c2;
      uint32_t c3;
      uint32_t c4;
      const char * vbw;
      int bw;

      { Scope block #430 src/switch_core_media.c:6856 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #431 Originating from :#0 

        }

      }

      { Scope block #432 src/switch_core_media.c:6856 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #433 Originating from :#0 

        }

      }

      { Scope block #434 src/switch_core_media.c:6835 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #435 Originating from :#0 

        }

      }

      { Scope block #436 src/switch_core_media.c:6835 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #437 Originating from :#0 

        }

      }

      { Scope block #438 
        int v;

        { Scope block #439 src/switch_core_media.c:6801 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #440 Originating from :#0 

          }

        }

      }

      { Scope block #441 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

      { Scope block #442 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #443 
      int i;

      { Scope block #444 
        switch_rtp_crypto_key_type_t j;

        { Scope block #445 src/switch_core_media.c:6883 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #446 Originating from :#0 

          }

        }

      }

    }

  }

}
switch_core_media_gen_local_sdp (struct switch_core_session_t * session, switch_sdp_type_t sdp_type, const char * ip, switch_port_t port, const char * sr, int force)
{
  const char D.48211;
  int D.48210;
  const char D.48207;
  int D.48206;
  const char D.48203;
  int D.48202;
  const char D.48199;
  int D.48198;
  const char D.48195;
  int D.48194;
  const char D.48188;
  int D.48187;
  const char D.48184;
  int D.48183;
  const char D.48180;
  int D.48179;
  const char D.48176;
  int D.48175;
  const char D.48172;
  int D.48171;
  const char D.48168;
  int D.48167;
  const char D.48164;
  int D.48163;
  const char D.48160;
  int D.48159;
  const char D.48156;
  int D.48155;
  const char D.48152;
  int D.48151;
  const char D.48148;
  int D.48147;
  const char D.48144;
  int D.48143;
  const char D.48140;
  int D.48139;
  const char D.48136;
  int D.48135;
  const char D.48132;
  int D.48131;
  switch_rtp_crypto_key_type_t j;
  int i;
  int v;
  int bw;
  const char * vbw;
  uint32_t c4;
  uint32_t c3;
  uint32_t c2;
  uint32_t c1;
  char tmp2[11];
  char tmp1[11];
  int channels;
  uint32_t ianacode;
  char * fmtp;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  const char * of;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  int loops;
  int both;
  char * bp;
  const struct switch_codec_implementation_t * imp;
  int both;
  char * bp;
  const char * mult;
  int cng_type;
  int this_ptime;
  int cur_ptime;
  int i;
  uint32_t c4;
  uint32_t c3;
  uint32_t c2;
  uint32_t c1;
  char tmp2[11];
  char tmp1[11];
  char * orig_fmtp;
  switch_payload_t orig_pt;
  const struct switch_codec_implementation_t * imp;
  struct switch_core_session_t * orig_session;
  int i;
  static const char __func__[32] = "switch_core_media_gen_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_gen_local_sdp";
  int is_outbound;
  struct payload_map_t * pmap;
  int red;
  int vp8;
  struct ice_t * ice_out;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  const char * tmp;
  const char * local_sdp_video_zrtp_hash;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_event_t * ptmap;
  struct switch_event_t * map;
  const char * fmtp_out_var;
  const char * fmtp_out;
  const char * username;
  const char * var_val;
  char srbuf[128];
  const char * append_video;
  const char * append_audio;
  const char * ov_fmtp;
  const char * pass_fmtp;
  const char * family;
  const char * val;
  int use_cng;
  uint32_t v_port;
  uint32_t rate;
  int ptime;
  char * buf;
  struct switch_event_t * ptmap.39;
  uint32_t D.42507;
  uint32_t D.42505;
  size_t D.42504;
  size_t D.42503;
  char * D.42502;
  size_t D.42501;
  char * D.42498;
  size_t D.42497;
  size_t D.42496;
  char * D.42495;
  size_t D.42494;
  char * D.42490;
  switch_rtp_crypto_key_type_t D.42486;
  uint32_t D.42483;
  uint32_t D.42480;
  int D.42477;
  size_t D.42476;
  size_t D.42475;
  char * D.42474;
  size_t D.42473;
  switch_port_t D.42470;
  int D.39675;
  char * D.42464;
  int D.42460;
  int D.42459;
  size_t D.42458;
  size_t D.42457;
  char * D.42456;
  size_t D.42455;
  uint32_t D.42454;
  _Bool D.42452;
  _Bool D.42451;
  int D.42448;
  size_t D.42447;
  size_t D.42446;
  char * D.42445;
  size_t D.42444;
  int D.39666;
  char * D.42433;
  size_t D.42432;
  size_t D.42431;
  char * D.42430;
  size_t D.42429;
  size_t D.42428;
  size_t D.42427;
  char * D.42426;
  size_t D.42425;
  size_t D.42424;
  size_t D.42423;
  char * D.42422;
  size_t D.42421;
  size_t D.42420;
  size_t D.42419;
  char * D.42418;
  size_t D.42417;
  size_t D.42416;
  size_t D.42415;
  char * D.42414;
  size_t D.42413;
  size_t D.42412;
  size_t D.42411;
  char * D.42410;
  size_t D.42409;
  uint32_t D.42408;
  size_t D.42407;
  size_t D.42406;
  char * D.42405;
  size_t D.42404;
  size_t D.42403;
  size_t D.42402;
  char * D.42401;
  size_t D.42400;
  size_t D.42397;
  size_t D.42396;
  char * D.42395;
  size_t D.42394;
  uint32_t D.42391;
  size_t D.42388;
  size_t D.42387;
  char * D.42386;
  size_t D.42385;
  uint8_t D.42378;
  uint8_t D.42374;
  char * iftmp.38;
  uint8_t D.42369;
  char * iftmp.37;
  size_t D.42367;
  size_t D.42366;
  char * D.42365;
  size_t D.42364;
  short unsigned int D.42361;
  short unsigned int D.42360;
  uint32_t D.42359;
  size_t D.42358;
  size_t D.42357;
  char * D.42356;
  size_t D.42355;
  size_t D.42353;
  size_t D.42352;
  char * D.42351;
  size_t D.42350;
  size_t D.42349;
  size_t D.42348;
  char * D.42347;
  size_t D.42346;
  int8_t D.42343;
  char[192] * D.42340;
  size_t D.42339;
  size_t D.42338;
  char * D.42337;
  size_t D.42336;
  char * D.42332;
  uint32_t D.42329;
  uint32_t D.42328;
  size_t D.42324;
  size_t D.42323;
  char * D.42322;
  size_t D.42321;
  int D.42318;
  char * D.42306;
  size_t D.42299;
  size_t D.42298;
  char * D.42297;
  size_t D.42296;
  const uint32_t D.42294;
  size_t D.42293;
  size_t D.42292;
  char * D.42291;
  size_t D.42290;
  int D.42285;
  int D.42282;
  int D.42281;
  const uint8_t D.42280;
  char * const D.42279;
  int D.42274;
  uint32_t D.42269;
  switch_call_direction_t D.42266;
  const switch_codec_type_t D.42263;
  switch_payload_t D.42262;
  const char D.42255;
  unsigned int D.42253;
  size_t D.42252;
  const char D.42249;
  char * iftmp.35;
  size_t D.42246;
  size_t D.42245;
  char * D.42244;
  size_t D.42243;
  uint8_t D.42240;
  uint32_t D.42238;
  char * D.42237;
  int D.42236;
  size_t D.42235;
  size_t D.42234;
  char * D.42233;
  size_t D.42232;
  uint8_t D.42229;
  switch_payload_t D.42226;
  int32_t D.42223;
  size_t D.42222;
  size_t D.42221;
  char * D.42220;
  size_t D.42219;
  const char * D.42209;
  uint32_t D.42205;
  long unsigned int D.42204;
  int D.42203;
  size_t D.42202;
  size_t D.42201;
  char * D.42200;
  size_t D.42199;
  int D.42196;
  int D.42193;
  char * D.42192;
  size_t D.42189;
  size_t D.42188;
  char * D.42187;
  size_t D.42186;
  const int D.42185;
  size_t D.42182;
  size_t D.42181;
  char * D.42180;
  size_t D.42179;
  int D.42176;
  int D.42175;
  signed char D.42172;
  switch_payload_t D.42171;
  uint32_t D.42168;
  switch_call_direction_t D.42165;
  const switch_codec_type_t D.42162;
  uint8_t D.42158;
  int D.42156;
  size_t D.42155;
  size_t D.42154;
  char * D.42153;
  size_t D.42152;
  switch_payload_t D.42149;
  switch_payload_t D.42148;
  int32_t D.42145;
  int D.42144;
  switch_payload_t D.42143;
  struct payload_map_t * D.42142;
  size_t D.42141;
  size_t D.42140;
  char * D.42139;
  size_t D.42138;
  uint8_t D.42135;
  const char * D.42134;
  uint32_t D.42133;
  switch_call_direction_t D.42131;
  uint32_t D.42129;
  int iftmp.34;
  size_t D.42122;
  size_t D.42121;
  char * D.42120;
  size_t D.42119;
  short unsigned int D.42118;
  uint32_t D.42115;
  switch_port_t D.42112;
  uint32_t D.42109;
  switch_port_t D.42106;
  uint32_t D.42103;
  switch_call_direction_t D.42100;
  uint32_t D.42097;
  size_t D.42096;
  size_t D.42095;
  uint32_t D.42092;
  uint32_t D.42090;
  size_t D.42085;
  size_t D.42084;
  size_t D.42083;
  uint32_t D.42082;
  uint32_t D.42081;
  int D.42074;
  int D.42072;
  char * const D.42071;
  const int D.42068;
  const switch_codec_type_t D.42065;
  size_t D.42064;
  size_t D.42063;
  switch_rtp_crypto_mode_t D.42058;
  size_t D.42057;
  struct switch_event_t * map.33;
  uint32_t D.42055;
  uint32_t D.42054;
  uint32_t D.42048;
  uint32_t D.42046;
  int D.42042;
  uint32_t D.42039;
  int32_t D.42030;
  size_t D.42026;
  size_t D.42025;
  char * D.42024;
  size_t D.42023;
  uint32_t D.42020;
  char * D.42016;
  uint32_t D.42013;
  int D.42010;
  size_t D.42009;
  size_t D.42008;
  char * D.42007;
  size_t D.42006;
  int D.39607;
  int D.41995;
  int D.41994;
  size_t D.41993;
  size_t D.41992;
  char * D.41991;
  size_t D.41990;
  uint32_t D.41989;
  _Bool D.41987;
  _Bool D.41986;
  _Bool D.41985;
  int D.41982;
  size_t D.41981;
  size_t D.41980;
  char * D.41979;
  size_t D.41978;
  switch_port_t D.41975;
  int D.39598;
  char * D.41966;
  int D.41965;
  switch_port_t D.41964;
  char * D.41963;
  char * D.41962;
  size_t D.41961;
  size_t D.41960;
  char * D.41959;
  size_t D.41958;
  char * D.41957;
  size_t D.41956;
  size_t D.41955;
  char * D.41954;
  size_t D.41953;
  char * D.41952;
  size_t D.41951;
  size_t D.41950;
  char * D.41949;
  size_t D.41948;
  size_t D.41947;
  size_t D.41946;
  char * D.41945;
  size_t D.41944;
  size_t D.41943;
  size_t D.41942;
  char * D.41941;
  size_t D.41940;
  size_t D.41939;
  size_t D.41938;
  char * D.41937;
  size_t D.41936;
  char * D.41935;
  uint32_t D.41934;
  size_t D.41933;
  size_t D.41932;
  char * D.41931;
  size_t D.41930;
  uint8_t D.41927;
  int D.41926;
  size_t D.41925;
  size_t D.41924;
  char * D.41923;
  size_t D.41922;
  size_t D.41920;
  size_t D.41919;
  char * D.41918;
  size_t D.41917;
  size_t D.41916;
  size_t D.41915;
  char * D.41914;
  size_t D.41913;
  int8_t D.41910;
  char[192] * D.41907;
  size_t D.41906;
  size_t D.41905;
  char * D.41904;
  size_t D.41903;
  char * D.41899;
  size_t D.41898;
  size_t D.41897;
  char * D.41896;
  size_t D.41895;
  size_t D.41891;
  size_t D.41890;
  char * D.41889;
  size_t D.41888;
  size_t D.41885;
  size_t D.41884;
  char * D.41883;
  size_t D.41882;
  const char D.41876;
  unsigned int D.41874;
  size_t D.41873;
  const char D.41870;
  char * iftmp.30;
  size_t D.41867;
  size_t D.41866;
  char * D.41865;
  size_t D.41864;
  size_t D.41859;
  size_t D.41858;
  char * D.41857;
  size_t D.41856;
  size_t D.41852;
  size_t D.41851;
  char * D.41850;
  size_t D.41849;
  int32_t D.41846;
  size_t D.41845;
  size_t D.41844;
  char * D.41843;
  size_t D.41842;
  size_t D.41840;
  size_t D.41839;
  char * D.41838;
  size_t D.41837;
  uint32_t D.41834;
  uint32_t D.41831;
  int32_t D.41829;
  const int D.41825;
  _Bool D.41822;
  _Bool D.41821;
  _Bool D.41820;
  const struct switch_codec_implementation_t * D.41819;
  uint32_t D.41817;
  char * D.41816;
  size_t D.41815;
  size_t D.41814;
  char * D.41813;
  size_t D.41812;
  int32_t D.41807;
  size_t D.41806;
  size_t D.41805;
  char * D.41804;
  size_t D.41803;
  size_t D.41800;
  size_t D.41799;
  char * D.41798;
  size_t D.41797;
  int D.41795;
  switch_payload_t D.41794;
  size_t D.41793;
  size_t D.41792;
  char * D.41791;
  size_t D.41790;
  int D.41787;
  char * D.41786;
  int D.41783;
  size_t D.41782;
  size_t D.41781;
  char * D.41780;
  size_t D.41779;
  size_t D.41778;
  size_t D.41777;
  char * D.41776;
  size_t D.41775;
  int32_t D.41770;
  size_t D.41769;
  size_t D.41768;
  char * D.41767;
  size_t D.41766;
  uint32_t D.41763;
  int32_t D.41761;
  uint8_t D.41757;
  int D.41755;
  size_t D.41754;
  size_t D.41753;
  char * D.41752;
  size_t D.41751;
  switch_payload_t D.41748;
  struct switch_mutex_t * D.41747;
  int32_t D.41744;
  int D.41743;
  switch_payload_t D.41742;
  size_t D.41741;
  size_t D.41740;
  char * D.41739;
  size_t D.41738;
  const char * D.41737;
  switch_rtp_crypto_key_type_t D.41736;
  uint32_t D.41734;
  uint8_t D.41732;
  int iftmp.29;
  int D.41727;
  size_t D.41726;
  size_t D.41725;
  char * D.41724;
  size_t D.41723;
  uint8_t D.41720;
  char * D.41719;
  size_t D.41718;
  size_t D.41717;
  char * D.41716;
  size_t D.41715;
  uint32_t D.41712;
  char * D.41708;
  int D.41703;
  unsigned int D.41700;
  switch_core_media_NDLB_t D.41699;
  uint32_t D.41696;
  int D.41693;
  const char * D.41692;
  uint32_t D.41689;
  unsigned int D.41688;
  unsigned int D.41687;
  unsigned int D.41686;
  time_t D.41685;
  uint32_t D.41682;
  char * D.41673;
  char * D.41664;
  uint32_t D.41655;
  uint32_t D.41653;
  _Bool D.41647;
  _Bool D.41646;
  _Bool D.41645;
  int D.41642;
  uint32_t D.41634;
  int D.41633;
  const int D.41632;
  const uint32_t D.41631;
  uint32_t D.41630;
  unsigned char D.41629;
  char * D.41628;
  char * orig_fmtp.27;
  switch_payload_t orig_pt.26;
  switch_status_t D.41622;
  char * const D.41621;
  switch_media_type_t D.41620;
  const switch_codec_type_t D.41619;
  struct switch_core_session_t * orig_session.25;
  int D.41612;
  _Bool D.41609;
  _Bool D.41608;
  _Bool D.41607;
  switch_payload_t D.41606;
  int32_t D.41603;
  int D.41602;
  int D.41599;
  switch_payload_t D.41596;
  switch_core_media_dtmf_t D.41593;
  switch_payload_t D.41590;
  int D.41587;
  const switch_payload_t D.41586;
  const struct switch_codec_implementation_t * D.41585;
  uint32_t D.41581;
  int D.41578;
  int D.41577;
  int D.41575;
  int32_t D.41572;
  struct payload_map_t * D.41566;
  int D.41565;
  const char * D.41564;
  uint32_t D.41562;
  int D.41557;
  int D.41554;
  int D.41551;
  const char * D.41550;
  uint32_t D.41547;
  uint32_t D.41546;
  uint32_t D.41544;
  int D.41538;
  struct switch_channel_t * D.41535;
  struct switch_core_session_t * D.41534;
  int D.41531;
  const char * D.41530;
  char * D.41527;
  const char * D.41526;
  char * D.41523;
  struct switch_core_media_params_t * D.41522;
  int D.41519;
  const char * D.41518;
  switch_call_direction_t D.41513;
  struct switch_channel_t * D.41512;

<bb 2>:
  ptime_69 = 0;
  # DEBUG ptime => ptime_69
  rate_70 = 0;
  # DEBUG rate => rate_70
  use_cng_71 = 1;
  # DEBUG use_cng => use_cng_71
  D.41512_73 = session_72(D)->channel;
  pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_74
  D.41512_75 = session_72(D)->channel;
  ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);
  # DEBUG ov_fmtp => ov_fmtp_76
  D.41512_77 = session_72(D)->channel;
  append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);
  # DEBUG append_audio => append_audio_78
  D.41512_79 = session_72(D)->channel;
  append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);
  # DEBUG append_video => append_video_80
  srbuf = "";
  D.41512_81 = session_72(D)->channel;
  fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);
  # DEBUG fmtp_out_var => fmtp_out_var_82
  map = 0B;
  ptmap = 0B;
  local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_83
  local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);
  # DEBUG local_sdp_video_zrtp_hash => local_sdp_video_zrtp_hash_84
  vp8_85 = 0;
  # DEBUG vp8 => vp8_85
  red_86 = 0;
  # DEBUG red => red_86
  D.41512_87 = session_72(D)->channel;
  D.41513_88 = switch_channel_direction (D.41512_87);
  is_outbound_89 = D.41513_88 == 1;
  # DEBUG is_outbound => is_outbound_89
  if (session_72(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_90 = session_72(D)->media_handle;
  # DEBUG smh => smh_90
  if (smh_90 == 0B)
    goto <bb 467>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_91 = &smh_90->engines;
  # DEBUG a_engine => a_engine_91
  v_engine_92 = &smh_90->engines[1];
  # DEBUG v_engine => v_engine_92
  D.41512_93 = session_72(D)->channel;
  D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);
  D.41519_95 = switch_true (D.41518_94);
  if (D.41519_95 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  a_engine_91->rtcp_mux = 1;
  v_engine_92->rtcp_mux = 1;

<bb 7>:
  D.41522_96 = smh_90->mparams;
  D.41523_97 = D.41522_96->rtcp_audio_interval_msec;
  if (D.41523_97 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.41522_98 = smh_90->mparams;
  D.41512_99 = session_72(D)->channel;
  D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);
  D.41522_98->rtcp_audio_interval_msec = D.41526_100;

<bb 9>:
  D.41522_101 = smh_90->mparams;
  D.41527_102 = D.41522_101->rtcp_video_interval_msec;
  if (D.41527_102 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.41522_103 = smh_90->mparams;
  D.41512_104 = session_72(D)->channel;
  D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);
  D.41522_103->rtcp_video_interval_msec = D.41530_105;

<bb 11>:
  D.41531_106 = dtls_ok (session_72(D));
  if (D.41531_106 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  D.41534_107 = smh_90->session;
  D.41535_108 = D.41534_107->channel;
  tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_109
  if (tmp_109 != 0B)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41538_110 = switch_false (tmp_109);
  if (D.41538_110 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41534_111 = smh_90->session;
  D.41535_112 = D.41534_111->channel;
  switch_channel_clear_flag (D.41535_112, 111);
  D.41534_113 = smh_90->session;
  D.41535_114 = D.41534_113->channel;
  switch_channel_clear_flag (D.41535_114, 109);

<bb 15>:
  if (is_outbound_89 != 0)
    goto <bb 18>;
  else
    goto <bb 16>;

<bb 16>:
  D.41512_115 = session_72(D)->channel;
  D.41544_116 = switch_channel_test_flag (D.41512_115, 84);
  if (D.41544_116 != 0)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:
  D.41512_117 = session_72(D)->channel;
  D.41546_118 = switch_channel_test_flag (D.41512_117, 112);
  if (D.41546_118 != 0)
    goto <bb 18>;
  else
    goto <bb 27>;

<bb 18>:
  D.41512_119 = session_72(D)->channel;
  D.41547_120 = switch_channel_test_flag (D.41512_119, 106);
  if (D.41547_120 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  D.41512_121 = session_72(D)->channel;
  D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);
  D.41551_123 = switch_true (D.41550_122);
  if (D.41551_123 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41512_124 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_124, 106, 1);
  D.41512_125 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_125, 108, 1);
  D.41522_126 = smh_90->mparams;
  D.41522_126->rtcp_audio_interval_msec = "5000";
  D.41522_127 = smh_90->mparams;
  D.41522_127->rtcp_video_interval_msec = "5000";

<bb 21>:
  D.41554_128 = switch_rtp_has_dtls ();
  if (D.41554_128 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.41557_129 = dtls_ok (session_72(D));
  if (D.41557_129 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.41512_130 = session_72(D)->channel;
  D.41562_131 = switch_channel_test_flag (D.41512_130, 106);
  if (D.41562_131 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;

<bb 24>:
  D.41534_132 = smh_90->session;
  D.41535_133 = D.41534_132->channel;
  D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);
  D.41565_135 = switch_true (D.41564_134);
  if (D.41565_135 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.41534_136 = smh_90->session;
  D.41535_137 = D.41534_136->channel;
  switch_channel_set_flag_value (D.41535_137, 109, 1);
  D.41534_138 = smh_90->session;
  D.41535_139 = D.41534_138->channel;
  switch_channel_set_flag_value (D.41535_139, 92, 1);
  generate_local_fingerprint (smh_90, 0);

<bb 26>:
  switch_core_session_parse_crypto_prefs (session_72(D));
  switch_core_session_check_outgoing_crypto (session_72(D));

<bb 27>:
  D.41566_140 = a_engine_91->cur_payload_map;
  fmtp_out_141 = D.41566_140->fmtp_out;
  # DEBUG fmtp_out => fmtp_out_141
  D.41522_142 = smh_90->mparams;
  username_143 = D.41522_142->sdp_username;
  # DEBUG username => username_143
  buf_144 = calloc (1, 65536);
  # DEBUG buf => buf_144
  if (buf_144 == 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);

<bb 29>:
  switch_core_media_check_dtmf_type (session_72(D));
  D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41572_145 != 0)
    goto <bb 34>;
  else
    goto <bb 30>;

<bb 30>:
  D.41512_146 = session_72(D)->channel;
  val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);
  # DEBUG val => val_147
  if (val_147 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.41575_148 = switch_true (val_147);
  if (D.41575_148 != 0)
    goto <bb 34>;
  else
    goto <bb 32>;

<bb 32>:
  D.41512_149 = session_72(D)->channel;
  val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);
  # DEBUG val => val_150
  if (val_150 != 0B)
    goto <bb 33>;
  else
    goto <bb 35>;

<bb 33>:
  D.41577_151 = switch_true (val_150);
  if (D.41577_151 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  use_cng_152 = 0;
  # DEBUG use_cng => use_cng_152
  D.41522_153 = smh_90->mparams;
  D.41522_153->cng_pt = 0;

<bb 35>:
  # use_cng_17 = PHI <use_cng_71(32), use_cng_71(33), use_cng_152(34)>
  # DEBUG use_cng => use_cng_17
  D.41578_154 = smh_90->payload_space;
  if (D.41578_154 == 0)
    goto <bb 36>;
  else
    goto <bb 62>;

<bb 36>:
  D.41512_155 = session_72(D)->channel;
  D.41581_156 = switch_channel_test_flag (D.41512_155, 106);
  if (D.41581_156 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  smh_90->payload_space = 102;
  goto <bb 39>;

<bb 38>:
  smh_90->payload_space = 98;

<bb 39>:
  i_157 = 0;
  # DEBUG i => i_157
  goto <bb 41>;

<bb 40>:
  D.41585_160 = smh_90->codecs[i_36];
  D.41586_161 = D.41585_160->ianacode;
  smh_90->ianacodes[i_36] = D.41586_161;
  i_162 = i_36 + 1;
  # DEBUG i => i_162

<bb 41>:
  # i_36 = PHI <i_157(39), i_162(40)>
  # DEBUG i => i_36
  D.41522_158 = smh_90->mparams;
  D.41587_159 = D.41522_158->num_codecs;
  if (D.41587_159 > i_36)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 42>:
  if (sdp_type_163(D) == 0)
    goto <bb 43>;
  else
    goto <bb 62>;

<bb 43>:
  orig_session = 0B;
  switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);
  i_164 = 0;
  # DEBUG i => i_164
  goto <bb 59>;

<bb 44>:
  imp_167 = smh_90->codecs[i_37];
  # DEBUG imp => imp_167
  orig_pt = 0;
  orig_fmtp = 0B;
  D.41590_168 = smh_90->ianacodes[i_37];
  if (D.41590_168 > 64)
    goto <bb 45>;
  else
    goto <bb 58>;

<bb 45>:
  D.41522_169 = smh_90->mparams;
  D.41593_170 = D.41522_169->dtmf_type;
  if (D.41593_170 == 0)
    goto <bb 46>;
  else
    goto <bb 49>;

<bb 46>:
  D.41522_171 = smh_90->mparams;
  D.41596_172 = D.41522_171->te;
  if (D.41596_172 > 95)
    goto <bb 47>;
  else
    goto <bb 49>;

<bb 47>:
  D.41522_173 = smh_90->mparams;
  D.41596_174 = D.41522_173->te;
  D.41599_175 = (int) D.41596_174;
  D.41578_176 = smh_90->payload_space;
  if (D.41599_175 == D.41578_176)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  D.41578_177 = smh_90->payload_space;
  D.41602_178 = D.41578_177 + 1;
  smh_90->payload_space = D.41602_178;

<bb 49>:
  D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41603_179 == 0)
    goto <bb 50>;
  else
    goto <bb 53>;

<bb 50>:
  D.41522_180 = smh_90->mparams;
  D.41606_181 = D.41522_180->cng_pt;
  D.41607_182 = D.41606_181 != 0;
  D.41608_183 = use_cng_17 != 0;
  D.41609_184 = D.41607_182 && D.41608_183;
  if (D.41609_184 != 0)
    goto <bb 51>;
  else
    goto <bb 53>;

<bb 51>:
  D.41522_185 = smh_90->mparams;
  D.41606_186 = D.41522_185->cng_pt;
  D.41612_187 = (int) D.41606_186;
  D.41578_188 = smh_90->payload_space;
  if (D.41612_187 == D.41578_188)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  D.41578_189 = smh_90->payload_space;
  D.41602_190 = D.41578_189 + 1;
  smh_90->payload_space = D.41602_190;

<bb 53>:
  orig_session.25_191 = orig_session;
  if (orig_session.25_191 != 0B)
    goto <bb 54>;
  else
    goto <bb 57>;

<bb 54>:
  orig_session.25_192 = orig_session;
  D.41619_193 = imp_167->codec_type;
  D.41620_194 = D.41619_193 != 0;
  D.41621_195 = imp_167->iananame;
  D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);
  if (D.41622_196 == 0)
    goto <bb 55>;
  else
    goto <bb 57>;

<bb 55>:
  orig_pt.26_197 = orig_pt;
  smh_90->ianacodes[i_37] = orig_pt.26_197;
  orig_fmtp.27_198 = orig_fmtp;
  if (orig_fmtp.27_198 != 0B)
    goto <bb 56>;
  else
    goto <bb 58>;

<bb 56>:
  orig_fmtp.27_199 = orig_fmtp;
  D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);
  smh_90->fmtps[i_37] = D.41628_200;
  goto <bb 58>;

<bb 57>:
  D.41578_201 = smh_90->payload_space;
  D.41629_202 = (unsigned char) D.41578_201;
  smh_90->ianacodes[i_37] = D.41629_202;
  D.41602_203 = D.41578_201 + 1;
  smh_90->payload_space = D.41602_203;

<bb 58>:
  D.41619_204 = imp_167->codec_type;
  D.41620_205 = D.41619_204 != 0;
  D.41621_206 = imp_167->iananame;
  D.41590_207 = smh_90->ianacodes[i_37];
  D.41630_208 = (uint32_t) D.41590_207;
  D.41631_209 = imp_167->samples_per_second;
  D.41632_210 = imp_167->microseconds_per_packet;
  D.41633_211 = D.41632_210 / 1000;
  D.41634_212 = (uint32_t) D.41633_211;
  switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);
  i_213 = i_37 + 1;
  # DEBUG i => i_213

<bb 59>:
  # i_37 = PHI <i_164(43), i_213(58)>
  # DEBUG i => i_37
  D.41522_165 = smh_90->mparams;
  D.41587_166 = D.41522_165->num_codecs;
  if (D.41587_166 > i_37)
    goto <bb 44>;
  else
    goto <bb 60>;

<bb 60>:
  orig_session.25_214 = orig_session;
  if (orig_session.25_214 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  orig_session.25_215 = orig_session;
  switch_core_session_rwunlock (orig_session.25_215);

<bb 62>:
  if (fmtp_out_var_82 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  fmtp_out_216 = fmtp_out_var_82;
  # DEBUG fmtp_out => fmtp_out_216

<bb 64>:
  # fmtp_out_21 = PHI <fmtp_out_141(62), fmtp_out_216(63)>
  # DEBUG fmtp_out => fmtp_out_21
  D.41512_217 = session_72(D)->channel;
  val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);
  # DEBUG val => val_218
  if (val_218 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

<bb 65>:
  D.41642_219 = switch_true (val_218);
  if (D.41642_219 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.41512_220 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_220, 110, 1);

<bb 67>:
  D.41645_222 = force_221(D) == 0;
  D.41646_224 = ip_223(D) == 0B;
  D.41647_225 = D.41645_222 && D.41646_224;
  if (D.41647_225 != 0)
    goto <bb 68>;
  else
    goto <bb 76>;

<bb 68>:
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 71>;
  else
    goto <bb 69>;

<bb 69>:
  D.48132_1516 = *sr_226(D);
  if (D.48132_1516 == 0)
    goto <bb 71>;
  else
    goto <bb 70>;

<bb 70>:

<bb 71>:
  # D.48131_1517 = PHI <1(68), 1(69), 0(70)>
  D.48131_1558 = D.48131_1517;
  D.48131_227 = D.48131_1558;
  if (D.48131_227 != 0)
    goto <bb 72>;
  else
    goto <bb 76>;

<bb 72>:
  D.41512_228 = session_72(D)->channel;
  D.41653_229 = switch_channel_test_flag (D.41512_228, 15);
  if (D.41653_229 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;

<bb 73>:
  D.41512_230 = session_72(D)->channel;
  D.41655_231 = switch_channel_test_flag (D.41512_230, 29);
  if (D.41655_231 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;

<bb 74>:
  if (buf_144 != 0B)
    goto <bb 75>;
  else
    goto <bb 467>;

<bb 75>:
  free (buf_144);
  buf_232 = 0B;
  # DEBUG buf => buf_232
  goto <bb 467>;

<bb 76>:
  if (ip_223(D) == 0B)
    goto <bb 77>;
  else
    goto <bb 79>;

<bb 77>:
  ip_233 = a_engine_91->adv_sdp_ip;
  # DEBUG ip => ip_233
  if (ip_233 == 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  ip_234 = a_engine_91->proxy_sdp_ip;
  # DEBUG ip => ip_234

<bb 79>:
  # ip_1 = PHI <ip_223(D)(76), ip_233(77), ip_234(78)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.41512_235 = session_72(D)->channel;
  D.41664_236 = switch_channel_get_name (D.41512_235);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);
  if (buf_144 != 0B)
    goto <bb 81>;
  else
    goto <bb 467>;

<bb 81>:
  free (buf_144);
  buf_237 = 0B;
  # DEBUG buf => buf_237
  goto <bb 467>;

<bb 82>:
  if (port_238(D) == 0)
    goto <bb 83>;
  else
    goto <bb 85>;

<bb 83>:
  port_239 = a_engine_91->adv_sdp_port;
  # DEBUG port => port_239
  if (port_239 == 0)
    goto <bb 84>;
  else
    goto <bb 85>;

<bb 84>:
  port_240 = a_engine_91->proxy_sdp_port;
  # DEBUG port => port_240

<bb 85>:
  # port_2 = PHI <port_238(D)(82), port_239(83), port_240(84)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 86>;
  else
    goto <bb 88>;

<bb 86>:
  D.41512_241 = session_72(D)->channel;
  D.41673_242 = switch_channel_get_name (D.41512_241);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);
  if (buf_144 != 0B)
    goto <bb 87>;
  else
    goto <bb 467>;

<bb 87>:
  free (buf_144);
  buf_243 = 0B;
  # DEBUG buf => buf_243
  goto <bb 467>;

<bb 88>:
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 91>;
  else
    goto <bb 89>;

<bb 89>:
  D.48136_1518 = *sr_226(D);
  if (D.48136_1518 == 0)
    goto <bb 91>;
  else
    goto <bb 90>;

<bb 90>:

<bb 91>:
  # D.48135_1519 = PHI <1(88), 1(89), 0(90)>
  D.48135_1559 = D.48135_1519;
  D.48135_244 = D.48135_1559;
  if (D.48135_244 != 0)
    goto <bb 92>;
  else
    goto <bb 95>;

<bb 92>:
  D.41512_245 = session_72(D)->channel;
  var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);
  # DEBUG var_val => var_val_246
  if (var_val_246 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  sr_247 = var_val_246;
  # DEBUG sr => sr_247
  goto <bb 95>;

<bb 94>:
  sr_248 = "sendrecv";
  # DEBUG sr => sr_248

<bb 95>:
  # sr_3 = PHI <sr_226(D)(91), sr_247(93), sr_248(94)>
  # DEBUG sr => sr_3
  D.41682_249 = smh_90->owner_id;
  if (D.41682_249 == 0)
    goto <bb 96>;
  else
    goto <bb 97>;

<bb 96>:
  D.41685_250 = switch_epoch_time_now (0B);
  D.41686_251 = (unsigned int) D.41685_250;
  D.41687_252 = (unsigned int) port_2;
  D.41688_253 = D.41686_251 - D.41687_252;
  smh_90->owner_id = D.41688_253;

<bb 97>:
  D.41689_254 = smh_90->session_id;
  if (D.41689_254 == 0)
    goto <bb 98>;
  else
    goto <bb 99>;

<bb 98>:
  D.41682_255 = smh_90->owner_id;
  smh_90->session_id = D.41682_255;

<bb 99>:
  D.41512_256 = session_72(D)->channel;
  D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);
  D.41693_258 = switch_true (D.41692_257);
  if (D.41693_258 != 0)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  D.41512_259 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_259, 102, 1);

<bb 101>:
  D.41689_260 = smh_90->session_id;
  D.41696_261 = D.41689_260 + 1;
  smh_90->session_id = D.41696_261;
  D.41522_262 = smh_90->mparams;
  D.41699_263 = D.41522_262->ndlb;
  D.41700_264 = D.41699_263 & 16;
  if (D.41700_264 != 0)
    goto <bb 104>;
  else
    goto <bb 102>;

<bb 102>:
  D.41512_265 = session_72(D)->channel;
  var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);
  # DEBUG var_val => var_val_266
  if (var_val_266 != 0B)
    goto <bb 103>;
  else
    goto <bb 110>;

<bb 103>:
  D.41703_267 = switch_true (var_val_266);
  if (D.41703_267 != 0)
    goto <bb 104>;
  else
    goto <bb 110>;

<bb 104>:
  # DEBUG s => sr_3
  if (sr_3 == 0B)
    goto <bb 107>;
  else
    goto <bb 105>;

<bb 105>:
  D.48140_1520 = *sr_3;
  if (D.48140_1520 == 0)
    goto <bb 107>;
  else
    goto <bb 106>;

<bb 106>:

<bb 107>:
  # D.48139_1521 = PHI <1(104), 1(105), 0(106)>
  D.48139_1560 = D.48139_1521;
  D.48139_268 = D.48139_1560;
  if (D.48139_268 == 0)
    goto <bb 108>;
  else
    goto <bb 109>;

<bb 108>:
  switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);

<bb 109>:
  sr_269 = 0B;
  # DEBUG sr => sr_269

<bb 110>:
  # sr_4 = PHI <sr_3(102), sr_3(103), sr_269(109)>
  # DEBUG sr => sr_4
  D.41708_270 = __builtin_strchr (ip_1, 58);
  if (D.41708_270 != 0B)
    goto <bb 111>;
  else
    goto <bb 112>;

<bb 111>:
  family_271 = "IP6";
  goto <bb 113>;

<bb 112>:
  family_272 = "IP4";

<bb 113>:
  # family_59 = PHI <family_271(111), family_272(112)>
  family_273 = family_59;
  # DEBUG family => family_273
  D.41682_274 = smh_90->owner_id;
  D.41689_275 = smh_90->session_id;
  switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_273, ip_1, username_143, family_273, ip_1, &srbuf);
  D.41534_276 = smh_90->session;
  D.41535_277 = D.41534_276->channel;
  D.41712_278 = switch_channel_test_flag (D.41535_277, 108);
  if (D.41712_278 != 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  gen_ice (session_72(D), 0, ip_1, port_2);
  D.41715_279 = strlen (buf_144);
  D.41716_280 = buf_144 + D.41715_279;
  D.41717_281 = strlen (buf_144);
  D.41718_282 = 65536 - D.41717_281;
  D.41719_283 = smh_90->msid;
  switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);

<bb 115>:
  D.41720_284 = a_engine_91->codec_negotiated;
  if (D.41720_284 != 0)
    goto <bb 116>;
  else
    goto <bb 225>;

<bb 116>:
  D.41723_285 = strlen (buf_144);
  D.41724_286 = buf_144 + D.41723_285;
  D.41725_287 = strlen (buf_144);
  D.41726_288 = 65536 - D.41725_287;
  D.41727_289 = (int) port_2;
  D.41732_290 = a_engine_91->no_crypto;
  if (D.41732_290 == 0)
    goto <bb 117>;
  else
    goto <bb 120>;

<bb 117>:
  D.41512_291 = session_72(D)->channel;
  D.41734_292 = switch_channel_test_flag (D.41512_291, 109);
  if (D.41734_292 != 0)
    goto <bb 119>;
  else
    goto <bb 118>;

<bb 118>:
  D.41736_293 = a_engine_91->crypto_type;
  if (D.41736_293 != 9)
    goto <bb 119>;
  else
    goto <bb 120>;

<bb 119>:
  iftmp.29_294 = 1;
  goto <bb 121>;

<bb 120>:
  iftmp.29_295 = 0;

<bb 121>:
  # iftmp.29_60 = PHI <iftmp.29_294(119), iftmp.29_295(120)>
  D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);
  switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);
  D.41738_297 = strlen (buf_144);
  D.41739_298 = buf_144 + D.41738_297;
  D.41740_299 = strlen (buf_144);
  D.41741_300 = 65536 - D.41740_299;
  D.41566_301 = a_engine_91->cur_payload_map;
  D.41742_302 = D.41566_301->pt;
  D.41743_303 = (int) D.41742_302;
  switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);
  D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41744_304 != 0)
    goto <bb 122>;
  else
    goto <bb 129>;

<bb 122>:
  D.41747_305 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_305);
  pmap_306 = a_engine_91->cur_payload_map;
  # DEBUG pmap => pmap_306
  goto <bb 126>;

<bb 123>:
  D.41748_308 = pmap_34->pt;
  D.41566_309 = a_engine_91->cur_payload_map;
  D.41742_310 = D.41566_309->pt;
  if (D.41748_308 != D.41742_310)
    goto <bb 124>;
  else
    goto <bb 125>;

<bb 124>:
  D.41751_311 = strlen (buf_144);
  D.41752_312 = buf_144 + D.41751_311;
  D.41753_313 = strlen (buf_144);
  D.41754_314 = 65536 - D.41753_313;
  D.41748_315 = pmap_34->pt;
  D.41755_316 = (int) D.41748_315;
  switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);

<bb 125>:
  pmap_317 = pmap_34->next;
  # DEBUG pmap => pmap_317

<bb 126>:
  # pmap_34 = PHI <pmap_306(122), pmap_317(125)>
  # DEBUG pmap => pmap_34
  if (pmap_34 != 0B)
    goto <bb 127>;
  else
    goto <bb 128>;

<bb 127>:
  D.41757_307 = pmap_34->allocated;
  if (D.41757_307 != 0)
    goto <bb 123>;
  else
    goto <bb 128>;

<bb 128>:
  D.41747_318 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_318);

<bb 129>:
  D.41522_319 = smh_90->mparams;
  D.41593_320 = D.41522_319->dtmf_type;
  if (D.41593_320 == 0)
    goto <bb 132>;
  else
    goto <bb 130>;

<bb 130>:
  D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41761_321 != 0)
    goto <bb 132>;
  else
    goto <bb 131>;

<bb 131>:
  D.41512_322 = session_72(D)->channel;
  D.41763_323 = switch_channel_test_flag (D.41512_322, 93);
  if (D.41763_323 != 0)
    goto <bb 132>;
  else
    goto <bb 134>;

<bb 132>:
  D.41522_324 = smh_90->mparams;
  D.41596_325 = D.41522_324->te;
  if (D.41596_325 > 95)
    goto <bb 133>;
  else
    goto <bb 134>;

<bb 133>:
  D.41766_326 = strlen (buf_144);
  D.41767_327 = buf_144 + D.41766_326;
  D.41768_328 = strlen (buf_144);
  D.41769_329 = 65536 - D.41768_328;
  D.41522_330 = smh_90->mparams;
  D.41596_331 = D.41522_330->te;
  D.41599_332 = (int) D.41596_331;
  switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);

<bb 134>:
  D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41770_333 == 0)
    goto <bb 135>;
  else
    goto <bb 137>;

<bb 135>:
  D.41522_334 = smh_90->mparams;
  D.41606_335 = D.41522_334->cng_pt;
  D.41607_336 = D.41606_335 != 0;
  D.41608_337 = use_cng_17 != 0;
  D.41609_338 = D.41607_336 && D.41608_337;
  if (D.41609_338 != 0)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  D.41775_339 = strlen (buf_144);
  D.41776_340 = buf_144 + D.41775_339;
  D.41777_341 = strlen (buf_144);
  D.41778_342 = 65536 - D.41777_341;
  D.41522_343 = smh_90->mparams;
  D.41606_344 = D.41522_343->cng_pt;
  D.41612_345 = (int) D.41606_344;
  switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);

<bb 137>:
  D.41779_346 = strlen (buf_144);
  D.41780_347 = buf_144 + D.41779_346;
  D.41781_348 = strlen (buf_144);
  D.41782_349 = 65536 - D.41781_348;
  switch_snprintf (D.41780_347, D.41782_349, "\n");
  D.41566_350 = a_engine_91->cur_payload_map;
  rate_351 = D.41566_350->adv_rm_rate;
  # DEBUG rate => rate_351
  D.41566_352 = a_engine_91->cur_payload_map;
  D.41783_353 = D.41566_352->adv_channels;
  if (D.41783_353 == 0)
    goto <bb 138>;
  else
    goto <bb 139>;

<bb 138>:
  D.41566_354 = a_engine_91->cur_payload_map;
  D.41566_355 = a_engine_91->cur_payload_map;
  D.41786_356 = D.41566_355->rm_encoding;
  D.41787_357 = get_channels (D.41786_356, 1);
  D.41566_355->adv_channels = D.41787_357;

<bb 139>:
  D.41566_358 = a_engine_91->cur_payload_map;
  D.41783_359 = D.41566_358->adv_channels;
  if (D.41783_359 > 1)
    goto <bb 140>;
  else
    goto <bb 141>;

<bb 140>:
  D.41790_360 = strlen (buf_144);
  D.41791_361 = buf_144 + D.41790_360;
  D.41792_362 = strlen (buf_144);
  D.41793_363 = 65536 - D.41792_362;
  D.41566_364 = a_engine_91->cur_payload_map;
  D.41794_365 = D.41566_364->agreed_pt;
  D.41795_366 = (int) D.41794_365;
  D.41566_367 = a_engine_91->cur_payload_map;
  D.41786_368 = D.41566_367->rm_encoding;
  D.41566_369 = a_engine_91->cur_payload_map;
  D.41783_370 = D.41566_369->adv_channels;
  switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);
  goto <bb 142>;

<bb 141>:
  D.41797_371 = strlen (buf_144);
  D.41798_372 = buf_144 + D.41797_371;
  D.41799_373 = strlen (buf_144);
  D.41800_374 = 65536 - D.41799_373;
  D.41566_375 = a_engine_91->cur_payload_map;
  D.41794_376 = D.41566_375->agreed_pt;
  D.41795_377 = (int) D.41794_376;
  D.41566_378 = a_engine_91->cur_payload_map;
  D.41786_379 = D.41566_378->rm_encoding;
  switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);

<bb 142>:
  if (fmtp_out_21 != 0B)
    goto <bb 143>;
  else
    goto <bb 144>;

<bb 143>:
  D.41803_380 = strlen (buf_144);
  D.41804_381 = buf_144 + D.41803_380;
  D.41805_382 = strlen (buf_144);
  D.41806_383 = 65536 - D.41805_382;
  D.41566_384 = a_engine_91->cur_payload_map;
  D.41794_385 = D.41566_384->agreed_pt;
  D.41795_386 = (int) D.41794_385;
  switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);

<bb 144>:
  D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41807_387 != 0)
    goto <bb 145>;
  else
    goto <bb 152>;

<bb 145>:
  D.41747_388 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_388);
  pmap_389 = a_engine_91->cur_payload_map;
  # DEBUG pmap => pmap_389
  goto <bb 149>;

<bb 146>:
  D.41748_391 = pmap_35->pt;
  D.41566_392 = a_engine_91->cur_payload_map;
  D.41742_393 = D.41566_392->pt;
  if (D.41748_391 != D.41742_393)
    goto <bb 147>;
  else
    goto <bb 148>;

<bb 147>:
  D.41812_394 = strlen (buf_144);
  D.41813_395 = buf_144 + D.41812_394;
  D.41814_396 = strlen (buf_144);
  D.41815_397 = 65536 - D.41814_396;
  D.41748_398 = pmap_35->pt;
  D.41755_399 = (int) D.41748_398;
  D.41816_400 = pmap_35->iananame;
  D.41817_401 = pmap_35->rate;
  switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);

<bb 148>:
  pmap_402 = pmap_35->next;
  # DEBUG pmap => pmap_402

<bb 149>:
  # pmap_35 = PHI <pmap_389(145), pmap_402(148)>
  # DEBUG pmap => pmap_35
  if (pmap_35 != 0B)
    goto <bb 150>;
  else
    goto <bb 151>;

<bb 150>:
  D.41757_390 = pmap_35->allocated;
  if (D.41757_390 != 0)
    goto <bb 146>;
  else
    goto <bb 151>;

<bb 151>:
  D.41747_403 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_403);

<bb 152>:
  D.41819_404 = a_engine_91->read_codec.implementation;
  D.41820_405 = D.41819_404 != 0B;
  D.41821_406 = ptime_69 == 0;
  D.41822_407 = D.41820_405 && D.41821_406;
  if (D.41822_407 != 0)
    goto <bb 153>;
  else
    goto <bb 154>;

<bb 153>:
  D.41819_408 = a_engine_91->read_codec.implementation;
  D.41825_409 = D.41819_408->microseconds_per_packet;
  ptime_410 = D.41825_409 / 1000;
  # DEBUG ptime => ptime_410

<bb 154>:
  # ptime_5 = PHI <ptime_69(152), ptime_410(153)>
  # DEBUG ptime => ptime_5
  D.41522_411 = smh_90->mparams;
  D.41593_412 = D.41522_411->dtmf_type;
  if (D.41593_412 == 0)
    goto <bb 157>;
  else
    goto <bb 155>;

<bb 155>:
  D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41829_413 != 0)
    goto <bb 157>;
  else
    goto <bb 156>;

<bb 156>:
  D.41512_414 = session_72(D)->channel;
  D.41831_415 = switch_channel_test_flag (D.41512_414, 93);
  if (D.41831_415 != 0)
    goto <bb 157>;
  else
    goto <bb 161>;

<bb 157>:
  D.41522_416 = smh_90->mparams;
  D.41596_417 = D.41522_416->te;
  if (D.41596_417 > 95)
    goto <bb 158>;
  else
    goto <bb 161>;

<bb 158>:
  D.41512_418 = session_72(D)->channel;
  D.41834_419 = switch_channel_test_flag (D.41512_418, 106);
  if (D.41834_419 != 0)
    goto <bb 159>;
  else
    goto <bb 160>;

<bb 159>:
  D.41837_420 = strlen (buf_144);
  D.41838_421 = buf_144 + D.41837_420;
  D.41839_422 = strlen (buf_144);
  D.41840_423 = 65536 - D.41839_422;
  D.41522_424 = smh_90->mparams;
  D.41596_425 = D.41522_424->te;
  D.41599_426 = (int) D.41596_425;
  switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);
  goto <bb 161>;

<bb 160>:
  D.41842_427 = strlen (buf_144);
  D.41843_428 = buf_144 + D.41842_427;
  D.41844_429 = strlen (buf_144);
  D.41845_430 = 65536 - D.41844_429;
  D.41522_431 = smh_90->mparams;
  D.41596_432 = D.41522_431->te;
  D.41599_433 = (int) D.41596_432;
  D.41522_434 = smh_90->mparams;
  D.41596_435 = D.41522_434->te;
  D.41599_436 = (int) D.41596_435;
  switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);

<bb 161>:
  D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41846_437 != 0)
    goto <bb 162>;
  else
    goto <bb 163>;

<bb 162>:
  D.41849_438 = strlen (buf_144);
  D.41850_439 = buf_144 + D.41849_438;
  D.41851_440 = strlen (buf_144);
  D.41852_441 = 65536 - D.41851_440;
  switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");
  goto <bb 166>;

<bb 163>:
  D.41522_442 = smh_90->mparams;
  D.41606_443 = D.41522_442->cng_pt;
  D.41607_444 = D.41606_443 != 0;
  D.41608_445 = use_cng_17 != 0;
  D.41609_446 = D.41607_444 && D.41608_445;
  if (D.41609_446 != 0)
    goto <bb 164>;
  else
    goto <bb 166>;

<bb 164>:
  D.41856_447 = strlen (buf_144);
  D.41857_448 = buf_144 + D.41856_447;
  D.41858_449 = strlen (buf_144);
  D.41859_450 = 65536 - D.41858_449;
  D.41522_451 = smh_90->mparams;
  D.41606_452 = D.41522_451->cng_pt;
  D.41612_453 = (int) D.41606_452;
  switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);
  D.41720_454 = a_engine_91->codec_negotiated;
  if (D.41720_454 == 0)
    goto <bb 165>;
  else
    goto <bb 166>;

<bb 165>:
  D.41522_455 = smh_90->mparams;
  D.41522_455->cng_pt = 0;

<bb 166>:
  if (append_audio_78 != 0B)
    goto <bb 167>;
  else
    goto <bb 174>;

<bb 167>:
  D.41864_456 = strlen (buf_144);
  D.41865_457 = buf_144 + D.41864_456;
  D.41866_458 = strlen (buf_144);
  D.41867_459 = 65536 - D.41866_458;
  D.41870_460 = *append_audio_78;
  if (D.41870_460 != 0)
    goto <bb 168>;
  else
    goto <bb 169>;

<bb 168>:
  D.41873_461 = strlen (append_audio_78);
  D.41874_462 = D.41873_461 + -1;
  append_audio_463 = append_audio_78 + D.41874_462;
  goto <bb 170>;

<bb 169>:
  append_audio_464 = append_audio_78;

<bb 170>:
  # append_audio_62 = PHI <append_audio_463(168), append_audio_464(169)>
  D.41876_465 = *append_audio_62;
  if (D.41876_465 == 10)
    goto <bb 171>;
  else
    goto <bb 172>;

<bb 171>:
  iftmp.30_466 = "";
  goto <bb 173>;

<bb 172>:
  iftmp.30_467 = "\n";

<bb 173>:
  # iftmp.30_61 = PHI <iftmp.30_466(171), iftmp.30_467(172)>
  switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);

<bb 174>:
  if (ptime_5 != 0)
    goto <bb 175>;
  else
    goto <bb 176>;

<bb 175>:
  D.41882_468 = strlen (buf_144);
  D.41883_469 = buf_144 + D.41882_468;
  D.41884_470 = strlen (buf_144);
  D.41885_471 = 65536 - D.41884_470;
  switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);

<bb 176>:
  if (local_sdp_audio_zrtp_hash_83 != 0B)
    goto <bb 177>;
  else
    goto <bb 178>;

<bb 177>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);
  D.41888_472 = strlen (buf_144);
  D.41889_473 = buf_144 + D.41888_472;
  D.41890_474 = strlen (buf_144);
  D.41891_475 = 65536 - D.41890_474;
  switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

<bb 178>:
  # DEBUG s => sr_4
  if (sr_4 == 0B)
    goto <bb 181>;
  else
    goto <bb 179>;

<bb 179>:
  D.48144_1522 = *sr_4;
  if (D.48144_1522 == 0)
    goto <bb 181>;
  else
    goto <bb 180>;

<bb 180>:

<bb 181>:
  # D.48143_1523 = PHI <1(178), 1(179), 0(180)>
  D.48143_1561 = D.48143_1523;
  D.48143_476 = D.48143_1561;
  if (D.48143_476 == 0)
    goto <bb 182>;
  else
    goto <bb 183>;

<bb 182>:
  D.41895_477 = strlen (buf_144);
  D.41896_478 = buf_144 + D.41895_477;
  D.41897_479 = strlen (buf_144);
  D.41898_480 = 65536 - D.41897_479;
  switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);

<bb 183>:
  D.41899_481 = a_engine_91->local_dtls_fingerprint.type;
  # DEBUG s => D.41899_481
  if (D.41899_481 == 0B)
    goto <bb 186>;
  else
    goto <bb 184>;

<bb 184>:
  D.48148_1524 = MEM[(const char *)D.41899_481];
  if (D.48148_1524 == 0)
    goto <bb 186>;
  else
    goto <bb 185>;

<bb 185>:

<bb 186>:
  # D.48147_1525 = PHI <1(183), 1(184), 0(185)>
  D.48147_1562 = D.48147_1525;
  D.48147_482 = D.48147_1562;
  if (D.48147_482 == 0)
    goto <bb 187>;
  else
    goto <bb 188>;

<bb 187>:
  D.41903_483 = strlen (buf_144);
  D.41904_484 = buf_144 + D.41903_483;
  D.41905_485 = strlen (buf_144);
  D.41906_486 = 65536 - D.41905_485;
  D.41899_487 = a_engine_91->local_dtls_fingerprint.type;
  D.41907_488 = &a_engine_91->local_dtls_fingerprint.str;
  switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);

<bb 188>:
  D.41522_489 = smh_90->mparams;
  D.41523_490 = D.41522_489->rtcp_audio_interval_msec;
  if (D.41523_490 != 0B)
    goto <bb 189>;
  else
    goto <bb 192>;

<bb 189>:
  D.41910_491 = a_engine_91->rtcp_mux;
  if (D.41910_491 > 0)
    goto <bb 190>;
  else
    goto <bb 191>;

<bb 190>:
  D.41913_492 = strlen (buf_144);
  D.41914_493 = buf_144 + D.41913_492;
  D.41915_494 = strlen (buf_144);
  D.41916_495 = 65536 - D.41915_494;
  switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");
  D.41917_496 = strlen (buf_144);
  D.41918_497 = buf_144 + D.41917_496;
  D.41919_498 = strlen (buf_144);
  D.41920_499 = 65536 - D.41919_498;
  D.41727_500 = (int) port_2;
  switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_273, ip_1);
  goto <bb 192>;

<bb 191>:
  D.41922_501 = strlen (buf_144);
  D.41923_502 = buf_144 + D.41922_501;
  D.41924_503 = strlen (buf_144);
  D.41925_504 = 65536 - D.41924_503;
  D.41727_505 = (int) port_2;
  D.41926_506 = D.41727_505 + 1;
  switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_273, ip_1);

<bb 192>:
  D.41927_507 = a_engine_91->ice_out.cands[0][0].ready;
  if (D.41927_507 != 0)
    goto <bb 193>;
  else
    goto <bb 217>;

<bb 193>:
  tmp1 = "";
  tmp2 = "";
  c1_508 = 659136;
  # DEBUG c1 => c1_508
  c2_509 = 659134;
  # DEBUG c2 => c2_509
  c3_510 = 659126;
  # DEBUG c3 => c3_510
  c4_511 = 659124;
  # DEBUG c4 => c4_511
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  ice_out_512 = &a_engine_91->ice_out;
  # DEBUG ice_out => ice_out_512
  D.41930_513 = strlen (buf_144);
  D.41931_514 = buf_144 + D.41930_513;
  D.41932_515 = strlen (buf_144);
  D.41933_516 = 65536 - D.41932_515;
  D.41934_517 = a_engine_91->ssrc;
  D.41935_518 = smh_90->cname;
  switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);
  D.41936_519 = strlen (buf_144);
  D.41937_520 = buf_144 + D.41936_519;
  D.41938_521 = strlen (buf_144);
  D.41939_522 = 65536 - D.41938_521;
  D.41934_523 = a_engine_91->ssrc;
  D.41719_524 = smh_90->msid;
  switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);
  D.41940_525 = strlen (buf_144);
  D.41941_526 = buf_144 + D.41940_525;
  D.41942_527 = strlen (buf_144);
  D.41943_528 = 65536 - D.41942_527;
  D.41934_529 = a_engine_91->ssrc;
  D.41719_530 = smh_90->msid;
  switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);
  D.41944_531 = strlen (buf_144);
  D.41945_532 = buf_144 + D.41944_531;
  D.41946_533 = strlen (buf_144);
  D.41947_534 = 65536 - D.41946_533;
  D.41934_535 = a_engine_91->ssrc;
  D.41719_536 = smh_90->msid;
  switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);
  D.41948_537 = strlen (buf_144);
  D.41949_538 = buf_144 + D.41948_537;
  D.41950_539 = strlen (buf_144);
  D.41951_540 = 65536 - D.41950_539;
  D.41952_541 = ice_out_512->ufrag;
  switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);
  D.41953_542 = strlen (buf_144);
  D.41954_543 = buf_144 + D.41953_542;
  D.41955_544 = strlen (buf_144);
  D.41956_545 = 65536 - D.41955_544;
  D.41957_546 = ice_out_512->pwd;
  switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);
  D.41958_547 = strlen (buf_144);
  D.41959_548 = buf_144 + D.41958_547;
  D.41960_549 = strlen (buf_144);
  D.41961_550 = 65536 - D.41960_549;
  D.41962_551 = ice_out_512->cands[0][0].transport;
  D.41963_552 = ice_out_512->cands[0][0].con_addr;
  D.41964_553 = ice_out_512->cands[0][0].con_port;
  D.41965_554 = (int) D.41964_553;
  switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, c1_508, D.41963_552, D.41965_554);
  D.41966_555 = a_engine_91->local_sdp_ip;
  # DEBUG s => D.41966_555
  if (D.41966_555 == 0B)
    goto <bb 196>;
  else
    goto <bb 194>;

<bb 194>:
  D.48152_1526 = MEM[(const char *)D.41966_555];
  if (D.48152_1526 == 0)
    goto <bb 196>;
  else
    goto <bb 195>;

<bb 195>:

<bb 196>:
  # D.48151_1527 = PHI <1(193), 1(194), 0(195)>
  D.48151_1563 = D.48151_1527;
  D.48151_556 = D.48151_1563;
  if (D.48151_556 == 0)
    goto <bb 197>;
  else
    goto <bb 204>;

<bb 197>:
  D.41963_557 = ice_out_512->cands[0][0].con_addr;
  # DEBUG s => D.41963_557
  if (D.41963_557 == 0B)
    goto <bb 200>;
  else
    goto <bb 198>;

<bb 198>:
  D.48156_1528 = MEM[(const char *)D.41963_557];
  if (D.48156_1528 == 0)
    goto <bb 200>;
  else
    goto <bb 199>;

<bb 199>:

<bb 200>:
  # D.48155_1529 = PHI <1(197), 1(198), 0(199)>
  D.48155_1564 = D.48155_1529;
  D.48155_558 = D.48155_1564;
  if (D.48155_558 == 0)
    goto <bb 201>;
  else
    goto <bb 204>;

<bb 201>:
  D.41966_559 = a_engine_91->local_sdp_ip;
  D.41963_560 = ice_out_512->cands[0][0].con_addr;
  D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);
  if (D.39598_561 != 0)
    goto <bb 202>;
  else
    goto <bb 204>;

<bb 202>:
  D.41975_562 = a_engine_91->local_sdp_port;
  D.41964_563 = ice_out_512->cands[0][0].con_port;
  if (D.41975_562 != D.41964_563)
    goto <bb 203>;
  else
    goto <bb 204>;

<bb 203>:
  D.41978_564 = strlen (buf_144);
  D.41979_565 = buf_144 + D.41978_564;
  D.41980_566 = strlen (buf_144);
  D.41981_567 = 65536 - D.41980_566;
  D.41962_568 = ice_out_512->cands[0][0].transport;
  D.41963_569 = ice_out_512->cands[0][0].con_addr;
  D.41964_570 = ice_out_512->cands[0][0].con_port;
  D.41965_571 = (int) D.41964_570;
  D.41966_572 = a_engine_91->local_sdp_ip;
  D.41975_573 = a_engine_91->local_sdp_port;
  D.41982_574 = (int) D.41975_573;
  switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, c3_510, D.41963_569, D.41965_571, D.41966_572, D.41982_574);

<bb 204>:
  D.41910_575 = a_engine_91->rtcp_mux;
  D.41985_576 = D.41910_575 <= 0;
  D.41986_577 = is_outbound_89 != 0;
  D.41987_578 = D.41985_576 || D.41986_577;
  if (D.41987_578 != 0)
    goto <bb 206>;
  else
    goto <bb 205>;

<bb 205>:
  D.41512_579 = session_72(D)->channel;
  D.41989_580 = switch_channel_test_flag (D.41512_579, 84);
  if (D.41989_580 != 0)
    goto <bb 206>;
  else
    goto <bb 217>;

<bb 206>:
  D.41990_581 = strlen (buf_144);
  D.41991_582 = buf_144 + D.41990_581;
  D.41992_583 = strlen (buf_144);
  D.41993_584 = 65536 - D.41992_583;
  D.41962_585 = ice_out_512->cands[0][0].transport;
  D.41963_586 = ice_out_512->cands[0][0].con_addr;
  D.41964_587 = ice_out_512->cands[0][0].con_port;
  D.41965_588 = (int) D.41964_587;
  D.41910_589 = a_engine_91->rtcp_mux;
  D.41994_590 = D.41910_589 <= 0;
  D.41995_591 = D.41965_588 + D.41994_590;
  switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, c2_509, D.41963_586, D.41995_591);
  D.41966_592 = a_engine_91->local_sdp_ip;
  # DEBUG s => D.41966_592
  if (D.41966_592 == 0B)
    goto <bb 209>;
  else
    goto <bb 207>;

<bb 207>:
  D.48160_1530 = MEM[(const char *)D.41966_592];
  if (D.48160_1530 == 0)
    goto <bb 209>;
  else
    goto <bb 208>;

<bb 208>:

<bb 209>:
  # D.48159_1531 = PHI <1(206), 1(207), 0(208)>
  D.48159_1565 = D.48159_1531;
  D.48159_593 = D.48159_1565;
  if (D.48159_593 == 0)
    goto <bb 210>;
  else
    goto <bb 217>;

<bb 210>:
  D.41963_594 = ice_out_512->cands[0][0].con_addr;
  # DEBUG s => D.41963_594
  if (D.41963_594 == 0B)
    goto <bb 213>;
  else
    goto <bb 211>;

<bb 211>:
  D.48164_1532 = MEM[(const char *)D.41963_594];
  if (D.48164_1532 == 0)
    goto <bb 213>;
  else
    goto <bb 212>;

<bb 212>:

<bb 213>:
  # D.48163_1533 = PHI <1(210), 1(211), 0(212)>
  D.48163_1566 = D.48163_1533;
  D.48163_595 = D.48163_1566;
  if (D.48163_595 == 0)
    goto <bb 214>;
  else
    goto <bb 217>;

<bb 214>:
  D.41966_596 = a_engine_91->local_sdp_ip;
  D.41963_597 = ice_out_512->cands[0][0].con_addr;
  D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);
  if (D.39607_598 != 0)
    goto <bb 215>;
  else
    goto <bb 217>;

<bb 215>:
  D.41975_599 = a_engine_91->local_sdp_port;
  D.41964_600 = ice_out_512->cands[0][0].con_port;
  if (D.41975_599 != D.41964_600)
    goto <bb 216>;
  else
    goto <bb 217>;

<bb 216>:
  D.42006_601 = strlen (buf_144);
  D.42007_602 = buf_144 + D.42006_601;
  D.42008_603 = strlen (buf_144);
  D.42009_604 = 65536 - D.42008_603;
  D.41962_605 = ice_out_512->cands[0][0].transport;
  D.41963_606 = ice_out_512->cands[0][0].con_addr;
  D.41964_607 = ice_out_512->cands[0][0].con_port;
  D.41965_608 = (int) D.41964_607;
  D.41910_609 = a_engine_91->rtcp_mux;
  D.41994_610 = D.41910_609 <= 0;
  D.41995_611 = D.41965_608 + D.41994_610;
  D.41966_612 = a_engine_91->local_sdp_ip;
  D.41975_613 = a_engine_91->local_sdp_port;
  D.41982_614 = (int) D.41975_613;
  D.41910_615 = a_engine_91->rtcp_mux;
  D.41994_616 = D.41910_615 <= 0;
  D.42010_617 = D.41982_614 + D.41994_616;
  switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, c4_511, D.41963_606, D.41995_611, D.41966_612, D.42010_617);

<bb 217>:
  D.41736_618 = a_engine_91->crypto_type;
  if (D.41736_618 != 9)
    goto <bb 218>;
  else
    goto <bb 263>;

<bb 218>:
  D.41512_619 = session_72(D)->channel;
  D.42013_620 = switch_channel_test_flag (D.41512_619, 109);
  if (D.42013_620 == 0)
    goto <bb 219>;
  else
    goto <bb 263>;

<bb 219>:
  D.41736_621 = a_engine_91->crypto_type;
  D.42016_622 = a_engine_91->ssec[D.41736_621].local_crypto_key;
  # DEBUG s => D.42016_622
  if (D.42016_622 == 0B)
    goto <bb 222>;
  else
    goto <bb 220>;

<bb 220>:
  D.48168_1534 = MEM[(const char *)D.42016_622];
  if (D.48168_1534 == 0)
    goto <bb 222>;
  else
    goto <bb 221>;

<bb 221>:

<bb 222>:
  # D.48167_1535 = PHI <1(219), 1(220), 0(221)>
  D.48167_1567 = D.48167_1535;
  D.48167_623 = D.48167_1567;
  if (D.48167_623 == 0)
    goto <bb 223>;
  else
    goto <bb 263>;

<bb 223>:
  D.41512_624 = session_72(D)->channel;
  D.42020_625 = switch_channel_test_flag (D.41512_624, 92);
  if (D.42020_625 != 0)
    goto <bb 224>;
  else
    goto <bb 263>;

<bb 224>:
  D.42023_626 = strlen (buf_144);
  D.42024_627 = buf_144 + D.42023_626;
  D.42025_628 = strlen (buf_144);
  D.42026_629 = 65536 - D.42025_628;
  D.41736_630 = a_engine_91->crypto_type;
  D.42016_631 = a_engine_91->ssec[D.41736_630].local_crypto_key;
  switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);
  goto <bb 263>;

<bb 225>:
  D.41522_632 = smh_90->mparams;
  D.41587_633 = D.41522_632->num_codecs;
  if (D.41587_633 != 0)
    goto <bb 226>;
  else
    goto <bb 263>;

<bb 226>:
  cur_ptime_634 = 0;
  # DEBUG cur_ptime => cur_ptime_634
  this_ptime_635 = 0;
  # DEBUG this_ptime => this_ptime_635
  cng_type_636 = 0;
  # DEBUG cng_type => cng_type_636
  D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.42030_637 == 0)
    goto <bb 227>;
  else
    goto <bb 230>;

<bb 227>:
  D.41522_638 = smh_90->mparams;
  D.41606_639 = D.41522_638->cng_pt;
  D.41607_640 = D.41606_639 != 0;
  D.41608_641 = use_cng_17 != 0;
  D.41609_642 = D.41607_640 && D.41608_641;
  if (D.41609_642 != 0)
    goto <bb 228>;
  else
    goto <bb 230>;

<bb 228>:
  D.41522_643 = smh_90->mparams;
  D.41606_644 = D.41522_643->cng_pt;
  cng_type_645 = (int) D.41606_644;
  # DEBUG cng_type => cng_type_645
  D.41720_646 = a_engine_91->codec_negotiated;
  if (D.41720_646 == 0)
    goto <bb 229>;
  else
    goto <bb 230>;

<bb 229>:
  D.41522_647 = smh_90->mparams;
  D.41522_647->cng_pt = 0;

<bb 230>:
  # cng_type_42 = PHI <cng_type_636(226), cng_type_636(227), cng_type_645(228), cng_type_645(229)>
  # DEBUG cng_type => cng_type_42
  D.41512_648 = session_72(D)->channel;
  mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);
  # DEBUG mult => mult_649
  D.41512_650 = session_72(D)->channel;
  D.42039_651 = switch_channel_test_flag (D.41512_650, 106);
  if (D.42039_651 != 0)
    goto <bb 233>;
  else
    goto <bb 231>;

<bb 231>:
  if (mult_649 != 0B)
    goto <bb 232>;
  else
    goto <bb 244>;

<bb 232>:
  D.42042_652 = switch_false (mult_649);
  if (D.42042_652 != 0)
    goto <bb 233>;
  else
    goto <bb 244>;

<bb 233>:
  bp_689 = buf_144;
  # DEBUG bp => bp_689
  D.41512_690 = session_72(D)->channel;
  D.42046_691 = switch_channel_test_flag (D.41512_690, 106);
  if (D.42046_691 == 0)
    goto <bb 234>;
  else
    goto <bb 236>;

<bb 234>:
  D.41512_692 = session_72(D)->channel;
  D.42048_693 = switch_channel_test_flag (D.41512_692, 109);
  if (D.42048_693 == 0)
    goto <bb 235>;
  else
    goto <bb 236>;

<bb 235>:
  both_694 = 1;
  goto <bb 237>;

<bb 236>:
  both_695 = 0;

<bb 237>:
  # both_63 = PHI <both_694(235), both_695(236)>
  both_696 = both_63;
  # DEBUG both => both_696
  D.41732_697 = a_engine_91->no_crypto;
  if (D.41732_697 == 0)
    goto <bb 238>;
  else
    goto <bb 239>;

<bb 238>:
  D.41512_698 = session_72(D)->channel;
  D.42054_699 = switch_channel_test_flag (D.41512_698, 92);
  if (D.42054_699 != 0)
    goto <bb 240>;
  else
    goto <bb 239>;

<bb 239>:
  D.41512_700 = session_72(D)->channel;
  D.42055_701 = switch_channel_test_flag (D.41512_700, 109);
  if (D.42055_701 != 0)
    goto <bb 240>;
  else
    goto <bb 242>;

<bb 240>:
  map.33_702 = map;
  generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_273, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);
  D.42057_703 = strlen (buf_144);
  bp_704 = buf_144 + D.42057_703;
  # DEBUG bp => bp_704
  D.42058_705 = smh_90->crypto_mode;
  if (D.42058_705 == 1)
    goto <bb 241>;
  else
    goto <bb 242>;

<bb 241>:
  both_706 = 0;
  # DEBUG both => both_706

<bb 242>:
  # bp_43 = PHI <bp_689(239), bp_704(240), bp_704(241)>
  # both_44 = PHI <both_696(239), both_696(240), both_706(241)>
  # DEBUG both => both_44
  # DEBUG bp => bp_43
  if (both_44 != 0)
    goto <bb 243>;
  else
    goto <bb 263>;

<bb 243>:
  D.42063_707 = strlen (buf_144);
  D.42064_708 = 65536 - D.42063_707;
  map.33_709 = map;
  generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_273, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);
  goto <bb 263>;

<bb 244>:
  i_653 = 0;
  # DEBUG i => i_653
  goto <bb 262>;

<bb 245>:
  imp_656 = smh_90->codecs[i_38];
  # DEBUG imp => imp_656
  D.42065_657 = imp_656->codec_type;
  if (D.42065_657 != 0)
    goto <bb 246>;
  else
    goto <bb 247>;

<bb 246>:
  // predicted unlikely by continue predictor.
  goto <bb 261>;

<bb 247>:
  D.42068_658 = imp_656->microseconds_per_packet;
  this_ptime_659 = D.42068_658 / 1000;
  # DEBUG this_ptime => this_ptime_659
  D.42071_660 = imp_656->iananame;
  D.42072_661 = strcasecmp (D.42071_660, "ilbc");
  if (D.42072_661 == 0)
    goto <bb 249>;
  else
    goto <bb 248>;

<bb 248>:
  D.42071_662 = imp_656->iananame;
  D.42074_663 = strcasecmp (D.42071_662, "isac");
  if (D.42074_663 == 0)
    goto <bb 249>;
  else
    goto <bb 250>;

<bb 249>:
  this_ptime_664 = 20;
  # DEBUG this_ptime => this_ptime_664

<bb 250>:
  # this_ptime_41 = PHI <this_ptime_659(248), this_ptime_664(249)>
  # DEBUG this_ptime => this_ptime_41
  if (cur_ptime_40 != this_ptime_41)
    goto <bb 251>;
  else
    goto <bb 261>;

<bb 251>:
  bp_665 = buf_144;
  # DEBUG bp => bp_665
  both_666 = 1;
  # DEBUG both => both_666
  cur_ptime_667 = this_ptime_41;
  # DEBUG cur_ptime => cur_ptime_667
  D.41732_668 = a_engine_91->no_crypto;
  if (D.41732_668 == 0)
    goto <bb 252>;
  else
    goto <bb 253>;

<bb 252>:
  D.41512_669 = session_72(D)->channel;
  D.42081_670 = switch_channel_test_flag (D.41512_669, 92);
  if (D.42081_670 != 0)
    goto <bb 254>;
  else
    goto <bb 253>;

<bb 253>:
  D.41512_671 = session_72(D)->channel;
  D.42082_672 = switch_channel_test_flag (D.41512_671, 109);
  if (D.42082_672 != 0)
    goto <bb 254>;
  else
    goto <bb 256>;

<bb 254>:
  D.42083_673 = strlen (buf_144);
  D.42084_674 = 65536 - D.42083_673;
  map.33_675 = map;
  generate_m.isra.4 (session_72(D), bp_665, D.42084_674, port_2, family_273, ip_1, cur_ptime_667, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);
  D.42085_676 = strlen (buf_144);
  bp_677 = buf_144 + D.42085_676;
  # DEBUG bp => bp_677
  D.42058_678 = smh_90->crypto_mode;
  if (D.42058_678 == 1)
    goto <bb 255>;
  else
    goto <bb 256>;

<bb 255>:
  both_679 = 0;
  # DEBUG both => both_679

<bb 256>:
  # bp_45 = PHI <bp_665(253), bp_677(254), bp_677(255)>
  # both_46 = PHI <both_666(253), both_666(254), both_679(255)>
  # DEBUG both => both_46
  # DEBUG bp => bp_45
  D.41512_680 = session_72(D)->channel;
  D.42090_681 = switch_channel_test_flag (D.41512_680, 106);
  if (D.42090_681 != 0)
    goto <bb 258>;
  else
    goto <bb 257>;

<bb 257>:
  D.41512_682 = session_72(D)->channel;
  D.42092_683 = switch_channel_test_flag (D.41512_682, 109);
  if (D.42092_683 != 0)
    goto <bb 258>;
  else
    goto <bb 259>;

<bb 258>:
  both_684 = 0;
  # DEBUG both => both_684

<bb 259>:
  # both_47 = PHI <both_46(257), both_684(258)>
  # DEBUG both => both_47
  if (both_47 != 0)
    goto <bb 260>;
  else
    goto <bb 261>;

<bb 260>:
  D.42095_685 = strlen (buf_144);
  D.42096_686 = 65536 - D.42095_685;
  map.33_687 = map;
  generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_273, ip_1, cur_ptime_667, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);

<bb 261>:
  # cur_ptime_39 = PHI <cur_ptime_40(246), cur_ptime_40(250), cur_ptime_667(259), cur_ptime_667(260)>
  # DEBUG cur_ptime => cur_ptime_39
  i_688 = i_38 + 1;
  # DEBUG i => i_688

<bb 262>:
  # i_38 = PHI <i_653(244), i_688(261)>
  # cur_ptime_40 = PHI <cur_ptime_634(244), cur_ptime_39(261)>
  # DEBUG cur_ptime => cur_ptime_40
  # DEBUG i => i_38
  D.41522_654 = smh_90->mparams;
  D.41587_655 = D.41522_654->num_codecs;
  if (D.41587_655 > i_38)
    goto <bb 245>;
  else
    goto <bb 263>;

<bb 263>:
  # ptime_6 = PHI <ptime_5(218), ptime_69(225), ptime_69(243), ptime_69(262), ptime_5(217), ptime_5(224), ptime_5(223), ptime_5(222), ptime_69(242)>
  # rate_11 = PHI <rate_351(218), rate_70(225), rate_70(243), rate_70(262), rate_351(217), rate_351(224), rate_351(223), rate_351(222), rate_70(242)>
  # DEBUG rate => rate_11
  # DEBUG ptime => ptime_6
  D.41512_710 = session_72(D)->channel;
  D.42097_711 = switch_channel_test_flag (D.41512_710, 98);
  if (D.42097_711 != 0)
    goto <bb 264>;
  else
    goto <bb 461>;

<bb 264>:
  D.41512_712 = session_72(D)->channel;
  D.42100_713 = switch_channel_direction (D.41512_712);
  if (D.42100_713 == 0)
    goto <bb 265>;
  else
    goto <bb 267>;

<bb 265>:
  D.41534_714 = smh_90->session;
  D.41535_715 = D.41534_714->channel;
  D.42103_716 = switch_channel_test_flag (D.41535_715, 109);
  if (D.42103_716 != 0)
    goto <bb 266>;
  else
    goto <bb 267>;

<bb 266>:
  v_engine_92->no_crypto = 1;

<bb 267>:
  D.42106_717 = v_engine_92->local_sdp_port;
  if (D.42106_717 == 0)
    goto <bb 268>;
  else
    goto <bb 269>;

<bb 268>:
  switch_core_media_choose_port (session_72(D), 1, 0);

<bb 269>:
  D.41512_718 = session_72(D)->channel;
  D.42109_719 = switch_channel_test_flag (D.41512_718, 106);
  if (D.42109_719 != 0)
    goto <bb 270>;
  else
    goto <bb 271>;

<bb 270>:
  switch_media_handle_set_media_flag (smh_90, 16);

<bb 271>:
  D.42112_720 = v_engine_92->adv_sdp_port;
  v_port_721 = (uint32_t) D.42112_720;
  # DEBUG v_port => v_port_721
  if (v_port_721 != 0)
    goto <bb 272>;
  else
    goto <bb 461>;

<bb 272>:
  loops_722 = 0;
  # DEBUG loops => loops_722
  goto <bb 460>;

<bb 273>:
  D.41534_723 = smh_90->session;
  D.41535_724 = D.41534_723->channel;
  D.42115_725 = switch_channel_test_flag (D.41535_724, 108);
  if (D.42115_725 != 0)
    goto <bb 274>;
  else
    goto <bb 275>;

<bb 274>:
  D.42118_726 = (short unsigned int) v_port_721;
  gen_ice (session_72(D), 1, ip_1, D.42118_726);

<bb 275>:
  D.42119_727 = strlen (buf_144);
  D.42120_728 = buf_144 + D.42119_727;
  D.42121_729 = strlen (buf_144);
  D.42122_730 = 65536 - D.42121_729;
  if (loops_48 == 0)
    goto <bb 276>;
  else
    goto <bb 278>;

<bb 276>:
  D.41512_731 = session_72(D)->channel;
  D.42129_732 = switch_channel_test_flag (D.41512_731, 92);
  if (D.42129_732 != 0)
    goto <bb 277>;
  else
    goto <bb 278>;

<bb 277>:
  D.41512_733 = session_72(D)->channel;
  D.42131_734 = switch_channel_direction (D.41512_733);
  if (D.42131_734 == 1)
    goto <bb 280>;
  else
    goto <bb 278>;

<bb 278>:
  D.41736_735 = a_engine_91->crypto_type;
  if (D.41736_735 != 9)
    goto <bb 280>;
  else
    goto <bb 279>;

<bb 279>:
  D.41512_736 = session_72(D)->channel;
  D.42133_737 = switch_channel_test_flag (D.41512_736, 109);
  if (D.42133_737 != 0)
    goto <bb 280>;
  else
    goto <bb 281>;

<bb 280>:
  iftmp.34_739 = 1;
  goto <bb 282>;

<bb 281>:
  iftmp.34_738 = 0;

<bb 282>:
  # iftmp.34_64 = PHI <iftmp.34_739(280), iftmp.34_738(281)>
  D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);
  switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);
  D.42135_741 = v_engine_92->codec_negotiated;
  if (D.42135_741 != 0)
    goto <bb 283>;
  else
    goto <bb 291>;

<bb 283>:
  switch_core_media_set_video_codec (session_72(D), 0);
  D.42138_742 = strlen (buf_144);
  D.42139_743 = buf_144 + D.42138_742;
  D.42140_744 = strlen (buf_144);
  D.42141_745 = 65536 - D.42140_744;
  D.42142_746 = v_engine_92->cur_payload_map;
  D.42143_747 = D.42142_746->agreed_pt;
  D.42144_748 = (int) D.42143_747;
  switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);
  D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42145_749 != 0)
    goto <bb 284>;
  else
    goto <bb 306>;

<bb 284>:
  D.41747_750 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_750);
  pmap_751 = v_engine_92->cur_payload_map;
  # DEBUG pmap => pmap_751
  goto <bb 288>;

<bb 285>:
  D.42148_753 = pmap_49->pt;
  D.42142_754 = v_engine_92->cur_payload_map;
  D.42149_755 = D.42142_754->pt;
  if (D.42148_753 != D.42149_755)
    goto <bb 286>;
  else
    goto <bb 287>;

<bb 286>:
  D.42152_756 = strlen (buf_144);
  D.42153_757 = buf_144 + D.42152_756;
  D.42154_758 = strlen (buf_144);
  D.42155_759 = 65536 - D.42154_758;
  D.42148_760 = pmap_49->pt;
  D.42156_761 = (int) D.42148_760;
  switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);

<bb 287>:
  pmap_762 = pmap_49->next;
  # DEBUG pmap => pmap_762

<bb 288>:
  # pmap_49 = PHI <pmap_751(284), pmap_762(287)>
  # DEBUG pmap => pmap_49
  if (pmap_49 != 0B)
    goto <bb 289>;
  else
    goto <bb 290>;

<bb 289>:
  D.42158_752 = pmap_49->allocated;
  if (D.42158_752 != 0)
    goto <bb 285>;
  else
    goto <bb 290>;

<bb 290>:
  D.41747_763 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_763);
  goto <bb 306>;

<bb 291>:
  D.41522_764 = smh_90->mparams;
  D.41587_765 = D.41522_764->num_codecs;
  if (D.41587_765 != 0)
    goto <bb 292>;
  else
    goto <bb 306>;

<bb 292>:
  already_did = {};
  i_766 = 0;
  # DEBUG i => i_766
  goto <bb 305>;

<bb 293>:
  imp_769 = smh_90->codecs[i_50];
  # DEBUG imp => imp_769
  D.42162_770 = imp_769->codec_type;
  if (D.42162_770 != 1)
    goto <bb 294>;
  else
    goto <bb 295>;

<bb 294>:
  // predicted unlikely by continue predictor.
  goto <bb 304>;

<bb 295>:
  D.41512_771 = session_72(D)->channel;
  D.42165_772 = switch_channel_direction (D.41512_771);
  if (D.42165_772 == 0)
    goto <bb 296>;
  else
    goto <bb 298>;

<bb 296>:
  D.41512_773 = session_72(D)->channel;
  D.42168_774 = switch_channel_test_flag (D.41512_773, 114);
  if (D.42168_774 != 0)
    goto <bb 297>;
  else
    goto <bb 298>;

<bb 297>:
  // predicted unlikely by continue predictor.
  goto <bb 304>;

<bb 298>:
  D.42171_775 = smh_90->ianacodes[i_50];
  D.42172_776 = (signed char) D.42171_775;
  if (D.42172_776 >= 0)
    goto <bb 299>;
  else
    goto <bb 302>;

<bb 299>:
  D.42171_777 = smh_90->ianacodes[i_50];
  D.42175_778 = (int) D.42171_777;
  D.42176_779 = already_did[D.42175_778];
  if (D.42176_779 != 0)
    goto <bb 300>;
  else
    goto <bb 301>;

<bb 300>:
  // predicted unlikely by continue predictor.
  goto <bb 304>;

<bb 301>:
  D.42171_780 = smh_90->ianacodes[i_50];
  D.42175_781 = (int) D.42171_780;
  already_did[D.42175_781] = 1;

<bb 302>:
  D.42179_782 = strlen (buf_144);
  D.42180_783 = buf_144 + D.42179_782;
  D.42181_784 = strlen (buf_144);
  D.42182_785 = 65536 - D.42181_784;
  D.42171_786 = smh_90->ianacodes[i_50];
  D.42175_787 = (int) D.42171_786;
  switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);
  if (ptime_8 == 0)
    goto <bb 303>;
  else
    goto <bb 304>;

<bb 303>:
  D.42185_788 = imp_769->microseconds_per_packet;
  ptime_789 = D.42185_788 / 1000;
  # DEBUG ptime => ptime_789

<bb 304>:
  # ptime_7 = PHI <ptime_8(294), ptime_8(297), ptime_8(300), ptime_8(302), ptime_789(303)>
  # DEBUG ptime => ptime_7
  i_790 = i_50 + 1;
  # DEBUG i => i_790

<bb 305>:
  # ptime_8 = PHI <ptime_10(292), ptime_7(304)>
  # i_50 = PHI <i_766(292), i_790(304)>
  # DEBUG i => i_50
  # DEBUG ptime => ptime_8
  D.41522_767 = smh_90->mparams;
  D.41587_768 = D.41522_767->num_codecs;
  if (D.41587_768 > i_50)
    goto <bb 293>;
  else
    goto <bb 306>;

<bb 306>:
  # ptime_9 = PHI <ptime_10(290), ptime_10(291), ptime_8(305), ptime_10(283)>
  # DEBUG ptime => ptime_9
  D.42186_791 = strlen (buf_144);
  D.42187_792 = buf_144 + D.42186_791;
  D.42188_793 = strlen (buf_144);
  D.42189_794 = 65536 - D.42188_793;
  switch_snprintf (D.42187_792, D.42189_794, "\n");
  D.42135_795 = v_engine_92->codec_negotiated;
  if (D.42135_795 != 0)
    goto <bb 307>;
  else
    goto <bb 338>;

<bb 307>:
  D.42142_796 = v_engine_92->cur_payload_map;
  D.42192_797 = D.42142_796->rm_encoding;
  D.42193_798 = strcasecmp (D.42192_797, "VP8");
  if (D.42193_798 == 0)
    goto <bb 308>;
  else
    goto <bb 309>;

<bb 308>:
  D.42142_799 = v_engine_92->cur_payload_map;
  D.42149_800 = D.42142_799->pt;
  vp8_801 = (int) D.42149_800;
  # DEBUG vp8 => vp8_801

<bb 309>:
  # vp8_22 = PHI <vp8_27(307), vp8_801(308)>
  # DEBUG vp8 => vp8_22
  D.42142_802 = v_engine_92->cur_payload_map;
  D.42192_803 = D.42142_802->rm_encoding;
  D.42196_804 = strcasecmp (D.42192_803, "red");
  if (D.42196_804 == 0)
    goto <bb 310>;
  else
    goto <bb 311>;

<bb 310>:
  D.42142_805 = v_engine_92->cur_payload_map;
  D.42149_806 = D.42142_805->pt;
  red_807 = (int) D.42149_806;
  # DEBUG red => red_807

<bb 311>:
  # red_28 = PHI <red_33(309), red_807(310)>
  # DEBUG red => red_28
  D.42142_808 = v_engine_92->cur_payload_map;
  rate_809 = D.42142_808->rm_rate;
  # DEBUG rate => rate_809
  D.42199_810 = strlen (buf_144);
  D.42200_811 = buf_144 + D.42199_810;
  D.42201_812 = strlen (buf_144);
  D.42202_813 = 65536 - D.42201_812;
  D.42142_814 = v_engine_92->cur_payload_map;
  D.42149_815 = D.42142_814->pt;
  D.42203_816 = (int) D.42149_815;
  D.42142_817 = v_engine_92->cur_payload_map;
  D.42192_818 = D.42142_817->rm_encoding;
  D.42142_819 = v_engine_92->cur_payload_map;
  D.42204_820 = D.42142_819->rm_rate;
  switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);
  D.41512_821 = session_72(D)->channel;
  D.42205_822 = switch_channel_test_flag (D.41512_821, 84);
  if (D.42205_822 != 0)
    goto <bb 312>;
  else
    goto <bb 313>;

<bb 312>:
  D.42142_823 = v_engine_92->cur_payload_map;
  pass_fmtp_824 = D.42142_823->rm_fmtp;
  # DEBUG pass_fmtp => pass_fmtp_824
  goto <bb 319>;

<bb 313>:
  pass_fmtp_825 = 0B;
  # DEBUG pass_fmtp => pass_fmtp_825
  D.41512_826 = session_72(D)->channel;
  D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);
  if (D.42209_827 != 0B)
    goto <bb 314>;
  else
    goto <bb 316>;

<bb 314>:
  D.41512_828 = session_72(D)->channel;
  of_829 = switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");
  # DEBUG of => of_829
  if (of_829 != 0B)
    goto <bb 315>;
  else
    goto <bb 316>;

<bb 315>:
  pass_fmtp_830 = of_829;
  # DEBUG pass_fmtp => pass_fmtp_830

<bb 316>:
  if (ov_fmtp_76 != 0B)
    goto <bb 317>;
  else
    goto <bb 318>;

<bb 317>:
  pass_fmtp_831 = ov_fmtp_76;
  # DEBUG pass_fmtp => pass_fmtp_831
  goto <bb 319>;

<bb 318>:
  D.41512_832 = session_72(D)->channel;
  pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_833

<bb 319>:
  # pass_fmtp_18 = PHI <pass_fmtp_824(312), pass_fmtp_831(317), pass_fmtp_833(318)>
  # DEBUG pass_fmtp => pass_fmtp_18
  if (pass_fmtp_18 != 0B)
    goto <bb 320>;
  else
    goto <bb 321>;

<bb 320>:
  D.42219_834 = strlen (buf_144);
  D.42220_835 = buf_144 + D.42219_834;
  D.42221_836 = strlen (buf_144);
  D.42222_837 = 65536 - D.42221_836;
  D.42142_838 = v_engine_92->cur_payload_map;
  D.42149_839 = D.42142_838->pt;
  D.42203_840 = (int) D.42149_839;
  switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);

<bb 321>:
  D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42223_841 != 0)
    goto <bb 322>;
  else
    goto <bb 330>;

<bb 322>:
  D.41747_842 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_842);
  pmap_843 = v_engine_92->cur_payload_map;
  # DEBUG pmap => pmap_843
  goto <bb 327>;

<bb 323>:
  D.42226_845 = pmap_51->pt;
  D.42142_846 = v_engine_92->cur_payload_map;
  D.42149_847 = D.42142_846->pt;
  if (D.42226_845 != D.42149_847)
    goto <bb 324>;
  else
    goto <bb 326>;

<bb 324>:
  D.42229_848 = pmap_51->negotiated;
  if (D.42229_848 != 0)
    goto <bb 325>;
  else
    goto <bb 326>;

<bb 325>:
  D.42232_849 = strlen (buf_144);
  D.42233_850 = buf_144 + D.42232_849;
  D.42234_851 = strlen (buf_144);
  D.42235_852 = 65536 - D.42234_851;
  D.42226_853 = pmap_51->pt;
  D.42236_854 = (int) D.42226_853;
  D.42237_855 = pmap_51->iananame;
  D.42238_856 = pmap_51->rate;
  switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);

<bb 326>:
  pmap_857 = pmap_51->next;
  # DEBUG pmap => pmap_857

<bb 327>:
  # pmap_51 = PHI <pmap_843(322), pmap_857(326)>
  # DEBUG pmap => pmap_51
  if (pmap_51 != 0B)
    goto <bb 328>;
  else
    goto <bb 329>;

<bb 328>:
  D.42240_844 = pmap_51->allocated;
  if (D.42240_844 != 0)
    goto <bb 323>;
  else
    goto <bb 329>;

<bb 329>:
  D.41747_858 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_858);

<bb 330>:
  if (append_video_80 != 0B)
    goto <bb 331>;
  else
    goto <bb 385>;

<bb 331>:
  D.42243_859 = strlen (buf_144);
  D.42244_860 = buf_144 + D.42243_859;
  D.42245_861 = strlen (buf_144);
  D.42246_862 = 65536 - D.42245_861;
  D.42249_863 = *append_video_80;
  if (D.42249_863 != 0)
    goto <bb 332>;
  else
    goto <bb 333>;

<bb 332>:
  D.42252_864 = strlen (append_video_80);
  D.42253_865 = D.42252_864 + -1;
  append_video_866 = append_video_80 + D.42253_865;
  goto <bb 334>;

<bb 333>:
  append_video_867 = append_video_80;

<bb 334>:
  # append_video_66 = PHI <append_video_866(332), append_video_867(333)>
  D.42255_868 = *append_video_66;
  if (D.42255_868 == 10)
    goto <bb 335>;
  else
    goto <bb 336>;

<bb 335>:
  iftmp.35_869 = "";
  goto <bb 337>;

<bb 336>:
  iftmp.35_870 = "\n";

<bb 337>:
  # iftmp.35_65 = PHI <iftmp.35_869(335), iftmp.35_870(336)>
  switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);
  goto <bb 385>;

<bb 338>:
  D.41522_871 = smh_90->mparams;
  D.41587_872 = D.41522_871->num_codecs;
  if (D.41587_872 != 0)
    goto <bb 339>;
  else
    goto <bb 385>;

<bb 339>:
  already_did = {};
  i_873 = 0;
  # DEBUG i => i_873
  goto <bb 384>;

<bb 340>:
  imp_876 = smh_90->codecs[i_52];
  # DEBUG imp => imp_876
  fmtp_877 = 0B;
  # DEBUG fmtp => fmtp_877
  D.42262_878 = smh_90->ianacodes[i_52];
  ianacode_879 = (uint32_t) D.42262_878;
  # DEBUG ianacode => ianacode_879
  D.42263_880 = imp_876->codec_type;
  if (D.42263_880 != 1)
    goto <bb 341>;
  else
    goto <bb 342>;

<bb 341>:
  // predicted unlikely by continue predictor.
  goto <bb 383>;

<bb 342>:
  D.41512_881 = session_72(D)->channel;
  D.42266_882 = switch_channel_direction (D.41512_881);
  if (D.42266_882 == 0)
    goto <bb 343>;
  else
    goto <bb 345>;

<bb 343>:
  D.41512_883 = session_72(D)->channel;
  D.42269_884 = switch_channel_test_flag (D.41512_883, 114);
  if (D.42269_884 != 0)
    goto <bb 344>;
  else
    goto <bb 345>;

<bb 344>:
  // predicted unlikely by continue predictor.
  goto <bb 383>;

<bb 345>:
  if (ianacode_879 <= 127)
    goto <bb 346>;
  else
    goto <bb 349>;

<bb 346>:
  D.42274_885 = already_did[ianacode_879];
  if (D.42274_885 != 0)
    goto <bb 347>;
  else
    goto <bb 348>;

<bb 347>:
  // predicted unlikely by continue predictor.
  goto <bb 383>;

<bb 348>:
  already_did[ianacode_879] = 1;

<bb 349>:
  if (rate_14 == 0)
    goto <bb 350>;
  else
    goto <bb 351>;

<bb 350>:
  rate_886 = imp_876->samples_per_second;
  # DEBUG rate => rate_886

<bb 351>:
  # rate_12 = PHI <rate_14(349), rate_886(350)>
  # DEBUG rate => rate_12
  D.42279_887 = imp_876->iananame;
  D.42280_888 = imp_876->number_of_channels;
  D.42281_889 = (int) D.42280_888;
  channels_890 = get_channels (D.42279_887, D.42281_889);
  # DEBUG channels => channels_890
  D.42279_891 = imp_876->iananame;
  D.42282_892 = strcasecmp (D.42279_891, "VP8");
  if (D.42282_892 == 0)
    goto <bb 352>;
  else
    goto <bb 353>;

<bb 352>:
  vp8_893 = (int) ianacode_879;
  # DEBUG vp8 => vp8_893

<bb 353>:
  # vp8_23 = PHI <vp8_25(351), vp8_893(352)>
  # DEBUG vp8 => vp8_23
  D.42279_894 = imp_876->iananame;
  D.42285_895 = strcasecmp (D.42279_894, "red");
  if (D.42285_895 == 0)
    goto <bb 354>;
  else
    goto <bb 355>;

<bb 354>:
  red_896 = (int) ianacode_879;
  # DEBUG red => red_896

<bb 355>:
  # red_29 = PHI <red_31(353), red_896(354)>
  # DEBUG red => red_29
  if (channels_890 > 1)
    goto <bb 356>;
  else
    goto <bb 357>;

<bb 356>:
  D.42290_897 = strlen (buf_144);
  D.42291_898 = buf_144 + D.42290_897;
  D.42292_899 = strlen (buf_144);
  D.42293_900 = 65536 - D.42292_899;
  D.42279_901 = imp_876->iananame;
  D.42294_902 = imp_876->samples_per_second;
  switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);
  goto <bb 358>;

<bb 357>:
  D.42296_903 = strlen (buf_144);
  D.42297_904 = buf_144 + D.42296_903;
  D.42298_905 = strlen (buf_144);
  D.42299_906 = 65536 - D.42298_905;
  D.42279_907 = imp_876->iananame;
  D.42294_908 = imp_876->samples_per_second;
  switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);

<bb 358>:
  # DEBUG s => ov_fmtp_76
  if (ov_fmtp_76 == 0B)
    goto <bb 361>;
  else
    goto <bb 359>;

<bb 359>:
  D.48172_1536 = *ov_fmtp_76;
  if (D.48172_1536 == 0)
    goto <bb 361>;
  else
    goto <bb 360>;

<bb 360>:

<bb 361>:
  # D.48171_1537 = PHI <1(358), 1(359), 0(360)>
  D.48171_1568 = D.48171_1537;
  D.48171_909 = D.48171_1568;
  if (D.48171_909 == 0)
    goto <bb 362>;
  else
    goto <bb 363>;

<bb 362>:
  fmtp_910 = ov_fmtp_76;
  # DEBUG fmtp => fmtp_910
  goto <bb 377>;

<bb 363>:
  map.33_911 = map;
  if (map.33_911 != 0B)
    goto <bb 364>;
  else
    goto <bb 365>;

<bb 364>:
  map.33_912 = map;
  D.42279_913 = imp_876->iananame;
  fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);
  # DEBUG fmtp => fmtp_914

<bb 365>:
  # fmtp_53 = PHI <fmtp_877(363), fmtp_914(364)>
  # DEBUG fmtp => fmtp_53
  D.42306_915 = smh_90->fmtps[i_52];
  if (D.42306_915 != 0B)
    goto <bb 366>;
  else
    goto <bb 367>;

<bb 366>:
  fmtp_916 = smh_90->fmtps[i_52];
  # DEBUG fmtp => fmtp_916

<bb 367>:
  # fmtp_54 = PHI <fmtp_53(365), fmtp_916(366)>
  # DEBUG fmtp => fmtp_54
  # DEBUG s => fmtp_54
  if (fmtp_54 == 0B)
    goto <bb 370>;
  else
    goto <bb 368>;

<bb 368>:
  D.48176_1538 = MEM[(const char *)fmtp_54];
  if (D.48176_1538 == 0)
    goto <bb 370>;
  else
    goto <bb 369>;

<bb 369>:

<bb 370>:
  # D.48175_1539 = PHI <1(367), 1(368), 0(369)>
  D.48175_1569 = D.48175_1539;
  D.48175_917 = D.48175_1569;
  if (D.48175_917 != 0)
    goto <bb 371>;
  else
    goto <bb 372>;

<bb 371>:
  fmtp_918 = imp_876->fmtp;
  # DEBUG fmtp => fmtp_918

<bb 372>:
  # fmtp_55 = PHI <fmtp_54(370), fmtp_918(371)>
  # DEBUG fmtp => fmtp_55
  # DEBUG s => fmtp_55
  if (fmtp_55 == 0B)
    goto <bb 375>;
  else
    goto <bb 373>;

<bb 373>:
  D.48180_1540 = MEM[(const char *)fmtp_55];
  if (D.48180_1540 == 0)
    goto <bb 375>;
  else
    goto <bb 374>;

<bb 374>:

<bb 375>:
  # D.48179_1541 = PHI <1(372), 1(373), 0(374)>
  D.48179_1570 = D.48179_1541;
  D.48179_919 = D.48179_1570;
  if (D.48179_919 != 0)
    goto <bb 376>;
  else
    goto <bb 377>;

<bb 376>:
  fmtp_920 = pass_fmtp_20;
  # DEBUG fmtp => fmtp_920

<bb 377>:
  # fmtp_56 = PHI <fmtp_910(362), fmtp_55(375), fmtp_920(376)>
  # DEBUG fmtp => fmtp_56
  # DEBUG s => fmtp_56
  if (fmtp_56 == 0B)
    goto <bb 380>;
  else
    goto <bb 378>;

<bb 378>:
  D.48184_1542 = MEM[(const char *)fmtp_56];
  if (D.48184_1542 == 0)
    goto <bb 380>;
  else
    goto <bb 379>;

<bb 379>:

<bb 380>:
  # D.48183_1543 = PHI <1(377), 1(378), 0(379)>
  D.48183_1571 = D.48183_1543;
  D.48183_921 = D.48183_1571;
  if (D.48183_921 == 0)
    goto <bb 381>;
  else
    goto <bb 383>;

<bb 381>:
  D.42318_922 = strcasecmp (fmtp_56, "_blank_");
  if (D.42318_922 != 0)
    goto <bb 382>;
  else
    goto <bb 383>;

<bb 382>:
  D.42321_923 = strlen (buf_144);
  D.42322_924 = buf_144 + D.42321_923;
  D.42323_925 = strlen (buf_144);
  D.42324_926 = 65536 - D.42323_925;
  switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);

<bb 383>:
  # rate_13 = PHI <rate_14(341), rate_14(344), rate_14(347), rate_12(380), rate_12(381), rate_12(382)>
  # vp8_24 = PHI <vp8_25(341), vp8_25(344), vp8_25(347), vp8_23(380), vp8_23(381), vp8_23(382)>
  # red_30 = PHI <red_31(341), red_31(344), red_31(347), red_29(380), red_29(381), red_29(382)>
  # DEBUG red => red_30
  # DEBUG vp8 => vp8_24
  # DEBUG rate => rate_13
  i_927 = i_52 + 1;
  # DEBUG i => i_927

<bb 384>:
  # rate_14 = PHI <rate_16(339), rate_13(383)>
  # vp8_25 = PHI <vp8_27(339), vp8_24(383)>
  # red_31 = PHI <red_33(339), red_30(383)>
  # i_52 = PHI <i_873(339), i_927(383)>
  # DEBUG i => i_52
  # DEBUG red => red_31
  # DEBUG vp8 => vp8_25
  # DEBUG rate => rate_14
  D.41522_874 = smh_90->mparams;
  D.41587_875 = D.41522_874->num_codecs;
  if (D.41587_875 > i_52)
    goto <bb 340>;
  else
    goto <bb 385>;

<bb 385>:
  # rate_15 = PHI <rate_809(337), rate_16(338), rate_14(384), rate_809(330)>
  # pass_fmtp_19 = PHI <pass_fmtp_18(337), pass_fmtp_20(338), pass_fmtp_20(384), pass_fmtp_18(330)>
  # vp8_26 = PHI <vp8_22(337), vp8_27(338), vp8_25(384), vp8_22(330)>
  # red_32 = PHI <red_28(337), red_33(338), red_31(384), red_28(330)>
  # DEBUG red => red_32
  # DEBUG vp8 => vp8_26
  # DEBUG pass_fmtp => pass_fmtp_19
  # DEBUG rate => rate_15
  if (is_outbound_89 != 0)
    goto <bb 387>;
  else
    goto <bb 386>;

<bb 386>:
  D.41512_928 = session_72(D)->channel;
  D.42328_929 = switch_channel_test_flag (D.41512_928, 84);
  if (D.42328_929 != 0)
    goto <bb 387>;
  else
    goto <bb 389>;

<bb 387>:
  D.41534_930 = smh_90->session;
  D.41535_931 = D.41534_930->channel;
  D.42329_932 = switch_channel_test_flag (D.41535_931, 109);
  if (D.42329_932 != 0)
    goto <bb 388>;
  else
    goto <bb 389>;

<bb 388>:
  generate_local_fingerprint (smh_90, 1);

<bb 389>:
  D.42332_933 = v_engine_92->local_dtls_fingerprint.type;
  # DEBUG s => D.42332_933
  if (D.42332_933 == 0B)
    goto <bb 392>;
  else
    goto <bb 390>;

<bb 390>:
  D.48188_1544 = MEM[(const char *)D.42332_933];
  if (D.48188_1544 == 0)
    goto <bb 392>;
  else
    goto <bb 391>;

<bb 391>:

<bb 392>:
  # D.48187_1545 = PHI <1(389), 1(390), 0(391)>
  D.48187_1572 = D.48187_1545;
  D.48187_934 = D.48187_1572;
  if (D.48187_934 == 0)
    goto <bb 393>;
  else
    goto <bb 394>;

<bb 393>:
  D.42336_935 = strlen (buf_144);
  D.42337_936 = buf_144 + D.42336_935;
  D.42338_937 = strlen (buf_144);
  D.42339_938 = 65536 - D.42338_937;
  D.42332_939 = v_engine_92->local_dtls_fingerprint.type;
  D.42340_940 = &v_engine_92->local_dtls_fingerprint.str;
  switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);

<bb 394>:
  D.41522_941 = smh_90->mparams;
  D.41527_942 = D.41522_941->rtcp_video_interval_msec;
  if (D.41527_942 != 0B)
    goto <bb 395>;
  else
    goto <bb 398>;

<bb 395>:
  D.42343_943 = v_engine_92->rtcp_mux;
  if (D.42343_943 > 0)
    goto <bb 396>;
  else
    goto <bb 397>;

<bb 396>:
  D.42346_944 = strlen (buf_144);
  D.42347_945 = buf_144 + D.42346_944;
  D.42348_946 = strlen (buf_144);
  D.42349_947 = 65536 - D.42348_946;
  switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");
  D.42350_948 = strlen (buf_144);
  D.42351_949 = buf_144 + D.42350_948;
  D.42352_950 = strlen (buf_144);
  D.42353_951 = 65536 - D.42352_950;
  switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_273, ip_1);
  goto <bb 398>;

<bb 397>:
  D.42355_952 = strlen (buf_144);
  D.42356_953 = buf_144 + D.42355_952;
  D.42357_954 = strlen (buf_144);
  D.42358_955 = 65536 - D.42357_954;
  D.42359_956 = v_port_721 + 1;
  switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_273, ip_1);

<bb 398>:
  D.42360_957 = BIT_FIELD_REF <*v_engine_92, 16, 91280>;
  D.42361_958 = D.42360_957 & 65535;
  if (D.42361_958 != 0)
    goto <bb 399>;
  else
    goto <bb 406>;

<bb 399>:
  D.42364_959 = strlen (buf_144);
  D.42365_960 = buf_144 + D.42364_959;
  D.42366_961 = strlen (buf_144);
  D.42367_962 = 65536 - D.42366_961;
  D.42369_963 = v_engine_92->fir;
  if (D.42369_963 != 0)
    goto <bb 400>;
  else
    goto <bb 401>;

<bb 400>:
  iftmp.37_964 = "fir ";
  goto <bb 402>;

<bb 401>:
  iftmp.37_965 = "";

<bb 402>:
  # iftmp.37_67 = PHI <iftmp.37_964(400), iftmp.37_965(401)>
  D.42374_966 = v_engine_92->pli;
  if (D.42374_966 != 0)
    goto <bb 403>;
  else
    goto <bb 404>;

<bb 403>:
  iftmp.38_967 = "pli";
  goto <bb 405>;

<bb 404>:
  iftmp.38_968 = "";

<bb 405>:
  # iftmp.38_68 = PHI <iftmp.38_967(403), iftmp.38_968(404)>
  switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);

<bb 406>:
  D.42378_969 = v_engine_92->ice_out.cands[0][0].ready;
  if (D.42378_969 != 0)
    goto <bb 407>;
  else
    goto <bb 440>;

<bb 407>:
  tmp1 = "";
  tmp2 = "";
  c1_970 = 659136;
  # DEBUG c1 => c1_970
  c2_971 = 659134;
  # DEBUG c2 => c2_971
  c3_972 = 659126;
  # DEBUG c3 => c3_972
  c4_973 = 659124;
  # DEBUG c4 => c4_973
  bw_974 = 256;
  # DEBUG bw => bw_974
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  ice_out_975 = &v_engine_92->ice_out;
  # DEBUG ice_out => ice_out_975
  D.41534_976 = smh_90->session;
  D.41535_977 = D.41534_976->channel;
  vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);
  # DEBUG vbw => vbw_978
  if (vbw_978 != 0B)
    goto <bb 408>;
  else
    goto <bb 409>;

<bb 408>:
  # DEBUG __nptr => vbw_978
  v_1546 = strtol (vbw_978, 0B, 10);
  v_1574 = v_1546;
  v_979 = v_1574;
  # DEBUG v => NULL
  bw_980 = v_979;
  # DEBUG bw => bw_980

<bb 409>:
  # bw_57 = PHI <bw_974(407), bw_980(408)>
  # DEBUG bw => bw_57
  if (bw_57 > 0)
    goto <bb 410>;
  else
    goto <bb 411>;

<bb 410>:
  D.42385_981 = strlen (buf_144);
  D.42386_982 = buf_144 + D.42385_981;
  D.42387_983 = strlen (buf_144);
  D.42388_984 = 65536 - D.42387_983;
  switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);

<bb 411>:
  if (vp8_26 != 0)
    goto <bb 412>;
  else
    goto <bb 414>;

<bb 412>:
  D.41512_985 = session_72(D)->channel;
  D.42391_986 = switch_channel_test_flag (D.41512_985, 106);
  if (D.42391_986 != 0)
    goto <bb 413>;
  else
    goto <bb 414>;

<bb 413>:
  D.42394_987 = strlen (buf_144);
  D.42395_988 = buf_144 + D.42394_987;
  D.42396_989 = strlen (buf_144);
  D.42397_990 = 65536 - D.42396_989;
  switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);

<bb 414>:
  if (red_32 != 0)
    goto <bb 415>;
  else
    goto <bb 416>;

<bb 415>:
  D.42400_991 = strlen (buf_144);
  D.42401_992 = buf_144 + D.42400_991;
  D.42402_993 = strlen (buf_144);
  D.42403_994 = 65536 - D.42402_993;
  switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);

<bb 416>:
  D.42404_995 = strlen (buf_144);
  D.42405_996 = buf_144 + D.42404_995;
  D.42406_997 = strlen (buf_144);
  D.42407_998 = 65536 - D.42406_997;
  D.42408_999 = v_engine_92->ssrc;
  D.41935_1000 = smh_90->cname;
  switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);
  D.42409_1001 = strlen (buf_144);
  D.42410_1002 = buf_144 + D.42409_1001;
  D.42411_1003 = strlen (buf_144);
  D.42412_1004 = 65536 - D.42411_1003;
  D.42408_1005 = v_engine_92->ssrc;
  D.41719_1006 = smh_90->msid;
  switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);
  D.42413_1007 = strlen (buf_144);
  D.42414_1008 = buf_144 + D.42413_1007;
  D.42415_1009 = strlen (buf_144);
  D.42416_1010 = 65536 - D.42415_1009;
  D.42408_1011 = v_engine_92->ssrc;
  D.41719_1012 = smh_90->msid;
  switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);
  D.42417_1013 = strlen (buf_144);
  D.42418_1014 = buf_144 + D.42417_1013;
  D.42419_1015 = strlen (buf_144);
  D.42420_1016 = 65536 - D.42419_1015;
  D.42408_1017 = v_engine_92->ssrc;
  D.41719_1018 = smh_90->msid;
  switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);
  D.42421_1019 = strlen (buf_144);
  D.42422_1020 = buf_144 + D.42421_1019;
  D.42423_1021 = strlen (buf_144);
  D.42424_1022 = 65536 - D.42423_1021;
  D.41952_1023 = ice_out_975->ufrag;
  switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);
  D.42425_1024 = strlen (buf_144);
  D.42426_1025 = buf_144 + D.42425_1024;
  D.42427_1026 = strlen (buf_144);
  D.42428_1027 = 65536 - D.42427_1026;
  D.41957_1028 = ice_out_975->pwd;
  switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);
  D.42429_1029 = strlen (buf_144);
  D.42430_1030 = buf_144 + D.42429_1029;
  D.42431_1031 = strlen (buf_144);
  D.42432_1032 = 65536 - D.42431_1031;
  D.41962_1033 = ice_out_975->cands[0][0].transport;
  D.41963_1034 = ice_out_975->cands[0][0].con_addr;
  D.41964_1035 = ice_out_975->cands[0][0].con_port;
  D.41965_1036 = (int) D.41964_1035;
  switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, c1_970, D.41963_1034, D.41965_1036);
  D.42433_1037 = v_engine_92->local_sdp_ip;
  # DEBUG s => D.42433_1037
  if (D.42433_1037 == 0B)
    goto <bb 419>;
  else
    goto <bb 417>;

<bb 417>:
  D.48195_1547 = MEM[(const char *)D.42433_1037];
  if (D.48195_1547 == 0)
    goto <bb 419>;
  else
    goto <bb 418>;

<bb 418>:

<bb 419>:
  # D.48194_1548 = PHI <1(416), 1(417), 0(418)>
  D.48194_1575 = D.48194_1548;
  D.48194_1038 = D.48194_1575;
  if (D.48194_1038 == 0)
    goto <bb 420>;
  else
    goto <bb 427>;

<bb 420>:
  D.41963_1039 = ice_out_975->cands[0][0].con_addr;
  # DEBUG s => D.41963_1039
  if (D.41963_1039 == 0B)
    goto <bb 423>;
  else
    goto <bb 421>;

<bb 421>:
  D.48199_1549 = MEM[(const char *)D.41963_1039];
  if (D.48199_1549 == 0)
    goto <bb 423>;
  else
    goto <bb 422>;

<bb 422>:

<bb 423>:
  # D.48198_1550 = PHI <1(420), 1(421), 0(422)>
  D.48198_1576 = D.48198_1550;
  D.48198_1040 = D.48198_1576;
  if (D.48198_1040 == 0)
    goto <bb 424>;
  else
    goto <bb 427>;

<bb 424>:
  D.42433_1041 = v_engine_92->local_sdp_ip;
  D.41963_1042 = ice_out_975->cands[0][0].con_addr;
  D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);
  if (D.39666_1043 != 0)
    goto <bb 425>;
  else
    goto <bb 427>;

<bb 425>:
  D.42106_1044 = v_engine_92->local_sdp_port;
  D.41964_1045 = ice_out_975->cands[0][0].con_port;
  if (D.42106_1044 != D.41964_1045)
    goto <bb 426>;
  else
    goto <bb 427>;

<bb 426>:
  D.42444_1046 = strlen (buf_144);
  D.42445_1047 = buf_144 + D.42444_1046;
  D.42446_1048 = strlen (buf_144);
  D.42447_1049 = 65536 - D.42446_1048;
  D.41962_1050 = ice_out_975->cands[0][0].transport;
  D.41963_1051 = ice_out_975->cands[0][0].con_addr;
  D.41964_1052 = ice_out_975->cands[0][0].con_port;
  D.41965_1053 = (int) D.41964_1052;
  D.42433_1054 = v_engine_92->local_sdp_ip;
  D.42106_1055 = v_engine_92->local_sdp_port;
  D.42448_1056 = (int) D.42106_1055;
  switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, c3_972, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);

<bb 427>:
  D.42343_1057 = v_engine_92->rtcp_mux;
  D.42451_1058 = D.42343_1057 <= 0;
  D.41986_1059 = is_outbound_89 != 0;
  D.42452_1060 = D.42451_1058 || D.41986_1059;
  if (D.42452_1060 != 0)
    goto <bb 429>;
  else
    goto <bb 428>;

<bb 428>:
  D.41512_1061 = session_72(D)->channel;
  D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);
  if (D.42454_1062 != 0)
    goto <bb 429>;
  else
    goto <bb 440>;

<bb 429>:
  D.42455_1063 = strlen (buf_144);
  D.42456_1064 = buf_144 + D.42455_1063;
  D.42457_1065 = strlen (buf_144);
  D.42458_1066 = 65536 - D.42457_1065;
  D.41962_1067 = ice_out_975->cands[0][0].transport;
  D.41963_1068 = ice_out_975->cands[0][0].con_addr;
  D.41964_1069 = ice_out_975->cands[0][0].con_port;
  D.41965_1070 = (int) D.41964_1069;
  D.42343_1071 = v_engine_92->rtcp_mux;
  D.42459_1072 = D.42343_1071 <= 0;
  D.42460_1073 = D.41965_1070 + D.42459_1072;
  switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, c2_971, D.41963_1068, D.42460_1073);
  D.42433_1074 = v_engine_92->local_sdp_ip;
  # DEBUG s => D.42433_1074
  if (D.42433_1074 == 0B)
    goto <bb 432>;
  else
    goto <bb 430>;

<bb 430>:
  D.48203_1551 = MEM[(const char *)D.42433_1074];
  if (D.48203_1551 == 0)
    goto <bb 432>;
  else
    goto <bb 431>;

<bb 431>:

<bb 432>:
  # D.48202_1552 = PHI <1(429), 1(430), 0(431)>
  D.48202_1577 = D.48202_1552;
  D.48202_1075 = D.48202_1577;
  if (D.48202_1075 == 0)
    goto <bb 433>;
  else
    goto <bb 440>;

<bb 433>:
  D.42464_1076 = ice_out_975->cands[0][1].con_addr;
  # DEBUG s => D.42464_1076
  if (D.42464_1076 == 0B)
    goto <bb 436>;
  else
    goto <bb 434>;

<bb 434>:
  D.48207_1553 = MEM[(const char *)D.42464_1076];
  if (D.48207_1553 == 0)
    goto <bb 436>;
  else
    goto <bb 435>;

<bb 435>:

<bb 436>:
  # D.48206_1554 = PHI <1(433), 1(434), 0(435)>
  D.48206_1578 = D.48206_1554;
  D.48206_1077 = D.48206_1578;
  if (D.48206_1077 == 0)
    goto <bb 437>;
  else
    goto <bb 440>;

<bb 437>:
  D.42433_1078 = v_engine_92->local_sdp_ip;
  D.42464_1079 = ice_out_975->cands[0][1].con_addr;
  D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);
  if (D.39675_1080 != 0)
    goto <bb 438>;
  else
    goto <bb 440>;

<bb 438>:
  D.42106_1081 = v_engine_92->local_sdp_port;
  D.42470_1082 = ice_out_975->cands[0][1].con_port;
  if (D.42106_1081 != D.42470_1082)
    goto <bb 439>;
  else
    goto <bb 440>;

<bb 439>:
  D.42473_1083 = strlen (buf_144);
  D.42474_1084 = buf_144 + D.42473_1083;
  D.42475_1085 = strlen (buf_144);
  D.42476_1086 = 65536 - D.42475_1085;
  D.41962_1087 = ice_out_975->cands[0][0].transport;
  D.41963_1088 = ice_out_975->cands[0][0].con_addr;
  D.41964_1089 = ice_out_975->cands[0][0].con_port;
  D.41965_1090 = (int) D.41964_1089;
  D.42343_1091 = v_engine_92->rtcp_mux;
  D.42459_1092 = D.42343_1091 <= 0;
  D.42460_1093 = D.41965_1090 + D.42459_1092;
  D.42433_1094 = v_engine_92->local_sdp_ip;
  D.42106_1095 = v_engine_92->local_sdp_port;
  D.42448_1096 = (int) D.42106_1095;
  D.42343_1097 = v_engine_92->rtcp_mux;
  D.42459_1098 = D.42343_1097 <= 0;
  D.42477_1099 = D.42448_1096 + D.42459_1098;
  switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, c4_973, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);

<bb 440>:
  if (loops_48 == 0)
    goto <bb 441>;
  else
    goto <bb 453>;

<bb 441>:
  D.41512_1100 = session_72(D)->channel;
  D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);
  if (D.42480_1101 != 0)
    goto <bb 442>;
  else
    goto <bb 453>;

<bb 442>:
  D.41512_1102 = session_72(D)->channel;
  D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);
  if (D.42483_1103 == 0)
    goto <bb 443>;
  else
    goto <bb 453>;

<bb 443>:
  i_1104 = 0;
  # DEBUG i => i_1104
  goto <bb 452>;

<bb 444>:
  D.42486_1106 = smh_90->crypto_suite_order[i_58];
  j_1107 = SUITES[D.42486_1106].type;
  # DEBUG j => j_1107
  D.41736_1108 = a_engine_91->crypto_type;
  if (D.41736_1108 == j_1107)
    goto <bb 446>;
  else
    goto <bb 445>;

<bb 445>:
  D.41736_1109 = a_engine_91->crypto_type;
  if (D.41736_1109 == 9)
    goto <bb 446>;
  else
    goto <bb 451>;

<bb 446>:
  D.42490_1110 = a_engine_91->ssec[j_1107].local_crypto_key;
  # DEBUG s => D.42490_1110
  if (D.42490_1110 == 0B)
    goto <bb 449>;
  else
    goto <bb 447>;

<bb 447>:
  D.48211_1555 = MEM[(const char *)D.42490_1110];
  if (D.48211_1555 == 0)
    goto <bb 449>;
  else
    goto <bb 448>;

<bb 448>:

<bb 449>:
  # D.48210_1556 = PHI <1(446), 1(447), 0(448)>
  D.48210_1579 = D.48210_1556;
  D.48210_1111 = D.48210_1579;
  if (D.48210_1111 == 0)
    goto <bb 450>;
  else
    goto <bb 451>;

<bb 450>:
  D.42494_1112 = strlen (buf_144);
  D.42495_1113 = buf_144 + D.42494_1112;
  D.42496_1114 = strlen (buf_144);
  D.42497_1115 = 65536 - D.42496_1114;
  D.42498_1116 = v_engine_92->ssec[j_1107].local_crypto_key;
  switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);

<bb 451>:
  i_1117 = i_58 + 1;
  # DEBUG i => i_1117

<bb 452>:
  # i_58 = PHI <i_1104(443), i_1117(451)>
  # DEBUG i => i_58
  D.42486_1105 = smh_90->crypto_suite_order[i_58];
  if (D.42486_1105 != 9)
    goto <bb 444>;
  else
    goto <bb 453>;

<bb 453>:
  if (local_sdp_video_zrtp_hash_84 != 0B)
    goto <bb 454>;
  else
    goto <bb 455>;

<bb 454>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);
  D.42501_1118 = strlen (buf_144);
  D.42502_1119 = buf_144 + D.42501_1118;
  D.42503_1120 = strlen (buf_144);
  D.42504_1121 = 65536 - D.42503_1120;
  switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

<bb 455>:
  D.41512_1122 = session_72(D)->channel;
  D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);
  if (D.42505_1123 != 0)
    goto <bb 461>;
  else
    goto <bb 456>;

<bb 456>:
  D.41512_1124 = session_72(D)->channel;
  D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);
  if (D.42507_1125 == 0)
    goto <bb 461>;
  else
    goto <bb 457>;

<bb 457>:
  D.42058_1126 = smh_90->crypto_mode;
  if (D.42058_1126 == 1)
    goto <bb 461>;
  else
    goto <bb 458>;

<bb 458>:
  D.42058_1127 = smh_90->crypto_mode;
  if (D.42058_1127 == 2)
    goto <bb 461>;
  else
    goto <bb 459>;

<bb 459>:
  loops_1128 = loops_48 + 1;
  # DEBUG loops => loops_1128

<bb 460>:
  # ptime_10 = PHI <ptime_6(272), ptime_9(459)>
  # rate_16 = PHI <rate_11(272), rate_15(459)>
  # pass_fmtp_20 = PHI <pass_fmtp_74(272), pass_fmtp_19(459)>
  # vp8_27 = PHI <vp8_85(272), vp8_26(459)>
  # red_33 = PHI <red_86(272), red_32(459)>
  # loops_48 = PHI <loops_722(272), loops_1128(459)>
  # DEBUG loops => loops_48
  # DEBUG red => red_33
  # DEBUG vp8 => vp8_27
  # DEBUG pass_fmtp => pass_fmtp_20
  # DEBUG rate => rate_16
  # DEBUG ptime => ptime_10
  if (loops_48 <= 1)
    goto <bb 273>;
  else
    goto <bb 461>;

<bb 461>:
  map.33_1129 = map;
  if (map.33_1129 != 0B)
    goto <bb 462>;
  else
    goto <bb 463>;

<bb 462>:
  switch_event_destroy (&map);

<bb 463>:
  ptmap.39_1130 = ptmap;
  if (ptmap.39_1130 != 0B)
    goto <bb 464>;
  else
    goto <bb 465>;

<bb 464>:
  switch_event_destroy (&ptmap);

<bb 465>:
  switch_core_media_set_local_sdp (session_72(D), buf_144, 1);
  if (buf_144 != 0B)
    goto <bb 466>;
  else
    goto <bb 467>;

<bb 466>:
  free (buf_144);
  buf_1131 = 0B;
  # DEBUG buf => buf_1131

<bb 467>:
  return;

}



;; Function switch_core_media_absorb_sdp (switch_core_media_absorb_sdp)

Try : connection_2(P2) & connection_15(P15) : Same root, coalesced --> P2.
Try : connection_2(P2) & connection_17(P17) : Same root, coalesced --> P2.
Try : m_1(P1) & m_12(P12) : Same root, coalesced --> P1.
Try : m_1(P1) & m_24(P24) : Same root, coalesced --> P1.

Partition map 

Partition 1 (m_1 - 1 12 24 )
Partition 2 (connection_2 - 2 15 17 )
Partition 3 (session_3(D) - 3 )
Partition 4 (smh_4 - 4 )
Partition 5 (a_engine_5 - 5 )
Partition 6 (D.41484_6 - 6 )
Partition 7 (sdp_str_7 - 7 )
Partition 8 (D.41487_8 - 8 )
Partition 9 (D.41488_9 - 9 )
Partition 10 (parser_10 - 10 )
Partition 11 (sdp_11 - 11 )
Partition 13 (D.41495_13 - 13 )
Partition 14 (D.41497_14 - 14 )
Partition 16 (D.41498_16 - 16 )
Partition 18 (D.41503_18 - 18 )
Partition 19 (D.41504_19 - 19 )
Partition 20 (D.41497_20 - 20 )
Partition 21 (D.41505_21 - 21 )
Partition 22 (D.41506_22 - 22 )
Partition 23 (D.41509_23 - 23 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30(D) - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )

switch_core_media_absorb_sdp (struct switch_core_session_t * session)
{
  struct sdp_connection_t * connection;
  struct sdp_media_t * m;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  static const char __func__[29] = "switch_core_media_absorb_sdp";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_absorb_sdp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  const char * sdp_str;
  switch_port_t D.41509;
  char * D.41506;
  short unsigned int D.41505;
  char * D.41504;
  const char * D.41503;
  struct sdp_connection_t * D.41498;
  long unsigned int D.41497;
  sdp_media_e D.41495;
  int D.41488;
  size_t D.41487;
  struct switch_channel_t * D.41484;

<bb 2>:
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6930, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_5 = &smh_4->engines;
  # DEBUG a_engine => a_engine_5
  D.41484_6 = session_3(D)->channel;
  sdp_str_7 = switch_channel_get_variable_dup (D.41484_6, "switch_m_sdp", 1, -1);
  # DEBUG sdp_str => sdp_str_7
  if (sdp_str_7 != 0B)
    goto <bb 6>;
  else
    goto <bb 22>;

<bb 6>:
  D.41487_8 = strlen (sdp_str_7);
  D.41488_9 = (int) D.41487_8;
  parser_10 = sdp_parse (0B, sdp_str_7, D.41488_9, 0);
  # DEBUG parser => parser_10
  if (parser_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 21>;

<bb 7>:
  sdp_11 = sdp_session (parser_10);
  # DEBUG sdp => sdp_11
  if (sdp_11 != 0B)
    goto <bb 8>;
  else
    goto <bb 20>;

<bb 8>:
  m_12 = sdp_11->sdp_media;
  # DEBUG m => m_12
  goto <bb 19>;

<bb 9>:
  D.41495_13 = m_1->m_type;
  if (D.41495_13 != 2)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:
  D.41497_14 = m_1->m_port;
  if (D.41497_14 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  // predicted unlikely by continue predictor.
  goto <bb 18>;

<bb 12>:
  connection_15 = sdp_11->sdp_connection;
  # DEBUG connection => connection_15
  D.41498_16 = m_1->m_connections;
  if (D.41498_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  connection_17 = m_1->m_connections;
  # DEBUG connection => connection_17

<bb 14>:
  # connection_2 = PHI <connection_15(12), connection_17(13)>
  # DEBUG connection => connection_2
  if (connection_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.41503_18 = connection_2->c_address;
  D.41504_19 = switch_core_perform_session_strdup (session_3(D), D.41503_18, "src/switch_core_media.c", &__func__, 6957);
  a_engine_5->proxy_sdp_ip = D.41504_19;

<bb 16>:
  D.41497_20 = m_1->m_port;
  D.41505_21 = (short unsigned int) D.41497_20;
  a_engine_5->proxy_sdp_port = D.41505_21;
  D.41506_22 = a_engine_5->proxy_sdp_ip;
  if (D.41506_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.41509_23 = a_engine_5->proxy_sdp_port;
  if (D.41509_23 != 0)
    goto <bb 20>;
  else
    goto <bb 18>;

<bb 18>:
  m_24 = m_1->m_next;
  # DEBUG m => m_24

<bb 19>:
  # m_1 = PHI <m_12(8), m_24(18)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 20>;

<bb 20>:
  sdp_parser_free (parser_10);

<bb 21>:
  switch_core_media_set_local_sdp (session_3(D), sdp_str_7, 1);

<bb 22>:
  return;

}



;; Function switch_core_media_set_udptl_image_sdp (switch_core_media_set_udptl_image_sdp)

Try : family_53(P53) & iftmp.21_9(P9) --> P53 family
Try : iftmp.22_74(P74) & bit_removal_on_3(P3) --> P74 bit_removal_on
Try : iftmp.22_75(P75) & bit_removal_off_4(P4) --> P75 bit_removal_off
Try : iftmp.23_77(P77) & mmr_on_5(P5) --> P77 mmr_on
Try : iftmp.23_78(P78) & mmr_off_6(P6) --> P78 mmr_off
Try : iftmp.24_80(P80) & jbig_on_7(P7) --> P80 jbig_on
Try : iftmp.24_81(P81) & jbig_off_8(P8) --> P81 jbig_off
Try : ip_1(P1) & ip_24(P24) : Same root, coalesced --> P1.
Try : ip_1(P1) & ip_32(P32) : Same root, coalesced --> P1.
Try : ip_1(P1) & ip_33(P33) : Same root, coalesced --> P1.
Try : port_2(P2) & port_26(P26) : Same root, coalesced --> P2.
Try : port_2(P2) & port_37(P37) : Same root, coalesced --> P2.
Try : port_2(P2) & port_39(P39) : Same root, coalesced --> P2.
Try : iftmp.21_9(P53) & iftmp.21_51(P51) --> P53 family
Try : iftmp.21_9(P53) & iftmp.21_52(P52) --> P53 family
Try : bit_removal_on_3(P74) & bit_removal_on_14(P14) : Same root, coalesced --> P74.
Try : bit_removal_on_3(P74) & bit_removal_on_60(P60) : Same root, coalesced --> P74.
Try : bit_removal_off_4(P75) & bit_removal_off_15(P15) : Same root, coalesced --> P75.
Try : bit_removal_off_4(P75) & bit_removal_off_61(P61) : Same root, coalesced --> P75.
Try : mmr_on_5(P77) & mmr_on_16(P16) : Same root, coalesced --> P77.
Try : mmr_on_5(P77) & mmr_on_62(P62) : Same root, coalesced --> P77.
Try : mmr_off_6(P78) & mmr_off_17(P17) : Same root, coalesced --> P78.
Try : mmr_off_6(P78) & mmr_off_63(P63) : Same root, coalesced --> P78.
Try : jbig_on_7(P80) & jbig_on_18(P18) : Same root, coalesced --> P80.
Try : jbig_on_7(P80) & jbig_on_64(P64) : Same root, coalesced --> P80.
Try : jbig_off_8(P81) & jbig_off_19(P19) : Same root, coalesced --> P81.
Try : jbig_off_8(P81) & jbig_off_65(P65) : Same root, coalesced --> P81.
Try : iftmp.22_10(P10) & bit_removal_on_74(P74) --> P74 bit_removal_on
Try : iftmp.22_10(P74) & bit_removal_off_75(P75) : 2 different USER vars. No coalesce.
Try : iftmp.23_11(P11) & mmr_on_77(P77) --> P77 mmr_on
Try : iftmp.23_11(P77) & mmr_off_78(P78) : 2 different USER vars. No coalesce.
Try : iftmp.24_12(P12) & jbig_on_80(P80) --> P80 jbig_on
Try : iftmp.24_12(P80) & jbig_off_81(P81) : 2 different USER vars. No coalesce.

Partition map 

Partition 1 (ip_1 - 1 24 32 33 )
Partition 2 (port_2 - 2 26 37 39 )
Partition 13 (family_13 - 13 )
Partition 20 (session_20(D) - 20 )
Partition 21 (smh_21 - 21 )
Partition 22 (a_engine_22 - 22 )
Partition 23 (t38_options_23(D) - 23 )
Partition 25 (D.41405_25 - 25 )
Partition 27 (D.41406_27 - 27 )
Partition 28 (username_28 - 28 )
Partition 29 (D.41407_29 - 29 )
Partition 30 (var_30 - 30 )
Partition 31 (broken_boolean_31 - 31 )
Partition 34 (D.41407_34 - 34 )
Partition 35 (D.41414_35 - 35 )
Partition 36 (D.41417_36 - 36 )
Partition 38 (D.41420_38 - 38 )
Partition 40 (D.41407_40 - 40 )
Partition 41 (D.41423_41 - 41 )
Partition 42 (D.41424_42 - 42 )
Partition 43 (D.41427_43 - 43 )
Partition 44 (D.41428_44 - 44 )
Partition 45 (D.41429_45 - 45 )
Partition 46 (D.41430_46 - 46 )
Partition 47 (D.41424_47 - 47 )
Partition 48 (D.41430_48 - 48 )
Partition 49 (D.41433_49 - 49 )
Partition 50 (D.41435_50 - 50 )
Partition 53 (family_53 - 9 51 52 53 )
Partition 54 (D.41424_54 - 54 )
Partition 55 (D.41430_55 - 55 )
Partition 56 (D.41439_56 - 56 )
Partition 57 (D.41439_57 - 57 )
Partition 58 (D.41442_58 - 58 )
Partition 59 (D.41442_59 - 59 )
Partition 66 (D.41447_66 - 66 )
Partition 67 (D.41448_67 - 67 )
Partition 68 (D.41449_68 - 68 )
Partition 69 (D.41450_69 - 69 )
Partition 70 (D.41451_70 - 70 )
Partition 71 (D.41452_71 - 71 )
Partition 72 (D.41453_72 - 72 )
Partition 73 (D.41455_73 - 73 )
Partition 74 (bit_removal_on_74 - 3 10 14 60 74 )
Partition 75 (bit_removal_off_75 - 4 15 61 75 )
Partition 76 (D.41460_76 - 76 )
Partition 77 (mmr_on_77 - 5 11 16 62 77 )
Partition 78 (mmr_off_78 - 6 17 63 78 )
Partition 79 (D.41465_79 - 79 )
Partition 80 (jbig_on_80 - 7 12 18 64 80 )
Partition 81 (jbig_off_81 - 8 19 65 81 )
Partition 82 (D.41469_82 - 82 )
Partition 83 (D.41470_83 - 83 )
Partition 84 (insist_84(D) - 84 )
Partition 85 (D.41473_85 - 85 )
Partition 86 (D.41474_86 - 86 )
Partition 87 (D.41475_87 - 87 )
Partition 88 (D.41476_88 - 88 )
Partition 89 (D.41407_89 - 89 )
Partition 90 (D.41477_90 - 90 )
Partition 91 (D.41406_91 - 91 )
Partition 92 (D.41478_92 - 92 )
Partition 93 (.MEM_93 - 93 )
Partition 94 (.MEM_94 - 94 )
Partition 95 (.MEM_95 - 95 )
Partition 96 (.MEM_96 - 96 )
Partition 97 (.MEM_97 - 97 )
Partition 98 (.MEM_98(D) - 98 )
Partition 99 (.MEM_99 - 99 )
Partition 100 (.MEM_100 - 100 )
Partition 101 (.MEM_101 - 101 )
Partition 102 (.MEM_102 - 102 )
Partition 103 (.MEM_103 - 103 )
Partition 104 (.MEM_104 - 104 )
Partition 105 (.MEM_105 - 105 )
Partition 106 (.MEM_106 - 106 )
Partition 107 (.MEM_107 - 107 )
Partition 108 (.MEM_108 - 108 )
Partition 109 (.MEM_109 - 109 )
Partition 110 (.MEM_110 - 110 )
Partition 111 (.MEM_111 - 111 )
Partition 112 (.MEM_112 - 112 )
Partition 113 (.MEM_113 - 113 )
Partition 114 (.MEM_114 - 114 )
Partition 115 (.MEM_115 - 115 )
Partition 116 (.MEM_116 - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )

Coalesced iftmp.21_9 to family_53
Coalesced iftmp.22_10 to bit_removal_on_74
Coalesced iftmp.23_11 to mmr_on_77
Coalesced iftmp.24_12 to jbig_on_80
Coalesced iftmp.21_51 to family_53
Coalesced iftmp.21_52 to family_53
Scope blocks after cleanups:

{ Scope block #0 
  char buf[2048];
  char max_buf[128];
  char max_data[128];
  const char * ip;
  uint32_t port;
  const char * family;
  const char * username;
  const char * bit_removal_on;
  const char * bit_removal_off;
  const char * mmr_on;
  const char * mmr_off;
  const char * jbig_on;
  const char * jbig_off;
  const char * var;
  int broken_boolean;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_udptl_image_sdp";
  static const char __func__[38] = "switch_core_media_set_udptl_image_sdp";

}
switch_core_media_set_udptl_image_sdp (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options, int insist)
{
  static const char __func__[38] = "switch_core_media_set_udptl_image_sdp";
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_udptl_image_sdp";
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  int broken_boolean;
  const char * var;
  const char * jbig_off;
  const char * jbig_on;
  const char * mmr_off;
  const char * mmr_on;
  const char * bit_removal_off;
  const char * bit_removal_on;
  const char * username;
  const char * family;
  uint32_t port;
  const char * ip;
  char max_data[128];
  char max_buf[128];
  char buf[2048];
  char * D.41478;
  char * D.41477;
  unsigned int D.41476;
  size_t D.41475;
  char * D.41474;
  size_t D.41473;
  const char * D.41470;
  const char * D.41469;
  switch_bool_t D.41465;
  switch_bool_t D.41460;
  switch_bool_t D.41455;
  uint32_t D.41453;
  int D.41452;
  uint16_t D.41451;
  unsigned int D.41450;
  size_t D.41449;
  char * D.41448;
  size_t D.41447;
  uint32_t D.41442;
  uint32_t D.41439;
  char * D.41435;
  uint32_t D.41433;
  uint32_t D.41430;
  unsigned int D.41429;
  unsigned int D.41428;
  time_t D.41427;
  uint32_t D.41424;
  char * D.41423;
  switch_port_t D.41420;
  switch_port_t D.41417;
  char * D.41414;
  struct switch_channel_t * D.41407;
  struct switch_core_media_params_t * D.41406;
  uint16_t D.41405;

<bb 2>:
  buf = "";
  max_buf = "";
  max_data = "";
  family_13 = "IP4";
  # DEBUG family => family_13
  bit_removal_on_14 = "a=T38FaxFillBitRemoval\n";
  # DEBUG bit_removal_on => bit_removal_on_14
  bit_removal_off_15 = "";
  # DEBUG bit_removal_off => bit_removal_off_15
  mmr_on_16 = "a=T38FaxTranscodingMMR\n";
  # DEBUG mmr_on => mmr_on_16
  mmr_off_17 = "";
  # DEBUG mmr_off => mmr_off_17
  jbig_on_18 = "a=T38FaxTranscodingJBIG\n";
  # DEBUG jbig_on => jbig_on_18
  jbig_off_19 = "";
  # DEBUG jbig_off => jbig_off_19
  if (session_20(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6995, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_21 = session_20(D)->media_handle;
  # DEBUG smh => smh_21
  if (smh_21 == 0B)
    goto <bb 42>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_22 = &smh_21->engines;
  # DEBUG a_engine => a_engine_22
  if (t38_options_23(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  __assert_fail ("t38_options", "src/switch_core_media.c", 7004, &__PRETTY_FUNCTION__);

<bb 7>:
  ip_24 = t38_options_23(D)->local_ip;
  # DEBUG ip => ip_24
  D.41405_25 = t38_options_23(D)->local_port;
  port_26 = (uint32_t) D.41405_25;
  # DEBUG port => port_26
  D.41406_27 = smh_21->mparams;
  username_28 = D.41406_27->sdp_username;
  # DEBUG username => username_28
  D.41407_29 = session_20(D)->channel;
  var_30 = switch_channel_get_variable_dup (D.41407_29, "t38_broken_boolean", 1, -1);
  # DEBUG var => var_30
  broken_boolean_31 = switch_true (var_30);
  # DEBUG broken_boolean => broken_boolean_31
  if (ip_24 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  ip_32 = a_engine_22->adv_sdp_ip;
  # DEBUG ip => ip_32
  if (ip_32 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  ip_33 = a_engine_22->proxy_sdp_ip;
  # DEBUG ip => ip_33

<bb 10>:
  # ip_1 = PHI <ip_24(7), ip_32(8), ip_33(9)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.41407_34 = session_20(D)->channel;
  D.41414_35 = switch_channel_get_name (D.41407_34);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7022, 0B, 2, "%s NO IP!\n", D.41414_35);
  goto <bb 42>;

<bb 12>:
  if (port_26 == 0)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41417_36 = a_engine_22->adv_sdp_port;
  port_37 = (uint32_t) D.41417_36;
  # DEBUG port => port_37
  if (port_37 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41420_38 = a_engine_22->proxy_sdp_port;
  port_39 = (uint32_t) D.41420_38;
  # DEBUG port => port_39

<bb 15>:
  # port_2 = PHI <port_26(12), port_37(13), port_39(14)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.41407_40 = session_20(D)->channel;
  D.41423_41 = switch_channel_get_name (D.41407_40);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7033, 0B, 2, "%s NO PORT!\n", D.41423_41);
  goto <bb 42>;

<bb 17>:
  D.41424_42 = smh_21->owner_id;
  if (D.41424_42 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.41427_43 = switch_epoch_time_now (0B);
  D.41428_44 = (unsigned int) D.41427_43;
  D.41429_45 = D.41428_44 - port_2;
  smh_21->owner_id = D.41429_45;

<bb 19>:
  D.41430_46 = smh_21->session_id;
  if (D.41430_46 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41424_47 = smh_21->owner_id;
  smh_21->session_id = D.41424_47;

<bb 21>:
  D.41430_48 = smh_21->session_id;
  D.41433_49 = D.41430_48 + 1;
  smh_21->session_id = D.41433_49;
  D.41435_50 = __builtin_strchr (ip_1, 58);
  if (D.41435_50 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  family_51 = "IP6";
  goto <bb 24>;

<bb 23>:
  family_52 = "IP4";

<bb 24>:
  # family_9 = PHI <family_51(22), family_52(23)>
  family_53 = family_9;
  # DEBUG family => family_53
  D.41424_54 = smh_21->owner_id;
  D.41430_55 = smh_21->session_id;
  switch_snprintf (&buf, 2048, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n", username_28, D.41424_54, D.41430_55, family_53, ip_1, username_28, family_53, ip_1);
  D.41439_56 = t38_options_23(D)->T38FaxMaxBuffer;
  if (D.41439_56 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.41439_57 = t38_options_23(D)->T38FaxMaxBuffer;
  switch_snprintf (&max_buf, 128, "a=T38FaxMaxBuffer:%d\n", D.41439_57);

<bb 26>:
  D.41442_58 = t38_options_23(D)->T38FaxMaxDatagram;
  if (D.41442_58 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.41442_59 = t38_options_23(D)->T38FaxMaxDatagram;
  switch_snprintf (&max_data, 128, "a=T38FaxMaxDatagram:%d\n", D.41442_59);

<bb 28>:
  if (broken_boolean_31 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  bit_removal_on_60 = "a=T38FaxFillBitRemoval:1\n";
  # DEBUG bit_removal_on => bit_removal_on_60
  bit_removal_off_61 = "a=T38FaxFillBitRemoval:0\n";
  # DEBUG bit_removal_off => bit_removal_off_61
  mmr_on_62 = "a=T38FaxTranscodingMMR:1\n";
  # DEBUG mmr_on => mmr_on_62
  mmr_off_63 = "a=T38FaxTranscodingMMR:0\n";
  # DEBUG mmr_off => mmr_off_63
  jbig_on_64 = "a=T38FaxTranscodingJBIG:1\n";
  # DEBUG jbig_on => jbig_on_64
  jbig_off_65 = "a=T38FaxTranscodingJBIG:0\n";
  # DEBUG jbig_off => jbig_off_65

<bb 30>:
  # bit_removal_on_3 = PHI <bit_removal_on_14(28), bit_removal_on_60(29)>
  # bit_removal_off_4 = PHI <bit_removal_off_15(28), bit_removal_off_61(29)>
  # mmr_on_5 = PHI <mmr_on_16(28), mmr_on_62(29)>
  # mmr_off_6 = PHI <mmr_off_17(28), mmr_off_63(29)>
  # jbig_on_7 = PHI <jbig_on_18(28), jbig_on_64(29)>
  # jbig_off_8 = PHI <jbig_off_19(28), jbig_off_65(29)>
  # DEBUG jbig_off => jbig_off_8
  # DEBUG jbig_on => jbig_on_7
  # DEBUG mmr_off => mmr_off_6
  # DEBUG mmr_on => mmr_on_5
  # DEBUG bit_removal_off => bit_removal_off_4
  # DEBUG bit_removal_on => bit_removal_on_3
  D.41447_66 = strlen (&buf);
  D.41448_67 = &buf + D.41447_66;
  D.41449_68 = strlen (&buf);
  D.41450_69 = 2048 - D.41449_68;
  D.41451_70 = t38_options_23(D)->T38FaxVersion;
  D.41452_71 = (int) D.41451_70;
  D.41453_72 = t38_options_23(D)->T38MaxBitRate;
  D.41455_73 = t38_options_23(D)->T38FaxFillBitRemoval;
  if (D.41455_73 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  bit_removal_on_74 = bit_removal_on_3;
  goto <bb 33>;

<bb 32>:
  bit_removal_off_75 = bit_removal_off_4;

<bb 33>:
  # bit_removal_on_10 = PHI <bit_removal_on_74(31), bit_removal_off_75(32)>
  D.41460_76 = t38_options_23(D)->T38FaxTranscodingMMR;
  if (D.41460_76 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  mmr_on_77 = mmr_on_5;
  goto <bb 36>;

<bb 35>:
  mmr_off_78 = mmr_off_6;

<bb 36>:
  # mmr_on_11 = PHI <mmr_on_77(34), mmr_off_78(35)>
  D.41465_79 = t38_options_23(D)->T38FaxTranscodingJBIG;
  if (D.41465_79 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  jbig_on_80 = jbig_on_7;
  goto <bb 39>;

<bb 38>:
  jbig_off_81 = jbig_off_8;

<bb 39>:
  # jbig_on_12 = PHI <jbig_on_80(37), jbig_off_81(38)>
  D.41469_82 = t38_options_23(D)->T38FaxRateManagement;
  D.41470_83 = t38_options_23(D)->T38FaxUdpEC;
  switch_snprintf (D.41448_67, D.41450_69, "m=image %d udptl t38\na=T38FaxVersion:%d\na=T38MaxBitRate:%d\n%s%s%sa=T38FaxRateManagement:%s\n%s%sa=T38FaxUdpEC:%s\n", port_2, D.41452_71, D.41453_72, bit_removal_on_10, mmr_on_11, jbig_on_12, D.41469_82, &max_buf, &max_data, D.41470_83);
  if (insist_84(D) != 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  D.41473_85 = strlen (&buf);
  D.41474_86 = &buf + D.41473_85;
  D.41475_87 = strlen (&buf);
  D.41476_88 = 2048 - D.41475_87;
  switch_snprintf (D.41474_86, D.41476_88, "m=audio 0 RTP/AVP 19\n");

<bb 41>:
  switch_core_media_set_local_sdp (session_20(D), &buf, 1);
  D.41407_89 = session_20(D)->channel;
  D.41477_90 = switch_channel_get_name (D.41407_89);
  D.41406_91 = smh_21->mparams;
  D.41478_92 = D.41406_91->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7113, session_20(D), 7, "%s image media sdp:\n%s\n", D.41477_90, D.41478_92);

<bb 42>:
  return;

}



;; Function switch_core_media_patch_sdp (switch_core_media_patch_sdp)

Try : D.48218_293(P293) & D.48220_290(P290) --> P293 D.48218
Try : D.41212_29(P29) & D.48218_293(P293) --> P293 D.48218
Try : D.48222_294(P294) & D.48224_292(P292) --> P294 D.48222
Try : D.41232_46(P46) & D.48222_294(P294) --> P294 D.48222
Try : q_61(P61) & new_sdp_56(P56) : 2 different USER vars. No coalesce.
Try : family_113(P113) & iftmp.19_18(P18) --> P113 family
Try : iftmp.16_17(P17) & iftmp.16_75(P75) : Same root, coalesced --> P17.
Try : iftmp.16_17(P17) & iftmp.16_76(P76) : Same root, coalesced --> P17.
Try : p_1(P1) & p_77(P77) : Same root, coalesced --> P1.
Try : p_1(P1) & p_97(P97) : Same root, coalesced --> P1.
Try : iftmp.19_18(P113) & iftmp.19_111(P111) --> P113 family
Try : iftmp.19_18(P113) & iftmp.19_112(P112) --> P113 family
Try : p_2(P2) & p_153(P153) : Same root, coalesced --> P2.
Try : p_2(P2) & p_165(P165) : Same root, coalesced --> P2.
Try : p_3(P3) & p_182(P182) : Same root, coalesced --> P3.
Try : p_3(P3) & p_194(P194) : Same root, coalesced --> P3.
Try : p_4(P4) & p_107(P107) : Same root, coalesced --> P4.
Try : p_4(P4) & p_202(P202) : Same root, coalesced --> P4.
Try : p_4(P4) & p_1(P1) : Same root, coalesced --> P4.
Try : p_4(P4) & p_5(P5) : Same root, coalesced --> P4.
Try : p_4(P4) & p_5(P4) : Already coalesced.
Try : p_4(P4) & p_3(P3) : Same root, coalesced --> P4.
Try : p_4(P4) & p_5(P4) : Already coalesced.
Try : p_4(P4) & p_5(P4) : Already coalesced.
Try : p_4(P4) & p_2(P2) : Same root, coalesced --> P4.
Try : p_4(P4) & p_141(P141) : Same root, coalesced --> P4.
Try : q_6(P6) & q_133(P133) : Same root, coalesced --> P6.
Try : q_6(P6) & q_201(P201) : Same root, coalesced --> P6.
Try : q_6(P6) & q_84(P84) : Same root, coalesced --> P6.
Try : q_6(P6) & q_7(P7) : Same root, coalesced --> P6.
Try : q_6(P6) & q_7(P6) : Already coalesced.
Try : q_6(P6) & q_188(P188) : Same root, coalesced --> P6.
Try : q_6(P6) & q_7(P6) : Already coalesced.
Try : q_6(P6) & q_7(P6) : Already coalesced.
Try : q_6(P6) & q_159(P159) : Same root, coalesced --> P6.
Try : q_6(P6) & q_148(P148) : Same root, coalesced --> P6.
Try : has_video_8(P8) & has_video_9(P9) : Same root, coalesced --> P8.
Try : has_video_8(P8) & has_video_8(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_195(P195) : Same root, coalesced --> P8.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_video_8(P8) & has_video_9(P8) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P11) : Same root, coalesced --> P10.
Try : has_audio_10(P10) & has_audio_10(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_10(P10) & has_audio_166(P166) : Same root, coalesced --> P10.
Try : has_audio_10(P10) & has_audio_11(P10) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P14) : Same root, coalesced --> P13.
Try : has_ip_13(P13) & has_ip_13(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_98(P98) : Same root, coalesced --> P13.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_13(P13) & has_ip_14(P13) : Already coalesced.
Try : p_5(P4) & p_60(P60) : Same root, coalesced --> P4.
Try : p_5(P4) & p_207(P207) : Same root, coalesced --> P4.
Try : q_7(P6) & q_61(P61) : Same root, coalesced --> P6.
Try : q_7(P6) & q_206(P206) : Same root, coalesced --> P6.
Try : has_video_9(P8) & has_video_19(P19) : Same root, coalesced --> P8.
Try : has_video_9(P8) & has_video_8(P8) : Already coalesced.
Try : has_audio_11(P10) & has_audio_20(P20) : Same root, coalesced --> P10.
Try : has_audio_11(P10) & has_audio_10(P10) : Already coalesced.
Try : has_ip_14(P13) & has_ip_21(P21) : Same root, coalesced --> P13.
Try : has_ip_14(P13) & has_ip_13(P13) : Already coalesced.
Try : has_audio_12(P12) & has_audio_11(P10) : Same root, coalesced --> P10.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_10(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_10(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_10(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_10(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_audio_12(P10) & has_audio_11(P10) : Already coalesced.
Try : has_ip_15(P15) & has_ip_14(P13) : Same root, coalesced --> P13.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_13(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_13(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_13(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_13(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : has_ip_15(P13) & has_ip_14(P13) : Already coalesced.
Try : bad_16(P16) & bad_67(P67) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_68(P68) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_96(P96) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_102(P102) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_136(P136) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_154(P154) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_156(P156) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_160(P160) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_164(P164) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_183(P183) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_185(P185) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_189(P189) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_193(P193) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_198(P198) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_199(P199) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_203(P203) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_204(P204) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_22(P22) : Same root, coalesced --> P16.
Try : bad_16(P16) & bad_22(P16) : Already coalesced.

Partition map 

Partition 4 (p_4 - 1 2 3 4 5 60 77 97 107 141 153 165 182 194 202 207 )
Partition 6 (q_6 - 6 7 61 84 133 148 159 188 201 206 )
Partition 8 (has_video_8 - 8 9 19 195 )
Partition 10 (has_audio_10 - 10 11 12 20 166 )
Partition 13 (has_ip_13 - 13 14 15 21 98 )
Partition 16 (bad_16 - 16 22 67 68 96 102 136 154 156 160 164 183 185 189 193 198 199 203 204 )
Partition 17 (iftmp.16_17 - 17 75 76 )
Partition 23 (session_23(D) - 23 )
Partition 24 (smh_24 - 24 )
Partition 25 (a_engine_25 - 25 )
Partition 26 (v_engine_26 - 26 )
Partition 27 (D.41210_27 - 27 )
Partition 28 (D.41211_28 - 28 )
Partition 30 (D.41210_30 - 30 )
Partition 31 (D.41211_31 - 31 )
Partition 32 (D.41215_32 - 32 )
Partition 33 (len_33 - 33 )
Partition 34 (D.41210_34 - 34 )
Partition 35 (D.41216_35 - 35 )
Partition 36 (D.41217_36 - 36 )
Partition 37 (D.41222_37 - 37 )
Partition 38 (D.41223_38 - 38 )
Partition 39 (D.41210_39 - 39 )
Partition 40 (D.41211_40 - 40 )
Partition 41 (D.41226_41 - 41 )
Partition 42 (D.41210_42 - 42 )
Partition 43 (D.41211_43 - 43 )
Partition 44 (D.41228_44 - 44 )
Partition 45 (D.41231_45 - 45 )
Partition 47 (D.41234_47 - 47 )
Partition 48 (D.41235_48 - 48 )
Partition 49 (D.41222_49 - 49 )
Partition 50 (D.41238_50 - 50 )
Partition 51 (D.41239_51 - 51 )
Partition 52 (D.41240_52 - 52 )
Partition 53 (D.41239_53 - 53 )
Partition 54 (D.41239_54 - 54 )
Partition 55 (D.41239_55 - 55 )
Partition 56 (new_sdp_56 - 56 )
Partition 57 (D.41234_57 - 57 )
Partition 58 (D.41241_58 - 58 )
Partition 59 (D.41210_59 - 59 )
Partition 62 (D.41242_62 - 62 )
Partition 63 (pe_63 - 63 )
Partition 64 (D.41243_64 - 64 )
Partition 65 (qe_65 - 65 )
Partition 66 (D.41264_66 - 66 )
Partition 69 (D.41231_69 - 69 )
Partition 70 (D.41251_70 - 70 )
Partition 71 (p_71 - 71 )
Partition 72 (q_72 - 72 )
Partition 73 (D.41254_73 - 73 )
Partition 74 (D.41255_74 - 74 )
Partition 78 (q_78 - 78 )
Partition 79 (D.41254_79 - 79 )
Partition 80 (D.41254_80 - 80 )
Partition 81 (D.41259_81 - 81 )
Partition 82 (D.41254_82 - 82 )
Partition 83 (D.41260_83 - 83 )
Partition 85 (D.41264_85 - 85 )
Partition 86 (D.41266_86 - 86 )
Partition 87 (D.41267_87 - 87 )
Partition 88 (D.41268_88 - 88 )
Partition 89 (D.41269_89 - 89 )
Partition 90 (D.41270_90 - 90 )
Partition 91 (D.41264_91 - 91 )
Partition 92 (D.41264_92 - 92 )
Partition 93 (D.41273_93 - 93 )
Partition 94 (D.41264_94 - 94 )
Partition 95 (D.41275_95 - 95 )
Partition 99 (D.41276_99 - 99 )
Partition 100 (oe_100 - 100 )
Partition 101 (family_101 - 101 )
Partition 103 (oe.17_103 - 103 )
Partition 104 (p.18_104 - 104 )
Partition 105 (D.41285_105 - 105 )
Partition 106 (len_106 - 106 )
Partition 108 (D.41210_108 - 108 )
Partition 109 (D.41287_109 - 109 )
Partition 110 (D.41288_110 - 110 )
Partition 113 (family_113 - 18 111 112 113 )
Partition 114 (D.41292_114 - 114 )
Partition 115 (D.41295_115 - 115 )
Partition 116 (D.41296_116 - 116 )
Partition 117 (D.41297_117 - 117 )
Partition 118 (D.41298_118 - 118 )
Partition 119 (D.41299_119 - 119 )
Partition 120 (D.41292_120 - 120 )
Partition 121 (D.41299_121 - 121 )
Partition 122 (D.41302_122 - 122 )
Partition 123 (D.41303_123 - 123 )
Partition 124 (D.41210_124 - 124 )
Partition 125 (D.41304_125 - 125 )
Partition 126 (D.41292_126 - 126 )
Partition 127 (D.41299_127 - 127 )
Partition 128 (D.41210_128 - 128 )
Partition 129 (D.41287_129 - 129 )
Partition 130 (D.41305_130 - 130 )
Partition 131 (D.41306_131 - 131 )
Partition 132 (D.41307_132 - 132 )
Partition 134 (D.41309_134 - 134 )
Partition 135 (se_135 - 135 )
Partition 137 (se.20_137 - 137 )
Partition 138 (p.18_138 - 138 )
Partition 139 (D.41317_139 - 139 )
Partition 140 (len_140 - 140 )
Partition 142 (D.41318_142 - 142 )
Partition 143 (D.41210_143 - 143 )
Partition 144 (D.41304_144 - 144 )
Partition 145 (D.41319_145 - 145 )
Partition 146 (D.41320_146 - 146 )
Partition 147 (D.41321_147 - 147 )
Partition 149 (D.41326_149 - 149 )
Partition 150 (D.41328_150 - 150 )
Partition 151 (D.41329_151 - 151 )
Partition 152 (D.41330_152 - 152 )
Partition 155 (q_155 - 155 )
Partition 157 (D.41336_157 - 157 )
Partition 158 (D.41337_158 - 158 )
Partition 161 (D.41264_161 - 161 )
Partition 162 (D.41264_162 - 162 )
Partition 163 (D.41344_163 - 163 )
Partition 167 (D.41345_167 - 167 )
Partition 168 (D.41329_168 - 168 )
Partition 169 (D.41330_169 - 169 )
Partition 170 (D.41352_170 - 170 )
Partition 171 (D.41352_171 - 171 )
Partition 172 (D.41352_172 - 172 )
Partition 173 (D.41352_173 - 173 )
Partition 174 (D.41353_174 - 174 )
Partition 175 (D.41354_175 - 175 )
Partition 176 (D.41222_176 - 176 )
Partition 177 (D.41355_177 - 177 )
Partition 178 (D.41358_178 - 178 )
Partition 179 (D.41359_179 - 179 )
Partition 180 (D.41222_180 - 180 )
Partition 181 (D.41222_181 - 181 )
Partition 184 (q_184 - 184 )
Partition 186 (D.41366_186 - 186 )
Partition 187 (D.41367_187 - 187 )
Partition 190 (D.41264_190 - 190 )
Partition 191 (D.41264_191 - 191 )
Partition 192 (D.41344_192 - 192 )
Partition 196 (D.41264_196 - 196 )
Partition 197 (D.41264_197 - 197 )
Partition 200 (D.41264_200 - 200 )
Partition 205 (D.41264_205 - 205 )
Partition 208 (D.41222_208 - 208 )
Partition 209 (D.41389_209 - 209 )
Partition 210 (D.41222_210 - 210 )
Partition 211 (D.41391_211 - 211 )
Partition 212 (D.41393_212 - 212 )
Partition 213 (D.41222_213 - 213 )
Partition 214 (D.41396_214 - 214 )
Partition 215 (D.41210_215 - 215 )
Partition 216 (D.41211_216 - 216 )
Partition 217 (D.41222_217 - 217 )
Partition 218 (D.41397_218 - 218 )
Partition 219 (D.41210_219 - 219 )
Partition 220 (D.41211_220 - 220 )
Partition 221 (D.41222_221 - 221 )
Partition 222 (D.41392_222 - 222 )
Partition 223 (.MEM_223 - 223 )
Partition 224 (.MEM_224 - 224 )
Partition 225 (.MEM_225 - 225 )
Partition 226 (.MEM_226 - 226 )
Partition 227 (.MEM_227 - 227 )
Partition 228 (.MEM_228 - 228 )
Partition 229 (.MEM_229 - 229 )
Partition 230 (.MEM_230 - 230 )
Partition 231 (.MEM_231 - 231 )
Partition 232 (.MEM_232 - 232 )
Partition 233 (.MEM_233(D) - 233 )
Partition 234 (.MEM_234 - 234 )
Partition 235 (.MEM_235 - 235 )
Partition 236 (.MEM_236 - 236 )
Partition 237 (.MEM_237 - 237 )
Partition 238 (.MEM_238 - 238 )
Partition 239 (.MEM_239 - 239 )
Partition 240 (.MEM_240 - 240 )
Partition 241 (.MEM_241 - 241 )
Partition 242 (.MEM_242 - 242 )
Partition 243 (.MEM_243 - 243 )
Partition 244 (.MEM_244 - 244 )
Partition 245 (.MEM_245 - 245 )
Partition 246 (.MEM_246 - 246 )
Partition 247 (.MEM_247 - 247 )
Partition 248 (.MEM_248 - 248 )
Partition 249 (.MEM_249 - 249 )
Partition 250 (.MEM_250 - 250 )
Partition 251 (.MEM_251 - 251 )
Partition 252 (.MEM_252 - 252 )
Partition 253 (.MEM_253 - 253 )
Partition 254 (.MEM_254 - 254 )
Partition 255 (.MEM_255 - 255 )
Partition 256 (.MEM_256 - 256 )
Partition 257 (.MEM_257 - 257 )
Partition 258 (.MEM_258 - 258 )
Partition 259 (.MEM_259 - 259 )
Partition 260 (.MEM_260 - 260 )
Partition 261 (.MEM_261 - 261 )
Partition 262 (.MEM_262 - 262 )
Partition 263 (.MEM_263 - 263 )
Partition 264 (.MEM_264 - 264 )
Partition 265 (.MEM_265 - 265 )
Partition 266 (.MEM_266 - 266 )
Partition 267 (.MEM_267 - 267 )
Partition 268 (.MEM_268 - 268 )
Partition 269 (.MEM_269 - 269 )
Partition 270 (.MEM_270 - 270 )
Partition 271 (.MEM_271 - 271 )
Partition 272 (.MEM_272 - 272 )
Partition 273 (.MEM_273 - 273 )
Partition 274 (.MEM_274 - 274 )
Partition 275 (.MEM_275 - 275 )
Partition 276 (.MEM_276 - 276 )
Partition 277 (.MEM_277 - 277 )
Partition 278 (.MEM_278 - 278 )
Partition 279 (.MEM_279 - 279 )
Partition 280 (.MEM_280 - 280 )
Partition 281 (.MEM_281 - 281 )
Partition 282 (.MEM_282 - 282 )
Partition 283 (.MEM_283 - 283 )
Partition 284 (.MEM_284 - 284 )
Partition 285 (.MEM_285 - 285 )
Partition 286 (.MEM_286 - 286 )
Partition 287 (.MEM_287 - 287 )
Partition 288 (.MEM_288 - 288 )
Partition 289 (D.48219_289 - 289 )
Partition 291 (D.48223_291 - 291 )
Partition 293 (D.48218_293 - 29 290 293 )
Partition 294 (D.48222_294 - 46 292 294 )

Coalesced iftmp.19_18 to family_113
Coalesced D.41212_29 to D.48218_293
Coalesced D.41232_46 to D.48222_294
Coalesced iftmp.19_111 to family_113
Coalesced iftmp.19_112 to family_113
Coalesced D.48220_290 to D.48218_293
Coalesced D.48224_292 to D.48222_294
Scope blocks after cleanups:

{ Scope block #0 
  switch_size_t len;
  char * p;
  char * q;
  char * pe;
  char * qe;
  int has_video;
  int has_audio;
  int has_ip;
  char port_buf[25];
  char vport_buf[25];
  char * new_sdp;
  int bad;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_patch_sdp";
  static const char __func__[28] = "switch_core_media_patch_sdp";
  void end = <<< error >>>; (unused)

  { Scope block #447 src/switch_core_media.c:7157 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #448 Originating from :#0 

    }

  }

  { Scope block #449 src/switch_core_media.c:7143 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #450 Originating from :#0 

    }

  }

  { Scope block #451 
    char * oe;
    switch_size_t len;

    { Scope block #452 
      const char * family;
      char o_line[1024];

    }

  }

  { Scope block #453 
    char * se;
    switch_size_t len;

    { Scope block #454 
      char s_line[1024];

    }

  }

}
switch_core_media_patch_sdp (struct switch_core_session_t * session)
{
  const char D.48223;
  int D.48222;
  const char D.48219;
  int D.48218;
  char s_line[1024];
  switch_size_t len;
  char * se;
  char o_line[1024];
  const char * family;
  switch_size_t len;
  char * oe;
  static const char __func__[28] = "switch_core_media_patch_sdp";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_patch_sdp";
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  int bad;
  char * new_sdp;
  char vport_buf[25];
  char port_buf[25];
  int has_ip;
  int has_audio;
  int has_video;
  char * qe;
  char * pe;
  char * q;
  char * p;
  switch_size_t len;
  char * D.41397;
  char * D.41396;
  int D.41393;
  char * D.41392;
  switch_channel_state_t D.41391;
  int D.41389;
  size_t D.41367;
  size_t D.41366;
  uint8_t D.41359;
  struct switch_rtp_t * D.41358;
  int D.41355;
  int D.41354;
  switch_port_t D.41353;
  struct payload_map_t * D.41352;
  int D.41345;
  char D.41344;
  size_t D.41337;
  size_t D.41336;
  char D.41330;
  char * D.41329;
  int D.41328;
  int D.41326;
  unsigned int D.41321;
  size_t D.41320;
  size_t D.41319;
  const char * restrict D.41318;
  int D.41317;
  int se.20;
  int D.41309;
  unsigned int D.41307;
  size_t D.41306;
  size_t D.41305;
  char * D.41304;
  const char * restrict D.41303;
  uint32_t D.41302;
  uint32_t D.41299;
  unsigned int D.41298;
  unsigned int D.41297;
  unsigned int D.41296;
  time_t D.41295;
  uint32_t D.41292;
  char * D.41288;
  char * D.41287;
  int D.41285;
  int p.18;
  int oe.17;
  int D.41276;
  char D.41275;
  char D.41273;
  _Bool D.41270;
  _Bool D.41269;
  _Bool D.41268;
  char D.41267;
  char D.41266;
  char D.41264;
  size_t D.41260;
  size_t D.41259;
  char * D.41255;
  char * D.41254;
  char[3] * iftmp.16;
  int D.41251;
  unsigned int D.41243;
  size_t D.41242;
  int D.41241;
  char * D.41240;
  struct payload_map_t * D.41239;
  char * D.41238;
  switch_status_t D.41235;
  switch_port_t D.41234;
  char * D.41231;
  const char * D.41228;
  const char * D.41226;
  uint32_t D.41223;
  struct switch_channel_t * D.41222;
  unsigned int D.41217;
  switch_core_media_NDLB_t D.41216;
  size_t D.41215;
  char * D.41211;
  struct switch_core_media_params_t * D.41210;

<bb 2>:
  has_video_19 = 0;
  # DEBUG has_video => has_video_19
  has_audio_20 = 0;
  # DEBUG has_audio => has_audio_20
  has_ip_21 = 0;
  # DEBUG has_ip => has_ip_21
  port_buf = "";
  vport_buf = "";
  bad_22 = 0;
  # DEBUG bad => bad_22
  if (session_23(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7134, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_24 = session_23(D)->media_handle;
  # DEBUG smh => smh_24
  if (smh_24 == 0B)
    goto <bb 117>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_25 = &smh_24->engines;
  # DEBUG a_engine => a_engine_25
  v_engine_26 = &smh_24->engines[1];
  # DEBUG v_engine => v_engine_26
  D.41210_27 = smh_24->mparams;
  D.41211_28 = D.41210_27->local_sdp_str;
  # DEBUG s => D.41211_28
  if (D.41211_28 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

<bb 6>:
  D.48219_289 = MEM[(const char *)D.41211_28];
  if (D.48219_289 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:

<bb 8>:
  # D.48218_290 = PHI <1(5), 1(6), 0(7)>
  D.48218_293 = D.48218_290;
  D.48218_29 = D.48218_293;
  if (D.48218_29 != 0)
    goto <bb 117>;
  else
    goto <bb 9>;

<bb 9>:
  D.41210_30 = smh_24->mparams;
  D.41211_31 = D.41210_30->local_sdp_str;
  D.41215_32 = strlen (D.41211_31);
  len_33 = D.41215_32 * 2;
  # DEBUG len => len_33
  D.41210_34 = smh_24->mparams;
  D.41216_35 = D.41210_34->ndlb;
  D.41217_36 = D.41216_35 & 32;
  if (D.41217_36 == 0)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 10>:
  D.41222_37 = session_23(D)->channel;
  D.41223_38 = switch_channel_test_flag (D.41222_37, 1);
  if (D.41223_38 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.41210_39 = smh_24->mparams;
  D.41211_40 = D.41210_39->local_sdp_str;
  D.41226_41 = switch_stristr ("sendonly", D.41211_40);
  if (D.41226_41 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:
  D.41210_42 = smh_24->mparams;
  D.41211_43 = D.41210_42->local_sdp_str;
  D.41228_44 = switch_stristr ("0.0.0.0", D.41211_43);
  if (D.41228_44 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7152, session_23(D), 7, "Skip patch on hold SDP\n");
  goto <bb 117>;

<bb 14>:
  D.41231_45 = a_engine_25->local_sdp_ip;
  # DEBUG s => D.41231_45
  if (D.41231_45 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;

<bb 15>:
  D.48223_291 = MEM[(const char *)D.41231_45];
  if (D.48223_291 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:

<bb 17>:
  # D.48222_292 = PHI <1(14), 1(15), 0(16)>
  D.48222_294 = D.48222_292;
  D.48222_46 = D.48222_294;
  if (D.48222_46 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;

<bb 18>:
  D.41234_47 = a_engine_25->local_sdp_port;
  if (D.41234_47 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  D.41235_48 = switch_core_media_choose_port (session_23(D), 0, 1);
  if (D.41235_48 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41222_49 = session_23(D)->channel;
  D.41238_50 = switch_channel_get_name (D.41222_49);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7159, session_23(D), 3, "%s I/O Error\n", D.41238_50);
  goto <bb 117>;

<bb 21>:
  D.41239_51 = a_engine_25->cur_payload_map;
  D.41240_52 = switch_core_perform_session_strdup (session_23(D), "PROXY", "src/switch_core_media.c", &__func__, 7163);
  D.41239_51->iananame = D.41240_52;
  D.41239_53 = a_engine_25->cur_payload_map;
  D.41239_53->rm_rate = 8000;
  D.41239_54 = a_engine_25->cur_payload_map;
  D.41239_54->adv_rm_rate = 8000;
  D.41239_55 = a_engine_25->cur_payload_map;
  D.41239_55->codec_ms = 20;

<bb 22>:
  new_sdp_56 = switch_core_perform_session_alloc (session_23(D), len_33, "src/switch_core_media.c", &__func__, 7169);
  # DEBUG new_sdp => new_sdp_56
  D.41234_57 = a_engine_25->local_sdp_port;
  D.41241_58 = (int) D.41234_57;
  switch_snprintf (&port_buf, 25, "%u", D.41241_58);
  D.41210_59 = smh_24->mparams;
  p_60 = D.41210_59->local_sdp_str;
  # DEBUG p => p_60
  q_61 = new_sdp_56;
  # DEBUG q => q_61
  D.41242_62 = strlen (p_60);
  pe_63 = p_60 + D.41242_62;
  # DEBUG pe => pe_63
  D.41243_64 = len_33 + -1;
  qe_65 = q_61 + D.41243_64;
  # DEBUG qe => qe_65
  goto <bb 108>;

<bb 23>:
  if (p_5 >= pe_63)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  bad_67 = 1;
  # DEBUG bad => bad_67
  goto <bb 110> (end);

<bb 25>:
  if (q_7 >= qe_65)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  bad_68 = 2;
  # DEBUG bad => bad_68
  goto <bb 110> (end);

<bb 27>:
  D.41231_69 = a_engine_25->local_sdp_ip;
  if (D.41231_69 != 0B)
    goto <bb 28>;
  else
    goto <bb 43>;

<bb 28>:
  D.41251_70 = strncmp ("c=IN IP", p_5, 7);
  if (D.41251_70 == 0)
    goto <bb 29>;
  else
    goto <bb 43>;

<bb 29>:
  __builtin_strncpy (q_7, p_5, 7);
  p_71 = p_5 + 7;
  # DEBUG p => p_71
  q_72 = q_7 + 7;
  # DEBUG q => q_72
  D.41254_73 = a_engine_25->adv_sdp_ip;
  D.41255_74 = __builtin_strchr (D.41254_73, 58);
  if (D.41255_74 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  iftmp.16_75 = "6 ";
  goto <bb 32>;

<bb 31>:
  iftmp.16_76 = "4 ";

<bb 32>:
  # iftmp.16_17 = PHI <iftmp.16_75(30), iftmp.16_76(31)>
  __builtin_memcpy (q_72, iftmp.16_17, 2);
  p_77 = p_71 + 2;
  # DEBUG p => p_77
  q_78 = q_72 + 2;
  # DEBUG q => q_78
  D.41254_79 = a_engine_25->adv_sdp_ip;
  D.41254_80 = a_engine_25->adv_sdp_ip;
  D.41259_81 = strlen (D.41254_80);
  __builtin_strncpy (q_78, D.41254_80, D.41259_81);
  D.41254_82 = a_engine_25->adv_sdp_ip;
  D.41260_83 = strlen (D.41254_82);
  q_84 = q_78 + D.41260_83;
  # DEBUG q => q_84
  goto <bb 36>;

<bb 33>:
  if (p_1 >= pe_63)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  bad_96 = 3;
  # DEBUG bad => bad_96
  goto <bb 110> (end);

<bb 35>:
  p_97 = p_1 + 1;
  # DEBUG p => p_97

<bb 36>:
  # p_1 = PHI <p_77(32), p_97(35)>
  # DEBUG p => p_1
  if (p_1 != 0B)
    goto <bb 37>;
  else
    goto <bb 42>;

<bb 37>:
  D.41264_85 = *p_1;
  if (D.41264_85 != 0)
    goto <bb 38>;
  else
    goto <bb 42>;

<bb 38>:
  D.41266_86 = *p_1;
  D.41267_87 = D.41266_86 + 208;
  D.41268_88 = D.41267_87 <= 9;
  D.41269_89 = D.41266_86 == 46;
  D.41270_90 = D.41268_88 || D.41269_89;
  if (D.41270_90 != 0)
    goto <bb 33>;
  else
    goto <bb 39>;

<bb 39>:
  D.41264_91 = *p_1;
  if (D.41264_91 == 58)
    goto <bb 33>;
  else
    goto <bb 40>;

<bb 40>:
  D.41264_92 = *p_1;
  D.41273_93 = D.41264_92 + 191;
  if (D.41273_93 <= 5)
    goto <bb 33>;
  else
    goto <bb 41>;

<bb 41>:
  D.41264_94 = *p_1;
  D.41275_95 = D.41264_94 + 159;
  if (D.41275_95 <= 5)
    goto <bb 33>;
  else
    goto <bb 42>;

<bb 42>:
  has_ip_98 = has_ip_14 + 1;
  # DEBUG has_ip => has_ip_98
  goto <bb 100>;

<bb 43>:
  D.41276_99 = strncmp ("o=", p_5, 2);
  if (D.41276_99 == 0)
    goto <bb 44>;
  else
    goto <bb 55>;

<bb 44>:
  oe_100 = __builtin_strchr (p_5, 10);
  # DEBUG oe => oe_100
  if (oe_100 != 0B)
    goto <bb 45>;
  else
    goto <bb 100>;

<bb 45>:
  family_101 = "IP4";
  # DEBUG family => family_101
  o_line = "";
  if (oe_100 >= pe_63)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  bad_102 = 5;
  # DEBUG bad => bad_102
  goto <bb 110> (end);

<bb 47>:
  oe.17_103 = (int) oe_100;
  p.18_104 = (int) p_5;
  D.41285_105 = oe.17_103 - p.18_104;
  len_106 = (switch_size_t) D.41285_105;
  # DEBUG len => len_106
  p_107 = p_5 + len_106;
  # DEBUG p => p_107
  D.41210_108 = smh_24->mparams;
  D.41287_109 = D.41210_108->sipip;
  D.41288_110 = __builtin_strchr (D.41287_109, 58);
  if (D.41288_110 != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  family_111 = "IP6";
  goto <bb 50>;

<bb 49>:
  family_112 = "IP4";

<bb 50>:
  # family_18 = PHI <family_111(48), family_112(49)>
  family_113 = family_18;
  # DEBUG family => family_113
  D.41292_114 = smh_24->owner_id;
  if (D.41292_114 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.41295_115 = switch_epoch_time_now (0B);
  D.41296_116 = (unsigned int) D.41295_115;
  D.41297_117 = D.41296_116 * 31821;
  D.41298_118 = D.41297_117 + 13849;
  smh_24->owner_id = D.41298_118;

<bb 52>:
  D.41299_119 = smh_24->session_id;
  if (D.41299_119 == 0)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  D.41292_120 = smh_24->owner_id;
  smh_24->session_id = D.41292_120;

<bb 54>:
  D.41299_121 = smh_24->session_id;
  D.41302_122 = D.41299_121 + 1;
  smh_24->session_id = D.41302_122;
  D.41303_123 = (const char * restrict) &"o=%s %010u %010u IN %s %s\n"[0];
  D.41210_124 = smh_24->mparams;
  D.41304_125 = D.41210_124->sdp_username;
  D.41292_126 = smh_24->owner_id;
  D.41299_127 = smh_24->session_id;
  D.41210_128 = smh_24->mparams;
  D.41287_129 = D.41210_128->sipip;
  snprintf (&o_line, 1024, D.41303_123, D.41304_125, D.41292_126, D.41299_127, family_113, D.41287_129);
  D.41305_130 = strlen (&o_line);
  __builtin_strncpy (q_7, &o_line, D.41305_130);
  D.41306_131 = strlen (&o_line);
  D.41307_132 = D.41306_131 + -1;
  q_133 = q_7 + D.41307_132;
  # DEBUG q => q_133
  goto <bb 100>;

<bb 55>:
  D.41309_134 = strncmp ("s=", p_5, 2);
  if (D.41309_134 == 0)
    goto <bb 56>;
  else
    goto <bb 60>;

<bb 56>:
  se_135 = __builtin_strchr (p_5, 10);
  # DEBUG se => se_135
  if (se_135 != 0B)
    goto <bb 57>;
  else
    goto <bb 100>;

<bb 57>:
  s_line = "";
  if (se_135 >= pe_63)
    goto <bb 58>;
  else
    goto <bb 59>;

<bb 58>:
  bad_136 = 5;
  # DEBUG bad => bad_136
  goto <bb 110> (end);

<bb 59>:
  se.20_137 = (int) se_135;
  p.18_138 = (int) p_5;
  D.41317_139 = se.20_137 - p.18_138;
  len_140 = (switch_size_t) D.41317_139;
  # DEBUG len => len_140
  p_141 = p_5 + len_140;
  # DEBUG p => p_141
  D.41318_142 = (const char * restrict) &"s=%s\n"[0];
  D.41210_143 = smh_24->mparams;
  D.41304_144 = D.41210_143->sdp_username;
  snprintf (&s_line, 1024, D.41318_142, D.41304_144);
  D.41319_145 = strlen (&s_line);
  __builtin_strncpy (q_7, &s_line, D.41319_145);
  D.41320_146 = strlen (&s_line);
  D.41321_147 = D.41320_146 + -1;
  q_148 = q_7 + D.41321_147;
  # DEBUG q => q_148
  goto <bb 100>;

<bb 60>:
  D.41326_149 = strncmp ("m=audio ", p_5, 8);
  if (D.41326_149 == 0)
    goto <bb 62>;
  else
    goto <bb 61>;

<bb 61>:
  D.41328_150 = strncmp ("m=image ", p_5, 8);
  if (D.41328_150 == 0)
    goto <bb 62>;
  else
    goto <bb 76>;

<bb 62>:
  D.41329_151 = p_5 + 8;
  D.41330_152 = *D.41329_151;
  if (D.41330_152 != 48)
    goto <bb 63>;
  else
    goto <bb 76>;

<bb 63>:
  __builtin_strncpy (q_7, p_5, 8);
  p_153 = p_5 + 8;
  # DEBUG p => p_153
  if (p_153 >= pe_63)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  bad_154 = 4;
  # DEBUG bad => bad_154
  goto <bb 110> (end);

<bb 65>:
  q_155 = q_7 + 8;
  # DEBUG q => q_155
  if (q_155 >= qe_65)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  bad_156 = 5;
  # DEBUG bad => bad_156
  goto <bb 110> (end);

<bb 67>:
  D.41336_157 = strlen (&port_buf);
  __builtin_strncpy (q_155, &port_buf, D.41336_157);
  D.41337_158 = strlen (&port_buf);
  q_159 = q_155 + D.41337_158;
  # DEBUG q => q_159
  if (q_159 >= qe_65)
    goto <bb 68>;
  else
    goto <bb 72>;

<bb 68>:
  bad_160 = 6;
  # DEBUG bad => bad_160
  goto <bb 110> (end);

<bb 69>:
  if (p_2 >= pe_63)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  bad_164 = 7;
  # DEBUG bad => bad_164
  goto <bb 110> (end);

<bb 71>:
  p_165 = p_2 + 1;
  # DEBUG p => p_165

<bb 72>:
  # p_2 = PHI <p_153(67), p_165(71)>
  # DEBUG p => p_2
  if (p_2 != 0B)
    goto <bb 73>;
  else
    goto <bb 75>;

<bb 73>:
  D.41264_161 = *p_2;
  if (D.41264_161 != 0)
    goto <bb 74>;
  else
    goto <bb 75>;

<bb 74>:
  D.41264_162 = *p_2;
  D.41344_163 = D.41264_162 + 208;
  if (D.41344_163 <= 9)
    goto <bb 69>;
  else
    goto <bb 75>;

<bb 75>:
  has_audio_166 = has_audio_11 + 1;
  # DEBUG has_audio => has_audio_166
  goto <bb 100>;

<bb 76>:
  D.41345_167 = strncmp ("m=video ", p_5, 8);
  if (D.41345_167 == 0)
    goto <bb 77>;
  else
    goto <bb 100>;

<bb 77>:
  D.41329_168 = p_5 + 8;
  D.41330_169 = *D.41329_168;
  if (D.41330_169 != 48)
    goto <bb 78>;
  else
    goto <bb 100>;

<bb 78>:
  if (has_video_9 == 0)
    goto <bb 79>;
  else
    goto <bb 82>;

<bb 79>:
  switch_core_media_choose_port (session_23(D), 1, 1);
  D.41352_170 = v_engine_26->cur_payload_map;
  D.41352_170->rm_encoding = "PROXY-VID";
  D.41352_171 = v_engine_26->cur_payload_map;
  D.41352_171->rm_rate = 90000;
  D.41352_172 = v_engine_26->cur_payload_map;
  D.41352_172->adv_rm_rate = 90000;
  D.41352_173 = v_engine_26->cur_payload_map;
  D.41352_173->codec_ms = 0;
  D.41353_174 = v_engine_26->adv_sdp_port;
  D.41354_175 = (int) D.41353_174;
  switch_snprintf (&vport_buf, 25, "%u", D.41354_175);
  D.41222_176 = session_23(D)->channel;
  D.41355_177 = switch_channel_test_ready (D.41222_176, 1, 1);
  if (D.41355_177 != 0)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.41358_178 = v_engine_26->rtp_session;
  D.41359_179 = switch_rtp_ready (D.41358_178);
  if (D.41359_179 == 0)
    goto <bb 81>;
  else
    goto <bb 82>;

<bb 81>:
  D.41222_180 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_180, 98, 1);
  D.41222_181 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_181, 103, 1);
  switch_core_media_activate_rtp (session_23(D));

<bb 82>:
  __builtin_strncpy (q_7, p_5, 8);
  p_182 = p_5 + 8;
  # DEBUG p => p_182
  if (p_182 >= pe_63)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  bad_183 = 8;
  # DEBUG bad => bad_183
  goto <bb 110> (end);

<bb 84>:
  q_184 = q_7 + 8;
  # DEBUG q => q_184
  if (q_184 >= qe_65)
    goto <bb 85>;
  else
    goto <bb 86>;

<bb 85>:
  bad_185 = 9;
  # DEBUG bad => bad_185
  goto <bb 110> (end);

<bb 86>:
  D.41366_186 = strlen (&vport_buf);
  __builtin_strncpy (q_184, &vport_buf, D.41366_186);
  D.41367_187 = strlen (&vport_buf);
  q_188 = q_184 + D.41367_187;
  # DEBUG q => q_188
  if (q_188 >= qe_65)
    goto <bb 87>;
  else
    goto <bb 91>;

<bb 87>:
  bad_189 = 10;
  # DEBUG bad => bad_189
  goto <bb 110> (end);

<bb 88>:
  if (p_3 >= pe_63)
    goto <bb 89>;
  else
    goto <bb 90>;

<bb 89>:
  bad_193 = 11;
  # DEBUG bad => bad_193
  goto <bb 110> (end);

<bb 90>:
  p_194 = p_3 + 1;
  # DEBUG p => p_194

<bb 91>:
  # p_3 = PHI <p_182(86), p_194(90)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 92>;
  else
    goto <bb 94>;

<bb 92>:
  D.41264_190 = *p_3;
  if (D.41264_190 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  D.41264_191 = *p_3;
  D.41344_192 = D.41264_191 + 208;
  if (D.41344_192 <= 9)
    goto <bb 88>;
  else
    goto <bb 94>;

<bb 94>:
  has_video_195 = has_video_9 + 1;
  # DEBUG has_video => has_video_195
  goto <bb 100>;

<bb 95>:
  if (p_4 >= pe_63)
    goto <bb 96>;
  else
    goto <bb 97>;

<bb 96>:
  bad_198 = 12;
  # DEBUG bad => bad_198
  goto <bb 110> (end);

<bb 97>:
  if (q_6 >= qe_65)
    goto <bb 98>;
  else
    goto <bb 99>;

<bb 98>:
  bad_199 = 13;
  # DEBUG bad => bad_199
  goto <bb 110> (end);

<bb 99>:
  D.41264_200 = *p_4;
  *q_6 = D.41264_200;
  q_201 = q_6 + 1;
  # DEBUG q => q_201
  p_202 = p_4 + 1;
  # DEBUG p => p_202

<bb 100>:
  # p_4 = PHI <p_107(54), p_202(99), p_1(42), p_5(56), p_5(44), p_3(94), p_5(77), p_5(76), p_2(75), p_141(59)>
  # q_6 = PHI <q_133(54), q_201(99), q_84(42), q_7(56), q_7(44), q_188(94), q_7(77), q_7(76), q_159(75), q_148(59)>
  # has_video_8 = PHI <has_video_9(54), has_video_8(99), has_video_9(42), has_video_9(56), has_video_9(44), has_video_195(94), has_video_9(77), has_video_9(76), has_video_9(75), has_video_9(59)>
  # has_audio_10 = PHI <has_audio_11(54), has_audio_10(99), has_audio_11(42), has_audio_11(56), has_audio_11(44), has_audio_11(94), has_audio_11(77), has_audio_11(76), has_audio_166(75), has_audio_11(59)>
  # has_ip_13 = PHI <has_ip_14(54), has_ip_13(99), has_ip_98(42), has_ip_14(56), has_ip_14(44), has_ip_14(94), has_ip_14(77), has_ip_14(76), has_ip_14(75), has_ip_14(59)>
  # DEBUG has_ip => has_ip_13
  # DEBUG has_audio => has_audio_10
  # DEBUG has_video => has_video_8
  # DEBUG q => q_6
  # DEBUG p => p_4
  if (p_4 != 0B)
    goto <bb 101>;
  else
    goto <bb 103>;

<bb 101>:
  D.41264_196 = *p_4;
  if (D.41264_196 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;

<bb 102>:
  D.41264_197 = *p_4;
  if (D.41264_197 != 10)
    goto <bb 95>;
  else
    goto <bb 103>;

<bb 103>:
  if (p_4 >= pe_63)
    goto <bb 104>;
  else
    goto <bb 105>;

<bb 104>:
  bad_203 = 14;
  # DEBUG bad => bad_203
  goto <bb 110> (end);

<bb 105>:
  if (q_6 >= qe_65)
    goto <bb 106>;
  else
    goto <bb 107>;

<bb 106>:
  bad_204 = 15;
  # DEBUG bad => bad_204
  goto <bb 110> (end);

<bb 107>:
  D.41264_205 = *p_4;
  *q_6 = D.41264_205;
  q_206 = q_6 + 1;
  # DEBUG q => q_206
  p_207 = p_4 + 1;
  # DEBUG p => p_207

<bb 108>:
  # p_5 = PHI <p_60(22), p_207(107)>
  # q_7 = PHI <q_61(22), q_206(107)>
  # has_video_9 = PHI <has_video_19(22), has_video_8(107)>
  # has_audio_11 = PHI <has_audio_20(22), has_audio_10(107)>
  # has_ip_14 = PHI <has_ip_21(22), has_ip_13(107)>
  # DEBUG has_ip => has_ip_14
  # DEBUG has_audio => has_audio_11
  # DEBUG has_video => has_video_9
  # DEBUG q => q_7
  # DEBUG p => p_5
  if (p_5 != 0B)
    goto <bb 109>;
  else
    goto <bb 110> (end);

<bb 109>:
  D.41264_66 = *p_5;
  if (D.41264_66 != 0)
    goto <bb 23>;
  else
    goto <bb 110> (end);

  # has_audio_12 = PHI <has_audio_11(24), has_audio_11(26), has_audio_11(34), has_audio_11(46), has_audio_11(58), has_audio_11(64), has_audio_11(66), has_audio_11(68), has_audio_11(70), has_audio_11(83), has_audio_11(85), has_audio_11(87), has_audio_11(89), has_audio_10(96), has_audio_10(98), has_audio_10(104), has_audio_10(106), has_audio_11(108), has_audio_11(109)>
  # has_ip_15 = PHI <has_ip_14(24), has_ip_14(26), has_ip_14(34), has_ip_14(46), has_ip_14(58), has_ip_14(64), has_ip_14(66), has_ip_14(68), has_ip_14(70), has_ip_14(83), has_ip_14(85), has_ip_14(87), has_ip_14(89), has_ip_13(96), has_ip_13(98), has_ip_13(104), has_ip_13(106), has_ip_14(108), has_ip_14(109)>
  # bad_16 = PHI <bad_67(24), bad_68(26), bad_96(34), bad_102(46), bad_136(58), bad_154(64), bad_156(66), bad_160(68), bad_164(70), bad_183(83), bad_185(85), bad_189(87), bad_193(89), bad_198(96), bad_199(98), bad_203(104), bad_204(106), bad_22(108), bad_22(109)>
end:
  # DEBUG bad => bad_16
  # DEBUG has_ip => has_ip_15
  # DEBUG has_audio => has_audio_12
  if (bad_16 != 0)
    goto <bb 117>;
  else
    goto <bb 111>;

<bb 111>:
  D.41222_208 = session_23(D)->channel;
  D.41389_209 = switch_channel_check_signal (D.41222_208, 1);
  if (D.41389_209 != 0)
    goto <bb 113>;
  else
    goto <bb 112>;

<bb 112>:
  D.41222_210 = session_23(D)->channel;
  D.41391_211 = switch_channel_get_state (D.41222_210);
  if (D.41391_211 > 9)
    goto <bb 113>;
  else
    goto <bb 114>;

<bb 113>:
  D.41222_221 = session_23(D)->channel;
  D.41392_222 = switch_channel_get_name (D.41222_221);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7394, session_23(D), 7, "%s too late.\n", D.41392_222);
  goto <bb 117>;

<bb 114>:
  D.41393_212 = has_ip_15 | has_audio_12;
  if (D.41393_212 == 0)
    goto <bb 115>;
  else
    goto <bb 116>;

<bb 115>:
  D.41222_213 = session_23(D)->channel;
  D.41396_214 = switch_channel_get_name (D.41222_213);
  D.41210_215 = smh_24->mparams;
  D.41211_216 = D.41210_215->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7400, session_23(D), 7, "%s SDP has no audio in it.\n%s\n", D.41396_214, D.41211_216);
  goto <bb 117>;

<bb 116>:
  D.41222_217 = session_23(D)->channel;
  D.41397_218 = switch_channel_get_name (D.41222_217);
  D.41210_219 = smh_24->mparams;
  D.41211_220 = D.41210_219->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7406, session_23(D), 7, "%s Patched SDP\n---\n%s\n+++\n%s\n", D.41397_218, D.41211_220, new_sdp_56);
  switch_core_media_set_local_sdp (session_23(D), new_sdp_56, 0);

<bb 117>:
  return;

}



;; Function switch_core_media_start_udptl (switch_core_media_start_udptl)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (D.41167_3 - 3 )
Partition 4 (D.41168_4 - 4 )
Partition 5 (D.41167_5 - 5 )
Partition 6 (D.41170_6 - 6 )
Partition 7 (a_engine_7 - 7 )
Partition 8 (D.41171_8 - 8 )
Partition 9 (D.41172_9 - 9 )
Partition 10 (D.41171_10 - 10 )
Partition 11 (remote_host_11 - 11 )
Partition 12 (D.41171_12 - 12 )
Partition 13 (remote_port_13 - 13 )
Partition 14 (D.41167_14 - 14 )
Partition 15 (D.41171_15 - 15 )
Partition 16 (t38_options_16(D) - 16 )
Partition 17 (D.41178_17 - 17 )
Partition 18 (D.41179_18 - 18 )
Partition 19 (D.41180_19 - 19 )
Partition 20 (D.41181_20 - 20 )
Partition 21 (D.41184_21 - 21 )
Partition 22 (D.41178_22 - 22 )
Partition 23 (D.39841_23 - 23 )
Partition 24 (D.41178_24 - 24 )
Partition 25 (D.41184_25 - 25 )
Partition 26 (D.41189_26 - 26 )
Partition 27 (D.41171_27 - 27 )
Partition 28 (D.41178_28 - 28 )
Partition 29 (D.41184_29 - 29 )
Partition 30 (D.41190_30 - 30 )
Partition 31 (err.15_31 - 31 )
Partition 32 (D.41178_32 - 32 )
Partition 33 (D.41184_33 - 33 )
Partition 34 (D.41189_34 - 34 )
Partition 35 (D.41197_35 - 35 )
Partition 36 (D.41167_36 - 36 )
Partition 37 (D.41200_37 - 37 )
Partition 38 (D.41167_38 - 38 )
Partition 39 (val_39 - 39 )
Partition 40 (D.41204_40 - 40 )
Partition 41 (D.41171_41 - 41 )
Partition 42 (.MEM_42 - 42 )
Partition 43 (.MEM_43(D) - 43 )
Partition 44 (.MEM_44 - 44 )
Partition 45 (.MEM_45 - 45 )
Partition 46 (.MEM_46 - 46 )
Partition 47 (.MEM_47 - 47 )
Partition 48 (.MEM_48 - 48 )
Partition 49 (.MEM_49 - 49 )
Partition 50 (.MEM_50 - 50 )
Partition 51 (.MEM_51 - 51 )
Partition 52 (.MEM_52 - 52 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54 - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )

switch_core_media_start_udptl (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options)
{
  const char * val;
  const char * err;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[30] = "switch_core_media_start_udptl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_start_udptl";
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  int D.41204;
  uint32_t D.41200;
  int32_t D.41197;
  const char * err.15;
  switch_status_t D.41190;
  int D.41189;
  int D.39841;
  uint16_t D.41184;
  _Bool D.41181;
  _Bool D.41180;
  _Bool D.41179;
  const char * D.41178;
  uint8_t D.41172;
  struct switch_rtp_t * D.41171;
  switch_channel_state_t D.41170;
  int D.41168;
  struct switch_channel_t * D.41167;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7419, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;

<bb 5>:
  D.41167_3 = session_1(D)->channel;
  D.41168_4 = switch_channel_check_signal (D.41167_3, 1);
  if (D.41168_4 != 0)
    goto <bb 22>;
  else
    goto <bb 6>;

<bb 6>:
  D.41167_5 = session_1(D)->channel;
  D.41170_6 = switch_channel_get_state (D.41167_5);
  if (D.41170_6 > 9)
    goto <bb 22>;
  else
    goto <bb 7>;

<bb 7>:
  a_engine_7 = &smh_2->engines;
  # DEBUG a_engine => a_engine_7
  D.41171_8 = a_engine_7->rtp_session;
  D.41172_9 = switch_rtp_ready (D.41171_8);
  if (D.41172_9 != 0)
    goto <bb 8>;
  else
    goto <bb 22>;

<bb 8>:
  D.41171_10 = a_engine_7->rtp_session;
  remote_host_11 = switch_rtp_get_remote_host (D.41171_10);
  # DEBUG remote_host => remote_host_11
  D.41171_12 = a_engine_7->rtp_session;
  remote_port_13 = switch_rtp_get_remote_port (D.41171_12);
  # DEBUG remote_port => remote_port_13
  D.41167_14 = session_1(D)->channel;
  switch_channel_clear_flag (D.41167_14, 99);
  D.41171_15 = a_engine_7->rtp_session;
  switch_rtp_udptl_mode (D.41171_15);
  if (t38_options_16(D) == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

<bb 9>:
  D.41178_17 = t38_options_16(D)->remote_ip;
  if (D.41178_17 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7441, session_1(D), 7, "No remote address\n");
  goto <bb 22>;

<bb 11>:
  D.41179_18 = remote_host_11 != 0B;
  D.41180_19 = remote_port_13 != 0;
  D.41181_20 = D.41179_18 && D.41180_19;
  if (D.41181_20 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  D.41184_21 = t38_options_16(D)->remote_port;
  if (D.41184_21 == remote_port_13)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41178_22 = t38_options_16(D)->remote_ip;
  D.39841_23 = __builtin_strcmp (remote_host_11, D.41178_22);
  if (D.39841_23 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41178_24 = t38_options_16(D)->remote_ip;
  D.41184_25 = t38_options_16(D)->remote_port;
  D.41189_26 = (int) D.41184_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7446, session_1(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.41178_24, D.41189_26);
  goto <bb 22>;

<bb 15>:
  D.41171_27 = a_engine_7->rtp_session;
  D.41178_28 = t38_options_16(D)->remote_ip;
  D.41184_29 = t38_options_16(D)->remote_port;
  D.41190_30 = switch_rtp_set_remote_address (D.41171_27, D.41178_28, D.41184_29, 0, 1, &err);
  if (D.41190_30 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  err.15_31 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7453, session_1(D), 3, "IMAGE UDPTL REPORTS ERROR: [%s]\n", err.15_31);
  goto <bb 22>;

<bb 17>:
  D.41178_32 = t38_options_16(D)->remote_ip;
  D.41184_33 = t38_options_16(D)->remote_port;
  D.41189_34 = (int) D.41184_33;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7455, session_1(D), 7, "IMAGE UDPTL CHANGING DEST TO: [%s:%d]\n", D.41178_32, D.41189_34);
  D.41197_35 = switch_media_handle_test_media_flag (smh_2, 10);
  if (D.41197_35 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;

<bb 18>:
  D.41167_36 = session_1(D)->channel;
  D.41200_37 = switch_channel_test_flag (D.41167_36, 106);
  if (D.41200_37 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  D.41167_38 = session_1(D)->channel;
  val_39 = switch_channel_get_variable_dup (D.41167_38, "disable_udptl_auto_adjust", 1, -1);
  # DEBUG val => val_39
  if (val_39 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:
  D.41204_40 = switch_true (val_39);
  if (D.41204_40 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.41171_41 = a_engine_7->rtp_session;
  switch_rtp_set_flag (D.41171_41, 7);

<bb 22>:
  return;

}



;; Function switch_core_media_receive_message (switch_core_media_receive_message)

Try : __s1_66(P66) & s_64(P64) : 2 different USER vars. No coalesce.
Try : D.39872_103(P103) & __result_13(P13) --> P103 __result
Try : iftmp.7_104(P104) & __result_103(P103) --> P103 __result
Try : D.39873_106(P106) & iftmp.7_22(P22) --> P106 D.39873
Try : D.48228_502(P502) & D.48229_481(P481) --> P502 D.48228
Try : len_111(P111) & D.48228_502(P502) --> P502 len
Try : D.48231_504(P504) & D.48232_482(P482) --> P504 D.48231
Try : maxlen_119(P119) & D.48231_504(P504) --> P504 maxlen
Try : D.48234_506(P506) & D.48235_483(P483) --> P506 D.48234
Try : D.40913_122(P122) & D.48234_506(P506) --> P506 D.48234
Try : D.48237_507(P507) & D.48239_485(P485) --> P507 D.48237
Try : D.40942_147(P147) & D.48237_507(P507) --> P507 D.48237
Try : D.48241_508(P508) & D.48243_487(P487) --> P508 D.48241
Try : D.40946_149(P149) & D.48241_508(P508) --> P508 D.48241
Try : D.48251_514(P514) & D.48252_496(P496) --> P514 D.48251
Try : D.41068_262(P262) & D.48251_514(P514) --> P514 D.48251
Try : D.40820_325(P325) & status_3(P3) --> P325 status
Try : __result_13(P103) & __result_72(P72) : Same root, coalesced --> P103.
Try : __result_13(P103) & __result_82(P82) : Same root, coalesced --> P103.
Try : __result_13(P103) & __result_92(P92) : Same root, coalesced --> P103.
Try : __result_13(P103) & __result_102(P102) : Same root, coalesced --> P103.
Try : iftmp.7_22(P106) & iftmp.7_104(P103) --> P103 __result
Try : iftmp.7_22(P103) & iftmp.7_105(P105) --> P103 __result
Try : s_12(P12) & s_64(P64) : Same root, coalesced --> P12.
Try : s_12(P12) & s_64(P12) : Already coalesced.
Try : s_12(P12) & s_107(P107) : Same root, coalesced --> P12.
Try : qlen_6(P6) & qlen_51(P51) : Same root, coalesced --> P6.
Try : qlen_6(P6) & qlen_114(P114) : Same root, coalesced --> P6.
Try : qlen_6(P6) & qlen_115(P115) : Same root, coalesced --> P6.
Try : maxlen_5(P5) & maxlen_50(P50) : Same root, coalesced --> P5.
Try : maxlen_5(P5) & maxlen_50(P5) : Already coalesced.
Try : maxlen_5(P5) & maxlen_119(P504) : Same root, coalesced --> P504.
Try : maxlen_5(P504) & maxlen_119(P504) : Already coalesced.
Try : max_drift_10(P10) & max_drift_53(P53) : Same root, coalesced --> P10.
Try : max_drift_10(P10) & max_drift_53(P10) : Already coalesced.
Try : max_drift_10(P10) & max_drift_53(P10) : Already coalesced.
Try : max_drift_10(P10) & max_drift_123(P123) : Same root, coalesced --> P10.
Try : len_4(P4) & len_49(P49) : Same root, coalesced --> P4.
Try : len_4(P4) & len_111(P502) : Same root, coalesced --> P502.
Try : len_4(P502) & len_111(P502) : Already coalesced.
Try : qlen_7(P7) & qlen_51(P6) : Same root, coalesced --> P6.
Try : qlen_7(P6) & qlen_6(P6) : Already coalesced.
Try : qlen_7(P6) & qlen_6(P6) : Already coalesced.
Try : maxqlen_8(P8) & maxqlen_52(P52) : Same root, coalesced --> P8.
Try : maxqlen_8(P8) & maxqlen_52(P8) : Already coalesced.
Try : maxqlen_8(P8) & maxqlen_126(P126) : Same root, coalesced --> P8.
Try : max_drift_11(P11) & max_drift_53(P10) : Same root, coalesced --> P10.
Try : max_drift_11(P10) & max_drift_10(P10) : Already coalesced.
Try : max_drift_11(P10) & max_drift_10(P10) : Already coalesced.
Try : maxqlen_9(P9) & maxqlen_8(P8) : Same root, coalesced --> P8.
Try : maxqlen_9(P8) & maxqlen_127(P127) : Same root, coalesced --> P8.
Try : rtp_14(P14) & rtp_141(P141) : Same root, coalesced --> P14.
Try : rtp_14(P14) & rtp_141(P14) : Already coalesced.
Try : rtp_14(P14) & rtp_145(P145) : Same root, coalesced --> P14.
Try : direction_15(P15) & direction_142(P142) : Same root, coalesced --> P15.
Try : direction_15(P15) & direction_142(P15) : Already coalesced.
Try : direction_15(P15) & direction_144(P144) : Same root, coalesced --> P15.
Try : set_16(P16) & set_152(P152) : Same root, coalesced --> P16.
Try : set_16(P16) & set_156(P156) : Same root, coalesced --> P16.
Try : set_17(P17) & set_16(P16) : Same root, coalesced --> P16.
Try : set_17(P16) & set_160(P160) : Same root, coalesced --> P16.
Try : ok_18(P18) & ok_190(P190) : Same root, coalesced --> P18.
Try : ok_18(P18) & ok_193(P193) : Same root, coalesced --> P18.
Try : ok_19(P19) & ok_18(P18) : Same root, coalesced --> P18.
Try : ok_19(P18) & ok_18(P18) : Already coalesced.
Try : ok_19(P18) & ok_196(P196) : Same root, coalesced --> P18.
Try : ok_20(P20) & ok_201(P201) : Same root, coalesced --> P20.
Try : ok_20(P20) & ok_204(P204) : Same root, coalesced --> P20.
Try : ok_20(P20) & ok_206(P206) : Same root, coalesced --> P20.
Try : pmap_489(P489) & pmap_488(P488) : Same root, coalesced --> P489.
Try : pmap_489(P489) & pmap_490(P490) : Same root, coalesced --> P489.
Try : pmap_493(P493) & pmap_492(P492) : Same root, coalesced --> P493.
Try : pmap_493(P493) & pmap_494(P494) : Same root, coalesced --> P493.
Try : iftmp.11_23(P23) & iftmp.11_285(P285) : Same root, coalesced --> P23.
Try : iftmp.11_23(P23) & iftmp.11_286(P286) : Same root, coalesced --> P23.
Try : iftmp.12_24(P24) & iftmp.12_289(P289) : Same root, coalesced --> P24.
Try : iftmp.12_24(P24) & iftmp.12_290(P290) : Same root, coalesced --> P24.
Try : status_1(P1) & status_317(P317) : Same root, coalesced --> P1.
Try : status_1(P1) & status_25(P25) : Same root, coalesced --> P1.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_1(P1) & status_25(P1) : Already coalesced.
Try : status_2(P2) & status_25(P1) : Same root, coalesced --> P1.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_109(P109) : Same root, coalesced --> P1.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_1(P1) : Already coalesced.
Try : status_2(P1) & status_1(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_2(P1) & status_25(P1) : Already coalesced.
Try : status_3(P325) & status_2(P1) : Same root, coalesced --> P1.
Try : status_3(P1) & status_324(P324) : Same root, coalesced --> P1.
Try : D.40820_21(P21) & D.40820_28(P28) : Same root, coalesced --> P21.
Try : D.40820_21(P21) & D.40820_326(P326) : Same root, coalesced --> P21.
Try : D.40820_21(P21) & status_325(P1) --> P1 status

Partition map 

Partition 1 (status_1 - 1 2 3 21 25 28 109 317 324 325 326 )
Partition 6 (qlen_6 - 6 7 51 114 115 )
Partition 8 (maxqlen_8 - 8 9 52 126 127 )
Partition 10 (max_drift_10 - 10 11 53 123 )
Partition 12 (s_12 - 12 64 107 )
Partition 14 (rtp_14 - 14 141 145 )
Partition 15 (direction_15 - 15 142 144 )
Partition 16 (set_16 - 16 17 152 156 160 )
Partition 18 (ok_18 - 18 19 190 193 196 )
Partition 20 (ok_20 - 20 201 204 206 )
Partition 23 (iftmp.11_23 - 23 285 286 )
Partition 24 (iftmp.12_24 - 24 289 290 )
Partition 26 (session_26(D) - 26 )
Partition 27 (smh_27 - 27 )
Partition 29 (D.40823_29 - 29 )
Partition 30 (D.40824_30 - 30 )
Partition 31 (D.40823_31 - 31 )
Partition 32 (D.40826_32 - 32 )
Partition 33 (a_engine_33 - 33 )
Partition 34 (v_engine_34 - 34 )
Partition 35 (msg_35(D) - 35 )
Partition 36 (D.40827_36 - 36 )
Partition 37 (D.40823_37 - 37 )
Partition 38 (D.40828_38 - 38 )
Partition 39 (D.40823_39 - 39 )
Partition 40 (D.40831_40 - 40 )
Partition 41 (D.40831_41 - 41 )
Partition 42 (D.40834_42 - 42 )
Partition 43 (D.40835_43 - 43 )
Partition 44 (D.40838_44 - 44 )
Partition 45 (D.40834_45 - 45 )
Partition 46 (D.40834_46 - 46 )
Partition 47 (D.40834_47 - 47 )
Partition 48 (D.40842_48 - 48 )
Partition 54 (D.40845_54 - 54 )
Partition 55 (D.40845_55 - 55 )
Partition 56 (D.40848_56 - 56 )
Partition 57 (D.40834_57 - 57 )
Partition 58 (D.40845_58 - 58 )
Partition 59 (D.40851_59 - 59 )
Partition 60 (D.40834_60 - 60 )
Partition 61 (D.40845_61 - 61 )
Partition 62 (D.40854_62 - 62 )
Partition 63 (D.40845_63 - 63 )
Partition 65 (__s2_len_65 - 65 )
Partition 66 (__s1_66 - 66 )
Partition 67 (D.40862_67 - 67 )
Partition 68 (D.40863_68 - 68 )
Partition 69 (D.40864_69 - 69 )
Partition 70 (D.40865_70 - 70 )
Partition 71 (D.40866_71 - 71 )
Partition 73 (D.40867_73 - 73 )
Partition 74 (D.40868_74 - 74 )
Partition 75 (D.40869_75 - 75 )
Partition 76 (D.40872_76 - 76 )
Partition 77 (D.40873_77 - 77 )
Partition 78 (D.40874_78 - 78 )
Partition 79 (D.40875_79 - 79 )
Partition 80 (D.40876_80 - 80 )
Partition 81 (D.40877_81 - 81 )
Partition 83 (D.40878_83 - 83 )
Partition 84 (D.40868_84 - 84 )
Partition 85 (D.40879_85 - 85 )
Partition 86 (D.40882_86 - 86 )
Partition 87 (D.40883_87 - 87 )
Partition 88 (D.40884_88 - 88 )
Partition 89 (D.40885_89 - 89 )
Partition 90 (D.40886_90 - 90 )
Partition 91 (D.40887_91 - 91 )
Partition 93 (D.40888_93 - 93 )
Partition 94 (D.40868_94 - 94 )
Partition 95 (D.40889_95 - 95 )
Partition 96 (D.40892_96 - 96 )
Partition 97 (D.40893_97 - 97 )
Partition 98 (D.40894_98 - 98 )
Partition 99 (D.40895_99 - 99 )
Partition 100 (D.40896_100 - 100 )
Partition 101 (D.40897_101 - 101 )
Partition 103 (__result_103 - 13 22 72 82 92 102 103 104 105 106 )
Partition 108 (D.40834_108 - 108 )
Partition 110 (D.40845_110 - 110 )
Partition 112 (D.40903_112 - 112 )
Partition 113 (D.40904_113 - 113 )
Partition 116 (D.40845_116 - 116 )
Partition 117 (p_117 - 117 )
Partition 118 (p_118 - 118 )
Partition 120 (q_120 - 120 )
Partition 121 (q_121 - 121 )
Partition 124 (D.40903_124 - 124 )
Partition 125 (D.40904_125 - 125 )
Partition 128 (D.40834_128 - 128 )
Partition 129 (qlen.8_129 - 129 )
Partition 130 (maxqlen.9_130 - 130 )
Partition 131 (D.40922_131 - 131 )
Partition 132 (D.40923_132 - 132 )
Partition 133 (max_drift.10_133 - 133 )
Partition 134 (D.40925_134 - 134 )
Partition 135 (D.40823_135 - 135 )
Partition 136 (D.40823_136 - 136 )
Partition 137 (D.40928_137 - 137 )
Partition 138 (D.40929_138 - 138 )
Partition 139 (D.40823_139 - 139 )
Partition 140 (D.40834_140 - 140 )
Partition 143 (D.40936_143 - 143 )
Partition 146 (D.40939_146 - 146 )
Partition 148 (D.40945_148 - 148 )
Partition 150 (D.40949_150 - 150 )
Partition 151 (both_151 - 151 )
Partition 153 (D.40953_153 - 153 )
Partition 154 (D.40954_154 - 154 )
Partition 155 (D.40955_155 - 155 )
Partition 157 (D.40959_157 - 157 )
Partition 158 (D.40960_158 - 158 )
Partition 159 (D.40961_159 - 159 )
Partition 161 (D.40945_161 - 161 )
Partition 162 (D.40964_162 - 162 )
Partition 163 (D.40834_163 - 163 )
Partition 164 (D.40834_164 - 164 )
Partition 165 (D.40971_165 - 165 )
Partition 166 (D.40834_166 - 166 )
Partition 167 (D.40974_167 - 167 )
Partition 168 (ok_168 - 168 )
Partition 169 (D.40823_169 - 169 )
Partition 170 (val_170 - 170 )
Partition 171 (D.40980_171 - 171 )
Partition 172 (D.40823_172 - 172 )
Partition 173 (D.40981_173 - 173 )
Partition 174 (D.40823_174 - 174 )
Partition 175 (D.40984_175 - 175 )
Partition 176 (D.40823_176 - 176 )
Partition 177 (D.40987_177 - 177 )
Partition 178 (D.40834_178 - 178 )
Partition 179 (D.40988_179 - 179 )
Partition 180 (D.40989_180 - 180 )
Partition 181 (D.40823_181 - 181 )
Partition 182 (D.40990_182 - 182 )
Partition 183 (D.40823_183 - 183 )
Partition 184 (D.40993_184 - 184 )
Partition 185 (D.40834_185 - 185 )
Partition 186 (D.40823_186 - 186 )
Partition 187 (D.40996_187 - 187 )
Partition 188 (D.40823_188 - 188 )
Partition 189 (val_189 - 189 )
Partition 191 (D.40823_191 - 191 )
Partition 192 (D.41000_192 - 192 )
Partition 194 (D.40834_194 - 194 )
Partition 195 (D.41003_195 - 195 )
Partition 197 (D.40834_197 - 197 )
Partition 198 (D.40823_198 - 198 )
Partition 199 (D.40823_199 - 199 )
Partition 200 (D.41011_200 - 200 )
Partition 202 (D.40823_202 - 202 )
Partition 203 (val_203 - 203 )
Partition 205 (D.41016_205 - 205 )
Partition 207 (D.40834_207 - 207 )
Partition 208 (D.40823_208 - 208 )
Partition 209 (D.40834_209 - 209 )
Partition 210 (D.40834_210 - 210 )
Partition 211 (D.41020_211 - 211 )
Partition 212 (D.40988_212 - 212 )
Partition 213 (D.41023_213 - 213 )
Partition 214 (D.40988_214 - 214 )
Partition 215 (D.41026_215 - 215 )
Partition 216 (D.40823_216 - 216 )
Partition 217 (D.41027_217 - 217 )
Partition 218 (D.40823_218 - 218 )
Partition 219 (D.41030_219 - 219 )
Partition 220 (D.40834_220 - 220 )
Partition 221 (D.40834_221 - 221 )
Partition 222 (D.41031_222 - 222 )
Partition 223 (D.40823_223 - 223 )
Partition 224 (D.41034_224 - 224 )
Partition 225 (D.40834_225 - 225 )
Partition 226 (D.40823_226 - 226 )
Partition 227 (D.41035_227 - 227 )
Partition 228 (D.40834_228 - 228 )
Partition 229 (D.41038_229 - 229 )
Partition 230 (D.40834_230 - 230 )
Partition 231 (D.41041_231 - 231 )
Partition 232 (D.40834_232 - 232 )
Partition 233 (D.40823_233 - 233 )
Partition 234 (D.40823_234 - 234 )
Partition 235 (D.41044_235 - 235 )
Partition 236 (D.40834_236 - 236 )
Partition 237 (D.40823_237 - 237 )
Partition 238 (D.40834_238 - 238 )
Partition 239 (D.40834_239 - 239 )
Partition 240 (D.41048_240 - 240 )
Partition 241 (D.40834_241 - 241 )
Partition 242 (D.41051_242 - 242 )
Partition 243 (D.41051_243 - 243 )
Partition 244 (ip_244 - 244 )
Partition 245 (port_245 - 245 )
Partition 246 (D.40823_246 - 246 )
Partition 247 (D.40823_247 - 247 )
Partition 248 (D.41054_248 - 248 )
Partition 249 (D.41055_249 - 249 )
Partition 250 (D.40823_250 - 250 )
Partition 251 (D.40823_251 - 251 )
Partition 252 (D.41058_252 - 252 )
Partition 253 (D.40823_253 - 253 )
Partition 254 (uuid_254 - 254 )
Partition 255 (other_session_255 - 255 )
Partition 256 (other_channel_256 - 256 )
Partition 257 (ip_257 - 257 )
Partition 258 (port_258 - 258 )
Partition 259 (D.41063_259 - 259 )
Partition 260 (D.41064_260 - 260 )
Partition 261 (D.41065_261 - 261 )
Partition 263 (D.41069_263 - 263 )
Partition 264 (D.41070_264 - 264 )
Partition 265 (D.41071_265 - 265 )
Partition 266 (D.41051_266 - 266 )
Partition 267 (D.41051_267 - 267 )
Partition 268 (D.41076_268 - 268 )
Partition 269 (D.41076_269 - 269 )
Partition 270 (D.40823_270 - 270 )
Partition 271 (D.41081_271 - 271 )
Partition 272 (D.40823_272 - 272 )
Partition 273 (D.41083_273 - 273 )
Partition 274 (D.40827_274 - 274 )
Partition 275 (D.40845_275 - 275 )
Partition 276 (D.40823_276 - 276 )
Partition 277 (D.40845_277 - 277 )
Partition 278 (D.41086_278 - 278 )
Partition 279 (D.40823_279 - 279 )
Partition 280 (D.40845_280 - 280 )
Partition 281 (D.40823_281 - 281 )
Partition 282 (D.41091_282 - 282 )
Partition 283 (D.41092_283 - 283 )
Partition 284 (D.41091_284 - 284 )
Partition 287 (D.41091_287 - 287 )
Partition 288 (D.41092_288 - 288 )
Partition 291 (D.41100_291 - 291 )
Partition 292 (D.41101_292 - 292 )
Partition 293 (D.40845_293 - 293 )
Partition 294 (D.40823_294 - 294 )
Partition 295 (D.40838_295 - 295 )
Partition 296 (D.41104_296 - 296 )
Partition 297 (nsession.13_297 - 297 )
Partition 298 (nsession.13_298 - 298 )
Partition 299 (D.40834_299 - 299 )
Partition 300 (D.41108_300 - 300 )
Partition 301 (D.40838_301 - 301 )
Partition 302 (D.40823_302 - 302 )
Partition 303 (D.41113_303 - 303 )
Partition 304 (D.40834_304 - 304 )
Partition 305 (D.40988_305 - 305 )
Partition 306 (D.40989_306 - 306 )
Partition 307 (D.40834_307 - 307 )
Partition 308 (D.40988_308 - 308 )
Partition 309 (D.41023_309 - 309 )
Partition 310 (D.40988_310 - 310 )
Partition 311 (D.41026_311 - 311 )
Partition 312 (D.40823_312 - 312 )
Partition 313 (D.41119_313 - 313 )
Partition 314 (D.40834_314 - 314 )
Partition 315 (D.40823_315 - 315 )
Partition 316 (t38_options_316 - 316 )
Partition 318 (D.41076_318 - 318 )
Partition 319 (D.41076_319 - 319 )
Partition 320 (D.40823_320 - 320 )
Partition 321 (D.41128_321 - 321 )
Partition 322 (D.40823_322 - 322 )
Partition 323 (D.41130_323 - 323 )
Partition 327 (.MEM_327 - 327 )
Partition 328 (.MEM_328 - 328 )
Partition 329 (.MEM_329 - 329 )
Partition 330 (.MEM_330 - 330 )
Partition 331 (.MEM_331 - 331 )
Partition 332 (.MEM_332 - 332 )
Partition 333 (.MEM_333 - 333 )
Partition 334 (.MEM_334 - 334 )
Partition 335 (.MEM_335 - 335 )
Partition 336 (.MEM_336 - 336 )
Partition 337 (.MEM_337 - 337 )
Partition 338 (.MEM_338 - 338 )
Partition 339 (.MEM_339 - 339 )
Partition 340 (.MEM_340 - 340 )
Partition 341 (.MEM_341 - 341 )
Partition 342 (.MEM_342 - 342 )
Partition 343 (.MEM_343 - 343 )
Partition 344 (.MEM_344 - 344 )
Partition 345 (.MEM_345 - 345 )
Partition 346 (.MEM_346 - 346 )
Partition 347 (.MEM_347 - 347 )
Partition 348 (.MEM_348 - 348 )
Partition 349 (.MEM_349 - 349 )
Partition 350 (.MEM_350 - 350 )
Partition 351 (.MEM_351 - 351 )
Partition 352 (.MEM_352(D) - 352 )
Partition 353 (.MEM_353 - 353 )
Partition 354 (.MEM_354 - 354 )
Partition 355 (.MEM_355 - 355 )
Partition 356 (.MEM_356 - 356 )
Partition 357 (.MEM_357 - 357 )
Partition 358 (.MEM_358 - 358 )
Partition 359 (.MEM_359 - 359 )
Partition 360 (.MEM_360 - 360 )
Partition 361 (.MEM_361 - 361 )
Partition 362 (.MEM_362 - 362 )
Partition 363 (.MEM_363 - 363 )
Partition 364 (.MEM_364 - 364 )
Partition 365 (.MEM_365 - 365 )
Partition 366 (.MEM_366 - 366 )
Partition 367 (.MEM_367 - 367 )
Partition 368 (.MEM_368 - 368 )
Partition 369 (.MEM_369 - 369 )
Partition 370 (.MEM_370 - 370 )
Partition 371 (.MEM_371 - 371 )
Partition 372 (.MEM_372 - 372 )
Partition 373 (.MEM_373 - 373 )
Partition 374 (.MEM_374 - 374 )
Partition 375 (.MEM_375 - 375 )
Partition 376 (.MEM_376 - 376 )
Partition 377 (.MEM_377 - 377 )
Partition 378 (.MEM_378 - 378 )
Partition 379 (.MEM_379 - 379 )
Partition 380 (.MEM_380 - 380 )
Partition 381 (.MEM_381 - 381 )
Partition 382 (.MEM_382 - 382 )
Partition 383 (.MEM_383 - 383 )
Partition 384 (.MEM_384 - 384 )
Partition 385 (.MEM_385 - 385 )
Partition 386 (.MEM_386 - 386 )
Partition 387 (.MEM_387 - 387 )
Partition 388 (.MEM_388 - 388 )
Partition 389 (.MEM_389 - 389 )
Partition 390 (.MEM_390 - 390 )
Partition 391 (.MEM_391 - 391 )
Partition 392 (.MEM_392 - 392 )
Partition 393 (.MEM_393 - 393 )
Partition 394 (.MEM_394 - 394 )
Partition 395 (.MEM_395 - 395 )
Partition 396 (.MEM_396 - 396 )
Partition 397 (.MEM_397 - 397 )
Partition 398 (.MEM_398 - 398 )
Partition 399 (.MEM_399 - 399 )
Partition 400 (.MEM_400 - 400 )
Partition 401 (.MEM_401 - 401 )
Partition 402 (.MEM_402 - 402 )
Partition 403 (.MEM_403 - 403 )
Partition 404 (.MEM_404 - 404 )
Partition 405 (.MEM_405 - 405 )
Partition 406 (.MEM_406 - 406 )
Partition 407 (.MEM_407 - 407 )
Partition 408 (.MEM_408 - 408 )
Partition 409 (.MEM_409 - 409 )
Partition 410 (.MEM_410 - 410 )
Partition 411 (.MEM_411 - 411 )
Partition 412 (.MEM_412 - 412 )
Partition 413 (.MEM_413 - 413 )
Partition 414 (.MEM_414 - 414 )
Partition 415 (.MEM_415 - 415 )
Partition 416 (.MEM_416 - 416 )
Partition 417 (.MEM_417 - 417 )
Partition 418 (.MEM_418 - 418 )
Partition 419 (.MEM_419 - 419 )
Partition 420 (.MEM_420 - 420 )
Partition 421 (.MEM_421 - 421 )
Partition 422 (.MEM_422 - 422 )
Partition 423 (.MEM_423 - 423 )
Partition 424 (.MEM_424 - 424 )
Partition 425 (.MEM_425 - 425 )
Partition 426 (.MEM_426 - 426 )
Partition 427 (.MEM_427 - 427 )
Partition 428 (.MEM_428 - 428 )
Partition 429 (.MEM_429 - 429 )
Partition 430 (.MEM_430 - 430 )
Partition 431 (.MEM_431 - 431 )
Partition 432 (.MEM_432 - 432 )
Partition 433 (.MEM_433 - 433 )
Partition 434 (.MEM_434 - 434 )
Partition 435 (.MEM_435 - 435 )
Partition 436 (.MEM_436 - 436 )
Partition 437 (.MEM_437 - 437 )
Partition 438 (.MEM_438 - 438 )
Partition 439 (.MEM_439 - 439 )
Partition 440 (.MEM_440 - 440 )
Partition 441 (.MEM_441 - 441 )
Partition 442 (.MEM_442 - 442 )
Partition 443 (.MEM_443 - 443 )
Partition 444 (.MEM_444 - 444 )
Partition 445 (.MEM_445 - 445 )
Partition 446 (.MEM_446 - 446 )
Partition 447 (.MEM_447 - 447 )
Partition 448 (.MEM_448 - 448 )
Partition 449 (.MEM_449 - 449 )
Partition 450 (.MEM_450 - 450 )
Partition 451 (.MEM_451 - 451 )
Partition 452 (.MEM_452 - 452 )
Partition 453 (.MEM_453 - 453 )
Partition 454 (.MEM_454 - 454 )
Partition 455 (.MEM_455 - 455 )
Partition 456 (.MEM_456 - 456 )
Partition 457 (.MEM_457 - 457 )
Partition 458 (.MEM_458 - 458 )
Partition 459 (.MEM_459 - 459 )
Partition 460 (.MEM_460 - 460 )
Partition 461 (.MEM_461 - 461 )
Partition 462 (.MEM_462 - 462 )
Partition 463 (.MEM_463 - 463 )
Partition 464 (.MEM_464 - 464 )
Partition 465 (.MEM_465 - 465 )
Partition 466 (.MEM_466 - 466 )
Partition 467 (.MEM_467 - 467 )
Partition 468 (.MEM_468 - 468 )
Partition 469 (.MEM_469 - 469 )
Partition 470 (.MEM_470 - 470 )
Partition 471 (.MEM_471 - 471 )
Partition 472 (.MEM_472 - 472 )
Partition 473 (.MEM_473 - 473 )
Partition 474 (.MEM_474 - 474 )
Partition 475 (.MEM_475 - 475 )
Partition 476 (.MEM_476 - 476 )
Partition 477 (.MEM_477 - 477 )
Partition 478 (.MEM_478 - 478 )
Partition 479 (.MEM_479 - 479 )
Partition 480 (.MEM_480 - 480 )
Partition 484 (D.48238_484 - 484 )
Partition 486 (D.48242_486 - 486 )
Partition 489 (pmap_489 - 488 489 490 )
Partition 491 (D.48246_491 - 491 )
Partition 493 (pmap_493 - 492 493 494 )
Partition 495 (D.48249_495 - 495 )
Partition 497 (.MEM_497 - 497 )
Partition 498 (.MEM_498 - 498 )
Partition 499 (.MEM_499 - 499 )
Partition 500 (.MEM_500 - 500 )
Partition 501 (.MEM_501 - 501 )
Partition 502 (len_502 - 4 49 111 481 502 )
Partition 503 (.MEM_503 - 503 )
Partition 504 (maxlen_504 - 5 50 119 482 504 )
Partition 505 (.MEM_505 - 505 )
Partition 506 (D.48234_506 - 122 483 506 )
Partition 507 (D.48237_507 - 147 485 507 )
Partition 508 (D.48241_508 - 149 487 508 )
Partition 509 (.MEM_509 - 509 )
Partition 510 (.MEM_510 - 510 )
Partition 511 (.MEM_511 - 511 )
Partition 512 (.MEM_512 - 512 )
Partition 513 (.MEM_513 - 513 )
Partition 514 (D.48251_514 - 262 496 514 )

Coalesced D.40820_21 to status_1
Coalesced iftmp.7_22 to __result_103
Coalesced D.40820_28 to status_1
Coalesced iftmp.7_104 to __result_103
Coalesced iftmp.7_105 to __result_103
Coalesced D.39873_106 to __result_103
Coalesced D.40913_122 to D.48234_506
Coalesced D.40942_147 to D.48237_507
Coalesced D.40946_149 to D.48241_508
Coalesced D.41068_262 to D.48251_514
Coalesced D.40820_326 to status_1
Coalesced D.48229_481 to len_502
Coalesced D.48232_482 to maxlen_504
Coalesced D.48235_483 to D.48234_506
Coalesced D.48239_485 to D.48237_507
Coalesced D.48243_487 to D.48241_508
Coalesced D.48252_496 to D.48251_514
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  switch_status_t status;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_receive_message";
  void end = <<< error >>>; (unused)
  static const char __func__[34] = "switch_core_media_receive_message";
  void end_lock = <<< error >>>; (unused)

  { Scope block #455 
    int len;
    int maxlen;
    int qlen;
    int maxqlen;
    int max_drift;

    { Scope block #456 
      char * p;
      char * q;
      const char * s;

      { Scope block #457 src/switch_core_media.c:7559 Originating from :  extern long int atol (const char *); 
        const char * __nptr; (unused)

        { Scope block #458 Originating from :#0 

        }

      }

      { Scope block #459 src/switch_core_media.c:7556 Originating from :  extern long int atol (const char *); 
        const char * __nptr; (unused)

        { Scope block #460 Originating from :#0 

        }

      }

      { Scope block #461 src/switch_core_media.c:7546 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #462 Originating from :#0 

        }

      }

      { Scope block #463 
        size_t __s1_len; (unused)
        size_t __s2_len;

        { Scope block #464 
          const unsigned char * __s1;
          register int __result;

        }

      }

    }

  }

  { Scope block #465 
    struct switch_rtp_t * rtp;
    const char * direction;

    { Scope block #466 src/switch_core_media.c:7605 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #467 Originating from :#0 

      }

    }

    { Scope block #468 src/switch_core_media.c:7605 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #469 Originating from :#0 

      }

    }

    { Scope block #470 
      switch_rtp_flag_t flags[39];
      int both;
      int set;

    }

  }

  { Scope block #471 
    const char * val;
    int ok;

  }

  { Scope block #472 
    const char * uuid;
    struct switch_core_session_t * other_session;
    struct switch_channel_t * other_channel;
    const char * ip;
    const char * port;

    { Scope block #473 src/switch_core_media.c:7778 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #474 Originating from :#0 

      }

    }

    { Scope block #475 src/switch_core_media.c:7777 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
      struct switch_rtp_engine_t * engine; (unused)

      { Scope block #476 Originating from :#0 
        struct payload_map_t * pmap;

      }

    }

    { Scope block #477 src/switch_core_media.c:7776 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
      struct switch_rtp_engine_t * engine; (unused)

      { Scope block #478 Originating from :#0 
        struct payload_map_t * pmap;

      }

    }

  }

  { Scope block #479 
    struct switch_core_session_t * nsession;

  }

  { Scope block #480 
    struct switch_t38_options_t * t38_options;

  }

}
switch_core_media_receive_message (struct switch_core_session_t * session, struct switch_core_session_message_t * msg)
{
  int D.48251;
  uint8_t D.48249;
  struct payload_map_t * pmap;
  uint8_t D.48246;
  struct payload_map_t * pmap;
  const char D.48242;
  int D.48241;
  const char D.48238;
  int D.48237;
  long int D.48234;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * nsession;
  const char * port;
  const char * ip;
  struct switch_channel_t * other_channel;
  struct switch_core_session_t * other_session;
  const char * uuid;
  int ok;
  const char * val;
  int set;
  int both;
  switch_rtp_flag_t flags[39];
  const char * direction;
  struct switch_rtp_t * rtp;
  register int __result;
  const unsigned char * __s1;
  size_t __s2_len;
  const char * s;
  char * q;
  char * p;
  int max_drift;
  int maxqlen;
  int qlen;
  int maxlen;
  int len;
  static const char __func__[34] = "switch_core_media_receive_message";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_receive_message";
  switch_status_t status;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  switch_channel_state_t D.41130;
  int D.41128;
  uint32_t D.41119;
  uint32_t D.41113;
  uint8_t D.41108;
  struct switch_core_session_t * nsession.13;
  switch_status_t D.41104;
  char * D.41101;
  struct payload_map_t * D.41100;
  char * iftmp.12;
  char * D.41092;
  struct payload_map_t * D.41091;
  char * iftmp.11;
  const char D.41086;
  switch_channel_state_t D.41083;
  int D.41081;
  struct switch_mutex_t * D.41076;
  char * D.41071;
  struct switch_core_media_params_t * D.41070;
  short unsigned int D.41069;
  _Bool D.41065;
  _Bool D.41064;
  _Bool D.41063;
  const char * D.41058;
  int D.41055;
  const char * D.41054;
  uint32_t D.41051;
  uint8_t D.41048;
  uint32_t D.41044;
  uint32_t D.41041;
  uint32_t D.41038;
  uint32_t D.41035;
  char * D.41034;
  uint32_t D.41031;
  char * D.41030;
  uint32_t D.41027;
  unsigned int D.41026;
  unsigned int D.41023;
  uint8_t D.41020;
  switch_core_media_flag_t D.41016;
  uint32_t D.41011;
  uint32_t D.41003;
  uint32_t D.41000;
  char * D.40996;
  uint32_t D.40993;
  uint32_t D.40990;
  unsigned int D.40989;
  smh_flag_t D.40988;
  char * D.40987;
  uint32_t D.40984;
  uint32_t D.40981;
  int D.40980;
  uint8_t D.40974;
  uint32_t D.40971;
  int D.40964;
  switch_rtp_flag_t D.40961;
  switch_rtp_flag_t D.40960;
  int D.40959;
  switch_rtp_flag_t D.40955;
  switch_rtp_flag_t D.40954;
  int D.40953;
  int D.40949;
  const char * D.40945;
  uint8_t D.40939;
  const char D.40936;
  int D.40929;
  const char * D.40928;
  switch_status_t D.40925;
  uint32_t max_drift.10;
  uint32_t D.40923;
  uint32_t D.40922;
  uint32_t maxqlen.9;
  uint32_t qlen.8;
  int D.40904;
  int D.40903;
  int D.40897;
  const unsigned char D.40896;
  char * D.40895;
  int D.40894;
  const unsigned char D.40893;
  const unsigned char * D.40892;
  _Bool D.40889;
  _Bool D.40888;
  int D.40887;
  const unsigned char D.40886;
  char * D.40885;
  int D.40884;
  const unsigned char D.40883;
  const unsigned char * D.40882;
  _Bool D.40879;
  _Bool D.40878;
  int D.40877;
  const unsigned char D.40876;
  char * D.40875;
  int D.40874;
  const unsigned char D.40873;
  const unsigned char * D.40872;
  _Bool D.40869;
  _Bool D.40868;
  _Bool D.40867;
  int D.40866;
  const unsigned char D.40865;
  char[4] * D.40864;
  int D.40863;
  const unsigned char D.40862;
  int D.40854;
  int D.40851;
  int D.40848;
  const char * D.40845;
  uint8_t D.40842;
  int D.40838;
  uint8_t D.40835;
  struct switch_rtp_t * D.40834;
  struct switch_rtp_t * D.40831;
  uint32_t D.40828;
  switch_core_session_message_types_t D.40827;
  switch_channel_state_t D.40826;
  int D.40824;
  struct switch_channel_t * D.40823;

<bb 2>:
  status_25 = 0;
  # DEBUG status => status_25
  if (session_26(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7477, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_27 = session_26(D)->media_handle;
  # DEBUG smh => smh_27
  if (smh_27 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  status_28 = 1;
  goto <bb 177>;

<bb 6>:
  D.40823_29 = session_26(D)->channel;
  D.40824_30 = switch_channel_check_signal (D.40823_29, 1);
  if (D.40824_30 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.40823_31 = session_26(D)->channel;
  D.40826_32 = switch_channel_get_state (D.40823_31);
  if (D.40826_32 > 9)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  status_326 = 1;
  goto <bb 177>;

<bb 9>:
  a_engine_33 = &smh_27->engines;
  # DEBUG a_engine => a_engine_33
  v_engine_34 = &smh_27->engines[1];
  # DEBUG v_engine => v_engine_34
  D.40827_36 = msg_35(D)->message_id;
  switch (D.40827_36) <default: <L211>, case 4: <L93>, case 5: <L126>, case 8: <L147>, case 9: <L150>, case 17: <L10>, case 19: <L88>, case 20: <L144>, case 24: <L65>, case 25: <L13>, case 32: <L19>, case 46: <L7>>

<L7>:
  D.40823_37 = session_26(D)->channel;
  D.40828_38 = switch_channel_test_flag (D.40823_37, 82);
  if (D.40828_38 != 0)
    goto <bb 11>;
  else
    goto <bb 141> (<L211>);

<bb 11>:
  D.40823_39 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_39, 122, 1);
  goto <bb 141> (<L211>);

<L10>:
  D.40831_40 = v_engine_34->rtp_session;
  if (D.40831_40 != 0B)
    goto <bb 13>;
  else
    goto <bb 141> (<L211>);

<bb 13>:
  D.40831_41 = v_engine_34->rtp_session;
  switch_rtp_video_refresh (D.40831_41);
  goto <bb 141> (<L211>);

<L13>:
  D.40834_42 = a_engine_33->rtp_session;
  D.40835_43 = switch_rtp_ready (D.40834_42);
  if (D.40835_43 != 0)
    goto <bb 15>;
  else
    goto <bb 141> (<L211>);

<bb 15>:
  D.40838_44 = msg_35(D)->numeric_arg;
  if (D.40838_44 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.40834_45 = a_engine_33->rtp_session;
  switch_rtp_set_flag (D.40834_45, 19);
  goto <bb 141> (<L211>);

<bb 17>:
  D.40834_46 = a_engine_33->rtp_session;
  switch_rtp_clear_flag (D.40834_46, 19);
  goto <bb 141> (<L211>);

<L19>:
  D.40834_47 = a_engine_33->rtp_session;
  D.40842_48 = switch_rtp_ready (D.40834_47);
  if (D.40842_48 != 0)
    goto <bb 19>;
  else
    goto <bb 141> (<L211>);

<bb 19>:
  len_49 = 0;
  # DEBUG len => len_49
  maxlen_50 = 0;
  # DEBUG maxlen => maxlen_50
  qlen_51 = 0;
  # DEBUG qlen => qlen_51
  maxqlen_52 = 50;
  # DEBUG maxqlen => maxqlen_52
  max_drift_53 = 0;
  # DEBUG max_drift => max_drift_53
  D.40845_54 = msg_35(D)->string_arg;
  if (D.40845_54 != 0B)
    goto <bb 20>;
  else
    goto <bb 45>;

<bb 20>:
  D.40845_55 = msg_35(D)->string_arg;
  D.40848_56 = strcasecmp (D.40845_55, "pause");
  if (D.40848_56 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.40834_57 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_57, 1);
  goto <bb 173> (end);

<bb 22>:
  D.40845_58 = msg_35(D)->string_arg;
  D.40851_59 = strcasecmp (D.40845_58, "resume");
  if (D.40851_59 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.40834_60 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_60, 0);
  goto <bb 173> (end);

<bb 24>:
  D.40845_61 = msg_35(D)->string_arg;
  D.40854_62 = strncasecmp (D.40845_61, "debug:", 6);
  if (D.40854_62 == 0)
    goto <bb 25>;
  else
    goto <bb 36>;

<bb 25>:
  D.40845_63 = msg_35(D)->string_arg;
  s_64 = D.40845_63 + 6;
  # DEBUG s => s_64
  if (s_64 != 0B)
    goto <bb 26>;
  else
    goto <bb 35>;

<bb 26>:
  __s2_len_65 = 3;
  # DEBUG __s2_len => __s2_len_65
  if (__s2_len_65 <= 3)
    goto <bb 27>;
  else
    goto <bb 32>;

<bb 27>:
  __s1_66 = s_64;
  # DEBUG __s1 => __s1_66
  D.40862_67 = *__s1_66;
  D.40863_68 = (int) D.40862_67;
  D.40864_69 = "off";
  D.40865_70 = MEM[(const unsigned char *)D.40864_69];
  D.40866_71 = (int) D.40865_70;
  __result_72 = D.40863_68 - D.40866_71;
  # DEBUG __result => __result_72
  D.40867_73 = __s2_len_65 != 0;
  D.40868_74 = __result_72 == 0;
  D.40869_75 = D.40867_73 && D.40868_74;
  if (D.40869_75 != 0)
    goto <bb 28>;
  else
    goto <bb 31>;

<bb 28>:
  D.40872_76 = __s1_66 + 1;
  D.40873_77 = *D.40872_76;
  D.40874_78 = (int) D.40873_77;
  D.40875_79 = &"off"[1];
  D.40876_80 = MEM[(const unsigned char *)D.40875_79];
  D.40877_81 = (int) D.40876_80;
  __result_82 = D.40874_78 - D.40877_81;
  # DEBUG __result => __result_82
  D.40878_83 = __s2_len_65 > 1;
  D.40868_84 = __result_82 == 0;
  D.40879_85 = D.40878_83 && D.40868_84;
  if (D.40879_85 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

<bb 29>:
  D.40882_86 = __s1_66 + 2;
  D.40883_87 = *D.40882_86;
  D.40884_88 = (int) D.40883_87;
  D.40885_89 = &"off"[2];
  D.40886_90 = MEM[(const unsigned char *)D.40885_89];
  D.40887_91 = (int) D.40886_90;
  __result_92 = D.40884_88 - D.40887_91;
  # DEBUG __result => __result_92
  D.40888_93 = __s2_len_65 > 2;
  D.40868_94 = __result_92 == 0;
  D.40889_95 = D.40888_93 && D.40868_94;
  if (D.40889_95 != 0)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  D.40892_96 = __s1_66 + 3;
  D.40893_97 = *D.40892_96;
  D.40894_98 = (int) D.40893_97;
  D.40895_99 = &"off"[3];
  D.40896_100 = MEM[(const unsigned char *)D.40895_99];
  D.40897_101 = (int) D.40896_100;
  __result_102 = D.40894_98 - D.40897_101;
  # DEBUG __result => __result_102

<bb 31>:
  # __result_13 = PHI <__result_72(27), __result_82(28), __result_92(29), __result_102(30)>
  # DEBUG __result => __result_13
  __result_103 = __result_13;
  __result_104 = __result_103;
  goto <bb 33>;

<bb 32>:
  __result_105 = __builtin_strcmp (s_64, "off");

<bb 33>:
  # __result_22 = PHI <__result_104(31), __result_105(32)>
  __result_106 = __result_22;
  if (__result_106 == 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  s_107 = 0B;
  # DEBUG s => s_107

<bb 35>:
  # s_12 = PHI <s_64(25), s_64(33), s_107(34)>
  # DEBUG s => s_12
  D.40834_108 = a_engine_33->rtp_session;
  status_109 = switch_rtp_debug_jitter_buffer (D.40834_108, s_12);
  # DEBUG status => status_109
  goto <bb 173> (end);

<bb 36>:
  D.40845_110 = msg_35(D)->string_arg;
  # DEBUG __nptr => D.40845_110
  len_481 = strtol (D.40845_110, 0B, 10);
  len_502 = len_481;
  len_111 = len_502;
  # DEBUG len => NULL
  if (len_111 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  D.40903_112 = a_engine_33->read_impl.microseconds_per_packet;
  D.40904_113 = D.40903_112 / 1000;
  qlen_114 = len_111 / D.40904_113;
  # DEBUG qlen => qlen_114
  if (qlen_114 <= 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  qlen_115 = 3;
  # DEBUG qlen => qlen_115

<bb 39>:
  # qlen_6 = PHI <qlen_51(36), qlen_114(37), qlen_115(38)>
  # DEBUG qlen => qlen_6
  if (qlen_6 != 0)
    goto <bb 40>;
  else
    goto <bb 43>;

<bb 40>:
  D.40845_116 = msg_35(D)->string_arg;
  p_117 = __builtin_strchr (D.40845_116, 58);
  # DEBUG p => p_117
  if (p_117 != 0B)
    goto <bb 41>;
  else
    goto <bb 43>;

<bb 41>:
  p_118 = p_117 + 1;
  # DEBUG p => p_118
  # DEBUG __nptr => p_118
  maxlen_482 = strtol (p_118, 0B, 10);
  maxlen_504 = maxlen_482;
  maxlen_119 = maxlen_504;
  # DEBUG maxlen => NULL
  q_120 = __builtin_strchr (p_118, 58);
  # DEBUG q => q_120
  if (q_120 != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  q_121 = q_120 + 1;
  # DEBUG q => q_121
  # DEBUG __nptr => q_121
  D.48234_483 = strtol (q_121, 0B, 10);
  D.48234_506 = D.48234_483;
  D.48234_122 = D.48234_506;
  max_drift_123 = ABS_EXPR <D.48234_122>;
  # DEBUG max_drift => max_drift_123

<bb 43>:
  # maxlen_5 = PHI <maxlen_50(39), maxlen_50(40), maxlen_119(41), maxlen_119(42)>
  # max_drift_10 = PHI <max_drift_53(39), max_drift_53(40), max_drift_53(41), max_drift_123(42)>
  # DEBUG max_drift => max_drift_10
  # DEBUG maxlen => maxlen_5
  if (maxlen_5 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.40903_124 = a_engine_33->read_impl.microseconds_per_packet;
  D.40904_125 = D.40903_124 / 1000;
  maxqlen_126 = maxlen_5 / D.40904_125;
  # DEBUG maxqlen => maxqlen_126

<bb 45>:
  # len_4 = PHI <len_49(19), len_111(43), len_111(44)>
  # qlen_7 = PHI <qlen_51(19), qlen_6(43), qlen_6(44)>
  # maxqlen_8 = PHI <maxqlen_52(19), maxqlen_52(43), maxqlen_126(44)>
  # max_drift_11 = PHI <max_drift_53(19), max_drift_10(43), max_drift_10(44)>
  # DEBUG max_drift => max_drift_11
  # DEBUG maxqlen => maxqlen_8
  # DEBUG qlen => qlen_7
  # DEBUG len => len_4
  if (qlen_7 != 0)
    goto <bb 46>;
  else
    goto <bb 52>;

<bb 46>:
  if (maxqlen_8 < qlen_7)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  maxqlen_127 = qlen_7 * 5;
  # DEBUG maxqlen => maxqlen_127

<bb 48>:
  # maxqlen_9 = PHI <maxqlen_8(46), maxqlen_127(47)>
  # DEBUG maxqlen => maxqlen_9
  D.40834_128 = a_engine_33->rtp_session;
  qlen.8_129 = (uint32_t) qlen_7;
  maxqlen.9_130 = (uint32_t) maxqlen_9;
  D.40922_131 = a_engine_33->read_impl.samples_per_packet;
  D.40923_132 = a_engine_33->read_impl.samples_per_second;
  max_drift.10_133 = (uint32_t) max_drift_11;
  D.40925_134 = switch_rtp_activate_jitter_buffer (D.40834_128, qlen.8_129, maxqlen.9_130, D.40922_131, D.40923_132, max_drift.10_133);
  if (D.40925_134 == 0)
    goto <bb 49>;
  else
    goto <bb 51>;

<bb 49>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7577, session_26(D), 7, "Setting Jitterbuffer to %dms (%d frames) (%d max frames) (%d max drift)\n", len_4, qlen_7, maxqlen_9, max_drift_11);
  D.40823_135 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_135, 57, 1);
  D.40823_136 = session_26(D)->channel;
  D.40928_137 = switch_channel_get_variable_dup (D.40823_136, "rtp_jitter_buffer_plc", 1, -1);
  D.40929_138 = switch_false (D.40928_137);
  if (D.40929_138 == 0)
    goto <bb 50>;
  else
    goto <bb 141> (<L211>);

<bb 50>:
  D.40823_139 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_139, 58, 1);
  goto <bb 141> (<L211>);

<bb 51>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7585, session_26(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", len_4, qlen_7);
  goto <bb 141> (<L211>);

<bb 52>:
  D.40834_140 = a_engine_33->rtp_session;
  switch_rtp_deactivate_jitter_buffer (D.40834_140);
  goto <bb 141> (<L211>);

<L65>:
  rtp_141 = a_engine_33->rtp_session;
  # DEBUG rtp => rtp_141
  direction_142 = msg_35(D)->string_array_arg[0];
  # DEBUG direction => direction_142
  if (direction_142 != 0B)
    goto <bb 54>;
  else
    goto <bb 56>;

<bb 54>:
  D.40936_143 = *direction_142;
  if (D.40936_143 == 118)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  direction_144 = direction_142 + 1;
  # DEBUG direction => direction_144
  rtp_145 = v_engine_34->rtp_session;
  # DEBUG rtp => rtp_145

<bb 56>:
  # rtp_14 = PHI <rtp_141(53), rtp_141(54), rtp_145(55)>
  # direction_15 = PHI <direction_142(53), direction_142(54), direction_144(55)>
  # DEBUG direction => direction_15
  # DEBUG rtp => rtp_14
  D.40939_146 = switch_rtp_ready (rtp_14);
  if (D.40939_146 != 0)
    goto <bb 57>;
  else
    goto <bb 173> (end);

<bb 57>:
  # DEBUG s => direction_15
  if (direction_15 == 0B)
    goto <bb 60>;
  else
    goto <bb 58>;

<bb 58>:
  D.48238_484 = *direction_15;
  if (D.48238_484 == 0)
    goto <bb 60>;
  else
    goto <bb 59>;

<bb 59>:

<bb 60>:
  # D.48237_485 = PHI <1(57), 1(58), 0(59)>
  D.48237_507 = D.48237_485;
  D.48237_147 = D.48237_507;
  if (D.48237_147 == 0)
    goto <bb 61>;
  else
    goto <bb 173> (end);

<bb 61>:
  D.40945_148 = msg_35(D)->string_array_arg[1];
  # DEBUG s => D.40945_148
  if (D.40945_148 == 0B)
    goto <bb 64>;
  else
    goto <bb 62>;

<bb 62>:
  D.48242_486 = *D.40945_148;
  if (D.48242_486 == 0)
    goto <bb 64>;
  else
    goto <bb 63>;

<bb 63>:

<bb 64>:
  # D.48241_487 = PHI <1(61), 1(62), 0(63)>
  D.48241_508 = D.48241_487;
  D.48241_149 = D.48241_508;
  if (D.48241_149 == 0)
    goto <bb 65>;
  else
    goto <bb 173> (end);

<bb 65>:
  flags = {};
  D.40949_150 = strcasecmp (direction_15, "both");
  both_151 = D.40949_150 == 0;
  # DEBUG both => both_151
  set_152 = 0;
  # DEBUG set => set_152
  if (both_151 != 0)
    goto <bb 67>;
  else
    goto <bb 66>;

<bb 66>:
  D.40953_153 = strcasecmp (direction_15, "read");
  if (D.40953_153 == 0)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  D.40954_154 = flags[28];
  D.40955_155 = D.40954_154 + 1;
  flags[28] = D.40955_155;
  set_156 = set_152 + 1;
  # DEBUG set => set_156

<bb 68>:
  # set_16 = PHI <set_152(66), set_156(67)>
  # DEBUG set => set_16
  if (both_151 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

<bb 69>:
  D.40959_157 = strcasecmp (direction_15, "write");
  if (D.40959_157 == 0)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  D.40960_158 = flags[29];
  D.40961_159 = D.40960_158 + 1;
  flags[29] = D.40961_159;
  set_160 = set_16 + 1;
  # DEBUG set => set_160

<bb 71>:
  # set_17 = PHI <set_16(69), set_160(70)>
  # DEBUG set => set_17
  if (set_17 != 0)
    goto <bb 72>;
  else
    goto <bb 75>;

<bb 72>:
  D.40945_161 = msg_35(D)->string_array_arg[1];
  D.40964_162 = switch_true (D.40945_161);
  if (D.40964_162 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  switch_rtp_set_flags (rtp_14, &flags);
  goto <bb 173> (end);

<bb 74>:
  switch_rtp_clear_flags (rtp_14, &flags);
  goto <bb 173> (end);

<bb 75>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7627, session_26(D), 3, "Invalid Options\n");
  goto <bb 173> (end);

<L88>:
  D.40834_163 = a_engine_33->rtp_session;
  if (D.40834_163 != 0B)
    goto <bb 77>;
  else
    goto <bb 173> (end);

<bb 77>:
  D.40834_164 = a_engine_33->rtp_session;
  D.40971_165 = switch_rtp_test_flag (D.40834_164, 15);
  if (D.40971_165 != 0)
    goto <bb 78>;
  else
    goto <bb 173> (end);

<bb 78>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7634, session_26(D), 4, "Pass 2833 mode may not work on a transcoded call.\n");
  goto <bb 173> (end);

<L93>:
  D.40834_166 = a_engine_33->rtp_session;
  D.40974_167 = switch_rtp_ready (D.40834_166);
  if (D.40974_167 != 0)
    goto <bb 80>;
  else
    goto <bb 173> (end);

<bb 80>:
  ok_168 = 0;
  # DEBUG ok => ok_168
  D.40823_169 = session_26(D)->channel;
  val_170 = switch_channel_get_variable_dup (D.40823_169, "rtp_jitter_buffer_during_bridge", 1, -1);
  # DEBUG val => val_170
  if (val_170 == 0B)
    goto <bb 82>;
  else
    goto <bb 81>;

<bb 81>:
  D.40980_171 = switch_false (val_170);
  if (D.40980_171 != 0)
    goto <bb 82>;
  else
    goto <bb 85>;

<bb 82>:
  D.40823_172 = session_26(D)->channel;
  D.40981_173 = switch_channel_test_flag (D.40823_172, 57);
  if (D.40981_173 != 0)
    goto <bb 83>;
  else
    goto <bb 85>;

<bb 83>:
  D.40823_174 = session_26(D)->channel;
  D.40984_175 = switch_channel_test_cap_partner (D.40823_174, 5);
  if (D.40984_175 != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

<bb 84>:
  D.40823_176 = session_26(D)->channel;
  D.40987_177 = switch_channel_get_name (D.40823_176);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7647, session_26(D), 7, "%s PAUSE Jitterbuffer\n", D.40987_177);
  D.40834_178 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_178, 1);
  D.40988_179 = smh_27->flags;
  D.40989_180 = D.40988_179 | 4;
  smh_27->flags = D.40989_180;

<bb 85>:
  D.40823_181 = session_26(D)->channel;
  D.40990_182 = switch_channel_test_flag (D.40823_181, 100);
  if (D.40990_182 != 0)
    goto <bb 86>;
  else
    goto <bb 88>;

<bb 86>:
  D.40823_183 = session_26(D)->channel;
  D.40993_184 = switch_channel_test_flag_partner (D.40823_183, 36);
  if (D.40993_184 != 0)
    goto <bb 87>;
  else
    goto <bb 88>;

<bb 87>:
  D.40834_185 = a_engine_33->rtp_session;
  switch_rtp_set_flag (D.40834_185, 15);
  D.40823_186 = session_26(D)->channel;
  D.40996_187 = switch_channel_get_name (D.40823_186);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7656, session_26(D), 7, "%s activate passthru 2833 mode.\n", D.40996_187);

<bb 88>:
  D.40823_188 = session_26(D)->channel;
  val_189 = switch_channel_get_variable_dup (D.40823_188, "rtp_notimer_during_bridge", 1, -1);
  # DEBUG val => val_189
  if (val_189 != 0B)
    goto <bb 89>;
  else
    goto <bb 90>;

<bb 89>:
  ok_190 = switch_true (val_189);
  # DEBUG ok => ok_190
  goto <bb 91>;

<bb 90>:
  D.40823_191 = session_26(D)->channel;
  D.41000_192 = switch_channel_test_flag (D.40823_191, 105);
  ok_193 = (int) D.41000_192;
  # DEBUG ok => ok_193

<bb 91>:
  # ok_18 = PHI <ok_190(89), ok_193(90)>
  # DEBUG ok => ok_18
  if (ok_18 != 0)
    goto <bb 92>;
  else
    goto <bb 94>;

<bb 92>:
  D.40834_194 = a_engine_33->rtp_session;
  D.41003_195 = switch_rtp_test_flag (D.40834_194, 3);
  if (D.41003_195 == 0)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  ok_196 = 0;
  # DEBUG ok => ok_196

<bb 94>:
  # ok_19 = PHI <ok_18(91), ok_18(92), ok_196(93)>
  # DEBUG ok => ok_19
  if (ok_19 != 0)
    goto <bb 95>;
  else
    goto <bb 96>;

<bb 95>:
  D.40834_197 = a_engine_33->rtp_session;
  switch_rtp_clear_flag (D.40834_197, 3);
  D.40823_198 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_198, 99, 1);

<bb 96>:
  if (ok_19 != 0)
    goto <bb 97>;
  else
    goto <bb 99>;

<bb 97>:
  D.40823_199 = session_26(D)->channel;
  D.41011_200 = switch_channel_test_flag (D.40823_199, 99);
  if (D.41011_200 != 0)
    goto <bb 98>;
  else
    goto <bb 99>;

<bb 98>:
  ok_201 = 0;
  # DEBUG ok => ok_201
  goto <bb 102>;

<bb 99>:
  D.40823_202 = session_26(D)->channel;
  val_203 = switch_channel_get_variable_dup (D.40823_202, "rtp_autoflush_during_bridge", 1, -1);
  # DEBUG val => val_203
  if (val_203 != 0B)
    goto <bb 100>;
  else
    goto <bb 101>;

<bb 100>:
  ok_204 = switch_true (val_203);
  # DEBUG ok => ok_204
  goto <bb 102>;

<bb 101>:
  D.41016_205 = smh_27->media_flags[14];
  ok_206 = (int) D.41016_205;
  # DEBUG ok => ok_206

<bb 102>:
  # ok_20 = PHI <ok_201(98), ok_204(100), ok_206(101)>
  # DEBUG ok => ok_20
  if (ok_20 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;

<bb 103>:
  D.40834_207 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_207, 1);
  D.40823_208 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_208, 104, 1);
  goto <bb 173> (end);

<bb 104>:
  D.40834_209 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_209, 0);
  goto <bb 173> (end);

<L126>:
  D.40834_210 = a_engine_33->rtp_session;
  D.41020_211 = switch_rtp_ready (D.40834_210);
  if (D.41020_211 != 0)
    goto <bb 106>;
  else
    goto <bb 173> (end);

<bb 106>:
  D.40988_212 = smh_27->flags;
  D.41023_213 = D.40988_212 & 4;
  if (D.41023_213 != 0)
    goto <bb 107>;
  else
    goto <bb 109>;

<bb 107>:
  D.40988_214 = smh_27->flags;
  D.41026_215 = D.40988_214 & 4294967291;
  smh_27->flags = D.41026_215;
  D.40823_216 = session_26(D)->channel;
  D.41027_217 = switch_channel_test_flag (D.40823_216, 57);
  if (D.41027_217 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;

<bb 108>:
  D.40823_218 = session_26(D)->channel;
  D.41030_219 = switch_channel_get_name (D.40823_218);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7704, session_26(D), 7, "%s RESUME Jitterbuffer\n", D.41030_219);
  D.40834_220 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_220, 0);

<bb 109>:
  D.40834_221 = a_engine_33->rtp_session;
  D.41031_222 = switch_rtp_test_flag (D.40834_221, 15);
  if (D.41031_222 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;

<bb 110>:
  D.40823_223 = session_26(D)->channel;
  D.41034_224 = switch_channel_get_name (D.40823_223);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7712, session_26(D), 7, "%s deactivate passthru 2833 mode.\n", D.41034_224);
  D.40834_225 = a_engine_33->rtp_session;
  switch_rtp_clear_flag (D.40834_225, 15);

<bb 111>:
  D.40823_226 = session_26(D)->channel;
  D.41035_227 = switch_channel_test_flag (D.40823_226, 99);
  if (D.41035_227 != 0)
    goto <bb 112>;
  else
    goto <bb 116>;

<bb 112>:
  D.40834_228 = a_engine_33->rtp_session;
  D.41038_229 = switch_rtp_test_flag (D.40834_228, 12);
  if (D.41038_229 == 0)
    goto <bb 113>;
  else
    goto <bb 115>;

<bb 113>:
  D.40834_230 = a_engine_33->rtp_session;
  D.41041_231 = switch_rtp_test_flag (D.40834_230, 19);
  if (D.41041_231 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  D.40834_232 = a_engine_33->rtp_session;
  switch_rtp_set_flag (D.40834_232, 3);

<bb 115>:
  D.40823_233 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_233, 99);

<bb 116>:
  D.40823_234 = session_26(D)->channel;
  D.41044_235 = switch_channel_test_flag (D.40823_234, 104);
  if (D.41044_235 != 0)
    goto <bb 117>;
  else
    goto <bb 118>;

<bb 117>:
  D.40834_236 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_236, 2);
  D.40823_237 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_237, 104);
  goto <bb 173> (end);

<bb 118>:
  D.40834_238 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_238, 0);
  goto <bb 173> (end);

<L144>:
  D.40834_239 = a_engine_33->rtp_session;
  D.41048_240 = switch_rtp_ready (D.40834_239);
  if (D.41048_240 != 0)
    goto <bb 120>;
  else
    goto <bb 173> (end);

<bb 120>:
  D.40834_241 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_241, 0);
  goto <bb 173> (end);

<L147>:
  D.41051_242 = session_26(D)->track_duration;
  if (D.41051_242 != 0)
    goto <bb 122>;
  else
    goto <bb 141> (<L211>);

<bb 122>:
  D.41051_243 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_243);
  goto <bb 141> (<L211>);

<L150>:
  ip_244 = 0B;
  # DEBUG ip => ip_244
  port_245 = 0B;
  # DEBUG port => port_245
  D.40823_246 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_246, 15, 1);
  a_engine_33->codec_negotiated = 0;
  v_engine_34->codec_negotiated = 0;
  switch_core_media_set_local_sdp (session_26(D), 0B, 0);
  D.40823_247 = session_26(D)->channel;
  D.41054_248 = switch_channel_get_variable_dup (D.40823_247, "bypass_keep_codec", 1, -1);
  D.41055_249 = switch_true (D.41054_248);
  if (D.41055_249 != 0)
    goto <bb 124>;
  else
    goto <bb 125>;

<bb 124>:
  D.40823_250 = session_26(D)->channel;
  D.40823_251 = session_26(D)->channel;
  D.41058_252 = switch_channel_get_variable_dup (D.40823_251, "ep_codec_string", 1, -1);
  switch_channel_set_variable_var_check (D.40823_251, "absolute_codec_string", D.41058_252, 1);

<bb 125>:
  D.40823_253 = session_26(D)->channel;
  uuid_254 = switch_channel_get_partner_uuid (D.40823_253);
  # DEBUG uuid => uuid_254
  if (uuid_254 != 0B)
    goto <bb 126>;
  else
    goto <bb 137>;

<bb 126>:
  other_session_255 = switch_core_session_perform_locate (uuid_254, "src/switch_core_media.c", &__func__, 7768);
  # DEBUG other_session => other_session_255
  if (other_session_255 != 0B)
    goto <bb 127>;
  else
    goto <bb 137>;

<bb 127>:
  other_channel_256 = switch_core_session_get_channel (other_session_255);
  # DEBUG other_channel => other_channel_256
  ip_257 = switch_channel_get_variable_dup (other_channel_256, "remote_media_ip", 1, -1);
  # DEBUG ip => ip_257
  port_258 = switch_channel_get_variable_dup (other_channel_256, "remote_media_port", 1, -1);
  # DEBUG port => port_258
  switch_core_session_rwunlock (other_session_255);
  D.41063_259 = ip_257 != 0B;
  D.41064_260 = port_258 != 0B;
  D.41065_261 = D.41063_259 && D.41064_260;
  if (D.41065_261 != 0)
    goto <bb 128>;
  else
    goto <bb 137>;

<bb 128>:
  switch_core_media_prepare_codecs (session_26(D), 1);
  # DEBUG engine => a_engine_33
  pmap_488 = a_engine_33->payload_map;
  # DEBUG pmap => pmap_488
  goto <bb 130>;

<bb 129>:
  pmap_489->negotiated = 0;
  pmap_489->current = 0;
  pmap_490 = pmap_489->next;
  # DEBUG pmap => pmap_490

<bb 130>:
  # pmap_489 = PHI <pmap_488(128), pmap_490(129)>
  # DEBUG pmap => pmap_489
  if (pmap_489 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;

<bb 131>:
  D.48246_491 = pmap_489->allocated;
  if (D.48246_491 != 0)
    goto <bb 129>;
  else
    goto <bb 132>;

<bb 132>:
  # DEBUG engine => v_engine_34
  pmap_492 = v_engine_34->payload_map;
  # DEBUG pmap => pmap_492
  goto <bb 134>;

<bb 133>:
  pmap_493->negotiated = 0;
  pmap_493->current = 0;
  pmap_494 = pmap_493->next;
  # DEBUG pmap => pmap_494

<bb 134>:
  # pmap_493 = PHI <pmap_492(132), pmap_494(133)>
  # DEBUG pmap => pmap_493
  if (pmap_493 != 0B)
    goto <bb 135>;
  else
    goto <bb 136>;

<bb 135>:
  D.48249_495 = pmap_493->allocated;
  if (D.48249_495 != 0)
    goto <bb 133>;
  else
    goto <bb 136>;

<bb 136>:
  # DEBUG __nptr => port_258
  D.48251_496 = strtol (port_258, 0B, 10);
  D.48251_514 = D.48251_496;
  D.48251_262 = D.48251_514;
  D.41069_263 = (short unsigned int) D.48251_262;
  switch_core_media_gen_local_sdp (session_26(D), 0, ip_257, D.41069_263, 0B, 1);

<bb 137>:
  D.41070_264 = smh_27->mparams;
  D.41071_265 = D.41070_264->local_sdp_str;
  if (D.41071_265 == 0B)
    goto <bb 138>;
  else
    goto <bb 139>;

<bb 138>:
  switch_core_media_absorb_sdp (session_26(D));

<bb 139>:
  D.41051_266 = session_26(D)->track_duration;
  if (D.41051_266 != 0)
    goto <bb 140>;
  else
    goto <bb 141> (<L211>);

<bb 140>:
  D.41051_267 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_267);

<L211>:
  D.41076_268 = smh_27->mutex;
  if (D.41076_268 != 0B)
    goto <bb 142>;
  else
    goto <bb 143>;

<bb 142>:
  D.41076_269 = smh_27->mutex;
  switch_mutex_lock (D.41076_269);

<bb 143>:
  D.40823_270 = session_26(D)->channel;
  D.41081_271 = switch_channel_check_signal (D.40823_270, 1);
  if (D.41081_271 != 0)
    goto <bb 145>;
  else
    goto <bb 144>;

<bb 144>:
  D.40823_272 = session_26(D)->channel;
  D.41083_273 = switch_channel_get_state (D.40823_272);
  if (D.41083_273 > 9)
    goto <bb 145>;
  else
    goto <bb 146>;

<bb 145>:
  status_317 = 1;
  # DEBUG status => status_317
  goto <bb 171> (end_lock);

<bb 146>:
  D.40827_274 = msg_35(D)->message_id;
  switch (D.40827_274) <default: end_lock, case 30: <L198>, case 37: <L186>, case 40: <L170>>

<L170>:
  D.40845_275 = msg_35(D)->string_arg;
  if (D.40845_275 != 0B)
    goto <bb 148>;
  else
    goto <bb 158>;

<bb 148>:
  D.40823_276 = session_26(D)->channel;
  switch_channel_set_variable_var_check (D.40823_276, "absolute_codec_string", 0B, 1);
  D.40845_277 = msg_35(D)->string_arg;
  D.41086_278 = *D.40845_277;
  if (D.41086_278 == 61)
    goto <bb 149>;
  else
    goto <bb 150>;

<bb 149>:
  D.40823_279 = session_26(D)->channel;
  D.40845_280 = msg_35(D)->string_arg;
  switch_channel_set_variable_var_check (D.40823_279, "codec_string", D.40845_280, 1);
  goto <bb 157>;

<bb 150>:
  D.40823_281 = session_26(D)->channel;
  D.41091_282 = v_engine_34->cur_payload_map;
  D.41092_283 = D.41091_282->rm_encoding;
  if (D.41092_283 != 0B)
    goto <bb 151>;
  else
    goto <bb 152>;

<bb 151>:
  D.41091_284 = v_engine_34->cur_payload_map;
  iftmp.11_285 = D.41091_284->rm_encoding;
  goto <bb 153>;

<bb 152>:
  iftmp.11_286 = "";

<bb 153>:
  # iftmp.11_23 = PHI <iftmp.11_285(151), iftmp.11_286(152)>
  D.41091_287 = v_engine_34->cur_payload_map;
  D.41092_288 = D.41091_287->rm_encoding;
  if (D.41092_288 != 0B)
    goto <bb 154>;
  else
    goto <bb 155>;

<bb 154>:
  iftmp.12_289 = ",";
  goto <bb 156>;

<bb 155>:
  iftmp.12_290 = "";

<bb 156>:
  # iftmp.12_24 = PHI <iftmp.12_289(154), iftmp.12_290(155)>
  D.41100_291 = a_engine_33->cur_payload_map;
  D.41101_292 = D.41100_291->rm_encoding;
  D.40845_293 = msg_35(D)->string_arg;
  switch_channel_set_variable_printf (D.40823_281, "codec_string", "=%s%s%s,%s", iftmp.11_23, iftmp.12_24, D.41101_292, D.40845_293);

<bb 157>:
  a_engine_33->codec_negotiated = 0;
  v_engine_34->codec_negotiated = 0;
  D.40823_294 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_294, 98);
  switch_core_media_prepare_codecs (session_26(D), 1);
  switch_core_media_check_video_codecs (session_26(D));
  switch_core_media_gen_local_sdp (session_26(D), 0, 0B, 0, 0B, 1);

<bb 158>:
  switch_media_handle_set_media_flag (smh_27, 7);
  D.40838_295 = msg_35(D)->numeric_arg;
  if (D.40838_295 != 0)
    goto <bb 159>;
  else
    goto <bb 171> (end_lock);

<bb 159>:
  D.41104_296 = switch_core_session_perform_get_partner (session_26(D), &nsession, "src/switch_core_media.c", &__func__, 7835);
  if (D.41104_296 == 0)
    goto <bb 160>;
  else
    goto <bb 171> (end_lock);

<bb 160>:
  msg_35(D)->numeric_arg = 0;
  nsession.13_297 = nsession;
  switch_core_session_perform_receive_message (nsession.13_297, msg_35(D), "src/switch_core_media.c", &__func__, 7837);
  nsession.13_298 = nsession;
  switch_core_session_rwunlock (nsession.13_298);
  goto <bb 171> (end_lock);

<L186>:
  D.40834_299 = a_engine_33->rtp_session;
  D.41108_300 = switch_rtp_ready (D.40834_299);
  if (D.41108_300 != 0)
    goto <bb 162>;
  else
    goto <bb 171> (end_lock);

<bb 162>:
  D.40838_301 = msg_35(D)->numeric_arg;
  if (D.40838_301 != 0)
    goto <bb 163>;
  else
    goto <bb 166>;

<bb 163>:
  D.40823_302 = session_26(D)->channel;
  D.41113_303 = switch_channel_test_flag (D.40823_302, 57);
  if (D.41113_303 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;

<bb 164>:
  D.40834_304 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_304, 1);
  D.40988_305 = smh_27->flags;
  D.40989_306 = D.40988_305 | 4;
  smh_27->flags = D.40989_306;

<bb 165>:
  D.40834_307 = a_engine_33->rtp_session;
  rtp_flush_read_buffer (D.40834_307, 2);
  goto <bb 171> (end_lock);

<bb 166>:
  D.40988_308 = smh_27->flags;
  D.41023_309 = D.40988_308 & 4;
  if (D.41023_309 != 0)
    goto <bb 167>;
  else
    goto <bb 171> (end_lock);

<bb 167>:
  D.40988_310 = smh_27->flags;
  D.41026_311 = D.40988_310 & 4294967291;
  smh_27->flags = D.41026_311;
  D.40823_312 = session_26(D)->channel;
  D.41119_313 = switch_channel_test_flag (D.40823_312, 57);
  if (D.41119_313 != 0)
    goto <bb 168>;
  else
    goto <bb 171> (end_lock);

<bb 168>:
  D.40834_314 = a_engine_33->rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_314, 0);
  goto <bb 171> (end_lock);

<L198>:
  D.40823_315 = session_26(D)->channel;
  t38_options_316 = switch_channel_get_private (D.40823_315, "t38_options");
  # DEBUG t38_options => t38_options_316
  if (t38_options_316 != 0B)
    goto <bb 170>;
  else
    goto <bb 171> (end_lock);

<bb 170>:
  switch_core_media_start_udptl (session_26(D), t38_options_316);

  # status_1 = PHI <status_317(145), status_25(159), status_25(165), status_25(169), status_25(158), status_25(160), status_25(161), status_25(168), status_25(167), status_25(166), status_25(146), status_25(170)>
end_lock:
  # DEBUG status => status_1
  D.41076_318 = smh_27->mutex;
  if (D.41076_318 != 0B)
    goto <bb 172>;
  else
    goto <bb 173> (end);

<bb 172>:
  D.41076_319 = smh_27->mutex;
  switch_mutex_unlock (D.41076_319);

  # status_2 = PHI <status_25(21), status_25(23), status_109(35), status_25(60), status_25(77), status_25(103), status_25(117), status_25(120), status_1(171), status_1(172), status_25(56), status_25(73), status_25(75), status_25(74), status_25(64), status_25(76), status_25(78), status_25(79), status_25(104), status_25(105), status_25(118), status_25(119)>
end:
  # DEBUG status => status_2
  D.40823_320 = session_26(D)->channel;
  D.41128_321 = switch_channel_check_signal (D.40823_320, 1);
  if (D.41128_321 != 0)
    goto <bb 175>;
  else
    goto <bb 174>;

<bb 174>:
  D.40823_322 = session_26(D)->channel;
  D.41130_323 = switch_channel_get_state (D.40823_322);
  if (D.41130_323 > 9)
    goto <bb 175>;
  else
    goto <bb 176>;

<bb 175>:
  status_324 = 1;
  # DEBUG status => status_324

<bb 176>:
  # status_3 = PHI <status_2(174), status_324(175)>
  # DEBUG status => status_3
  status_325 = status_3;

<bb 177>:
  # status_21 = PHI <status_28(5), status_326(8), status_325(176)>
  return status_21;

}



;; Function switch_core_media_break (switch_core_media_break)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40811_4 - 4 )
Partition 5 (D.40812_5 - 5 )
Partition 6 (D.40811_6 - 6 )
Partition 7 (.MEM_7(D) - 7 )
Partition 8 (.MEM_8 - 8 )
Partition 9 (.MEM_9 - 9 )

switch_core_media_break (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_break";
  struct switch_media_handle_t * smh;
  uint8_t D.40812;
  struct switch_rtp_t * D.40811;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7902, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40811_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40812_5 = switch_rtp_ready (D.40811_4);
  if (D.40812_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40811_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_break (D.40811_6);

<bb 7>:
  return;

}



;; Function switch_core_media_kill_socket (switch_core_media_kill_socket)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40802_4 - 4 )
Partition 5 (D.40803_5 - 5 )
Partition 6 (D.40802_6 - 6 )
Partition 7 (.MEM_7(D) - 7 )
Partition 8 (.MEM_8 - 8 )
Partition 9 (.MEM_9 - 9 )

switch_core_media_kill_socket (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_kill_socket";
  struct switch_media_handle_t * smh;
  uint8_t D.40803;
  struct switch_rtp_t * D.40802;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7918, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40802_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40803_5 = switch_rtp_ready (D.40802_4);
  if (D.40803_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40802_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_kill_socket (D.40802_6);

<bb 7>:
  return;

}



;; Function switch_core_media_queue_rfc2833 (switch_core_media_queue_rfc2833)

Try : D.40792_1(P1) & D.40792_4(P4) : Same root, coalesced --> P1.
Try : D.40792_1(P1) & D.40792_10(P10) : Same root, coalesced --> P1.
Try : D.40792_1(P1) & D.40792_11(P11) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40792_1 - 1 4 10 11 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40793_6 - 6 )
Partition 7 (D.40794_7 - 7 )
Partition 8 (D.40793_8 - 8 )
Partition 9 (dtmf_9(D) - 9 )
Partition 12 (.MEM_12(D) - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

switch_core_media_queue_rfc2833 (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_queue_rfc2833";
  struct switch_media_handle_t * smh;
  uint8_t D.40794;
  struct switch_rtp_t * D.40793;
  switch_status_t D.40792;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7934, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40792_4 = 1;
  goto <bb 9>;

<bb 6>:
  D.40793_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40794_7 = switch_rtp_ready (D.40793_6);
  if (D.40794_7 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40793_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40792_10 = switch_rtp_queue_rfc2833 (D.40793_8, dtmf_9(D));
  goto <bb 9>;

<bb 8>:
  D.40792_11 = 1;

<bb 9>:
  # D.40792_1 = PHI <D.40792_4(5), D.40792_10(7), D.40792_11(8)>
  return D.40792_1;

}



;; Function switch_core_media_queue_rfc2833_in (switch_core_media_queue_rfc2833_in)

Try : D.40782_1(P1) & D.40782_4(P4) : Same root, coalesced --> P1.
Try : D.40782_1(P1) & D.40782_10(P10) : Same root, coalesced --> P1.
Try : D.40782_1(P1) & D.40782_11(P11) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40782_1 - 1 4 10 11 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40783_6 - 6 )
Partition 7 (D.40784_7 - 7 )
Partition 8 (D.40783_8 - 8 )
Partition 9 (dtmf_9(D) - 9 )
Partition 12 (.MEM_12(D) - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )

switch_core_media_queue_rfc2833_in (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_queue_rfc2833_in";
  struct switch_media_handle_t * smh;
  uint8_t D.40784;
  struct switch_rtp_t * D.40783;
  switch_status_t D.40782;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7952, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40782_4 = 1;
  goto <bb 9>;

<bb 6>:
  D.40783_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40784_7 = switch_rtp_ready (D.40783_6);
  if (D.40784_7 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40783_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40782_10 = switch_rtp_queue_rfc2833_in (D.40783_8, dtmf_9(D));
  goto <bb 9>;

<bb 8>:
  D.40782_11 = 1;

<bb 9>:
  # D.40782_1 = PHI <D.40782_4(5), D.40782_10(7), D.40782_11(8)>
  return D.40782_1;

}



;; Function switch_core_media_ready (switch_core_media_ready)

Try : D.40775_1(P1) & D.40775_4(P4) : Same root, coalesced --> P1.
Try : D.40775_1(P1) & D.40775_7(P7) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40775_1 - 1 4 7 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40776_6 - 6 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )

switch_core_media_ready (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_ready";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40776;
  uint8_t D.40775;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7970, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40775_4 = 0;
  goto <bb 7>;

<bb 6>:
  D.40776_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40775_7 = switch_rtp_ready (D.40776_6);

<bb 7>:
  # D.40775_1 = PHI <D.40775_4(5), D.40775_7(6)>
  return D.40775_1;

}



;; Function switch_core_media_set_rtp_flag (switch_core_media_set_rtp_flag)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40766_4 - 4 )
Partition 5 (D.40767_5 - 5 )
Partition 6 (D.40766_6 - 6 )
Partition 7 (flag_7(D) - 7 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (.MEM_10 - 10 )

switch_core_media_set_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_set_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40767;
  struct switch_rtp_t * D.40766;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7984, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40766_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40767_5 = switch_rtp_ready (D.40766_4);
  if (D.40767_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40766_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_flag (D.40766_6, flag_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_clear_rtp_flag (switch_core_media_clear_rtp_flag)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40757_4 - 4 )
Partition 5 (D.40758_5 - 5 )
Partition 6 (D.40757_6 - 6 )
Partition 7 (flag_7(D) - 7 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (.MEM_10 - 10 )

switch_core_media_clear_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_clear_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40758;
  struct switch_rtp_t * D.40757;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8000, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40757_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40758_5 = switch_rtp_ready (D.40757_4);
  if (D.40758_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40757_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_clear_flag (D.40757_6, flag_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_set_telephony_event (switch_core_media_set_telephony_event)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40748_4 - 4 )
Partition 5 (D.40749_5 - 5 )
Partition 6 (D.40748_6 - 6 )
Partition 7 (te_7(D) - 7 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (.MEM_10 - 10 )

switch_core_media_set_telephony_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_telephony_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40749;
  struct switch_rtp_t * D.40748;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8016, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40748_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40749_5 = switch_rtp_ready (D.40748_4);
  if (D.40749_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40748_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_event (D.40748_6, te_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_set_telephony_recv_event (switch_core_media_set_telephony_recv_event)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (type_3(D) - 3 )
Partition 4 (D.40739_4 - 4 )
Partition 5 (D.40740_5 - 5 )
Partition 6 (D.40739_6 - 6 )
Partition 7 (te_7(D) - 7 )
Partition 8 (.MEM_8(D) - 8 )
Partition 9 (.MEM_9 - 9 )
Partition 10 (.MEM_10 - 10 )

switch_core_media_set_telephony_recv_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[43] = "switch_core_media_set_telephony_recv_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40740;
  struct switch_rtp_t * D.40739;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8032, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40739_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40740_5 = switch_rtp_ready (D.40739_4);
  if (D.40740_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40739_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_recv_event (D.40739_6, te_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_get_stats (switch_core_media_get_stats)

Try : D.40730_1(P1) & D.40730_4(P4) : Same root, coalesced --> P1.
Try : D.40730_1(P1) & D.40730_9(P9) : Same root, coalesced --> P1.
Try : D.40730_1(P1) & D.40730_10(P10) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40730_1 - 1 4 9 10 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40731_6 - 6 )
Partition 7 (D.40731_7 - 7 )
Partition 8 (pool_8(D) - 8 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )

switch_core_media_get_stats (struct switch_core_session_t * session, switch_media_type_t type, struct switch_memory_pool_t * pool)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_get_stats";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40731;
  struct switch_rtp_stats_t * D.40730;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8048, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40730_4 = 0B;
  goto <bb 9>;

<bb 6>:
  D.40731_6 = smh_3->engines[type_5(D)].rtp_session;
  if (D.40731_6 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40731_7 = smh_3->engines[type_5(D)].rtp_session;
  D.40730_9 = switch_rtp_get_stats (D.40731_7, pool_8(D));
  goto <bb 9>;

<bb 8>:
  D.40730_10 = 0B;

<bb 9>:
  # D.40730_1 = PHI <D.40730_4(5), D.40730_9(7), D.40730_10(8)>
  return D.40730_1;

}



;; Function set_stats (set_stats)

Try : iftmp.137_35(P35) & prefix_34(D)(P34) --> P35 prefix
Try : iftmp.138_38(P38) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.139_41(P41) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.140_44(P44) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.141_47(P47) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.142_50(P50) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.143_53(P53) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.144_56(P56) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.145_59(P59) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.146_62(P62) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.147_65(P65) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.148_68(P68) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.149_71(P71) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.150_74(P74) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.151_77(P77) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.152_80(P80) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.153_83(P83) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.154_86(P86) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.155_89(P89) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.156_92(P92) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.157_95(P95) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.158_98(P98) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.159_101(P101) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.160_104(P104) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.161_107(P107) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.162_110(P110) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.163_113(P113) & prefix_34(D)(P35) --> P35 prefix
Try : iftmp.137_1(P1) & prefix_35(P35) --> P35 prefix
Try : iftmp.137_1(P35) & iftmp.137_36(P36) --> P35 prefix
Try : iftmp.138_2(P2) & iftmp.138_38(P35) --> P35 prefix
Try : iftmp.138_2(P35) & iftmp.138_39(P39) --> P35 prefix
Try : iftmp.139_3(P3) & iftmp.139_41(P35) --> P35 prefix
Try : iftmp.139_3(P35) & iftmp.139_42(P42) --> P35 prefix
Try : iftmp.140_4(P4) & iftmp.140_44(P35) --> P35 prefix
Try : iftmp.140_4(P35) & iftmp.140_45(P45) --> P35 prefix
Try : iftmp.141_5(P5) & iftmp.141_47(P35) --> P35 prefix
Try : iftmp.141_5(P35) & iftmp.141_48(P48) --> P35 prefix
Try : iftmp.142_6(P6) & iftmp.142_50(P35) --> P35 prefix
Try : iftmp.142_6(P35) & iftmp.142_51(P51) --> P35 prefix
Try : iftmp.143_7(P7) & iftmp.143_53(P35) --> P35 prefix
Try : iftmp.143_7(P35) & iftmp.143_54(P54) --> P35 prefix
Try : iftmp.144_8(P8) & iftmp.144_56(P35) --> P35 prefix
Try : iftmp.144_8(P35) & iftmp.144_57(P57) --> P35 prefix
Try : iftmp.145_9(P9) & iftmp.145_59(P35) --> P35 prefix
Try : iftmp.145_9(P35) & iftmp.145_60(P60) --> P35 prefix
Try : iftmp.146_10(P10) & iftmp.146_62(P35) --> P35 prefix
Try : iftmp.146_10(P35) & iftmp.146_63(P63) --> P35 prefix
Try : iftmp.147_11(P11) & iftmp.147_65(P35) --> P35 prefix
Try : iftmp.147_11(P35) & iftmp.147_66(P66) --> P35 prefix
Try : iftmp.148_12(P12) & iftmp.148_68(P35) --> P35 prefix
Try : iftmp.148_12(P35) & iftmp.148_69(P69) --> P35 prefix
Try : iftmp.149_13(P13) & iftmp.149_71(P35) --> P35 prefix
Try : iftmp.149_13(P35) & iftmp.149_72(P72) --> P35 prefix
Try : iftmp.150_14(P14) & iftmp.150_74(P35) --> P35 prefix
Try : iftmp.150_14(P35) & iftmp.150_75(P75) --> P35 prefix
Try : iftmp.151_15(P15) & iftmp.151_77(P35) --> P35 prefix
Try : iftmp.151_15(P35) & iftmp.151_78(P78) --> P35 prefix
Try : iftmp.152_16(P16) & iftmp.152_80(P35) --> P35 prefix
Try : iftmp.152_16(P35) & iftmp.152_81(P81) --> P35 prefix
Try : iftmp.153_17(P17) & iftmp.153_83(P35) --> P35 prefix
Try : iftmp.153_17(P35) & iftmp.153_84(P84) --> P35 prefix
Try : iftmp.154_18(P18) & iftmp.154_86(P35) --> P35 prefix
Try : iftmp.154_18(P35) & iftmp.154_87(P87) --> P35 prefix
Try : iftmp.155_19(P19) & iftmp.155_89(P35) --> P35 prefix
Try : iftmp.155_19(P35) & iftmp.155_90(P90) --> P35 prefix
Try : iftmp.156_20(P20) & iftmp.156_92(P35) --> P35 prefix
Try : iftmp.156_20(P35) & iftmp.156_93(P93) --> P35 prefix
Try : iftmp.157_21(P21) & iftmp.157_95(P35) --> P35 prefix
Try : iftmp.157_21(P35) & iftmp.157_96(P96) --> P35 prefix
Try : iftmp.158_22(P22) & iftmp.158_98(P35) --> P35 prefix
Try : iftmp.158_22(P35) & iftmp.158_99(P99) --> P35 prefix
Try : iftmp.159_23(P23) & iftmp.159_101(P35) --> P35 prefix
Try : iftmp.159_23(P35) & iftmp.159_102(P102) --> P35 prefix
Try : iftmp.160_24(P24) & iftmp.160_104(P35) --> P35 prefix
Try : iftmp.160_24(P35) & iftmp.160_105(P105) --> P35 prefix
Try : iftmp.161_25(P25) & iftmp.161_107(P35) --> P35 prefix
Try : iftmp.161_25(P35) & iftmp.161_108(P108) --> P35 prefix
Try : iftmp.162_26(P26) & iftmp.162_110(P35) --> P35 prefix
Try : iftmp.162_26(P35) & iftmp.162_111(P111) --> P35 prefix
Try : iftmp.163_27(P27) & iftmp.163_113(P35) --> P35 prefix
Try : iftmp.163_27(P35) & iftmp.163_114(P114) --> P35 prefix

Partition map 

Partition 28 (session_28(D) - 28 )
Partition 29 (type_29(D) - 29 )
Partition 30 (stats_30 - 30 )
Partition 31 (channel_31 - 31 )
Partition 32 (D.46526_32 - 32 )
Partition 33 (D.46527_33 - 33 )
Partition 35 (prefix_35 - 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 34 35 36 38 39 41 42 44 45 47 48 50 51 53 54 56 57 59 60 62 63 65 66 68 69 71 72 74 75 77 78 80 81 83 84 86 87 89 90 92 93 95 96 98 99 101 102 104 105 107 108 110 111 113 114 )
Partition 37 (D.46532_37 - 37 )
Partition 40 (D.46537_40 - 40 )
Partition 43 (D.46542_43 - 43 )
Partition 46 (D.46547_46 - 46 )
Partition 49 (D.46552_49 - 49 )
Partition 52 (D.46557_52 - 52 )
Partition 55 (D.46562_55 - 55 )
Partition 58 (D.46567_58 - 58 )
Partition 61 (D.46572_61 - 61 )
Partition 64 (D.46577_64 - 64 )
Partition 67 (D.46582_67 - 67 )
Partition 70 (D.46587_70 - 70 )
Partition 73 (D.46592_73 - 73 )
Partition 76 (D.46597_76 - 76 )
Partition 79 (D.46602_79 - 79 )
Partition 82 (D.46607_82 - 82 )
Partition 85 (D.46612_85 - 85 )
Partition 88 (D.46617_88 - 88 )
Partition 91 (D.46622_91 - 91 )
Partition 94 (D.46627_94 - 94 )
Partition 97 (D.46632_97 - 97 )
Partition 100 (D.46637_100 - 100 )
Partition 103 (D.46642_103 - 103 )
Partition 106 (D.46647_106 - 106 )
Partition 109 (D.46652_109 - 109 )
Partition 112 (D.46657_112 - 112 )
Partition 115 (D.46662_115 - 115 )
Partition 116 (.MEM_116(D) - 116 )
Partition 117 (.MEM_117 - 117 )
Partition 118 (.MEM_118 - 118 )
Partition 119 (.MEM_119 - 119 )
Partition 120 (.MEM_120 - 120 )
Partition 121 (.MEM_121 - 121 )
Partition 122 (.MEM_122 - 122 )
Partition 123 (.MEM_123 - 123 )
Partition 124 (.MEM_124 - 124 )
Partition 125 (.MEM_125 - 125 )
Partition 126 (.MEM_126 - 126 )
Partition 127 (.MEM_127 - 127 )
Partition 128 (.MEM_128 - 128 )
Partition 129 (.MEM_129 - 129 )
Partition 130 (.MEM_130 - 130 )
Partition 131 (.MEM_131 - 131 )
Partition 132 (.MEM_132 - 132 )
Partition 133 (.MEM_133 - 133 )
Partition 134 (.MEM_134 - 134 )
Partition 135 (.MEM_135 - 135 )
Partition 136 (.MEM_136 - 136 )
Partition 137 (.MEM_137 - 137 )
Partition 138 (.MEM_138 - 138 )
Partition 139 (.MEM_139 - 139 )
Partition 140 (.MEM_140 - 140 )
Partition 141 (.MEM_141 - 141 )
Partition 142 (.MEM_142 - 142 )
Partition 143 (.MEM_143 - 143 )
Partition 144 (.MEM_144 - 144 )
Partition 145 (.MEM_145 - 145 )
Partition 146 (.MEM_146 - 146 )
Partition 147 (.MEM_147 - 147 )
Partition 148 (.MEM_148 - 148 )
Partition 149 (.MEM_149 - 149 )
Partition 150 (.MEM_150 - 150 )
Partition 151 (.MEM_151 - 151 )
Partition 152 (.MEM_152 - 152 )
Partition 153 (.MEM_153 - 153 )
Partition 154 (.MEM_154 - 154 )
Partition 155 (.MEM_155 - 155 )
Partition 156 (.MEM_156 - 156 )
Partition 157 (.MEM_157 - 157 )
Partition 158 (.MEM_158 - 158 )
Partition 159 (.MEM_159 - 159 )
Partition 160 (.MEM_160 - 160 )
Partition 161 (.MEM_161 - 161 )
Partition 162 (.MEM_162 - 162 )
Partition 163 (.MEM_163 - 163 )
Partition 164 (.MEM_164 - 164 )
Partition 165 (.MEM_165 - 165 )
Partition 166 (.MEM_166 - 166 )
Partition 167 (.MEM_167 - 167 )
Partition 168 (.MEM_168 - 168 )
Partition 169 (.MEM_169 - 169 )
Partition 170 (.MEM_170 - 170 )
Partition 171 (.MEM_171 - 171 )
Partition 172 (.MEM_172 - 172 )
Partition 173 (.MEM_173 - 173 )
Partition 174 (.MEM_174 - 174 )
Partition 175 (.MEM_175 - 175 )
Partition 176 (.MEM_176 - 176 )
Partition 177 (.MEM_177 - 177 )
Partition 178 (.MEM_178 - 178 )
Partition 179 (.MEM_179 - 179 )
Partition 180 (.MEM_180 - 180 )
Partition 181 (.MEM_181 - 181 )
Partition 182 (.MEM_182 - 182 )
Partition 183 (.MEM_183 - 183 )
Partition 184 (.MEM_184 - 184 )
Partition 185 (.MEM_185 - 185 )
Partition 186 (.MEM_186 - 186 )
Partition 187 (.MEM_187 - 187 )
Partition 188 (.MEM_188 - 188 )
Partition 189 (.MEM_189 - 189 )
Partition 190 (.MEM_190 - 190 )
Partition 191 (.MEM_191 - 191 )
Partition 192 (.MEM_192 - 192 )
Partition 193 (.MEM_193 - 193 )
Partition 194 (.MEM_194 - 194 )
Partition 195 (.MEM_195 - 195 )
Partition 196 (.MEM_196 - 196 )
Partition 197 (.MEM_197 - 197 )
Partition 198 (.MEM_198 - 198 )
Partition 199 (.MEM_199 - 199 )
Partition 200 (.MEM_200 - 200 )
Partition 201 (.MEM_201 - 201 )
Partition 202 (.MEM_202 - 202 )
Partition 203 (.MEM_203 - 203 )

Coalesced iftmp.137_1 to prefix_35
Coalesced iftmp.138_2 to prefix_35
Coalesced iftmp.139_3 to prefix_35
Coalesced iftmp.140_4 to prefix_35
Coalesced iftmp.141_5 to prefix_35
Coalesced iftmp.142_6 to prefix_35
Coalesced iftmp.143_7 to prefix_35
Coalesced iftmp.144_8 to prefix_35
Coalesced iftmp.145_9 to prefix_35
Coalesced iftmp.146_10 to prefix_35
Coalesced iftmp.147_11 to prefix_35
Coalesced iftmp.148_12 to prefix_35
Coalesced iftmp.149_13 to prefix_35
Coalesced iftmp.150_14 to prefix_35
Coalesced iftmp.151_15 to prefix_35
Coalesced iftmp.152_16 to prefix_35
Coalesced iftmp.153_17 to prefix_35
Coalesced iftmp.154_18 to prefix_35
Coalesced iftmp.155_19 to prefix_35
Coalesced iftmp.156_20 to prefix_35
Coalesced iftmp.157_21 to prefix_35
Coalesced iftmp.158_22 to prefix_35
Coalesced iftmp.159_23 to prefix_35
Coalesced iftmp.160_24 to prefix_35
Coalesced iftmp.161_25 to prefix_35
Coalesced iftmp.162_26 to prefix_35
Coalesced iftmp.163_27 to prefix_35
Coalesced iftmp.137_36 to prefix_35
Coalesced iftmp.138_38 to prefix_35
Coalesced iftmp.138_39 to prefix_35
Coalesced iftmp.139_41 to prefix_35
Coalesced iftmp.139_42 to prefix_35
Coalesced iftmp.140_44 to prefix_35
Coalesced iftmp.140_45 to prefix_35
Coalesced iftmp.141_47 to prefix_35
Coalesced iftmp.141_48 to prefix_35
Coalesced iftmp.142_50 to prefix_35
Coalesced iftmp.142_51 to prefix_35
Coalesced iftmp.143_53 to prefix_35
Coalesced iftmp.143_54 to prefix_35
Coalesced iftmp.144_56 to prefix_35
Coalesced iftmp.144_57 to prefix_35
Coalesced iftmp.145_59 to prefix_35
Coalesced iftmp.145_60 to prefix_35
Coalesced iftmp.146_62 to prefix_35
Coalesced iftmp.146_63 to prefix_35
Coalesced iftmp.147_65 to prefix_35
Coalesced iftmp.147_66 to prefix_35
Coalesced iftmp.148_68 to prefix_35
Coalesced iftmp.148_69 to prefix_35
Coalesced iftmp.149_71 to prefix_35
Coalesced iftmp.149_72 to prefix_35
Coalesced iftmp.150_74 to prefix_35
Coalesced iftmp.150_75 to prefix_35
Coalesced iftmp.151_77 to prefix_35
Coalesced iftmp.151_78 to prefix_35
Coalesced iftmp.152_80 to prefix_35
Coalesced iftmp.152_81 to prefix_35
Coalesced iftmp.153_83 to prefix_35
Coalesced iftmp.153_84 to prefix_35
Coalesced iftmp.154_86 to prefix_35
Coalesced iftmp.154_87 to prefix_35
Coalesced iftmp.155_89 to prefix_35
Coalesced iftmp.155_90 to prefix_35
Coalesced iftmp.156_92 to prefix_35
Coalesced iftmp.156_93 to prefix_35
Coalesced iftmp.157_95 to prefix_35
Coalesced iftmp.157_96 to prefix_35
Coalesced iftmp.158_98 to prefix_35
Coalesced iftmp.158_99 to prefix_35
Coalesced iftmp.159_101 to prefix_35
Coalesced iftmp.159_102 to prefix_35
Coalesced iftmp.160_104 to prefix_35
Coalesced iftmp.160_105 to prefix_35
Coalesced iftmp.161_107 to prefix_35
Coalesced iftmp.161_108 to prefix_35
Coalesced iftmp.162_110 to prefix_35
Coalesced iftmp.162_111 to prefix_35
Coalesced iftmp.163_113 to prefix_35
Coalesced iftmp.163_114 to prefix_35
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtp_stats_t * stats;
  struct switch_channel_t * channel;
  char var_name[256];
  char var_val[35];

}
set_stats (struct switch_core_session_t * session, switch_media_type_t type, const char * prefix)
{
  char var_val[35];
  char var_name[256];
  struct switch_channel_t * channel;
  struct switch_rtp_stats_t * stats;
  uint32_t D.46662;
  uint32_t D.46657;
  switch_size_t D.46652;
  switch_size_t D.46647;
  switch_size_t D.46642;
  switch_size_t D.46637;
  switch_size_t D.46632;
  switch_size_t D.46627;
  switch_size_t D.46622;
  double D.46617;
  double D.46612;
  switch_size_t D.46607;
  double D.46602;
  double D.46597;
  double D.46592;
  double D.46587;
  double D.46582;
  switch_size_t D.46577;
  switch_size_t D.46572;
  switch_size_t D.46567;
  switch_size_t D.46562;
  switch_size_t D.46557;
  switch_size_t D.46552;
  switch_size_t D.46547;
  switch_size_t D.46542;
  switch_size_t D.46537;
  switch_size_t D.46532;
  double D.46527;
  double D.46526;

<bb 2>:
  stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);
  # DEBUG stats => stats_30
  channel_31 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_31
  var_name = "";
  var_val = "";
  if (stats_30 != 0B)
    goto <bb 3>;
  else
    goto <bb 85>;

<bb 3>:
  D.46526_32 = stats_30->inbound.variance;
  D.46527_33 = sqrt (D.46526_32);
  stats_30->inbound.std_deviation = D.46527_33;
  if (prefix_34(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  prefix_35 = prefix_34(D);
  goto <bb 6>;

<bb 5>:
  prefix_36 = "";

<bb 6>:
  # prefix_1 = PHI <prefix_35(4), prefix_36(5)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");
  D.46532_37 = stats_30->inbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46532_37);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  prefix_38 = prefix_34(D);
  goto <bb 9>;

<bb 8>:
  prefix_39 = "";

<bb 9>:
  # prefix_2 = PHI <prefix_38(7), prefix_39(8)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");
  D.46537_40 = stats_30->inbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46537_40);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  prefix_41 = prefix_34(D);
  goto <bb 12>;

<bb 11>:
  prefix_42 = "";

<bb 12>:
  # prefix_3 = PHI <prefix_41(10), prefix_42(11)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");
  D.46542_43 = stats_30->inbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46542_43);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  prefix_44 = prefix_34(D);
  goto <bb 15>;

<bb 14>:
  prefix_45 = "";

<bb 15>:
  # prefix_4 = PHI <prefix_44(13), prefix_45(14)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");
  D.46547_46 = stats_30->inbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46547_46);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  prefix_47 = prefix_34(D);
  goto <bb 18>;

<bb 17>:
  prefix_48 = "";

<bb 18>:
  # prefix_5 = PHI <prefix_47(16), prefix_48(17)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");
  D.46552_49 = stats_30->inbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46552_49);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  prefix_50 = prefix_34(D);
  goto <bb 21>;

<bb 20>:
  prefix_51 = "";

<bb 21>:
  # prefix_6 = PHI <prefix_50(19), prefix_51(20)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");
  D.46557_52 = stats_30->inbound.jb_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46557_52);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  prefix_53 = prefix_34(D);
  goto <bb 24>;

<bb 23>:
  prefix_54 = "";

<bb 24>:
  # prefix_7 = PHI <prefix_53(22), prefix_54(23)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");
  D.46562_55 = stats_30->inbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46562_55);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  prefix_56 = prefix_34(D);
  goto <bb 27>;

<bb 26>:
  prefix_57 = "";

<bb 27>:
  # prefix_8 = PHI <prefix_56(25), prefix_57(26)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");
  D.46567_58 = stats_30->inbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46567_58);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  prefix_59 = prefix_34(D);
  goto <bb 30>;

<bb 29>:
  prefix_60 = "";

<bb 30>:
  # prefix_9 = PHI <prefix_59(28), prefix_60(29)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");
  D.46572_61 = stats_30->inbound.flush_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46572_61);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  prefix_62 = prefix_34(D);
  goto <bb 33>;

<bb 32>:
  prefix_63 = "";

<bb 33>:
  # prefix_10 = PHI <prefix_62(31), prefix_63(32)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");
  D.46577_64 = stats_30->inbound.largest_jb_size;
  switch_snprintf (&var_val, 35, "%d", D.46577_64);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  prefix_65 = prefix_34(D);
  goto <bb 36>;

<bb 35>:
  prefix_66 = "";

<bb 36>:
  # prefix_11 = PHI <prefix_65(34), prefix_66(35)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");
  D.46582_67 = stats_30->inbound.min_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46582_67);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  prefix_68 = prefix_34(D);
  goto <bb 39>;

<bb 38>:
  prefix_69 = "";

<bb 39>:
  # prefix_12 = PHI <prefix_68(37), prefix_69(38)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");
  D.46587_70 = stats_30->inbound.max_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46587_70);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  prefix_71 = prefix_34(D);
  goto <bb 42>;

<bb 41>:
  prefix_72 = "";

<bb 42>:
  # prefix_13 = PHI <prefix_71(40), prefix_72(41)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");
  D.46592_73 = stats_30->inbound.lossrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46592_73);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  prefix_74 = prefix_34(D);
  goto <bb 45>;

<bb 44>:
  prefix_75 = "";

<bb 45>:
  # prefix_14 = PHI <prefix_74(43), prefix_75(44)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");
  D.46597_76 = stats_30->inbound.burstrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46597_76);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  prefix_77 = prefix_34(D);
  goto <bb 48>;

<bb 47>:
  prefix_78 = "";

<bb 48>:
  # prefix_15 = PHI <prefix_77(46), prefix_78(47)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");
  D.46602_79 = stats_30->inbound.mean_interval;
  switch_snprintf (&var_val, 35, "%0.2f", D.46602_79);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  prefix_80 = prefix_34(D);
  goto <bb 51>;

<bb 50>:
  prefix_81 = "";

<bb 51>:
  # prefix_16 = PHI <prefix_80(49), prefix_81(50)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");
  D.46607_82 = stats_30->inbound.flaws;
  switch_snprintf (&var_val, 35, "%d", D.46607_82);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  prefix_83 = prefix_34(D);
  goto <bb 54>;

<bb 53>:
  prefix_84 = "";

<bb 54>:
  # prefix_17 = PHI <prefix_83(52), prefix_84(53)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");
  D.46612_85 = stats_30->inbound.R;
  switch_snprintf (&var_val, 35, "%0.2f", D.46612_85);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  prefix_86 = prefix_34(D);
  goto <bb 57>;

<bb 56>:
  prefix_87 = "";

<bb 57>:
  # prefix_18 = PHI <prefix_86(55), prefix_87(56)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");
  D.46617_88 = stats_30->inbound.mos;
  switch_snprintf (&var_val, 35, "%0.2f", D.46617_88);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

<bb 58>:
  prefix_89 = prefix_34(D);
  goto <bb 60>;

<bb 59>:
  prefix_90 = "";

<bb 60>:
  # prefix_19 = PHI <prefix_89(58), prefix_90(59)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");
  D.46622_91 = stats_30->outbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46622_91);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  prefix_92 = prefix_34(D);
  goto <bb 63>;

<bb 62>:
  prefix_93 = "";

<bb 63>:
  # prefix_20 = PHI <prefix_92(61), prefix_93(62)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");
  D.46627_94 = stats_30->outbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46627_94);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  prefix_95 = prefix_34(D);
  goto <bb 66>;

<bb 65>:
  prefix_96 = "";

<bb 66>:
  # prefix_21 = PHI <prefix_95(64), prefix_96(65)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");
  D.46632_97 = stats_30->outbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46632_97);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  prefix_98 = prefix_34(D);
  goto <bb 69>;

<bb 68>:
  prefix_99 = "";

<bb 69>:
  # prefix_22 = PHI <prefix_98(67), prefix_99(68)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");
  D.46637_100 = stats_30->outbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46637_100);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  prefix_101 = prefix_34(D);
  goto <bb 72>;

<bb 71>:
  prefix_102 = "";

<bb 72>:
  # prefix_23 = PHI <prefix_101(70), prefix_102(71)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");
  D.46642_103 = stats_30->outbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46642_103);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  prefix_104 = prefix_34(D);
  goto <bb 75>;

<bb 74>:
  prefix_105 = "";

<bb 75>:
  # prefix_24 = PHI <prefix_104(73), prefix_105(74)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");
  D.46647_106 = stats_30->outbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46647_106);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

<bb 76>:
  prefix_107 = prefix_34(D);
  goto <bb 78>;

<bb 77>:
  prefix_108 = "";

<bb 78>:
  # prefix_25 = PHI <prefix_107(76), prefix_108(77)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");
  D.46652_109 = stats_30->outbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46652_109);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;

<bb 79>:
  prefix_110 = prefix_34(D);
  goto <bb 81>;

<bb 80>:
  prefix_111 = "";

<bb 81>:
  # prefix_26 = PHI <prefix_110(79), prefix_111(80)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");
  D.46657_112 = stats_30->rtcp.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46657_112);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 82>;
  else
    goto <bb 83>;

<bb 82>:
  prefix_113 = prefix_34(D);
  goto <bb 84>;

<bb 83>:
  prefix_114 = "";

<bb 84>:
  # prefix_27 = PHI <prefix_113(82), prefix_114(83)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");
  D.46662_115 = stats_30->rtcp.octet_count;
  switch_snprintf (&var_val, 35, "%d", D.46662_115);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

<bb 85>:
  return;

}



;; Function switch_core_media_set_stats (switch_core_media_set_stats)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (D.46520_2 - 2 )
Partition 3 (.MEM_3(D) - 3 )
Partition 4 (.MEM_4 - 4 )
Partition 5 (.MEM_5 - 5 )

switch_core_media_set_stats (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46520;

<bb 2>:
  D.46520_2 = session_1(D)->media_handle;
  if (D.46520_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  set_stats (session_1(D), 0, "audio");
  set_stats (session_1(D), 1, "video");

<bb 4>:
  return;

}



;; Function switch_core_media_udptl_mode (switch_core_media_udptl_mode)

Try : D.40720_1(P1) & D.40720_4(P4) : Same root, coalesced --> P1.
Try : D.40720_1(P1) & D.40720_9(P9) : Same root, coalesced --> P1.
Try : D.40720_1(P1) & D.40720_10(P10) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40720_1 - 1 4 9 10 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40721_6 - 6 )
Partition 7 (D.40722_7 - 7 )
Partition 8 (D.40721_8 - 8 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )

switch_core_media_udptl_mode (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_udptl_mode";
  struct switch_media_handle_t * smh;
  uint8_t D.40722;
  struct switch_rtp_t * D.40721;
  switch_status_t D.40720;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8066, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40720_4 = 1;
  goto <bb 9>;

<bb 6>:
  D.40721_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40722_7 = switch_rtp_ready (D.40721_6);
  if (D.40722_7 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40721_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40720_9 = switch_rtp_udptl_mode (D.40721_8);
  goto <bb 9>;

<bb 8>:
  D.40720_10 = 1;

<bb 9>:
  # D.40720_1 = PHI <D.40720_4(5), D.40720_9(7), D.40720_10(8)>
  return D.40720_1;

}



;; Function switch_core_media_get_jb (switch_core_media_get_jb)

Try : D.40710_1(P1) & D.40710_4(P4) : Same root, coalesced --> P1.
Try : D.40710_1(P1) & D.40710_9(P9) : Same root, coalesced --> P1.
Try : D.40710_1(P1) & D.40710_10(P10) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40710_1 - 1 4 9 10 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (type_5(D) - 5 )
Partition 6 (D.40711_6 - 6 )
Partition 7 (D.40712_7 - 7 )
Partition 8 (D.40711_8 - 8 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )

switch_core_media_get_jb (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[25] = "switch_core_media_get_jb";
  struct switch_media_handle_t * smh;
  uint8_t D.40712;
  struct switch_rtp_t * D.40711;
  struct stfu_instance_t * D.40710;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8084, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40710_4 = 0B;
  goto <bb 9>;

<bb 6>:
  D.40711_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40712_7 = switch_rtp_ready (D.40711_6);
  if (D.40712_7 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40711_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40710_9 = switch_rtp_get_jitter_buffer (D.40711_8);
  goto <bb 9>;

<bb 8>:
  D.40710_10 = 0B;

<bb 9>:
  # D.40710_1 = PHI <D.40710_4(5), D.40710_9(7), D.40710_10(8)>
  return D.40710_1;

}



;; Function switch_core_media_set_sdp_codec_string (switch_core_media_set_sdp_codec_string)


Partition map 

Partition 1 (session_1(D) - 1 )
Partition 2 (smh_2 - 2 )
Partition 3 (r_sdp_3(D) - 3 )
Partition 4 (D.40398_4 - 4 )
Partition 5 (D.40399_5 - 5 )
Partition 6 (parser_6 - 6 )
Partition 7 (sdp_7 - 7 )
Partition 8 (D.40404_8 - 8 )
Partition 9 (sdp_type_9(D) - 9 )
Partition 10 (.MEM_10 - 10 )
Partition 11 (.MEM_11(D) - 11 )
Partition 12 (.MEM_12 - 12 )
Partition 13 (.MEM_13 - 13 )
Partition 14 (.MEM_14 - 14 )
Partition 15 (.MEM_15 - 15 )
Partition 16 (.MEM_16 - 16 )

switch_core_media_set_sdp_codec_string (struct switch_core_session_t * session, const char * r_sdp, switch_sdp_type_t sdp_type)
{
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_set_sdp_codec_string";
  struct switch_media_handle_t * smh;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  const char * D.40404;
  int D.40399;
  size_t D.40398;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8105, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

<bb 5>:
  D.40398_4 = strlen (r_sdp_3(D));
  D.40399_5 = (int) D.40398_4;
  parser_6 = sdp_parse (0B, r_sdp_3(D), D.40399_5, 0);
  # DEBUG parser => parser_6
  if (parser_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 9>;

<bb 6>:
  sdp_7 = sdp_session (parser_6);
  # DEBUG sdp => sdp_7
  if (sdp_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40404_8 = switch_core_media_get_codec_string (session_1(D));
  switch_core_media_set_r_sdp_codec_string (session_1(D), D.40404_8, sdp_7, sdp_type_9(D));

<bb 8>:
  sdp_parser_free (parser_6);

<bb 9>:
  return;

}



;; Function switch_core_media_codec_chosen (switch_core_media_codec_chosen)

Try : D.40386_1(P1) & D.40386_4(P4) : Same root, coalesced --> P1.
Try : D.40386_1(P1) & D.40386_11(P11) : Same root, coalesced --> P1.
Try : D.40386_1(P1) & D.40386_12(P12) : Same root, coalesced --> P1.

Partition map 

Partition 1 (D.40386_1 - 1 4 11 12 )
Partition 2 (session_2(D) - 2 )
Partition 3 (smh_3 - 3 )
Partition 5 (D.40387_5 - 5 )
Partition 6 (type_6(D) - 6 )
Partition 7 (D.40388_7 - 7 )
Partition 8 (engine_8 - 8 )
Partition 9 (D.40389_9 - 9 )
Partition 10 (D.40390_10 - 10 )
Partition 13 (.MEM_13(D) - 13 )

switch_core_media_codec_chosen (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_codec_chosen";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  char * D.40390;
  struct payload_map_t * D.40389;
  unsigned int D.40388;
  struct switch_rtp_engine_t[2] * D.40387;
  switch_status_t D.40386;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8407, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.40386_4 = 1;
  goto <bb 9>;

<bb 6>:
  D.40387_5 = &smh_3->engines;
  D.40388_7 = type_6(D) * 11416;
  engine_8 = D.40387_5 + D.40388_7;
  # DEBUG engine => engine_8
  D.40389_9 = engine_8->cur_payload_map;
  D.40390_10 = D.40389_9->iananame;
  if (D.40390_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40386_11 = 0;
  goto <bb 9>;

<bb 8>:
  D.40386_12 = 1;

<bb 9>:
  # D.40386_1 = PHI <D.40386_4(5), D.40386_11(7), D.40386_12(8)>
  return D.40386_1;

}



;; Function switch_core_media_check_outgoing_proxy (switch_core_media_check_outgoing_proxy)


Partition map 

Partition 1 (r_sdp_1 - 1 )
Partition 2 (session_2(D) - 2 )
Partition 3 (o_session_3(D) - 3 )
Partition 4 (D.40368_4 - 4 )
Partition 5 (D.40369_5 - 5 )
Partition 6 (smh_6 - 6 )
Partition 7 (D.40368_7 - 7 )
Partition 8 (r_sdp_8 - 8 )
Partition 9 (a_engine_9 - 9 )
Partition 10 (v_engine_10 - 10 )
Partition 11 (D.40374_11 - 11 )
Partition 12 (D.40375_12 - 12 )
Partition 13 (D.40376_13 - 13 )
Partition 14 (D.40375_14 - 14 )
Partition 15 (D.40375_15 - 15 )
Partition 16 (D.40375_16 - 16 )
Partition 17 (D.40377_17 - 17 )
Partition 18 (D.40380_18 - 18 )
Partition 19 (D.40380_19 - 19 )
Partition 20 (D.40380_20 - 20 )
Partition 21 (D.40380_21 - 21 )
Partition 22 (D.40374_22 - 22 )
Partition 23 (D.40374_23 - 23 )
Partition 24 (.MEM_24(D) - 24 )
Partition 25 (.MEM_25 - 25 )
Partition 26 (.MEM_26 - 26 )
Partition 27 (.MEM_27 - 27 )
Partition 28 (.MEM_28 - 28 )
Partition 29 (.MEM_29 - 29 )
Partition 30 (.MEM_30 - 30 )
Partition 31 (.MEM_31 - 31 )
Partition 32 (.MEM_32 - 32 )
Partition 33 (.MEM_33 - 33 )
Partition 34 (.MEM_34 - 34 )
Partition 35 (.MEM_35 - 35 )
Partition 36 (.MEM_36 - 36 )
Partition 37 (.MEM_37 - 37 )
Partition 38 (.MEM_38 - 38 )
Partition 39 (.MEM_39 - 39 )
Partition 40 (.MEM_40 - 40 )

switch_core_media_check_outgoing_proxy (struct switch_core_session_t * session, struct switch_core_session_t * o_session)
{
  static const char __func__[39] = "switch_core_media_check_outgoing_proxy";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_check_outgoing_proxy";
  const char * r_sdp;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  struct payload_map_t * D.40380;
  const char * D.40377;
  char * D.40376;
  struct payload_map_t * D.40375;
  struct switch_channel_t * D.40374;
  uint32_t D.40369;
  struct switch_channel_t * D.40368;

<bb 2>:
  r_sdp_1 = 0B;
  # DEBUG r_sdp => r_sdp_1
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8430, &__PRETTY_FUNCTION__);

<bb 4>:
  D.40368_4 = o_session_3(D)->channel;
  D.40369_5 = switch_channel_test_flag (D.40368_4, 29);
  if (D.40369_5 == 0)
    goto <bb 8>;
  else
    goto <bb 5>;

<bb 5>:
  smh_6 = session_2(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

<bb 6>:
  D.40368_7 = o_session_3(D)->channel;
  r_sdp_8 = switch_channel_get_variable_dup (D.40368_7, "switch_r_sdp", 1, -1);
  # DEBUG r_sdp => r_sdp_8
  a_engine_9 = &smh_6->engines;
  # DEBUG a_engine => a_engine_9
  v_engine_10 = &smh_6->engines[1];
  # DEBUG v_engine => v_engine_10
  D.40374_11 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_11, 29, 1);
  D.40375_12 = a_engine_9->cur_payload_map;
  D.40376_13 = switch_core_perform_session_strdup (session_2(D), "PROXY", "src/switch_core_media.c", &__func__, 8447);
  D.40375_12->iananame = D.40376_13;
  D.40375_14 = a_engine_9->cur_payload_map;
  D.40375_14->rm_rate = 8000;
  D.40375_15 = a_engine_9->cur_payload_map;
  D.40375_15->adv_rm_rate = 8000;
  D.40375_16 = a_engine_9->cur_payload_map;
  D.40375_16->codec_ms = 20;
  D.40377_17 = switch_stristr ("m=video", r_sdp_8);
  if (D.40377_17 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  switch_core_media_choose_port (session_2(D), 1, 1);
  D.40380_18 = v_engine_10->cur_payload_map;
  D.40380_18->rm_encoding = "PROXY-VID";
  D.40380_19 = v_engine_10->cur_payload_map;
  D.40380_19->rm_rate = 90000;
  D.40380_20 = v_engine_10->cur_payload_map;
  D.40380_20->adv_rm_rate = 90000;
  D.40380_21 = v_engine_10->cur_payload_map;
  D.40380_21->codec_ms = 0;
  D.40374_22 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_22, 23, 1);
  D.40374_23 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_23, 98, 1);

<bb 8>:
  return;

}



;; Function switch_core_media_proxy_codec (switch_core_media_proxy_codec)

Try : D.48272_73(P73) & D.48274_66(P66) --> P73 D.48272
Try : D.40337_21(P21) & D.48272_73(P73) --> P73 D.48272
Try : D.48276_75(P75) & D.48277_67(P67) --> P75 D.48276
Try : dptime_25(P25) & D.48276_75(P75) --> P75 dptime
Try : ptime_28(P28) & dptime_7(P7) : 2 different USER vars. No coalesce.
Try : D.48279_77(P77) & D.48280_68(P68) --> P77 D.48279
Try : ptime_35(P35) & D.48279_77(P77) --> P77 ptime
Try : dptime_6(P6) & dptime_7(P7) : Same root, coalesced --> P6.
Try : dptime_6(P6) & dptime_7(P6) : Already coalesced.
Try : dptime_6(P6) & dptime_25(P75) : Same root, coalesced --> P75.
Try : attr_2(P2) & attr_19(P19) : Same root, coalesced --> P2.
Try : attr_2(P2) & attr_26(P26) : Same root, coalesced --> P2.
Try : dptime_7(P75) & dptime_10(P10) : Same root, coalesced --> P75.
Try : dptime_7(P75) & dptime_6(P75) : Already coalesced.
Try : ptime_4(P4) & ptime_5(P5) : Same root, coalesced --> P4.
Try : ptime_4(P4) & ptime_35(P77) : Same root, coalesced --> P77.
Try : ptime_4(P77) & ptime_5(P77) : Already coalesced.
Try : ptime_4(P77) & ptime_5(P77) : Already coalesced.
Try : attr_3(P3) & attr_30(P30) : Same root, coalesced --> P3.
Try : attr_3(P3) & attr_39(P39) : Same root, coalesced --> P3.
Try : ptime_5(P77) & ptime_28(P28) : Same root, coalesced --> P77.
Try : ptime_5(P77) & ptime_4(P77) : Already coalesced.
Try : m_1(P1) & m_27(P27) : Same root, coalesced --> P1.
Try : m_1(P1) & m_52(P52) : Same root, coalesced --> P1.

Partition map 

Partition 1 (m_1 - 1 27 52 )
Partition 2 (attr_2 - 2 19 26 )
Partition 3 (attr_3 - 3 30 39 )
Partition 8 (parser_8 - 8 )
Partition 9 (ptime_9 - 9 )
Partition 11 (session_11(D) - 11 )
Partition 12 (smh_12 - 12 )
Partition 13 (a_engine_13 - 13 )
Partition 14 (r_sdp_14(D) - 14 )
Partition 15 (D.40330_15 - 15 )
Partition 16 (D.40331_16 - 16 )
Partition 17 (parser_17 - 17 )
Partition 18 (sdp_18 - 18 )
Partition 20 (D.40336_20 - 20 )
Partition 22 (D.40336_22 - 22 )
Partition 23 (D.40340_23 - 23 )
Partition 24 (D.40343_24 - 24 )
Partition 29 (D.40344_29 - 29 )
Partition 31 (D.40336_31 - 31 )
Partition 32 (D.40347_32 - 32 )
Partition 33 (D.40343_33 - 33 )
Partition 34 (D.40343_34 - 34 )
Partition 36 (D.40336_36 - 36 )
Partition 37 (D.40353_37 - 37 )
Partition 38 (D.40343_38 - 38 )
Partition 40 (map_40 - 40 )
Partition 41 (D.40358_41 - 41 )
Partition 42 (D.40359_42 - 42 )
Partition 43 (D.40360_43 - 43 )
Partition 44 (D.40358_44 - 44 )
Partition 45 (D.40361_45 - 45 )
Partition 46 (D.40358_46 - 46 )
Partition 47 (D.40361_47 - 47 )
Partition 48 (D.40358_48 - 48 )
Partition 49 (ptime.4_49 - 49 )
Partition 50 (D.40363_50 - 50 )
Partition 51 (D.40364_51 - 51 )
Partition 53 (.MEM_53 - 53 )
Partition 54 (.MEM_54(D) - 54 )
Partition 55 (.MEM_55 - 55 )
Partition 56 (.MEM_56 - 56 )
Partition 57 (.MEM_57 - 57 )
Partition 58 (.MEM_58 - 58 )
Partition 59 (.MEM_59 - 59 )
Partition 60 (.MEM_60 - 60 )
Partition 61 (.MEM_61 - 61 )
Partition 62 (.MEM_62 - 62 )
Partition 63 (.MEM_63 - 63 )
Partition 64 (.MEM_64 - 64 )
Partition 65 (D.48273_65 - 65 )
Partition 69 (.MEM_69 - 69 )
Partition 70 (.MEM_70 - 70 )
Partition 71 (.MEM_71 - 71 )
Partition 72 (.MEM_72 - 72 )
Partition 73 (D.48272_73 - 21 66 73 )
Partition 74 (.MEM_74 - 74 )
Partition 75 (dptime_75 - 6 7 10 25 67 75 )
Partition 76 (.MEM_76 - 76 )
Partition 77 (ptime_77 - 4 5 28 35 68 77 )

Coalesced D.40337_21 to D.48272_73
Coalesced D.48274_66 to D.48272_73
Coalesced D.48277_67 to dptime_75
Coalesced D.48280_68 to ptime_77
Scope blocks after cleanups:

{ Scope block #0 
  struct sdp_media_t * m;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  struct switch_rtp_engine_t * a_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_proxy_codec";
  static const char __func__[30] = "switch_core_media_proxy_codec";

  { Scope block #481 src/switch_core_media.c:8506 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #482 Originating from :#0 

    }

  }

  { Scope block #483 src/switch_core_media.c:8501 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #484 Originating from :#0 

    }

  }

  { Scope block #485 
    struct sdp_rtpmap_t * map;

    { Scope block #486 src/switch_core_media.c:8520 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #487 Originating from :#0 

      }

    }

  }

}
switch_core_media_proxy_codec (struct switch_core_session_t * session, const char * r_sdp)
{
  const char D.48273;
  int D.48272;
  struct sdp_rtpmap_t * map;
  static const char __func__[30] = "switch_core_media_proxy_codec";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_proxy_codec";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  uint32_t D.40364;
  struct switch_core_media_params_t * D.40363;
  uint32_t ptime.4;
  long unsigned int D.40361;
  char * D.40360;
  const char * D.40359;
  struct payload_map_t * D.40358;
  int D.40353;
  int D.40347;
  sdp_proto_e D.40344;
  const char * D.40343;
  int D.40340;
  const char * D.40336;
  int D.40331;
  size_t D.40330;

<bb 2>:
  parser_8 = 0B;
  # DEBUG parser => parser_8
  ptime_9 = 0;
  # DEBUG ptime => ptime_9
  dptime_10 = 0;
  # DEBUG dptime => dptime_10
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8482, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 33>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_13 = &smh_12->engines;
  # DEBUG a_engine => a_engine_13
  D.40330_15 = strlen (r_sdp_14(D));
  D.40331_16 = (int) D.40330_15;
  parser_17 = sdp_parse (0B, r_sdp_14(D), D.40331_16, 0);
  # DEBUG parser => parser_17
  if (parser_17 == 0B)
    goto <bb 33>;
  else
    goto <bb 6>;

<bb 6>:
  sdp_18 = sdp_session (parser_17);
  # DEBUG sdp => sdp_18
  if (sdp_18 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  sdp_parser_free (parser_17);
  goto <bb 33>;

<bb 8>:
  attr_19 = sdp_18->sdp_attributes;
  # DEBUG attr => attr_19
  goto <bb 17>;

<bb 9>:
  D.40336_20 = attr_2->a_name;
  # DEBUG s => D.40336_20
  if (D.40336_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.48273_65 = *D.40336_20;
  if (D.48273_65 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.48272_66 = PHI <1(9), 1(10), 0(11)>
  D.48272_73 = D.48272_66;
  D.48272_21 = D.48272_73;
  if (D.48272_21 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 16>;

<bb 14>:
  D.40336_22 = attr_2->a_name;
  D.40340_23 = strcasecmp (D.40336_22, "ptime");
  if (D.40340_23 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.40343_24 = attr_2->a_value;
  # DEBUG __nptr => D.40343_24
  dptime_67 = strtol (D.40343_24, 0B, 10);
  dptime_75 = dptime_67;
  dptime_25 = dptime_75;
  # DEBUG dptime => NULL

<bb 16>:
  # dptime_6 = PHI <dptime_7(13), dptime_7(14), dptime_25(15)>
  # DEBUG dptime => dptime_6
  attr_26 = attr_2->a_next;
  # DEBUG attr => attr_26

<bb 17>:
  # attr_2 = PHI <attr_19(8), attr_26(16)>
  # dptime_7 = PHI <dptime_10(8), dptime_6(16)>
  # DEBUG dptime => dptime_7
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

<bb 18>:
  m_27 = sdp_18->sdp_media;
  # DEBUG m => m_27
  goto <bb 31>;

<bb 19>:
  ptime_28 = dptime_7;
  # DEBUG ptime => ptime_28
  D.40344_29 = m_1->m_proto;
  if (D.40344_29 == 256)
    goto <bb 20>;
  else
    goto <bb 30>;

<bb 20>:
  attr_30 = m_1->m_attributes;
  # DEBUG attr => attr_30
  goto <bb 27>;

<bb 21>:
  D.40336_31 = attr_3->a_name;
  D.40347_32 = strcasecmp (D.40336_31, "ptime");
  if (D.40347_32 == 0)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.40343_33 = attr_3->a_value;
  if (D.40343_33 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.40343_34 = attr_3->a_value;
  # DEBUG __nptr => D.40343_34
  ptime_68 = strtol (D.40343_34, 0B, 10);
  ptime_77 = ptime_68;
  ptime_35 = ptime_77;
  # DEBUG ptime => NULL
  goto <bb 26>;

<bb 24>:
  D.40336_36 = attr_3->a_name;
  D.40353_37 = strcasecmp (D.40336_36, "maxptime");
  if (D.40353_37 == 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.40343_38 = attr_3->a_value;

<bb 26>:
  # ptime_4 = PHI <ptime_5(21), ptime_35(23), ptime_5(24), ptime_5(25)>
  # DEBUG ptime => ptime_4
  attr_39 = attr_3->a_next;
  # DEBUG attr => attr_39

<bb 27>:
  # attr_3 = PHI <attr_30(20), attr_39(26)>
  # ptime_5 = PHI <ptime_28(20), ptime_4(26)>
  # DEBUG ptime => ptime_5
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 21>;
  else
    goto <bb 28>;

<bb 28>:
  map_40 = m_1->m_rtpmaps;
  # DEBUG map => map_40
  if (map_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 32>;

<bb 29>:
  D.40358_41 = a_engine_13->cur_payload_map;
  D.40359_42 = map_40->rm_encoding;
  D.40360_43 = switch_core_perform_session_strdup (session_11(D), D.40359_42, "src/switch_core_media.c", &__func__, 8527);
  D.40358_41->iananame = D.40360_43;
  D.40358_44 = a_engine_13->cur_payload_map;
  D.40361_45 = map_40->rm_rate;
  D.40358_44->rm_rate = D.40361_45;
  D.40358_46 = a_engine_13->cur_payload_map;
  D.40361_47 = map_40->rm_rate;
  D.40358_46->adv_rm_rate = D.40361_47;
  D.40358_48 = a_engine_13->cur_payload_map;
  ptime.4_49 = (uint32_t) ptime_5;
  D.40358_48->codec_ms = ptime.4_49;
  D.40363_50 = smh_12->mparams;
  D.40364_51 = D.40363_50->codec_flags;
  switch_core_media_set_codec (session_11(D), 0, D.40364_51);
  goto <bb 32>;

<bb 30>:
  m_52 = m_1->m_next;
  # DEBUG m => m_52

<bb 31>:
  # m_1 = PHI <m_27(18), m_52(30)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 19>;
  else
    goto <bb 32>;

<bb 32>:
  sdp_parser_free (parser_17);

<bb 33>:
  return;

}



;; Function switch_core_media_recover_session (switch_core_media_recover_session)

Try : iftmp.1_41(P41) & vtmp_37(P37) --> P41 vtmp
Try : D.48283_337(P337) & D.48284_317(P317) --> P337 D.48283
Try : D.40191_58(P58) & D.48283_337(P337) --> P337 D.48283
Try : D.48286_339(P339) & D.48287_318(P318) --> P339 D.48286
Try : D.40195_63(P63) & D.48286_339(P339) --> P339 D.48286
Try : D.48289_341(P341) & D.48290_319(P319) --> P341 D.48289
Try : D.40199_68(P68) & D.48289_341(P341) --> P341 D.48289
Try : D.48292_343(P343) & D.48293_320(P320) --> P343 D.48292
Try : D.40204_76(P76) & D.48292_343(P343) --> P343 D.48292
Try : D.48295_345(P345) & D.48296_321(P321) --> P345 D.48295
Try : D.40208_82(P82) & D.48295_345(P345) --> P345 D.48295
Try : D.48298_347(P347) & D.48299_322(P322) --> P347 D.48298
Try : D.40213_88(P88) & D.48298_347(P347) --> P347 D.48298
Try : D.48301_349(P349) & D.48302_323(P323) --> P349 D.48301
Try : D.40217_94(P94) & D.48301_349(P349) --> P349 D.48301
Try : D.48304_350(P350) & D.48306_325(P325) --> P350 D.48304
Try : D.40220_97(P97) & D.48304_350(P350) --> P350 D.48304
Try : D.48308_351(P351) & D.48310_327(P327) --> P351 D.48308
Try : D.40225_101(P101) & D.48308_351(P351) --> P351 D.48308
Try : D.48312_353(P353) & D.48313_328(P328) --> P353 D.48312
Try : D.40234_108(P108) & D.48312_353(P353) --> P353 D.48312
Try : D.48315_355(P355) & D.48316_329(P329) --> P355 D.48315
Try : D.40242_116(P116) & D.48315_355(P355) --> P355 D.48315
Try : D.48318_357(P357) & D.48319_330(P330) --> P357 D.48318
Try : D.40247_122(P122) & D.48318_357(P357) --> P357 D.48318
Try : D.48321_359(P359) & D.48322_331(P331) --> P359 D.48321
Try : D.40253_142(P142) & D.48321_359(P359) --> P359 D.48321
Try : D.48324_361(P361) & D.48325_332(P332) --> P361 D.48324
Try : D.40258_150(P150) & D.48324_361(P361) --> P361 D.48324
Try : D.48327_363(P363) & D.48328_333(P333) --> P363 D.48327
Try : D.40260_152(P152) & D.48327_363(P363) --> P363 D.48327
Try : D.48330_365(P365) & D.48331_334(P334) --> P365 D.48330
Try : D.40265_160(P160) & D.48330_365(P365) --> P365 D.48330
Try : D.48333_367(P367) & D.48334_335(P335) --> P367 D.48333
Try : idx_167(P167) & D.48333_367(P367) --> P367 idx
Try : iftmp.0_1(P1) & iftmp.0_39(P39) : Same root, coalesced --> P1.
Try : iftmp.0_1(P1) & iftmp.0_40(P40) : Same root, coalesced --> P1.
Try : iftmp.1_2(P2) & vtmp_41(P41) --> P41 vtmp
Try : iftmp.1_2(P41) & iftmp.1_42(P42) --> P41 vtmp

Partition map 

Partition 1 (iftmp.0_1 - 1 39 40 )
Partition 3 (session_3(D) - 3 )
Partition 4 (smh_4 - 4 )
Partition 5 (D.40154_5 - 5 )
Partition 6 (ip_6 - 6 )
Partition 7 (D.40154_7 - 7 )
Partition 8 (port_8 - 8 )
Partition 9 (D.40154_9 - 9 )
Partition 10 (D.40157_10 - 10 )
Partition 11 (D.40159_11 - 11 )
Partition 12 (D.40160_12 - 12 )
Partition 13 (D.40161_13 - 13 )
Partition 14 (D.40154_14 - 14 )
Partition 15 (a_ip_15 - 15 )
Partition 16 (D.40154_16 - 16 )
Partition 17 (r_ip_17 - 17 )
Partition 18 (D.40154_18 - 18 )
Partition 19 (r_port_19 - 19 )
Partition 20 (a_engine_20 - 20 )
Partition 21 (v_engine_21 - 21 )
Partition 22 (D.40162_22 - 22 )
Partition 23 (D.40162_23 - 23 )
Partition 24 (D.40154_24 - 24 )
Partition 25 (D.40163_25 - 25 )
Partition 26 (D.40164_26 - 26 )
Partition 27 (D.40162_27 - 27 )
Partition 28 (D.40154_28 - 28 )
Partition 29 (D.40165_29 - 29 )
Partition 30 (D.40154_30 - 30 )
Partition 31 (tmp_31 - 31 )
Partition 32 (D.40168_32 - 32 )
Partition 33 (D.40169_33 - 33 )
Partition 34 (D.40154_34 - 34 )
Partition 35 (tmp_35 - 35 )
Partition 36 (D.40154_36 - 36 )
Partition 38 (D.40154_38 - 38 )
Partition 41 (vtmp_41 - 2 37 41 42 )
Partition 43 (D.40154_43 - 43 )
Partition 44 (tmp_44 - 44 )
Partition 45 (D.40182_45 - 45 )
Partition 46 (tmp_codec_string_46 - 46 )
Partition 47 (D.40183_47 - 47 )
Partition 48 (D.40184_48 - 48 )
Partition 49 (D.40185_49 - 49 )
Partition 50 (D.40168_50 - 50 )
Partition 51 (D.40186_51 - 51 )
Partition 52 (D.40183_52 - 52 )
Partition 53 (D.40187_53 - 53 )
Partition 54 (D.40188_54 - 54 )
Partition 55 (D.40154_55 - 55 )
Partition 56 (tmp_56 - 56 )
Partition 57 (D.40168_57 - 57 )
Partition 59 (D.40192_59 - 59 )
Partition 60 (D.40154_60 - 60 )
Partition 61 (tmp_61 - 61 )
Partition 62 (D.40168_62 - 62 )
Partition 64 (D.40196_64 - 64 )
Partition 65 (D.40154_65 - 65 )
Partition 66 (tmp_66 - 66 )
Partition 67 (D.40162_67 - 67 )
Partition 69 (D.40200_69 - 69 )
Partition 70 (D.40162_70 - 70 )
Partition 71 (D.40162_71 - 71 )
Partition 72 (D.40201_72 - 72 )
Partition 73 (D.40154_73 - 73 )
Partition 74 (tmp_74 - 74 )
Partition 75 (D.40162_75 - 75 )
Partition 77 (D.40205_77 - 77 )
Partition 78 (D.40154_78 - 78 )
Partition 79 (tmp_79 - 79 )
Partition 80 (D.40162_80 - 80 )
Partition 81 (D.40162_81 - 81 )
Partition 83 (D.40209_83 - 83 )
Partition 84 (D.40210_84 - 84 )
Partition 85 (D.40154_85 - 85 )
Partition 86 (tmp_86 - 86 )
Partition 87 (D.40162_87 - 87 )
Partition 89 (D.40214_89 - 89 )
Partition 90 (D.40168_90 - 90 )
Partition 91 (D.40215_91 - 91 )
Partition 92 (D.40168_92 - 92 )
Partition 93 (D.40216_93 - 93 )
Partition 95 (D.40218_95 - 95 )
Partition 96 (D.40219_96 - 96 )
Partition 98 (D.40223_98 - 98 )
Partition 99 (D.40168_99 - 99 )
Partition 100 (D.40224_100 - 100 )
Partition 102 (D.40228_102 - 102 )
Partition 103 (D.40229_103 - 103 )
Partition 104 (D.40230_104 - 104 )
Partition 105 (D.40231_105 - 105 )
Partition 106 (D.40162_106 - 106 )
Partition 107 (D.40162_107 - 107 )
Partition 109 (D.40235_109 - 109 )
Partition 110 (D.40154_110 - 110 )
Partition 111 (D.40236_111 - 111 )
Partition 112 (D.40154_112 - 112 )
Partition 113 (tmp_113 - 113 )
Partition 114 (D.40241_114 - 114 )
Partition 115 (D.40241_115 - 115 )
Partition 117 (D.40243_117 - 117 )
Partition 118 (D.40244_118 - 118 )
Partition 119 (D.40154_119 - 119 )
Partition 120 (tmp_120 - 120 )
Partition 121 (D.40241_121 - 121 )
Partition 123 (D.40248_123 - 123 )
Partition 124 (D.40241_124 - 124 )
Partition 125 (D.40154_125 - 125 )
Partition 126 (D.40249_126 - 126 )
Partition 127 (D.40241_127 - 127 )
Partition 128 (D.40154_128 - 128 )
Partition 129 (D.40250_129 - 129 )
Partition 130 (D.40154_130 - 130 )
Partition 131 (ip_131 - 131 )
Partition 132 (D.40154_132 - 132 )
Partition 133 (port_133 - 133 )
Partition 134 (D.40154_134 - 134 )
Partition 135 (r_ip_135 - 135 )
Partition 136 (D.40154_136 - 136 )
Partition 137 (r_port_137 - 137 )
Partition 138 (D.40154_138 - 138 )
Partition 139 (D.40154_139 - 139 )
Partition 140 (tmp_140 - 140 )
Partition 141 (D.40241_141 - 141 )
Partition 143 (D.40254_143 - 143 )
Partition 144 (D.40241_144 - 144 )
Partition 145 (D.40241_145 - 145 )
Partition 146 (D.40255_146 - 146 )
Partition 147 (D.40154_147 - 147 )
Partition 148 (tmp_148 - 148 )
Partition 149 (D.40241_149 - 149 )
Partition 151 (D.40259_151 - 151 )
Partition 153 (D.40261_153 - 153 )
Partition 154 (D.40262_154 - 154 )
Partition 155 (D.40229_155 - 155 )
Partition 156 (D.40230_156 - 156 )
Partition 157 (D.40231_157 - 157 )
Partition 158 (D.40241_158 - 158 )
Partition 159 (D.40241_159 - 159 )
Partition 161 (D.40266_161 - 161 )
Partition 162 (D.40267_162 - 162 )
Partition 163 (D.40154_163 - 163 )
Partition 164 (tmp_164 - 164 )
Partition 165 (D.40272_165 - 165 )
Partition 166 (D.40273_166 - 166 )
Partition 168 (D.40272_168 - 168 )
Partition 169 (D.40276_169 - 169 )
Partition 170 (D.40277_170 - 170 )
Partition 171 (D.40272_171 - 171 )
Partition 172 (D.40278_172 - 172 )
Partition 173 (D.40279_173 - 173 )
Partition 174 (D.40272_174 - 174 )
Partition 175 (D.40280_175 - 175 )
Partition 176 (D.40277_176 - 176 )
Partition 177 (D.40272_177 - 177 )
Partition 178 (D.40278_178 - 178 )
Partition 179 (D.40279_179 - 179 )
Partition 180 (D.40272_180 - 180 )
Partition 181 (D.40273_181 - 181 )
Partition 182 (D.40182_182 - 182 )
Partition 183 (D.40281_183 - 183 )
Partition 184 (D.40282_184 - 184 )
Partition 185 (idx.2_185 - 185 )
Partition 186 (D.40272_186 - 186 )
Partition 187 (D.40272_187 - 187 )
Partition 188 (D.40284_188 - 188 )
Partition 189 (D.40272_189 - 189 )
Partition 190 (D.40285_190 - 190 )
Partition 191 (D.40286_191 - 191 )
Partition 192 (D.40282_192 - 192 )
Partition 193 (D.40272_193 - 193 )
Partition 194 (D.40287_194 - 194 )
Partition 195 (D.40288_195 - 195 )
Partition 196 (D.40272_196 - 196 )
Partition 197 (D.40272_197 - 197 )
Partition 198 (D.40289_198 - 198 )
Partition 199 (D.40272_199 - 199 )
Partition 200 (D.40285_200 - 200 )
Partition 201 (D.40286_201 - 201 )
Partition 202 (D.40290_202 - 202 )
Partition 203 (D.40282_203 - 203 )
Partition 204 (D.40168_204 - 204 )
Partition 205 (D.40293_205 - 205 )
Partition 206 (D.40282_206 - 206 )
Partition 207 (D.40168_207 - 207 )
Partition 208 (D.40294_208 - 208 )
Partition 209 (.MEM_209 - 209 )
Partition 210 (.MEM_210 - 210 )
Partition 211 (.MEM_211 - 211 )
Partition 212 (.MEM_212 - 212 )
Partition 213 (.MEM_213 - 213 )
Partition 214 (.MEM_214 - 214 )
Partition 215 (.MEM_215 - 215 )
Partition 216 (.MEM_216 - 216 )
Partition 217 (.MEM_217 - 217 )
Partition 218 (.MEM_218 - 218 )
Partition 219 (.MEM_219 - 219 )
Partition 220 (.MEM_220 - 220 )
Partition 221 (.MEM_221 - 221 )
Partition 222 (.MEM_222 - 222 )
Partition 223 (.MEM_223 - 223 )
Partition 224 (.MEM_224 - 224 )
Partition 225 (.MEM_225 - 225 )
Partition 226 (.MEM_226 - 226 )
Partition 227 (.MEM_227(D) - 227 )
Partition 228 (.MEM_228 - 228 )
Partition 229 (.MEM_229 - 229 )
Partition 230 (.MEM_230 - 230 )
Partition 231 (.MEM_231 - 231 )
Partition 232 (.MEM_232 - 232 )
Partition 233 (.MEM_233 - 233 )
Partition 234 (.MEM_234 - 234 )
Partition 235 (.MEM_235 - 235 )
Partition 236 (.MEM_236 - 236 )
Partition 237 (.MEM_237 - 237 )
Partition 238 (.MEM_238 - 238 )
Partition 239 (.MEM_239 - 239 )
Partition 240 (.MEM_240 - 240 )
Partition 241 (.MEM_241 - 241 )
Partition 242 (.MEM_242 - 242 )
Partition 243 (.MEM_243 - 243 )
Partition 244 (.MEM_244 - 244 )
Partition 245 (.MEM_245 - 245 )
Partition 246 (.MEM_246 - 246 )
Partition 247 (.MEM_247 - 247 )
Partition 248 (.MEM_248 - 248 )
Partition 249 (.MEM_249 - 249 )
Partition 250 (.MEM_250 - 250 )
Partition 251 (.MEM_251 - 251 )
Partition 252 (.MEM_252 - 252 )
Partition 253 (.MEM_253 - 253 )
Partition 254 (.MEM_254 - 254 )
Partition 255 (.MEM_255 - 255 )
Partition 256 (.MEM_256 - 256 )
Partition 257 (.MEM_257 - 257 )
Partition 258 (.MEM_258 - 258 )
Partition 259 (.MEM_259 - 259 )
Partition 260 (.MEM_260 - 260 )
Partition 261 (.MEM_261 - 261 )
Partition 262 (.MEM_262 - 262 )
Partition 263 (.MEM_263 - 263 )
Partition 264 (.MEM_264 - 264 )
Partition 265 (.MEM_265 - 265 )
Partition 266 (.MEM_266 - 266 )
Partition 267 (.MEM_267 - 267 )
Partition 268 (.MEM_268 - 268 )
Partition 269 (.MEM_269 - 269 )
Partition 270 (.MEM_270 - 270 )
Partition 271 (.MEM_271 - 271 )
Partition 272 (.MEM_272 - 272 )
Partition 273 (.MEM_273 - 273 )
Partition 274 (.MEM_274 - 274 )
Partition 275 (.MEM_275 - 275 )
Partition 276 (.MEM_276 - 276 )
Partition 277 (.MEM_277 - 277 )
Partition 278 (.MEM_278 - 278 )
Partition 279 (.MEM_279 - 279 )
Partition 280 (.MEM_280 - 280 )
Partition 281 (.MEM_281 - 281 )
Partition 282 (.MEM_282 - 282 )
Partition 283 (.MEM_283 - 283 )
Partition 284 (.MEM_284 - 284 )
Partition 285 (.MEM_285 - 285 )
Partition 286 (.MEM_286 - 286 )
Partition 287 (.MEM_287 - 287 )
Partition 288 (.MEM_288 - 288 )
Partition 289 (.MEM_289 - 289 )
Partition 290 (.MEM_290 - 290 )
Partition 291 (.MEM_291 - 291 )
Partition 292 (.MEM_292 - 292 )
Partition 293 (.MEM_293 - 293 )
Partition 294 (.MEM_294 - 294 )
Partition 295 (.MEM_295 - 295 )
Partition 296 (.MEM_296 - 296 )
Partition 297 (.MEM_297 - 297 )
Partition 298 (.MEM_298 - 298 )
Partition 299 (.MEM_299 - 299 )
Partition 300 (.MEM_300 - 300 )
Partition 301 (.MEM_301 - 301 )
Partition 302 (.MEM_302 - 302 )
Partition 303 (.MEM_303 - 303 )
Partition 304 (.MEM_304 - 304 )
Partition 305 (.MEM_305 - 305 )
Partition 306 (.MEM_306 - 306 )
Partition 307 (.MEM_307 - 307 )
Partition 308 (.MEM_308 - 308 )
Partition 309 (.MEM_309 - 309 )
Partition 310 (.MEM_310 - 310 )
Partition 311 (.MEM_311 - 311 )
Partition 312 (.MEM_312 - 312 )
Partition 313 (.MEM_313 - 313 )
Partition 314 (.MEM_314 - 314 )
Partition 315 (.MEM_315 - 315 )
Partition 316 (.MEM_316 - 316 )
Partition 324 (D.48305_324 - 324 )
Partition 326 (D.48309_326 - 326 )
Partition 336 (.MEM_336 - 336 )
Partition 337 (D.48283_337 - 58 317 337 )
Partition 338 (.MEM_338 - 338 )
Partition 339 (D.48286_339 - 63 318 339 )
Partition 340 (.MEM_340 - 340 )
Partition 341 (D.48289_341 - 68 319 341 )
Partition 342 (.MEM_342 - 342 )
Partition 343 (D.48292_343 - 76 320 343 )
Partition 344 (.MEM_344 - 344 )
Partition 345 (D.48295_345 - 82 321 345 )
Partition 346 (.MEM_346 - 346 )
Partition 347 (D.48298_347 - 88 322 347 )
Partition 348 (.MEM_348 - 348 )
Partition 349 (D.48301_349 - 94 323 349 )
Partition 350 (D.48304_350 - 97 325 350 )
Partition 351 (D.48308_351 - 101 327 351 )
Partition 352 (.MEM_352 - 352 )
Partition 353 (D.48312_353 - 108 328 353 )
Partition 354 (.MEM_354 - 354 )
Partition 355 (D.48315_355 - 116 329 355 )
Partition 356 (.MEM_356 - 356 )
Partition 357 (D.48318_357 - 122 330 357 )
Partition 358 (.MEM_358 - 358 )
Partition 359 (D.48321_359 - 142 331 359 )
Partition 360 (.MEM_360 - 360 )
Partition 361 (D.48324_361 - 150 332 361 )
Partition 362 (.MEM_362 - 362 )
Partition 363 (D.48327_363 - 152 333 363 )
Partition 364 (.MEM_364 - 364 )
Partition 365 (D.48330_365 - 160 334 365 )
Partition 366 (.MEM_366 - 366 )
Partition 367 (idx_367 - 167 335 367 )

Coalesced iftmp.1_2 to vtmp_41
Coalesced iftmp.1_42 to vtmp_41
Coalesced D.40191_58 to D.48283_337
Coalesced D.40195_63 to D.48286_339
Coalesced D.40199_68 to D.48289_341
Coalesced D.40204_76 to D.48292_343
Coalesced D.40208_82 to D.48295_345
Coalesced D.40213_88 to D.48298_347
Coalesced D.40217_94 to D.48301_349
Coalesced D.40220_97 to D.48304_350
Coalesced D.40225_101 to D.48308_351
Coalesced D.40234_108 to D.48312_353
Coalesced D.40242_116 to D.48315_355
Coalesced D.40247_122 to D.48318_357
Coalesced D.40253_142 to D.48321_359
Coalesced D.40258_150 to D.48324_361
Coalesced D.40260_152 to D.48327_363
Coalesced D.40265_160 to D.48330_365
Coalesced D.48284_317 to D.48283_337
Coalesced D.48287_318 to D.48286_339
Coalesced D.48290_319 to D.48289_341
Coalesced D.48293_320 to D.48292_343
Coalesced D.48296_321 to D.48295_345
Coalesced D.48299_322 to D.48298_347
Coalesced D.48302_323 to D.48301_349
Coalesced D.48306_325 to D.48304_350
Coalesced D.48310_327 to D.48308_351
Coalesced D.48313_328 to D.48312_353
Coalesced D.48316_329 to D.48315_355
Coalesced D.48319_330 to D.48318_357
Coalesced D.48322_331 to D.48321_359
Coalesced D.48325_332 to D.48324_361
Coalesced D.48328_333 to D.48327_363
Coalesced D.48331_334 to D.48330_365
Coalesced D.48334_335 to idx_367
Scope blocks after cleanups:

{ Scope block #0 
  const char * ip;
  const char * port;
  const char * a_ip;
  const char * r_ip;
  const char * r_port;
  const char * tmp;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_recover_session";
  static const char __func__[34] = "switch_core_media_recover_session";

  { Scope block #488 src/switch_core_media.c:8672 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #489 Originating from :#0 

    }

  }

  { Scope block #490 src/switch_core_media.c:8668 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #491 Originating from :#0 

    }

  }

  { Scope block #492 src/switch_core_media.c:8665 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #493 Originating from :#0 

    }

  }

  { Scope block #494 src/switch_core_media.c:8660 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #495 Originating from :#0 

    }

  }

  { Scope block #496 src/switch_core_media.c:8646 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #497 Originating from :#0 

    }

  }

  { Scope block #498 src/switch_core_media.c:8642 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #499 Originating from :#0 

    }

  }

  { Scope block #500 src/switch_core_media.c:8637 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #501 Originating from :#0 

    }

  }

  { Scope block #502 src/switch_core_media.c:8631 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #503 Originating from :#0 

    }

  }

  { Scope block #504 src/switch_core_media.c:8626 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #505 Originating from :#0 

    }

  }

  { Scope block #506 src/switch_core_media.c:8624 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #507 Originating from :#0 

    }

  }

  { Scope block #508 src/switch_core_media.c:8618 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #509 Originating from :#0 

    }

  }

  { Scope block #510 src/switch_core_media.c:8614 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #511 Originating from :#0 

    }

  }

  { Scope block #512 src/switch_core_media.c:8610 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #513 Originating from :#0 

    }

  }

  { Scope block #514 src/switch_core_media.c:8605 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #515 Originating from :#0 

    }

  }

  { Scope block #516 src/switch_core_media.c:8601 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #517 Originating from :#0 

    }

  }

  { Scope block #518 src/switch_core_media.c:8597 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #519 Originating from :#0 

    }

  }

  { Scope block #520 
    const char * vtmp;

  }

  { Scope block #521 
    char * tmp_codec_string;

  }

  { Scope block #522 
    int idx;

    { Scope block #523 src/switch_core_media.c:8688 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #524 Originating from :#0 

      }

    }

  }

}
switch_core_media_recover_session (struct switch_core_session_t * session)
{
  int D.48330;
  int D.48327;
  int D.48324;
  int D.48321;
  int D.48318;
  int D.48315;
  int D.48312;
  const char D.48309;
  int D.48308;
  const char D.48305;
  int D.48304;
  int D.48301;
  int D.48298;
  int D.48295;
  int D.48292;
  int D.48289;
  int D.48286;
  int D.48283;
  int idx;
  char * tmp_codec_string;
  const char * vtmp;
  static const char __func__[34] = "switch_core_media_recover_session";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_recover_session";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  const char * tmp;
  const char * r_port;
  const char * r_ip;
  const char * a_ip;
  const char * port;
  const char * ip;
  switch_payload_t D.40294;
  switch_payload_t D.40293;
  uint8_t D.40290;
  unsigned char[64] * D.40289;
  uint32_t D.40288;
  int D.40287;
  switch_size_t D.40286;
  int D.40285;
  unsigned char[64] * D.40284;
  uint32_t idx.2;
  struct switch_rtp_t * D.40282;
  struct switch_channel_t * D.40281;
  char * D.40280;
  struct switch_secure_settings_t * D.40279;
  unsigned int D.40278;
  struct switch_secure_settings_t[10] * D.40277;
  char * D.40276;
  char * D.40273;
  switch_rtp_crypto_key_type_t D.40272;
  switch_status_t D.40267;
  short unsigned int D.40266;
  switch_port_t D.40262;
  short unsigned int D.40261;
  uint32_t D.40259;
  long unsigned int D.40255;
  long unsigned int D.40254;
  const char * D.40250;
  const char * D.40249;
  unsigned char D.40248;
  switch_payload_t D.40244;
  unsigned char D.40243;
  struct payload_map_t * D.40241;
  uint32_t D.40236;
  short unsigned int D.40235;
  _Bool D.40231;
  _Bool D.40230;
  _Bool D.40229;
  char * D.40228;
  char * D.40224;
  char * D.40223;
  switch_port_t D.40219;
  short unsigned int D.40218;
  char * D.40216;
  uint32_t D.40215;
  unsigned char D.40214;
  switch_payload_t D.40210;
  unsigned char D.40209;
  uint32_t D.40205;
  long unsigned int D.40201;
  long unsigned int D.40200;
  unsigned char D.40196;
  unsigned char D.40192;
  int D.40188;
  int D.40187;
  const struct switch_codec_implementation_t *[50] * D.40186;
  int D.40185;
  unsigned int D.40184;
  char *[50] * D.40183;
  struct switch_core_session_t * D.40182;
  char * iftmp.0;
  char * D.40169;
  struct switch_core_media_params_t * D.40168;
  const char * D.40165;
  char * D.40164;
  const char * D.40163;
  struct payload_map_t * D.40162;
  _Bool D.40161;
  _Bool D.40160;
  _Bool D.40159;
  uint32_t D.40157;
  struct switch_channel_t * D.40154;

<bb 2>:
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8557, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 60>;
  else
    goto <bb 5>;

<bb 5>:
  D.40154_5 = session_3(D)->channel;
  ip_6 = switch_channel_get_variable_dup (D.40154_5, "local_media_ip", 1, -1);
  # DEBUG ip => ip_6
  D.40154_7 = session_3(D)->channel;
  port_8 = switch_channel_get_variable_dup (D.40154_7, "local_media_port", 1, -1);
  # DEBUG port => port_8
  D.40154_9 = session_3(D)->channel;
  D.40157_10 = switch_channel_test_flag (D.40154_9, 15);
  if (D.40157_10 != 0)
    goto <bb 60>;
  else
    goto <bb 6>;

<bb 6>:
  D.40159_11 = ip_6 == 0B;
  D.40160_12 = port_8 == 0B;
  D.40161_13 = D.40159_11 || D.40160_12;
  if (D.40161_13 != 0)
    goto <bb 60>;
  else
    goto <bb 7>;

<bb 7>:
  D.40154_14 = session_3(D)->channel;
  a_ip_15 = switch_channel_get_variable_dup (D.40154_14, "advertised_media_ip", 1, -1);
  # DEBUG a_ip => a_ip_15
  D.40154_16 = session_3(D)->channel;
  r_ip_17 = switch_channel_get_variable_dup (D.40154_16, "remote_media_ip", 1, -1);
  # DEBUG r_ip => r_ip_17
  D.40154_18 = session_3(D)->channel;
  r_port_19 = switch_channel_get_variable_dup (D.40154_18, "remote_media_port", 1, -1);
  # DEBUG r_port => r_port_19
  a_engine_20 = &smh_4->engines;
  # DEBUG a_engine => a_engine_20
  v_engine_21 = &smh_4->engines[1];
  # DEBUG v_engine => v_engine_21
  D.40162_22 = a_engine_20->cur_payload_map;
  D.40162_23 = a_engine_20->cur_payload_map;
  D.40154_24 = session_3(D)->channel;
  D.40163_25 = switch_channel_get_variable_dup (D.40154_24, "rtp_use_codec_name", 1, -1);
  D.40162_23->rm_encoding = D.40163_25;
  D.40164_26 = D.40162_23->rm_encoding;
  D.40162_23->iananame = D.40164_26;
  D.40162_27 = a_engine_20->cur_payload_map;
  D.40154_28 = session_3(D)->channel;
  D.40165_29 = switch_channel_get_variable_dup (D.40154_28, "rtp_use_codec_fmtp", 1, -1);
  D.40162_27->rm_fmtp = D.40165_29;
  D.40154_30 = session_3(D)->channel;
  tmp_31 = switch_channel_get_variable_dup (D.40154_30, "switch_r_sdp", 1, -1);
  # DEBUG tmp => tmp_31
  if (tmp_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.40168_32 = smh_4->mparams;
  D.40169_33 = switch_core_perform_session_strdup (session_3(D), tmp_31, "src/switch_core_media.c", &__func__, 8581);
  D.40168_32->remote_sdp_str = D.40169_33;

<bb 9>:
  D.40154_34 = session_3(D)->channel;
  tmp_35 = switch_channel_get_variable_dup (D.40154_34, "rtp_last_audio_codec_string", 1, -1);
  # DEBUG tmp => tmp_35
  if (tmp_35 != 0B)
    goto <bb 10>;
  else
    goto <bb 17>;

<bb 10>:
  D.40154_36 = session_3(D)->channel;
  vtmp_37 = switch_channel_get_variable_dup (D.40154_36, "rtp_last_video_codec_string", 1, -1);
  # DEBUG vtmp => vtmp_37
  D.40154_38 = session_3(D)->channel;
  if (vtmp_37 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  iftmp.0_39 = ",";
  goto <bb 13>;

<bb 12>:
  iftmp.0_40 = "";

<bb 13>:
  # iftmp.0_1 = PHI <iftmp.0_39(11), iftmp.0_40(12)>
  if (vtmp_37 != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  vtmp_41 = vtmp_37;
  goto <bb 16>;

<bb 15>:
  vtmp_42 = "";

<bb 16>:
  # vtmp_2 = PHI <vtmp_41(14), vtmp_42(15)>
  switch_channel_set_variable_printf (D.40154_38, "rtp_use_codec_string", "%s%s%s", tmp_35, iftmp.0_1, vtmp_2);

<bb 17>:
  D.40154_43 = session_3(D)->channel;
  tmp_44 = switch_channel_get_variable_dup (D.40154_43, "rtp_use_codec_string", 1, -1);
  # DEBUG tmp => tmp_44
  if (tmp_44 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.40182_45 = smh_4->session;
  tmp_codec_string_46 = switch_core_perform_session_strdup (D.40182_45, tmp_44, "src/switch_core_media.c", &__func__, 8591);
  # DEBUG tmp_codec_string => tmp_codec_string_46
  D.40183_47 = &smh_4->codec_order;
  D.40184_48 = switch_separate_string (tmp_codec_string_46, 44, D.40183_47, 50);
  D.40185_49 = (int) D.40184_48;
  smh_4->codec_order_last = D.40185_49;
  D.40168_50 = smh_4->mparams;
  D.40186_51 = &smh_4->codecs;
  D.40183_52 = &smh_4->codec_order;
  D.40187_53 = smh_4->codec_order_last;
  D.40188_54 = switch_loadable_module_get_codecs_sorted (D.40186_51, 50, D.40183_52, D.40187_53);
  D.40168_50->num_codecs = D.40188_54;

<bb 19>:
  D.40154_55 = session_3(D)->channel;
  tmp_56 = switch_channel_get_variable_dup (D.40154_55, "rtp_2833_send_payload", 1, -1);
  # DEBUG tmp => tmp_56
  if (tmp_56 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40168_57 = smh_4->mparams;
  # DEBUG __nptr => tmp_56
  D.48283_317 = strtol (tmp_56, 0B, 10);
  D.48283_337 = D.48283_317;
  D.48283_58 = D.48283_337;
  D.40192_59 = (unsigned char) D.48283_58;
  D.40168_57->te = D.40192_59;

<bb 21>:
  D.40154_60 = session_3(D)->channel;
  tmp_61 = switch_channel_get_variable_dup (D.40154_60, "rtp_2833_recv_payload", 1, -1);
  # DEBUG tmp => tmp_61
  if (tmp_61 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.40168_62 = smh_4->mparams;
  # DEBUG __nptr => tmp_61
  D.48286_318 = strtol (tmp_61, 0B, 10);
  D.48286_339 = D.48286_318;
  D.48286_63 = D.48286_339;
  D.40196_64 = (unsigned char) D.48286_63;
  D.40168_62->recv_te = D.40196_64;

<bb 23>:
  D.40154_65 = session_3(D)->channel;
  tmp_66 = switch_channel_get_variable_dup (D.40154_65, "rtp_use_codec_rate", 1, -1);
  # DEBUG tmp => tmp_66
  if (tmp_66 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.40162_67 = a_engine_20->cur_payload_map;
  # DEBUG __nptr => tmp_66
  D.48289_319 = strtol (tmp_66, 0B, 10);
  D.48289_341 = D.48289_319;
  D.48289_68 = D.48289_341;
  D.40200_69 = (long unsigned int) D.48289_68;
  D.40162_67->rm_rate = D.40200_69;
  D.40162_70 = a_engine_20->cur_payload_map;
  D.40162_71 = a_engine_20->cur_payload_map;
  D.40201_72 = D.40162_71->rm_rate;
  D.40162_71->adv_rm_rate = D.40201_72;

<bb 25>:
  D.40154_73 = session_3(D)->channel;
  tmp_74 = switch_channel_get_variable_dup (D.40154_73, "rtp_use_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_74
  if (tmp_74 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  D.40162_75 = a_engine_20->cur_payload_map;
  # DEBUG __nptr => tmp_74
  D.48292_320 = strtol (tmp_74, 0B, 10);
  D.48292_343 = D.48292_320;
  D.48292_76 = D.48292_343;
  D.40205_77 = (uint32_t) D.48292_76;
  D.40162_75->codec_ms = D.40205_77;

<bb 27>:
  D.40154_78 = session_3(D)->channel;
  tmp_79 = switch_channel_get_variable_dup (D.40154_78, "rtp_use_pt", 1, -1);
  # DEBUG tmp => tmp_79
  if (tmp_79 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.40162_80 = a_engine_20->cur_payload_map;
  D.40162_81 = a_engine_20->cur_payload_map;
  # DEBUG __nptr => tmp_79
  D.48295_321 = strtol (tmp_79, 0B, 10);
  D.48295_345 = D.48295_321;
  D.48295_82 = D.48295_345;
  D.40209_83 = (unsigned char) D.48295_82;
  D.40162_81->agreed_pt = D.40209_83;
  D.40210_84 = D.40162_81->agreed_pt;
  D.40162_81->pt = D.40210_84;

<bb 29>:
  D.40154_85 = session_3(D)->channel;
  tmp_86 = switch_channel_get_variable_dup (D.40154_85, "rtp_audio_recv_pt", 1, -1);
  # DEBUG tmp => tmp_86
  if (tmp_86 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  D.40162_87 = a_engine_20->cur_payload_map;
  # DEBUG __nptr => tmp_86
  D.48298_322 = strtol (tmp_86, 0B, 10);
  D.48298_347 = D.48298_322;
  D.48298_88 = D.48298_347;
  D.40214_89 = (unsigned char) D.48298_88;
  D.40162_87->recv_pt = D.40214_89;

<bb 31>:
  D.40168_90 = smh_4->mparams;
  D.40215_91 = D.40168_90->codec_flags;
  switch_core_media_set_codec (session_3(D), 1, D.40215_91);
  D.40168_92 = smh_4->mparams;
  D.40168_92->extrtpip = ip_6;
  D.40216_93 = D.40168_92->extrtpip;
  a_engine_20->adv_sdp_ip = D.40216_93;
  # DEBUG __nptr => port_8
  D.48301_323 = strtol (port_8, 0B, 10);
  D.48301_349 = D.48301_323;
  D.48301_94 = D.48301_349;
  D.40218_95 = (short unsigned int) D.48301_94;
  a_engine_20->local_sdp_port = D.40218_95;
  D.40219_96 = a_engine_20->local_sdp_port;
  a_engine_20->adv_sdp_port = D.40219_96;
  # DEBUG s => ip_6
  if (ip_6 == 0B)
    goto <bb 34>;
  else
    goto <bb 32>;

<bb 32>:
  D.48305_324 = *ip_6;
  if (D.48305_324 == 0)
    goto <bb 34>;
  else
    goto <bb 33>;

<bb 33>:

<bb 34>:
  # D.48304_325 = PHI <1(31), 1(32), 0(33)>
  D.48304_350 = D.48304_325;
  D.48304_97 = D.48304_350;
  if (D.48304_97 == 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.40223_98 = switch_core_perform_session_strdup (session_3(D), ip_6, "src/switch_core_media.c", &__func__, 8627);
  a_engine_20->local_sdp_ip = D.40223_98;
  D.40168_99 = smh_4->mparams;
  D.40224_100 = a_engine_20->local_sdp_ip;
  D.40168_99->rtpip = D.40224_100;

<bb 36>:
  # DEBUG s => a_ip_15
  if (a_ip_15 == 0B)
    goto <bb 39>;
  else
    goto <bb 37>;

<bb 37>:
  D.48309_326 = *a_ip_15;
  if (D.48309_326 == 0)
    goto <bb 39>;
  else
    goto <bb 38>;

<bb 38>:

<bb 39>:
  # D.48308_327 = PHI <1(36), 1(37), 0(38)>
  D.48308_351 = D.48308_327;
  D.48308_101 = D.48308_351;
  if (D.48308_101 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  D.40228_102 = switch_core_perform_session_strdup (session_3(D), a_ip_15, "src/switch_core_media.c", &__func__, 8632);
  a_engine_20->adv_sdp_ip = D.40228_102;

<bb 41>:
  D.40229_103 = r_ip_17 != 0B;
  D.40230_104 = r_port_19 != 0B;
  D.40231_105 = D.40229_103 && D.40230_104;
  if (D.40231_105 != 0)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  D.40162_106 = a_engine_20->cur_payload_map;
  D.40162_106->remote_sdp_ip = r_ip_17;
  D.40162_107 = a_engine_20->cur_payload_map;
  # DEBUG __nptr => r_port_19
  D.48312_328 = strtol (r_port_19, 0B, 10);
  D.48312_353 = D.48312_328;
  D.48312_108 = D.48312_353;
  D.40235_109 = (short unsigned int) D.48312_108;
  D.40162_107->remote_sdp_port = D.40235_109;

<bb 43>:
  D.40154_110 = session_3(D)->channel;
  D.40236_111 = switch_channel_test_flag (D.40154_110, 23);
  if (D.40236_111 != 0)
    goto <bb 44>;
  else
    goto <bb 54>;

<bb 44>:
  D.40154_112 = session_3(D)->channel;
  tmp_113 = switch_channel_get_variable_dup (D.40154_112, "rtp_use_video_pt", 1, -1);
  # DEBUG tmp => tmp_113
  if (tmp_113 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.40241_114 = v_engine_21->cur_payload_map;
  D.40241_115 = v_engine_21->cur_payload_map;
  # DEBUG __nptr => tmp_113
  D.48315_329 = strtol (tmp_113, 0B, 10);
  D.48315_355 = D.48315_329;
  D.48315_116 = D.48315_355;
  D.40243_117 = (unsigned char) D.48315_116;
  D.40241_115->agreed_pt = D.40243_117;
  D.40244_118 = D.40241_115->agreed_pt;
  D.40241_115->pt = D.40244_118;

<bb 46>:
  D.40154_119 = session_3(D)->channel;
  tmp_120 = switch_channel_get_variable_dup (D.40154_119, "rtp_video_recv_pt", 1, -1);
  # DEBUG tmp => tmp_120
  if (tmp_120 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.40241_121 = v_engine_21->cur_payload_map;
  # DEBUG __nptr => tmp_120
  D.48318_330 = strtol (tmp_120, 0B, 10);
  D.48318_357 = D.48318_330;
  D.48318_122 = D.48318_357;
  D.40248_123 = (unsigned char) D.48318_122;
  D.40241_121->recv_pt = D.40248_123;

<bb 48>:
  D.40241_124 = v_engine_21->cur_payload_map;
  D.40154_125 = session_3(D)->channel;
  D.40249_126 = switch_channel_get_variable_dup (D.40154_125, "rtp_use_video_codec_name", 1, -1);
  D.40241_124->rm_encoding = D.40249_126;
  D.40241_127 = v_engine_21->cur_payload_map;
  D.40154_128 = session_3(D)->channel;
  D.40250_129 = switch_channel_get_variable_dup (D.40154_128, "rtp_use_video_codec_fmtp", 1, -1);
  D.40241_127->rm_fmtp = D.40250_129;
  D.40154_130 = session_3(D)->channel;
  ip_131 = switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);
  # DEBUG ip => ip_131
  D.40154_132 = session_3(D)->channel;
  port_133 = switch_channel_get_variable_dup (D.40154_132, "local_video_port", 1, -1);
  # DEBUG port => port_133
  D.40154_134 = session_3(D)->channel;
  r_ip_135 = switch_channel_get_variable_dup (D.40154_134, "remote_video_ip", 1, -1);
  # DEBUG r_ip => r_ip_135
  D.40154_136 = session_3(D)->channel;
  r_port_137 = switch_channel_get_variable_dup (D.40154_136, "remote_video_port", 1, -1);
  # DEBUG r_port => r_port_137
  D.40154_138 = session_3(D)->channel;
  switch_channel_set_flag_value (D.40154_138, 98, 1);
  D.40154_139 = session_3(D)->channel;
  tmp_140 = switch_channel_get_variable_dup (D.40154_139, "rtp_use_video_codec_rate", 1, -1);
  # DEBUG tmp => tmp_140
  if (tmp_140 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.40241_141 = v_engine_21->cur_payload_map;
  # DEBUG __nptr => tmp_140
  D.48321_331 = strtol (tmp_140, 0B, 10);
  D.48321_359 = D.48321_331;
  D.48321_142 = D.48321_359;
  D.40254_143 = (long unsigned int) D.48321_142;
  D.40241_141->rm_rate = D.40254_143;
  D.40241_144 = v_engine_21->cur_payload_map;
  D.40241_145 = v_engine_21->cur_payload_map;
  D.40255_146 = D.40241_145->rm_rate;
  D.40241_145->adv_rm_rate = D.40255_146;

<bb 50>:
  D.40154_147 = session_3(D)->channel;
  tmp_148 = switch_channel_get_variable_dup (D.40154_147, "rtp_use_video_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_148
  if (tmp_148 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.40241_149 = v_engine_21->cur_payload_map;
  # DEBUG __nptr => tmp_148
  D.48324_332 = strtol (tmp_148, 0B, 10);
  D.48324_361 = D.48324_332;
  D.48324_150 = D.48324_361;
  D.40259_151 = (uint32_t) D.48324_150;
  D.40241_149->codec_ms = D.40259_151;

<bb 52>:
  # DEBUG __nptr => port_133
  D.48327_333 = strtol (port_133, 0B, 10);
  D.48327_363 = D.48327_333;
  D.48327_152 = D.48327_363;
  D.40261_153 = (short unsigned int) D.48327_152;
  v_engine_21->local_sdp_port = D.40261_153;
  D.40262_154 = v_engine_21->local_sdp_port;
  v_engine_21->adv_sdp_port = D.40262_154;
  D.40229_155 = r_ip_135 != 0B;
  D.40230_156 = r_port_137 != 0B;
  D.40231_157 = D.40229_155 && D.40230_156;
  if (D.40231_157 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  D.40241_158 = v_engine_21->cur_payload_map;
  D.40241_158->remote_sdp_ip = r_ip_135;
  D.40241_159 = v_engine_21->cur_payload_map;
  # DEBUG __nptr => r_port_137
  D.48330_334 = strtol (r_port_137, 0B, 10);
  D.48330_365 = D.48330_334;
  D.48330_160 = D.48330_365;
  D.40266_161 = (short unsigned int) D.48330_160;
  D.40241_159->remote_sdp_port = D.40266_161;

<bb 54>:
  switch_core_media_gen_local_sdp (session_3(D), 0, 0B, 0, 0B, 1);
  switch_core_media_set_video_codec (session_3(D), 1);
  D.40267_162 = switch_core_media_activate_rtp (session_3(D));
  if (D.40267_162 != 0)
    goto <bb 60>;
  else
    goto <bb 55>;

<bb 55>:
  switch_core_session_get_recovery_crypto_key (session_3(D), 0);
  switch_core_session_get_recovery_crypto_key (session_3(D), 1);
  D.40154_163 = session_3(D)->channel;
  tmp_164 = switch_channel_get_variable_dup (D.40154_163, "rtp_last_audio_local_crypto_key", 1, -1);
  # DEBUG tmp => tmp_164
  if (tmp_164 != 0B)
    goto <bb 56>;
  else
    goto <bb 58>;

<bb 56>:
  D.40272_165 = a_engine_20->crypto_type;
  D.40273_166 = a_engine_20->ssec[D.40272_165].remote_crypto_key;
  if (D.40273_166 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  # DEBUG __nptr => tmp_164
  idx_335 = strtol (tmp_164, 0B, 10);
  idx_367 = idx_335;
  idx_167 = idx_367;
  # DEBUG idx => NULL
  D.40272_168 = a_engine_20->crypto_type;
  D.40276_169 = switch_core_perform_session_strdup (session_3(D), tmp_164, "src/switch_core_media.c", &__func__, 8690);
  a_engine_20->ssec[D.40272_168].local_crypto_key = D.40276_169;
  D.40277_170 = &a_engine_20->ssec;
  D.40272_171 = a_engine_20->crypto_type;
  D.40278_172 = D.40272_171 * 144;
  D.40279_173 = D.40277_170 + D.40278_172;
  D.40272_174 = a_engine_20->crypto_type;
  D.40280_175 = a_engine_20->ssec[D.40272_174].local_crypto_key;
  switch_core_media_add_crypto (D.40279_173, D.40280_175, 0);
  D.40277_176 = &a_engine_20->ssec;
  D.40272_177 = a_engine_20->crypto_type;
  D.40278_178 = D.40272_177 * 144;
  D.40279_179 = D.40277_176 + D.40278_178;
  D.40272_180 = a_engine_20->crypto_type;
  D.40273_181 = a_engine_20->ssec[D.40272_180].remote_crypto_key;
  switch_core_media_add_crypto (D.40279_179, D.40273_181, 1);
  D.40182_182 = smh_4->session;
  D.40281_183 = D.40182_182->channel;
  switch_channel_set_flag_value (D.40281_183, 92, 1);
  D.40282_184 = a_engine_20->rtp_session;
  idx.2_185 = (uint32_t) idx_167;
  D.40272_186 = a_engine_20->crypto_type;
  D.40272_187 = a_engine_20->crypto_type;
  D.40284_188 = &a_engine_20->ssec[D.40272_187].local_raw_key;
  D.40272_189 = a_engine_20->crypto_type;
  D.40285_190 = SUITES[D.40272_189].keylen;
  D.40286_191 = (switch_size_t) D.40285_190;
  switch_rtp_add_crypto_key (D.40282_184, 0, idx.2_185, D.40272_189, D.40284_188, D.40286_191);
  D.40282_192 = a_engine_20->rtp_session;
  D.40272_193 = a_engine_20->crypto_type;
  D.40287_194 = a_engine_20->ssec[D.40272_193].crypto_tag;
  D.40288_195 = (uint32_t) D.40287_194;
  D.40272_196 = a_engine_20->crypto_type;
  D.40272_197 = a_engine_20->crypto_type;
  D.40289_198 = &a_engine_20->ssec[D.40272_197].remote_raw_key;
  D.40272_199 = a_engine_20->crypto_type;
  D.40285_200 = SUITES[D.40272_199].keylen;
  D.40286_201 = (switch_size_t) D.40285_200;
  switch_rtp_add_crypto_key (D.40282_192, 1, D.40288_195, D.40272_199, D.40289_198, D.40286_201);

<bb 58>:
  D.40290_202 = switch_core_media_ready (session_3(D), 0);
  if (D.40290_202 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

<bb 59>:
  D.40282_203 = a_engine_20->rtp_session;
  D.40168_204 = smh_4->mparams;
  D.40293_205 = D.40168_204->te;
  switch_rtp_set_telephony_event (D.40282_203, D.40293_205);
  D.40282_206 = a_engine_20->rtp_session;
  D.40168_207 = smh_4->mparams;
  D.40294_208 = D.40168_207->recv_te;
  switch_rtp_set_telephony_recv_event (D.40282_206, D.40294_208);

<bb 60>:
  return;

}



;; Function switch_core_media_init (switch_core_media_init)


Partition map 

Partition 1 (.MEM_1(D) - 1 )
Partition 2 (.MEM_2 - 2 )

switch_core_media_init ()
{
<bb 2>:
  switch_core_gen_certs ("dtls-srtp.pem");
  return;

}



;; Function switch_core_media_deinit (switch_core_media_deinit)


Partition map 


switch_core_media_deinit ()
{
<bb 2>:
  return;

}


