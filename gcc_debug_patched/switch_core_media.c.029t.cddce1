
;; Function atoi (atoi)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: D.40324_2 = strtol (__nptr_1(D), 0B, 10);

Marking useful stmt: return D.40324_2;


Processing worklist:
processing: return D.40324_2;

processing: D.40324_2 = strtol (__nptr_1(D), 0B, 10);


Eliminating unnecessary statements:
Removed 0 of 2 statements (0%)
Removed 0 of 0 PHI nodes (0%)
atoi (const char * __nptr)
{
  int D.40324;

<bb 2>:
  D.40324_2 = strtol (__nptr_1(D), 0B, 10);
  return D.40324_2;

}



;; Function atol (atol)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: D.41133_2 = strtol (__nptr_1(D), 0B, 10);

Marking useful stmt: return D.41133_2;


Processing worklist:
processing: return D.41133_2;

processing: D.41133_2 = strtol (__nptr_1(D), 0B, 10);


Eliminating unnecessary statements:
Removed 0 of 2 statements (0%)
Removed 0 of 0 PHI nodes (0%)
atol (const char * __nptr)
{
  long int D.41133;

<bb 2>:
  D.41133_2 = strtol (__nptr_1(D), 0B, 10);
  return D.41133_2;

}



;; Function switch_core_codec_ready (switch_core_codec_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Marking useful stmt: return D.45444_10;


Processing worklist:
processing: return D.45444_10;

marking necessary through D.45444_10 stmt D.45444_10 = (switch_bool_t) iftmp.104_1;
processing: D.45444_10 = (switch_bool_t) iftmp.104_1;

marking necessary through iftmp.104_1 stmt iftmp.104_1 = PHI <1(6), 0(7)>
processing: iftmp.104_1 = PHI <1(6), 0(7)>

Marking useful stmt: if (D.45454_6 != 0B)

Marking useful stmt: if (codec_2(D) != 0B)

Marking useful stmt: if (D.45450_4 != 0)

Marking useful stmt: if (D.45452_5 != 0B)

Marking useful stmt: if (D.45456_7 != 0B)

processing: if (D.45456_7 != 0B)

marking necessary through D.45456_7 stmt D.45456_7 = codec_2(D)->implementation;
processing: D.45456_7 = codec_2(D)->implementation;

processing: if (D.45452_5 != 0B)

marking necessary through D.45452_5 stmt D.45452_5 = codec_2(D)->mutex;
processing: D.45452_5 = codec_2(D)->mutex;

processing: if (D.45450_4 != 0)

marking necessary through D.45450_4 stmt D.45450_4 = D.45449_3 & 256;
processing: D.45450_4 = D.45449_3 & 256;

marking necessary through D.45449_3 stmt D.45449_3 = codec_2(D)->flags;
processing: D.45449_3 = codec_2(D)->flags;

processing: if (codec_2(D) != 0B)

processing: if (D.45454_6 != 0B)

marking necessary through D.45454_6 stmt D.45454_6 = codec_2(D)->codec_interface;
processing: D.45454_6 = codec_2(D)->codec_interface;


Eliminating unnecessary statements:
Removed 0 of 12 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_codec_ready (struct switch_codec_t * codec)
{
  const struct switch_codec_implementation_t * D.45456;
  struct switch_codec_interface_t * D.45454;
  struct switch_mutex_t * D.45452;
  uint32_t D.45450;
  uint32_t D.45449;
  int iftmp.104;
  switch_bool_t D.45444;

<bb 2>:
  if (codec_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 3>:
  D.45449_3 = codec_2(D)->flags;
  D.45450_4 = D.45449_3 & 256;
  if (D.45450_4 != 0)
    goto <bb 4>;
  else
    goto <bb 7>;

<bb 4>:
  D.45452_5 = codec_2(D)->mutex;
  if (D.45452_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  D.45454_6 = codec_2(D)->codec_interface;
  if (D.45454_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.45456_7 = codec_2(D)->implementation;
  if (D.45456_7 != 0B)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:

<bb 8>:
  # iftmp.104_1 = PHI <1(6), 0(7)>
  D.45444_10 = (switch_bool_t) iftmp.104_1;
  return D.45444_10;

}



;; Function _zstr (_zstr)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Marking useful stmt: return D.40296_1;


Processing worklist:
processing: return D.40296_1;

marking necessary through D.40296_1 stmt D.40296_1 = PHI <1(3), 0(4), 1(2)>
processing: D.40296_1 = PHI <1(3), 0(4), 1(2)>

Marking useful stmt: if (s_2(D) == 0B)

Marking useful stmt: if (D.40302_3 == 0)

processing: if (D.40302_3 == 0)

marking necessary through D.40302_3 stmt D.40302_3 = *s_2(D);
processing: D.40302_3 = *s_2(D);

processing: if (s_2(D) == 0B)


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 1 PHI nodes (0%)
_zstr (const char * s)
{
  const char D.40302;
  int D.40296;

<bb 2>:
  if (s_2(D) == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

<bb 3>:
  D.40302_3 = *s_2(D);
  if (D.40302_3 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:

<bb 5>:
  # D.40296_1 = PHI <1(3), 0(4), 1(2)>
  return D.40296_1;

}



;; Function switch_known_bitrate (switch_known_bitrate)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 7 8 3 4 5 6 }
;; 3 succs { 8 }
;; 4 succs { 8 }
;; 5 succs { 8 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Marking useful stmt: <L1>:

Marking useful stmt: <L2>:

Marking useful stmt: <L3>:

Marking useful stmt: <L6>:

Marking useful stmt: <L10>:

Marking useful stmt: <L11>:

Marking useful stmt: return D.40703_1;


Processing worklist:
processing: return D.40703_1;

marking necessary through D.40703_1 stmt D.40703_1 = PHI <64000(2), 13200(3), 6300(4), 2400(5), 0(7), 8000(6)>
processing: D.40703_1 = PHI <64000(2), 13200(3), 6300(4), 2400(5), 0(7), 8000(6)>

Marking useful stmt: switch (payload_2(D)) <default: <L10>, case 0: <L11>, case 3: <L1>, case 4: <L2>, case 7: <L3>, case 8 ... 9: <L11>, case 18: <L6>>

processing: switch (payload_2(D)) <default: <L10>, case 0: <L11>, case 3: <L1>, case 4: <L2>, case 7: <L3>, case 8 ... 9: <L11>, case 18: <L6>>


Eliminating unnecessary statements:
Removed 0 of 8 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_known_bitrate (switch_payload_t payload)
{
  uint32_t D.40703;

<bb 2>:
  switch (payload_2(D)) <default: <L10>, case 0: <L11>, case 3: <L1>, case 4: <L2>, case 7: <L3>, case 8 ... 9: <L11>, case 18: <L6>>

<L1>:
  goto <bb 8> (<L11>);

<L2>:
  goto <bb 8> (<L11>);

<L3>:
  goto <bb 8> (<L11>);

<L6>:
  goto <bb 8> (<L11>);

<L10>:

  # D.40703_1 = PHI <64000(2), 13200(3), 6300(4), 2400(5), 0(7), 8000(6)>
<L11>:
  return D.40703_1;

}



;; Function switch_safe_atoi (switch_safe_atoi)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Marking useful stmt: # DEBUG __nptr => nptr_2(D)

Marking useful stmt: dft_8 = strtol (nptr_2(D), 0B, 10);

Marking useful stmt: return dft_1;


Processing worklist:
processing: return dft_1;

marking necessary through dft_1 stmt dft_1 = PHI <dft_8(3), dft_4(D)(4)>
processing: dft_1 = PHI <dft_8(3), dft_4(D)(4)>

Marking useful stmt: if (nptr_2(D) != 0B)

processing: if (nptr_2(D) != 0B)

processing: dft_8 = strtol (nptr_2(D), 0B, 10);


Eliminating unnecessary statements:
Deleting : dft_5 = dft_4(D);

Deleting : dft_3 = dft_8;

Removed 2 of 6 statements (33%)
Removed 0 of 1 PHI nodes (0%)
Removing basic block 4
;; basic block 4, loop depth 0, count 0
;; prev block 3, next block 5
;; pred:      
;; succ:       5 (fallthru,exec)
<bb 4>:


Scope blocks after cleanups:

{ Scope block #0 

  { Scope block #2 ./src/include/switch_utils.h:735 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #3 Originating from :#0 

    }

  }

}
switch_safe_atoi (const char * nptr, int dft)
{
<bb 2>:
  if (nptr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  # DEBUG __nptr => nptr_2(D)
  dft_8 = strtol (nptr_2(D), 0B, 10);

<bb 4>:
  # dft_1 = PHI <dft_8(3), dft_4(D)(2)>
  return dft_1;

}



;; Function switch_media_type2str (switch_media_type2str)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 5 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Marking useful stmt: <L1>:

Marking useful stmt: <L2>:

Marking useful stmt: <L4>:

Marking useful stmt: return D.44061_1;


Processing worklist:
processing: return D.44061_1;

marking necessary through D.44061_1 stmt D.44061_1 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
processing: D.44061_1 = PHI <"audio"(2), "video"(3), "!ERR"(4)>

Marking useful stmt: switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>

processing: switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>


Eliminating unnecessary statements:
Removed 0 of 5 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_media_type2str (switch_media_type_t type)
{
  const char * D.44061;

<bb 2>:
  switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>

<L1>:
  goto <bb 5> (<L4>);

<L2>:

  # D.44061_1 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L4>:
  return D.44061_1;

}



;; Function greedy_sort (greedy_sort)

Created preheader block for loop 2
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 11 5 6 7 8 9 10 13 12
;;
;; Loop 2
;;  header 13, latch 10
;;  depth 1, outer 0
;;  nodes: 13 10 9 5 8 6 7
;;
;; Loop 3
;;  header 9, latch 8
;;  depth 2, outer 2
;;  nodes: 9 8 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 11 }
;; 11 succs { 13 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 13 }
;; 13 succs { 5 12 }
;; 12 succs { 1 }
Marking useful stmt: # DEBUG j => 0

Marking useful stmt: # DEBUG f => 0

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: # DEBUG j => j_18

Marking useful stmt: # DEBUG j => j_1

Marking useful stmt: # DEBUG imp => imp_31

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};

Marking useful stmt: # DEBUG f => f_40

Marking useful stmt: # DEBUG f => f_3

Marking useful stmt: # DEBUG j => j_41

Marking useful stmt: # DEBUG f => f_4

Marking useful stmt: # DEBUG j => j_2

Marking useful stmt: # DEBUG g => g_42

Marking useful stmt: # DEBUG g => g_6

Marking useful stmt: # DEBUG f => f_5

Marking useful stmt: return;

can not prove finiteness of loop 2
Marking useful stmt: if (D.45443_26 != 0)

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_2)
(get_scalar_evolution 
  (scalar = j_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_2 = PHI <0(5), j_41(8)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_2 = PHI <0(5), j_41(8)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = j_2)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
Found loop 3 to be finite: iterating (unsigned int) m_idx_10(D) times
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = j_1)
(get_scalar_evolution 
  (scalar = j_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_1 = PHI <0(2), j_18(3)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_1 = PHI <0(2), j_18(3)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = j_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_idx_10(D))
(get_scalar_evolution 
  (scalar = m_idx_10(D))
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) < m_idx_10(D)
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_10(D) < 0
    # of iterations (unsigned int) m_idx_10(D), bounded by 2147483647
Found loop 1 to be finite: iterating (unsigned int) m_idx_10(D) times

Processing worklist:
processing: if (D.45443_26 != 0)

marking necessary through D.45443_26 stmt D.45443_26 = D.45441_23 && D.45442_25;
processing: D.45443_26 = D.45441_23 && D.45442_25;

marking necessary through D.45441_23 stmt D.45441_23 = D.45440_22 > g_6;
marking necessary through D.45442_25 stmt D.45442_25 = g_6 < total_codecs_24(D);
processing: D.45442_25 = g_6 < total_codecs_24(D);

marking necessary through g_6 stmt g_6 = PHI <g_32(11), g_42(10)>
processing: g_6 = PHI <g_32(11), g_42(10)>

marking necessary through g_32 stmt g_32 = PHI <0(4)>
marking necessary through g_42 stmt g_42 = g_6 + 1;
processing: g_42 = g_6 + 1;

processing: g_32 = PHI <0(4)>

processing: D.45441_23 = D.45440_22 > g_6;

marking necessary through D.45440_22 stmt D.45440_22 = D.45439_21->num_codecs;
processing: D.45440_22 = D.45439_21->num_codecs;

marking necessary through D.45439_21 stmt D.45439_21 = smh_20(D)->mparams;
processing: D.45439_21 = smh_20(D)->mparams;

processing: return;

processing: *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};

Marking useful stmt: if (D.45433_33 == imp_31)

marking necessary through D.45438_36 stmt D.45438_36 = matches_16(D) + D.45437_35;
marking necessary through j.101_37 stmt j.101_37 = (unsigned int) j_2;
marking necessary through .MEM_48 stmt mtmp = {};
marking necessary through .MEM_49 stmt MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;
processing: MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;

Marking useful stmt: if (j_1 < m_idx_10(D))

marking necessary through j.101_11 stmt j.101_11 = (unsigned int) j_1;
marking necessary through D.45429_17 stmt D.45429_17 = matches_16(D) + D.45427_15;
processing: D.45429_17 = matches_16(D) + D.45427_15;

marking necessary through D.45427_15 stmt D.45427_15 = j.101_14 * 16;
processing: D.45427_15 = j.101_14 * 16;

marking necessary through j.101_14 stmt j.101_14 = (unsigned int) j_1;
processing: j.101_14 = (unsigned int) j_1;

marking necessary through j_1 stmt j_1 = PHI <0(2), j_18(3)>
processing: j_1 = PHI <0(2), j_18(3)>

marking necessary through j_18 stmt j_18 = j_1 + 1;
processing: j_18 = j_1 + 1;

processing: j.101_11 = (unsigned int) j_1;

processing: if (j_1 < m_idx_10(D))

processing: mtmp = {};

processing: j.101_37 = (unsigned int) j_2;

marking necessary through j_2 stmt j_2 = PHI <0(5), j_41(8)>
processing: j_2 = PHI <0(5), j_41(8)>

Marking useful stmt: if (j_2 < m_idx_10(D))

marking necessary through j_41 stmt j_41 = j_2 + 1;
processing: j_41 = j_2 + 1;

processing: if (j_2 < m_idx_10(D))

processing: D.45438_36 = matches_16(D) + D.45437_35;

marking necessary through D.45437_35 stmt D.45437_35 = f.103_34 * 16;
processing: D.45437_35 = f.103_34 * 16;

marking necessary through f.103_34 stmt f.103_34 = (unsigned int) f_4;
processing: f.103_34 = (unsigned int) f_4;

marking necessary through f_4 stmt f_4 = PHI <f_5(5), f_3(8)>
processing: f_4 = PHI <f_5(5), f_3(8)>

marking necessary through f_5 stmt f_5 = PHI <f_38(11), f_4(10)>
marking necessary through f_3 stmt f_3 = PHI <f_4(6), f_40(7)>
processing: f_3 = PHI <f_4(6), f_40(7)>

marking necessary through f_40 stmt f_40 = f_4 + 1;
processing: f_40 = f_4 + 1;

processing: f_5 = PHI <f_38(11), f_4(10)>

marking necessary through f_38 stmt f_38 = PHI <0(4)>
processing: f_38 = PHI <0(4)>

processing: if (D.45433_33 == imp_31)

marking necessary through D.45433_33 stmt D.45433_33 = mtmp[j_2].imp;
marking necessary through imp_31 stmt imp_31 = *D.45432_30;
processing: imp_31 = *D.45432_30;

marking necessary through D.45432_30 stmt D.45432_30 = codec_array_29(D) + D.45431_28;
processing: D.45432_30 = codec_array_29(D) + D.45431_28;

marking necessary through D.45431_28 stmt D.45431_28 = g.102_27 * 4;
processing: D.45431_28 = g.102_27 * 4;

marking necessary through g.102_27 stmt g.102_27 = (unsigned int) g_6;
processing: g.102_27 = (unsigned int) g_6;

processing: D.45433_33 = mtmp[j_2].imp;


Eliminating unnecessary statements:
Deleting : .MEM_19 = PHI <.MEM_43(4)>

Removed 0 of 45 statements (0%)
Removed 1 of 13 PHI nodes (7%)
Scope blocks after cleanups:

{ Scope block #0 
  int j;
  int f;
  int g;
  struct matches mtmp[30];

  { Scope block #0 
    const struct switch_codec_implementation_t * imp;

  }

}
greedy_sort (struct switch_media_handle_t * smh, struct matches * matches, int m_idx, const struct switch_codec_implementation_t * * codec_array, int total_codecs)
{
  const struct switch_codec_implementation_t * imp;
  struct matches mtmp[30];
  int g;
  int f;
  int j;
  _Bool D.45443;
  _Bool D.45442;
  _Bool D.45441;
  int D.45440;
  struct switch_core_media_params_t * D.45439;
  struct matches * D.45438;
  unsigned int D.45437;
  unsigned int f.103;
  const struct switch_codec_implementation_t * D.45433;
  const struct switch_codec_implementation_t * * D.45432;
  unsigned int D.45431;
  unsigned int g.102;
  struct matches * D.45429;
  unsigned int D.45427;
  unsigned int j.101;

<bb 2>:
  # DEBUG j => 0
  # DEBUG f => 0
  mtmp = {};
  # DEBUG j => 0
  goto <bb 4>;

<bb 3>:
  j.101_11 = (unsigned int) j_1;
  j.101_14 = (unsigned int) j_1;
  D.45427_15 = j.101_14 * 16;
  D.45429_17 = matches_16(D) + D.45427_15;
  MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45429_17;
  j_18 = j_1 + 1;
  # DEBUG j => j_18

<bb 4>:
  # j_1 = PHI <0(2), j_18(3)>
  # DEBUG j => j_1
  if (j_1 < m_idx_10(D))
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  # f_38 = PHI <0(4)>
  # g_32 = PHI <0(4)>
  goto <bb 12>;

<bb 6>:
  g.102_27 = (unsigned int) g_6;
  D.45431_28 = g.102_27 * 4;
  D.45432_30 = codec_array_29(D) + D.45431_28;
  imp_31 = *D.45432_30;
  # DEBUG imp => imp_31
  # DEBUG j => 0
  goto <bb 10>;

<bb 7>:
  D.45433_33 = mtmp[j_2].imp;
  if (D.45433_33 == imp_31)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  f.103_34 = (unsigned int) f_4;
  D.45437_35 = f.103_34 * 16;
  D.45438_36 = matches_16(D) + D.45437_35;
  j.101_37 = (unsigned int) j_2;
  *D.45438_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
  f_40 = f_4 + 1;
  # DEBUG f => f_40

<bb 9>:
  # f_3 = PHI <f_4(7), f_40(8)>
  # DEBUG f => f_3
  j_41 = j_2 + 1;
  # DEBUG j => j_41

<bb 10>:
  # j_2 = PHI <0(6), j_41(9)>
  # f_4 = PHI <f_5(6), f_3(9)>
  # DEBUG f => f_4
  # DEBUG j => j_2
  if (j_2 < m_idx_10(D))
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 11>:
  g_42 = g_6 + 1;
  # DEBUG g => g_42

<bb 12>:
  # f_5 = PHI <f_38(5), f_4(11)>
  # g_6 = PHI <g_32(5), g_42(11)>
  # DEBUG g => g_6
  # DEBUG f => f_5
  D.45439_21 = smh_20(D)->mparams;
  D.45440_22 = D.45439_21->num_codecs;
  D.45441_23 = D.45440_22 > g_6;
  D.45442_25 = g_6 < total_codecs_24(D);
  D.45443_26 = D.45441_23 && D.45442_25;
  if (D.45443_26 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;

<bb 13>:
  return;

}



;; Function clear_pmaps (clear_pmaps)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 3 6 }
;; 6 succs { 1 }
Marking useful stmt: # DEBUG pmap => pmap_3

Marking useful stmt: pmap_1->negotiated = 0;

Marking useful stmt: pmap_1->current = 0;

Marking useful stmt: # DEBUG pmap => pmap_5

Marking useful stmt: # DEBUG pmap => pmap_1

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41160_4)
(get_scalar_evolution 
  (scalar = D.41160_4)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41160_4)
(get_scalar_evolution 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.41160_4)
  (scalar_evolution = D.41160_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_3(2), pmap_5(3)>
)
  (init_cond = pmap_3))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_3(2), pmap_5(3)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.41160_4 != 0)


Processing worklist:
processing: if (D.41160_4 != 0)

Marking useful stmt: if (pmap_1 != 0B)

marking necessary through D.41160_4 stmt D.41160_4 = pmap_1->allocated;
processing: D.41160_4 = pmap_1->allocated;

marking necessary through pmap_1 stmt pmap_1 = PHI <pmap_3(2), pmap_5(3)>
processing: pmap_1 = PHI <pmap_3(2), pmap_5(3)>

marking necessary through pmap_3 stmt pmap_3 = engine_2(D)->payload_map;
marking necessary through pmap_5 stmt pmap_5 = pmap_1->next;
processing: pmap_5 = pmap_1->next;

processing: pmap_3 = engine_2(D)->payload_map;

processing: if (pmap_1 != 0B)

processing: return;

processing: pmap_1->current = 0;

processing: pmap_1->negotiated = 0;


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 2 PHI nodes (0%)
clear_pmaps (struct switch_rtp_engine_t * engine)
{
  struct payload_map_t * pmap;
  uint8_t D.41160;

<bb 2>:
  pmap_3 = engine_2(D)->payload_map;
  # DEBUG pmap => pmap_3
  goto <bb 4>;

<bb 3>:
  pmap_1->negotiated = 0;
  pmap_1->current = 0;
  pmap_5 = pmap_1->next;
  # DEBUG pmap => pmap_5

<bb 4>:
  # pmap_1 = PHI <pmap_3(2), pmap_5(3)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.41160_4 = pmap_1->allocated;
  if (D.41160_4 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;

<bb 6>:
  return;

}



;; Function dtls_ok (dtls_ok)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: D.42521_3 = switch_channel_test_flag (D.42520_2, 111);

Marking useful stmt: return D.42519_4;


Processing worklist:
processing: return D.42519_4;

marking necessary through D.42519_4 stmt D.42519_4 = (int) D.42521_3;
processing: D.42519_4 = (int) D.42521_3;

processing: D.42521_3 = switch_channel_test_flag (D.42520_2, 111);

marking necessary through D.42520_2 stmt D.42520_2 = session_1(D)->channel;
processing: D.42520_2 = session_1(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
dtls_ok (struct switch_core_session_t * session)
{
  uint32_t D.42521;
  struct switch_channel_t * D.42520;
  int D.42519;

<bb 2>:
  D.42520_2 = session_1(D)->channel;
  D.42521_3 = switch_channel_test_flag (D.42520_2, 111);
  D.42519_4 = (int) D.42521_3;
  return D.42519_4;

}



;; Function get_media_profile_name (get_media_profile_name)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 7 }
;; 5 succs { 9 6 }
;; 6 succs { 9 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);

Marking useful stmt: D.42968_4 = switch_channel_test_flag (D.42967_3, 106);

Marking useful stmt: D.42971_6 = switch_channel_test_flag (D.42967_5, 107);

Marking useful stmt: return D.42974_1;


Processing worklist:
processing: return D.42974_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.42974_1 stmt D.42974_1 = PHI <"UDP/TLS/RTP/SAVPF"(5), "RTP/SAVPF"(6), "RTP/SAVP"(7), "RTP/AVP"(8)>
processing: D.42974_1 = PHI <"UDP/TLS/RTP/SAVPF"(5), "RTP/SAVPF"(6), "RTP/SAVP"(7), "RTP/AVP"(8)>

Marking useful stmt: if (D.42968_4 != 0)

Marking useful stmt: if (D.42971_6 != 0)

Marking useful stmt: if (secure_9(D) != 0)

processing: if (secure_9(D) != 0)

processing: if (D.42971_6 != 0)

processing: if (D.42968_4 != 0)

processing: if (session_2(D) == 0B)

processing: D.42971_6 = switch_channel_test_flag (D.42967_5, 107);

marking necessary through D.42967_5 stmt D.42967_5 = session_2(D)->channel;
processing: D.42967_5 = session_2(D)->channel;

processing: D.42968_4 = switch_channel_test_flag (D.42967_3, 106);

marking necessary through D.42967_3 stmt D.42967_3 = session_2(D)->channel;
processing: D.42967_3 = session_2(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 10 statements (0%)
Removed 0 of 1 PHI nodes (0%)
get_media_profile_name (struct switch_core_session_t * session, int secure)
{
  static const char __PRETTY_FUNCTION__[23] = "get_media_profile_name";
  const char * D.42974;
  uint32_t D.42971;
  uint32_t D.42968;
  struct switch_channel_t * D.42967;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);

<bb 4>:
  D.42967_3 = session_2(D)->channel;
  D.42968_4 = switch_channel_test_flag (D.42967_3, 106);
  if (D.42968_4 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  D.42967_5 = session_2(D)->channel;
  D.42971_6 = switch_channel_test_flag (D.42967_5, 107);
  if (D.42971_6 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;

<bb 6>:
  goto <bb 9>;

<bb 7>:
  if (secure_9(D) != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

<bb 8>:

<bb 9>:
  # D.42974_1 = PHI <"UDP/TLS/RTP/SAVPF"(5), "RTP/SAVPF"(6), "RTP/SAVP"(7), "RTP/AVP"(8)>
  return D.42974_1;

}



;; Function switch_core_media_find_zrtp_hash (switch_core_media_find_zrtp_hash)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 1
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 5 7 21 23 8 22 13 16 14 15 12 9 10 11 6 18 19 20 17 4
;;
;; Loop 2
;;  header 23, latch 22
;;  depth 2, outer 1
;;  nodes: 23 22 13 16 14 15 12 9 10 11
;; 2 succs { 26 3 }
;; 3 succs { 25 }
;; 4 succs { 26 5 }
;; 5 succs { 6 24 }
;; 6 succs { 8 7 }
;; 7 succs { 8 24 }
;; 8 succs { 23 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 22 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 19 }
;; 18 succs { 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 24 }
;; 22 succs { 23 }
;; 23 succs { 9 24 }
;; 24 succs { 25 }
;; 25 succs { 4 26 }
;; 26 succs { 1 }
Marking useful stmt: channel_10 = switch_core_session_get_channel (session_9(D));

Marking useful stmt: # DEBUG channel => channel_10

Marking useful stmt: # DEBUG got_audio => 0

Marking useful stmt: # DEBUG got_video => 0

Marking useful stmt: # DEBUG D#1 => &D.40619_14->engines

Marking useful stmt: # DEBUG audio_engine => D#1

Marking useful stmt: # DEBUG D#2 => &D.40619_16->engines[1]

Marking useful stmt: # DEBUG video_engine => D#2

Marking useful stmt: D.40622_18 = switch_channel_get_session (channel_10);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");

Marking useful stmt: # DEBUG m => m_20

Marking useful stmt: # DEBUG attr => attr_33

Marking useful stmt: # DEBUG s => D.40639_34

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.40650_40 = switch_channel_get_session (channel_10);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);

Marking useful stmt: switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);

Marking useful stmt: D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;

Marking useful stmt: # DEBUG got_audio => got_audio_45

Marking useful stmt: D.40655_47 = switch_channel_get_session (channel_10);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);

Marking useful stmt: switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);

Marking useful stmt: D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;

Marking useful stmt: # DEBUG got_video => got_video_52

Marking useful stmt: # DEBUG got_video => got_video_6

Marking useful stmt: # DEBUG got_audio => got_audio_3

Marking useful stmt: switch_channel_set_flag_value (channel_10, 75, 1);

Marking useful stmt: # DEBUG attr => attr_53

Marking useful stmt: # DEBUG attr => attr_2

Marking useful stmt: # DEBUG got_video => got_video_7

Marking useful stmt: # DEBUG got_audio => got_audio_4

Marking useful stmt: # DEBUG m => m_54

Marking useful stmt: # DEBUG got_video => got_video_8

Marking useful stmt: # DEBUG got_audio => got_audio_5

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_20(3), m_54(24)>
)
  (init_cond = m_20))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_20(3), m_54(24)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 3 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 3 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.40625_23 != 0)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_33(8), attr_53(22)>
)
  (init_cond = attr_33))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_33(8), attr_53(22)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.47248_74 != 0)

Marking useful stmt: if (D.40645_37 != 0)

Marking useful stmt: if (D.40647_38 == 0B)


Processing worklist:
processing: if (D.40647_38 == 0B)

marking necessary through D.40647_38 stmt D.40647_38 = attr_2->a_value;
processing: D.40647_38 = attr_2->a_value;

marking necessary through attr_2 stmt attr_2 = PHI <attr_33(8), attr_53(22)>
processing: attr_2 = PHI <attr_33(8), attr_53(22)>

Marking useful stmt: if (D.40634_28 != 0)

Marking useful stmt: if (D.40638_32 != 0)

marking necessary through attr_33 stmt attr_33 = m_1->m_attributes;
marking necessary through attr_53 stmt attr_53 = attr_2->a_next;
processing: attr_53 = attr_2->a_next;

processing: attr_33 = m_1->m_attributes;

marking necessary through m_1 stmt m_1 = PHI <m_20(3), m_54(24)>
processing: m_1 = PHI <m_20(3), m_54(24)>

Marking useful stmt: if (D.40619_13 == 0B)

marking necessary through m_20 stmt m_20 = sdp_19(D)->sdp_media;
marking necessary through m_54 stmt m_54 = m_1->m_next;
processing: m_54 = m_1->m_next;

processing: m_20 = sdp_19(D)->sdp_media;

processing: if (D.40619_13 == 0B)

marking necessary through D.40619_13 stmt D.40619_13 = session_9(D)->media_handle;
processing: D.40619_13 = session_9(D)->media_handle;

processing: if (D.40638_32 != 0)

marking necessary through D.40638_32 stmt D.40638_32 = D.40636_30 && D.40637_31;
processing: D.40638_32 = D.40636_30 && D.40637_31;

marking necessary through D.40636_30 stmt D.40636_30 = D.40631_29 == 3;
marking necessary through D.40637_31 stmt D.40637_31 = got_video_8 == 0;
processing: D.40637_31 = got_video_8 == 0;

marking necessary through got_video_8 stmt got_video_8 = PHI <0(3), got_video_7(24)>
processing: got_video_8 = PHI <0(3), got_video_7(24)>

marking necessary through got_video_7 stmt got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>
processing: got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>

marking necessary through got_video_6 stmt got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>
processing: got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>

marking necessary through got_video_52 stmt got_video_52 = got_video_8 + 1;
Marking useful stmt: if (D.40631_39 == 2)

Marking useful stmt: if (D.40631_46 == 3)

processing: if (D.40631_46 == 3)

marking necessary through D.40631_46 stmt D.40631_46 = m_1->m_type;
processing: D.40631_46 = m_1->m_type;

processing: if (D.40631_39 == 2)

marking necessary through D.40631_39 stmt D.40631_39 = m_1->m_type;
processing: D.40631_39 = m_1->m_type;

processing: got_video_52 = got_video_8 + 1;

processing: D.40636_30 = D.40631_29 == 3;

marking necessary through D.40631_29 stmt D.40631_29 = m_1->m_type;
processing: D.40631_29 = m_1->m_type;

processing: if (D.40634_28 != 0)

Marking useful stmt: if (D.40628_24 != 0)

marking necessary through D.40634_28 stmt D.40634_28 = D.40632_26 && D.40633_27;
processing: D.40634_28 = D.40632_26 && D.40633_27;

marking necessary through D.40632_26 stmt D.40632_26 = D.40631_25 == 2;
marking necessary through D.40633_27 stmt D.40633_27 = got_audio_5 == 0;
processing: D.40633_27 = got_audio_5 == 0;

marking necessary through got_audio_5 stmt got_audio_5 = PHI <0(3), got_audio_4(24)>
processing: got_audio_5 = PHI <0(3), got_audio_4(24)>

marking necessary through got_audio_4 stmt got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>
processing: got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>

marking necessary through got_audio_3 stmt got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>
processing: got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>

marking necessary through got_audio_45 stmt got_audio_45 = got_audio_5 + 1;
processing: got_audio_45 = got_audio_5 + 1;

processing: D.40632_26 = D.40631_25 == 2;

marking necessary through D.40631_25 stmt D.40631_25 = m_1->m_type;
processing: D.40631_25 = m_1->m_type;

processing: if (D.40628_24 != 0)

marking necessary through D.40628_24 stmt D.40628_24 = m_1->m_port;
processing: D.40628_24 = m_1->m_port;

processing: if (D.40645_37 != 0)

marking necessary through D.40645_37 stmt D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
processing: D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");

marking necessary through D.40639_36 stmt D.40639_36 = attr_2->a_name;
processing: D.40639_36 = attr_2->a_name;

processing: if (D.47248_74 != 0)

Marking useful stmt: if (attr_2 != 0B)

marking necessary through D.47248_74 stmt D.47248_74 = PHI <1(9), 1(10), 0(11)>
processing: D.47248_74 = PHI <1(9), 1(10), 0(11)>

Marking useful stmt: if (D.40639_34 == 0B)

Marking useful stmt: if (D.47249_73 == 0)

processing: if (D.47249_73 == 0)

marking necessary through D.47249_73 stmt D.47249_73 = *D.40639_34;
processing: D.47249_73 = *D.40639_34;

marking necessary through D.40639_34 stmt D.40639_34 = attr_2->a_name;
processing: D.40639_34 = attr_2->a_name;

processing: if (D.40639_34 == 0B)

processing: if (attr_2 != 0B)

processing: if (D.40625_23 != 0)

Marking useful stmt: if (m_1 != 0B)

marking necessary through D.40625_23 stmt D.40625_23 = D.40623_21 && D.40624_22;
processing: D.40625_23 = D.40623_21 && D.40624_22;

marking necessary through D.40623_21 stmt D.40623_21 = got_audio_5 != 0;
marking necessary through D.40624_22 stmt D.40624_22 = got_video_8 != 0;
processing: D.40624_22 = got_video_8 != 0;

processing: D.40623_21 = got_audio_5 != 0;

processing: if (m_1 != 0B)

processing: return;

processing: switch_channel_set_flag_value (channel_10, 75, 1);

processing: MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;

marking necessary through D.40619_16 stmt D.40619_16 = session_9(D)->media_handle;
processing: D.40619_16 = session_9(D)->media_handle;

processing: D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);

marking necessary through D.40647_50 stmt D.40647_50 = attr_2->a_value;
processing: D.40647_50 = attr_2->a_value;

processing: switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);

marking necessary through D.40647_49 stmt D.40647_49 = attr_2->a_value;
processing: D.40647_49 = attr_2->a_value;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);

marking necessary through D.40647_48 stmt D.40647_48 = attr_2->a_value;
processing: D.40647_48 = attr_2->a_value;

processing: D.40655_47 = switch_channel_get_session (channel_10);

processing: MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;

marking necessary through D.40619_14 stmt D.40619_14 = session_9(D)->media_handle;
processing: D.40619_14 = session_9(D)->media_handle;

processing: D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);

marking necessary through D.40647_43 stmt D.40647_43 = attr_2->a_value;
processing: D.40647_43 = attr_2->a_value;

processing: switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);

marking necessary through D.40647_42 stmt D.40647_42 = attr_2->a_value;
processing: D.40647_42 = attr_2->a_value;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);

marking necessary through D.40647_41 stmt D.40647_41 = attr_2->a_value;
processing: D.40647_41 = attr_2->a_value;

processing: D.40650_40 = switch_channel_get_session (channel_10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");

processing: D.40622_18 = switch_channel_get_session (channel_10);

processing: channel_10 = switch_core_session_get_channel (session_9(D));


Eliminating unnecessary statements:
Removed 0 of 87 statements (0%)
Removed 0 of 12 PHI nodes (0%)
switch_core_media_find_zrtp_hash (struct switch_core_session_t * session, struct sdp_session_t * sdp)
{
  const char D.47249;
  int D.47248;
  static const char __func__[33] = "switch_core_media_find_zrtp_hash";
  int got_video;
  int got_audio;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  struct switch_channel_t * channel;
  char * D.40656;
  struct switch_core_session_t * D.40655;
  char * D.40651;
  struct switch_core_session_t * D.40650;
  const char * D.40647;
  int D.40645;
  const char * D.40639;
  _Bool D.40638;
  _Bool D.40637;
  _Bool D.40636;
  _Bool D.40634;
  _Bool D.40633;
  _Bool D.40632;
  sdp_media_e D.40631;
  long unsigned int D.40628;
  _Bool D.40625;
  _Bool D.40624;
  _Bool D.40623;
  struct switch_core_session_t * D.40622;
  struct switch_media_handle_t * D.40619;

<bb 2>:
  channel_10 = switch_core_session_get_channel (session_9(D));
  # DEBUG channel => channel_10
  # DEBUG got_audio => 0
  # DEBUG got_video => 0
  D.40619_13 = session_9(D)->media_handle;
  if (D.40619_13 == 0B)
    goto <bb 26>;
  else
    goto <bb 3>;

<bb 3>:
  D.40619_14 = session_9(D)->media_handle;
  # DEBUG D#1 => &D.40619_14->engines
  # DEBUG audio_engine => D#1
  D.40619_16 = session_9(D)->media_handle;
  # DEBUG D#2 => &D.40619_16->engines[1]
  # DEBUG video_engine => D#2
  D.40622_18 = switch_channel_get_session (channel_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");
  m_20 = sdp_19(D)->sdp_media;
  # DEBUG m => m_20
  goto <bb 25>;

<bb 4>:
  D.40623_21 = got_audio_5 != 0;
  D.40624_22 = got_video_8 != 0;
  D.40625_23 = D.40623_21 && D.40624_22;
  if (D.40625_23 != 0)
    goto <bb 26>;
  else
    goto <bb 5>;

<bb 5>:
  D.40628_24 = m_1->m_port;
  if (D.40628_24 != 0)
    goto <bb 6>;
  else
    goto <bb 24>;

<bb 6>:
  D.40631_25 = m_1->m_type;
  D.40632_26 = D.40631_25 == 2;
  D.40633_27 = got_audio_5 == 0;
  D.40634_28 = D.40632_26 && D.40633_27;
  if (D.40634_28 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:
  D.40631_29 = m_1->m_type;
  D.40636_30 = D.40631_29 == 3;
  D.40637_31 = got_video_8 == 0;
  D.40638_32 = D.40636_30 && D.40637_31;
  if (D.40638_32 != 0)
    goto <bb 8>;
  else
    goto <bb 24>;

<bb 8>:
  attr_33 = m_1->m_attributes;
  # DEBUG attr => attr_33
  goto <bb 23>;

<bb 9>:
  D.40639_34 = attr_2->a_name;
  # DEBUG s => D.40639_34
  if (D.40639_34 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47249_73 = *D.40639_34;
  if (D.47249_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.47248_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47248_74 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 22>;

<bb 14>:
  D.40639_36 = attr_2->a_name;
  D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
  if (D.40645_37 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;

<bb 15>:
  D.40647_38 = attr_2->a_value;
  if (D.40647_38 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  // predicted unlikely by continue predictor.
  goto <bb 22>;

<bb 17>:
  D.40631_39 = m_1->m_type;
  if (D.40631_39 == 2)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.40650_40 = switch_channel_get_session (channel_10);
  D.40647_41 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);
  D.40647_42 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);
  D.40647_43 = attr_2->a_value;
  D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);
  MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;
  got_audio_45 = got_audio_5 + 1;
  # DEBUG got_audio => got_audio_45
  goto <bb 21>;

<bb 19>:
  D.40631_46 = m_1->m_type;
  if (D.40631_46 == 3)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40655_47 = switch_channel_get_session (channel_10);
  D.40647_48 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);
  D.40647_49 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);
  D.40647_50 = attr_2->a_value;
  D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);
  MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;
  got_video_52 = got_video_8 + 1;
  # DEBUG got_video => got_video_52

<bb 21>:
  # got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>
  # got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>
  # DEBUG got_video => got_video_6
  # DEBUG got_audio => got_audio_3
  switch_channel_set_flag_value (channel_10, 75, 1);
  goto <bb 24>;

<bb 22>:
  attr_53 = attr_2->a_next;
  # DEBUG attr => attr_53

<bb 23>:
  # attr_2 = PHI <attr_33(8), attr_53(22)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 24>;

<bb 24>:
  # got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>
  # got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>
  # DEBUG got_video => got_video_7
  # DEBUG got_audio => got_audio_4
  m_54 = m_1->m_next;
  # DEBUG m => m_54

<bb 25>:
  # m_1 = PHI <m_20(3), m_54(24)>
  # got_audio_5 = PHI <0(3), got_audio_4(24)>
  # got_video_8 = PHI <0(3), got_video_7(24)>
  # DEBUG got_video => got_video_8
  # DEBUG got_audio => got_audio_5
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 4>;
  else
    goto <bb 26>;

<bb 26>:
  return;

}



;; Function _switch_core_media_pass_zrtp_hash2 (_switch_core_media_pass_zrtp_hash2)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 10 3 }
;; 3 succs { 10 4 }
;; 4 succs { 5 6 }
;; 5 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
Marking useful stmt: # DEBUG aleg_engine => aleg_engine_9

Marking useful stmt: # DEBUG bleg_engine => bleg_engine_13

Marking useful stmt: D.47182_15 = switch_channel_get_session (D.47181_14);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47182_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");

Marking useful stmt: D.47183_17 = switch_channel_test_flag (D.47181_16, 73);

Marking useful stmt: D.47186_19 = switch_channel_get_session (D.47181_18);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47186_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");

Marking useful stmt: D.47190_22 = switch_channel_get_session (D.47181_21);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47190_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");

Marking useful stmt: D.47191_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47187_23, "src/switch_core_media.c", &__func__, 266);

Marking useful stmt: bleg_engine_13->local_sdp_zrtp_hash = D.47191_24;

Marking useful stmt: switch_channel_set_variable_var_check (D.47192_25, "l_sdp_audio_zrtp_hash", D.47193_26, 1);

Marking useful stmt: D.47197_29 = switch_channel_get_session (D.47181_28);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47197_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");

Marking useful stmt: D.47198_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47194_30, "src/switch_core_media.c", &__func__, 272);

Marking useful stmt: aleg_engine_9->local_sdp_zrtp_hash = D.47198_31;

Marking useful stmt: switch_channel_set_variable_var_check (D.47181_32, "l_sdp_audio_zrtp_hash", D.47199_33, 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_channel_set_variable_var_check (D.47181_32, "l_sdp_audio_zrtp_hash", D.47199_33, 1);

Marking useful stmt: if (D.47194_27 != 0B)

marking necessary through D.47181_32 stmt D.47181_32 = aleg_session_1(D)->channel;
marking necessary through D.47199_33 stmt D.47199_33 = aleg_engine_9->local_sdp_zrtp_hash;
processing: D.47199_33 = aleg_engine_9->local_sdp_zrtp_hash;

marking necessary through aleg_engine_9 stmt aleg_engine_9 = &D.47175_5->engines[type_7(D)]{lb: 0 sz: 11416};
processing: aleg_engine_9 = &D.47175_5->engines[type_7(D)]{lb: 0 sz: 11416};

Marking useful stmt: if (D.47177_4 == 0B)

marking necessary through D.47175_5 stmt D.47175_5 = aleg_session_1(D)->media_handle;
processing: D.47175_5 = aleg_session_1(D)->media_handle;

processing: if (D.47177_4 == 0B)

Marking useful stmt: if (D.47175_2 == 0B)

marking necessary through D.47177_4 stmt D.47177_4 = bleg_session_3(D)->media_handle;
processing: D.47177_4 = bleg_session_3(D)->media_handle;

processing: if (D.47175_2 == 0B)

marking necessary through D.47175_2 stmt D.47175_2 = aleg_session_1(D)->media_handle;
processing: D.47175_2 = aleg_session_1(D)->media_handle;

processing: D.47181_32 = aleg_session_1(D)->channel;

processing: if (D.47194_27 != 0B)

Marking useful stmt: if (D.47183_17 == 0)

marking necessary through D.47194_27 stmt D.47194_27 = bleg_engine_13->remote_sdp_zrtp_hash;
processing: D.47194_27 = bleg_engine_13->remote_sdp_zrtp_hash;

marking necessary through bleg_engine_13 stmt bleg_engine_13 = &D.47177_10->engines[type_7(D)]{lb: 0 sz: 11416};
processing: bleg_engine_13 = &D.47177_10->engines[type_7(D)]{lb: 0 sz: 11416};

marking necessary through D.47177_10 stmt D.47177_10 = bleg_session_3(D)->media_handle;
processing: D.47177_10 = bleg_session_3(D)->media_handle;

processing: if (D.47183_17 == 0)

processing: aleg_engine_9->local_sdp_zrtp_hash = D.47198_31;

processing: D.47198_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47194_30, "src/switch_core_media.c", &__func__, 272);

marking necessary through D.47194_30 stmt D.47194_30 = bleg_engine_13->remote_sdp_zrtp_hash;
processing: D.47194_30 = bleg_engine_13->remote_sdp_zrtp_hash;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47197_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");

processing: D.47197_29 = switch_channel_get_session (D.47181_28);

marking necessary through D.47181_28 stmt D.47181_28 = aleg_session_1(D)->channel;
processing: D.47181_28 = aleg_session_1(D)->channel;

processing: switch_channel_set_variable_var_check (D.47192_25, "l_sdp_audio_zrtp_hash", D.47193_26, 1);

Marking useful stmt: if (D.47187_20 != 0B)

marking necessary through D.47192_25 stmt D.47192_25 = bleg_session_3(D)->channel;
marking necessary through D.47193_26 stmt D.47193_26 = bleg_engine_13->local_sdp_zrtp_hash;
processing: D.47193_26 = bleg_engine_13->local_sdp_zrtp_hash;

processing: D.47192_25 = bleg_session_3(D)->channel;

processing: if (D.47187_20 != 0B)

marking necessary through D.47187_20 stmt D.47187_20 = aleg_engine_9->remote_sdp_zrtp_hash;
processing: D.47187_20 = aleg_engine_9->remote_sdp_zrtp_hash;

processing: bleg_engine_13->local_sdp_zrtp_hash = D.47191_24;

processing: D.47191_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47187_23, "src/switch_core_media.c", &__func__, 266);

marking necessary through D.47187_23 stmt D.47187_23 = aleg_engine_9->remote_sdp_zrtp_hash;
processing: D.47187_23 = aleg_engine_9->remote_sdp_zrtp_hash;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47190_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");

processing: D.47190_22 = switch_channel_get_session (D.47181_21);

marking necessary through D.47181_21 stmt D.47181_21 = aleg_session_1(D)->channel;
processing: D.47181_21 = aleg_session_1(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47186_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");

processing: D.47186_19 = switch_channel_get_session (D.47181_18);

marking necessary through D.47181_18 stmt D.47181_18 = aleg_session_1(D)->channel;
processing: D.47181_18 = aleg_session_1(D)->channel;

processing: D.47183_17 = switch_channel_test_flag (D.47181_16, 73);

marking necessary through D.47181_16 stmt D.47181_16 = aleg_session_1(D)->channel;
processing: D.47181_16 = aleg_session_1(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47182_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");

processing: D.47182_15 = switch_channel_get_session (D.47181_14);

marking necessary through D.47181_14 stmt D.47181_14 = aleg_session_1(D)->channel;
processing: D.47181_14 = aleg_session_1(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 42 statements (0%)
Removed 0 of 1 PHI nodes (0%)
_switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session, switch_media_type_t type)
{
  static const char __func__[35] = "_switch_core_media_pass_zrtp_hash2";
  struct switch_rtp_engine_t * bleg_engine;
  struct switch_rtp_engine_t * aleg_engine;
  char * D.47199;
  char * D.47198;
  struct switch_core_session_t * D.47197;
  char * D.47194;
  char * D.47193;
  struct switch_channel_t * D.47192;
  char * D.47191;
  struct switch_core_session_t * D.47190;
  char * D.47187;
  struct switch_core_session_t * D.47186;
  uint32_t D.47183;
  struct switch_core_session_t * D.47182;
  struct switch_channel_t * D.47181;
  unsigned int D.47179;
  struct switch_media_handle_t * D.47177;
  struct switch_media_handle_t * D.47175;

<bb 2>:
  D.47175_2 = aleg_session_1(D)->media_handle;
  if (D.47175_2 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;

<bb 3>:
  D.47177_4 = bleg_session_3(D)->media_handle;
  if (D.47177_4 == 0B)
    goto <bb 10>;
  else
    goto <bb 4>;

<bb 4>:
  D.47175_5 = aleg_session_1(D)->media_handle;
  aleg_engine_9 = &D.47175_5->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG aleg_engine => aleg_engine_9
  D.47177_10 = bleg_session_3(D)->media_handle;
  bleg_engine_13 = &D.47177_10->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG bleg_engine => bleg_engine_13
  D.47181_14 = aleg_session_1(D)->channel;
  D.47182_15 = switch_channel_get_session (D.47181_14);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47182_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");
  D.47181_16 = aleg_session_1(D)->channel;
  D.47183_17 = switch_channel_test_flag (D.47181_16, 73);
  if (D.47183_17 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47181_18 = aleg_session_1(D)->channel;
  D.47186_19 = switch_channel_get_session (D.47181_18);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47186_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");
  goto <bb 10>;

<bb 6>:
  D.47187_20 = aleg_engine_9->remote_sdp_zrtp_hash;
  if (D.47187_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.47181_21 = aleg_session_1(D)->channel;
  D.47190_22 = switch_channel_get_session (D.47181_21);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47190_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");
  D.47187_23 = aleg_engine_9->remote_sdp_zrtp_hash;
  D.47191_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47187_23, "src/switch_core_media.c", &__func__, 266);
  bleg_engine_13->local_sdp_zrtp_hash = D.47191_24;
  D.47192_25 = bleg_session_3(D)->channel;
  D.47193_26 = bleg_engine_13->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47192_25, "l_sdp_audio_zrtp_hash", D.47193_26, 1);

<bb 8>:
  D.47194_27 = bleg_engine_13->remote_sdp_zrtp_hash;
  if (D.47194_27 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.47181_28 = aleg_session_1(D)->channel;
  D.47197_29 = switch_channel_get_session (D.47181_28);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47197_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");
  D.47194_30 = bleg_engine_13->remote_sdp_zrtp_hash;
  D.47198_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47194_30, "src/switch_core_media.c", &__func__, 272);
  aleg_engine_9->local_sdp_zrtp_hash = D.47198_31;
  D.47181_32 = aleg_session_1(D)->channel;
  D.47199_33 = aleg_engine_9->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47181_32, "l_sdp_audio_zrtp_hash", D.47199_33, 1);

<bb 10>:
  return;

}



;; Function switch_true (switch_true)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 12 }
;; 3 succs { 13 4 }
;; 4 succs { 13 5 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Marking useful stmt: D.40615_10 = switch_is_number (expr_2(D));

Marking useful stmt: # DEBUG __nptr => expr_2(D)

Marking useful stmt: D.47254_17 = strtol (expr_2(D), 0B, 10);

Marking useful stmt: return D.40595_1;


Processing worklist:
processing: return D.40595_1;

marking necessary through D.40595_1 stmt D.40595_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
processing: D.40595_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>

Marking useful stmt: if (D.40601_3 == 0)

Marking useful stmt: if (expr_2(D) != 0B)

Marking useful stmt: if (D.40615_10 != 0)

Marking useful stmt: if (D.47254_17 != 0)

Marking useful stmt: if (D.40611_8 == 0)

Marking useful stmt: if (D.40609_7 == 0)

Marking useful stmt: if (D.40607_6 == 0)

Marking useful stmt: if (D.40605_5 == 0)

Marking useful stmt: if (D.40603_4 == 0)

processing: if (D.40603_4 == 0)

marking necessary through D.40603_4 stmt D.40603_4 = strcasecmp (expr_2(D), "on");
processing: D.40603_4 = strcasecmp (expr_2(D), "on");

processing: if (D.40605_5 == 0)

marking necessary through D.40605_5 stmt D.40605_5 = strcasecmp (expr_2(D), "true");
processing: D.40605_5 = strcasecmp (expr_2(D), "true");

processing: if (D.40607_6 == 0)

marking necessary through D.40607_6 stmt D.40607_6 = strcasecmp (expr_2(D), "t");
processing: D.40607_6 = strcasecmp (expr_2(D), "t");

processing: if (D.40609_7 == 0)

marking necessary through D.40609_7 stmt D.40609_7 = strcasecmp (expr_2(D), "enabled");
processing: D.40609_7 = strcasecmp (expr_2(D), "enabled");

processing: if (D.40611_8 == 0)

marking necessary through D.40611_8 stmt D.40611_8 = strcasecmp (expr_2(D), "active");
processing: D.40611_8 = strcasecmp (expr_2(D), "active");

processing: if (D.47254_17 != 0)

processing: if (D.40615_10 != 0)

Marking useful stmt: if (D.40613_9 == 0)

processing: if (D.40613_9 == 0)

marking necessary through D.40613_9 stmt D.40613_9 = strcasecmp (expr_2(D), "allow");
processing: D.40613_9 = strcasecmp (expr_2(D), "allow");

processing: if (expr_2(D) != 0B)

processing: if (D.40601_3 == 0)

marking necessary through D.40601_3 stmt D.40601_3 = strcasecmp (expr_2(D), "yes");
processing: D.40601_3 = strcasecmp (expr_2(D), "yes");

processing: D.47254_17 = strtol (expr_2(D), 0B, 10);

processing: D.40615_10 = switch_is_number (expr_2(D));


Eliminating unnecessary statements:
Removed 0 of 21 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_true (const char * expr)
{
  int D.47254;
  switch_bool_t D.40615;
  int D.40613;
  int D.40611;
  int D.40609;
  int D.40607;
  int D.40605;
  int D.40603;
  int D.40601;
  int D.40595;

<bb 2>:
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;

<bb 3>:
  D.40601_3 = strcasecmp (expr_2(D), "yes");
  if (D.40601_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;

<bb 4>:
  D.40603_4 = strcasecmp (expr_2(D), "on");
  if (D.40603_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;

<bb 5>:
  D.40605_5 = strcasecmp (expr_2(D), "true");
  if (D.40605_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;

<bb 6>:
  D.40607_6 = strcasecmp (expr_2(D), "t");
  if (D.40607_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;

<bb 7>:
  D.40609_7 = strcasecmp (expr_2(D), "enabled");
  if (D.40609_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;

<bb 8>:
  D.40611_8 = strcasecmp (expr_2(D), "active");
  if (D.40611_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;

<bb 9>:
  D.40613_9 = strcasecmp (expr_2(D), "allow");
  if (D.40613_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;

<bb 10>:
  D.40615_10 = switch_is_number (expr_2(D));
  if (D.40615_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  # DEBUG __nptr => expr_2(D)
  D.47254_17 = strtol (expr_2(D), 0B, 10);
  if (D.47254_17 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # D.40595_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.40595_1;

}



;; Function switch_false (switch_false)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 12 }
;; 3 succs { 13 4 }
;; 4 succs { 13 5 }
;; 5 succs { 13 6 }
;; 6 succs { 13 7 }
;; 7 succs { 13 8 }
;; 8 succs { 13 9 }
;; 9 succs { 13 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Marking useful stmt: D.41155_10 = switch_is_number (expr_2(D));

Marking useful stmt: # DEBUG __nptr => expr_2(D)

Marking useful stmt: D.47258_17 = strtol (expr_2(D), 0B, 10);

Marking useful stmt: return D.41135_1;


Processing worklist:
processing: return D.41135_1;

marking necessary through D.41135_1 stmt D.41135_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
processing: D.41135_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>

Marking useful stmt: if (D.41141_3 == 0)

Marking useful stmt: if (expr_2(D) != 0B)

Marking useful stmt: if (D.41155_10 != 0)

Marking useful stmt: if (D.47258_17 == 0)

Marking useful stmt: if (D.41151_8 == 0)

Marking useful stmt: if (D.41149_7 == 0)

Marking useful stmt: if (D.41147_6 == 0)

Marking useful stmt: if (D.41145_5 == 0)

Marking useful stmt: if (D.41143_4 == 0)

processing: if (D.41143_4 == 0)

marking necessary through D.41143_4 stmt D.41143_4 = strcasecmp (expr_2(D), "off");
processing: D.41143_4 = strcasecmp (expr_2(D), "off");

processing: if (D.41145_5 == 0)

marking necessary through D.41145_5 stmt D.41145_5 = strcasecmp (expr_2(D), "false");
processing: D.41145_5 = strcasecmp (expr_2(D), "false");

processing: if (D.41147_6 == 0)

marking necessary through D.41147_6 stmt D.41147_6 = strcasecmp (expr_2(D), "f");
processing: D.41147_6 = strcasecmp (expr_2(D), "f");

processing: if (D.41149_7 == 0)

marking necessary through D.41149_7 stmt D.41149_7 = strcasecmp (expr_2(D), "disabled");
processing: D.41149_7 = strcasecmp (expr_2(D), "disabled");

processing: if (D.41151_8 == 0)

marking necessary through D.41151_8 stmt D.41151_8 = strcasecmp (expr_2(D), "inactive");
processing: D.41151_8 = strcasecmp (expr_2(D), "inactive");

processing: if (D.47258_17 == 0)

processing: if (D.41155_10 != 0)

Marking useful stmt: if (D.41153_9 == 0)

processing: if (D.41153_9 == 0)

marking necessary through D.41153_9 stmt D.41153_9 = strcasecmp (expr_2(D), "disallow");
processing: D.41153_9 = strcasecmp (expr_2(D), "disallow");

processing: if (expr_2(D) != 0B)

processing: if (D.41141_3 == 0)

marking necessary through D.41141_3 stmt D.41141_3 = strcasecmp (expr_2(D), "no");
processing: D.41141_3 = strcasecmp (expr_2(D), "no");

processing: D.47258_17 = strtol (expr_2(D), 0B, 10);

processing: D.41155_10 = switch_is_number (expr_2(D));


Eliminating unnecessary statements:
Removed 0 of 21 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_false (const char * expr)
{
  int D.47258;
  switch_bool_t D.41155;
  int D.41153;
  int D.41151;
  int D.41149;
  int D.41147;
  int D.41145;
  int D.41143;
  int D.41141;
  int D.41135;

<bb 2>:
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;

<bb 3>:
  D.41141_3 = strcasecmp (expr_2(D), "no");
  if (D.41141_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;

<bb 4>:
  D.41143_4 = strcasecmp (expr_2(D), "off");
  if (D.41143_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;

<bb 5>:
  D.41145_5 = strcasecmp (expr_2(D), "false");
  if (D.41145_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;

<bb 6>:
  D.41147_6 = strcasecmp (expr_2(D), "f");
  if (D.41147_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;

<bb 7>:
  D.41149_7 = strcasecmp (expr_2(D), "disabled");
  if (D.41149_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;

<bb 8>:
  D.41151_8 = strcasecmp (expr_2(D), "inactive");
  if (D.41151_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;

<bb 9>:
  D.41153_9 = strcasecmp (expr_2(D), "disallow");
  if (D.41153_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;

<bb 10>:
  D.41155_10 = switch_is_number (expr_2(D));
  if (D.41155_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  # DEBUG __nptr => expr_2(D)
  D.47258_17 = strtol (expr_2(D), 0B, 10);
  if (D.47258_17 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # D.41135_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.41135_1;

}



;; Function add_audio_codec (add_audio_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 16 }
;; 13 succs { 21 14 }
;; 14 succs { 15 21 }
;; 15 succs { 21 }
;; 16 succs { 17 21 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
Marking useful stmt: # DEBUG codec_ms => ptime_6(D)

Marking useful stmt: # DEBUG map_bit_rate => 0

Marking useful stmt: D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);

Marking useful stmt: # DEBUG codec_ms => codec_ms_14

Marking useful stmt: # DEBUG codec_ms => codec_ms_1

Marking useful stmt: # DEBUG payload => csui.173_16

Marking useful stmt: <L27>:

Marking useful stmt: <L28>:

Marking useful stmt: <L29>:

Marking useful stmt: # DEBUG map_bit_rate => NULL

Marking useful stmt: # DEBUG codec_ms => 30

Marking useful stmt: # DEBUG ptime => 30

Marking useful stmt: # DEBUG codec_ms => codec_ms_2

Marking useful stmt: # DEBUG s => D.40670_22

Marking useful stmt: # DEBUG codec_ms => 30

Marking useful stmt: # DEBUG ptime => 30

Marking useful stmt: # DEBUG map_bit_rate => 32000

Marking useful stmt: D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_40

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_4

Marking useful stmt: # DEBUG codec_ms => codec_ms_43

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_5

Marking useful stmt: # DEBUG codec_ms => codec_ms_3

Marking useful stmt: switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);

Marking useful stmt: switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);

Marking useful stmt: switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);

Marking useful stmt: switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);

marking necessary through D.40699_48 stmt D.40699_48 = buf_46(D) + D.40698_47;
marking necessary through D.40701_51 stmt D.40701_51 = buflen_50(D) - D.40700_49;
marking necessary through D.40660_52 stmt D.40660_52 = map_9(D)->rm_encoding;
marking necessary through .MEM_62 stmt codec_fmtp = {};
marking necessary through .MEM_61 stmt bitstr = "";
marking necessary through .MEM_60 stmt ratestr = "";
marking necessary through .MEM_59 stmt ptstr = "";
processing: ptstr = "";

processing: ratestr = "";

processing: bitstr = "";

processing: codec_fmtp = {};

processing: D.40660_52 = map_9(D)->rm_encoding;

processing: D.40701_51 = buflen_50(D) - D.40700_49;

marking necessary through D.40700_49 stmt D.40700_49 = strlen (buf_46(D));
processing: D.40700_49 = strlen (buf_46(D));

processing: D.40699_48 = buf_46(D) + D.40698_47;

marking necessary through D.40698_47 stmt D.40698_47 = strlen (buf_46(D));
processing: D.40698_47 = strlen (buf_46(D));

processing: switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);

Marking useful stmt: if (map_bit_rate_5 != 0)

marking necessary through map_bit_rate_5 stmt map_bit_rate_5 = PHI <map_bit_rate_72(14), map_bit_rate_72(16), map_bit_rate_4(19), map_bit_rate_4(20), 13330(13), 32000(15)>
processing: map_bit_rate_5 = PHI <map_bit_rate_72(14), map_bit_rate_72(16), map_bit_rate_4(19), map_bit_rate_4(20), 13330(13), 32000(15)>

marking necessary through map_bit_rate_72 stmt map_bit_rate_72 = PHI <0(4), map_bit_rate_71(5)>
marking necessary through map_bit_rate_4 stmt map_bit_rate_4 = PHI <map_bit_rate_72(17), map_bit_rate_40(18)>
Marking useful stmt: if (D.40674_25 == 0)

Marking useful stmt: if (D.47270_74 != 0)

Marking useful stmt: if (D.40683_37 == 0)

Marking useful stmt: if (D.40689_41 != 0)

Marking useful stmt: if (D.40678_30 == 0)

processing: if (D.40678_30 == 0)

marking necessary through D.40678_30 stmt D.40678_30 = strcasecmp (D.40660_29, "isac");
processing: D.40678_30 = strcasecmp (D.40660_29, "isac");

marking necessary through D.40660_29 stmt D.40660_29 = map_9(D)->rm_encoding;
processing: D.40660_29 = map_9(D)->rm_encoding;

processing: if (D.40689_41 != 0)

marking necessary through D.40689_41 stmt D.40689_41 = codec_fmtp.microseconds_per_packet;
processing: D.40689_41 = codec_fmtp.microseconds_per_packet;

processing: if (D.40683_37 == 0)

processing: if (D.47270_74 != 0)

marking necessary through D.47270_74 stmt D.47270_74 = PHI <1(9), 1(10), 0(11)>
processing: D.47270_74 = PHI <1(9), 1(10), 0(11)>

Marking useful stmt: if (D.40670_22 == 0B)

Marking useful stmt: if (D.47271_73 == 0)

processing: if (D.47271_73 == 0)

marking necessary through D.47271_73 stmt D.47271_73 = *D.40670_22;
processing: D.47271_73 = *D.40670_22;

marking necessary through D.40670_22 stmt D.40670_22 = map_9(D)->rm_fmtp;
processing: D.40670_22 = map_9(D)->rm_fmtp;

processing: if (D.40670_22 == 0B)

processing: if (D.40674_25 == 0)

marking necessary through D.40674_25 stmt D.40674_25 = strcasecmp (D.40660_24, "ilbc");
processing: D.40674_25 = strcasecmp (D.40660_24, "ilbc");

marking necessary through D.40660_24 stmt D.40660_24 = map_9(D)->rm_encoding;
processing: D.40660_24 = map_9(D)->rm_encoding;

processing: map_bit_rate_4 = PHI <map_bit_rate_72(17), map_bit_rate_40(18)>

marking necessary through map_bit_rate_40 stmt map_bit_rate_40 = (uint32_t) D.40686_39;
Marking useful stmt: if (D.40686_38 != 0)

processing: if (D.40686_38 != 0)

marking necessary through D.40686_38 stmt D.40686_38 = codec_fmtp.bits_per_second;
processing: D.40686_38 = codec_fmtp.bits_per_second;

processing: map_bit_rate_40 = (uint32_t) D.40686_39;

marking necessary through D.40686_39 stmt D.40686_39 = codec_fmtp.bits_per_second;
processing: D.40686_39 = codec_fmtp.bits_per_second;

processing: map_bit_rate_72 = PHI <0(4), map_bit_rate_71(5)>

marking necessary through map_bit_rate_71 stmt map_bit_rate_71 = CSWTCH.174[csui.173_16];
Marking useful stmt: if (csui.173_16 <= 18)

processing: if (csui.173_16 <= 18)

marking necessary through csui.173_16 stmt csui.173_16 = (unsigned char) D.40661_15;
processing: csui.173_16 = (unsigned char) D.40661_15;

marking necessary through D.40661_15 stmt D.40661_15 = map_9(D)->rm_pt;
processing: D.40661_15 = map_9(D)->rm_pt;

processing: map_bit_rate_71 = CSWTCH.174[csui.173_16];

processing: if (map_bit_rate_5 != 0)

processing: switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);

Marking useful stmt: if (codec_ms_3 != 0)

marking necessary through codec_ms_3 stmt codec_ms_3 = PHI <codec_ms_2(14), codec_ms_2(16), codec_ms_2(19), codec_ms_43(20), 30(13), 30(15)>
processing: codec_ms_3 = PHI <codec_ms_2(14), codec_ms_2(16), codec_ms_2(19), codec_ms_43(20), 30(13), 30(15)>

marking necessary through codec_ms_2 stmt codec_ms_2 = PHI <codec_ms_1(6), codec_ms_1(7), 30(8)>
marking necessary through codec_ms_43 stmt codec_ms_43 = D.40689_42 / 1000;
processing: codec_ms_43 = D.40689_42 / 1000;

marking necessary through D.40689_42 stmt D.40689_42 = codec_fmtp.microseconds_per_packet;
processing: D.40689_42 = codec_fmtp.microseconds_per_packet;

processing: codec_ms_2 = PHI <codec_ms_1(6), codec_ms_1(7), 30(8)>

marking necessary through codec_ms_1 stmt codec_ms_1 = PHI <ptime_6(D)(2), codec_ms_14(3)>
Marking useful stmt: if (ptime_6(D) == 0)

Marking useful stmt: if (D.40667_19 == 0)

processing: if (D.40667_19 == 0)

marking necessary through D.40667_19 stmt D.40667_19 = strcasecmp (D.40660_18, "g723");
processing: D.40667_19 = strcasecmp (D.40660_18, "g723");

marking necessary through D.40660_18 stmt D.40660_18 = map_9(D)->rm_encoding;
processing: D.40660_18 = map_9(D)->rm_encoding;

processing: if (ptime_6(D) == 0)

processing: codec_ms_1 = PHI <ptime_6(D)(2), codec_ms_14(3)>

marking necessary through codec_ms_14 stmt codec_ms_14 = (int) D.40663_13;
Marking useful stmt: if (ptime_6(D) == 0)

processing: if (ptime_6(D) == 0)

processing: codec_ms_14 = (int) D.40663_13;

processing: if (codec_ms_3 != 0)

processing: switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);

Marking useful stmt: if (D.40682_44 != 0)

marking necessary through D.40682_45 stmt D.40682_45 = map_9(D)->rm_rate;
processing: D.40682_45 = map_9(D)->rm_rate;

processing: if (D.40682_44 != 0)

marking necessary through D.40682_44 stmt D.40682_44 = map_9(D)->rm_rate;
processing: D.40682_44 = map_9(D)->rm_rate;

processing: D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);

marking necessary through D.40660_34 stmt D.40660_34 = map_9(D)->rm_encoding;
marking necessary through D.40670_35 stmt D.40670_35 = map_9(D)->rm_fmtp;
marking necessary through D.40682_36 stmt D.40682_36 = map_9(D)->rm_rate;
processing: D.40682_36 = map_9(D)->rm_rate;

processing: D.40670_35 = map_9(D)->rm_fmtp;

processing: D.40660_34 = map_9(D)->rm_encoding;

processing: D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);

marking necessary through D.40660_10 stmt D.40660_10 = map_9(D)->rm_encoding;
marking necessary through D.40662_12 stmt D.40662_12 = (uint32_t) D.40661_11;
processing: D.40662_12 = (uint32_t) D.40661_11;

marking necessary through D.40661_11 stmt D.40661_11 = map_9(D)->rm_pt;
processing: D.40661_11 = map_9(D)->rm_pt;

processing: D.40660_10 = map_9(D)->rm_encoding;


Eliminating unnecessary statements:
Deleting : map_bit_rate_17 = map_bit_rate_72;

Deleting : csui.173_69 = csui.173_16;

Deleting : codec_ms_7 = ptime_6(D);

Removed 3 of 81 statements (3%)
Removed 0 of 12 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  int codec_ms;
  uint32_t map_bit_rate;
  char ptstr[20];
  char ratestr[20];
  char bitstr[20];
  struct switch_codec_fmtp_t codec_fmtp;

  { Scope block #10 src/switch_core_media.c:8143 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #11 Originating from :#0 

    }

  }

  { Scope block #12 src/switch_core_media.c:8137 Originating from :  static uint32_t switch_known_bitrate (switch_payload_t); 
    switch_payload_t payload; (unused)

  }

}
add_audio_codec (struct sdp_rtpmap_t * map, int ptime, char * buf, switch_size_t buflen)
{
  const char D.47271;
  int D.47270;
  unsigned char csui.173;
  struct switch_codec_fmtp_t codec_fmtp;
  char bitstr[20];
  char ratestr[20];
  char ptstr[20];
  uint32_t map_bit_rate;
  int codec_ms;
  switch_size_t D.40701;
  size_t D.40700;
  char * D.40699;
  size_t D.40698;
  int D.40689;
  int D.40686;
  switch_status_t D.40683;
  long unsigned int D.40682;
  int D.40678;
  int D.40674;
  const char * D.40670;
  int D.40667;
  uint32_t D.40663;
  uint32_t D.40662;
  <unnamed-unsigned:7> D.40661;
  const char * D.40660;

<bb 2>:
  # DEBUG codec_ms => ptime_6(D)
  # DEBUG map_bit_rate => 0
  ptstr = "";
  ratestr = "";
  bitstr = "";
  codec_fmtp = {};
  if (ptime_6(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.40660_10 = map_9(D)->rm_encoding;
  D.40661_11 = map_9(D)->rm_pt;
  D.40662_12 = (uint32_t) D.40661_11;
  D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);
  codec_ms_14 = (int) D.40663_13;
  # DEBUG codec_ms => codec_ms_14

<bb 4>:
  # codec_ms_1 = PHI <ptime_6(D)(2), codec_ms_14(3)>
  # DEBUG codec_ms => codec_ms_1
  D.40661_15 = map_9(D)->rm_pt;
  csui.173_16 = (unsigned char) D.40661_15;
  # DEBUG payload => csui.173_16
  if (csui.173_16 <= 18)
    goto <bb 5> (<L27>);
  else
    goto <bb 6> (<L28>);

<L27>:
  map_bit_rate_71 = CSWTCH.174[csui.173_16];

  # map_bit_rate_72 = PHI <0(4), map_bit_rate_71(5)>
<L28>:
<L29>:
  # DEBUG map_bit_rate => NULL
  if (ptime_6(D) == 0)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 7>:
  D.40660_18 = map_9(D)->rm_encoding;
  D.40667_19 = strcasecmp (D.40660_18, "g723");
  if (D.40667_19 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30

<bb 9>:
  # codec_ms_2 = PHI <codec_ms_1(6), codec_ms_1(7), 30(8)>
  # DEBUG codec_ms => codec_ms_2
  D.40670_22 = map_9(D)->rm_fmtp;
  # DEBUG s => D.40670_22
  if (D.40670_22 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47271_73 = *D.40670_22;
  if (D.47271_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.47270_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47270_74 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 13>:
  D.40660_24 = map_9(D)->rm_encoding;
  D.40674_25 = strcasecmp (D.40660_24, "ilbc");
  if (D.40674_25 == 0)
    goto <bb 21>;
  else
    goto <bb 14>;

<bb 14>:
  D.40660_29 = map_9(D)->rm_encoding;
  D.40678_30 = strcasecmp (D.40660_29, "isac");
  if (D.40678_30 == 0)
    goto <bb 15>;
  else
    goto <bb 21>;

<bb 15>:
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30
  # DEBUG map_bit_rate => 32000
  goto <bb 21>;

<bb 16>:
  D.40660_34 = map_9(D)->rm_encoding;
  D.40670_35 = map_9(D)->rm_fmtp;
  D.40682_36 = map_9(D)->rm_rate;
  D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);
  if (D.40683_37 == 0)
    goto <bb 17>;
  else
    goto <bb 21>;

<bb 17>:
  D.40686_38 = codec_fmtp.bits_per_second;
  if (D.40686_38 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.40686_39 = codec_fmtp.bits_per_second;
  map_bit_rate_40 = (uint32_t) D.40686_39;
  # DEBUG map_bit_rate => map_bit_rate_40

<bb 19>:
  # map_bit_rate_4 = PHI <map_bit_rate_72(17), map_bit_rate_40(18)>
  # DEBUG map_bit_rate => map_bit_rate_4
  D.40689_41 = codec_fmtp.microseconds_per_packet;
  if (D.40689_41 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40689_42 = codec_fmtp.microseconds_per_packet;
  codec_ms_43 = D.40689_42 / 1000;
  # DEBUG codec_ms => codec_ms_43

<bb 21>:
  # codec_ms_3 = PHI <codec_ms_2(14), codec_ms_2(16), codec_ms_2(19), codec_ms_43(20), 30(13), 30(15)>
  # map_bit_rate_5 = PHI <map_bit_rate_72(14), map_bit_rate_72(16), map_bit_rate_4(19), map_bit_rate_4(20), 13330(13), 32000(15)>
  # DEBUG map_bit_rate => map_bit_rate_5
  # DEBUG codec_ms => codec_ms_3
  D.40682_44 = map_9(D)->rm_rate;
  if (D.40682_44 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.40682_45 = map_9(D)->rm_rate;
  switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);

<bb 23>:
  if (codec_ms_3 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);

<bb 25>:
  if (map_bit_rate_5 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);

<bb 27>:
  D.40698_47 = strlen (buf_46(D));
  D.40699_48 = buf_46(D) + D.40698_47;
  D.40700_49 = strlen (buf_46(D));
  D.40701_51 = buflen_50(D) - D.40700_49;
  D.40660_52 = map_9(D)->rm_encoding;
  switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);
  return;

}



;; Function switch_core_session_parse_crypto_prefs (switch_core_session_parse_crypto_prefs)

Created preheader block for loop 3
Created preheader block for loop 1
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 51 26 27 28 29 30 31 32 33 34 35 36 37 38 49 39 40 41 42 52 44 45 46 47 43 48 53 50
;;
;; Loop 2
;;  header 47, latch 46
;;  depth 1, outer 0
;;  nodes: 47 46 44 45 41 52 43 42 40
;;
;; Loop 3
;;  header 52, latch 42
;;  depth 2, outer 2
;;  nodes: 52 42 40
;;
;; Loop 1
;;  header 53, latch 48
;;  depth 1, outer 0
;;  nodes: 53 48
;; 2 succs { 50 3 }
;; 3 succs { 50 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 22 20 }
;; 20 succs { 22 21 }
;; 21 succs { 22 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 26 51 }
;; 51 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 34 }
;; 28 succs { 30 29 }
;; 29 succs { 30 31 }
;; 30 succs { 34 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 49 }
;; 35 succs { 38 36 }
;; 36 succs { 38 37 }
;; 37 succs { 38 }
;; 38 succs { 39 49 }
;; 49 succs { 53 }
;; 39 succs { 47 }
;; 40 succs { 41 42 }
;; 41 succs { 44 }
;; 42 succs { 52 }
;; 52 succs { 40 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 43 50 }
;; 43 succs { 52 }
;; 48 succs { 53 }
;; 53 succs { 48 50 }
;; 50 succs { 1 }
Marking useful stmt: # DEBUG var => 0B

Marking useful stmt: # DEBUG val => 0B

Marking useful stmt: # DEBUG suites => 0B

Marking useful stmt: # DEBUG argc => 0

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: # DEBUG k => 0

Marking useful stmt: # DEBUG smh => smh_22

Marking useful stmt: D.42526_24 = switch_channel_test_flag (D.42525_23, 106);

Marking useful stmt: D.42529_26 = switch_channel_direction (D.42525_25);

Marking useful stmt: # DEBUG var => "rtp_secure_media_outbound"

Marking useful stmt: # DEBUG var => var_1

Marking useful stmt: val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);

Marking useful stmt: # DEBUG val => val_30

Marking useful stmt: # DEBUG var => "rtp_secure_media"

Marking useful stmt: val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);

Marking useful stmt: # DEBUG val => val_33

Marking useful stmt: # DEBUG val => val_3

Marking useful stmt: # DEBUG var => var_2

Marking useful stmt: # DEBUG s => val_3

Marking useful stmt: # DEBUG suites => suites_35

Marking useful stmt: *suites_35 = 0;

Marking useful stmt: # DEBUG suites => suites_36

Marking useful stmt: # DEBUG suites => suites_5

Marking useful stmt: # DEBUG s => suites_5

Marking useful stmt: suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);

Marking useful stmt: # DEBUG suites => suites_39

Marking useful stmt: # DEBUG suites => suites_6

Marking useful stmt: # DEBUG s => val_3

Marking useful stmt: D.42548_42 = switch_channel_direction (D.42525_41);

Marking useful stmt: D.42550_44 = switch_channel_test_flag (D.42525_43, 84);

Marking useful stmt: # DEBUG val => val_4

Marking useful stmt: smh_22->crypto_mode = 0;

Marking useful stmt: D.42559_48 = switch_true (val_4);

Marking useful stmt: smh_22->crypto_mode = 1;

Marking useful stmt: smh_22->crypto_mode = 2;

Marking useful stmt: D.42562_50 = switch_false (val_4);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);

Marking useful stmt: # DEBUG s => suites_6

Marking useful stmt: D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);

Marking useful stmt: # DEBUG argc => argc_55

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: smh_22->crypto_suite_order[k_11] = D.42579_62;

Marking useful stmt: # DEBUG k => k_63

Marking useful stmt: # DEBUG ok => 1

Marking useful stmt: # DEBUG j => j_65

Marking useful stmt: # DEBUG j => j_9

Marking useful stmt: # DEBUG ok => ok_13

Marking useful stmt: # DEBUG k => k_10

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");

Marking useful stmt: # DEBUG i => i_66

Marking useful stmt: # DEBUG k => k_11

Marking useful stmt: # DEBUG i => i_7

Marking useful stmt: smh_22->crypto_suite_order[k_12] = D.42582_68;

Marking useful stmt: # DEBUG k => k_69

Marking useful stmt: # DEBUG i => i_70

Marking useful stmt: # DEBUG k => k_12

Marking useful stmt: # DEBUG i => i_8

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_7)
(get_scalar_evolution 
  (scalar = i_7)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_7 = PHI <0(39), i_66(46)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_7 = PHI <0(39), i_66(46)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = i_7)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = argc_55)
(get_scalar_evolution 
  (scalar = argc_55)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) < (int) D.42573_54
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if (int) D.42573_54 < 0
    # of iterations D.42573_54, bounded by 2147483647
Found loop 2 to be finite: iterating D.42573_54 times
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = j_9)
(get_scalar_evolution 
  (scalar = j_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_9 = PHI <j_74(43), j_65(42)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_9 = PHI <j_74(43), j_65(42)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = j_9)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 3 to be finite: iterating 9 times
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_8)
(get_scalar_evolution 
  (scalar = i_8)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_8 = PHI <i_67(49), i_70(48)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_8 = PHI <i_67(49), i_70(48)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 49 
  (scalar = i_8)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 1 to be finite: iterating 9 times

Processing worklist:
processing: return;

processing: smh_22->crypto_suite_order[k_12] = D.42582_68;

Marking useful stmt: if (i_8 <= 8)

marking necessary through smh_22 stmt smh_22 = session_21(D)->media_handle;
marking necessary through k_12 stmt k_12 = PHI <k_64(49), k_69(48)>
marking necessary through D.42582_68 stmt D.42582_68 = SUITES[i_8].type;
processing: D.42582_68 = SUITES[i_8].type;

marking necessary through i_8 stmt i_8 = PHI <i_67(49), i_70(48)>
processing: i_8 = PHI <i_67(49), i_70(48)>

Marking useful stmt: if (D.42569_52 != 2)

Marking useful stmt: if (D.47287_107 == 0)

marking necessary through i_67 stmt i_67 = PHI <0(38), 0(34)>
marking necessary through i_70 stmt i_70 = i_8 + 1;
processing: i_70 = i_8 + 1;

processing: i_67 = PHI <0(38), 0(34)>

processing: if (D.47287_107 == 0)

marking necessary through D.47287_107 stmt D.47287_107 = PHI <1(35), 1(36), 0(37)>
processing: D.47287_107 = PHI <1(35), 1(36), 0(37)>

Marking useful stmt: if (suites_6 == 0B)

Marking useful stmt: if (D.47288_106 == 0)

processing: if (D.47288_106 == 0)

marking necessary through D.47288_106 stmt D.47288_106 = MEM[(const char *)suites_6];
processing: D.47288_106 = MEM[(const char *)suites_6];

marking necessary through suites_6 stmt suites_6 = PHI <suites_5(17), suites_39(18)>
processing: suites_6 = PHI <suites_5(17), suites_39(18)>

Marking useful stmt: if (D.42526_24 != 0)

marking necessary through suites_5 stmt suites_5 = PHI <0B(11), suites_35(12), suites_36(13)>
Marking useful stmt: if (D.47279_103 != 0)

processing: if (D.47279_103 != 0)

marking necessary through D.47279_103 stmt D.47279_103 = PHI <1(14), 1(15), 0(16)>
processing: D.47279_103 = PHI <1(14), 1(15), 0(16)>

Marking useful stmt: if (suites_5 == 0B)

Marking useful stmt: if (D.47280_102 == 0)

processing: if (D.47280_102 == 0)

marking necessary through D.47280_102 stmt D.47280_102 = MEM[(const char *)suites_5];
processing: D.47280_102 = MEM[(const char *)suites_5];

processing: if (suites_5 == 0B)

processing: suites_5 = PHI <0B(11), suites_35(12), suites_36(13)>

marking necessary through suites_35 stmt suites_35 = __builtin_strchr (val_3, 58);
marking necessary through suites_36 stmt suites_36 = suites_35 + 1;
Marking useful stmt: if (D.47275_101 == 0)

Marking useful stmt: if (suites_35 != 0B)

processing: if (suites_35 != 0B)

processing: if (D.47275_101 == 0)

marking necessary through D.47275_101 stmt D.47275_101 = PHI <1(8), 1(9), 0(10)>
processing: D.47275_101 = PHI <1(8), 1(9), 0(10)>

Marking useful stmt: if (val_3 == 0B)

Marking useful stmt: if (D.47276_100 == 0)

processing: if (D.47276_100 == 0)

marking necessary through D.47276_100 stmt D.47276_100 = *val_3;
processing: D.47276_100 = *val_3;

marking necessary through val_3 stmt val_3 = PHI <val_30(6), val_33(7)>
processing: val_3 = PHI <val_30(6), val_33(7)>

Marking useful stmt: if (val_30 == 0B)

processing: if (val_30 == 0B)

processing: if (val_3 == 0B)

processing: suites_36 = suites_35 + 1;

processing: suites_35 = __builtin_strchr (val_3, 58);

processing: if (D.42526_24 != 0)

Marking useful stmt: if (smh_22 == 0B)

processing: if (smh_22 == 0B)

processing: if (suites_6 == 0B)

processing: if (D.42569_52 != 2)

marking necessary through D.42569_52 stmt D.42569_52 = smh_22->crypto_mode;
processing: D.42569_52 = smh_22->crypto_mode;

processing: k_12 = PHI <k_64(49), k_69(48)>

marking necessary through k_64 stmt k_64 = PHI <0(38), 0(34)>
marking necessary through k_69 stmt k_69 = k_12 + 1;
processing: k_69 = k_12 + 1;

processing: k_64 = PHI <0(38), 0(34)>

processing: smh_22 = session_21(D)->media_handle;

processing: if (i_8 <= 8)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");

Marking useful stmt: if (ok_13 == 0)

processing: if (ok_13 == 0)

Marking useful stmt: if (i_7 < argc_55)

marking necessary through ok_13 stmt ok_13 = PHI <1(41), 0(52)>
processing: ok_13 = PHI <1(41), 0(52)>

Marking useful stmt: if (D.42576_61 == 0)

processing: if (D.42576_61 == 0)

Marking useful stmt: if (j_9 <= 8)

marking necessary through D.42576_61 stmt D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
processing: D.42576_61 = strcasecmp (D.42574_59, D.42575_60);

marking necessary through D.42574_59 stmt D.42574_59 = fields[i_7];
marking necessary through D.42575_60 stmt D.42575_60 = SUITES[j_9].name;
processing: D.42575_60 = SUITES[j_9].name;

marking necessary through j_9 stmt j_9 = PHI <j_74(43), j_65(42)>
processing: j_9 = PHI <j_74(43), j_65(42)>

marking necessary through j_74 stmt j_74 = PHI <0(47)>
marking necessary through j_65 stmt j_65 = j_9 + 1;
processing: j_65 = j_9 + 1;

processing: j_74 = PHI <0(47)>

processing: D.42574_59 = fields[i_7];

marking necessary through i_7 stmt i_7 = PHI <0(39), i_66(46)>
processing: i_7 = PHI <0(39), i_66(46)>

marking necessary through i_66 stmt i_66 = i_7 + 1;
processing: i_66 = i_7 + 1;

processing: if (j_9 <= 8)

processing: if (i_7 < argc_55)

marking necessary through argc_55 stmt argc_55 = (int) D.42573_54;
processing: argc_55 = (int) D.42573_54;

processing: smh_22->crypto_suite_order[k_11] = D.42579_62;

marking necessary through k_11 stmt k_11 = PHI <0(39), k_10(46)>
marking necessary through D.42579_62 stmt D.42579_62 = SUITES[j_9].type;
processing: D.42579_62 = SUITES[j_9].type;

processing: k_11 = PHI <0(39), k_10(46)>

marking necessary through k_10 stmt k_10 = PHI <k_63(41), k_11(52)>
processing: k_10 = PHI <k_63(41), k_11(52)>

marking necessary through k_63 stmt k_63 = k_11 + 1;
processing: k_63 = k_11 + 1;

processing: D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);

Marking useful stmt: if (D.42565_51 != 0)

marking necessary through var_2 stmt var_2 = PHI <var_1(6), "rtp_secure_media"(7)>
processing: var_2 = PHI <var_1(6), "rtp_secure_media"(7)>

marking necessary through var_1 stmt var_1 = PHI <"rtp_secure_media_inbound"(4), "rtp_secure_media_outbound"(5)>
processing: var_1 = PHI <"rtp_secure_media_inbound"(4), "rtp_secure_media_outbound"(5)>

Marking useful stmt: if (D.42529_26 == 0)

processing: if (D.42529_26 == 0)

processing: if (D.42565_51 != 0)

Marking useful stmt: if (D.42562_50 == 0)

marking necessary through D.42565_51 stmt D.42565_51 = strcasecmp (val_4, "forbidden");
processing: D.42565_51 = strcasecmp (val_4, "forbidden");

marking necessary through val_4 stmt val_4 = PHI <val_3(22), "optional"(24), "forbidden"(51), "forbidden"(23)>
processing: val_4 = PHI <val_3(22), "optional"(24), "forbidden"(51), "forbidden"(23)>

Marking useful stmt: if (D.42548_42 == 0)

Marking useful stmt: if (D.42550_44 == 0)

Marking useful stmt: if (D.47283_105 != 0)

processing: if (D.47283_105 != 0)

marking necessary through D.47283_105 stmt D.47283_105 = PHI <1(19), 1(20), 0(21)>
processing: D.47283_105 = PHI <1(19), 1(20), 0(21)>

Marking useful stmt: if (val_3 == 0B)

Marking useful stmt: if (D.47284_104 == 0)

processing: if (D.47284_104 == 0)

marking necessary through D.47284_104 stmt D.47284_104 = *val_3;
processing: D.47284_104 = *val_3;

processing: if (val_3 == 0B)

processing: if (D.42550_44 == 0)

processing: if (D.42548_42 == 0)

processing: if (D.42562_50 == 0)

Marking useful stmt: if (D.42561_49 == 0)

processing: if (D.42561_49 == 0)

Marking useful stmt: if (D.42559_48 != 0)

marking necessary through D.42561_49 stmt D.42561_49 = strcasecmp (val_4, "mandatory");
processing: D.42561_49 = strcasecmp (val_4, "mandatory");

processing: if (D.42559_48 != 0)

Marking useful stmt: if (D.42552_47 == 0)

processing: if (D.42552_47 == 0)

marking necessary through D.42552_47 stmt D.42552_47 = strcasecmp (val_4, "optional");
processing: D.42552_47 = strcasecmp (val_4, "optional");

processing: D.42562_50 = switch_false (val_4);

processing: smh_22->crypto_mode = 2;

processing: smh_22->crypto_mode = 1;

processing: D.42559_48 = switch_true (val_4);

processing: smh_22->crypto_mode = 0;

processing: D.42550_44 = switch_channel_test_flag (D.42525_43, 84);

marking necessary through D.42525_43 stmt D.42525_43 = session_21(D)->channel;
processing: D.42525_43 = session_21(D)->channel;

processing: D.42548_42 = switch_channel_direction (D.42525_41);

marking necessary through D.42525_41 stmt D.42525_41 = session_21(D)->channel;
processing: D.42525_41 = session_21(D)->channel;

processing: suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);

marking necessary through D.42525_38 stmt D.42525_38 = session_21(D)->channel;
processing: D.42525_38 = session_21(D)->channel;

processing: *suites_35 = 0;

processing: val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);

marking necessary through D.42525_32 stmt D.42525_32 = session_21(D)->channel;
processing: D.42525_32 = session_21(D)->channel;

processing: val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);

marking necessary through D.42525_29 stmt D.42525_29 = session_21(D)->channel;
processing: D.42525_29 = session_21(D)->channel;

processing: D.42529_26 = switch_channel_direction (D.42525_25);

marking necessary through D.42525_25 stmt D.42525_25 = session_21(D)->channel;
processing: D.42525_25 = session_21(D)->channel;

processing: D.42526_24 = switch_channel_test_flag (D.42525_23, 106);

marking necessary through D.42525_23 stmt D.42525_23 = session_21(D)->channel;
processing: D.42525_23 = session_21(D)->channel;


Eliminating unnecessary statements:
Deleting : .MEM_57 = PHI <.MEM_76(38), .MEM_76(34)>

Removed 0 of 118 statements (0%)
Removed 1 of 30 PHI nodes (3%)
Scope blocks after cleanups:

{ Scope block #0 
  const char * var;
  const char * val;
  char * suites;
  struct switch_media_handle_t * smh;
  char * fields[10];
  int argc;
  int i;
  int j;
  int k;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";

  { Scope block #14 src/switch_core_media.c:1127 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #15 Originating from :#0 

    }

  }

  { Scope block #16 src/switch_core_media.c:1108 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #17 Originating from :#0 

    }

  }

  { Scope block #18 src/switch_core_media.c:1104 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #19 Originating from :#0 

    }

  }

  { Scope block #20 src/switch_core_media.c:1100 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #21 Originating from :#0 

    }

  }

  { Scope block #22 
    int ok;

  }

}
switch_core_session_parse_crypto_prefs (struct switch_core_session_t * session)
{
  const char D.47288;
  int D.47287;
  const char D.47284;
  int D.47283;
  const char D.47280;
  int D.47279;
  const char D.47276;
  int D.47275;
  int ok;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";
  int k;
  int j;
  int i;
  int argc;
  char * fields[10];
  struct switch_media_handle_t * smh;
  char * suites;
  const char * val;
  const char * var;
  switch_rtp_crypto_key_type_t D.42582;
  switch_rtp_crypto_key_type_t D.42579;
  int D.42576;
  char * D.42575;
  char * D.42574;
  unsigned int D.42573;
  switch_rtp_crypto_mode_t D.42569;
  int D.42565;
  int D.42562;
  int D.42561;
  int D.42559;
  int D.42552;
  uint32_t D.42550;
  switch_call_direction_t D.42548;
  switch_call_direction_t D.42529;
  uint32_t D.42526;
  struct switch_channel_t * D.42525;

<bb 2>:
  # DEBUG var => 0B
  # DEBUG val => 0B
  # DEBUG suites => 0B
  # DEBUG argc => 0
  # DEBUG i => 0
  # DEBUG j => 0
  # DEBUG k => 0
  smh_22 = session_21(D)->media_handle;
  # DEBUG smh => smh_22
  if (smh_22 == 0B)
    goto <bb 52>;
  else
    goto <bb 3>;

<bb 3>:
  D.42525_23 = session_21(D)->channel;
  D.42526_24 = switch_channel_test_flag (D.42525_23, 106);
  if (D.42526_24 != 0)
    goto <bb 52>;
  else
    goto <bb 4>;

<bb 4>:
  D.42525_25 = session_21(D)->channel;
  D.42529_26 = switch_channel_direction (D.42525_25);
  if (D.42529_26 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG var => "rtp_secure_media_outbound"

<bb 6>:
  # var_1 = PHI <"rtp_secure_media_inbound"(4), "rtp_secure_media_outbound"(5)>
  # DEBUG var => var_1
  D.42525_29 = session_21(D)->channel;
  val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);
  # DEBUG val => val_30
  if (val_30 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  # DEBUG var => "rtp_secure_media"
  D.42525_32 = session_21(D)->channel;
  val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);
  # DEBUG val => val_33

<bb 8>:
  # var_2 = PHI <var_1(6), "rtp_secure_media"(7)>
  # val_3 = PHI <val_30(6), val_33(7)>
  # DEBUG val => val_3
  # DEBUG var => var_2
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;

<bb 9>:
  D.47276_100 = *val_3;
  if (D.47276_100 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # D.47275_101 = PHI <1(8), 1(9), 0(10)>
  if (D.47275_101 == 0)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  suites_35 = __builtin_strchr (val_3, 58);
  # DEBUG suites => suites_35
  if (suites_35 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  *suites_35 = 0;
  suites_36 = suites_35 + 1;
  # DEBUG suites => suites_36

<bb 14>:
  # suites_5 = PHI <0B(11), suites_35(12), suites_36(13)>
  # DEBUG suites => suites_5
  # DEBUG s => suites_5
  if (suites_5 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;

<bb 15>:
  D.47280_102 = MEM[(const char *)suites_5];
  if (D.47280_102 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:

<bb 17>:
  # D.47279_103 = PHI <1(14), 1(15), 0(16)>
  if (D.47279_103 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.42525_38 = session_21(D)->channel;
  suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);
  # DEBUG suites => suites_39

<bb 19>:
  # suites_6 = PHI <suites_5(17), suites_39(18)>
  # DEBUG suites => suites_6
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 20>:
  D.47284_104 = *val_3;
  if (D.47284_104 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

<bb 21>:

<bb 22>:
  # D.47283_105 = PHI <1(19), 1(20), 0(21)>
  if (D.47283_105 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.42525_41 = session_21(D)->channel;
  D.42548_42 = switch_channel_direction (D.42525_41);
  if (D.42548_42 == 0)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 24>:
  D.42525_43 = session_21(D)->channel;
  D.42550_44 = switch_channel_test_flag (D.42525_43, 84);
  if (D.42550_44 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:

<bb 26>:
  # val_4 = PHI <val_3(22), "optional"(24), "forbidden"(25), "forbidden"(23)>
  # DEBUG val => val_4
  D.42552_47 = strcasecmp (val_4, "optional");
  if (D.42552_47 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  smh_22->crypto_mode = 0;
  goto <bb 34>;

<bb 28>:
  D.42559_48 = switch_true (val_4);
  if (D.42559_48 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;

<bb 29>:
  D.42561_49 = strcasecmp (val_4, "mandatory");
  if (D.42561_49 == 0)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  smh_22->crypto_mode = 1;
  goto <bb 34>;

<bb 31>:
  smh_22->crypto_mode = 2;
  D.42562_50 = switch_false (val_4);
  if (D.42562_50 == 0)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.42565_51 = strcasecmp (val_4, "forbidden");
  if (D.42565_51 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);

<bb 34>:
  D.42569_52 = smh_22->crypto_mode;
  if (D.42569_52 != 2)
    goto <bb 35>;
  else
    goto <bb 39>;

<bb 35>:
  # DEBUG s => suites_6
  if (suites_6 == 0B)
    goto <bb 38>;
  else
    goto <bb 36>;

<bb 36>:
  D.47288_106 = MEM[(const char *)suites_6];
  if (D.47288_106 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;

<bb 37>:

<bb 38>:
  # D.47287_107 = PHI <1(35), 1(36), 0(37)>
  if (D.47287_107 == 0)
    goto <bb 40>;
  else
    goto <bb 39>;

<bb 39>:
  # i_67 = PHI <0(38), 0(34)>
  # k_64 = PHI <0(38), 0(34)>
  goto <bb 51>;

<bb 40>:
  D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);
  argc_55 = (int) D.42573_54;
  # DEBUG argc => argc_55
  # DEBUG i => 0
  goto <bb 48>;

<bb 41>:
  D.42574_59 = fields[i_7];
  D.42575_60 = SUITES[j_9].name;
  D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
  if (D.42576_61 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  D.42579_62 = SUITES[j_9].type;
  smh_22->crypto_suite_order[k_11] = D.42579_62;
  k_63 = k_11 + 1;
  # DEBUG k => k_63
  # DEBUG ok => 1
  goto <bb 45>;

<bb 43>:
  j_65 = j_9 + 1;
  # DEBUG j => j_65

<bb 44>:
  # j_9 = PHI <j_74(49), j_65(43)>
  # DEBUG j => j_9
  if (j_9 <= 8)
    goto <bb 41>;
  else
    goto <bb 45>;

<bb 45>:
  # k_10 = PHI <k_63(42), k_11(44)>
  # ok_13 = PHI <1(42), 0(44)>
  # DEBUG ok => ok_13
  # DEBUG k => k_10
  if (ok_13 == 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");

<bb 47>:
  i_66 = i_7 + 1;
  # DEBUG i => i_66

<bb 48>:
  # i_7 = PHI <0(40), i_66(47)>
  # k_11 = PHI <0(40), k_10(47)>
  # DEBUG k => k_11
  # DEBUG i => i_7
  if (i_7 < argc_55)
    goto <bb 49>;
  else
    goto <bb 52>;

<bb 49>:
  # j_74 = PHI <0(48)>
  goto <bb 44>;

<bb 50>:
  D.42582_68 = SUITES[i_8].type;
  smh_22->crypto_suite_order[k_12] = D.42582_68;
  k_69 = k_12 + 1;
  # DEBUG k => k_69
  i_70 = i_8 + 1;
  # DEBUG i => i_70

<bb 51>:
  # i_8 = PHI <i_67(39), i_70(50)>
  # k_12 = PHI <k_64(39), k_69(50)>
  # DEBUG k => k_12
  # DEBUG i => i_8
  if (i_8 <= 8)
    goto <bb 50>;
  else
    goto <bb 52>;

<bb 52>:
  return;

}



;; Function gen_ice (gen_ice)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 27 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 22 20 }
;; 20 succs { 22 21 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: # DEBUG engine => engine_6

Marking useful stmt: engine_6->rtcp_mux = 1;

Marking useful stmt: switch_stun_random_string (&tmp, 32, 0B);

Marking useful stmt: D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);

Marking useful stmt: smh_2->msid = D.42935_9;

Marking useful stmt: switch_stun_random_string (&tmp, 16, 0B);

Marking useful stmt: D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);

Marking useful stmt: smh_2->cname = D.42939_11;

Marking useful stmt: switch_stun_random_string (&tmp, 16, 0B);

Marking useful stmt: D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);

Marking useful stmt: engine_6->ice_out.ufrag = D.42943_13;

Marking useful stmt: switch_stun_random_string (&tmp, 16, 0B);

Marking useful stmt: D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);

Marking useful stmt: engine_6->ice_out.pwd = D.42947_15;

Marking useful stmt: switch_stun_random_string (&tmp, 10, "0123456789");

Marking useful stmt: D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);

Marking useful stmt: engine_6->ice_out.cands[0][0].foundation = D.42951_17;

Marking useful stmt: engine_6->ice_out.cands[0][0].transport = "udp";

Marking useful stmt: engine_6->ice_out.cands[0][0].component_id = 1;

Marking useful stmt: engine_6->ice_out.cands[0][0].priority = D.42957_22;

Marking useful stmt: # DEBUG s => ip_23(D)

Marking useful stmt: D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);

Marking useful stmt: engine_6->ice_out.cands[0][0].con_addr = D.42961_25;

Marking useful stmt: engine_6->ice_out.cands[0][0].con_port = port_26(D);

Marking useful stmt: engine_6->ice_out.cands[0][0].generation = "0";

Marking useful stmt: engine_6->ice_out.cands[0][0].ready = 1;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: engine_6->ice_out.cands[0][0].ready = 1;

Marking useful stmt: if (smh_2 == 0B)

marking necessary through engine_6 stmt engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
processing: engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

marking necessary through .MEM_37 stmt tmp = "";
processing: tmp = "";

processing: if (smh_2 == 0B)

processing: engine_6->ice_out.cands[0][0].generation = "0";

processing: engine_6->ice_out.cands[0][0].con_port = port_26(D);

Marking useful stmt: if (port_26(D) != 0)

processing: if (port_26(D) != 0)

processing: engine_6->ice_out.cands[0][0].con_addr = D.42961_25;

Marking useful stmt: if (D.47292_67 == 0)

processing: if (D.47292_67 == 0)

marking necessary through D.47292_67 stmt D.47292_67 = PHI <1(19), 1(20), 0(21)>
processing: D.47292_67 = PHI <1(19), 1(20), 0(21)>

Marking useful stmt: if (ip_23(D) == 0B)

Marking useful stmt: if (D.47293_66 == 0)

processing: if (D.47293_66 == 0)

marking necessary through D.47293_66 stmt D.47293_66 = *ip_23(D);
processing: D.47293_66 = *ip_23(D);

marking necessary through .MEM_40 stmt tmp[32] = 0;
marking necessary through .MEM_44 stmt tmp[16] = 0;
marking necessary through .MEM_48 stmt tmp[16] = 0;
marking necessary through .MEM_55 stmt tmp[10] = 0;
processing: tmp[10] = 0;

Marking useful stmt: if (D.42948_16 == 0B)

processing: if (D.42948_16 == 0B)

marking necessary through D.42948_16 stmt D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
processing: D.42948_16 = engine_6->ice_out.cands[0][0].foundation;

processing: tmp[16] = 0;

Marking useful stmt: if (D.42940_12 == 0B)

processing: if (D.42940_12 == 0B)

marking necessary through D.42940_12 stmt D.42940_12 = engine_6->ice_out.ufrag;
processing: D.42940_12 = engine_6->ice_out.ufrag;

processing: tmp[16] = 0;

Marking useful stmt: if (D.42936_10 == 0B)

processing: if (D.42936_10 == 0B)

marking necessary through D.42936_10 stmt D.42936_10 = smh_2->cname;
processing: D.42936_10 = smh_2->cname;

processing: tmp[32] = 0;

Marking useful stmt: if (D.42932_8 == 0B)

processing: if (D.42932_8 == 0B)

marking necessary through D.42932_8 stmt D.42932_8 = smh_2->msid;
processing: D.42932_8 = smh_2->msid;

processing: if (ip_23(D) == 0B)

processing: D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);

processing: engine_6->ice_out.cands[0][0].priority = D.42957_22;

Marking useful stmt: if (D.42952_18 == 0)

marking necessary through D.42957_22 stmt D.42957_22 = (uint32_t) D.42956_21;
processing: D.42957_22 = (uint32_t) D.42956_21;

marking necessary through D.42956_21 stmt D.42956_21 = D.42955_20 * 2;
processing: D.42956_21 = D.42955_20 * 2;

marking necessary through D.42955_20 stmt D.42955_20 = 329569 - D.42952_19;
processing: D.42955_20 = 329569 - D.42952_19;

marking necessary through D.42952_19 stmt D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
processing: D.42952_19 = engine_6->ice_out.cands[0][0].component_id;

processing: if (D.42952_18 == 0)

marking necessary through D.42952_18 stmt D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
processing: D.42952_18 = engine_6->ice_out.cands[0][0].component_id;

processing: engine_6->ice_out.cands[0][0].component_id = 1;

processing: engine_6->ice_out.cands[0][0].transport = "udp";

processing: engine_6->ice_out.cands[0][0].foundation = D.42951_17;

processing: D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);

processing: switch_stun_random_string (&tmp, 10, "0123456789");

processing: engine_6->ice_out.pwd = D.42947_15;

Marking useful stmt: if (D.42944_14 == 0B)

processing: if (D.42944_14 == 0B)

marking necessary through D.42944_14 stmt D.42944_14 = engine_6->ice_out.pwd;
processing: D.42944_14 = engine_6->ice_out.pwd;

processing: D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);

processing: switch_stun_random_string (&tmp, 16, 0B);

processing: engine_6->ice_out.ufrag = D.42943_13;

processing: D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);

processing: switch_stun_random_string (&tmp, 16, 0B);

processing: smh_2->cname = D.42939_11;

processing: D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);

processing: switch_stun_random_string (&tmp, 16, 0B);

processing: smh_2->msid = D.42935_9;

processing: D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);

processing: switch_stun_random_string (&tmp, 32, 0B);

processing: engine_6->rtcp_mux = 1;

Marking useful stmt: if (D.42929_7 == 0)

processing: if (D.42929_7 == 0)

marking necessary through D.42929_7 stmt D.42929_7 = engine_6->rtcp_mux;
processing: D.42929_7 = engine_6->rtcp_mux;

processing: __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 61 statements (0%)
Removed 0 of 10 PHI nodes (0%)
gen_ice (struct switch_core_session_t * session, switch_media_type_t type, const char * ip, switch_port_t port)
{
  const char D.47293;
  int D.47292;
  static const char __func__[8] = "gen_ice";
  static const char __PRETTY_FUNCTION__[8] = "gen_ice";
  char tmp[33];
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.42961;
  uint32_t D.42957;
  int D.42956;
  int D.42955;
  int D.42952;
  char * D.42951;
  char * D.42948;
  char * D.42947;
  char * D.42944;
  char * D.42943;
  char * D.42940;
  char * D.42939;
  char * D.42936;
  char * D.42935;
  char * D.42932;
  int8_t D.42929;
  unsigned int D.42928;

<bb 2>:
  tmp = "";
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;

<bb 5>:
  engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_6
  D.42929_7 = engine_6->rtcp_mux;
  if (D.42929_7 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  engine_6->rtcp_mux = 1;

<bb 7>:
  D.42932_8 = smh_2->msid;
  if (D.42932_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  switch_stun_random_string (&tmp, 32, 0B);
  tmp[32] = 0;
  D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);
  smh_2->msid = D.42935_9;

<bb 9>:
  D.42936_10 = smh_2->cname;
  if (D.42936_10 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);
  smh_2->cname = D.42939_11;

<bb 11>:
  D.42940_12 = engine_6->ice_out.ufrag;
  if (D.42940_12 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);
  engine_6->ice_out.ufrag = D.42943_13;

<bb 13>:
  D.42944_14 = engine_6->ice_out.pwd;
  if (D.42944_14 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  switch_stun_random_string (&tmp, 16, 0B);
  D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);
  engine_6->ice_out.pwd = D.42947_15;

<bb 15>:
  D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
  if (D.42948_16 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  switch_stun_random_string (&tmp, 10, "0123456789");
  tmp[10] = 0;
  D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);
  engine_6->ice_out.cands[0][0].foundation = D.42951_17;

<bb 17>:
  engine_6->ice_out.cands[0][0].transport = "udp";
  D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
  if (D.42952_18 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  engine_6->ice_out.cands[0][0].component_id = 1;
  D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
  D.42955_20 = 329569 - D.42952_19;
  D.42956_21 = D.42955_20 * 2;
  D.42957_22 = (uint32_t) D.42956_21;
  engine_6->ice_out.cands[0][0].priority = D.42957_22;

<bb 19>:
  # DEBUG s => ip_23(D)
  if (ip_23(D) == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 20>:
  D.47293_66 = *ip_23(D);
  if (D.47293_66 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;

<bb 21>:

<bb 22>:
  # D.47292_67 = PHI <1(19), 1(20), 0(21)>
  if (D.47292_67 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);
  engine_6->ice_out.cands[0][0].con_addr = D.42961_25;

<bb 24>:
  if (port_26(D) != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  engine_6->ice_out.cands[0][0].con_port = port_26(D);

<bb 26>:
  engine_6->ice_out.cands[0][0].generation = "0";
  engine_6->ice_out.cands[0][0].ready = 1;

<bb 27>:
  return;

}



;; Function get_channels (get_channels)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");

Marking useful stmt: D.42979_4 = switch_true (D.42978_3);

Marking useful stmt: return dft_1;


Processing worklist:
processing: return dft_1;

marking necessary through dft_1 stmt dft_1 = PHI <2(3), dft_2(6)>
processing: dft_1 = PHI <2(3), dft_2(6)>

marking necessary through dft_2 stmt dft_2 = PHI <dft_8(D)(5), 1(4)>
Marking useful stmt: if (D.42979_4 == 0)

Marking useful stmt: if (D.42982_6 == 0)

processing: if (D.42982_6 == 0)

marking necessary through D.42982_6 stmt D.42982_6 = strcasecmp (name_5(D), "opus");
processing: D.42982_6 = strcasecmp (name_5(D), "opus");

processing: if (D.42979_4 == 0)

processing: dft_2 = PHI <dft_8(D)(5), 1(4)>

Marking useful stmt: if (dft_8(D) != 0)

processing: if (dft_8(D) != 0)

processing: D.42979_4 = switch_true (D.42978_3);

processing: D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");


Eliminating unnecessary statements:
Deleting : dft_9 = dft_8(D);

Deleting : dft_11 = dft_2;

Removed 2 of 9 statements (22%)
Removed 0 of 2 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 

}
get_channels (const char * name, int dft)
{
  int D.42982;
  int D.42979;
  char * D.42978;

<bb 2>:
  D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");
  D.42979_4 = switch_true (D.42978_3);
  if (D.42979_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.42982_6 = strcasecmp (name_5(D), "opus");
  if (D.42982_6 == 0)
    goto <bb 7>;
  else
    goto <bb 4>;

<bb 4>:
  if (dft_8(D) != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:

<bb 6>:
  # dft_2 = PHI <dft_8(D)(5), 1(4)>

<bb 7>:
  # dft_1 = PHI <2(3), dft_2(6)>
  return dft_1;

}



;; Function generate_local_fingerprint (generate_local_fingerprint)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: # DEBUG engine => engine_5

Marking useful stmt: engine_5->local_dtls_fingerprint.type = D.42996_8;

Marking useful stmt: engine_5->local_dtls_fingerprint.type = "sha-256";

Marking useful stmt: switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);

Marking useful stmt: if (D.42993_6 == 0)

marking necessary through D.43000_9 stmt D.43000_9 = &engine_5->local_dtls_fingerprint;
processing: D.43000_9 = &engine_5->local_dtls_fingerprint;

marking necessary through engine_5 stmt engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};
processing: engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};

processing: if (D.42993_6 == 0)

marking necessary through D.42993_6 stmt D.42993_6 = engine_5->local_dtls_fingerprint.len;
processing: D.42993_6 = engine_5->local_dtls_fingerprint.len;

processing: engine_5->local_dtls_fingerprint.type = "sha-256";

Marking useful stmt: if (D.42996_7 != 0B)

processing: if (D.42996_7 != 0B)

marking necessary through D.42996_7 stmt D.42996_7 = engine_5->remote_dtls_fingerprint.type;
processing: D.42996_7 = engine_5->remote_dtls_fingerprint.type;

processing: engine_5->local_dtls_fingerprint.type = D.42996_8;

marking necessary through D.42996_8 stmt D.42996_8 = engine_5->remote_dtls_fingerprint.type;
processing: D.42996_8 = engine_5->remote_dtls_fingerprint.type;


Eliminating unnecessary statements:
Removed 0 of 12 statements (0%)
Removed 0 of 1 PHI nodes (0%)
generate_local_fingerprint (struct switch_media_handle_t * smh, switch_media_type_t type)
{
  struct switch_rtp_engine_t * engine;
  struct dtls_fingerprint_t * D.43000;
  char * D.42996;
  uint32_t D.42993;
  unsigned int D.42992;

<bb 2>:
  engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_5
  D.42993_6 = engine_5->local_dtls_fingerprint.len;
  if (D.42993_6 == 0)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 3>:
  D.42996_7 = engine_5->remote_dtls_fingerprint.type;
  if (D.42996_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.42996_8 = engine_5->remote_dtls_fingerprint.type;
  engine_5->local_dtls_fingerprint.type = D.42996_8;
  goto <bb 6>;

<bb 5>:
  engine_5->local_dtls_fingerprint.type = "sha-256";

<bb 6>:
  D.43000_9 = &engine_5->local_dtls_fingerprint;
  switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);

<bb 7>:
  return;

}



;; Function start_video_thread (start_video_thread)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Marking useful stmt: pool_3 = switch_core_session_get_pool (session_2(D));

Marking useful stmt: # DEBUG pool => pool_3

Marking useful stmt: # DEBUG v_engine => 0B

Marking useful stmt: # DEBUG smh => smh_5

Marking useful stmt: # DEBUG D#3 => &smh_5->engines[1]

Marking useful stmt: # DEBUG v_engine => D#3

Marking useful stmt: D.43801_10 = switch_core_session_get_channel (session_2(D));

Marking useful stmt: D.43802_11 = switch_channel_get_name (D.43801_10);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);

Marking useful stmt: switch_rtp_set_default_payload (D.43803_12, D.43805_14);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);

Marking useful stmt: switch_threadattr_create (&thd_attr, pool_3);

Marking useful stmt: switch_threadattr_stacksize_set (thd_attr.69_15, 245760);

Marking useful stmt: switch_thread_cond_create (D.43807_16, pool_3);

Marking useful stmt: switch_mutex_init (D.43808_17, 1, pool_3);

Marking useful stmt: switch_mutex_init (D.43809_18, 1, pool_3);

Marking useful stmt: D.43812_22 = switch_core_session_get_pool (session_2(D));

Marking useful stmt: switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);

Marking useful stmt: return D.43797_1;


Processing worklist:
processing: return D.43797_1;

marking necessary through D.43797_1 stmt D.43797_1 = PHI <1(2), 1(3), 0(4)>
processing: D.43797_1 = PHI <1(2), 1(3), 0(4)>

Marking useful stmt: if (smh_5 == 0B)

Marking useful stmt: if (D.43798_8 != 0B)

processing: if (D.43798_8 != 0B)

marking necessary through D.43798_8 stmt D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
processing: D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;

marking necessary through smh_5 stmt smh_5 = session_2(D)->media_handle;
marking necessary through .MEM_25 stmt thd_attr = 0B;
processing: thd_attr = 0B;

processing: smh_5 = session_2(D)->media_handle;

processing: if (smh_5 == 0B)

processing: switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);

marking necessary through D.43810_19 stmt D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
marking necessary through thd_attr.69_20 stmt thd_attr.69_20 = thd_attr;
marking necessary through D.43811_21 stmt D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;
processing: D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;

processing: thd_attr.69_20 = thd_attr;

processing: D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;

processing: D.43812_22 = switch_core_session_get_pool (session_2(D));

processing: switch_mutex_init (D.43809_18, 1, pool_3);

marking necessary through D.43809_18 stmt D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];
processing: D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];

processing: switch_mutex_init (D.43808_17, 1, pool_3);

marking necessary through D.43808_17 stmt D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;
processing: D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;

processing: switch_thread_cond_create (D.43807_16, pool_3);

marking necessary through D.43807_16 stmt D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;
processing: D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;

processing: switch_threadattr_stacksize_set (thd_attr.69_15, 245760);

marking necessary through thd_attr.69_15 stmt thd_attr.69_15 = thd_attr;
processing: thd_attr.69_15 = thd_attr;

processing: switch_threadattr_create (&thd_attr, pool_3);

processing: MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);

processing: switch_rtp_set_default_payload (D.43803_12, D.43805_14);

marking necessary through D.43803_12 stmt D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;
marking necessary through D.43805_14 stmt D.43805_14 = D.43804_13->agreed_pt;
processing: D.43805_14 = D.43804_13->agreed_pt;

marking necessary through D.43804_13 stmt D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;
processing: D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;

processing: D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);

processing: D.43802_11 = switch_channel_get_name (D.43801_10);

processing: D.43801_10 = switch_core_session_get_channel (session_2(D));

processing: pool_3 = switch_core_session_get_pool (session_2(D));


Eliminating unnecessary statements:
Removed 0 of 34 statements (0%)
Removed 0 of 1 PHI nodes (0%)
start_video_thread (struct switch_core_session_t * session)
{
  static const char __func__[19] = "start_video_thread";
  struct switch_media_handle_t * smh;
  struct switch_memory_pool_t * pool;
  struct switch_threadattr_t * thd_attr;
  struct switch_memory_pool_t * D.43812;
  struct media_helper * D.43811;
  struct switch_thread_t * * D.43810;
  struct switch_mutex_t * * D.43809;
  struct switch_mutex_t * * D.43808;
  struct switch_thread_cond_t * * D.43807;
  struct switch_threadattr_t * thd_attr.69;
  switch_payload_t D.43805;
  struct payload_map_t * D.43804;
  struct switch_rtp_t * D.43803;
  char * D.43802;
  struct switch_channel_t * D.43801;
  struct switch_thread_t * D.43798;
  switch_status_t D.43797;

<bb 2>:
  thd_attr = 0B;
  pool_3 = switch_core_session_get_pool (session_2(D));
  # DEBUG pool => pool_3
  # DEBUG v_engine => 0B
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

<bb 3>:
  # DEBUG D#3 => &smh_5->engines[1]
  # DEBUG v_engine => D#3
  D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  if (D.43798_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:
  D.43801_10 = switch_core_session_get_channel (session_2(D));
  D.43802_11 = switch_channel_get_name (D.43801_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);
  D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;
  D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;
  D.43805_14 = D.43804_13->agreed_pt;
  switch_rtp_set_default_payload (D.43803_12, D.43805_14);
  MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);
  switch_threadattr_create (&thd_attr, pool_3);
  thd_attr.69_15 = thd_attr;
  switch_threadattr_stacksize_set (thd_attr.69_15, 245760);
  D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;
  switch_thread_cond_create (D.43807_16, pool_3);
  D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;
  switch_mutex_init (D.43808_17, 1, pool_3);
  D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];
  switch_mutex_init (D.43809_18, 1, pool_3);
  D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  thd_attr.69_20 = thd_attr;
  D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;
  D.43812_22 = switch_core_session_get_pool (session_2(D));
  switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);

<bb 5>:
  # D.43797_1 = PHI <1(2), 1(3), 0(4)>
  return D.43797_1;

}



;; Function video_helper_thread (video_helper_thread)

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 29 27 28
;;
;; Loop 1
;;  header 29, latch 26
;;  depth 1, outer 0
;;  nodes: 29 26 25 13 16 19 23 24 22 20 21 17 18 14 15 12 6 11 9 10 7 8
;; 2 succs { 28 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 29 }
;; 6 succs { 7 12 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 26 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 26 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 26 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 29 }
;; 29 succs { 6 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
Marking useful stmt: # DEBUG mh => obj_5(D)

Marking useful stmt: # DEBUG session => session_7

Marking useful stmt: channel_8 = switch_core_session_get_channel (session_7);

Marking useful stmt: # DEBUG channel => channel_8

Marking useful stmt: # DEBUG smh => smh_9

Marking useful stmt: switch_core_session_read_lock (session_7);

Marking useful stmt: MEM[(struct media_helper *)obj_5(D)].up = 1;

Marking useful stmt: switch_mutex_lock (D.43817_11);

Marking useful stmt: D.43819_13 = switch_channel_get_name (D.43818_12);

Marking useful stmt: D.43821_14 = switch_channel_test_flag (channel_8, 115);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);

Marking useful stmt: switch_core_session_refresh_video (session_7);

Marking useful stmt: D.43825_18 = switch_channel_test_flag (channel_8, 113);

Marking useful stmt: D.43828_20 = switch_channel_get_name (D.43818_19);

Marking useful stmt: D.43830_21 = switch_channel_test_flag (channel_8, 115);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);

Marking useful stmt: switch_thread_cond_wait (D.43834_24, D.43817_25);

Marking useful stmt: D.43835_27 = switch_channel_get_name (D.43818_26);

Marking useful stmt: D.43837_28 = switch_channel_test_flag (channel_8, 115);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);

Marking useful stmt: switch_core_session_refresh_video (session_7);

Marking useful stmt: D.43841_31 = switch_channel_test_flag (channel_8, 113);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.43844_33 = switch_channel_test_flag (D.43818_32, 1);

Marking useful stmt: D.43847_35 = switch_channel_test_flag (D.43818_34, 3);

Marking useful stmt: switch_sleep (10000);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);

Marking useful stmt: # DEBUG status => status_36

Marking useful stmt: switch_cond_next ();

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.43857_40 = switch_channel_test_flag (channel_8, 70);

Marking useful stmt: switch_core_session_refresh_video (session_7);

Marking useful stmt: switch_channel_clear_flag (channel_8, 70);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.43867_46 = switch_channel_test_flag (channel_8, 115);

Marking useful stmt: switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);

Marking useful stmt: D.43870_17 = switch_channel_get_state (channel_8);

Marking useful stmt: D.43871_49 = switch_channel_get_name (D.43818_48);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);

Marking useful stmt: switch_mutex_unlock (D.43817_50);

Marking useful stmt: switch_core_session_rwunlock (session_7);

Marking useful stmt: MEM[(struct media_helper *)obj_5(D)].up = 0;

Marking useful stmt: return 0B;

can not prove finiteness of loop 1
Marking useful stmt: if (D.43870_17 <= 9)


Processing worklist:
processing: if (D.43870_17 <= 9)

Marking useful stmt: if (smh_9 == 0B)

processing: if (smh_9 == 0B)

marking necessary through smh_9 stmt smh_9 = session_7->media_handle;
processing: smh_9 = session_7->media_handle;

marking necessary through session_7 stmt session_7 = MEM[(struct media_helper *)obj_5(D)].session;
processing: session_7 = MEM[(struct media_helper *)obj_5(D)].session;

processing: return 0B;

processing: MEM[(struct media_helper *)obj_5(D)].up = 0;

processing: switch_core_session_rwunlock (session_7);

processing: switch_mutex_unlock (D.43817_50);

marking necessary through D.43817_50 stmt D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
processing: D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);

processing: D.43871_49 = switch_channel_get_name (D.43818_48);

marking necessary through D.43818_48 stmt D.43818_48 = session_7->channel;
processing: D.43818_48 = session_7->channel;

processing: D.43870_17 = switch_channel_get_state (channel_8);

processing: switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);

Marking useful stmt: if (D.43867_46 != 0)

marking necessary through read_frame.73_47 stmt read_frame.73_47 = read_frame;
processing: read_frame.73_47 = read_frame;

processing: if (D.43867_46 != 0)

Marking useful stmt: if (D.43863_44 != 0)

processing: if (D.43863_44 != 0)

Marking useful stmt: if (D.43852_39 != 0)

Marking useful stmt: if (status_36 != 10)

marking necessary through D.43863_44 stmt D.43863_44 = D.43862_43 & 1;
processing: D.43863_44 = D.43862_43 & 1;

marking necessary through D.43862_43 stmt D.43862_43 = (int) D.43861_42;
processing: D.43862_43 = (int) D.43861_42;

marking necessary through D.43861_42 stmt D.43861_42 = read_frame.73_41->flags;
processing: D.43861_42 = read_frame.73_41->flags;

marking necessary through read_frame.73_41 stmt read_frame.73_41 = read_frame;
processing: read_frame.73_41 = read_frame;

processing: if (status_36 != 10)

processing: if (D.43852_39 != 0)

Marking useful stmt: if (D.43844_33 == 0)

Marking useful stmt: if (D.43847_35 == 0)

marking necessary through D.43852_39 stmt D.43852_39 = D.43850_37 && D.43851_38;
processing: D.43852_39 = D.43850_37 && D.43851_38;

marking necessary through D.43850_37 stmt D.43850_37 = status_36 != 0;
marking necessary through D.43851_38 stmt D.43851_38 = status_36 != 11;
processing: D.43851_38 = status_36 != 11;

processing: D.43850_37 = status_36 != 0;

processing: if (D.43847_35 == 0)

processing: if (D.43844_33 == 0)

Marking useful stmt: if (D.43841_31 != 0)

processing: if (D.43841_31 != 0)

processing: D.43867_46 = switch_channel_test_flag (channel_8, 115);

processing: switch_channel_clear_flag (channel_8, 70);

Marking useful stmt: if (D.43857_40 != 0)

processing: if (D.43857_40 != 0)

processing: switch_core_session_refresh_video (session_7);

processing: D.43857_40 = switch_channel_test_flag (channel_8, 70);

processing: switch_cond_next ();

processing: status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);

processing: switch_sleep (10000);

processing: D.43847_35 = switch_channel_test_flag (D.43818_34, 3);

marking necessary through D.43818_34 stmt D.43818_34 = session_7->channel;
processing: D.43818_34 = session_7->channel;

processing: D.43844_33 = switch_channel_test_flag (D.43818_32, 1);

marking necessary through D.43818_32 stmt D.43818_32 = session_7->channel;
processing: D.43818_32 = session_7->channel;

processing: D.43841_31 = switch_channel_test_flag (channel_8, 113);

processing: switch_core_session_refresh_video (session_7);

Marking useful stmt: if (D.43825_18 != 0)

processing: if (D.43825_18 != 0)

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);

marking necessary through iftmp.72_4 stmt iftmp.72_4 = PHI <"on"(9), "off"(10)>
processing: iftmp.72_4 = PHI <"on"(9), "off"(10)>

Marking useful stmt: if (D.43837_28 != 0)

processing: if (D.43837_28 != 0)

processing: D.43837_28 = switch_channel_test_flag (channel_8, 115);

processing: D.43835_27 = switch_channel_get_name (D.43818_26);

marking necessary through D.43818_26 stmt D.43818_26 = session_7->channel;
processing: D.43818_26 = session_7->channel;

processing: switch_thread_cond_wait (D.43834_24, D.43817_25);

marking necessary through D.43834_24 stmt D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;
marking necessary through D.43817_25 stmt D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
processing: D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;

processing: D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);

marking necessary through iftmp.71_3 stmt iftmp.71_3 = PHI <"on"(7), "off"(8)>
processing: iftmp.71_3 = PHI <"on"(7), "off"(8)>

Marking useful stmt: if (D.43830_21 != 0)

processing: if (D.43830_21 != 0)

processing: D.43830_21 = switch_channel_test_flag (channel_8, 115);

processing: D.43828_20 = switch_channel_get_name (D.43818_19);

marking necessary through D.43818_19 stmt D.43818_19 = session_7->channel;
processing: D.43818_19 = session_7->channel;

processing: D.43825_18 = switch_channel_test_flag (channel_8, 113);

processing: switch_core_session_refresh_video (session_7);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);

marking necessary through iftmp.70_2 stmt iftmp.70_2 = PHI <"on"(3), "off"(4)>
processing: iftmp.70_2 = PHI <"on"(3), "off"(4)>

Marking useful stmt: if (D.43821_14 != 0)

processing: if (D.43821_14 != 0)

processing: D.43821_14 = switch_channel_test_flag (channel_8, 115);

processing: D.43819_13 = switch_channel_get_name (D.43818_12);

marking necessary through D.43818_12 stmt D.43818_12 = session_7->channel;
processing: D.43818_12 = session_7->channel;

processing: switch_mutex_lock (D.43817_11);

marking necessary through D.43817_11 stmt D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
processing: D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;

processing: MEM[(struct media_helper *)obj_5(D)].up = 1;

processing: switch_core_session_read_lock (session_7);

processing: channel_8 = switch_core_session_get_channel (session_7);


Eliminating unnecessary statements:
Deleting : mh_6 = obj_5(D);

Removed 1 of 79 statements (1%)
Removed 0 of 8 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct media_helper * mh; (unused)
  struct switch_core_session_t * session;
  struct switch_channel_t * channel;
  switch_status_t status;
  struct switch_frame_t * read_frame;
  struct switch_media_handle_t * smh;
  static const char __func__[20] = "video_helper_thread";

}
video_helper_thread (struct switch_thread_t * thread, void * obj)
{
  static const char __func__[20] = "video_helper_thread";
  struct switch_media_handle_t * smh;
  struct switch_frame_t * read_frame;
  switch_status_t status;
  struct switch_channel_t * channel;
  struct switch_core_session_t * session;
  char * D.43871;
  switch_channel_state_t D.43870;
  uint32_t D.43867;
  int D.43863;
  int D.43862;
  switch_frame_flag_t D.43861;
  struct switch_frame_t * read_frame.73;
  uint32_t D.43857;
  _Bool D.43852;
  _Bool D.43851;
  _Bool D.43850;
  uint32_t D.43847;
  uint32_t D.43844;
  uint32_t D.43841;
  uint32_t D.43837;
  char * iftmp.72;
  char * D.43835;
  struct switch_thread_cond_t * D.43834;
  uint32_t D.43830;
  char * iftmp.71;
  char * D.43828;
  uint32_t D.43825;
  uint32_t D.43821;
  char * iftmp.70;
  char * D.43819;
  struct switch_channel_t * D.43818;
  struct switch_mutex_t * D.43817;

<bb 2>:
  # DEBUG mh => obj_5(D)
  session_7 = MEM[(struct media_helper *)obj_5(D)].session;
  # DEBUG session => session_7
  channel_8 = switch_core_session_get_channel (session_7);
  # DEBUG channel => channel_8
  smh_9 = session_7->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 29>;
  else
    goto <bb 3>;

<bb 3>:
  switch_core_session_read_lock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 1;
  D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_lock (D.43817_11);
  D.43818_12 = session_7->channel;
  D.43819_13 = switch_channel_get_name (D.43818_12);
  D.43821_14 = switch_channel_test_flag (channel_8, 115);
  if (D.43821_14 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:

<bb 5>:
  # iftmp.70_2 = PHI <"on"(3), "off"(4)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);
  switch_core_session_refresh_video (session_7);
  goto <bb 27>;

<bb 6>:
  D.43825_18 = switch_channel_test_flag (channel_8, 113);
  if (D.43825_18 != 0)
    goto <bb 7>;
  else
    goto <bb 12>;

<bb 7>:
  D.43818_19 = session_7->channel;
  D.43828_20 = switch_channel_get_name (D.43818_19);
  D.43830_21 = switch_channel_test_flag (channel_8, 115);
  if (D.43830_21 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

<bb 8>:

<bb 9>:
  # iftmp.71_3 = PHI <"on"(7), "off"(8)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);
  D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;
  D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_thread_cond_wait (D.43834_24, D.43817_25);
  D.43818_26 = session_7->channel;
  D.43835_27 = switch_channel_get_name (D.43818_26);
  D.43837_28 = switch_channel_test_flag (channel_8, 115);
  if (D.43837_28 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # iftmp.72_4 = PHI <"on"(9), "off"(10)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);
  switch_core_session_refresh_video (session_7);

<bb 12>:
  D.43841_31 = switch_channel_test_flag (channel_8, 113);
  if (D.43841_31 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 26>;

<bb 14>:
  D.43818_32 = session_7->channel;
  D.43844_33 = switch_channel_test_flag (D.43818_32, 1);
  if (D.43844_33 == 0)
    goto <bb 15>;
  else
    goto <bb 17>;

<bb 15>:
  D.43818_34 = session_7->channel;
  D.43847_35 = switch_channel_test_flag (D.43818_34, 3);
  if (D.43847_35 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  switch_sleep (10000);
  // predicted unlikely by continue predictor.
  goto <bb 26>;

<bb 17>:
  status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);
  # DEBUG status => status_36
  D.43850_37 = status_36 != 0;
  D.43851_38 = status_36 != 11;
  D.43852_39 = D.43850_37 && D.43851_38;
  if (D.43852_39 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

<bb 18>:
  if (status_36 != 10)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  switch_cond_next ();
  // predicted unlikely by continue predictor.
  goto <bb 26>;

<bb 20>:
  D.43857_40 = switch_channel_test_flag (channel_8, 70);
  if (D.43857_40 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  switch_core_session_refresh_video (session_7);
  switch_channel_clear_flag (channel_8, 70);

<bb 22>:
  read_frame.73_41 = read_frame;
  D.43861_42 = read_frame.73_41->flags;
  D.43862_43 = (int) D.43861_42;
  D.43863_44 = D.43862_43 & 1;
  if (D.43863_44 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  // predicted unlikely by continue predictor.
  goto <bb 26>;

<bb 24>:
  D.43867_46 = switch_channel_test_flag (channel_8, 115);
  if (D.43867_46 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  read_frame.73_47 = read_frame;
  switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);

<bb 26>:

<bb 27>:
  D.43870_17 = switch_channel_get_state (channel_8);
  if (D.43870_17 <= 9)
    goto <bb 6>;
  else
    goto <bb 28>;

<bb 28>:
  D.43818_48 = session_7->channel;
  D.43871_49 = switch_channel_get_name (D.43818_48);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);
  D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_unlock (D.43817_50);
  switch_core_session_rwunlock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 0;

<bb 29>:
  return 0B;

}



;; Function switch_core_media_process_udptl (switch_core_media_process_udptl)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
;;
;; Loop 1
;;  header 49, latch 48
;;  depth 1, outer 0
;;  nodes: 49 48 17 20 24 28 32 35 38 41 44 45 46 47 42 43 39 40 36 37 33 34 29 25 21 18 19 15 16 30 31 26 27 22 23
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 14 }
;; 10 succs { 11 14 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 49 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 48 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 48 }
;; 21 succs { 22 25 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 48 }
;; 25 succs { 26 29 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 48 }
;; 29 succs { 30 33 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 48 }
;; 33 succs { 34 36 }
;; 34 succs { 35 36 }
;; 35 succs { 48 }
;; 36 succs { 37 39 }
;; 37 succs { 38 39 }
;; 38 succs { 48 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 48 }
;; 42 succs { 43 45 }
;; 43 succs { 44 45 }
;; 44 succs { 48 }
;; 45 succs { 46 48 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 }
;; 49 succs { 15 50 }
;; 50 succs { 1 }
Marking useful stmt: t38_options_5 = switch_channel_get_private (D.45323_4, "t38_options");

Marking useful stmt: # DEBUG t38_options => t38_options_5

Marking useful stmt: t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);

Marking useful stmt: # DEBUG t38_options => t38_options_6

Marking useful stmt: t38_options_6->T38FaxVersion = 0;

Marking useful stmt: t38_options_6->T38MaxBitRate = 14400;

Marking useful stmt: D.45326_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);

Marking useful stmt: t38_options_6->T38FaxRateManagement = D.45326_7;

Marking useful stmt: D.45327_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);

Marking useful stmt: t38_options_6->T38FaxUdpEC = D.45327_8;

Marking useful stmt: t38_options_6->T38FaxMaxBuffer = 500;

Marking useful stmt: t38_options_6->T38FaxMaxDatagram = 500;

Marking useful stmt: # DEBUG t38_options => t38_options_1

Marking useful stmt: t38_options_1->remote_port = D.45329_11;

Marking useful stmt: D.45334_16 = switch_core_perform_session_strdup (session_3(D), D.45333_15, "src/switch_core_media.c", &__func__, 383);

Marking useful stmt: t38_options_1->sdp_o_line = D.45334_16;

Marking useful stmt: t38_options_1->sdp_o_line = "unknown";

Marking useful stmt: D.45342_22 = switch_core_perform_session_strdup (session_3(D), D.45340_21, "src/switch_core_media.c", &__func__, 389);

Marking useful stmt: t38_options_1->remote_ip = D.45342_22;

Marking useful stmt: D.45351_28 = switch_core_perform_session_strdup (session_3(D), D.45348_27, "src/switch_core_media.c", &__func__, 391);

Marking useful stmt: t38_options_1->remote_ip = D.45351_28;

Marking useful stmt: # DEBUG attr => attr_29

Marking useful stmt: # DEBUG __nptr => D.45357_33

Marking useful stmt: D.47301_136 = strtol (D.45357_33, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxVersion = D.45360_35;

Marking useful stmt: # DEBUG __nptr => D.45357_39

Marking useful stmt: D.47304_137 = strtol (D.45357_39, 0B, 10);

Marking useful stmt: t38_options_1->T38MaxBitRate = D.45367_41;

Marking useful stmt: # DEBUG nptr => D.45357_44

Marking useful stmt: # DEBUG dft => 1

Marking useful stmt: # DEBUG __nptr => D.45357_44

Marking useful stmt: dft_138 = strtol (D.45357_44, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxFillBitRemoval = D.45372_46;

Marking useful stmt: # DEBUG nptr => D.45357_49

Marking useful stmt: # DEBUG dft => 1

Marking useful stmt: # DEBUG __nptr => D.45357_49

Marking useful stmt: dft_140 = strtol (D.45357_49, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxTranscodingMMR = D.45378_51;

Marking useful stmt: # DEBUG nptr => D.45357_54

Marking useful stmt: # DEBUG dft => 1

Marking useful stmt: # DEBUG __nptr => D.45357_54

Marking useful stmt: dft_142 = strtol (D.45357_54, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxTranscodingJBIG = D.45384_56;

Marking useful stmt: D.45391_61 = switch_core_perform_session_strdup (session_3(D), D.45357_60, "src/switch_core_media.c", &__func__, 406);

Marking useful stmt: t38_options_1->T38FaxRateManagement = D.45391_61;

Marking useful stmt: # DEBUG __nptr => D.45357_65

Marking useful stmt: D.47316_144 = strtol (D.45357_65, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxMaxBuffer = D.45398_67;

Marking useful stmt: # DEBUG __nptr => D.45357_71

Marking useful stmt: D.47319_145 = strtol (D.45357_71, 0B, 10);

Marking useful stmt: t38_options_1->T38FaxMaxDatagram = D.45405_73;

Marking useful stmt: D.45411_78 = switch_core_perform_session_strdup (session_3(D), D.45357_77, "src/switch_core_media.c", &__func__, 412);

Marking useful stmt: t38_options_1->T38FaxUdpEC = D.45411_78;

Marking useful stmt: D.45417_83 = switch_core_perform_session_strdup (session_3(D), D.45357_82, "src/switch_core_media.c", &__func__, 414);

Marking useful stmt: t38_options_1->T38VendorInfo = D.45417_83;

Marking useful stmt: # DEBUG attr => attr_84

Marking useful stmt: # DEBUG attr => attr_2

Marking useful stmt: switch_channel_set_variable_var_check (D.45323_85, "has_t38", "true", 1);

Marking useful stmt: switch_channel_set_private (D.45323_86, "t38_options", t38_options_1);

Marking useful stmt: switch_channel_set_app_flag_key ("T38", D.45323_87, 2);

Marking useful stmt: switch_channel_execute_on (D.45323_88, "sip_execute_on_image");

Marking useful stmt: switch_channel_api_on (D.45323_89, "sip_api_on_image");

Marking useful stmt: return t38_options_1;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_29(14), attr_84(48)>
)
  (init_cond = attr_29))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_29(14), attr_84(48)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
can not prove finiteness of loop 1
Marking useful stmt: if (attr_2 != 0B)


Processing worklist:
processing: if (attr_2 != 0B)

marking necessary through attr_2 stmt attr_2 = PHI <attr_29(14), attr_84(48)>
processing: attr_2 = PHI <attr_29(14), attr_84(48)>

marking necessary through attr_29 stmt attr_29 = m_9(D)->m_attributes;
marking necessary through attr_84 stmt attr_84 = attr_2->a_next;
processing: attr_84 = attr_2->a_next;

processing: attr_29 = m_9(D)->m_attributes;

processing: return t38_options_1;

marking necessary through t38_options_1 stmt t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>
processing: t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>

Marking useful stmt: if (t38_options_5 == 0B)

processing: if (t38_options_5 == 0B)

processing: switch_channel_api_on (D.45323_89, "sip_api_on_image");

marking necessary through D.45323_89 stmt D.45323_89 = session_3(D)->channel;
processing: D.45323_89 = session_3(D)->channel;

processing: switch_channel_execute_on (D.45323_88, "sip_execute_on_image");

marking necessary through D.45323_88 stmt D.45323_88 = session_3(D)->channel;
processing: D.45323_88 = session_3(D)->channel;

processing: switch_channel_set_app_flag_key ("T38", D.45323_87, 2);

marking necessary through D.45323_87 stmt D.45323_87 = session_3(D)->channel;
processing: D.45323_87 = session_3(D)->channel;

processing: switch_channel_set_private (D.45323_86, "t38_options", t38_options_1);

marking necessary through D.45323_86 stmt D.45323_86 = session_3(D)->channel;
processing: D.45323_86 = session_3(D)->channel;

processing: switch_channel_set_variable_var_check (D.45323_85, "has_t38", "true", 1);

marking necessary through D.45323_85 stmt D.45323_85 = session_3(D)->channel;
processing: D.45323_85 = session_3(D)->channel;

processing: t38_options_1->T38VendorInfo = D.45417_83;

Marking useful stmt: if (D.45357_81 != 0B)

processing: if (D.45357_81 != 0B)

Marking useful stmt: if (D.45412_80 == 0)

marking necessary through D.45357_81 stmt D.45357_81 = attr_2->a_value;
processing: D.45357_81 = attr_2->a_value;

processing: if (D.45412_80 == 0)

Marking useful stmt: if (D.45408_75 == 0)

Marking useful stmt: if (D.45357_76 != 0B)

marking necessary through D.45412_80 stmt D.45412_80 = strcasecmp (D.45354_79, "T38VendorInfo");
processing: D.45412_80 = strcasecmp (D.45354_79, "T38VendorInfo");

marking necessary through D.45354_79 stmt D.45354_79 = attr_2->a_name;
processing: D.45354_79 = attr_2->a_name;

processing: if (D.45357_76 != 0B)

marking necessary through D.45357_76 stmt D.45357_76 = attr_2->a_value;
processing: D.45357_76 = attr_2->a_value;

processing: if (D.45408_75 == 0)

Marking useful stmt: if (D.45401_69 == 0)

Marking useful stmt: if (D.45357_70 != 0B)

marking necessary through D.45408_75 stmt D.45408_75 = strcasecmp (D.45354_74, "T38FaxUdpEC");
processing: D.45408_75 = strcasecmp (D.45354_74, "T38FaxUdpEC");

marking necessary through D.45354_74 stmt D.45354_74 = attr_2->a_name;
processing: D.45354_74 = attr_2->a_name;

processing: if (D.45357_70 != 0B)

marking necessary through D.45357_70 stmt D.45357_70 = attr_2->a_value;
processing: D.45357_70 = attr_2->a_value;

processing: if (D.45401_69 == 0)

Marking useful stmt: if (D.45394_63 == 0)

Marking useful stmt: if (D.45357_64 != 0B)

marking necessary through D.45401_69 stmt D.45401_69 = strcasecmp (D.45354_68, "T38FaxMaxDatagram");
processing: D.45401_69 = strcasecmp (D.45354_68, "T38FaxMaxDatagram");

marking necessary through D.45354_68 stmt D.45354_68 = attr_2->a_name;
processing: D.45354_68 = attr_2->a_name;

processing: if (D.45357_64 != 0B)

marking necessary through D.45357_64 stmt D.45357_64 = attr_2->a_value;
processing: D.45357_64 = attr_2->a_value;

processing: if (D.45394_63 == 0)

Marking useful stmt: if (D.45388_58 == 0)

Marking useful stmt: if (D.45357_59 != 0B)

marking necessary through D.45394_63 stmt D.45394_63 = strcasecmp (D.45354_62, "T38FaxMaxBuffer");
processing: D.45394_63 = strcasecmp (D.45354_62, "T38FaxMaxBuffer");

marking necessary through D.45354_62 stmt D.45354_62 = attr_2->a_name;
processing: D.45354_62 = attr_2->a_name;

processing: if (D.45357_59 != 0B)

marking necessary through D.45357_59 stmt D.45357_59 = attr_2->a_value;
processing: D.45357_59 = attr_2->a_value;

processing: if (D.45388_58 == 0)

Marking useful stmt: if (D.45380_53 == 0)

marking necessary through D.45388_58 stmt D.45388_58 = strcasecmp (D.45354_57, "T38FaxRateManagement");
processing: D.45388_58 = strcasecmp (D.45354_57, "T38FaxRateManagement");

marking necessary through D.45354_57 stmt D.45354_57 = attr_2->a_name;
processing: D.45354_57 = attr_2->a_name;

processing: if (D.45380_53 == 0)

Marking useful stmt: if (D.45374_48 == 0)

marking necessary through D.45380_53 stmt D.45380_53 = strcasecmp (D.45354_52, "T38FaxTranscodingJBIG");
processing: D.45380_53 = strcasecmp (D.45354_52, "T38FaxTranscodingJBIG");

marking necessary through D.45354_52 stmt D.45354_52 = attr_2->a_name;
processing: D.45354_52 = attr_2->a_name;

processing: if (D.45374_48 == 0)

Marking useful stmt: if (D.45368_43 == 0)

marking necessary through D.45374_48 stmt D.45374_48 = strcasecmp (D.45354_47, "T38FaxTranscodingMMR");
processing: D.45374_48 = strcasecmp (D.45354_47, "T38FaxTranscodingMMR");

marking necessary through D.45354_47 stmt D.45354_47 = attr_2->a_name;
processing: D.45354_47 = attr_2->a_name;

processing: if (D.45368_43 == 0)

Marking useful stmt: if (D.45363_37 == 0)

Marking useful stmt: if (D.45357_38 != 0B)

marking necessary through D.45368_43 stmt D.45368_43 = strcasecmp (D.45354_42, "T38FaxFillBitRemoval");
processing: D.45368_43 = strcasecmp (D.45354_42, "T38FaxFillBitRemoval");

marking necessary through D.45354_42 stmt D.45354_42 = attr_2->a_name;
processing: D.45354_42 = attr_2->a_name;

processing: if (D.45357_38 != 0B)

marking necessary through D.45357_38 stmt D.45357_38 = attr_2->a_value;
processing: D.45357_38 = attr_2->a_value;

processing: if (D.45363_37 == 0)

Marking useful stmt: if (D.45355_31 == 0)

Marking useful stmt: if (D.45357_32 != 0B)

marking necessary through D.45363_37 stmt D.45363_37 = strcasecmp (D.45354_36, "T38MaxBitRate");
processing: D.45363_37 = strcasecmp (D.45354_36, "T38MaxBitRate");

marking necessary through D.45354_36 stmt D.45354_36 = attr_2->a_name;
processing: D.45354_36 = attr_2->a_name;

processing: if (D.45357_32 != 0B)

marking necessary through D.45357_32 stmt D.45357_32 = attr_2->a_value;
processing: D.45357_32 = attr_2->a_value;

processing: if (D.45355_31 == 0)

marking necessary through D.45355_31 stmt D.45355_31 = strcasecmp (D.45354_30, "T38FaxVersion");
processing: D.45355_31 = strcasecmp (D.45354_30, "T38FaxVersion");

marking necessary through D.45354_30 stmt D.45354_30 = attr_2->a_name;
processing: D.45354_30 = attr_2->a_name;

processing: D.45417_83 = switch_core_perform_session_strdup (session_3(D), D.45357_82, "src/switch_core_media.c", &__func__, 414);

marking necessary through D.45357_82 stmt D.45357_82 = attr_2->a_value;
processing: D.45357_82 = attr_2->a_value;

processing: t38_options_1->T38FaxUdpEC = D.45411_78;

processing: D.45411_78 = switch_core_perform_session_strdup (session_3(D), D.45357_77, "src/switch_core_media.c", &__func__, 412);

marking necessary through D.45357_77 stmt D.45357_77 = attr_2->a_value;
processing: D.45357_77 = attr_2->a_value;

processing: t38_options_1->T38FaxMaxDatagram = D.45405_73;

marking necessary through D.45405_73 stmt D.45405_73 = (unsigned int) D.47319_145;
processing: D.45405_73 = (unsigned int) D.47319_145;

processing: D.47319_145 = strtol (D.45357_71, 0B, 10);

marking necessary through D.45357_71 stmt D.45357_71 = attr_2->a_value;
processing: D.45357_71 = attr_2->a_value;

processing: t38_options_1->T38FaxMaxBuffer = D.45398_67;

marking necessary through D.45398_67 stmt D.45398_67 = (unsigned int) D.47316_144;
processing: D.45398_67 = (unsigned int) D.47316_144;

processing: D.47316_144 = strtol (D.45357_65, 0B, 10);

marking necessary through D.45357_65 stmt D.45357_65 = attr_2->a_value;
processing: D.45357_65 = attr_2->a_value;

processing: t38_options_1->T38FaxRateManagement = D.45391_61;

processing: D.45391_61 = switch_core_perform_session_strdup (session_3(D), D.45357_60, "src/switch_core_media.c", &__func__, 406);

marking necessary through D.45357_60 stmt D.45357_60 = attr_2->a_value;
processing: D.45357_60 = attr_2->a_value;

processing: t38_options_1->T38FaxTranscodingJBIG = D.45384_56;

marking necessary through D.45384_56 stmt D.45384_56 = (switch_bool_t) dft_143;
processing: D.45384_56 = (switch_bool_t) dft_143;

marking necessary through dft_143 stmt dft_143 = PHI <1(30), dft_142(31)>
processing: dft_143 = PHI <1(30), dft_142(31)>

Marking useful stmt: if (D.45357_54 != 0B)

processing: if (D.45357_54 != 0B)

marking necessary through D.45357_54 stmt D.45357_54 = attr_2->a_value;
processing: D.45357_54 = attr_2->a_value;

processing: dft_142 = strtol (D.45357_54, 0B, 10);

processing: t38_options_1->T38FaxTranscodingMMR = D.45378_51;

marking necessary through D.45378_51 stmt D.45378_51 = (switch_bool_t) dft_141;
processing: D.45378_51 = (switch_bool_t) dft_141;

marking necessary through dft_141 stmt dft_141 = PHI <1(26), dft_140(27)>
processing: dft_141 = PHI <1(26), dft_140(27)>

Marking useful stmt: if (D.45357_49 != 0B)

processing: if (D.45357_49 != 0B)

marking necessary through D.45357_49 stmt D.45357_49 = attr_2->a_value;
processing: D.45357_49 = attr_2->a_value;

processing: dft_140 = strtol (D.45357_49, 0B, 10);

processing: t38_options_1->T38FaxFillBitRemoval = D.45372_46;

marking necessary through D.45372_46 stmt D.45372_46 = (switch_bool_t) dft_139;
processing: D.45372_46 = (switch_bool_t) dft_139;

marking necessary through dft_139 stmt dft_139 = PHI <1(22), dft_138(23)>
processing: dft_139 = PHI <1(22), dft_138(23)>

Marking useful stmt: if (D.45357_44 != 0B)

processing: if (D.45357_44 != 0B)

marking necessary through D.45357_44 stmt D.45357_44 = attr_2->a_value;
processing: D.45357_44 = attr_2->a_value;

processing: dft_138 = strtol (D.45357_44, 0B, 10);

processing: t38_options_1->T38MaxBitRate = D.45367_41;

marking necessary through D.45367_41 stmt D.45367_41 = (unsigned int) D.47304_137;
processing: D.45367_41 = (unsigned int) D.47304_137;

processing: D.47304_137 = strtol (D.45357_39, 0B, 10);

marking necessary through D.45357_39 stmt D.45357_39 = attr_2->a_value;
processing: D.45357_39 = attr_2->a_value;

processing: t38_options_1->T38FaxVersion = D.45360_35;

marking necessary through D.45360_35 stmt D.45360_35 = (short unsigned int) D.47301_136;
processing: D.45360_35 = (short unsigned int) D.47301_136;

processing: D.47301_136 = strtol (D.45357_33, 0B, 10);

marking necessary through D.45357_33 stmt D.45357_33 = attr_2->a_value;
processing: D.45357_33 = attr_2->a_value;

processing: t38_options_1->remote_ip = D.45351_28;

Marking useful stmt: if (D.45348_25 != 0B)

processing: if (D.45348_25 != 0B)

Marking useful stmt: if (D.45345_23 != 0B)

marking necessary through D.45348_25 stmt D.45348_25 = D.45345_24->c_address;
processing: D.45348_25 = D.45345_24->c_address;

marking necessary through D.45345_24 stmt D.45345_24 = sdp_12(D)->sdp_connection;
processing: D.45345_24 = sdp_12(D)->sdp_connection;

processing: if (D.45345_23 != 0B)

Marking useful stmt: if (sdp_12(D) != 0B)

marking necessary through D.45345_23 stmt D.45345_23 = sdp_12(D)->sdp_connection;
processing: D.45345_23 = sdp_12(D)->sdp_connection;

processing: if (sdp_12(D) != 0B)

Marking useful stmt: if (D.45338_17 != 0B)

Marking useful stmt: if (D.45340_19 != 0B)

processing: if (D.45340_19 != 0B)

marking necessary through D.45340_19 stmt D.45340_19 = D.45338_18->c_address;
processing: D.45340_19 = D.45338_18->c_address;

marking necessary through D.45338_18 stmt D.45338_18 = m_9(D)->m_connections;
processing: D.45338_18 = m_9(D)->m_connections;

processing: if (D.45338_17 != 0B)

marking necessary through D.45338_17 stmt D.45338_17 = m_9(D)->m_connections;
processing: D.45338_17 = m_9(D)->m_connections;

processing: D.45351_28 = switch_core_perform_session_strdup (session_3(D), D.45348_27, "src/switch_core_media.c", &__func__, 391);

marking necessary through D.45348_27 stmt D.45348_27 = D.45345_26->c_address;
processing: D.45348_27 = D.45345_26->c_address;

marking necessary through D.45345_26 stmt D.45345_26 = sdp_12(D)->sdp_connection;
processing: D.45345_26 = sdp_12(D)->sdp_connection;

processing: t38_options_1->remote_ip = D.45342_22;

processing: D.45342_22 = switch_core_perform_session_strdup (session_3(D), D.45340_21, "src/switch_core_media.c", &__func__, 389);

marking necessary through D.45340_21 stmt D.45340_21 = D.45338_20->c_address;
processing: D.45340_21 = D.45338_20->c_address;

marking necessary through D.45338_20 stmt D.45338_20 = m_9(D)->m_connections;
processing: D.45338_20 = m_9(D)->m_connections;

processing: t38_options_1->sdp_o_line = "unknown";

Marking useful stmt: if (D.45330_13 != 0B)

processing: if (D.45330_13 != 0B)

marking necessary through D.45330_13 stmt D.45330_13 = sdp_12(D)->sdp_origin;
processing: D.45330_13 = sdp_12(D)->sdp_origin;

processing: t38_options_1->sdp_o_line = D.45334_16;

processing: D.45334_16 = switch_core_perform_session_strdup (session_3(D), D.45333_15, "src/switch_core_media.c", &__func__, 383);

marking necessary through D.45333_15 stmt D.45333_15 = D.45330_14->o_username;
processing: D.45333_15 = D.45330_14->o_username;

marking necessary through D.45330_14 stmt D.45330_14 = sdp_12(D)->sdp_origin;
processing: D.45330_14 = sdp_12(D)->sdp_origin;

processing: t38_options_1->remote_port = D.45329_11;

marking necessary through D.45329_11 stmt D.45329_11 = (short unsigned int) D.45328_10;
processing: D.45329_11 = (short unsigned int) D.45328_10;

marking necessary through D.45328_10 stmt D.45328_10 = m_9(D)->m_port;
processing: D.45328_10 = m_9(D)->m_port;

processing: t38_options_6->T38FaxMaxDatagram = 500;

processing: t38_options_6->T38FaxMaxBuffer = 500;

processing: t38_options_6->T38FaxUdpEC = D.45327_8;

processing: D.45327_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);

processing: t38_options_6->T38FaxRateManagement = D.45326_7;

processing: D.45326_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);

processing: t38_options_6->T38MaxBitRate = 14400;

processing: t38_options_6->T38FaxVersion = 0;

processing: t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);

processing: t38_options_5 = switch_channel_get_private (D.45323_4, "t38_options");

marking necessary through D.45323_4 stmt D.45323_4 = session_3(D)->channel;
processing: D.45323_4 = session_3(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 158 statements (0%)
Removed 0 of 13 PHI nodes (0%)
switch_core_media_process_udptl (struct switch_core_session_t * session, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47319;
  int D.47316;
  int dft;
  int dft;
  int dft;
  int D.47304;
  int D.47301;
  static const char __func__[32] = "switch_core_media_process_udptl";
  struct sdp_attribute_t * attr;
  struct switch_t38_options_t * t38_options;
  char * D.45417;
  int D.45412;
  char * D.45411;
  int D.45408;
  unsigned int D.45405;
  int D.45401;
  unsigned int D.45398;
  int D.45394;
  char * D.45391;
  int D.45388;
  switch_bool_t D.45384;
  int D.45380;
  switch_bool_t D.45378;
  int D.45374;
  switch_bool_t D.45372;
  int D.45368;
  unsigned int D.45367;
  int D.45363;
  short unsigned int D.45360;
  const char * D.45357;
  int D.45355;
  const char * D.45354;
  char * D.45351;
  const char * D.45348;
  struct sdp_connection_t * D.45345;
  char * D.45342;
  const char * D.45340;
  struct sdp_connection_t * D.45338;
  char * D.45334;
  const char * D.45333;
  struct sdp_origin_t * D.45330;
  short unsigned int D.45329;
  long unsigned int D.45328;
  char * D.45327;
  char * D.45326;
  struct switch_channel_t * D.45323;

<bb 2>:
  D.45323_4 = session_3(D)->channel;
  t38_options_5 = switch_channel_get_private (D.45323_4, "t38_options");
  # DEBUG t38_options => t38_options_5
  if (t38_options_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);
  # DEBUG t38_options => t38_options_6
  t38_options_6->T38FaxVersion = 0;
  t38_options_6->T38MaxBitRate = 14400;
  D.45326_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);
  t38_options_6->T38FaxRateManagement = D.45326_7;
  D.45327_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);
  t38_options_6->T38FaxUdpEC = D.45327_8;
  t38_options_6->T38FaxMaxBuffer = 500;
  t38_options_6->T38FaxMaxDatagram = 500;

<bb 4>:
  # t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>
  # DEBUG t38_options => t38_options_1
  D.45328_10 = m_9(D)->m_port;
  D.45329_11 = (short unsigned int) D.45328_10;
  t38_options_1->remote_port = D.45329_11;
  D.45330_13 = sdp_12(D)->sdp_origin;
  if (D.45330_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.45330_14 = sdp_12(D)->sdp_origin;
  D.45333_15 = D.45330_14->o_username;
  D.45334_16 = switch_core_perform_session_strdup (session_3(D), D.45333_15, "src/switch_core_media.c", &__func__, 383);
  t38_options_1->sdp_o_line = D.45334_16;
  goto <bb 7>;

<bb 6>:
  t38_options_1->sdp_o_line = "unknown";

<bb 7>:
  D.45338_17 = m_9(D)->m_connections;
  if (D.45338_17 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.45338_18 = m_9(D)->m_connections;
  D.45340_19 = D.45338_18->c_address;
  if (D.45340_19 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.45338_20 = m_9(D)->m_connections;
  D.45340_21 = D.45338_20->c_address;
  D.45342_22 = switch_core_perform_session_strdup (session_3(D), D.45340_21, "src/switch_core_media.c", &__func__, 389);
  t38_options_1->remote_ip = D.45342_22;
  goto <bb 14>;

<bb 10>:
  if (sdp_12(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.45345_23 = sdp_12(D)->sdp_connection;
  if (D.45345_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.45345_24 = sdp_12(D)->sdp_connection;
  D.45348_25 = D.45345_24->c_address;
  if (D.45348_25 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.45345_26 = sdp_12(D)->sdp_connection;
  D.45348_27 = D.45345_26->c_address;
  D.45351_28 = switch_core_perform_session_strdup (session_3(D), D.45348_27, "src/switch_core_media.c", &__func__, 391);
  t38_options_1->remote_ip = D.45351_28;

<bb 14>:
  attr_29 = m_9(D)->m_attributes;
  # DEBUG attr => attr_29
  goto <bb 49>;

<bb 15>:
  D.45354_30 = attr_2->a_name;
  D.45355_31 = strcasecmp (D.45354_30, "T38FaxVersion");
  if (D.45355_31 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.45357_32 = attr_2->a_value;
  if (D.45357_32 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.45357_33 = attr_2->a_value;
  # DEBUG __nptr => D.45357_33
  D.47301_136 = strtol (D.45357_33, 0B, 10);
  D.45360_35 = (short unsigned int) D.47301_136;
  t38_options_1->T38FaxVersion = D.45360_35;
  goto <bb 48>;

<bb 18>:
  D.45354_36 = attr_2->a_name;
  D.45363_37 = strcasecmp (D.45354_36, "T38MaxBitRate");
  if (D.45363_37 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  D.45357_38 = attr_2->a_value;
  if (D.45357_38 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.45357_39 = attr_2->a_value;
  # DEBUG __nptr => D.45357_39
  D.47304_137 = strtol (D.45357_39, 0B, 10);
  D.45367_41 = (unsigned int) D.47304_137;
  t38_options_1->T38MaxBitRate = D.45367_41;
  goto <bb 48>;

<bb 21>:
  D.45354_42 = attr_2->a_name;
  D.45368_43 = strcasecmp (D.45354_42, "T38FaxFillBitRemoval");
  if (D.45368_43 == 0)
    goto <bb 22>;
  else
    goto <bb 25>;

<bb 22>:
  D.45357_44 = attr_2->a_value;
  # DEBUG nptr => D.45357_44
  # DEBUG dft => 1
  if (D.45357_44 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  # DEBUG __nptr => D.45357_44
  dft_138 = strtol (D.45357_44, 0B, 10);

<bb 24>:
  # dft_139 = PHI <1(22), dft_138(23)>
  D.45372_46 = (switch_bool_t) dft_139;
  t38_options_1->T38FaxFillBitRemoval = D.45372_46;
  goto <bb 48>;

<bb 25>:
  D.45354_47 = attr_2->a_name;
  D.45374_48 = strcasecmp (D.45354_47, "T38FaxTranscodingMMR");
  if (D.45374_48 == 0)
    goto <bb 26>;
  else
    goto <bb 29>;

<bb 26>:
  D.45357_49 = attr_2->a_value;
  # DEBUG nptr => D.45357_49
  # DEBUG dft => 1
  if (D.45357_49 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  # DEBUG __nptr => D.45357_49
  dft_140 = strtol (D.45357_49, 0B, 10);

<bb 28>:
  # dft_141 = PHI <1(26), dft_140(27)>
  D.45378_51 = (switch_bool_t) dft_141;
  t38_options_1->T38FaxTranscodingMMR = D.45378_51;
  goto <bb 48>;

<bb 29>:
  D.45354_52 = attr_2->a_name;
  D.45380_53 = strcasecmp (D.45354_52, "T38FaxTranscodingJBIG");
  if (D.45380_53 == 0)
    goto <bb 30>;
  else
    goto <bb 33>;

<bb 30>:
  D.45357_54 = attr_2->a_value;
  # DEBUG nptr => D.45357_54
  # DEBUG dft => 1
  if (D.45357_54 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  # DEBUG __nptr => D.45357_54
  dft_142 = strtol (D.45357_54, 0B, 10);

<bb 32>:
  # dft_143 = PHI <1(30), dft_142(31)>
  D.45384_56 = (switch_bool_t) dft_143;
  t38_options_1->T38FaxTranscodingJBIG = D.45384_56;
  goto <bb 48>;

<bb 33>:
  D.45354_57 = attr_2->a_name;
  D.45388_58 = strcasecmp (D.45354_57, "T38FaxRateManagement");
  if (D.45388_58 == 0)
    goto <bb 34>;
  else
    goto <bb 36>;

<bb 34>:
  D.45357_59 = attr_2->a_value;
  if (D.45357_59 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.45357_60 = attr_2->a_value;
  D.45391_61 = switch_core_perform_session_strdup (session_3(D), D.45357_60, "src/switch_core_media.c", &__func__, 406);
  t38_options_1->T38FaxRateManagement = D.45391_61;
  goto <bb 48>;

<bb 36>:
  D.45354_62 = attr_2->a_name;
  D.45394_63 = strcasecmp (D.45354_62, "T38FaxMaxBuffer");
  if (D.45394_63 == 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  D.45357_64 = attr_2->a_value;
  if (D.45357_64 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.45357_65 = attr_2->a_value;
  # DEBUG __nptr => D.45357_65
  D.47316_144 = strtol (D.45357_65, 0B, 10);
  D.45398_67 = (unsigned int) D.47316_144;
  t38_options_1->T38FaxMaxBuffer = D.45398_67;
  goto <bb 48>;

<bb 39>:
  D.45354_68 = attr_2->a_name;
  D.45401_69 = strcasecmp (D.45354_68, "T38FaxMaxDatagram");
  if (D.45401_69 == 0)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  D.45357_70 = attr_2->a_value;
  if (D.45357_70 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.45357_71 = attr_2->a_value;
  # DEBUG __nptr => D.45357_71
  D.47319_145 = strtol (D.45357_71, 0B, 10);
  D.45405_73 = (unsigned int) D.47319_145;
  t38_options_1->T38FaxMaxDatagram = D.45405_73;
  goto <bb 48>;

<bb 42>:
  D.45354_74 = attr_2->a_name;
  D.45408_75 = strcasecmp (D.45354_74, "T38FaxUdpEC");
  if (D.45408_75 == 0)
    goto <bb 43>;
  else
    goto <bb 45>;

<bb 43>:
  D.45357_76 = attr_2->a_value;
  if (D.45357_76 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  D.45357_77 = attr_2->a_value;
  D.45411_78 = switch_core_perform_session_strdup (session_3(D), D.45357_77, "src/switch_core_media.c", &__func__, 412);
  t38_options_1->T38FaxUdpEC = D.45411_78;
  goto <bb 48>;

<bb 45>:
  D.45354_79 = attr_2->a_name;
  D.45412_80 = strcasecmp (D.45354_79, "T38VendorInfo");
  if (D.45412_80 == 0)
    goto <bb 46>;
  else
    goto <bb 48>;

<bb 46>:
  D.45357_81 = attr_2->a_value;
  if (D.45357_81 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.45357_82 = attr_2->a_value;
  D.45417_83 = switch_core_perform_session_strdup (session_3(D), D.45357_82, "src/switch_core_media.c", &__func__, 414);
  t38_options_1->T38VendorInfo = D.45417_83;

<bb 48>:
  attr_84 = attr_2->a_next;
  # DEBUG attr => attr_84

<bb 49>:
  # attr_2 = PHI <attr_29(14), attr_84(48)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 50>;

<bb 50>:
  D.45323_85 = session_3(D)->channel;
  switch_channel_set_variable_var_check (D.45323_85, "has_t38", "true", 1);
  D.45323_86 = session_3(D)->channel;
  switch_channel_set_private (D.45323_86, "t38_options", t38_options_1);
  D.45323_87 = session_3(D)->channel;
  switch_channel_set_app_flag_key ("T38", D.45323_87, 2);
  D.45323_88 = session_3(D)->channel;
  switch_channel_execute_on (D.45323_88, "sip_execute_on_image");
  D.45323_89 = session_3(D)->channel;
  switch_channel_api_on (D.45323_89, "sip_api_on_image");
  return t38_options_1;

}



;; Function switch_core_media_build_crypto (switch_core_media_build_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 13 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 25 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 10 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 24 }
;; 21 succs { 23 22 }
;; 22 succs { 23 24 }
;; 23 succs { 25 }
;; 24 succs { 25 }
;; 25 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);

Marking useful stmt: channel_9 = switch_core_session_get_channel (D.46676_8);

Marking useful stmt: # DEBUG channel => channel_9

Marking useful stmt: # DEBUG engine => engine_13

Marking useful stmt: # DEBUG key => key_19

Marking useful stmt: # DEBUG key => key_20

Marking useful stmt: # DEBUG key => key_2

Marking useful stmt: switch_rtp_get_random (key_2, D.46689_22);

Marking useful stmt: switch_b64_encode (key_2, D.46690_24, &b64_key, 512);

Marking useful stmt: # DEBUG p => p_25

Marking useful stmt: *p_3 = 0;

Marking useful stmt: # DEBUG p => p_28

Marking useful stmt: # DEBUG p => p_3

Marking useful stmt: # DEBUG index => index_31

Marking useful stmt: # DEBUG index => index_1

Marking useful stmt: D.46698_34 = switch_core_session_sprintf (D.46676_32, "%d %s inline:%s", index_1, D.46697_33, &b64_key);

Marking useful stmt: engine_13->ssec[ctype_15(D)].local_crypto_key = D.46698_34;

Marking useful stmt: switch_channel_set_variable_name_printf (D.46699_36, D.46700_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);

Marking useful stmt: switch_channel_set_flag_value (D.46699_41, 92, 1);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46676_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46700_45);

Marking useful stmt: val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);

Marking useful stmt: # DEBUG val => val_49

Marking useful stmt: D.46717_50 = switch_true (val_49);

Marking useful stmt: engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);

Marking useful stmt: engine_13->ssec[ctype_15(D)].crypto_type = 8;

Marking useful stmt: return 0;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46692_26)
(get_scalar_evolution 
  (scalar = D.46692_26)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46692_26)
(get_scalar_evolution 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.46692_26)
  (scalar_evolution = D.46692_26))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <p_25(9), p_28(10)>
)
  (init_cond = p_25))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <p_25(9), p_28(10)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = p_25)
  (to_add = -1)
  (res = {p_25, +, -1}_1))
  (evolution_function = {p_25, +, -1}_1))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = p_3)
  (scalar_evolution = {p_25, +, -1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 1
  exit condition [p_25, + , -1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations (unsigned int) p_25, bounded by 4294967295
Found loop 1 to be finite: iterating (unsigned int) p_25 times

Processing worklist:
processing: return 0;

Marking useful stmt: if (smh_7(D) == 0B)

processing: if (smh_7(D) == 0B)

processing: engine_13->ssec[ctype_15(D)].crypto_type = 8;

Marking useful stmt: if (D.46714_48 == 0)

Marking useful stmt: if (D.46717_50 == 0)

marking necessary through engine_13 stmt engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};
processing: engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};

processing: if (D.46717_50 == 0)

Marking useful stmt: if (val_49 == 0B)

processing: if (val_49 == 0B)

processing: if (D.46714_48 == 0)

Marking useful stmt: if (force_14(D) == 0)

Marking useful stmt: if (D.46681_16 != 0)

marking necessary through D.46714_48 stmt D.46714_48 = D.46713_47 & 8;
processing: D.46714_48 = D.46713_47 & 8;

marking necessary through D.46713_47 stmt D.46713_47 = D.46712_46->ndlb;
processing: D.46713_47 = D.46712_46->ndlb;

marking necessary through D.46712_46 stmt D.46712_46 = smh_7(D)->mparams;
marking necessary through .MEM_56 stmt b64_key = "";
processing: b64_key = "";

processing: D.46712_46 = smh_7(D)->mparams;

processing: if (D.46681_16 != 0)

marking necessary through D.46681_16 stmt D.46681_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
processing: D.46681_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];

processing: if (force_14(D) == 0)

processing: engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);

processing: D.46717_50 = switch_true (val_49);

processing: val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46676_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46700_45);

marking necessary through D.46676_42 stmt D.46676_42 = smh_7(D)->session;
marking necessary through iftmp.165_6 stmt iftmp.165_6 = PHI <"video"(18), "audio"(19)>
marking necessary through D.46700_45 stmt D.46700_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
processing: D.46700_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;

processing: iftmp.165_6 = PHI <"video"(18), "audio"(19)>

Marking useful stmt: if (type_11(D) == 1)

processing: if (type_11(D) == 1)

processing: D.46676_42 = smh_7(D)->session;

processing: switch_channel_set_flag_value (D.46699_41, 92, 1);

marking necessary through D.46699_41 stmt D.46699_41 = D.46676_40->channel;
processing: D.46699_41 = D.46676_40->channel;

marking necessary through D.46676_40 stmt D.46676_40 = smh_7(D)->session;
processing: D.46676_40 = smh_7(D)->session;

processing: switch_channel_set_variable_name_printf (D.46699_36, D.46700_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);

marking necessary through D.46699_36 stmt D.46699_36 = D.46676_35->channel;
marking necessary through D.46700_37 stmt D.46700_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
marking necessary through iftmp.164_5 stmt iftmp.164_5 = PHI <"video"(16), "audio"(17)>
processing: iftmp.164_5 = PHI <"video"(16), "audio"(17)>

Marking useful stmt: if (type_11(D) == 1)

processing: if (type_11(D) == 1)

processing: D.46700_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;

processing: D.46699_36 = D.46676_35->channel;

marking necessary through D.46676_35 stmt D.46676_35 = smh_7(D)->session;
processing: D.46676_35 = smh_7(D)->session;

processing: engine_13->ssec[ctype_15(D)].local_crypto_key = D.46698_34;

processing: D.46698_34 = switch_core_session_sprintf (D.46676_32, "%d %s inline:%s", index_1, D.46697_33, &b64_key);

marking necessary through D.46676_32 stmt D.46676_32 = smh_7(D)->session;
marking necessary through index_1 stmt index_1 = PHI <index_29(D)(14), index_31(15)>
marking necessary through D.46697_33 stmt D.46697_33 = SUITES[ctype_15(D)].name;
processing: D.46697_33 = SUITES[ctype_15(D)].name;

processing: index_1 = PHI <index_29(D)(14), index_31(15)>

marking necessary through index_31 stmt index_31 = (int) D.46696_30;
Marking useful stmt: if (index_29(D) == 0)

processing: if (index_29(D) == 0)

processing: index_31 = (int) D.46696_30;

marking necessary through D.46696_30 stmt D.46696_30 = ctype_15(D) + 1;
processing: D.46696_30 = ctype_15(D) + 1;

processing: D.46676_32 = smh_7(D)->session;

processing: *p_3 = 0;

Marking useful stmt: if (D.46692_27 == 61)

marking necessary through p_3 stmt p_3 = PHI <p_25(9), p_28(10)>
processing: p_3 = PHI <p_25(9), p_28(10)>

marking necessary through p_25 stmt p_25 = strrchr (&b64_key, 61);
marking necessary through p_28 stmt p_28 = p_3 + -1;
processing: p_28 = p_3 + -1;

processing: p_25 = strrchr (&b64_key, 61);

processing: if (D.46692_27 == 61)

Marking useful stmt: if (D.46692_26 != 0)

marking necessary through D.46692_27 stmt D.46692_27 = *p_3;
processing: D.46692_27 = *p_3;

processing: if (D.46692_26 != 0)

Marking useful stmt: if (p_3 != 0B)

marking necessary through D.46692_26 stmt D.46692_26 = *p_3;
processing: D.46692_26 = *p_3;

processing: if (p_3 != 0B)

processing: switch_b64_encode (key_2, D.46690_24, &b64_key, 512);

marking necessary through key_2 stmt key_2 = PHI <key_19(7), key_20(8)>
marking necessary through D.46690_24 stmt D.46690_24 = (switch_size_t) D.46688_23;
processing: D.46690_24 = (switch_size_t) D.46688_23;

marking necessary through D.46688_23 stmt D.46688_23 = SUITES[ctype_15(D)].keylen;
processing: D.46688_23 = SUITES[ctype_15(D)].keylen;

processing: key_2 = PHI <key_19(7), key_20(8)>

marking necessary through key_19 stmt key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
marking necessary through key_20 stmt key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
Marking useful stmt: if (direction_18(D) == 0)

processing: if (direction_18(D) == 0)

processing: key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;

processing: key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;

processing: switch_rtp_get_random (key_2, D.46689_22);

marking necessary through D.46689_22 stmt D.46689_22 = (uint32_t) D.46688_21;
processing: D.46689_22 = (uint32_t) D.46688_21;

marking necessary through D.46688_21 stmt D.46688_21 = SUITES[ctype_15(D)].keylen;
processing: D.46688_21 = SUITES[ctype_15(D)].keylen;

processing: channel_9 = switch_core_session_get_channel (D.46676_8);

marking necessary through D.46676_8 stmt D.46676_8 = smh_7(D)->session;
processing: D.46676_8 = smh_7(D)->session;

processing: __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 67 statements (0%)
Removed 0 of 8 PHI nodes (0%)
switch_core_media_build_crypto (struct switch_media_handle_t * smh, switch_media_type_t type, int index, switch_rtp_crypto_key_type_t ctype, switch_rtp_crypto_direction_t direction, int force)
{
  static const char __func__[31] = "switch_core_media_build_crypto";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_build_crypto";
  struct switch_rtp_engine_t * engine;
  char * p;
  struct switch_channel_t * channel;
  const char * val;
  unsigned char * key;
  unsigned char b64_key[512];
  int D.46717;
  unsigned int D.46714;
  switch_core_media_NDLB_t D.46713;
  struct switch_core_media_params_t * D.46712;
  char * iftmp.165;
  char * iftmp.164;
  char * D.46700;
  struct switch_channel_t * D.46699;
  char * D.46698;
  char * D.46697;
  unsigned int D.46696;
  char D.46692;
  switch_size_t D.46690;
  uint32_t D.46689;
  int D.46688;
  unsigned char D.46681;
  struct switch_core_session_t * D.46676;

<bb 2>:
  b64_key = "";
  if (smh_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46676_8 = smh_7(D)->session;
  channel_9 = switch_core_session_get_channel (D.46676_8);
  # DEBUG channel => channel_9
  engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_13
  if (force_14(D) == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.46681_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
  if (D.46681_16 != 0)
    goto <bb 25>;
  else
    goto <bb 6>;

<bb 6>:
  if (direction_18(D) == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
  # DEBUG key => key_19
  goto <bb 9>;

<bb 8>:
  key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
  # DEBUG key => key_20

<bb 9>:
  # key_2 = PHI <key_19(7), key_20(8)>
  # DEBUG key => key_2
  D.46688_21 = SUITES[ctype_15(D)].keylen;
  D.46689_22 = (uint32_t) D.46688_21;
  switch_rtp_get_random (key_2, D.46689_22);
  D.46688_23 = SUITES[ctype_15(D)].keylen;
  D.46690_24 = (switch_size_t) D.46688_23;
  switch_b64_encode (key_2, D.46690_24, &b64_key, 512);
  p_25 = strrchr (&b64_key, 61);
  # DEBUG p => p_25
  goto <bb 11>;

<bb 10>:
  *p_3 = 0;
  p_28 = p_3 + -1;
  # DEBUG p => p_28

<bb 11>:
  # p_3 = PHI <p_25(9), p_28(10)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 12>:
  D.46692_26 = *p_3;
  if (D.46692_26 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.46692_27 = *p_3;
  if (D.46692_27 == 61)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 14>:
  if (index_29(D) == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.46696_30 = ctype_15(D) + 1;
  index_31 = (int) D.46696_30;
  # DEBUG index => index_31

<bb 16>:
  # index_1 = PHI <index_29(D)(14), index_31(15)>
  # DEBUG index => index_1
  D.46676_32 = smh_7(D)->session;
  D.46697_33 = SUITES[ctype_15(D)].name;
  D.46698_34 = switch_core_session_sprintf (D.46676_32, "%d %s inline:%s", index_1, D.46697_33, &b64_key);
  engine_13->ssec[ctype_15(D)].local_crypto_key = D.46698_34;
  D.46676_35 = smh_7(D)->session;
  D.46699_36 = D.46676_35->channel;
  D.46700_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  if (type_11(D) == 1)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:

<bb 18>:
  # iftmp.164_5 = PHI <"video"(16), "audio"(17)>
  switch_channel_set_variable_name_printf (D.46699_36, D.46700_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);
  D.46676_40 = smh_7(D)->session;
  D.46699_41 = D.46676_40->channel;
  switch_channel_set_flag_value (D.46699_41, 92, 1);
  D.46676_42 = smh_7(D)->session;
  if (type_11(D) == 1)
    goto <bb 20>;
  else
    goto <bb 19>;

<bb 19>:

<bb 20>:
  # iftmp.165_6 = PHI <"video"(18), "audio"(19)>
  D.46700_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46676_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46700_45);
  D.46712_46 = smh_7(D)->mparams;
  D.46713_47 = D.46712_46->ndlb;
  D.46714_48 = D.46713_47 & 8;
  if (D.46714_48 == 0)
    goto <bb 21>;
  else
    goto <bb 24>;

<bb 21>:
  val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);
  # DEBUG val => val_49
  if (val_49 == 0B)
    goto <bb 23>;
  else
    goto <bb 22>;

<bb 22>:
  D.46717_50 = switch_true (val_49);
  if (D.46717_50 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);
  goto <bb 25>;

<bb 24>:
  engine_13->ssec[ctype_15(D)].crypto_type = 8;

<bb 25>:
  return 0;

}



;; Function switch_core_media_crypto_str2type (switch_core_media_crypto_str2type)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG i => i_10

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: return D.47214_2;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <0(2), i_10(5)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <0(2), i_10(5)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 1 to be finite: iterating 9 times

Processing worklist:
processing: return D.47214_2;

marking necessary through D.47214_2 stmt D.47214_2 = PHI <D.47214_9(4), 9(6)>
processing: D.47214_2 = PHI <D.47214_9(4), 9(6)>

marking necessary through D.47214_9 stmt D.47214_9 = SUITES[i_1].type;
Marking useful stmt: if (D.47211_8 == 0)

processing: if (D.47211_8 == 0)

Marking useful stmt: if (i_1 <= 8)

marking necessary through D.47211_8 stmt D.47211_8 = strncasecmp (str_7(D), D.47209_5, D.47210_6);
processing: D.47211_8 = strncasecmp (str_7(D), D.47209_5, D.47210_6);

marking necessary through D.47209_5 stmt D.47209_5 = SUITES[i_1].name;
marking necessary through D.47210_6 stmt D.47210_6 = strlen (D.47209_5);
processing: D.47210_6 = strlen (D.47209_5);

processing: D.47209_5 = SUITES[i_1].name;

marking necessary through i_1 stmt i_1 = PHI <0(2), i_10(5)>
processing: i_1 = PHI <0(2), i_10(5)>

marking necessary through i_10 stmt i_10 = i_1 + 1;
processing: i_10 = i_1 + 1;

processing: if (i_1 <= 8)

processing: D.47214_9 = SUITES[i_1].type;


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 2 PHI nodes (0%)
switch_core_media_crypto_str2type (const char * str)
{
  int i;
  switch_rtp_crypto_key_type_t D.47214;
  int D.47211;
  size_t D.47210;
  char * D.47209;

<bb 2>:
  # DEBUG i => 0
  goto <bb 6>;

<bb 3>:
  D.47209_5 = SUITES[i_1].name;
  D.47210_6 = strlen (D.47209_5);
  D.47211_8 = strncasecmp (str_7(D), D.47209_5, D.47210_6);
  if (D.47211_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.47214_9 = SUITES[i_1].type;
  goto <bb 7>;

<bb 5>:
  i_10 = i_1 + 1;
  # DEBUG i => i_10

<bb 6>:
  # i_1 = PHI <0(2), i_10(5)>
  # DEBUG i => i_1
  if (i_1 <= 8)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 7>:
  # D.47214_2 = PHI <D.47214_9(4), 9(6)>
  return D.47214_2;

}



;; Function switch_core_session_get_recovery_crypto_key (switch_core_session_get_recovery_crypto_key)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 12 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Marking useful stmt: # DEBUG engine => engine_10

Marking useful stmt: # DEBUG keyvar => "srtp_remote_video_crypto_key"

Marking useful stmt: # DEBUG tagvar => "srtp_remote_video_crypto_tag"

Marking useful stmt: # DEBUG ctypevar => "srtp_remote_video_crypto_type"

Marking useful stmt: # DEBUG ctypevar => ctypevar_3

Marking useful stmt: # DEBUG tagvar => tagvar_2

Marking useful stmt: # DEBUG keyvar => keyvar_1

Marking useful stmt: tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_18

Marking useful stmt: tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_20

Marking useful stmt: D.40317_21 = switch_core_media_crypto_str2type (tmp_20);

Marking useful stmt: engine_10->crypto_type = D.40317_21;

Marking useful stmt: D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);

Marking useful stmt: engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;

Marking useful stmt: tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_25

Marking useful stmt: # DEBUG __nptr => tmp_25

Marking useful stmt: tv_43 = strtol (tmp_25, 0B, 10);

Marking useful stmt: # DEBUG tv => NULL

Marking useful stmt: engine_10->ssec[D.40318_27].crypto_tag = tv_43;

Marking useful stmt: engine_10->ssec[D.40318_28].crypto_tag = 1;

Marking useful stmt: switch_channel_set_flag_value (D.40312_29, 92, 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_channel_set_flag_value (D.40312_29, 92, 1);

Marking useful stmt: if (tmp_18 != 0B)

marking necessary through D.40312_29 stmt D.40312_29 = session_4(D)->channel;
processing: D.40312_29 = session_4(D)->channel;

processing: if (tmp_18 != 0B)

Marking useful stmt: if (D.40304_5 == 0B)

processing: if (D.40304_5 == 0B)

marking necessary through D.40304_5 stmt D.40304_5 = session_4(D)->media_handle;
processing: D.40304_5 = session_4(D)->media_handle;

processing: engine_10->ssec[D.40318_28].crypto_tag = 1;

Marking useful stmt: if (tmp_25 != 0B)

marking necessary through engine_10 stmt engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};
marking necessary through D.40318_28 stmt D.40318_28 = engine_10->crypto_type;
processing: D.40318_28 = engine_10->crypto_type;

processing: engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};

marking necessary through D.40304_6 stmt D.40304_6 = session_4(D)->media_handle;
processing: D.40304_6 = session_4(D)->media_handle;

processing: if (tmp_25 != 0B)

processing: engine_10->ssec[D.40318_27].crypto_tag = tv_43;

marking necessary through D.40318_27 stmt D.40318_27 = engine_10->crypto_type;
processing: D.40318_27 = engine_10->crypto_type;

processing: tv_43 = strtol (tmp_25, 0B, 10);

processing: tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);

marking necessary through D.40312_24 stmt D.40312_24 = session_4(D)->channel;
marking necessary through tagvar_2 stmt tagvar_2 = PHI <"srtp_remote_audio_crypto_tag"(3), "srtp_remote_video_crypto_tag"(4)>
processing: tagvar_2 = PHI <"srtp_remote_audio_crypto_tag"(3), "srtp_remote_video_crypto_tag"(4)>

Marking useful stmt: if (type_8(D) == 0)

processing: if (type_8(D) == 0)

processing: D.40312_24 = session_4(D)->channel;

processing: engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;

marking necessary through D.40318_22 stmt D.40318_22 = engine_10->crypto_type;
processing: D.40318_22 = engine_10->crypto_type;

processing: D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);

processing: engine_10->crypto_type = D.40317_21;

Marking useful stmt: if (tmp_20 != 0B)

processing: if (tmp_20 != 0B)

processing: D.40317_21 = switch_core_media_crypto_str2type (tmp_20);

processing: tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);

marking necessary through D.40312_19 stmt D.40312_19 = session_4(D)->channel;
marking necessary through ctypevar_3 stmt ctypevar_3 = PHI <"srtp_remote_audio_crypto_type"(3), "srtp_remote_video_crypto_type"(4)>
processing: ctypevar_3 = PHI <"srtp_remote_audio_crypto_type"(3), "srtp_remote_video_crypto_type"(4)>

processing: D.40312_19 = session_4(D)->channel;

processing: tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);

marking necessary through D.40312_17 stmt D.40312_17 = session_4(D)->channel;
marking necessary through keyvar_1 stmt keyvar_1 = PHI <"srtp_remote_audio_crypto_key"(3), "srtp_remote_video_crypto_key"(4)>
processing: keyvar_1 = PHI <"srtp_remote_audio_crypto_key"(3), "srtp_remote_video_crypto_key"(4)>

processing: D.40312_17 = session_4(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 39 statements (0%)
Removed 0 of 5 PHI nodes (0%)
switch_core_session_get_recovery_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  int tv;
  static const char __func__[44] = "switch_core_session_get_recovery_crypto_key";
  char * ctypevar;
  char * tagvar;
  char * keyvar;
  struct switch_rtp_engine_t * engine;
  const char * tmp;
  char * D.40319;
  switch_rtp_crypto_key_type_t D.40318;
  switch_rtp_crypto_key_type_t D.40317;
  struct switch_channel_t * D.40312;
  struct switch_media_handle_t * D.40304;

<bb 2>:
  D.40304_5 = session_4(D)->media_handle;
  if (D.40304_5 == 0B)
    goto <bb 12>;
  else
    goto <bb 3>;

<bb 3>:
  D.40304_6 = session_4(D)->media_handle;
  engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  if (type_8(D) == 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:
  # DEBUG keyvar => "srtp_remote_video_crypto_key"
  # DEBUG tagvar => "srtp_remote_video_crypto_tag"
  # DEBUG ctypevar => "srtp_remote_video_crypto_type"

<bb 5>:
  # keyvar_1 = PHI <"srtp_remote_audio_crypto_key"(3), "srtp_remote_video_crypto_key"(4)>
  # tagvar_2 = PHI <"srtp_remote_audio_crypto_tag"(3), "srtp_remote_video_crypto_tag"(4)>
  # ctypevar_3 = PHI <"srtp_remote_audio_crypto_type"(3), "srtp_remote_video_crypto_type"(4)>
  # DEBUG ctypevar => ctypevar_3
  # DEBUG tagvar => tagvar_2
  # DEBUG keyvar => keyvar_1
  D.40312_17 = session_4(D)->channel;
  tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);
  # DEBUG tmp => tmp_18
  if (tmp_18 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 6>:
  D.40312_19 = session_4(D)->channel;
  tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);
  # DEBUG tmp => tmp_20
  if (tmp_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40317_21 = switch_core_media_crypto_str2type (tmp_20);
  engine_10->crypto_type = D.40317_21;

<bb 8>:
  D.40318_22 = engine_10->crypto_type;
  D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);
  engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;
  D.40312_24 = session_4(D)->channel;
  tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);
  # DEBUG tmp => tmp_25
  if (tmp_25 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  # DEBUG __nptr => tmp_25
  tv_43 = strtol (tmp_25, 0B, 10);
  # DEBUG tv => NULL
  D.40318_27 = engine_10->crypto_type;
  engine_10->ssec[D.40318_27].crypto_tag = tv_43;
  goto <bb 11>;

<bb 10>:
  D.40318_28 = engine_10->crypto_type;
  engine_10->ssec[D.40318_28].crypto_tag = 1;

<bb 11>:
  D.40312_29 = session_4(D)->channel;
  switch_channel_set_flag_value (D.40312_29, 92, 1);

<bb 12>:
  return;

}



;; Function switch_core_media_crypto_type2str (switch_core_media_crypto_type2str)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 222, &__PRETTY_FUNCTION__);

Marking useful stmt: return D.47207_2;


Processing worklist:
processing: return D.47207_2;

Marking useful stmt: if (type_1(D) > 8)

marking necessary through D.47207_2 stmt D.47207_2 = SUITES[type_1(D)].name;
processing: D.47207_2 = SUITES[type_1(D)].name;

processing: if (type_1(D) > 8)

processing: __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 222, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_crypto_type2str (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_crypto_type2str";
  const char * D.47207;

<bb 2>:
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 222, &__PRETTY_FUNCTION__);

<bb 4>:
  D.47207_2 = SUITES[type_1(D)].name;
  return D.47207_2;

}



;; Function switch_core_media_crypto_keylen (switch_core_media_crypto_keylen)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 229, &__PRETTY_FUNCTION__);

Marking useful stmt: return D.47203_2;


Processing worklist:
processing: return D.47203_2;

Marking useful stmt: if (type_1(D) > 8)

marking necessary through D.47203_2 stmt D.47203_2 = SUITES[type_1(D)].keylen;
processing: D.47203_2 = SUITES[type_1(D)].keylen;

processing: if (type_1(D) > 8)

processing: __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 229, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_crypto_keylen (switch_rtp_crypto_key_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_crypto_keylen";
  int D.47203;

<bb 2>:
  if (type_1(D) > 8)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("type < CRYPTO_INVALID", "src/switch_core_media.c", 229, &__PRETTY_FUNCTION__);

<bb 4>:
  D.47203_2 = SUITES[type_1(D)].keylen;
  return D.47203_2;

}



;; Function switch_core_media_pass_zrtp_hash2 (switch_core_media_pass_zrtp_hash2)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 0);

Marking useful stmt: _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 1);

processing: _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 0);


Eliminating unnecessary statements:
Removed 0 of 3 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session)
{
<bb 2>:
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 0);
  _switch_core_media_pass_zrtp_hash2 (aleg_session_1(D), bleg_session_2(D), 1);
  return;

}



;; Function switch_core_media_pass_zrtp_hash (switch_core_media_pass_zrtp_hash)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: channel_2 = switch_core_session_get_channel (session_1(D));

Marking useful stmt: # DEBUG channel => channel_2

Marking useful stmt: D.47161_3 = switch_channel_get_session (channel_2);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 289, D.47161_3, 101, "Deciding whether to pass zrtp-hash between legs\n");

Marking useful stmt: D.47162_4 = switch_channel_test_flag (channel_2, 73);

Marking useful stmt: D.47165_5 = switch_channel_get_session (channel_2);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 291, D.47165_5, 101, "CF_ZRTP_PASSTHRU_REQ not set, so not propagating zrtp-hash\n");

Marking useful stmt: D.47166_6 = switch_core_session_perform_get_partner (session_1(D), &other_session, "src/switch_core_media.c", &__func__, 293);

Marking useful stmt: D.47169_7 = switch_channel_get_session (channel_2);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 294, D.47169_7, 101, "No partner channel found, so not propagating zrtp-hash\n");

Marking useful stmt: D.47170_8 = switch_channel_get_session (channel_2);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 297, D.47170_8, 101, "Found peer channel; propagating zrtp-hash if set\n");

Marking useful stmt: switch_core_media_pass_zrtp_hash2 (session_1(D), other_session.172_9);

Marking useful stmt: switch_core_session_rwunlock (other_session.172_10);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_core_session_rwunlock (other_session.172_10);

Marking useful stmt: if (D.47166_6 != 0)

marking necessary through other_session.172_10 stmt other_session.172_10 = other_session;
processing: other_session.172_10 = other_session;

processing: if (D.47166_6 != 0)

Marking useful stmt: if (D.47162_4 == 0)

processing: if (D.47162_4 == 0)

processing: switch_core_media_pass_zrtp_hash2 (session_1(D), other_session.172_9);

marking necessary through other_session.172_9 stmt other_session.172_9 = other_session;
processing: other_session.172_9 = other_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 297, D.47170_8, 101, "Found peer channel; propagating zrtp-hash if set\n");

processing: D.47170_8 = switch_channel_get_session (channel_2);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 294, D.47169_7, 101, "No partner channel found, so not propagating zrtp-hash\n");

processing: D.47169_7 = switch_channel_get_session (channel_2);

processing: D.47166_6 = switch_core_session_perform_get_partner (session_1(D), &other_session, "src/switch_core_media.c", &__func__, 293);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 291, D.47165_5, 101, "CF_ZRTP_PASSTHRU_REQ not set, so not propagating zrtp-hash\n");

processing: D.47165_5 = switch_channel_get_session (channel_2);

processing: D.47162_4 = switch_channel_test_flag (channel_2, 73);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 289, D.47161_3, 101, "Deciding whether to pass zrtp-hash between legs\n");

processing: D.47161_3 = switch_channel_get_session (channel_2);

processing: channel_2 = switch_core_session_get_channel (session_1(D));


Eliminating unnecessary statements:
Removed 0 of 19 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_pass_zrtp_hash (struct switch_core_session_t * session)
{
  static const char __func__[33] = "switch_core_media_pass_zrtp_hash";
  struct switch_core_session_t * other_session;
  struct switch_channel_t * channel;
  struct switch_core_session_t * other_session.172;
  struct switch_core_session_t * D.47170;
  struct switch_core_session_t * D.47169;
  switch_status_t D.47166;
  struct switch_core_session_t * D.47165;
  uint32_t D.47162;
  struct switch_core_session_t * D.47161;

<bb 2>:
  channel_2 = switch_core_session_get_channel (session_1(D));
  # DEBUG channel => channel_2
  D.47161_3 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 289, D.47161_3, 101, "Deciding whether to pass zrtp-hash between legs\n");
  D.47162_4 = switch_channel_test_flag (channel_2, 73);
  if (D.47162_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.47165_5 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 291, D.47165_5, 101, "CF_ZRTP_PASSTHRU_REQ not set, so not propagating zrtp-hash\n");
  goto <bb 7>;

<bb 4>:
  D.47166_6 = switch_core_session_perform_get_partner (session_1(D), &other_session, "src/switch_core_media.c", &__func__, 293);
  if (D.47166_6 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.47169_7 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 294, D.47169_7, 101, "No partner channel found, so not propagating zrtp-hash\n");
  goto <bb 7>;

<bb 6>:
  D.47170_8 = switch_channel_get_session (channel_2);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 297, D.47170_8, 101, "Found peer channel; propagating zrtp-hash if set\n");
  other_session.172_9 = other_session;
  switch_core_media_pass_zrtp_hash2 (session_1(D), other_session.172_9);
  other_session.172_10 = other_session;
  switch_core_session_rwunlock (other_session.172_10);

<bb 7>:
  return;

}



;; Function switch_core_media_get_zrtp_hash (switch_core_media_get_zrtp_hash)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: # DEBUG engine => engine_9

Marking useful stmt: return D.47155_1;


Processing worklist:
processing: return D.47155_1;

marking necessary through D.47155_1 stmt D.47155_1 = PHI <0B(2), D.47155_11(4), D.47155_12(5)>
processing: D.47155_1 = PHI <0B(2), D.47155_11(4), D.47155_12(5)>

marking necessary through D.47155_11 stmt D.47155_11 = engine_9->local_sdp_zrtp_hash;
marking necessary through D.47155_12 stmt D.47155_12 = engine_9->remote_sdp_zrtp_hash;
Marking useful stmt: if (local_10(D) != 0)

processing: if (local_10(D) != 0)

Marking useful stmt: if (D.47152_3 == 0B)

processing: if (D.47152_3 == 0B)

marking necessary through D.47152_3 stmt D.47152_3 = session_2(D)->media_handle;
processing: D.47152_3 = session_2(D)->media_handle;

processing: D.47155_12 = engine_9->remote_sdp_zrtp_hash;

marking necessary through engine_9 stmt engine_9 = &D.47152_5->engines[type_7(D)]{lb: 0 sz: 11416};
processing: engine_9 = &D.47152_5->engines[type_7(D)]{lb: 0 sz: 11416};

marking necessary through D.47152_5 stmt D.47152_5 = session_2(D)->media_handle;
processing: D.47152_5 = session_2(D)->media_handle;

processing: D.47155_11 = engine_9->local_sdp_zrtp_hash;


Eliminating unnecessary statements:
Removed 0 of 9 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_get_zrtp_hash (struct switch_core_session_t * session, switch_media_type_t type, switch_bool_t local)
{
  struct switch_rtp_engine_t * engine;
  const char * D.47155;
  struct switch_media_handle_t * D.47152;

<bb 2>:
  D.47152_3 = session_2(D)->media_handle;
  if (D.47152_3 == 0B)
    goto <bb 6>;
  else
    goto <bb 3>;

<bb 3>:
  D.47152_5 = session_2(D)->media_handle;
  engine_9 = &D.47152_5->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_9
  if (local_10(D) != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.47155_11 = engine_9->local_sdp_zrtp_hash;
  goto <bb 6>;

<bb 5>:
  D.47155_12 = engine_9->remote_sdp_zrtp_hash;

<bb 6>:
  # D.47155_1 = PHI <0B(2), D.47155_11(4), D.47155_12(5)>
  return D.47155_1;

}



;; Function switch_core_media_extract_t38_options (switch_core_media_extract_t38_options)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 6 7 8
;; 2 succs { 13 3 }
;; 3 succs { 4 5 }
;; 4 succs { 13 }
;; 5 succs { 11 }
;; 6 succs { 7 10 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 }
;; 11 succs { 6 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Marking useful stmt: # DEBUG parser => 0B

Marking useful stmt: # DEBUG t38_options => 0B

Marking useful stmt: parser_9 = sdp_parse (0B, r_sdp_6(D), D.47136_8, 0);

Marking useful stmt: # DEBUG parser => parser_9

Marking useful stmt: sdp_11 = sdp_session (parser_9);

Marking useful stmt: # DEBUG sdp => sdp_11

Marking useful stmt: sdp_parser_free (parser_9);

Marking useful stmt: # DEBUG m => m_13

Marking useful stmt: t38_options_18 = switch_core_media_process_udptl (session_17(D), sdp_11, m_1);

Marking useful stmt: # DEBUG t38_options => t38_options_18

Marking useful stmt: # DEBUG m => m_19

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: # DEBUG t38_options => t38_options_2

Marking useful stmt: sdp_parser_free (parser_9);

Marking useful stmt: return t38_options_3;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_13(5), m_19(10)>
)
  (init_cond = m_13))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_13(5), m_19(10)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.47142_14 == 258)

Marking useful stmt: if (D.47145_15 == 8)

Marking useful stmt: if (D.47148_16 != 0)


Processing worklist:
processing: if (D.47148_16 != 0)

marking necessary through D.47148_16 stmt D.47148_16 = m_1->m_port;
processing: D.47148_16 = m_1->m_port;

marking necessary through m_1 stmt m_1 = PHI <m_13(5), m_19(10)>
processing: m_1 = PHI <m_13(5), m_19(10)>

Marking useful stmt: if (sdp_11 == 0B)

marking necessary through m_13 stmt m_13 = sdp_11->sdp_media;
marking necessary through m_19 stmt m_19 = m_1->m_next;
processing: m_19 = m_1->m_next;

processing: m_13 = sdp_11->sdp_media;

processing: if (sdp_11 == 0B)

Marking useful stmt: if (parser_9 == 0B)

processing: if (parser_9 == 0B)

processing: if (D.47145_15 == 8)

marking necessary through D.47145_15 stmt D.47145_15 = m_1->m_type;
processing: D.47145_15 = m_1->m_type;

processing: if (D.47142_14 == 258)

Marking useful stmt: if (m_1 != 0B)

marking necessary through D.47142_14 stmt D.47142_14 = m_1->m_proto;
processing: D.47142_14 = m_1->m_proto;

processing: if (m_1 != 0B)

processing: return t38_options_3;

marking necessary through t38_options_3 stmt t38_options_3 = PHI <0B(2), 0B(4), t38_options_2(12)>
processing: t38_options_3 = PHI <0B(2), 0B(4), t38_options_2(12)>

marking necessary through t38_options_2 stmt t38_options_2 = PHI <t38_options_18(9), 0B(11)>
processing: t38_options_2 = PHI <t38_options_18(9), 0B(11)>

processing: sdp_parser_free (parser_9);

processing: t38_options_18 = switch_core_media_process_udptl (session_17(D), sdp_11, m_1);

processing: sdp_parser_free (parser_9);

processing: sdp_11 = sdp_session (parser_9);

processing: parser_9 = sdp_parse (0B, r_sdp_6(D), D.47136_8, 0);

marking necessary through D.47136_8 stmt D.47136_8 = (int) D.47135_7;
processing: D.47136_8 = (int) D.47135_7;

marking necessary through D.47135_7 stmt D.47135_7 = strlen (r_sdp_6(D));
processing: D.47135_7 = strlen (r_sdp_6(D));


Eliminating unnecessary statements:
Deleting : t38_options_20 = t38_options_2;

Removed 1 of 29 statements (3%)
Removed 0 of 4 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct sdp_media_t * m;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  struct switch_t38_options_t * t38_options;

}
switch_core_media_extract_t38_options (struct switch_core_session_t * session, const char * r_sdp)
{
  struct switch_t38_options_t * t38_options;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  long unsigned int D.47148;
  sdp_media_e D.47145;
  sdp_proto_e D.47142;
  int D.47136;
  size_t D.47135;

<bb 2>:
  # DEBUG parser => 0B
  # DEBUG t38_options => 0B
  D.47135_7 = strlen (r_sdp_6(D));
  D.47136_8 = (int) D.47135_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.47136_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 13>;
  else
    goto <bb 3>;

<bb 3>:
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  sdp_parser_free (parser_9);
  goto <bb 13>;

<bb 5>:
  m_13 = sdp_11->sdp_media;
  # DEBUG m => m_13
  goto <bb 11>;

<bb 6>:
  D.47142_14 = m_1->m_proto;
  if (D.47142_14 == 258)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 7>:
  D.47145_15 = m_1->m_type;
  if (D.47145_15 == 8)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.47148_16 = m_1->m_port;
  if (D.47148_16 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  t38_options_18 = switch_core_media_process_udptl (session_17(D), sdp_11, m_1);
  # DEBUG t38_options => t38_options_18
  goto <bb 12>;

<bb 10>:
  m_19 = m_1->m_next;
  # DEBUG m => m_19

<bb 11>:
  # m_1 = PHI <m_13(5), m_19(10)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 12>:
  # t38_options_2 = PHI <t38_options_18(9), 0B(11)>
  # DEBUG t38_options => t38_options_2
  sdp_parser_free (parser_9);

<bb 13>:
  # t38_options_3 = PHI <0B(2), 0B(4), t38_options_2(12)>
  return t38_options_3;

}



;; Function switch_core_session_get_payload_code (switch_core_session_get_payload_code)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 7 8 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 23 5 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 10 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 }
;; 11 succs { 6 12 }
;; 12 succs { 13 23 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 20 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 1 }
Marking useful stmt: # DEBUG pt => 0

Marking useful stmt: # DEBUG recv_pt => 0

Marking useful stmt: # DEBUG found => 0

Marking useful stmt: # DEBUG fmtp => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 530, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_12

Marking useful stmt: # DEBUG engine => engine_17

Marking useful stmt: switch_mutex_lock (D.47085_18);

Marking useful stmt: # DEBUG pmap => pmap_19

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG pt => pt_24

Marking useful stmt: # DEBUG recv_pt => recv_pt_25

Marking useful stmt: # DEBUG fmtp => fmtp_26

Marking useful stmt: # DEBUG found => 1

Marking useful stmt: # DEBUG pmap => pmap_28

Marking useful stmt: # DEBUG pmap => pmap_1

Marking useful stmt: # DEBUG fmtp => fmtp_5

Marking useful stmt: # DEBUG found => found_4

Marking useful stmt: # DEBUG recv_pt => recv_pt_3

Marking useful stmt: # DEBUG pt => pt_2

Marking useful stmt: switch_mutex_unlock (D.47085_29);

Marking useful stmt: *ptP_30(D) = pt_2;

Marking useful stmt: *recv_ptP_31(D) = recv_pt_3;

Marking useful stmt: # DEBUG s => fmtp_5

Marking useful stmt: *fmtpP_33(D) = fmtp_5;

Marking useful stmt: return D.47082_6;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_19(5), pmap_28(10)>
)
  (init_cond = pmap_19))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_19(5), pmap_28(10)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.47086_20 == 0)

Marking useful stmt: if (D.47090_23 == 0)


Processing worklist:
processing: if (D.47090_23 == 0)

marking necessary through D.47090_23 stmt D.47090_23 = strcasecmp (D.47089_21, iananame_22(D));
processing: D.47090_23 = strcasecmp (D.47089_21, iananame_22(D));

marking necessary through D.47089_21 stmt D.47089_21 = pmap_1->iananame;
processing: D.47089_21 = pmap_1->iananame;

marking necessary through pmap_1 stmt pmap_1 = PHI <pmap_19(5), pmap_28(10)>
processing: pmap_1 = PHI <pmap_19(5), pmap_28(10)>

Marking useful stmt: if (smh_12 == 0B)

marking necessary through pmap_19 stmt pmap_19 = engine_17->payload_map;
marking necessary through pmap_28 stmt pmap_28 = pmap_1->next;
processing: pmap_28 = pmap_1->next;

processing: pmap_19 = engine_17->payload_map;

marking necessary through engine_17 stmt engine_17 = &smh_12->engines[type_15(D)]{lb: 0 sz: 11416};
processing: engine_17 = &smh_12->engines[type_15(D)]{lb: 0 sz: 11416};

marking necessary through smh_12 stmt smh_12 = session_11(D)->media_handle;
processing: smh_12 = session_11(D)->media_handle;

Marking useful stmt: if (session_11(D) == 0B)

processing: if (session_11(D) == 0B)

processing: if (smh_12 == 0B)

processing: if (D.47086_20 == 0)

Marking useful stmt: if (pmap_1 != 0B)

marking necessary through D.47086_20 stmt D.47086_20 = pmap_1->allocated;
processing: D.47086_20 = pmap_1->allocated;

processing: if (pmap_1 != 0B)

processing: return D.47082_6;

marking necessary through D.47082_6 stmt D.47082_6 = PHI <1(4), 0(21), 1(12), 0(20), 0(22)>
processing: D.47082_6 = PHI <1(4), 0(21), 1(12), 0(20), 0(22)>

Marking useful stmt: if (D.47340_45 == 0)

Marking useful stmt: if (found_4 != 0)

Marking useful stmt: if (fmtpP_33(D) != 0B)

processing: if (fmtpP_33(D) != 0B)

processing: if (found_4 != 0)

marking necessary through found_4 stmt found_4 = PHI <1(9), 0(11)>
processing: found_4 = PHI <1(9), 0(11)>

processing: if (D.47340_45 == 0)

marking necessary through D.47340_45 stmt D.47340_45 = PHI <1(17), 1(18), 0(19)>
processing: D.47340_45 = PHI <1(17), 1(18), 0(19)>

Marking useful stmt: if (fmtp_5 == 0B)

Marking useful stmt: if (D.47341_44 == 0)

processing: if (D.47341_44 == 0)

marking necessary through D.47341_44 stmt D.47341_44 = MEM[(const char *)fmtp_5];
processing: D.47341_44 = MEM[(const char *)fmtp_5];

marking necessary through fmtp_5 stmt fmtp_5 = PHI <fmtp_26(9), 0B(11)>
processing: fmtp_5 = PHI <fmtp_26(9), 0B(11)>

marking necessary through fmtp_26 stmt fmtp_26 = pmap_1->rm_fmtp;
processing: fmtp_26 = pmap_1->rm_fmtp;

processing: if (fmtp_5 == 0B)

processing: *fmtpP_33(D) = fmtp_5;

processing: *recv_ptP_31(D) = recv_pt_3;

Marking useful stmt: if (recv_ptP_31(D) != 0B)

marking necessary through recv_pt_3 stmt recv_pt_3 = PHI <recv_pt_25(9), 0(11)>
processing: recv_pt_3 = PHI <recv_pt_25(9), 0(11)>

marking necessary through recv_pt_25 stmt recv_pt_25 = pmap_1->recv_pt;
processing: recv_pt_25 = pmap_1->recv_pt;

processing: if (recv_ptP_31(D) != 0B)

processing: *ptP_30(D) = pt_2;

Marking useful stmt: if (ptP_30(D) != 0B)

marking necessary through pt_2 stmt pt_2 = PHI <pt_24(9), 0(11)>
processing: pt_2 = PHI <pt_24(9), 0(11)>

marking necessary through pt_24 stmt pt_24 = pmap_1->pt;
processing: pt_24 = pmap_1->pt;

processing: if (ptP_30(D) != 0B)

processing: switch_mutex_unlock (D.47085_29);

marking necessary through D.47085_29 stmt D.47085_29 = smh_12->sdp_mutex;
processing: D.47085_29 = smh_12->sdp_mutex;

processing: switch_mutex_lock (D.47085_18);

marking necessary through D.47085_18 stmt D.47085_18 = smh_12->sdp_mutex;
processing: D.47085_18 = smh_12->sdp_mutex;

processing: __assert_fail ("session", "src/switch_core_media.c", 530, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 51 statements (0%)
Removed 0 of 9 PHI nodes (0%)
switch_core_session_get_payload_code (struct switch_core_session_t * session, switch_media_type_t type, const char * iananame, switch_payload_t * ptP, switch_payload_t * recv_ptP, char * * fmtpP)
{
  const char D.47341;
  int D.47340;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_session_get_payload_code";
  char * fmtp;
  int found;
  switch_payload_t recv_pt;
  switch_payload_t pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  struct payload_map_t * pmap;
  int D.47090;
  char * D.47089;
  uint8_t D.47086;
  struct switch_mutex_t * D.47085;
  switch_status_t D.47082;

<bb 2>:
  # DEBUG pt => 0
  # DEBUG recv_pt => 0
  # DEBUG found => 0
  # DEBUG fmtp => 0B
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 530, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 23>;
  else
    goto <bb 5>;

<bb 5>:
  engine_17 = &smh_12->engines[type_15(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_17
  D.47085_18 = smh_12->sdp_mutex;
  switch_mutex_lock (D.47085_18);
  pmap_19 = engine_17->payload_map;
  # DEBUG pmap => pmap_19
  goto <bb 11>;

<bb 6>:
  D.47086_20 = pmap_1->allocated;
  if (D.47086_20 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  // predicted unlikely by continue predictor.
  goto <bb 10>;

<bb 8>:
  D.47089_21 = pmap_1->iananame;
  D.47090_23 = strcasecmp (D.47089_21, iananame_22(D));
  if (D.47090_23 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  pt_24 = pmap_1->pt;
  # DEBUG pt => pt_24
  recv_pt_25 = pmap_1->recv_pt;
  # DEBUG recv_pt => recv_pt_25
  fmtp_26 = pmap_1->rm_fmtp;
  # DEBUG fmtp => fmtp_26
  # DEBUG found => 1
  goto <bb 12>;

<bb 10>:
  pmap_28 = pmap_1->next;
  # DEBUG pmap => pmap_28

<bb 11>:
  # pmap_1 = PHI <pmap_19(5), pmap_28(10)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 12>:
  # pt_2 = PHI <pt_24(9), 0(11)>
  # recv_pt_3 = PHI <recv_pt_25(9), 0(11)>
  # found_4 = PHI <1(9), 0(11)>
  # fmtp_5 = PHI <fmtp_26(9), 0B(11)>
  # DEBUG fmtp => fmtp_5
  # DEBUG found => found_4
  # DEBUG recv_pt => recv_pt_3
  # DEBUG pt => pt_2
  D.47085_29 = smh_12->sdp_mutex;
  switch_mutex_unlock (D.47085_29);
  if (found_4 != 0)
    goto <bb 13>;
  else
    goto <bb 23>;

<bb 13>:
  if (ptP_30(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  *ptP_30(D) = pt_2;

<bb 15>:
  if (recv_ptP_31(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  *recv_ptP_31(D) = recv_pt_3;

<bb 17>:
  # DEBUG s => fmtp_5
  if (fmtp_5 == 0B)
    goto <bb 20>;
  else
    goto <bb 18>;

<bb 18>:
  D.47341_44 = MEM[(const char *)fmtp_5];
  if (D.47341_44 == 0)
    goto <bb 20>;
  else
    goto <bb 19>;

<bb 19>:

<bb 20>:
  # D.47340_45 = PHI <1(17), 1(18), 0(19)>
  if (D.47340_45 == 0)
    goto <bb 21>;
  else
    goto <bb 23>;

<bb 21>:
  if (fmtpP_33(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  *fmtpP_33(D) = fmtp_5;

<bb 23>:
  # D.47082_6 = PHI <1(4), 0(21), 1(12), 0(20), 0(22)>
  return D.47082_6;

}



;; Function switch_core_media_add_payload_map (switch_core_media_add_payload_map)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
;;
;; Loop 1
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 12 22 21 20 17 18 19 16 13 14 15 10 11 9 7 8 6 25
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 60 5 }
;; 5 succs { 24 }
;; 6 succs { 7 11 }
;; 7 succs { 9 8 }
;; 8 succs { 9 11 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 23 }
;; 13 succs { 16 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 17 26 }
;; 17 succs { 20 18 }
;; 18 succs { 20 19 }
;; 19 succs { 20 }
;; 20 succs { 21 26 }
;; 21 succs { 22 26 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 6 26 }
;; 26 succs { 27 32 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 39 38 }
;; 38 succs { 39 }
;; 39 succs { 40 46 }
;; 40 succs { 43 41 }
;; 41 succs { 43 42 }
;; 42 succs { 43 }
;; 43 succs { 45 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 51 }
;; 47 succs { 48 49 }
;; 48 succs { 50 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 59 }
;; 54 succs { 55 56 }
;; 55 succs { 59 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 }
;; 60 succs { 1 }
Marking useful stmt: # DEBUG exists => 0

Marking useful stmt: # DEBUG local_pt => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 589, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_15

Marking useful stmt: # DEBUG engine => engine_20

Marking useful stmt: switch_mutex_lock (D.47005_21);

Marking useful stmt: # DEBUG pmap => pmap_22

Marking useful stmt: # DEBUG exists => exists_10

Marking useful stmt: # DEBUG s => fmtp_36(D)

Marking useful stmt: # DEBUG s => D.47023_38

Marking useful stmt: # DEBUG exists => 0

Marking useful stmt: # DEBUG local_pt => local_pt_44

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG local_pt => local_pt_7

Marking useful stmt: # DEBUG exists => exists_4

Marking useful stmt: # DEBUG pmap => pmap_45

Marking useful stmt: # DEBUG local_pt => local_pt_8

Marking useful stmt: # DEBUG exists => exists_5

Marking useful stmt: # DEBUG pmap => pmap_1

Marking useful stmt: # DEBUG exists => exists_6

Marking useful stmt: # DEBUG pmap => pmap_49

Marking useful stmt: pmap_51 = switch_core_perform_alloc (D.47040_50, 84, "src/switch_core_media.c", &__func__, 624);

Marking useful stmt: # DEBUG pmap => pmap_51

Marking useful stmt: # DEBUG pmap => pmap_2

Marking useful stmt: pmap_2->type = type_18(D);

Marking useful stmt: D.47041_53 = switch_core_perform_strdup (D.47040_52, name_25(D), "src/switch_core_media.c", &__func__, 628);

Marking useful stmt: pmap_2->iananame = D.47041_53;

Marking useful stmt: pmap_2->rm_encoding = D.47011_54;

Marking useful stmt: D.47042_56 = switch_ci_hashfunc_default (D.47011_55, &hlen);

Marking useful stmt: pmap_2->hash = D.47042_56;

Marking useful stmt: # DEBUG pmap => pmap_3

Marking useful stmt: pmap_3->sdp_type = sdp_type_57(D);

Marking useful stmt: pmap_3->ptime = ptime_32(D);

Marking useful stmt: pmap_3->rate = rate_29(D);

Marking useful stmt: # DEBUG s => fmtp_36(D)

Marking useful stmt: # DEBUG s => D.47023_59

Marking useful stmt: D.47054_64 = switch_core_perform_strdup (D.47040_63, fmtp_36(D), "src/switch_core_media.c", &__func__, 644);

Marking useful stmt: pmap_3->rm_fmtp = D.47054_64;

Marking useful stmt: pmap_3->allocated = 1;

Marking useful stmt: pmap_3->recv_pt = D.47055_66;

Marking useful stmt: pmap_3->pt = iftmp.170_11;

Marking useful stmt: pmap_3->negotiated = negotiated_72(D);

Marking useful stmt: engine_20->pmap_tail = pmap_3;

Marking useful stmt: engine_20->pmap_tail = pmap_3;

Marking useful stmt: engine_20->payload_map = D.47074_75;

Marking useful stmt: D.47074_76->next = pmap_3;

Marking useful stmt: engine_20->pmap_tail = D.47076_78;

Marking useful stmt: switch_mutex_unlock (D.47005_79);

Marking useful stmt: return pmap_9;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47031_23)
(get_scalar_evolution 
  (scalar = D.47031_23)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47031_23)
(get_scalar_evolution 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = D.47031_23)
  (scalar_evolution = D.47031_23))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1 = PHI <pmap_22(5), pmap_45(23)>
)
  (init_cond = pmap_22))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1 = PHI <pmap_22(5), pmap_45(23)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1)
(get_scalar_evolution 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = pmap_1)
  (scalar_evolution = pmap_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (exists_10 != 0)

Marking useful stmt: if (D.38476_41 != 0)


Processing worklist:
processing: if (D.38476_41 != 0)

Marking useful stmt: if (D.47349_117 == 0)

marking necessary through D.38476_41 stmt D.38476_41 = __builtin_strcmp (D.47023_40, fmtp_36(D));
processing: D.38476_41 = __builtin_strcmp (D.47023_40, fmtp_36(D));

marking necessary through D.47023_40 stmt D.47023_40 = pmap_1->rm_fmtp;
processing: D.47023_40 = pmap_1->rm_fmtp;

marking necessary through pmap_1 stmt pmap_1 = PHI <pmap_22(5), pmap_45(23)>
processing: pmap_1 = PHI <pmap_22(5), pmap_45(23)>

Marking useful stmt: if (smh_15 == 0B)

marking necessary through pmap_22 stmt pmap_22 = engine_20->payload_map;
marking necessary through pmap_45 stmt pmap_45 = pmap_1->next;
processing: pmap_45 = pmap_1->next;

processing: pmap_22 = engine_20->payload_map;

marking necessary through engine_20 stmt engine_20 = &smh_15->engines[type_18(D)]{lb: 0 sz: 11416};
processing: engine_20 = &smh_15->engines[type_18(D)]{lb: 0 sz: 11416};

marking necessary through smh_15 stmt smh_15 = session_14(D)->media_handle;
processing: smh_15 = session_14(D)->media_handle;

Marking useful stmt: if (session_14(D) == 0B)

processing: if (session_14(D) == 0B)

processing: if (smh_15 == 0B)

processing: if (D.47349_117 == 0)

Marking useful stmt: if (D.47345_115 == 0)

marking necessary through D.47349_117 stmt D.47349_117 = PHI <1(17), 1(18), 0(19)>
processing: D.47349_117 = PHI <1(17), 1(18), 0(19)>

Marking useful stmt: if (D.47023_38 == 0B)

Marking useful stmt: if (D.47350_116 == 0)

processing: if (D.47350_116 == 0)

marking necessary through D.47350_116 stmt D.47350_116 = MEM[(const char *)D.47023_38];
processing: D.47350_116 = MEM[(const char *)D.47023_38];

marking necessary through D.47023_38 stmt D.47023_38 = pmap_1->rm_fmtp;
processing: D.47023_38 = pmap_1->rm_fmtp;

processing: if (D.47023_38 == 0B)

processing: if (D.47345_115 == 0)

marking necessary through D.47345_115 stmt D.47345_115 = PHI <1(13), 1(14), 0(15)>
processing: D.47345_115 = PHI <1(13), 1(14), 0(15)>

Marking useful stmt: if (fmtp_36(D) == 0B)

Marking useful stmt: if (D.47346_114 == 0)

processing: if (D.47346_114 == 0)

marking necessary through D.47346_114 stmt D.47346_114 = *fmtp_36(D);
processing: D.47346_114 = *fmtp_36(D);

processing: if (fmtp_36(D) == 0B)

processing: if (exists_10 != 0)

Marking useful stmt: if (D.47031_23 != 0)

marking necessary through exists_10 stmt exists_10 = PHI <1(10), 0(11), 1(9)>
processing: exists_10 = PHI <1(10), 0(11), 1(9)>

Marking useful stmt: if (D.47016_30 == 0)

Marking useful stmt: if (D.47012_26 == 0)

Marking useful stmt: if (D.47014_28 == rate_29(D))

Marking useful stmt: if (D.47016_31 == ptime_32(D))

Marking useful stmt: if (D.47014_27 == 0)

processing: if (D.47014_27 == 0)

marking necessary through D.47014_27 stmt D.47014_27 = pmap_1->rate;
processing: D.47014_27 = pmap_1->rate;

processing: if (D.47016_31 == ptime_32(D))

marking necessary through D.47016_31 stmt D.47016_31 = pmap_1->ptime;
processing: D.47016_31 = pmap_1->ptime;

processing: if (D.47014_28 == rate_29(D))

marking necessary through D.47014_28 stmt D.47014_28 = pmap_1->rate;
processing: D.47014_28 = pmap_1->rate;

processing: if (D.47012_26 == 0)

marking necessary through D.47012_26 stmt D.47012_26 = strcasecmp (name_25(D), D.47011_24);
processing: D.47012_26 = strcasecmp (name_25(D), D.47011_24);

marking necessary through D.47011_24 stmt D.47011_24 = pmap_1->iananame;
processing: D.47011_24 = pmap_1->iananame;

processing: if (D.47016_30 == 0)

marking necessary through D.47016_30 stmt D.47016_30 = pmap_1->ptime;
processing: D.47016_30 = pmap_1->ptime;

processing: if (D.47031_23 != 0)

Marking useful stmt: if (pmap_1 != 0B)

marking necessary through D.47031_23 stmt D.47031_23 = pmap_1->allocated;
processing: D.47031_23 = pmap_1->allocated;

processing: if (pmap_1 != 0B)

processing: return pmap_9;

marking necessary through pmap_9 stmt pmap_9 = PHI <0B(4), pmap_3(59)>
processing: pmap_9 = PHI <0B(4), pmap_3(59)>

marking necessary through pmap_3 stmt pmap_3 = PHI <pmap_1(26), pmap_2(31)>
processing: pmap_3 = PHI <pmap_1(26), pmap_2(31)>

marking necessary through pmap_2 stmt pmap_2 = PHI <pmap_49(29), pmap_51(30)>
Marking useful stmt: if (exists_6 == 0)

processing: if (exists_6 == 0)

marking necessary through exists_6 stmt exists_6 = PHI <exists_10(20), exists_5(24), exists_5(25), exists_10(16), exists_10(21)>
processing: exists_6 = PHI <exists_10(20), exists_5(24), exists_5(25), exists_10(16), exists_10(21)>

marking necessary through exists_5 stmt exists_5 = PHI <0(5), exists_4(23)>
processing: exists_5 = PHI <0(5), exists_4(23)>

marking necessary through exists_4 stmt exists_4 = PHI <exists_10(12), 0(22)>
processing: exists_4 = PHI <exists_10(12), 0(22)>

processing: pmap_2 = PHI <pmap_49(29), pmap_51(30)>

marking necessary through pmap_49 stmt pmap_49 = engine_20->payload_map;
Marking useful stmt: if (D.47038_48 == 0)

Marking useful stmt: if (D.47036_46 != 0B)

processing: if (D.47036_46 != 0B)

marking necessary through D.47036_46 stmt D.47036_46 = engine_20->payload_map;
processing: D.47036_46 = engine_20->payload_map;

marking necessary through .MEM_91 stmt hlen = -1;
processing: hlen = -1;

processing: if (D.47038_48 == 0)

marking necessary through D.47038_48 stmt D.47038_48 = D.47036_47->allocated;
processing: D.47038_48 = D.47036_47->allocated;

marking necessary through D.47036_47 stmt D.47036_47 = engine_20->payload_map;
processing: D.47036_47 = engine_20->payload_map;

processing: pmap_49 = engine_20->payload_map;

processing: switch_mutex_unlock (D.47005_79);

marking necessary through D.47005_79 stmt D.47005_79 = smh_15->sdp_mutex;
processing: D.47005_79 = smh_15->sdp_mutex;

processing: engine_20->pmap_tail = D.47076_78;

Marking useful stmt: if (D.47036_74 == 0B)

marking necessary through D.47076_78 stmt D.47076_78 = D.47074_77->next;
processing: D.47076_78 = D.47074_77->next;

marking necessary through D.47074_77 stmt D.47074_77 = engine_20->pmap_tail;
processing: D.47074_77 = engine_20->pmap_tail;

processing: if (D.47036_74 == 0B)

Marking useful stmt: if (D.47036_73 == pmap_3)

marking necessary through D.47036_74 stmt D.47036_74 = engine_20->payload_map;
processing: D.47036_74 = engine_20->payload_map;

processing: if (D.47036_73 == pmap_3)

Marking useful stmt: if (exists_6 == 0)

marking necessary through D.47036_73 stmt D.47036_73 = engine_20->payload_map;
processing: D.47036_73 = engine_20->payload_map;

processing: if (exists_6 == 0)

processing: D.47074_76->next = pmap_3;

marking necessary through D.47074_76 stmt D.47074_76 = engine_20->pmap_tail;
processing: D.47074_76 = engine_20->pmap_tail;

processing: engine_20->payload_map = D.47074_75;

marking necessary through D.47074_75 stmt D.47074_75 = engine_20->pmap_tail;
processing: D.47074_75 = engine_20->pmap_tail;

processing: engine_20->pmap_tail = pmap_3;

processing: engine_20->pmap_tail = pmap_3;

processing: pmap_3->negotiated = negotiated_72(D);

Marking useful stmt: if (negotiated_72(D) != 0)

processing: if (negotiated_72(D) != 0)

processing: pmap_3->pt = iftmp.170_11;

Marking useful stmt: if (D.47058_69 != 0)

marking necessary through iftmp.170_11 stmt iftmp.170_11 = PHI <iftmp.170_70(48), iftmp.170_71(49)>
processing: iftmp.170_11 = PHI <iftmp.170_70(48), iftmp.170_71(49)>

marking necessary through iftmp.170_70 stmt iftmp.170_70 = (unsigned char) local_pt_8;
marking necessary through iftmp.170_71 stmt iftmp.170_71 = (unsigned char) pt_65(D);
Marking useful stmt: if (local_pt_8 != 0)

processing: if (local_pt_8 != 0)

marking necessary through local_pt_8 stmt local_pt_8 = PHI <0(5), local_pt_7(23)>
processing: local_pt_8 = PHI <0(5), local_pt_7(23)>

marking necessary through local_pt_7 stmt local_pt_7 = PHI <local_pt_8(12), local_pt_44(22)>
processing: local_pt_7 = PHI <local_pt_8(12), local_pt_44(22)>

marking necessary through local_pt_44 stmt local_pt_44 = (int) D.47029_43;
processing: local_pt_44 = (int) D.47029_43;

marking necessary through D.47029_43 stmt D.47029_43 = pmap_1->pt;
processing: D.47029_43 = pmap_1->pt;

processing: iftmp.170_71 = (unsigned char) pt_65(D);

processing: iftmp.170_70 = (unsigned char) local_pt_8;

processing: if (D.47058_69 != 0)

marking necessary through D.47058_69 stmt D.47058_69 = D.47056_67 || D.47057_68;
processing: D.47058_69 = D.47056_67 || D.47057_68;

marking necessary through D.47056_67 stmt D.47056_67 = sdp_type_57(D) == 0;
marking necessary through D.47057_68 stmt D.47057_68 = exists_6 == 0;
processing: D.47057_68 = exists_6 == 0;

processing: D.47056_67 = sdp_type_57(D) == 0;

processing: pmap_3->recv_pt = D.47055_66;

marking necessary through D.47055_66 stmt D.47055_66 = (unsigned char) pt_65(D);
processing: D.47055_66 = (unsigned char) pt_65(D);

processing: pmap_3->allocated = 1;

processing: pmap_3->rm_fmtp = D.47054_64;

Marking useful stmt: if (D.47357_121 != 0)

Marking useful stmt: if (D.38491_62 != 0)

processing: if (D.38491_62 != 0)

marking necessary through D.38491_62 stmt D.38491_62 = __builtin_strcmp (D.47023_61, fmtp_36(D));
processing: D.38491_62 = __builtin_strcmp (D.47023_61, fmtp_36(D));

marking necessary through D.47023_61 stmt D.47023_61 = pmap_3->rm_fmtp;
processing: D.47023_61 = pmap_3->rm_fmtp;

processing: if (D.47357_121 != 0)

Marking useful stmt: if (D.47353_119 == 0)

marking necessary through D.47357_121 stmt D.47357_121 = PHI <1(40), 1(41), 0(42)>
processing: D.47357_121 = PHI <1(40), 1(41), 0(42)>

Marking useful stmt: if (D.47023_59 == 0B)

Marking useful stmt: if (D.47358_120 == 0)

processing: if (D.47358_120 == 0)

marking necessary through D.47358_120 stmt D.47358_120 = MEM[(const char *)D.47023_59];
processing: D.47358_120 = MEM[(const char *)D.47023_59];

marking necessary through D.47023_59 stmt D.47023_59 = pmap_3->rm_fmtp;
processing: D.47023_59 = pmap_3->rm_fmtp;

processing: if (D.47023_59 == 0B)

processing: if (D.47353_119 == 0)

marking necessary through D.47353_119 stmt D.47353_119 = PHI <1(36), 1(37), 0(38)>
processing: D.47353_119 = PHI <1(36), 1(37), 0(38)>

Marking useful stmt: if (fmtp_36(D) == 0B)

Marking useful stmt: if (D.47354_118 == 0)

processing: if (D.47354_118 == 0)

marking necessary through D.47354_118 stmt D.47354_118 = *fmtp_36(D);
processing: D.47354_118 = *fmtp_36(D);

processing: if (fmtp_36(D) == 0B)

processing: D.47054_64 = switch_core_perform_strdup (D.47040_63, fmtp_36(D), "src/switch_core_media.c", &__func__, 644);

marking necessary through D.47040_63 stmt D.47040_63 = session_14(D)->pool;
processing: D.47040_63 = session_14(D)->pool;

processing: pmap_3->rate = rate_29(D);

Marking useful stmt: if (rate_29(D) != 0)

processing: if (rate_29(D) != 0)

processing: pmap_3->ptime = ptime_32(D);

Marking useful stmt: if (ptime_32(D) != 0)

processing: if (ptime_32(D) != 0)

processing: pmap_3->sdp_type = sdp_type_57(D);

processing: pmap_2->hash = D.47042_56;

processing: D.47042_56 = switch_ci_hashfunc_default (D.47011_55, &hlen);

marking necessary through D.47011_55 stmt D.47011_55 = pmap_2->iananame;
processing: D.47011_55 = pmap_2->iananame;

processing: pmap_2->rm_encoding = D.47011_54;

marking necessary through D.47011_54 stmt D.47011_54 = pmap_2->iananame;
processing: D.47011_54 = pmap_2->iananame;

processing: pmap_2->iananame = D.47041_53;

processing: D.47041_53 = switch_core_perform_strdup (D.47040_52, name_25(D), "src/switch_core_media.c", &__func__, 628);

marking necessary through D.47040_52 stmt D.47040_52 = session_14(D)->pool;
processing: D.47040_52 = session_14(D)->pool;

processing: pmap_2->type = type_18(D);

processing: pmap_51 = switch_core_perform_alloc (D.47040_50, 84, "src/switch_core_media.c", &__func__, 624);

marking necessary through D.47040_50 stmt D.47040_50 = session_14(D)->pool;
processing: D.47040_50 = session_14(D)->pool;

processing: switch_mutex_lock (D.47005_21);

marking necessary through D.47005_21 stmt D.47005_21 = smh_15->sdp_mutex;
processing: D.47005_21 = smh_15->sdp_mutex;

processing: __assert_fail ("session", "src/switch_core_media.c", 589, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : pmap_80 = pmap_3;

Deleting : exists_35 = exists_10;

Removed 2 of 133 statements (1%)
Removed 0 of 23 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct payload_map_t * pmap;
  int exists;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  int local_pt;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_add_payload_map";
  static const char __func__[34] = "switch_core_media_add_payload_map";

  { Scope block #50 src/switch_core_media.c:643 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #51 Originating from :#0 

    }

  }

  { Scope block #52 src/switch_core_media.c:643 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #53 Originating from :#0 

    }

  }

  { Scope block #54 src/switch_core_media.c:605 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #55 Originating from :#0 

    }

  }

  { Scope block #56 src/switch_core_media.c:605 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #57 Originating from :#0 

    }

  }

  { Scope block #58 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #59 
    switch_ssize_t hlen;

  }

  { Scope block #60 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

}
switch_core_media_add_payload_map (struct switch_core_session_t * session, switch_media_type_t type, const char * name, const char * fmtp, switch_sdp_type_t sdp_type, uint32_t pt, uint32_t rate, uint32_t ptime, uint8_t negotiated)
{
  const char D.47358;
  int D.47357;
  const char D.47354;
  int D.47353;
  const char D.47350;
  int D.47349;
  const char D.47346;
  int D.47345;
  switch_ssize_t hlen;
  static const char __func__[34] = "switch_core_media_add_payload_map";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_add_payload_map";
  int local_pt;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  int exists;
  struct payload_map_t * pmap;
  struct payload_map_s * D.47076;
  struct payload_map_t * D.47074;
  unsigned char iftmp.170;
  _Bool D.47058;
  _Bool D.47057;
  _Bool D.47056;
  unsigned char D.47055;
  char * D.47054;
  int D.38491;
  unsigned int D.47042;
  char * D.47041;
  struct switch_memory_pool_t * D.47040;
  uint8_t D.47038;
  struct payload_map_t * D.47036;
  uint8_t D.47031;
  switch_payload_t D.47029;
  int D.38476;
  char * D.47023;
  uint32_t D.47016;
  uint32_t D.47014;
  int D.47012;
  char * D.47011;
  struct switch_mutex_t * D.47005;

<bb 2>:
  # DEBUG exists => 0
  # DEBUG local_pt => 0
  if (session_14(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 589, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_15 = session_14(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 60>;
  else
    goto <bb 5>;

<bb 5>:
  engine_20 = &smh_15->engines[type_18(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_20
  D.47005_21 = smh_15->sdp_mutex;
  switch_mutex_lock (D.47005_21);
  pmap_22 = engine_20->payload_map;
  # DEBUG pmap => pmap_22
  goto <bb 24>;

<bb 6>:
  D.47011_24 = pmap_1->iananame;
  D.47012_26 = strcasecmp (name_25(D), D.47011_24);
  if (D.47012_26 == 0)
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 7>:
  D.47014_27 = pmap_1->rate;
  if (D.47014_27 == 0)
    goto <bb 9>;
  else
    goto <bb 8>;

<bb 8>:
  D.47014_28 = pmap_1->rate;
  if (D.47014_28 == rate_29(D))
    goto <bb 9>;
  else
    goto <bb 11>;

<bb 9>:
  D.47016_30 = pmap_1->ptime;
  if (D.47016_30 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47016_31 = pmap_1->ptime;
  if (D.47016_31 == ptime_32(D))
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # exists_10 = PHI <1(10), 0(11), 1(9)>
  # DEBUG exists => exists_10
  if (exists_10 != 0)
    goto <bb 13>;
  else
    goto <bb 23>;

<bb 13>:
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 16>;
  else
    goto <bb 14>;

<bb 14>:
  D.47346_114 = *fmtp_36(D);
  if (D.47346_114 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;

<bb 15>:

<bb 16>:
  # D.47345_115 = PHI <1(13), 1(14), 0(15)>
  if (D.47345_115 == 0)
    goto <bb 17>;
  else
    goto <bb 26>;

<bb 17>:
  D.47023_38 = pmap_1->rm_fmtp;
  # DEBUG s => D.47023_38
  if (D.47023_38 == 0B)
    goto <bb 20>;
  else
    goto <bb 18>;

<bb 18>:
  D.47350_116 = MEM[(const char *)D.47023_38];
  if (D.47350_116 == 0)
    goto <bb 20>;
  else
    goto <bb 19>;

<bb 19>:

<bb 20>:
  # D.47349_117 = PHI <1(17), 1(18), 0(19)>
  if (D.47349_117 == 0)
    goto <bb 21>;
  else
    goto <bb 26>;

<bb 21>:
  D.47023_40 = pmap_1->rm_fmtp;
  D.38476_41 = __builtin_strcmp (D.47023_40, fmtp_36(D));
  if (D.38476_41 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  # DEBUG exists => 0
  D.47029_43 = pmap_1->pt;
  local_pt_44 = (int) D.47029_43;
  # DEBUG local_pt => local_pt_44
  // predicted unlikely by continue predictor.

<bb 23>:
  # exists_4 = PHI <exists_10(12), 0(22)>
  # local_pt_7 = PHI <local_pt_8(12), local_pt_44(22)>
  # DEBUG local_pt => local_pt_7
  # DEBUG exists => exists_4
  pmap_45 = pmap_1->next;
  # DEBUG pmap => pmap_45

<bb 24>:
  # pmap_1 = PHI <pmap_22(5), pmap_45(23)>
  # exists_5 = PHI <0(5), exists_4(23)>
  # local_pt_8 = PHI <0(5), local_pt_7(23)>
  # DEBUG local_pt => local_pt_8
  # DEBUG exists => exists_5
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.47031_23 = pmap_1->allocated;
  if (D.47031_23 != 0)
    goto <bb 6>;
  else
    goto <bb 26>;

<bb 26>:
  # exists_6 = PHI <exists_10(20), exists_5(24), exists_5(25), exists_10(16), exists_10(21)>
  # DEBUG exists => exists_6
  if (exists_6 == 0)
    goto <bb 27>;
  else
    goto <bb 32>;

<bb 27>:
  hlen = -1;
  D.47036_46 = engine_20->payload_map;
  if (D.47036_46 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.47036_47 = engine_20->payload_map;
  D.47038_48 = D.47036_47->allocated;
  if (D.47038_48 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  pmap_49 = engine_20->payload_map;
  # DEBUG pmap => pmap_49
  goto <bb 31>;

<bb 30>:
  D.47040_50 = session_14(D)->pool;
  pmap_51 = switch_core_perform_alloc (D.47040_50, 84, "src/switch_core_media.c", &__func__, 624);
  # DEBUG pmap => pmap_51

<bb 31>:
  # pmap_2 = PHI <pmap_49(29), pmap_51(30)>
  # DEBUG pmap => pmap_2
  pmap_2->type = type_18(D);
  D.47040_52 = session_14(D)->pool;
  D.47041_53 = switch_core_perform_strdup (D.47040_52, name_25(D), "src/switch_core_media.c", &__func__, 628);
  pmap_2->iananame = D.47041_53;
  D.47011_54 = pmap_2->iananame;
  pmap_2->rm_encoding = D.47011_54;
  D.47011_55 = pmap_2->iananame;
  D.47042_56 = switch_ci_hashfunc_default (D.47011_55, &hlen);
  pmap_2->hash = D.47042_56;

<bb 32>:
  # pmap_3 = PHI <pmap_1(26), pmap_2(31)>
  # DEBUG pmap => pmap_3
  pmap_3->sdp_type = sdp_type_57(D);
  if (ptime_32(D) != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  pmap_3->ptime = ptime_32(D);

<bb 34>:
  if (rate_29(D) != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  pmap_3->rate = rate_29(D);

<bb 36>:
  # DEBUG s => fmtp_36(D)
  if (fmtp_36(D) == 0B)
    goto <bb 39>;
  else
    goto <bb 37>;

<bb 37>:
  D.47354_118 = *fmtp_36(D);
  if (D.47354_118 == 0)
    goto <bb 39>;
  else
    goto <bb 38>;

<bb 38>:

<bb 39>:
  # D.47353_119 = PHI <1(36), 1(37), 0(38)>
  if (D.47353_119 == 0)
    goto <bb 40>;
  else
    goto <bb 46>;

<bb 40>:
  D.47023_59 = pmap_3->rm_fmtp;
  # DEBUG s => D.47023_59
  if (D.47023_59 == 0B)
    goto <bb 43>;
  else
    goto <bb 41>;

<bb 41>:
  D.47358_120 = MEM[(const char *)D.47023_59];
  if (D.47358_120 == 0)
    goto <bb 43>;
  else
    goto <bb 42>;

<bb 42>:

<bb 43>:
  # D.47357_121 = PHI <1(40), 1(41), 0(42)>
  if (D.47357_121 != 0)
    goto <bb 45>;
  else
    goto <bb 44>;

<bb 44>:
  D.47023_61 = pmap_3->rm_fmtp;
  D.38491_62 = __builtin_strcmp (D.47023_61, fmtp_36(D));
  if (D.38491_62 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.47040_63 = session_14(D)->pool;
  D.47054_64 = switch_core_perform_strdup (D.47040_63, fmtp_36(D), "src/switch_core_media.c", &__func__, 644);
  pmap_3->rm_fmtp = D.47054_64;

<bb 46>:
  pmap_3->allocated = 1;
  D.47055_66 = (unsigned char) pt_65(D);
  pmap_3->recv_pt = D.47055_66;
  D.47056_67 = sdp_type_57(D) == 0;
  D.47057_68 = exists_6 == 0;
  D.47058_69 = D.47056_67 || D.47057_68;
  if (D.47058_69 != 0)
    goto <bb 47>;
  else
    goto <bb 51>;

<bb 47>:
  if (local_pt_8 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  iftmp.170_70 = (unsigned char) local_pt_8;
  goto <bb 50>;

<bb 49>:
  iftmp.170_71 = (unsigned char) pt_65(D);

<bb 50>:
  # iftmp.170_11 = PHI <iftmp.170_70(48), iftmp.170_71(49)>
  pmap_3->pt = iftmp.170_11;

<bb 51>:
  if (negotiated_72(D) != 0)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  pmap_3->negotiated = negotiated_72(D);

<bb 53>:
  if (exists_6 == 0)
    goto <bb 54>;
  else
    goto <bb 59>;

<bb 54>:
  D.47036_73 = engine_20->payload_map;
  if (D.47036_73 == pmap_3)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  engine_20->pmap_tail = pmap_3;
  goto <bb 59>;

<bb 56>:
  D.47036_74 = engine_20->payload_map;
  if (D.47036_74 == 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  engine_20->pmap_tail = pmap_3;
  D.47074_75 = engine_20->pmap_tail;
  engine_20->payload_map = D.47074_75;
  goto <bb 59>;

<bb 58>:
  D.47074_76 = engine_20->pmap_tail;
  D.47074_76->next = pmap_3;
  D.47074_77 = engine_20->pmap_tail;
  D.47076_78 = D.47074_77->next;
  engine_20->pmap_tail = D.47076_78;

<bb 59>:
  D.47005_79 = smh_15->sdp_mutex;
  switch_mutex_unlock (D.47005_79);

<bb 60>:
  # pmap_9 = PHI <0B(4), pmap_3(59)>
  return pmap_9;

}



;; Function switch_core_media_set_r_sdp_codec_string (switch_core_media_set_r_sdp_codec_string)

Created preheader block for loop 10
Created preheader block for loop 7
Created preheader block for loop 4
;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 110 69 70 71 85 72 73 74 75 76 77 78 79 80 81 82 83 84 151 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 152 111 112 113 114 115 145 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 153 146 147 148 149 150
;;
;; Loop 3
;;  header 147, latch 146
;;  depth 1, outer 0
;;  nodes: 147 146 49 152 111 112 153 87 69 86 72 83 151 85 84 82 79 81 80 77 78 76 73 74 75 71 70 67 68 65 63 64 60 62 52 61 57 58 59 56 53 54 55 51 50 47 48 145 144 120 123 141 143 124 142 127 137 134 136 135 132 133 131 128 129 130 126 125 121 122 119 118 117 139 140 138 115 113 114 110 109 91 106 108 92 107 95 105 102 104 103 100 101 99 96 97 98 94 93 90 89 88
;;
;; Loop 9
;;  header 87, latch 86
;;  depth 2, outer 3
;;  nodes: 87 86 72 83 151 85 84 82 79 81 80 77 78 76 73 74 75 71 70
;;
;; Loop 10
;;  header 151, latch 84
;;  depth 3, outer 9
;;  nodes: 151 84 82 79 81 80 77 78 76 73 74 75
;;
;; Loop 7
;;  header 152, latch 109
;;  depth 2, outer 3
;;  nodes: 152 109 91 106 108 92 107 95 105 102 104 103 100 101 99 96 97 98 94 93 90 89 88
;;
;; Loop 8
;;  header 108, latch 107
;;  depth 3, outer 7
;;  nodes: 108 107 95 105 102 104 103 100 101 99 96 97 98 94 93
;;
;; Loop 6
;;  header 62, latch 61
;;  depth 2, outer 3
;;  nodes: 62 61 57 58 59 56 53 54 55
;;
;; Loop 4
;;  header 153, latch 144
;;  depth 2, outer 3
;;  nodes: 153 144 120 123 141 143 124 142 127 137 134 136 135 132 133 131 128 129 130 126 125 121 122 119 118 117 139 140 138
;;
;; Loop 5
;;  header 143, latch 142
;;  depth 3, outer 4
;;  nodes: 143 142 127 137 134 136 135 132 133 131 128 129 130 126 125
;;
;; Loop 2
;;  header 45, latch 44
;;  depth 1, outer 0
;;  nodes: 45 44 28 29 43 30 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 11
;;  header 43, latch 42
;;  depth 2, outer 2
;;  nodes: 43 42 39 41 31 40 36 37 38 35 32 33 34
;;
;; Loop 12
;;  header 41, latch 40
;;  depth 3, outer 11
;;  nodes: 41 40 36 37 38 35 32 33 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 22 23 21 18 19 20
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 150 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 15 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 150 17 }
;; 17 succs { 26 }
;; 18 succs { 21 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 27 }
;; 25 succs { 26 }
;; 26 succs { 18 27 }
;; 27 succs { 45 }
;; 28 succs { 29 44 }
;; 29 succs { 30 44 }
;; 30 succs { 43 }
;; 31 succs { 41 }
;; 32 succs { 35 33 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 40 }
;; 37 succs { 38 40 }
;; 38 succs { 39 40 }
;; 39 succs { 42 }
;; 40 succs { 41 }
;; 41 succs { 32 42 }
;; 42 succs { 43 }
;; 43 succs { 31 44 }
;; 44 succs { 45 }
;; 45 succs { 28 46 }
;; 46 succs { 147 }
;; 47 succs { 48 50 }
;; 48 succs { 49 50 }
;; 49 succs { 146 }
;; 50 succs { 51 111 }
;; 51 succs { 52 111 }
;; 52 succs { 62 }
;; 53 succs { 56 54 }
;; 54 succs { 56 55 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 61 }
;; 58 succs { 59 61 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 62 }
;; 62 succs { 53 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 148 }
;; 67 succs { 69 68 }
;; 68 succs { 69 110 }
;; 110 succs { 152 }
;; 69 succs { 87 }
;; 70 succs { 72 71 }
;; 71 succs { 72 85 }
;; 85 succs { 151 }
;; 72 succs { 86 }
;; 73 succs { 76 74 }
;; 74 succs { 76 75 }
;; 75 succs { 76 }
;; 76 succs { 78 77 }
;; 77 succs { 78 80 }
;; 78 succs { 79 80 }
;; 79 succs { 82 }
;; 80 succs { 81 82 }
;; 81 succs { 82 }
;; 82 succs { 83 84 }
;; 83 succs { 86 }
;; 84 succs { 151 }
;; 151 succs { 73 86 }
;; 86 succs { 87 }
;; 87 succs { 70 146 }
;; 88 succs { 91 89 }
;; 89 succs { 91 90 }
;; 90 succs { 91 92 }
;; 91 succs { 109 }
;; 92 succs { 108 }
;; 93 succs { 95 94 }
;; 94 succs { 95 96 }
;; 95 succs { 107 }
;; 96 succs { 99 97 }
;; 97 succs { 99 98 }
;; 98 succs { 99 }
;; 99 succs { 101 100 }
;; 100 succs { 101 103 }
;; 101 succs { 102 103 }
;; 102 succs { 105 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 107 }
;; 106 succs { 109 }
;; 107 succs { 108 }
;; 108 succs { 93 109 }
;; 109 succs { 152 }
;; 152 succs { 88 146 }
;; 111 succs { 112 146 }
;; 112 succs { 113 146 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 145 }
;; 145 succs { 153 }
;; 116 succs { 148 }
;; 117 succs { 120 118 }
;; 118 succs { 120 119 }
;; 119 succs { 120 121 }
;; 120 succs { 144 }
;; 121 succs { 122 124 }
;; 122 succs { 123 124 }
;; 123 succs { 144 }
;; 124 succs { 143 }
;; 125 succs { 127 126 }
;; 126 succs { 127 128 }
;; 127 succs { 142 }
;; 128 succs { 131 129 }
;; 129 succs { 131 130 }
;; 130 succs { 131 }
;; 131 succs { 133 132 }
;; 132 succs { 133 135 }
;; 133 succs { 134 135 }
;; 134 succs { 137 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 138 142 }
;; 138 succs { 139 140 }
;; 139 succs { 141 }
;; 140 succs { 141 }
;; 141 succs { 144 }
;; 142 succs { 143 }
;; 143 succs { 125 144 }
;; 144 succs { 153 }
;; 153 succs { 117 146 }
;; 146 succs { 147 }
;; 147 succs { 47 148 }
;; 148 succs { 149 150 }
;; 149 succs { 150 }
;; 150 succs { 1 }
Marking useful stmt: # DEBUG ptime => 0

Marking useful stmt: # DEBUG dptime => 0

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG num_codecs => 0

Marking useful stmt: channel_29 = switch_core_session_get_channel (session_28(D));

Marking useful stmt: # DEBUG channel => channel_29

Marking useful stmt: # DEBUG prefer_sdp => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_31

Marking useful stmt: var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);

Marking useful stmt: # DEBUG var => var_32

Marking useful stmt: D.40412_33 = switch_true (var_32);

Marking useful stmt: # DEBUG prefer_sdp => 1

Marking useful stmt: # DEBUG prefer_sdp => prefer_sdp_23

Marking useful stmt: # DEBUG s => codec_string_35(D)

Marking useful stmt: tmp_codec_string_37 = __strdup (codec_string_35(D));

Marking useful stmt: # DEBUG tmp_codec_string => tmp_codec_string_37

Marking useful stmt: D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);

Marking useful stmt: # DEBUG num_codecs => num_codecs_39

Marking useful stmt: num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);

Marking useful stmt: # DEBUG num_codecs => num_codecs_40

Marking useful stmt: free (tmp_codec_string_37);

Marking useful stmt: # DEBUG tmp_codec_string => 0B

Marking useful stmt: num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);

Marking useful stmt: # DEBUG num_codecs => num_codecs_42

Marking useful stmt: # DEBUG num_codecs => num_codecs_22

Marking useful stmt: # DEBUG attr => attr_47

Marking useful stmt: # DEBUG s => D.40429_48

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG __nptr => D.40436_52

Marking useful stmt: dptime_282 = strtol (D.40436_52, 0B, 10);

Marking useful stmt: # DEBUG dptime => NULL

Marking useful stmt: # DEBUG attr => attr_54

Marking useful stmt: # DEBUG attr => attr_3

Marking useful stmt: # DEBUG dptime => dptime_9

Marking useful stmt: switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));

Marking useful stmt: switch_core_media_pass_zrtp_hash (session_28(D));

Marking useful stmt: # DEBUG m => m_55

Marking useful stmt: # DEBUG ptime => dptime_9

Marking useful stmt: # DEBUG map => map_60

Marking useful stmt: # DEBUG attr => attr_61

Marking useful stmt: # DEBUG s => D.40429_62

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG __nptr => D.40436_67

Marking useful stmt: ptime_285 = strtol (D.40436_67, 0B, 10);

Marking useful stmt: # DEBUG ptime => NULL

Marking useful stmt: # DEBUG attr => attr_69

Marking useful stmt: # DEBUG attr => attr_4

Marking useful stmt: # DEBUG ptime => ptime_6

Marking useful stmt: switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);

Marking useful stmt: # DEBUG map => map_79

Marking useful stmt: # DEBUG map => map_12

Marking useful stmt: # DEBUG ptime => ptime_7

Marking useful stmt: # DEBUG m => m_80

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: # DEBUG m => m_81

Marking useful stmt: # DEBUG ptime => dptime_9

Marking useful stmt: switch_snprintf (D.40464_86, D.40466_88, ",t38");

Marking useful stmt: # DEBUG attr => attr_91

Marking useful stmt: # DEBUG s => D.40429_92

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG __nptr => D.40436_97

Marking useful stmt: ptime_288 = strtol (D.40436_97, 0B, 10);

Marking useful stmt: # DEBUG ptime => NULL

Marking useful stmt: # DEBUG attr => attr_99

Marking useful stmt: # DEBUG attr => attr_5

Marking useful stmt: # DEBUG ptime => ptime_8

Marking useful stmt: # DEBUG connection => connection_100

Marking useful stmt: # DEBUG connection => connection_102

Marking useful stmt: # DEBUG connection => connection_10

Marking useful stmt: D.40484_103 = switch_channel_get_session (channel_29);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");

Marking useful stmt: D.40487_104 = switch_channel_direction (channel_29);

Marking useful stmt: # DEBUG map => map_141

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG imp => imp_148

Marking useful stmt: # DEBUG s => D.40453_149

Marking useful stmt: # DEBUG match => match_162

Marking useful stmt: # DEBUG match => match_167

Marking useful stmt: # DEBUG match => match_16

Marking useful stmt: add_audio_codec (map_13, ptime_8, &buf, 1024);

Marking useful stmt: # DEBUG i => i_169

Marking useful stmt: # DEBUG i => i_19

Marking useful stmt: # DEBUG map => map_170

Marking useful stmt: # DEBUG map => map_13

Marking useful stmt: # DEBUG imp => imp_106

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG map => map_113

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG s => D.40453_119

Marking useful stmt: # DEBUG match => match_132

Marking useful stmt: # DEBUG match => match_137

Marking useful stmt: # DEBUG match => match_17

Marking useful stmt: add_audio_codec (map_14, ptime_8, &buf, 1024);

Marking useful stmt: # DEBUG map => map_139

Marking useful stmt: # DEBUG map => map_14

Marking useful stmt: # DEBUG i => i_140

Marking useful stmt: # DEBUG i => i_20

Marking useful stmt: # DEBUG connection => connection_173

Marking useful stmt: # DEBUG connection => connection_175

Marking useful stmt: # DEBUG connection => connection_11

Marking useful stmt: D.40547_176 = switch_channel_get_session (channel_29);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");

Marking useful stmt: # DEBUG imp => imp_178

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.40558_186 = switch_channel_direction (D.40557_185);

Marking useful stmt: D.40561_188 = switch_channel_test_flag (D.40557_187, 114);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG map => map_189

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG s => D.40453_195

Marking useful stmt: # DEBUG match => match_208

Marking useful stmt: # DEBUG match => match_213

Marking useful stmt: # DEBUG match => match_18

Marking useful stmt: switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);

Marking useful stmt: switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);

Marking useful stmt: # DEBUG map => map_229

Marking useful stmt: # DEBUG map => map_15

Marking useful stmt: # DEBUG i => i_230

Marking useful stmt: # DEBUG i => i_21

Marking useful stmt: # DEBUG m => m_231

Marking useful stmt: # DEBUG m => m_2

Marking useful stmt: switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_2)
(get_scalar_evolution 
  (scalar = m_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_2 = PHI <m_81(46), m_231(146)>
)
  (init_cond = m_81))
(analyze_evolution_in_loop 
  (loop_phi_node = m_2 = PHI <m_81(46), m_231(146)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = m_2)
  (scalar_evolution = m_2))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = m_2)
(get_scalar_evolution 
  (scalar = m_2)
  (scalar_evolution = m_2))
(set_scalar_evolution 
  instantiated_below = 46 
  (scalar = m_2)
  (scalar_evolution = m_2))
)
can not prove finiteness of loop 3
Marking useful stmt: if (D.40441_84 != 0)

Marking useful stmt: if (connection_10 == 0B)

Marking useful stmt: if (D.40437_171 == 3)

Marking useful stmt: if (D.40441_172 != 0)

Marking useful stmt: if (connection_11 == 0B)

(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_13 = PHI <map_141(69), map_170(86)>
)
  (init_cond = map_141))
(analyze_evolution_in_loop 
  (loop_phi_node = map_13 = PHI <map_141(69), map_170(86)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = map_13)
(get_scalar_evolution 
  (scalar = map_13)
  (scalar_evolution = map_13))
(set_scalar_evolution 
  instantiated_below = 69 
  (scalar = map_13)
  (scalar_evolution = map_13))
)
can not prove finiteness of loop 9
Marking useful stmt: if (map_13 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = i_19)
(get_scalar_evolution 
  (scalar = i_19)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_19 = PHI <i_214(85), i_169(84)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_19 = PHI <i_214(85), i_169(84)>
)
(add_to_evolution 
  (loop_nb = 10)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_10))
  (evolution_function = {0, +, 1}_10))
(set_scalar_evolution 
  instantiated_below = 85 
  (scalar = i_19)
  (scalar_evolution = {0, +, 1}_10))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 10
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
Found loop 10 to be finite: iterating (unsigned int) num_codecs_22 times
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = i_20)
(get_scalar_evolution 
  (scalar = i_20)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_20 = PHI <i_310(110), i_140(109)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_20 = PHI <i_310(110), i_140(109)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_7))
  (evolution_function = {0, +, 1}_7))
(set_scalar_evolution 
  instantiated_below = 110 
  (scalar = i_20)
  (scalar_evolution = {0, +, 1}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 7
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
Found loop 7 to be finite: iterating (unsigned int) num_codecs_22 times
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = map_14)
(get_scalar_evolution 
  (scalar = map_14)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_14 = PHI <map_113(92), map_139(107)>
)
  (init_cond = map_113))
(analyze_evolution_in_loop 
  (loop_phi_node = map_14 = PHI <map_113(92), map_139(107)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 92 
  (scalar = map_14)
  (scalar_evolution = map_14))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = map_14)
(get_scalar_evolution 
  (scalar = map_14)
  (scalar_evolution = map_14))
(set_scalar_evolution 
  instantiated_below = 92 
  (scalar = map_14)
  (scalar_evolution = map_14))
)
can not prove finiteness of loop 8
Marking useful stmt: if (D.40491_115 > 127)

Marking useful stmt: if (D.40493_118 != 0)

Marking useful stmt: if (match_17 != 0)

(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = attr_5)
(get_scalar_evolution 
  (scalar = attr_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_5 = PHI <attr_91(52), attr_99(61)>
)
  (init_cond = attr_91))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_5 = PHI <attr_91(52), attr_99(61)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 52 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = attr_5)
(get_scalar_evolution 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
(set_scalar_evolution 
  instantiated_below = 52 
  (scalar = attr_5)
  (scalar_evolution = attr_5))
)
can not prove finiteness of loop 6
Marking useful stmt: if (D.47380_287 != 0)

Marking useful stmt: if (D.40474_95 == 0)

Marking useful stmt: if (D.40436_96 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = i_21)
(get_scalar_evolution 
  (scalar = i_21)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_21 = PHI <i_177(145), i_230(144)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_21 = PHI <i_177(145), i_230(144)>
)
(add_to_evolution 
  (loop_nb = 4)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_4))
  (evolution_function = {0, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 145 
  (scalar = i_21)
  (scalar_evolution = {0, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = num_codecs_22)
(get_scalar_evolution 
  (scalar = num_codecs_22)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 4
  exit condition [0, + , 1](no_overflow) < num_codecs_22
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if num_codecs_22 < 0
    # of iterations (unsigned int) num_codecs_22, bounded by 2147483647
Found loop 4 to be finite: iterating (unsigned int) num_codecs_22 times
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_15)
(get_scalar_evolution 
  (scalar = map_15)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_15 = PHI <map_189(124), map_229(142)>
)
  (init_cond = map_189))
(analyze_evolution_in_loop 
  (loop_phi_node = map_15 = PHI <map_189(124), map_229(142)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 124 
  (scalar = map_15)
  (scalar_evolution = map_15))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_15)
(get_scalar_evolution 
  (scalar = map_15)
  (scalar_evolution = map_15))
(set_scalar_evolution 
  instantiated_below = 124 
  (scalar = map_15)
  (scalar_evolution = map_15))
)
can not prove finiteness of loop 5
Marking useful stmt: if (D.40491_191 > 127)

Marking useful stmt: if (D.40493_194 != 0)

Marking useful stmt: if (match_18 != 0)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_55(27), m_80(44)>
)
  (init_cond = m_55))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_55(27), m_80(44)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 27 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 2
Marking useful stmt: if (m_1 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_12 = PHI <map_60(30), map_79(42)>
)
  (init_cond = map_60))
(analyze_evolution_in_loop 
  (loop_phi_node = map_12 = PHI <map_60(30), map_79(42)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = map_12)
(get_scalar_evolution 
  (scalar = map_12)
  (scalar_evolution = map_12))
(set_scalar_evolution 
  instantiated_below = 30 
  (scalar = map_12)
  (scalar_evolution = map_12))
)
can not prove finiteness of loop 11
Marking useful stmt: if (map_12 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = attr_4)
(get_scalar_evolution 
  (scalar = attr_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_4 = PHI <attr_61(31), attr_69(40)>
)
  (init_cond = attr_61))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_4 = PHI <attr_61(31), attr_69(40)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 31 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = attr_4)
(get_scalar_evolution 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
(set_scalar_evolution 
  instantiated_below = 31 
  (scalar = attr_4)
  (scalar_evolution = attr_4))
)
can not prove finiteness of loop 12
Marking useful stmt: if (D.47373_284 != 0)

Marking useful stmt: if (D.40447_65 == 0)

Marking useful stmt: if (D.40436_66 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_3 = PHI <attr_47(17), attr_54(25)>
)
  (init_cond = attr_47))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_3 = PHI <attr_47(17), attr_54(25)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 17 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 17 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.47366_281 != 0)

Marking useful stmt: if (D.40433_51 == 0)


Processing worklist:
processing: if (D.40433_51 == 0)

marking necessary through D.40433_51 stmt D.40433_51 = strcasecmp (D.40429_50, "ptime");
processing: D.40433_51 = strcasecmp (D.40429_50, "ptime");

marking necessary through D.40429_50 stmt D.40429_50 = attr_3->a_name;
marking necessary through .MEM_252 stmt codecs = {};
marking necessary through .MEM_250 stmt buf = {};
processing: buf = {};

processing: codecs = {};

processing: D.40429_50 = attr_3->a_name;

marking necessary through attr_3 stmt attr_3 = PHI <attr_47(17), attr_54(25)>
processing: attr_3 = PHI <attr_47(17), attr_54(25)>

Marking useful stmt: if (D.40426_45 != 0)

marking necessary through attr_47 stmt attr_47 = sdp_46(D)->sdp_attributes;
marking necessary through attr_54 stmt attr_54 = attr_3->a_next;
processing: attr_54 = attr_3->a_next;

processing: attr_47 = sdp_46(D)->sdp_attributes;

processing: if (D.40426_45 != 0)

Marking useful stmt: if (smh_31 == 0B)

marking necessary through D.40426_45 stmt D.40426_45 = D.40424_43 || D.40425_44;
processing: D.40426_45 = D.40424_43 || D.40425_44;

marking necessary through D.40424_43 stmt D.40424_43 = channel_29 == 0B;
marking necessary through D.40425_44 stmt D.40425_44 = num_codecs_22 == 0;
processing: D.40425_44 = num_codecs_22 == 0;

marking necessary through num_codecs_22 stmt num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), 0(12), num_codecs_40(14)>
processing: num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), 0(12), num_codecs_40(14)>

Marking useful stmt: if (tmp_codec_string_37 != 0B)

Marking useful stmt: if (D.47362_279 == 0)

Marking useful stmt: if (tmp_codec_string_37 != 0B)

processing: if (tmp_codec_string_37 != 0B)

processing: if (D.47362_279 == 0)

marking necessary through D.47362_279 stmt D.47362_279 = PHI <1(8), 1(9), 0(10)>
processing: D.47362_279 = PHI <1(8), 1(9), 0(10)>

Marking useful stmt: if (codec_string_35(D) == 0B)

Marking useful stmt: if (D.47363_278 == 0)

processing: if (D.47363_278 == 0)

marking necessary through D.47363_278 stmt D.47363_278 = *codec_string_35(D);
processing: D.47363_278 = *codec_string_35(D);

processing: if (codec_string_35(D) == 0B)

processing: if (tmp_codec_string_37 != 0B)

processing: D.40424_43 = channel_29 == 0B;

processing: if (smh_31 == 0B)

Marking useful stmt: if (session_28(D) == 0B)

marking necessary through smh_31 stmt smh_31 = session_28(D)->media_handle;
processing: smh_31 = session_28(D)->media_handle;

processing: if (session_28(D) == 0B)

processing: if (D.47366_281 != 0)

Marking useful stmt: if (attr_3 != 0B)

marking necessary through D.47366_281 stmt D.47366_281 = PHI <1(18), 1(19), 0(20)>
processing: D.47366_281 = PHI <1(18), 1(19), 0(20)>

Marking useful stmt: if (D.40429_48 == 0B)

Marking useful stmt: if (D.47367_280 == 0)

processing: if (D.47367_280 == 0)

marking necessary through D.47367_280 stmt D.47367_280 = *D.40429_48;
processing: D.47367_280 = *D.40429_48;

marking necessary through D.40429_48 stmt D.40429_48 = attr_3->a_name;
processing: D.40429_48 = attr_3->a_name;

processing: if (D.40429_48 == 0B)

processing: if (attr_3 != 0B)

processing: if (D.40436_66 != 0B)

marking necessary through D.40436_66 stmt D.40436_66 = attr_4->a_value;
processing: D.40436_66 = attr_4->a_value;

marking necessary through attr_4 stmt attr_4 = PHI <attr_61(31), attr_69(40)>
processing: attr_4 = PHI <attr_61(31), attr_69(40)>

marking necessary through attr_61 stmt attr_61 = m_1->m_attributes;
marking necessary through attr_69 stmt attr_69 = attr_4->a_next;
processing: attr_69 = attr_4->a_next;

processing: attr_61 = m_1->m_attributes;

marking necessary through m_1 stmt m_1 = PHI <m_55(27), m_80(44)>
processing: m_1 = PHI <m_55(27), m_80(44)>

marking necessary through m_55 stmt m_55 = sdp_46(D)->sdp_media;
marking necessary through m_80 stmt m_80 = m_1->m_next;
processing: m_80 = m_1->m_next;

processing: m_55 = sdp_46(D)->sdp_media;

processing: if (D.40447_65 == 0)

marking necessary through D.40447_65 stmt D.40447_65 = strcasecmp (D.40429_64, "ptime");
processing: D.40447_65 = strcasecmp (D.40429_64, "ptime");

marking necessary through D.40429_64 stmt D.40429_64 = attr_4->a_name;
processing: D.40429_64 = attr_4->a_name;

processing: if (D.47373_284 != 0)

Marking useful stmt: if (attr_4 != 0B)

marking necessary through D.47373_284 stmt D.47373_284 = PHI <1(32), 1(33), 0(34)>
processing: D.47373_284 = PHI <1(32), 1(33), 0(34)>

Marking useful stmt: if (D.40429_62 == 0B)

Marking useful stmt: if (D.47374_283 == 0)

processing: if (D.47374_283 == 0)

marking necessary through D.47374_283 stmt D.47374_283 = *D.40429_62;
processing: D.47374_283 = *D.40429_62;

marking necessary through D.40429_62 stmt D.40429_62 = attr_4->a_name;
processing: D.40429_62 = attr_4->a_name;

processing: if (D.40429_62 == 0B)

processing: if (attr_4 != 0B)

processing: if (map_12 != 0B)

Marking useful stmt: if (D.40441_59 != 0)

marking necessary through map_12 stmt map_12 = PHI <map_60(30), map_79(42)>
processing: map_12 = PHI <map_60(30), map_79(42)>

marking necessary through map_60 stmt map_60 = m_1->m_rtpmaps;
marking necessary through map_79 stmt map_79 = map_12->rm_next;
processing: map_79 = map_12->rm_next;

processing: map_60 = m_1->m_rtpmaps;

processing: if (D.40441_59 != 0)

Marking useful stmt: if (D.40438_58 <= 1)

marking necessary through D.40441_59 stmt D.40441_59 = m_1->m_port;
processing: D.40441_59 = m_1->m_port;

processing: if (D.40438_58 <= 1)

marking necessary through D.40438_58 stmt D.40438_58 = D.40437_57 + 4294967294;
processing: D.40438_58 = D.40437_57 + 4294967294;

marking necessary through D.40437_57 stmt D.40437_57 = m_1->m_type;
processing: D.40437_57 = m_1->m_type;

processing: if (m_1 != 0B)

processing: if (match_18 != 0)

marking necessary through match_18 stmt match_18 = PHI <match_208(134), match_213(136), 0(135)>
processing: match_18 = PHI <match_208(134), match_213(136), 0(135)>

marking necessary through match_208 stmt match_208 = D.40491_205 == D.40555_207;
marking necessary through match_213 stmt match_213 = D.40576_212 == 0;
Marking useful stmt: if (D.40491_203 <= 95)

Marking useful stmt: if (D.40453_209 != 0B)

Marking useful stmt: if (D.40502_200 != 0)

processing: if (D.40502_200 != 0)

Marking useful stmt: if (D.47395_294 != 0)

marking necessary through D.40502_200 stmt D.40502_200 = D.40501_199 & 1;
processing: D.40502_200 = D.40501_199 & 1;

marking necessary through D.40501_199 stmt D.40501_199 = (int) D.40500_198;
processing: D.40501_199 = (int) D.40500_198;

marking necessary through D.40500_198 stmt D.40500_198 = D.40499_197->ndlb;
processing: D.40500_198 = D.40499_197->ndlb;

marking necessary through D.40499_197 stmt D.40499_197 = smh_31->mparams;
processing: D.40499_197 = smh_31->mparams;

processing: if (D.47395_294 != 0)

marking necessary through D.47395_294 stmt D.47395_294 = PHI <1(128), 1(129), 0(130)>
processing: D.47395_294 = PHI <1(128), 1(129), 0(130)>

Marking useful stmt: if (D.40453_195 == 0B)

Marking useful stmt: if (D.47396_293 == 0)

processing: if (D.47396_293 == 0)

marking necessary through D.47396_293 stmt D.47396_293 = *D.40453_195;
processing: D.47396_293 = *D.40453_195;

marking necessary through D.40453_195 stmt D.40453_195 = map_15->rm_encoding;
processing: D.40453_195 = map_15->rm_encoding;

marking necessary through map_15 stmt map_15 = PHI <map_189(124), map_229(142)>
processing: map_15 = PHI <map_189(124), map_229(142)>

Marking useful stmt: if (D.40558_186 == 0)

Marking useful stmt: if (D.40561_188 != 0)

marking necessary through map_189 stmt map_189 = m_2->m_rtpmaps;
marking necessary through map_229 stmt map_229 = map_15->rm_next;
processing: map_229 = map_15->rm_next;

processing: map_189 = m_2->m_rtpmaps;

marking necessary through m_2 stmt m_2 = PHI <m_81(46), m_231(146)>
processing: m_2 = PHI <m_81(46), m_231(146)>

marking necessary through m_81 stmt m_81 = sdp_46(D)->sdp_media;
marking necessary through m_231 stmt m_231 = m_2->m_next;
processing: m_231 = m_2->m_next;

processing: m_81 = sdp_46(D)->sdp_media;

processing: if (D.40561_188 != 0)

processing: if (D.40558_186 == 0)

Marking useful stmt: if (D.40556_184 != 0)

processing: if (D.40556_184 != 0)

Marking useful stmt: if (D.40553_181 < 0)

marking necessary through D.40556_184 stmt D.40556_184 = already_did[D.40555_183];
processing: D.40556_184 = already_did[D.40555_183];

marking necessary through D.40555_183 stmt D.40555_183 = (int) D.40552_182;
marking necessary through .MEM_251 stmt already_did = {};
marking necessary through .MEM_276 stmt already_did[D.40555_228] = 1;
processing: already_did[D.40555_228] = 1;

marking necessary through D.40555_228 stmt D.40555_228 = (int) D.40552_227;
processing: D.40555_228 = (int) D.40552_227;

marking necessary through D.40552_227 stmt D.40552_227 = imp_178->ianacode;
processing: D.40552_227 = imp_178->ianacode;

marking necessary through imp_178 stmt imp_178 = codecs[i_21];
processing: imp_178 = codecs[i_21];

Marking useful stmt: if (i_21 < num_codecs_22)

marking necessary through i_21 stmt i_21 = PHI <i_177(145), i_230(144)>
processing: i_21 = PHI <i_177(145), i_230(144)>

marking necessary through i_177 stmt i_177 = PHI <0(115)>
marking necessary through i_230 stmt i_230 = i_21 + 1;
processing: i_230 = i_21 + 1;

processing: i_177 = PHI <0(115)>

processing: if (i_21 < num_codecs_22)

processing: already_did = {};

processing: D.40555_183 = (int) D.40552_182;

marking necessary through D.40552_182 stmt D.40552_182 = imp_178->ianacode;
processing: D.40552_182 = imp_178->ianacode;

processing: if (D.40553_181 < 0)

Marking useful stmt: if (D.40550_179 != 1)

marking necessary through D.40553_181 stmt D.40553_181 = (signed char) D.40552_180;
processing: D.40553_181 = (signed char) D.40552_180;

marking necessary through D.40552_180 stmt D.40552_180 = imp_178->ianacode;
processing: D.40552_180 = imp_178->ianacode;

processing: if (D.40550_179 != 1)

marking necessary through D.40550_179 stmt D.40550_179 = imp_178->codec_type;
processing: D.40550_179 = imp_178->codec_type;

processing: if (D.40453_195 == 0B)

processing: if (D.40453_209 != 0B)

marking necessary through D.40453_209 stmt D.40453_209 = map_15->rm_encoding;
processing: D.40453_209 = map_15->rm_encoding;

processing: if (D.40491_203 <= 95)

marking necessary through D.40491_203 stmt D.40491_203 = (int) D.40455_202;
processing: D.40491_203 = (int) D.40455_202;

marking necessary through D.40455_202 stmt D.40455_202 = map_15->rm_pt;
processing: D.40455_202 = map_15->rm_pt;

processing: match_213 = D.40576_212 == 0;

marking necessary through D.40576_212 stmt D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
processing: D.40576_212 = strcasecmp (D.40453_210, D.40575_211);

marking necessary through D.40453_210 stmt D.40453_210 = map_15->rm_encoding;
marking necessary through D.40575_211 stmt D.40575_211 = imp_178->iananame;
processing: D.40575_211 = imp_178->iananame;

processing: D.40453_210 = map_15->rm_encoding;

processing: match_208 = D.40491_205 == D.40555_207;

marking necessary through D.40491_205 stmt D.40491_205 = (int) D.40455_204;
marking necessary through D.40555_207 stmt D.40555_207 = (int) D.40552_206;
processing: D.40555_207 = (int) D.40552_206;

marking necessary through D.40552_206 stmt D.40552_206 = imp_178->ianacode;
processing: D.40552_206 = imp_178->ianacode;

processing: D.40491_205 = (int) D.40455_204;

marking necessary through D.40455_204 stmt D.40455_204 = map_15->rm_pt;
processing: D.40455_204 = map_15->rm_pt;

processing: if (D.40493_194 != 0)

marking necessary through D.40493_194 stmt D.40493_194 = already_did[D.40491_193];
processing: D.40493_194 = already_did[D.40491_193];

marking necessary through D.40491_193 stmt D.40491_193 = (int) D.40455_192;
processing: D.40491_193 = (int) D.40455_192;

marking necessary through D.40455_192 stmt D.40455_192 = map_15->rm_pt;
processing: D.40455_192 = map_15->rm_pt;

processing: if (D.40491_191 > 127)

Marking useful stmt: if (map_15 != 0B)

marking necessary through D.40491_191 stmt D.40491_191 = (int) D.40455_190;
processing: D.40491_191 = (int) D.40455_190;

marking necessary through D.40455_190 stmt D.40455_190 = map_15->rm_pt;
processing: D.40455_190 = map_15->rm_pt;

processing: if (map_15 != 0B)

processing: if (D.40436_96 != 0B)

marking necessary through D.40436_96 stmt D.40436_96 = attr_5->a_value;
processing: D.40436_96 = attr_5->a_value;

marking necessary through attr_5 stmt attr_5 = PHI <attr_91(52), attr_99(61)>
processing: attr_5 = PHI <attr_91(52), attr_99(61)>

Marking useful stmt: if (D.40441_90 != 0)

marking necessary through attr_91 stmt attr_91 = m_2->m_attributes;
marking necessary through attr_99 stmt attr_99 = attr_5->a_next;
processing: attr_99 = attr_5->a_next;

processing: attr_91 = m_2->m_attributes;

processing: if (D.40441_90 != 0)

Marking useful stmt: if (D.40437_89 == 2)

marking necessary through D.40441_90 stmt D.40441_90 = m_2->m_port;
processing: D.40441_90 = m_2->m_port;

processing: if (D.40437_89 == 2)

Marking useful stmt: if (D.40437_83 == 8)

marking necessary through D.40437_89 stmt D.40437_89 = m_2->m_type;
processing: D.40437_89 = m_2->m_type;

processing: if (D.40437_83 == 8)

Marking useful stmt: if (m_2 != 0B)

marking necessary through D.40437_83 stmt D.40437_83 = m_2->m_type;
processing: D.40437_83 = m_2->m_type;

processing: if (m_2 != 0B)

processing: if (D.40474_95 == 0)

marking necessary through D.40474_95 stmt D.40474_95 = strcasecmp (D.40429_94, "ptime");
processing: D.40474_95 = strcasecmp (D.40429_94, "ptime");

marking necessary through D.40429_94 stmt D.40429_94 = attr_5->a_name;
processing: D.40429_94 = attr_5->a_name;

processing: if (D.47380_287 != 0)

Marking useful stmt: if (attr_5 != 0B)

marking necessary through D.47380_287 stmt D.47380_287 = PHI <1(53), 1(54), 0(55)>
processing: D.47380_287 = PHI <1(53), 1(54), 0(55)>

Marking useful stmt: if (D.40429_92 == 0B)

Marking useful stmt: if (D.47381_286 == 0)

processing: if (D.47381_286 == 0)

marking necessary through D.47381_286 stmt D.47381_286 = *D.40429_92;
processing: D.47381_286 = *D.40429_92;

marking necessary through D.40429_92 stmt D.40429_92 = attr_5->a_name;
processing: D.40429_92 = attr_5->a_name;

processing: if (D.40429_92 == 0B)

processing: if (attr_5 != 0B)

processing: if (match_17 != 0)

marking necessary through match_17 stmt match_17 = PHI <match_132(102), match_137(104), 0(103)>
processing: match_17 = PHI <match_132(102), match_137(104), 0(103)>

marking necessary through match_132 stmt match_132 = D.40491_129 == D.40521_131;
marking necessary through match_137 stmt match_137 = D.40535_136 == 0;
Marking useful stmt: if (D.40491_127 <= 95)

Marking useful stmt: if (D.40453_133 != 0B)

Marking useful stmt: if (D.40502_124 != 0)

processing: if (D.40502_124 != 0)

Marking useful stmt: if (D.47391_292 != 0)

marking necessary through D.40502_124 stmt D.40502_124 = D.40501_123 & 1;
processing: D.40502_124 = D.40501_123 & 1;

marking necessary through D.40501_123 stmt D.40501_123 = (int) D.40500_122;
processing: D.40501_123 = (int) D.40500_122;

marking necessary through D.40500_122 stmt D.40500_122 = D.40499_121->ndlb;
processing: D.40500_122 = D.40499_121->ndlb;

marking necessary through D.40499_121 stmt D.40499_121 = smh_31->mparams;
processing: D.40499_121 = smh_31->mparams;

processing: if (D.47391_292 != 0)

marking necessary through D.47391_292 stmt D.47391_292 = PHI <1(96), 1(97), 0(98)>
processing: D.47391_292 = PHI <1(96), 1(97), 0(98)>

Marking useful stmt: if (D.40453_119 == 0B)

Marking useful stmt: if (D.47392_291 == 0)

processing: if (D.47392_291 == 0)

marking necessary through D.47392_291 stmt D.47392_291 = *D.40453_119;
processing: D.47392_291 = *D.40453_119;

marking necessary through D.40453_119 stmt D.40453_119 = map_14->rm_encoding;
processing: D.40453_119 = map_14->rm_encoding;

marking necessary through map_14 stmt map_14 = PHI <map_113(92), map_139(107)>
processing: map_14 = PHI <map_113(92), map_139(107)>

Marking useful stmt: if (D.40522_112 != 0)

marking necessary through map_113 stmt map_113 = m_2->m_rtpmaps;
marking necessary through map_139 stmt map_139 = map_14->rm_next;
processing: map_139 = map_14->rm_next;

processing: map_113 = m_2->m_rtpmaps;

processing: if (D.40522_112 != 0)

Marking useful stmt: if (D.40519_109 < 0)

marking necessary through D.40522_112 stmt D.40522_112 = already_did[D.40521_111];
processing: D.40522_112 = already_did[D.40521_111];

marking necessary through D.40521_111 stmt D.40521_111 = (int) D.40518_110;
processing: D.40521_111 = (int) D.40518_110;

marking necessary through D.40518_110 stmt D.40518_110 = imp_106->ianacode;
processing: D.40518_110 = imp_106->ianacode;

marking necessary through imp_106 stmt imp_106 = codecs[i_20];
processing: imp_106 = codecs[i_20];

Marking useful stmt: if (i_20 < num_codecs_22)

marking necessary through i_20 stmt i_20 = PHI <i_310(110), i_140(109)>
processing: i_20 = PHI <i_310(110), i_140(109)>

Marking useful stmt: if (prefer_sdp_23 != 0)

marking necessary through i_310 stmt i_310 = PHI <0(68)>
marking necessary through i_140 stmt i_140 = i_20 + 1;
processing: i_140 = i_20 + 1;

processing: i_310 = PHI <0(68)>

processing: if (prefer_sdp_23 != 0)

Marking useful stmt: if (D.40487_104 == 0)

marking necessary through prefer_sdp_23 stmt prefer_sdp_23 = PHI <0(5), 0(6), 1(7)>
processing: prefer_sdp_23 = PHI <0(5), 0(6), 1(7)>

Marking useful stmt: if (var_32 != 0B)

Marking useful stmt: if (D.40412_33 != 0)

processing: if (D.40412_33 != 0)

processing: if (var_32 != 0B)

processing: if (D.40487_104 == 0)

processing: if (i_20 < num_codecs_22)

processing: if (D.40519_109 < 0)

Marking useful stmt: if (D.40516_107 != 0)

marking necessary through D.40519_109 stmt D.40519_109 = (signed char) D.40518_108;
processing: D.40519_109 = (signed char) D.40518_108;

marking necessary through D.40518_108 stmt D.40518_108 = imp_106->ianacode;
processing: D.40518_108 = imp_106->ianacode;

processing: if (D.40516_107 != 0)

marking necessary through D.40516_107 stmt D.40516_107 = imp_106->codec_type;
processing: D.40516_107 = imp_106->codec_type;

processing: if (D.40453_119 == 0B)

processing: if (D.40453_133 != 0B)

marking necessary through D.40453_133 stmt D.40453_133 = map_14->rm_encoding;
processing: D.40453_133 = map_14->rm_encoding;

processing: if (D.40491_127 <= 95)

marking necessary through D.40491_127 stmt D.40491_127 = (int) D.40455_126;
processing: D.40491_127 = (int) D.40455_126;

marking necessary through D.40455_126 stmt D.40455_126 = map_14->rm_pt;
processing: D.40455_126 = map_14->rm_pt;

processing: match_137 = D.40535_136 == 0;

marking necessary through D.40535_136 stmt D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
processing: D.40535_136 = strcasecmp (D.40453_134, D.40534_135);

marking necessary through D.40453_134 stmt D.40453_134 = map_14->rm_encoding;
marking necessary through D.40534_135 stmt D.40534_135 = imp_106->iananame;
processing: D.40534_135 = imp_106->iananame;

processing: D.40453_134 = map_14->rm_encoding;

processing: match_132 = D.40491_129 == D.40521_131;

marking necessary through D.40491_129 stmt D.40491_129 = (int) D.40455_128;
marking necessary through D.40521_131 stmt D.40521_131 = (int) D.40518_130;
processing: D.40521_131 = (int) D.40518_130;

marking necessary through D.40518_130 stmt D.40518_130 = imp_106->ianacode;
processing: D.40518_130 = imp_106->ianacode;

processing: D.40491_129 = (int) D.40455_128;

marking necessary through D.40455_128 stmt D.40455_128 = map_14->rm_pt;
processing: D.40455_128 = map_14->rm_pt;

processing: if (D.40493_118 != 0)

marking necessary through D.40493_118 stmt D.40493_118 = already_did[D.40491_117];
processing: D.40493_118 = already_did[D.40491_117];

marking necessary through D.40491_117 stmt D.40491_117 = (int) D.40455_116;
processing: D.40491_117 = (int) D.40455_116;

marking necessary through D.40455_116 stmt D.40455_116 = map_14->rm_pt;
processing: D.40455_116 = map_14->rm_pt;

processing: if (D.40491_115 > 127)

Marking useful stmt: if (map_14 != 0B)

marking necessary through D.40491_115 stmt D.40491_115 = (int) D.40455_114;
processing: D.40491_115 = (int) D.40455_114;

marking necessary through D.40455_114 stmt D.40455_114 = map_14->rm_pt;
processing: D.40455_114 = map_14->rm_pt;

processing: if (map_14 != 0B)

processing: if (map_13 != 0B)

marking necessary through map_13 stmt map_13 = PHI <map_141(69), map_170(86)>
processing: map_13 = PHI <map_141(69), map_170(86)>

marking necessary through map_141 stmt map_141 = m_2->m_rtpmaps;
marking necessary through map_170 stmt map_170 = map_13->rm_next;
processing: map_170 = map_13->rm_next;

processing: map_141 = m_2->m_rtpmaps;

processing: if (connection_11 == 0B)

marking necessary through connection_11 stmt connection_11 = PHI <connection_173(113), connection_175(114)>
processing: connection_11 = PHI <connection_173(113), connection_175(114)>

marking necessary through connection_173 stmt connection_173 = sdp_46(D)->sdp_connection;
marking necessary through connection_175 stmt connection_175 = m_2->m_connections;
Marking useful stmt: if (D.40479_174 != 0B)

processing: if (D.40479_174 != 0B)

marking necessary through D.40479_174 stmt D.40479_174 = m_2->m_connections;
processing: D.40479_174 = m_2->m_connections;

processing: connection_175 = m_2->m_connections;

processing: connection_173 = sdp_46(D)->sdp_connection;

processing: if (D.40441_172 != 0)

marking necessary through D.40441_172 stmt D.40441_172 = m_2->m_port;
processing: D.40441_172 = m_2->m_port;

processing: if (D.40437_171 == 3)

marking necessary through D.40437_171 stmt D.40437_171 = m_2->m_type;
processing: D.40437_171 = m_2->m_type;

processing: if (connection_10 == 0B)

marking necessary through connection_10 stmt connection_10 = PHI <connection_100(63), connection_102(64)>
processing: connection_10 = PHI <connection_100(63), connection_102(64)>

marking necessary through connection_100 stmt connection_100 = sdp_46(D)->sdp_connection;
marking necessary through connection_102 stmt connection_102 = m_2->m_connections;
Marking useful stmt: if (D.40479_101 != 0B)

processing: if (D.40479_101 != 0B)

marking necessary through D.40479_101 stmt D.40479_101 = m_2->m_connections;
processing: D.40479_101 = m_2->m_connections;

processing: connection_102 = m_2->m_connections;

processing: connection_100 = sdp_46(D)->sdp_connection;

processing: if (D.40441_84 != 0)

marking necessary through D.40441_84 stmt D.40441_84 = m_2->m_port;
processing: D.40441_84 = m_2->m_port;

processing: return;

processing: switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);

Marking useful stmt: if (D.40591_232 == 44)

processing: if (D.40591_232 == 44)

marking necessary through D.40591_232 stmt D.40591_232 = buf[0];
processing: D.40591_232 = buf[0];

processing: switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);

Marking useful stmt: if (dptime_9 > 0)

marking necessary through D.40588_222 stmt D.40588_222 = &buf + D.40587_221;
marking necessary through D.40590_224 stmt D.40590_224 = 1024 - D.40589_223;
marking necessary through D.40575_225 stmt D.40575_225 = imp_178->iananame;
marking necessary through D.40457_226 stmt D.40457_226 = map_15->rm_rate;
processing: D.40457_226 = map_15->rm_rate;

processing: D.40575_225 = imp_178->iananame;

processing: D.40590_224 = 1024 - D.40589_223;

marking necessary through D.40589_223 stmt D.40589_223 = strlen (&buf);
processing: D.40589_223 = strlen (&buf);

processing: D.40588_222 = &buf + D.40587_221;

marking necessary through D.40587_221 stmt D.40587_221 = strlen (&buf);
processing: D.40587_221 = strlen (&buf);

processing: if (dptime_9 > 0)

marking necessary through dptime_9 stmt dptime_9 = PHI <dptime_282(24), 0(26)>
processing: dptime_9 = PHI <dptime_282(24), 0(26)>

processing: switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);

marking necessary through D.40583_216 stmt D.40583_216 = &buf + D.40582_215;
marking necessary through D.40585_218 stmt D.40585_218 = 1024 - D.40584_217;
marking necessary through D.40575_219 stmt D.40575_219 = imp_178->iananame;
marking necessary through D.40457_220 stmt D.40457_220 = map_15->rm_rate;
processing: D.40457_220 = map_15->rm_rate;

processing: D.40575_219 = imp_178->iananame;

processing: D.40585_218 = 1024 - D.40584_217;

marking necessary through D.40584_217 stmt D.40584_217 = strlen (&buf);
processing: D.40584_217 = strlen (&buf);

processing: D.40583_216 = &buf + D.40582_215;

marking necessary through D.40582_215 stmt D.40582_215 = strlen (&buf);
processing: D.40582_215 = strlen (&buf);

processing: D.40561_188 = switch_channel_test_flag (D.40557_187, 114);

marking necessary through D.40557_187 stmt D.40557_187 = session_28(D)->channel;
processing: D.40557_187 = session_28(D)->channel;

processing: D.40558_186 = switch_channel_direction (D.40557_185);

marking necessary through D.40557_185 stmt D.40557_185 = session_28(D)->channel;
processing: D.40557_185 = session_28(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");

processing: D.40547_176 = switch_channel_get_session (channel_29);

processing: add_audio_codec (map_14, ptime_8, &buf, 1024);

marking necessary through ptime_8 stmt ptime_8 = PHI <ptime_288(60), dptime_9(62)>
processing: ptime_8 = PHI <ptime_288(60), dptime_9(62)>

processing: add_audio_codec (map_13, ptime_8, &buf, 1024);

Marking useful stmt: if (match_16 != 0)

processing: if (match_16 != 0)

Marking useful stmt: if (i_19 < num_codecs_22)

marking necessary through match_16 stmt match_16 = PHI <match_162(79), match_167(81), 0(80)>
processing: match_16 = PHI <match_162(79), match_167(81), 0(80)>

marking necessary through match_162 stmt match_162 = D.40491_159 == D.40506_161;
marking necessary through match_167 stmt match_167 = D.40510_166 == 0;
Marking useful stmt: if (D.40491_157 <= 95)

Marking useful stmt: if (D.40453_163 != 0B)

Marking useful stmt: if (D.40502_154 != 0)

processing: if (D.40502_154 != 0)

Marking useful stmt: if (D.47387_290 != 0)

marking necessary through D.40502_154 stmt D.40502_154 = D.40501_153 & 1;
processing: D.40502_154 = D.40501_153 & 1;

marking necessary through D.40501_153 stmt D.40501_153 = (int) D.40500_152;
processing: D.40501_153 = (int) D.40500_152;

marking necessary through D.40500_152 stmt D.40500_152 = D.40499_151->ndlb;
processing: D.40500_152 = D.40499_151->ndlb;

marking necessary through D.40499_151 stmt D.40499_151 = smh_31->mparams;
processing: D.40499_151 = smh_31->mparams;

processing: if (D.47387_290 != 0)

marking necessary through D.47387_290 stmt D.47387_290 = PHI <1(73), 1(74), 0(75)>
processing: D.47387_290 = PHI <1(73), 1(74), 0(75)>

Marking useful stmt: if (D.40453_149 == 0B)

Marking useful stmt: if (D.47388_289 == 0)

processing: if (D.47388_289 == 0)

marking necessary through D.47388_289 stmt D.47388_289 = *D.40453_149;
processing: D.47388_289 = *D.40453_149;

marking necessary through D.40453_149 stmt D.40453_149 = map_13->rm_encoding;
processing: D.40453_149 = map_13->rm_encoding;

processing: if (D.40453_149 == 0B)

processing: if (D.40453_163 != 0B)

marking necessary through D.40453_163 stmt D.40453_163 = map_13->rm_encoding;
processing: D.40453_163 = map_13->rm_encoding;

processing: if (D.40491_157 <= 95)

marking necessary through D.40491_157 stmt D.40491_157 = (int) D.40455_156;
processing: D.40491_157 = (int) D.40455_156;

marking necessary through D.40455_156 stmt D.40455_156 = map_13->rm_pt;
processing: D.40455_156 = map_13->rm_pt;

processing: match_167 = D.40510_166 == 0;

marking necessary through D.40510_166 stmt D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
processing: D.40510_166 = strcasecmp (D.40453_164, D.40509_165);

marking necessary through D.40453_164 stmt D.40453_164 = map_13->rm_encoding;
marking necessary through D.40509_165 stmt D.40509_165 = imp_148->iananame;
processing: D.40509_165 = imp_148->iananame;

marking necessary through imp_148 stmt imp_148 = codecs[i_19];
processing: imp_148 = codecs[i_19];

marking necessary through i_19 stmt i_19 = PHI <i_214(85), i_169(84)>
processing: i_19 = PHI <i_214(85), i_169(84)>

Marking useful stmt: if (D.40493_146 != 0)

marking necessary through i_214 stmt i_214 = PHI <0(71)>
marking necessary through i_169 stmt i_169 = i_19 + 1;
processing: i_169 = i_19 + 1;

processing: i_214 = PHI <0(71)>

processing: if (D.40493_146 != 0)

Marking useful stmt: if (D.40491_143 > 127)

marking necessary through D.40493_146 stmt D.40493_146 = already_did[D.40491_145];
processing: D.40493_146 = already_did[D.40491_145];

marking necessary through D.40491_145 stmt D.40491_145 = (int) D.40455_144;
processing: D.40491_145 = (int) D.40455_144;

marking necessary through D.40455_144 stmt D.40455_144 = map_13->rm_pt;
processing: D.40455_144 = map_13->rm_pt;

processing: if (D.40491_143 > 127)

marking necessary through D.40491_143 stmt D.40491_143 = (int) D.40455_142;
processing: D.40491_143 = (int) D.40455_142;

marking necessary through D.40455_142 stmt D.40455_142 = map_13->rm_pt;
processing: D.40455_142 = map_13->rm_pt;

processing: D.40453_164 = map_13->rm_encoding;

processing: match_162 = D.40491_159 == D.40506_161;

marking necessary through D.40491_159 stmt D.40491_159 = (int) D.40455_158;
marking necessary through D.40506_161 stmt D.40506_161 = (int) D.40505_160;
processing: D.40506_161 = (int) D.40505_160;

marking necessary through D.40505_160 stmt D.40505_160 = imp_148->ianacode;
processing: D.40505_160 = imp_148->ianacode;

processing: D.40491_159 = (int) D.40455_158;

marking necessary through D.40455_158 stmt D.40455_158 = map_13->rm_pt;
processing: D.40455_158 = map_13->rm_pt;

processing: if (i_19 < num_codecs_22)

processing: D.40487_104 = switch_channel_direction (channel_29);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");

processing: D.40484_103 = switch_channel_get_session (channel_29);

processing: ptime_288 = strtol (D.40436_97, 0B, 10);

marking necessary through D.40436_97 stmt D.40436_97 = attr_5->a_value;
processing: D.40436_97 = attr_5->a_value;

processing: switch_snprintf (D.40464_86, D.40466_88, ",t38");

marking necessary through D.40464_86 stmt D.40464_86 = &buf + D.40463_85;
marking necessary through D.40466_88 stmt D.40466_88 = 1024 - D.40465_87;
processing: D.40466_88 = 1024 - D.40465_87;

marking necessary through D.40465_87 stmt D.40465_87 = strlen (&buf);
processing: D.40465_87 = strlen (&buf);

processing: D.40464_86 = &buf + D.40463_85;

marking necessary through D.40463_85 stmt D.40463_85 = strlen (&buf);
processing: D.40463_85 = strlen (&buf);

processing: switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);

marking necessary through D.40452_71 stmt D.40452_71 = D.40437_70 != 2;
marking necessary through D.40453_72 stmt D.40453_72 = map_12->rm_encoding;
marking necessary through D.40454_73 stmt D.40454_73 = map_12->rm_fmtp;
marking necessary through D.40456_75 stmt D.40456_75 = (uint32_t) D.40455_74;
marking necessary through D.40457_76 stmt D.40457_76 = map_12->rm_rate;
marking necessary through ptime.5_77 stmt ptime.5_77 = (uint32_t) ptime_6;
processing: ptime.5_77 = (uint32_t) ptime_6;

marking necessary through ptime_6 stmt ptime_6 = PHI <ptime_285(39), ptime_7(41)>
processing: ptime_6 = PHI <ptime_285(39), ptime_7(41)>

marking necessary through ptime_7 stmt ptime_7 = PHI <dptime_9(30), ptime_6(42)>
processing: ptime_7 = PHI <dptime_9(30), ptime_6(42)>

processing: D.40457_76 = map_12->rm_rate;

processing: D.40456_75 = (uint32_t) D.40455_74;

marking necessary through D.40455_74 stmt D.40455_74 = map_12->rm_pt;
processing: D.40455_74 = map_12->rm_pt;

processing: D.40454_73 = map_12->rm_fmtp;

processing: D.40453_72 = map_12->rm_encoding;

processing: D.40452_71 = D.40437_70 != 2;

marking necessary through D.40437_70 stmt D.40437_70 = m_1->m_type;
processing: D.40437_70 = m_1->m_type;

processing: ptime_285 = strtol (D.40436_67, 0B, 10);

marking necessary through D.40436_67 stmt D.40436_67 = attr_4->a_value;
processing: D.40436_67 = attr_4->a_value;

processing: switch_core_media_pass_zrtp_hash (session_28(D));

processing: switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));

processing: dptime_282 = strtol (D.40436_52, 0B, 10);

marking necessary through D.40436_52 stmt D.40436_52 = attr_3->a_value;
processing: D.40436_52 = attr_3->a_value;

processing: num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);

processing: free (tmp_codec_string_37);

processing: num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);

marking necessary through num_codecs_39 stmt num_codecs_39 = (int) D.40420_38;
processing: num_codecs_39 = (int) D.40420_38;

processing: D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);

processing: tmp_codec_string_37 = __strdup (codec_string_35(D));

processing: D.40412_33 = switch_true (var_32);

processing: var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);

processing: __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);

processing: channel_29 = switch_core_session_get_channel (session_28(D));


Eliminating unnecessary statements:
Deleting : ptime_98 = ptime_288;

Deleting : ptime_68 = ptime_285;

Deleting : ptime_82 = dptime_9;

Deleting : dptime_53 = dptime_282;

Deleting : ptime_56 = dptime_9;

Deleting : .MEM_196 = PHI <.MEM_267(68)>

Deleting : .MEM_138 = PHI <.MEM_247(115)>

Removed 5 of 392 statements (1%)
Removed 2 of 54 PHI nodes (3%)
Scope blocks after cleanups:

{ Scope block #0 
  char buf[1024];
  struct sdp_media_t * m;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  struct sdp_connection_t * connection;
  struct sdp_rtpmap_t * map;
  short int match;
  int i;
  int already_did[128];
  int num_codecs;
  char * codec_order[50];
  const struct switch_codec_implementation_t * codecs[50];
  struct switch_channel_t * channel;
  int prefer_sdp;
  const char * var;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";

  { Scope block #61 src/switch_core_media.c:8275 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #62 Originating from :#0 

    }

  }

  { Scope block #63 src/switch_core_media.c:8271 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #64 Originating from :#0 

    }

  }

  { Scope block #65 src/switch_core_media.c:8247 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #66 Originating from :#0 

    }

  }

  { Scope block #67 src/switch_core_media.c:8243 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #68 Originating from :#0 

    }

  }

  { Scope block #69 src/switch_core_media.c:8229 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #70 Originating from :#0 

    }

  }

  { Scope block #71 src/switch_core_media.c:8225 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #72 Originating from :#0 

    }

  }

  { Scope block #73 src/switch_core_media.c:8209 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #74 Originating from :#0 

    }

  }

  { Scope block #75 
    char * tmp_codec_string;

  }

  { Scope block #76 
    const struct switch_codec_implementation_t * imp;

    { Scope block #77 src/switch_core_media.c:8298 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #78 Originating from :#0 

      }

    }

  }

  { Scope block #79 
    const struct switch_codec_implementation_t * imp;

    { Scope block #80 src/switch_core_media.c:8327 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #81 Originating from :#0 

      }

    }

  }

  { Scope block #82 
    const struct switch_codec_implementation_t * imp;

    { Scope block #83 src/switch_core_media.c:8372 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #84 Originating from :#0 

      }

    }

  }

}
switch_core_media_set_r_sdp_codec_string (struct switch_core_session_t * session, const char * codec_string, struct sdp_session_t * sdp, switch_sdp_type_t sdp_type)
{
  const char D.47396;
  int D.47395;
  const char D.47392;
  int D.47391;
  const char D.47388;
  int D.47387;
  const char D.47381;
  int D.47380;
  const char D.47374;
  int D.47373;
  const char D.47367;
  int D.47366;
  const char D.47363;
  int D.47362;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  char * tmp_codec_string;
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  struct switch_media_handle_t * smh;
  const char * var;
  int prefer_sdp;
  struct switch_channel_t * channel;
  const struct switch_codec_implementation_t * codecs[50];
  char * codec_order[50];
  int num_codecs;
  int already_did[128];
  int i;
  short int match;
  struct sdp_rtpmap_t * map;
  struct sdp_connection_t * connection;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  char buf[1024];
  char D.40591;
  unsigned int D.40590;
  size_t D.40589;
  char * D.40588;
  size_t D.40587;
  unsigned int D.40585;
  size_t D.40584;
  char * D.40583;
  size_t D.40582;
  int D.40576;
  char * const D.40575;
  uint32_t D.40561;
  switch_call_direction_t D.40558;
  struct switch_channel_t * D.40557;
  int D.40556;
  int D.40555;
  signed char D.40553;
  const switch_payload_t D.40552;
  const switch_codec_type_t D.40550;
  struct switch_core_session_t * D.40547;
  int D.40535;
  char * const D.40534;
  int D.40522;
  int D.40521;
  signed char D.40519;
  const switch_payload_t D.40518;
  const switch_codec_type_t D.40516;
  int D.40510;
  char * const D.40509;
  int D.40506;
  const switch_payload_t D.40505;
  int D.40502;
  int D.40501;
  switch_core_media_NDLB_t D.40500;
  struct switch_core_media_params_t * D.40499;
  int D.40493;
  int D.40491;
  switch_call_direction_t D.40487;
  struct switch_core_session_t * D.40484;
  struct sdp_connection_t * D.40479;
  int D.40474;
  unsigned int D.40466;
  size_t D.40465;
  char * D.40464;
  size_t D.40463;
  uint32_t ptime.5;
  long unsigned int D.40457;
  uint32_t D.40456;
  <unnamed-unsigned:7> D.40455;
  const char * D.40454;
  const char * D.40453;
  switch_media_type_t D.40452;
  int D.40447;
  long unsigned int D.40441;
  unsigned int D.40438;
  sdp_media_e D.40437;
  const char * D.40436;
  int D.40433;
  const char * D.40429;
  _Bool D.40426;
  _Bool D.40425;
  _Bool D.40424;
  unsigned int D.40420;
  int D.40412;

<bb 2>:
  buf = {};
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG match => 0
  already_did = {};
  # DEBUG num_codecs => 0
  codecs = {};
  channel_29 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_29
  # DEBUG prefer_sdp => 0
  if (session_28(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_31 = session_28(D)->media_handle;
  # DEBUG smh => smh_31
  if (smh_31 == 0B)
    goto <bb 153>;
  else
    goto <bb 5>;

<bb 5>:
  var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);
  # DEBUG var => var_32
  if (var_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.40412_33 = switch_true (var_32);
  if (D.40412_33 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  # DEBUG prefer_sdp => 1

<bb 8>:
  # prefer_sdp_23 = PHI <0(5), 0(6), 1(7)>
  # DEBUG prefer_sdp => prefer_sdp_23
  # DEBUG s => codec_string_35(D)
  if (codec_string_35(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;

<bb 9>:
  D.47363_278 = *codec_string_35(D);
  if (D.47363_278 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # D.47362_279 = PHI <1(8), 1(9), 0(10)>
  if (D.47362_279 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  tmp_codec_string_37 = __strdup (codec_string_35(D));
  # DEBUG tmp_codec_string => tmp_codec_string_37
  if (tmp_codec_string_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 13>:
  D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);
  num_codecs_39 = (int) D.40420_38;
  # DEBUG num_codecs => num_codecs_39
  num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);
  # DEBUG num_codecs => num_codecs_40
  if (tmp_codec_string_37 != 0B)
    goto <bb 14>;
  else
    goto <bb 16>;

<bb 14>:
  free (tmp_codec_string_37);
  # DEBUG tmp_codec_string => 0B
  goto <bb 16>;

<bb 15>:
  num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);
  # DEBUG num_codecs => num_codecs_42

<bb 16>:
  # num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), 0(12), num_codecs_40(14)>
  # DEBUG num_codecs => num_codecs_22
  D.40424_43 = channel_29 == 0B;
  D.40425_44 = num_codecs_22 == 0;
  D.40426_45 = D.40424_43 || D.40425_44;
  if (D.40426_45 != 0)
    goto <bb 153>;
  else
    goto <bb 17>;

<bb 17>:
  attr_47 = sdp_46(D)->sdp_attributes;
  # DEBUG attr => attr_47
  goto <bb 26>;

<bb 18>:
  D.40429_48 = attr_3->a_name;
  # DEBUG s => D.40429_48
  if (D.40429_48 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;

<bb 19>:
  D.47367_280 = *D.40429_48;
  if (D.47367_280 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:

<bb 21>:
  # D.47366_281 = PHI <1(18), 1(19), 0(20)>
  if (D.47366_281 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  // predicted unlikely by continue predictor.
  goto <bb 25>;

<bb 23>:
  D.40429_50 = attr_3->a_name;
  D.40433_51 = strcasecmp (D.40429_50, "ptime");
  if (D.40433_51 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.40436_52 = attr_3->a_value;
  # DEBUG __nptr => D.40436_52
  dptime_282 = strtol (D.40436_52, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 27>;

<bb 25>:
  attr_54 = attr_3->a_next;
  # DEBUG attr => attr_54

<bb 26>:
  # attr_3 = PHI <attr_47(17), attr_54(25)>
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 18>;
  else
    goto <bb 27>;

<bb 27>:
  # dptime_9 = PHI <dptime_282(24), 0(26)>
  # DEBUG dptime => dptime_9
  switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));
  switch_core_media_pass_zrtp_hash (session_28(D));
  m_55 = sdp_46(D)->sdp_media;
  # DEBUG m => m_55
  goto <bb 45>;

<bb 28>:
  # DEBUG ptime => dptime_9
  D.40437_57 = m_1->m_type;
  D.40438_58 = D.40437_57 + 4294967294;
  if (D.40438_58 <= 1)
    goto <bb 29>;
  else
    goto <bb 44>;

<bb 29>:
  D.40441_59 = m_1->m_port;
  if (D.40441_59 != 0)
    goto <bb 30>;
  else
    goto <bb 44>;

<bb 30>:
  map_60 = m_1->m_rtpmaps;
  # DEBUG map => map_60
  goto <bb 43>;

<bb 31>:
  attr_61 = m_1->m_attributes;
  # DEBUG attr => attr_61
  goto <bb 41>;

<bb 32>:
  D.40429_62 = attr_4->a_name;
  # DEBUG s => D.40429_62
  if (D.40429_62 == 0B)
    goto <bb 35>;
  else
    goto <bb 33>;

<bb 33>:
  D.47374_283 = *D.40429_62;
  if (D.47374_283 == 0)
    goto <bb 35>;
  else
    goto <bb 34>;

<bb 34>:

<bb 35>:
  # D.47373_284 = PHI <1(32), 1(33), 0(34)>
  if (D.47373_284 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  // predicted unlikely by continue predictor.
  goto <bb 40>;

<bb 37>:
  D.40429_64 = attr_4->a_name;
  D.40447_65 = strcasecmp (D.40429_64, "ptime");
  if (D.40447_65 == 0)
    goto <bb 38>;
  else
    goto <bb 40>;

<bb 38>:
  D.40436_66 = attr_4->a_value;
  if (D.40436_66 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.40436_67 = attr_4->a_value;
  # DEBUG __nptr => D.40436_67
  ptime_285 = strtol (D.40436_67, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 42>;

<bb 40>:
  attr_69 = attr_4->a_next;
  # DEBUG attr => attr_69

<bb 41>:
  # attr_4 = PHI <attr_61(31), attr_69(40)>
  # DEBUG attr => attr_4
  if (attr_4 != 0B)
    goto <bb 32>;
  else
    goto <bb 42>;

<bb 42>:
  # ptime_6 = PHI <ptime_285(39), ptime_7(41)>
  # DEBUG ptime => ptime_6
  D.40437_70 = m_1->m_type;
  D.40452_71 = D.40437_70 != 2;
  D.40453_72 = map_12->rm_encoding;
  D.40454_73 = map_12->rm_fmtp;
  D.40455_74 = map_12->rm_pt;
  D.40456_75 = (uint32_t) D.40455_74;
  D.40457_76 = map_12->rm_rate;
  ptime.5_77 = (uint32_t) ptime_6;
  switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);
  map_79 = map_12->rm_next;
  # DEBUG map => map_79

<bb 43>:
  # ptime_7 = PHI <dptime_9(30), ptime_6(42)>
  # map_12 = PHI <map_60(30), map_79(42)>
  # DEBUG map => map_12
  # DEBUG ptime => ptime_7
  if (map_12 != 0B)
    goto <bb 31>;
  else
    goto <bb 44>;

<bb 44>:
  m_80 = m_1->m_next;
  # DEBUG m => m_80

<bb 45>:
  # m_1 = PHI <m_55(27), m_80(44)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 46>;

<bb 46>:
  m_81 = sdp_46(D)->sdp_media;
  # DEBUG m => m_81
  goto <bb 150>;

<bb 47>:
  # DEBUG ptime => dptime_9
  D.40437_83 = m_2->m_type;
  if (D.40437_83 == 8)
    goto <bb 48>;
  else
    goto <bb 50>;

<bb 48>:
  D.40441_84 = m_2->m_port;
  if (D.40441_84 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.40463_85 = strlen (&buf);
  D.40464_86 = &buf + D.40463_85;
  D.40465_87 = strlen (&buf);
  D.40466_88 = 1024 - D.40465_87;
  switch_snprintf (D.40464_86, D.40466_88, ",t38");
  goto <bb 149>;

<bb 50>:
  D.40437_89 = m_2->m_type;
  if (D.40437_89 == 2)
    goto <bb 51>;
  else
    goto <bb 113>;

<bb 51>:
  D.40441_90 = m_2->m_port;
  if (D.40441_90 != 0)
    goto <bb 52>;
  else
    goto <bb 113>;

<bb 52>:
  attr_91 = m_2->m_attributes;
  # DEBUG attr => attr_91
  goto <bb 62>;

<bb 53>:
  D.40429_92 = attr_5->a_name;
  # DEBUG s => D.40429_92
  if (D.40429_92 == 0B)
    goto <bb 56>;
  else
    goto <bb 54>;

<bb 54>:
  D.47381_286 = *D.40429_92;
  if (D.47381_286 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;

<bb 55>:

<bb 56>:
  # D.47380_287 = PHI <1(53), 1(54), 0(55)>
  if (D.47380_287 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  // predicted unlikely by continue predictor.
  goto <bb 61>;

<bb 58>:
  D.40429_94 = attr_5->a_name;
  D.40474_95 = strcasecmp (D.40429_94, "ptime");
  if (D.40474_95 == 0)
    goto <bb 59>;
  else
    goto <bb 61>;

<bb 59>:
  D.40436_96 = attr_5->a_value;
  if (D.40436_96 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.40436_97 = attr_5->a_value;
  # DEBUG __nptr => D.40436_97
  ptime_288 = strtol (D.40436_97, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 63>;

<bb 61>:
  attr_99 = attr_5->a_next;
  # DEBUG attr => attr_99

<bb 62>:
  # attr_5 = PHI <attr_91(52), attr_99(61)>
  # DEBUG attr => attr_5
  if (attr_5 != 0B)
    goto <bb 53>;
  else
    goto <bb 63>;

<bb 63>:
  # ptime_8 = PHI <ptime_288(60), dptime_9(62)>
  # DEBUG ptime => ptime_8
  connection_100 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_100
  D.40479_101 = m_2->m_connections;
  if (D.40479_101 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  connection_102 = m_2->m_connections;
  # DEBUG connection => connection_102

<bb 65>:
  # connection_10 = PHI <connection_100(63), connection_102(64)>
  # DEBUG connection => connection_10
  if (connection_10 == 0B)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.40484_103 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;

<bb 67>:
  D.40487_104 = switch_channel_direction (channel_29);
  if (D.40487_104 == 0)
    goto <bb 70>;
  else
    goto <bb 68>;

<bb 68>:
  if (prefer_sdp_23 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;

<bb 69>:
  # i_310 = PHI <0(68)>
  goto <bb 112>;

<bb 70>:
  map_141 = m_2->m_rtpmaps;
  # DEBUG map => map_141
  goto <bb 89>;

<bb 71>:
  D.40455_142 = map_13->rm_pt;
  D.40491_143 = (int) D.40455_142;
  if (D.40491_143 > 127)
    goto <bb 74>;
  else
    goto <bb 72>;

<bb 72>:
  D.40455_144 = map_13->rm_pt;
  D.40491_145 = (int) D.40455_144;
  D.40493_146 = already_did[D.40491_145];
  if (D.40493_146 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;

<bb 73>:
  # i_214 = PHI <0(72)>
  goto <bb 87>;

<bb 74>:
  // predicted unlikely by continue predictor.
  goto <bb 88>;

<bb 75>:
  imp_148 = codecs[i_19];
  # DEBUG imp => imp_148
  D.40453_149 = map_13->rm_encoding;
  # DEBUG s => D.40453_149
  if (D.40453_149 == 0B)
    goto <bb 78>;
  else
    goto <bb 76>;

<bb 76>:
  D.47388_289 = *D.40453_149;
  if (D.47388_289 == 0)
    goto <bb 78>;
  else
    goto <bb 77>;

<bb 77>:

<bb 78>:
  # D.47387_290 = PHI <1(75), 1(76), 0(77)>
  if (D.47387_290 != 0)
    goto <bb 80>;
  else
    goto <bb 79>;

<bb 79>:
  D.40499_151 = smh_31->mparams;
  D.40500_152 = D.40499_151->ndlb;
  D.40501_153 = (int) D.40500_152;
  D.40502_154 = D.40501_153 & 1;
  if (D.40502_154 != 0)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.40455_156 = map_13->rm_pt;
  D.40491_157 = (int) D.40455_156;
  if (D.40491_157 <= 95)
    goto <bb 81>;
  else
    goto <bb 82>;

<bb 81>:
  D.40455_158 = map_13->rm_pt;
  D.40491_159 = (int) D.40455_158;
  D.40505_160 = imp_148->ianacode;
  D.40506_161 = (int) D.40505_160;
  match_162 = D.40491_159 == D.40506_161;
  # DEBUG match => match_162
  goto <bb 84>;

<bb 82>:
  D.40453_163 = map_13->rm_encoding;
  if (D.40453_163 != 0B)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  D.40453_164 = map_13->rm_encoding;
  D.40509_165 = imp_148->iananame;
  D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
  match_167 = D.40510_166 == 0;
  # DEBUG match => match_167

<bb 84>:
  # match_16 = PHI <match_162(81), match_167(83), 0(82)>
  # DEBUG match => match_16
  if (match_16 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;

<bb 85>:
  add_audio_codec (map_13, ptime_8, &buf, 1024);
  goto <bb 88>;

<bb 86>:
  i_169 = i_19 + 1;
  # DEBUG i => i_169

<bb 87>:
  # i_19 = PHI <i_214(73), i_169(86)>
  # DEBUG i => i_19
  if (i_19 < num_codecs_22)
    goto <bb 75>;
  else
    goto <bb 88>;

<bb 88>:
  map_170 = map_13->rm_next;
  # DEBUG map => map_170

<bb 89>:
  # map_13 = PHI <map_141(70), map_170(88)>
  # DEBUG map => map_13
  if (map_13 != 0B)
    goto <bb 71>;
  else
    goto <bb 149>;

<bb 90>:
  imp_106 = codecs[i_20];
  # DEBUG imp => imp_106
  D.40516_107 = imp_106->codec_type;
  if (D.40516_107 != 0)
    goto <bb 93>;
  else
    goto <bb 91>;

<bb 91>:
  D.40518_108 = imp_106->ianacode;
  D.40519_109 = (signed char) D.40518_108;
  if (D.40519_109 < 0)
    goto <bb 93>;
  else
    goto <bb 92>;

<bb 92>:
  D.40518_110 = imp_106->ianacode;
  D.40521_111 = (int) D.40518_110;
  D.40522_112 = already_did[D.40521_111];
  if (D.40522_112 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  // predicted unlikely by continue predictor.
  goto <bb 111>;

<bb 94>:
  map_113 = m_2->m_rtpmaps;
  # DEBUG map => map_113
  goto <bb 110>;

<bb 95>:
  D.40455_114 = map_14->rm_pt;
  D.40491_115 = (int) D.40455_114;
  if (D.40491_115 > 127)
    goto <bb 97>;
  else
    goto <bb 96>;

<bb 96>:
  D.40455_116 = map_14->rm_pt;
  D.40491_117 = (int) D.40455_116;
  D.40493_118 = already_did[D.40491_117];
  if (D.40493_118 != 0)
    goto <bb 97>;
  else
    goto <bb 98>;

<bb 97>:
  // predicted unlikely by continue predictor.
  goto <bb 109>;

<bb 98>:
  D.40453_119 = map_14->rm_encoding;
  # DEBUG s => D.40453_119
  if (D.40453_119 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;

<bb 99>:
  D.47392_291 = *D.40453_119;
  if (D.47392_291 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;

<bb 100>:

<bb 101>:
  # D.47391_292 = PHI <1(98), 1(99), 0(100)>
  if (D.47391_292 != 0)
    goto <bb 103>;
  else
    goto <bb 102>;

<bb 102>:
  D.40499_121 = smh_31->mparams;
  D.40500_122 = D.40499_121->ndlb;
  D.40501_123 = (int) D.40500_122;
  D.40502_124 = D.40501_123 & 1;
  if (D.40502_124 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;

<bb 103>:
  D.40455_126 = map_14->rm_pt;
  D.40491_127 = (int) D.40455_126;
  if (D.40491_127 <= 95)
    goto <bb 104>;
  else
    goto <bb 105>;

<bb 104>:
  D.40455_128 = map_14->rm_pt;
  D.40491_129 = (int) D.40455_128;
  D.40518_130 = imp_106->ianacode;
  D.40521_131 = (int) D.40518_130;
  match_132 = D.40491_129 == D.40521_131;
  # DEBUG match => match_132
  goto <bb 107>;

<bb 105>:
  D.40453_133 = map_14->rm_encoding;
  if (D.40453_133 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;

<bb 106>:
  D.40453_134 = map_14->rm_encoding;
  D.40534_135 = imp_106->iananame;
  D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
  match_137 = D.40535_136 == 0;
  # DEBUG match => match_137

<bb 107>:
  # match_17 = PHI <match_132(104), match_137(106), 0(105)>
  # DEBUG match => match_17
  if (match_17 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;

<bb 108>:
  add_audio_codec (map_14, ptime_8, &buf, 1024);
  goto <bb 111>;

<bb 109>:
  map_139 = map_14->rm_next;
  # DEBUG map => map_139

<bb 110>:
  # map_14 = PHI <map_113(94), map_139(109)>
  # DEBUG map => map_14
  if (map_14 != 0B)
    goto <bb 95>;
  else
    goto <bb 111>;

<bb 111>:
  i_140 = i_20 + 1;
  # DEBUG i => i_140

<bb 112>:
  # i_20 = PHI <i_310(69), i_140(111)>
  # DEBUG i => i_20
  if (i_20 < num_codecs_22)
    goto <bb 90>;
  else
    goto <bb 149>;

<bb 113>:
  D.40437_171 = m_2->m_type;
  if (D.40437_171 == 3)
    goto <bb 114>;
  else
    goto <bb 149>;

<bb 114>:
  D.40441_172 = m_2->m_port;
  if (D.40441_172 != 0)
    goto <bb 115>;
  else
    goto <bb 149>;

<bb 115>:
  connection_173 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_173
  D.40479_174 = m_2->m_connections;
  if (D.40479_174 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;

<bb 116>:
  connection_175 = m_2->m_connections;
  # DEBUG connection => connection_175

<bb 117>:
  # connection_11 = PHI <connection_173(115), connection_175(116)>
  # DEBUG connection => connection_11
  if (connection_11 == 0B)
    goto <bb 119>;
  else
    goto <bb 118>;

<bb 118>:
  # i_177 = PHI <0(117)>
  goto <bb 148>;

<bb 119>:
  D.40547_176 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;

<bb 120>:
  imp_178 = codecs[i_21];
  # DEBUG imp => imp_178
  D.40550_179 = imp_178->codec_type;
  if (D.40550_179 != 1)
    goto <bb 123>;
  else
    goto <bb 121>;

<bb 121>:
  D.40552_180 = imp_178->ianacode;
  D.40553_181 = (signed char) D.40552_180;
  if (D.40553_181 < 0)
    goto <bb 123>;
  else
    goto <bb 122>;

<bb 122>:
  D.40552_182 = imp_178->ianacode;
  D.40555_183 = (int) D.40552_182;
  D.40556_184 = already_did[D.40555_183];
  if (D.40556_184 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;

<bb 123>:
  // predicted unlikely by continue predictor.
  goto <bb 147>;

<bb 124>:
  D.40557_185 = session_28(D)->channel;
  D.40558_186 = switch_channel_direction (D.40557_185);
  if (D.40558_186 == 0)
    goto <bb 125>;
  else
    goto <bb 127>;

<bb 125>:
  D.40557_187 = session_28(D)->channel;
  D.40561_188 = switch_channel_test_flag (D.40557_187, 114);
  if (D.40561_188 != 0)
    goto <bb 126>;
  else
    goto <bb 127>;

<bb 126>:
  // predicted unlikely by continue predictor.
  goto <bb 147>;

<bb 127>:
  map_189 = m_2->m_rtpmaps;
  # DEBUG map => map_189
  goto <bb 146>;

<bb 128>:
  D.40455_190 = map_15->rm_pt;
  D.40491_191 = (int) D.40455_190;
  if (D.40491_191 > 127)
    goto <bb 130>;
  else
    goto <bb 129>;

<bb 129>:
  D.40455_192 = map_15->rm_pt;
  D.40491_193 = (int) D.40455_192;
  D.40493_194 = already_did[D.40491_193];
  if (D.40493_194 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;

<bb 130>:
  // predicted unlikely by continue predictor.
  goto <bb 145>;

<bb 131>:
  D.40453_195 = map_15->rm_encoding;
  # DEBUG s => D.40453_195
  if (D.40453_195 == 0B)
    goto <bb 134>;
  else
    goto <bb 132>;

<bb 132>:
  D.47396_293 = *D.40453_195;
  if (D.47396_293 == 0)
    goto <bb 134>;
  else
    goto <bb 133>;

<bb 133>:

<bb 134>:
  # D.47395_294 = PHI <1(131), 1(132), 0(133)>
  if (D.47395_294 != 0)
    goto <bb 136>;
  else
    goto <bb 135>;

<bb 135>:
  D.40499_197 = smh_31->mparams;
  D.40500_198 = D.40499_197->ndlb;
  D.40501_199 = (int) D.40500_198;
  D.40502_200 = D.40501_199 & 1;
  if (D.40502_200 != 0)
    goto <bb 136>;
  else
    goto <bb 138>;

<bb 136>:
  D.40455_202 = map_15->rm_pt;
  D.40491_203 = (int) D.40455_202;
  if (D.40491_203 <= 95)
    goto <bb 137>;
  else
    goto <bb 138>;

<bb 137>:
  D.40455_204 = map_15->rm_pt;
  D.40491_205 = (int) D.40455_204;
  D.40552_206 = imp_178->ianacode;
  D.40555_207 = (int) D.40552_206;
  match_208 = D.40491_205 == D.40555_207;
  # DEBUG match => match_208
  goto <bb 140>;

<bb 138>:
  D.40453_209 = map_15->rm_encoding;
  if (D.40453_209 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

<bb 139>:
  D.40453_210 = map_15->rm_encoding;
  D.40575_211 = imp_178->iananame;
  D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
  match_213 = D.40576_212 == 0;
  # DEBUG match => match_213

<bb 140>:
  # match_18 = PHI <match_208(137), match_213(139), 0(138)>
  # DEBUG match => match_18
  if (match_18 != 0)
    goto <bb 141>;
  else
    goto <bb 145>;

<bb 141>:
  if (dptime_9 > 0)
    goto <bb 142>;
  else
    goto <bb 143>;

<bb 142>:
  D.40582_215 = strlen (&buf);
  D.40583_216 = &buf + D.40582_215;
  D.40584_217 = strlen (&buf);
  D.40585_218 = 1024 - D.40584_217;
  D.40575_219 = imp_178->iananame;
  D.40457_220 = map_15->rm_rate;
  switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);
  goto <bb 144>;

<bb 143>:
  D.40587_221 = strlen (&buf);
  D.40588_222 = &buf + D.40587_221;
  D.40589_223 = strlen (&buf);
  D.40590_224 = 1024 - D.40589_223;
  D.40575_225 = imp_178->iananame;
  D.40457_226 = map_15->rm_rate;
  switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);

<bb 144>:
  D.40552_227 = imp_178->ianacode;
  D.40555_228 = (int) D.40552_227;
  already_did[D.40555_228] = 1;
  goto <bb 147>;

<bb 145>:
  map_229 = map_15->rm_next;
  # DEBUG map => map_229

<bb 146>:
  # map_15 = PHI <map_189(127), map_229(145)>
  # DEBUG map => map_15
  if (map_15 != 0B)
    goto <bb 128>;
  else
    goto <bb 147>;

<bb 147>:
  i_230 = i_21 + 1;
  # DEBUG i => i_230

<bb 148>:
  # i_21 = PHI <i_177(118), i_230(147)>
  # DEBUG i => i_21
  if (i_21 < num_codecs_22)
    goto <bb 120>;
  else
    goto <bb 149>;

<bb 149>:
  m_231 = m_2->m_next;
  # DEBUG m => m_231

<bb 150>:
  # m_2 = PHI <m_81(46), m_231(149)>
  # DEBUG m => m_2
  if (m_2 != 0B)
    goto <bb 47>;
  else
    goto <bb 151>;

<bb 151>:
  D.40591_232 = buf[0];
  if (D.40591_232 == 44)
    goto <bb 152>;
  else
    goto <bb 153>;

<bb 152>:
  switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);

<bb 153>:
  return;

}



;; Function switch_core_media_get_codec_string (switch_core_media_get_codec_string)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 11 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 14 12 }
;; 12 succs { 14 13 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Marking useful stmt: # DEBUG preferred => 0B

Marking useful stmt: # DEBUG fallback => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 685, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_8

Marking useful stmt: preferred_12 = switch_channel_get_variable_dup (D.46981_11, "absolute_codec_string", 1, -1);

Marking useful stmt: # DEBUG preferred => preferred_12

Marking useful stmt: preferred_14 = switch_channel_get_variable_dup (D.46981_13, "codec_string", 1, -1);

Marking useful stmt: # DEBUG preferred => preferred_14

Marking useful stmt: # DEBUG preferred => preferred_1

Marking useful stmt: D.46986_16 = switch_channel_direction (D.46981_15);

Marking useful stmt: # DEBUG preferred => preferred_18

Marking useful stmt: # DEBUG fallback => fallback_20

Marking useful stmt: # DEBUG preferred => preferred_22

Marking useful stmt: # DEBUG fallback => fallback_24

Marking useful stmt: # DEBUG fallback => fallback_3

Marking useful stmt: # DEBUG preferred => preferred_2

Marking useful stmt: # DEBUG s => preferred_2

Marking useful stmt: return preferred_4;


Processing worklist:
processing: return preferred_4;

Marking useful stmt: if (session_7(D) == 0B)

marking necessary through preferred_4 stmt preferred_4 = PHI <preferred_2(15), fallback_3(16)>
processing: preferred_4 = PHI <preferred_2(15), fallback_3(16)>

marking necessary through preferred_2 stmt preferred_2 = PHI <"PCMU"(4), preferred_1(7), preferred_18(9), preferred_22(10)>
marking necessary through fallback_3 stmt fallback_3 = PHI <"PCMU"(4), 0B(7), fallback_20(9), fallback_24(10)>
Marking useful stmt: if (D.47401_36 == 0)

processing: if (D.47401_36 == 0)

marking necessary through D.47401_36 stmt D.47401_36 = PHI <1(11), 1(12), 0(13)>
processing: D.47401_36 = PHI <1(11), 1(12), 0(13)>

Marking useful stmt: if (preferred_2 == 0B)

Marking useful stmt: if (D.47402_35 == 0)

processing: if (D.47402_35 == 0)

marking necessary through D.47402_35 stmt D.47402_35 = *preferred_2;
processing: D.47402_35 = *preferred_2;

processing: if (preferred_2 == 0B)

processing: fallback_3 = PHI <"PCMU"(4), 0B(7), fallback_20(9), fallback_24(10)>

marking necessary through fallback_20 stmt fallback_20 = D.46989_19->inbound_codec_string;
marking necessary through fallback_24 stmt fallback_24 = D.46989_23->outbound_codec_string;
Marking useful stmt: if (smh_8 == 0B)

Marking useful stmt: if (D.46986_16 == 1)

processing: if (D.46986_16 == 1)

Marking useful stmt: if (preferred_1 == 0B)

processing: if (preferred_1 == 0B)

marking necessary through preferred_1 stmt preferred_1 = PHI <preferred_12(5), preferred_14(6)>
processing: preferred_1 = PHI <preferred_12(5), preferred_14(6)>

Marking useful stmt: if (preferred_12 == 0B)

processing: if (preferred_12 == 0B)

processing: if (smh_8 == 0B)

marking necessary through smh_8 stmt smh_8 = session_7(D)->media_handle;
processing: smh_8 = session_7(D)->media_handle;

processing: fallback_24 = D.46989_23->outbound_codec_string;

marking necessary through D.46989_23 stmt D.46989_23 = smh_8->mparams;
processing: D.46989_23 = smh_8->mparams;

processing: fallback_20 = D.46989_19->inbound_codec_string;

marking necessary through D.46989_19 stmt D.46989_19 = smh_8->mparams;
processing: D.46989_19 = smh_8->mparams;

processing: preferred_2 = PHI <"PCMU"(4), preferred_1(7), preferred_18(9), preferred_22(10)>

marking necessary through preferred_18 stmt preferred_18 = D.46989_17->outbound_codec_string;
marking necessary through preferred_22 stmt preferred_22 = D.46989_21->inbound_codec_string;
processing: preferred_22 = D.46989_21->inbound_codec_string;

marking necessary through D.46989_21 stmt D.46989_21 = smh_8->mparams;
processing: D.46989_21 = smh_8->mparams;

processing: preferred_18 = D.46989_17->outbound_codec_string;

marking necessary through D.46989_17 stmt D.46989_17 = smh_8->mparams;
processing: D.46989_17 = smh_8->mparams;

processing: if (session_7(D) == 0B)

processing: D.46986_16 = switch_channel_direction (D.46981_15);

marking necessary through D.46981_15 stmt D.46981_15 = session_7(D)->channel;
processing: D.46981_15 = session_7(D)->channel;

processing: preferred_14 = switch_channel_get_variable_dup (D.46981_13, "codec_string", 1, -1);

marking necessary through D.46981_13 stmt D.46981_13 = session_7(D)->channel;
processing: D.46981_13 = session_7(D)->channel;

processing: preferred_12 = switch_channel_get_variable_dup (D.46981_11, "absolute_codec_string", 1, -1);

marking necessary through D.46981_11 stmt D.46981_11 = session_7(D)->channel;
processing: D.46981_11 = session_7(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 685, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : fallback_27 = fallback_3;

Deleting : preferred_26 = preferred_2;

Removed 2 of 41 statements (4%)
Removed 0 of 7 PHI nodes (0%)
Removing basic block 15
;; basic block 15, loop depth 0, count 0
;; prev block 14, next block 16
;; pred:      
;; succ:       17 (fallthru,exec)
<bb 15>:
goto <bb 17>;


Scope blocks after cleanups:

{ Scope block #0 
  const char * preferred;
  const char * fallback;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_get_codec_string";

  { Scope block #85 src/switch_core_media.c:708 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #86 Originating from :#0 

    }

  }

}
switch_core_media_get_codec_string (struct switch_core_session_t * session)
{
  const char D.47402;
  int D.47401;
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_get_codec_string";
  struct switch_media_handle_t * smh;
  const char * fallback;
  const char * preferred;
  struct switch_core_media_params_t * D.46989;
  switch_call_direction_t D.46986;
  struct switch_channel_t * D.46981;

<bb 2>:
  # DEBUG preferred => 0B
  # DEBUG fallback => 0B
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 685, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

<bb 5>:
  D.46981_11 = session_7(D)->channel;
  preferred_12 = switch_channel_get_variable_dup (D.46981_11, "absolute_codec_string", 1, -1);
  # DEBUG preferred => preferred_12
  if (preferred_12 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.46981_13 = session_7(D)->channel;
  preferred_14 = switch_channel_get_variable_dup (D.46981_13, "codec_string", 1, -1);
  # DEBUG preferred => preferred_14

<bb 7>:
  # preferred_1 = PHI <preferred_12(5), preferred_14(6)>
  # DEBUG preferred => preferred_1
  if (preferred_1 == 0B)
    goto <bb 8>;
  else
    goto <bb 11>;

<bb 8>:
  D.46981_15 = session_7(D)->channel;
  D.46986_16 = switch_channel_direction (D.46981_15);
  if (D.46986_16 == 1)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.46989_17 = smh_8->mparams;
  preferred_18 = D.46989_17->outbound_codec_string;
  # DEBUG preferred => preferred_18
  D.46989_19 = smh_8->mparams;
  fallback_20 = D.46989_19->inbound_codec_string;
  # DEBUG fallback => fallback_20
  goto <bb 11>;

<bb 10>:
  D.46989_21 = smh_8->mparams;
  preferred_22 = D.46989_21->inbound_codec_string;
  # DEBUG preferred => preferred_22
  D.46989_23 = smh_8->mparams;
  fallback_24 = D.46989_23->outbound_codec_string;
  # DEBUG fallback => fallback_24

<bb 11>:
  # preferred_2 = PHI <"PCMU"(4), preferred_1(7), preferred_18(9), preferred_22(10)>
  # fallback_3 = PHI <"PCMU"(4), 0B(7), fallback_20(9), fallback_24(10)>
  # DEBUG fallback => fallback_3
  # DEBUG preferred => preferred_2
  # DEBUG s => preferred_2
  if (preferred_2 == 0B)
    goto <bb 14>;
  else
    goto <bb 12>;

<bb 12>:
  D.47402_35 = *preferred_2;
  if (D.47402_35 == 0)
    goto <bb 14>;
  else
    goto <bb 13>;

<bb 13>:

<bb 14>:
  # D.47401_36 = PHI <1(11), 1(12), 0(13)>
  if (D.47401_36 == 0)
    goto <bb 16>;
  else
    goto <bb 15>;

<bb 15>:

<bb 16>:
  # preferred_4 = PHI <preferred_2(14), fallback_3(15)>
  return preferred_4;

}



;; Function switch_core_session_clear_crypto (switch_core_session_clear_crypto)

Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 7 6 9 8
;;
;; Loop 2
;;  header 9, latch 6
;;  depth 1, outer 0
;;  nodes: 9 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 8 7 }
;; 7 succs { 9 }
;; 6 succs { 9 }
;; 9 succs { 6 8 }
;; 8 succs { 1 }
Marking useful stmt: # DEBUG i => 0

Marking useful stmt: switch_channel_set_variable_var_check (D.46965_6, D.46966_7, 0B, 1);

Marking useful stmt: # DEBUG i => i_8

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: # DEBUG smh => smh_9

Marking useful stmt: memset (D.46972_14, 0, 144);

Marking useful stmt: memset (D.46974_18, 0, 144);

Marking useful stmt: # DEBUG i => i_19

Marking useful stmt: # DEBUG i => i_2

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <i_13(7), i_19(6)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <i_13(7), i_19(6)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 2 to be finite: iterating 9 times
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46966_4)
(get_scalar_evolution 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
(set_scalar_evolution 
  instantiated_below = 2 
  (scalar = D.46966_4)
  (scalar_evolution = D.46966_4))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.46966_4 != 0B)


Processing worklist:
processing: if (D.46966_4 != 0B)

marking necessary through D.46966_4 stmt D.46966_4 = vars[i_1];
processing: D.46966_4 = vars[i_1];

marking necessary through i_1 stmt i_1 = PHI <0(2), i_8(3)>
marking necessary through .MEM_23 stmt vars = *.LC10;
processing: vars = *.LC10;

processing: i_1 = PHI <0(2), i_8(3)>

marking necessary through i_8 stmt i_8 = i_1 + 1;
processing: i_8 = i_1 + 1;

processing: return;

processing: memset (D.46974_18, 0, 144);

Marking useful stmt: if (i_2 <= 8)

marking necessary through D.46974_18 stmt D.46974_18 = &smh_9->engines[1].ssec[i.167_16]{lb: 0 sz: 144};
processing: D.46974_18 = &smh_9->engines[1].ssec[i.167_16]{lb: 0 sz: 144};

marking necessary through smh_9 stmt smh_9 = session_5(D)->media_handle;
marking necessary through i.167_16 stmt i.167_16 = (unsigned int) i_2;
processing: i.167_16 = (unsigned int) i_2;

marking necessary through i_2 stmt i_2 = PHI <i_13(7), i_19(6)>
processing: i_2 = PHI <i_13(7), i_19(6)>

Marking useful stmt: if (smh_9 == 0B)

marking necessary through i_13 stmt i_13 = PHI <0(5)>
marking necessary through i_19 stmt i_19 = i_2 + 1;
processing: i_19 = i_2 + 1;

processing: i_13 = PHI <0(5)>

processing: if (smh_9 == 0B)

processing: smh_9 = session_5(D)->media_handle;

processing: if (i_2 <= 8)

processing: memset (D.46972_14, 0, 144);

marking necessary through D.46972_14 stmt D.46972_14 = &smh_9->engines[0].ssec[i.167_12]{lb: 0 sz: 144};
processing: D.46972_14 = &smh_9->engines[0].ssec[i.167_12]{lb: 0 sz: 144};

marking necessary through i.167_12 stmt i.167_12 = (unsigned int) i_2;
processing: i.167_12 = (unsigned int) i_2;

processing: switch_channel_set_variable_var_check (D.46965_6, D.46966_7, 0B, 1);

marking necessary through D.46965_6 stmt D.46965_6 = session_5(D)->channel;
marking necessary through D.46966_7 stmt D.46966_7 = vars[i_1];
processing: D.46966_7 = vars[i_1];

processing: D.46965_6 = session_5(D)->channel;


Eliminating unnecessary statements:
Deleting : .MEM_17 = PHI <.MEM_20(5)>

Removed 0 of 24 statements (0%)
Removed 1 of 6 PHI nodes (16%)
Scope blocks after cleanups:

{ Scope block #0 
  int i;
  struct switch_media_handle_t * smh;
  const char * vars[11];

}
switch_core_session_clear_crypto (struct switch_core_session_t * session)
{
  const char * vars[11];
  struct switch_media_handle_t * smh;
  int i;
  void * D.46974;
  void * D.46972;
  unsigned int i.167;
  const char * D.46966;
  struct switch_channel_t * D.46965;

<bb 2>:
  vars = *.LC10;
  # DEBUG i => 0
  goto <bb 4>;

<bb 3>:
  D.46965_6 = session_5(D)->channel;
  D.46966_7 = vars[i_1];
  switch_channel_set_variable_var_check (D.46965_6, D.46966_7, 0B, 1);
  i_8 = i_1 + 1;
  # DEBUG i => i_8

<bb 4>:
  # i_1 = PHI <0(2), i_8(3)>
  # DEBUG i => i_1
  D.46966_4 = vars[i_1];
  if (D.46966_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 5>:
  smh_9 = session_5(D)->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 9>;
  else
    goto <bb 6>;

<bb 6>:
  # i_13 = PHI <0(5)>
  goto <bb 8>;

<bb 7>:
  i.167_12 = (unsigned int) i_2;
  D.46972_14 = &smh_9->engines[0].ssec[i.167_12]{lb: 0 sz: 144};
  memset (D.46972_14, 0, 144);
  i.167_16 = (unsigned int) i_2;
  D.46974_18 = &smh_9->engines[1].ssec[i.167_16]{lb: 0 sz: 144};
  memset (D.46974_18, 0, 144);
  i_19 = i_2 + 1;
  # DEBUG i => i_19

<bb 8>:
  # i_2 = PHI <i_13(6), i_19(7)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 9>:
  return;

}



;; Function switch_core_session_local_crypto_key (switch_core_session_local_crypto_key)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Marking useful stmt: return D.46951_1;


Processing worklist:
processing: return D.46951_1;

marking necessary through D.46951_1 stmt D.46951_1 = PHI <0B(2), D.46951_9(3)>
processing: D.46951_1 = PHI <0B(2), D.46951_9(3)>

marking necessary through D.46951_9 stmt D.46951_9 = D.46948_6->engines[type_7(D)].ssec[D.46952_8].local_crypto_key;
Marking useful stmt: if (D.46948_3 == 0B)

processing: if (D.46948_3 == 0B)

marking necessary through D.46948_3 stmt D.46948_3 = session_2(D)->media_handle;
processing: D.46948_3 = session_2(D)->media_handle;

processing: D.46951_9 = D.46948_6->engines[type_7(D)].ssec[D.46952_8].local_crypto_key;

marking necessary through D.46948_6 stmt D.46948_6 = session_2(D)->media_handle;
marking necessary through D.46952_8 stmt D.46952_8 = D.46948_6->engines[type_7(D)].crypto_type;
processing: D.46952_8 = D.46948_6->engines[type_7(D)].crypto_type;

processing: D.46948_6 = session_2(D)->media_handle;


Eliminating unnecessary statements:
Removed 0 of 6 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_session_local_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  switch_rtp_crypto_key_type_t D.46952;
  const char * D.46951;
  struct switch_media_handle_t * D.46948;

<bb 2>:
  D.46948_3 = session_2(D)->media_handle;
  if (D.46948_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  D.46948_6 = session_2(D)->media_handle;
  D.46952_8 = D.46948_6->engines[type_7(D)].crypto_type;
  D.46951_9 = D.46948_6->engines[type_7(D)].ssec[D.46952_8].local_crypto_key;

<bb 4>:
  # D.46951_1 = PHI <0B(2), D.46951_9(3)>
  return D.46951_1;

}



;; Function switch_core_media_parse_rtp_bugs (switch_core_media_parse_rtp_bugs)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 1 }
Marking useful stmt: D.46848_2 = switch_stristr ("clear", str_1(D));

Marking useful stmt: *flag_pole_3(D) = 0;

Marking useful stmt: D.46851_4 = switch_stristr ("CISCO_SKIP_MARK_BIT_2833", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46855_6;

Marking useful stmt: D.46856_7 = switch_stristr ("~CISCO_SKIP_MARK_BIT_2833", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46859_9;

Marking useful stmt: D.46860_10 = switch_stristr ("SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46863_12;

Marking useful stmt: D.46864_13 = switch_stristr ("~SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46867_15;

Marking useful stmt: D.46868_16 = switch_stristr ("IGNORE_MARK_BIT", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46871_18;

Marking useful stmt: D.46872_19 = switch_stristr ("~IGNORE_MARK_BIT", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46875_21;

Marking useful stmt: D.46876_22 = switch_stristr ("SEND_LINEAR_TIMESTAMPS", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46879_24;

Marking useful stmt: D.46880_25 = switch_stristr ("~SEND_LINEAR_TIMESTAMPS", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46883_27;

Marking useful stmt: D.46884_28 = switch_stristr ("START_SEQ_AT_ZERO", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46887_30;

Marking useful stmt: D.46888_31 = switch_stristr ("~START_SEQ_AT_ZERO", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46891_33;

Marking useful stmt: D.46892_34 = switch_stristr ("NEVER_SEND_MARKER", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46895_36;

Marking useful stmt: D.46896_37 = switch_stristr ("~NEVER_SEND_MARKER", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46899_39;

Marking useful stmt: D.46900_40 = switch_stristr ("IGNORE_DTMF_DURATION", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46903_42;

Marking useful stmt: D.46904_43 = switch_stristr ("~IGNORE_DTMF_DURATION", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46907_45;

Marking useful stmt: D.46908_46 = switch_stristr ("ACCEPT_ANY_PACKETS", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46911_48;

Marking useful stmt: D.46912_49 = switch_stristr ("~ACCEPT_ANY_PACKETS", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46915_51;

Marking useful stmt: D.46916_52 = switch_stristr ("ACCEPT_ANY_PAYLOAD", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46919_54;

Marking useful stmt: D.46920_55 = switch_stristr ("~ACCEPT_ANY_PAYLOAD", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46923_57;

Marking useful stmt: D.46924_58 = switch_stristr ("GEN_ONE_GEN_ALL", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46927_60;

Marking useful stmt: D.46928_61 = switch_stristr ("~GEN_ONE_GEN_ALL", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46931_63;

Marking useful stmt: D.46932_64 = switch_stristr ("CHANGE_SSRC_ON_MARKER", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46935_66;

Marking useful stmt: D.46936_67 = switch_stristr ("~CHANGE_SSRC_ON_MARKER", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46939_69;

Marking useful stmt: D.46940_70 = switch_stristr ("FLUSH_JB_ON_DTMF", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46943_72;

Marking useful stmt: D.46944_73 = switch_stristr ("~FLUSH_JB_ON_DTMF", str_1(D));

Marking useful stmt: *flag_pole_3(D) = D.46947_75;

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: *flag_pole_3(D) = D.46947_75;

Marking useful stmt: if (D.46944_73 != 0B)

marking necessary through D.46947_75 stmt D.46947_75 = D.46854_74 & 4294966271;
processing: D.46947_75 = D.46854_74 & 4294966271;

marking necessary through D.46854_74 stmt D.46854_74 = *flag_pole_3(D);
processing: D.46854_74 = *flag_pole_3(D);

processing: if (D.46944_73 != 0B)

processing: D.46944_73 = switch_stristr ("~FLUSH_JB_ON_DTMF", str_1(D));

processing: *flag_pole_3(D) = D.46943_72;

Marking useful stmt: if (D.46940_70 != 0B)

marking necessary through D.46943_72 stmt D.46943_72 = D.46854_71 | 1024;
processing: D.46943_72 = D.46854_71 | 1024;

marking necessary through D.46854_71 stmt D.46854_71 = *flag_pole_3(D);
processing: D.46854_71 = *flag_pole_3(D);

processing: if (D.46940_70 != 0B)

processing: D.46940_70 = switch_stristr ("FLUSH_JB_ON_DTMF", str_1(D));

processing: *flag_pole_3(D) = D.46939_69;

Marking useful stmt: if (D.46936_67 != 0B)

marking necessary through D.46939_69 stmt D.46939_69 = D.46854_68 & 4294966783;
processing: D.46939_69 = D.46854_68 & 4294966783;

marking necessary through D.46854_68 stmt D.46854_68 = *flag_pole_3(D);
processing: D.46854_68 = *flag_pole_3(D);

processing: if (D.46936_67 != 0B)

processing: D.46936_67 = switch_stristr ("~CHANGE_SSRC_ON_MARKER", str_1(D));

processing: *flag_pole_3(D) = D.46935_66;

Marking useful stmt: if (D.46932_64 != 0B)

marking necessary through D.46935_66 stmt D.46935_66 = D.46854_65 | 512;
processing: D.46935_66 = D.46854_65 | 512;

marking necessary through D.46854_65 stmt D.46854_65 = *flag_pole_3(D);
processing: D.46854_65 = *flag_pole_3(D);

processing: if (D.46932_64 != 0B)

processing: D.46932_64 = switch_stristr ("CHANGE_SSRC_ON_MARKER", str_1(D));

processing: *flag_pole_3(D) = D.46931_63;

Marking useful stmt: if (D.46928_61 != 0B)

marking necessary through D.46931_63 stmt D.46931_63 = D.46854_62 & 4294967039;
processing: D.46931_63 = D.46854_62 & 4294967039;

marking necessary through D.46854_62 stmt D.46854_62 = *flag_pole_3(D);
processing: D.46854_62 = *flag_pole_3(D);

processing: if (D.46928_61 != 0B)

processing: D.46928_61 = switch_stristr ("~GEN_ONE_GEN_ALL", str_1(D));

processing: *flag_pole_3(D) = D.46927_60;

Marking useful stmt: if (D.46924_58 != 0B)

marking necessary through D.46927_60 stmt D.46927_60 = D.46854_59 | 256;
processing: D.46927_60 = D.46854_59 | 256;

marking necessary through D.46854_59 stmt D.46854_59 = *flag_pole_3(D);
processing: D.46854_59 = *flag_pole_3(D);

processing: if (D.46924_58 != 0B)

processing: D.46924_58 = switch_stristr ("GEN_ONE_GEN_ALL", str_1(D));

processing: *flag_pole_3(D) = D.46923_57;

Marking useful stmt: if (D.46920_55 != 0B)

marking necessary through D.46923_57 stmt D.46923_57 = D.46854_56 & 4294965247;
processing: D.46923_57 = D.46854_56 & 4294965247;

marking necessary through D.46854_56 stmt D.46854_56 = *flag_pole_3(D);
processing: D.46854_56 = *flag_pole_3(D);

processing: if (D.46920_55 != 0B)

processing: D.46920_55 = switch_stristr ("~ACCEPT_ANY_PAYLOAD", str_1(D));

processing: *flag_pole_3(D) = D.46919_54;

Marking useful stmt: if (D.46916_52 != 0B)

marking necessary through D.46919_54 stmt D.46919_54 = D.46854_53 | 2048;
processing: D.46919_54 = D.46854_53 | 2048;

marking necessary through D.46854_53 stmt D.46854_53 = *flag_pole_3(D);
processing: D.46854_53 = *flag_pole_3(D);

processing: if (D.46916_52 != 0B)

processing: D.46916_52 = switch_stristr ("ACCEPT_ANY_PAYLOAD", str_1(D));

processing: *flag_pole_3(D) = D.46915_51;

Marking useful stmt: if (D.46912_49 != 0B)

marking necessary through D.46915_51 stmt D.46915_51 = D.46854_50 & 4294967167;
processing: D.46915_51 = D.46854_50 & 4294967167;

marking necessary through D.46854_50 stmt D.46854_50 = *flag_pole_3(D);
processing: D.46854_50 = *flag_pole_3(D);

processing: if (D.46912_49 != 0B)

processing: D.46912_49 = switch_stristr ("~ACCEPT_ANY_PACKETS", str_1(D));

processing: *flag_pole_3(D) = D.46911_48;

Marking useful stmt: if (D.46908_46 != 0B)

marking necessary through D.46911_48 stmt D.46911_48 = D.46854_47 | 128;
processing: D.46911_48 = D.46854_47 | 128;

marking necessary through D.46854_47 stmt D.46854_47 = *flag_pole_3(D);
processing: D.46854_47 = *flag_pole_3(D);

processing: if (D.46908_46 != 0B)

processing: D.46908_46 = switch_stristr ("ACCEPT_ANY_PACKETS", str_1(D));

processing: *flag_pole_3(D) = D.46907_45;

Marking useful stmt: if (D.46904_43 != 0B)

marking necessary through D.46907_45 stmt D.46907_45 = D.46854_44 & 4294967231;
processing: D.46907_45 = D.46854_44 & 4294967231;

marking necessary through D.46854_44 stmt D.46854_44 = *flag_pole_3(D);
processing: D.46854_44 = *flag_pole_3(D);

processing: if (D.46904_43 != 0B)

processing: D.46904_43 = switch_stristr ("~IGNORE_DTMF_DURATION", str_1(D));

processing: *flag_pole_3(D) = D.46903_42;

Marking useful stmt: if (D.46900_40 != 0B)

marking necessary through D.46903_42 stmt D.46903_42 = D.46854_41 | 64;
processing: D.46903_42 = D.46854_41 | 64;

marking necessary through D.46854_41 stmt D.46854_41 = *flag_pole_3(D);
processing: D.46854_41 = *flag_pole_3(D);

processing: if (D.46900_40 != 0B)

processing: D.46900_40 = switch_stristr ("IGNORE_DTMF_DURATION", str_1(D));

processing: *flag_pole_3(D) = D.46899_39;

Marking useful stmt: if (D.46896_37 != 0B)

marking necessary through D.46899_39 stmt D.46899_39 = D.46854_38 & 4294967263;
processing: D.46899_39 = D.46854_38 & 4294967263;

marking necessary through D.46854_38 stmt D.46854_38 = *flag_pole_3(D);
processing: D.46854_38 = *flag_pole_3(D);

processing: if (D.46896_37 != 0B)

processing: D.46896_37 = switch_stristr ("~NEVER_SEND_MARKER", str_1(D));

processing: *flag_pole_3(D) = D.46895_36;

Marking useful stmt: if (D.46892_34 != 0B)

marking necessary through D.46895_36 stmt D.46895_36 = D.46854_35 | 32;
processing: D.46895_36 = D.46854_35 | 32;

marking necessary through D.46854_35 stmt D.46854_35 = *flag_pole_3(D);
processing: D.46854_35 = *flag_pole_3(D);

processing: if (D.46892_34 != 0B)

processing: D.46892_34 = switch_stristr ("NEVER_SEND_MARKER", str_1(D));

processing: *flag_pole_3(D) = D.46891_33;

Marking useful stmt: if (D.46888_31 != 0B)

marking necessary through D.46891_33 stmt D.46891_33 = D.46854_32 & 4294967279;
processing: D.46891_33 = D.46854_32 & 4294967279;

marking necessary through D.46854_32 stmt D.46854_32 = *flag_pole_3(D);
processing: D.46854_32 = *flag_pole_3(D);

processing: if (D.46888_31 != 0B)

processing: D.46888_31 = switch_stristr ("~START_SEQ_AT_ZERO", str_1(D));

processing: *flag_pole_3(D) = D.46887_30;

Marking useful stmt: if (D.46884_28 != 0B)

marking necessary through D.46887_30 stmt D.46887_30 = D.46854_29 | 16;
processing: D.46887_30 = D.46854_29 | 16;

marking necessary through D.46854_29 stmt D.46854_29 = *flag_pole_3(D);
processing: D.46854_29 = *flag_pole_3(D);

processing: if (D.46884_28 != 0B)

processing: D.46884_28 = switch_stristr ("START_SEQ_AT_ZERO", str_1(D));

processing: *flag_pole_3(D) = D.46883_27;

Marking useful stmt: if (D.46880_25 != 0B)

marking necessary through D.46883_27 stmt D.46883_27 = D.46854_26 & 4294967287;
processing: D.46883_27 = D.46854_26 & 4294967287;

marking necessary through D.46854_26 stmt D.46854_26 = *flag_pole_3(D);
processing: D.46854_26 = *flag_pole_3(D);

processing: if (D.46880_25 != 0B)

processing: D.46880_25 = switch_stristr ("~SEND_LINEAR_TIMESTAMPS", str_1(D));

processing: *flag_pole_3(D) = D.46879_24;

Marking useful stmt: if (D.46876_22 != 0B)

marking necessary through D.46879_24 stmt D.46879_24 = D.46854_23 | 8;
processing: D.46879_24 = D.46854_23 | 8;

marking necessary through D.46854_23 stmt D.46854_23 = *flag_pole_3(D);
processing: D.46854_23 = *flag_pole_3(D);

processing: if (D.46876_22 != 0B)

processing: D.46876_22 = switch_stristr ("SEND_LINEAR_TIMESTAMPS", str_1(D));

processing: *flag_pole_3(D) = D.46875_21;

Marking useful stmt: if (D.46872_19 != 0B)

marking necessary through D.46875_21 stmt D.46875_21 = D.46854_20 & 4294967291;
processing: D.46875_21 = D.46854_20 & 4294967291;

marking necessary through D.46854_20 stmt D.46854_20 = *flag_pole_3(D);
processing: D.46854_20 = *flag_pole_3(D);

processing: if (D.46872_19 != 0B)

processing: D.46872_19 = switch_stristr ("~IGNORE_MARK_BIT", str_1(D));

processing: *flag_pole_3(D) = D.46871_18;

Marking useful stmt: if (D.46868_16 != 0B)

marking necessary through D.46871_18 stmt D.46871_18 = D.46854_17 | 4;
processing: D.46871_18 = D.46854_17 | 4;

marking necessary through D.46854_17 stmt D.46854_17 = *flag_pole_3(D);
processing: D.46854_17 = *flag_pole_3(D);

processing: if (D.46868_16 != 0B)

processing: D.46868_16 = switch_stristr ("IGNORE_MARK_BIT", str_1(D));

processing: *flag_pole_3(D) = D.46867_15;

Marking useful stmt: if (D.46864_13 != 0B)

marking necessary through D.46867_15 stmt D.46867_15 = D.46854_14 & 4294967293;
processing: D.46867_15 = D.46854_14 & 4294967293;

marking necessary through D.46854_14 stmt D.46854_14 = *flag_pole_3(D);
processing: D.46854_14 = *flag_pole_3(D);

processing: if (D.46864_13 != 0B)

processing: D.46864_13 = switch_stristr ("~SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));

processing: *flag_pole_3(D) = D.46863_12;

Marking useful stmt: if (D.46860_10 != 0B)

marking necessary through D.46863_12 stmt D.46863_12 = D.46854_11 | 2;
processing: D.46863_12 = D.46854_11 | 2;

marking necessary through D.46854_11 stmt D.46854_11 = *flag_pole_3(D);
processing: D.46854_11 = *flag_pole_3(D);

processing: if (D.46860_10 != 0B)

processing: D.46860_10 = switch_stristr ("SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));

processing: *flag_pole_3(D) = D.46859_9;

Marking useful stmt: if (D.46856_7 != 0B)

marking necessary through D.46859_9 stmt D.46859_9 = D.46854_8 & 4294967294;
processing: D.46859_9 = D.46854_8 & 4294967294;

marking necessary through D.46854_8 stmt D.46854_8 = *flag_pole_3(D);
processing: D.46854_8 = *flag_pole_3(D);

processing: if (D.46856_7 != 0B)

processing: D.46856_7 = switch_stristr ("~CISCO_SKIP_MARK_BIT_2833", str_1(D));

processing: *flag_pole_3(D) = D.46855_6;

Marking useful stmt: if (D.46851_4 != 0B)

marking necessary through D.46855_6 stmt D.46855_6 = D.46854_5 | 1;
processing: D.46855_6 = D.46854_5 | 1;

marking necessary through D.46854_5 stmt D.46854_5 = *flag_pole_3(D);
processing: D.46854_5 = *flag_pole_3(D);

processing: if (D.46851_4 != 0B)

processing: D.46851_4 = switch_stristr ("CISCO_SKIP_MARK_BIT_2833", str_1(D));

processing: *flag_pole_3(D) = 0;

Marking useful stmt: if (D.46848_2 != 0B)

processing: if (D.46848_2 != 0B)

processing: D.46848_2 = switch_stristr ("clear", str_1(D));


Eliminating unnecessary statements:
Removed 0 of 124 statements (0%)
Removed 0 of 24 PHI nodes (0%)
switch_core_media_parse_rtp_bugs (switch_rtp_bug_flag_t * flag_pole, const char * str)
{
  unsigned int D.46947;
  const char * D.46944;
  unsigned int D.46943;
  const char * D.46940;
  unsigned int D.46939;
  const char * D.46936;
  unsigned int D.46935;
  const char * D.46932;
  unsigned int D.46931;
  const char * D.46928;
  unsigned int D.46927;
  const char * D.46924;
  unsigned int D.46923;
  const char * D.46920;
  unsigned int D.46919;
  const char * D.46916;
  unsigned int D.46915;
  const char * D.46912;
  unsigned int D.46911;
  const char * D.46908;
  unsigned int D.46907;
  const char * D.46904;
  unsigned int D.46903;
  const char * D.46900;
  unsigned int D.46899;
  const char * D.46896;
  unsigned int D.46895;
  const char * D.46892;
  unsigned int D.46891;
  const char * D.46888;
  unsigned int D.46887;
  const char * D.46884;
  unsigned int D.46883;
  const char * D.46880;
  unsigned int D.46879;
  const char * D.46876;
  unsigned int D.46875;
  const char * D.46872;
  unsigned int D.46871;
  const char * D.46868;
  unsigned int D.46867;
  const char * D.46864;
  unsigned int D.46863;
  const char * D.46860;
  unsigned int D.46859;
  const char * D.46856;
  unsigned int D.46855;
  switch_rtp_bug_flag_t D.46854;
  const char * D.46851;
  const char * D.46848;

<bb 2>:
  D.46848_2 = switch_stristr ("clear", str_1(D));
  if (D.46848_2 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  *flag_pole_3(D) = 0;

<bb 4>:
  D.46851_4 = switch_stristr ("CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46851_4 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.46854_5 = *flag_pole_3(D);
  D.46855_6 = D.46854_5 | 1;
  *flag_pole_3(D) = D.46855_6;

<bb 6>:
  D.46856_7 = switch_stristr ("~CISCO_SKIP_MARK_BIT_2833", str_1(D));
  if (D.46856_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.46854_8 = *flag_pole_3(D);
  D.46859_9 = D.46854_8 & 4294967294;
  *flag_pole_3(D) = D.46859_9;

<bb 8>:
  D.46860_10 = switch_stristr ("SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46860_10 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.46854_11 = *flag_pole_3(D);
  D.46863_12 = D.46854_11 | 2;
  *flag_pole_3(D) = D.46863_12;

<bb 10>:
  D.46864_13 = switch_stristr ("~SONUS_SEND_INVALID_TIMESTAMP_2833", str_1(D));
  if (D.46864_13 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.46854_14 = *flag_pole_3(D);
  D.46867_15 = D.46854_14 & 4294967293;
  *flag_pole_3(D) = D.46867_15;

<bb 12>:
  D.46868_16 = switch_stristr ("IGNORE_MARK_BIT", str_1(D));
  if (D.46868_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.46854_17 = *flag_pole_3(D);
  D.46871_18 = D.46854_17 | 4;
  *flag_pole_3(D) = D.46871_18;

<bb 14>:
  D.46872_19 = switch_stristr ("~IGNORE_MARK_BIT", str_1(D));
  if (D.46872_19 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.46854_20 = *flag_pole_3(D);
  D.46875_21 = D.46854_20 & 4294967291;
  *flag_pole_3(D) = D.46875_21;

<bb 16>:
  D.46876_22 = switch_stristr ("SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46876_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.46854_23 = *flag_pole_3(D);
  D.46879_24 = D.46854_23 | 8;
  *flag_pole_3(D) = D.46879_24;

<bb 18>:
  D.46880_25 = switch_stristr ("~SEND_LINEAR_TIMESTAMPS", str_1(D));
  if (D.46880_25 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.46854_26 = *flag_pole_3(D);
  D.46883_27 = D.46854_26 & 4294967287;
  *flag_pole_3(D) = D.46883_27;

<bb 20>:
  D.46884_28 = switch_stristr ("START_SEQ_AT_ZERO", str_1(D));
  if (D.46884_28 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.46854_29 = *flag_pole_3(D);
  D.46887_30 = D.46854_29 | 16;
  *flag_pole_3(D) = D.46887_30;

<bb 22>:
  D.46888_31 = switch_stristr ("~START_SEQ_AT_ZERO", str_1(D));
  if (D.46888_31 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.46854_32 = *flag_pole_3(D);
  D.46891_33 = D.46854_32 & 4294967279;
  *flag_pole_3(D) = D.46891_33;

<bb 24>:
  D.46892_34 = switch_stristr ("NEVER_SEND_MARKER", str_1(D));
  if (D.46892_34 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.46854_35 = *flag_pole_3(D);
  D.46895_36 = D.46854_35 | 32;
  *flag_pole_3(D) = D.46895_36;

<bb 26>:
  D.46896_37 = switch_stristr ("~NEVER_SEND_MARKER", str_1(D));
  if (D.46896_37 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.46854_38 = *flag_pole_3(D);
  D.46899_39 = D.46854_38 & 4294967263;
  *flag_pole_3(D) = D.46899_39;

<bb 28>:
  D.46900_40 = switch_stristr ("IGNORE_DTMF_DURATION", str_1(D));
  if (D.46900_40 != 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.46854_41 = *flag_pole_3(D);
  D.46903_42 = D.46854_41 | 64;
  *flag_pole_3(D) = D.46903_42;

<bb 30>:
  D.46904_43 = switch_stristr ("~IGNORE_DTMF_DURATION", str_1(D));
  if (D.46904_43 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.46854_44 = *flag_pole_3(D);
  D.46907_45 = D.46854_44 & 4294967231;
  *flag_pole_3(D) = D.46907_45;

<bb 32>:
  D.46908_46 = switch_stristr ("ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46908_46 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.46854_47 = *flag_pole_3(D);
  D.46911_48 = D.46854_47 | 128;
  *flag_pole_3(D) = D.46911_48;

<bb 34>:
  D.46912_49 = switch_stristr ("~ACCEPT_ANY_PACKETS", str_1(D));
  if (D.46912_49 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.46854_50 = *flag_pole_3(D);
  D.46915_51 = D.46854_50 & 4294967167;
  *flag_pole_3(D) = D.46915_51;

<bb 36>:
  D.46916_52 = switch_stristr ("ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46916_52 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  D.46854_53 = *flag_pole_3(D);
  D.46919_54 = D.46854_53 | 2048;
  *flag_pole_3(D) = D.46919_54;

<bb 38>:
  D.46920_55 = switch_stristr ("~ACCEPT_ANY_PAYLOAD", str_1(D));
  if (D.46920_55 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.46854_56 = *flag_pole_3(D);
  D.46923_57 = D.46854_56 & 4294965247;
  *flag_pole_3(D) = D.46923_57;

<bb 40>:
  D.46924_58 = switch_stristr ("GEN_ONE_GEN_ALL", str_1(D));
  if (D.46924_58 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.46854_59 = *flag_pole_3(D);
  D.46927_60 = D.46854_59 | 256;
  *flag_pole_3(D) = D.46927_60;

<bb 42>:
  D.46928_61 = switch_stristr ("~GEN_ONE_GEN_ALL", str_1(D));
  if (D.46928_61 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.46854_62 = *flag_pole_3(D);
  D.46931_63 = D.46854_62 & 4294967039;
  *flag_pole_3(D) = D.46931_63;

<bb 44>:
  D.46932_64 = switch_stristr ("CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46932_64 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.46854_65 = *flag_pole_3(D);
  D.46935_66 = D.46854_65 | 512;
  *flag_pole_3(D) = D.46935_66;

<bb 46>:
  D.46936_67 = switch_stristr ("~CHANGE_SSRC_ON_MARKER", str_1(D));
  if (D.46936_67 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.46854_68 = *flag_pole_3(D);
  D.46939_69 = D.46854_68 & 4294966783;
  *flag_pole_3(D) = D.46939_69;

<bb 48>:
  D.46940_70 = switch_stristr ("FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46940_70 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.46854_71 = *flag_pole_3(D);
  D.46943_72 = D.46854_71 | 1024;
  *flag_pole_3(D) = D.46943_72;

<bb 50>:
  D.46944_73 = switch_stristr ("~FLUSH_JB_ON_DTMF", str_1(D));
  if (D.46944_73 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.46854_74 = *flag_pole_3(D);
  D.46947_75 = D.46854_74 & 4294966271;
  *flag_pole_3(D) = D.46947_75;

<bb 52>:
  return;

}



;; Function switch_core_media_add_crypto (switch_core_media_add_crypto)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 15 }
;; 3 succs { 4 15 }
;; 4 succs { 5 15 }
;; 5 succs { 6 7 }
;; 6 succs { 15 }
;; 7 succs { 8 15 }
;; 8 succs { 9 15 }
;; 9 succs { 10 15 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Marking useful stmt: # DEBUG p => p_3

Marking useful stmt: # DEBUG p => p_7

Marking useful stmt: type_8 = switch_core_media_crypto_str2type (p_7);

Marking useful stmt: # DEBUG type => type_8

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);

Marking useful stmt: # DEBUG p => p_9

Marking useful stmt: # DEBUG p => p_13

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);

Marking useful stmt: # DEBUG p => p_15

Marking useful stmt: switch_b64_decode (p_15, &key, 64);

Marking useful stmt: memcpy (D.46839_19, &key[0], D.46842_22);

Marking useful stmt: memcpy (D.46845_24, &key[0], D.46842_27);

Marking useful stmt: bad:

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");

Marking useful stmt: return D.46846_1;


Processing worklist:
processing: return D.46846_1;

marking necessary through D.46846_1 stmt D.46846_1 = PHI <0(14), 1(15), 0(13)>
processing: D.46846_1 = PHI <0(14), 1(15), 0(13)>

Marking useful stmt: if (direction_16(D) == 0)

Marking useful stmt: if (p_3 != 0B)

Marking useful stmt: if (D.46818_4 != 0)

Marking useful stmt: if (D.46822_6 != 0)

Marking useful stmt: if (type_8 == 9)

Marking useful stmt: if (p_9 != 0B)

Marking useful stmt: if (D.46818_10 != 0)

Marking useful stmt: if (D.46822_12 != 0)

Marking useful stmt: if (D.46833_14 != 0)

processing: if (D.46833_14 != 0)

marking necessary through D.46833_14 stmt D.46833_14 = strncasecmp (p_13, "inline:", 7);
processing: D.46833_14 = strncasecmp (p_13, "inline:", 7);

marking necessary through p_13 stmt p_13 = p_9 + 1;
processing: p_13 = p_9 + 1;

marking necessary through p_9 stmt p_9 = __builtin_strchr (p_7, 32);
processing: p_9 = __builtin_strchr (p_7, 32);

marking necessary through p_7 stmt p_7 = p_3 + 1;
processing: p_7 = p_3 + 1;

marking necessary through p_3 stmt p_3 = __builtin_strchr (key_str_2(D), 32);
processing: p_3 = __builtin_strchr (key_str_2(D), 32);

processing: if (D.46822_12 != 0)

marking necessary through D.46822_12 stmt D.46822_12 = MEM[(char *)p_9 + 1B];
processing: D.46822_12 = MEM[(char *)p_9 + 1B];

processing: if (D.46818_10 != 0)

marking necessary through D.46818_10 stmt D.46818_10 = *p_9;
processing: D.46818_10 = *p_9;

processing: if (p_9 != 0B)

processing: if (type_8 == 9)

processing: if (D.46822_6 != 0)

marking necessary through D.46822_6 stmt D.46822_6 = MEM[(char *)p_3 + 1B];
processing: D.46822_6 = MEM[(char *)p_3 + 1B];

processing: if (D.46818_4 != 0)

marking necessary through D.46818_4 stmt D.46818_4 = *p_3;
processing: D.46818_4 = *p_3;

processing: if (p_3 != 0B)

processing: if (direction_16(D) == 0)

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");

processing: memcpy (D.46845_24, &key[0], D.46842_27);

marking necessary through D.46845_24 stmt D.46845_24 = (void * restrict) D.46844_23;
marking necessary through D.46842_27 stmt D.46842_27 = (size_t) D.46841_26;
processing: D.46842_27 = (size_t) D.46841_26;

marking necessary through D.46841_26 stmt D.46841_26 = SUITES[type_8].keylen;
processing: D.46841_26 = SUITES[type_8].keylen;

processing: D.46845_24 = (void * restrict) D.46844_23;

marking necessary through D.46844_23 stmt D.46844_23 = &ssec_17(D)->remote_raw_key[0];
processing: D.46844_23 = &ssec_17(D)->remote_raw_key[0];

processing: memcpy (D.46839_19, &key[0], D.46842_22);

marking necessary through D.46839_19 stmt D.46839_19 = (void * restrict) D.46838_18;
marking necessary through D.46842_22 stmt D.46842_22 = (size_t) D.46841_21;
processing: D.46842_22 = (size_t) D.46841_21;

marking necessary through D.46841_21 stmt D.46841_21 = SUITES[type_8].keylen;
processing: D.46841_21 = SUITES[type_8].keylen;

processing: D.46839_19 = (void * restrict) D.46838_18;

marking necessary through D.46838_18 stmt D.46838_18 = &ssec_17(D)->local_raw_key[0];
processing: D.46838_18 = &ssec_17(D)->local_raw_key[0];

processing: switch_b64_decode (p_15, &key, 64);

marking necessary through p_15 stmt p_15 = &MEM[(void *)p_9 + 8B];
processing: p_15 = &MEM[(void *)p_9 + 8B];

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);

processing: type_8 = switch_core_media_crypto_str2type (p_7);


Eliminating unnecessary statements:
Removed 0 of 42 statements (0%)
Removed 0 of 2 PHI nodes (0%)
switch_core_media_add_crypto (struct switch_secure_settings_t * ssec, const char * key_str, switch_rtp_crypto_direction_t direction)
{
  static const char __func__[29] = "switch_core_media_add_crypto";
  char * p;
  switch_rtp_crypto_key_type_t type;
  unsigned char key[64];
  switch_status_t D.46846;
  void * restrict D.46845;
  unsigned char * D.46844;
  size_t D.46842;
  int D.46841;
  void * restrict D.46839;
  unsigned char * D.46838;
  int D.46833;
  char D.46822;
  char D.46818;

<bb 2>:
  p_3 = __builtin_strchr (key_str_2(D), 32);
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 15> (bad);

<bb 3>:
  D.46818_4 = *p_3;
  if (D.46818_4 != 0)
    goto <bb 4>;
  else
    goto <bb 15> (bad);

<bb 4>:
  D.46822_6 = MEM[(char *)p_3 + 1B];
  if (D.46822_6 != 0)
    goto <bb 5>;
  else
    goto <bb 15> (bad);

<bb 5>:
  p_7 = p_3 + 1;
  # DEBUG p => p_7
  type_8 = switch_core_media_crypto_str2type (p_7);
  # DEBUG type => type_8
  if (type_8 == 9)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);
  goto <bb 15> (bad);

<bb 7>:
  p_9 = __builtin_strchr (p_7, 32);
  # DEBUG p => p_9
  if (p_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 15> (bad);

<bb 8>:
  D.46818_10 = *p_9;
  if (D.46818_10 != 0)
    goto <bb 9>;
  else
    goto <bb 15> (bad);

<bb 9>:
  D.46822_12 = MEM[(char *)p_9 + 1B];
  if (D.46822_12 != 0)
    goto <bb 10>;
  else
    goto <bb 15> (bad);

<bb 10>:
  p_13 = p_9 + 1;
  # DEBUG p => p_13
  D.46833_14 = strncasecmp (p_13, "inline:", 7);
  if (D.46833_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);
  goto <bb 15> (bad);

<bb 12>:
  p_15 = &MEM[(void *)p_9 + 8B];
  # DEBUG p => p_15
  switch_b64_decode (p_15, &key, 64);
  if (direction_16(D) == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.46838_18 = &ssec_17(D)->local_raw_key[0];
  D.46839_19 = (void * restrict) D.46838_18;
  D.46841_21 = SUITES[type_8].keylen;
  D.46842_22 = (size_t) D.46841_21;
  memcpy (D.46839_19, &key[0], D.46842_22);
  goto <bb 16>;

<bb 14>:
  D.46844_23 = &ssec_17(D)->remote_raw_key[0];
  D.46845_24 = (void * restrict) D.46844_23;
  D.46841_26 = SUITES[type_8].keylen;
  D.46842_27 = (size_t) D.46841_26;
  memcpy (D.46845_24, &key[0], D.46842_27);
  goto <bb 16>;

bad:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");

<bb 16>:
  # D.46846_1 = PHI <0(14), 1(15), 0(13)>
  return D.46846_1;

}



;; Function switch_core_session_apply_crypto (switch_core_session_apply_crypto)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 9 5 }
;; 5 succs { 9 6 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Marking useful stmt: # DEBUG varname => "rtp_secure_video_confirmed"

Marking useful stmt: # DEBUG varname => varname_1

Marking useful stmt: # DEBUG engine => engine_10

Marking useful stmt: D.43882_12 = switch_channel_test_flag (D.43881_11, 84);

Marking useful stmt: D.43889_16 = switch_channel_test_flag (D.43881_15, 92);

Marking useful stmt: switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);

Marking useful stmt: switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);

Marking useful stmt: switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);

Marking useful stmt: switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);

Marking useful stmt: if (D.43889_16 != 0)

marking necessary through D.43881_45 stmt D.43881_45 = session_5(D)->channel;
marking necessary through D.43903_47 stmt D.43903_47 = SUITES[D.43885_46].name;
processing: D.43903_47 = SUITES[D.43885_46].name;

marking necessary through D.43885_46 stmt D.43885_46 = engine_10->crypto_type;
processing: D.43885_46 = engine_10->crypto_type;

marking necessary through engine_10 stmt engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};
processing: engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};

Marking useful stmt: if (D.43876_6 == 0B)

marking necessary through D.43876_7 stmt D.43876_7 = session_5(D)->media_handle;
processing: D.43876_7 = session_5(D)->media_handle;

processing: if (D.43876_6 == 0B)

marking necessary through D.43876_6 stmt D.43876_6 = session_5(D)->media_handle;
processing: D.43876_6 = session_5(D)->media_handle;

processing: D.43881_45 = session_5(D)->channel;

processing: if (D.43889_16 != 0)

Marking useful stmt: if (D.43886_14 != 0B)

processing: if (D.43886_14 != 0B)

Marking useful stmt: if (D.43882_12 != 0)

marking necessary through D.43886_14 stmt D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
processing: D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;

marking necessary through D.43885_13 stmt D.43885_13 = engine_10->crypto_type;
processing: D.43885_13 = engine_10->crypto_type;

processing: if (D.43882_12 != 0)

processing: switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);

marking necessary through D.43881_44 stmt D.43881_44 = session_5(D)->channel;
marking necessary through varname_1 stmt varname_1 = PHI <"rtp_secure_audio_confirmed"(2), "rtp_secure_video_confirmed"(3)>
processing: varname_1 = PHI <"rtp_secure_audio_confirmed"(2), "rtp_secure_video_confirmed"(3)>

Marking useful stmt: if (type_2(D) == 0)

processing: if (type_2(D) == 0)

processing: D.43881_44 = session_5(D)->channel;

processing: switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);

marking necessary through D.43895_32 stmt D.43895_32 = engine_10->rtp_session;
marking necessary through D.43901_35 stmt D.43901_35 = (uint32_t) D.43900_34;
marking necessary through D.43896_41 stmt D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
marking necessary through D.43902_39 stmt D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
marking necessary through D.43899_43 stmt D.43899_43 = (switch_size_t) D.43898_42;
processing: D.43899_43 = (switch_size_t) D.43898_42;

marking necessary through D.43898_42 stmt D.43898_42 = SUITES[D.43896_41].keylen;
processing: D.43898_42 = SUITES[D.43896_41].keylen;

processing: D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;

marking necessary through D.43885_38 stmt D.43885_38 = engine_10->crypto_type;
processing: D.43885_38 = engine_10->crypto_type;

processing: D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;

marking necessary through D.43885_40 stmt D.43885_40 = engine_10->crypto_type;
processing: D.43885_40 = engine_10->crypto_type;

processing: D.43901_35 = (uint32_t) D.43900_34;

marking necessary through D.43900_34 stmt D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
processing: D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;

marking necessary through D.43885_33 stmt D.43885_33 = engine_10->crypto_type;
processing: D.43885_33 = engine_10->crypto_type;

processing: D.43895_32 = engine_10->rtp_session;

processing: switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);

marking necessary through D.43895_23 stmt D.43895_23 = engine_10->rtp_session;
marking necessary through D.43896_29 stmt D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
marking necessary through D.43897_27 stmt D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
marking necessary through D.43899_31 stmt D.43899_31 = (switch_size_t) D.43898_30;
processing: D.43899_31 = (switch_size_t) D.43898_30;

marking necessary through D.43898_30 stmt D.43898_30 = SUITES[D.43896_29].keylen;
processing: D.43898_30 = SUITES[D.43896_29].keylen;

processing: D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;

marking necessary through D.43885_26 stmt D.43885_26 = engine_10->crypto_type;
processing: D.43885_26 = engine_10->crypto_type;

processing: D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;

marking necessary through D.43885_28 stmt D.43885_28 = engine_10->crypto_type;
processing: D.43885_28 = engine_10->crypto_type;

processing: D.43895_23 = engine_10->rtp_session;

processing: switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);

marking necessary through D.43894_20 stmt D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};
marking necessary through D.43886_22 stmt D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
processing: D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;

marking necessary through D.43885_21 stmt D.43885_21 = engine_10->crypto_type;
processing: D.43885_21 = engine_10->crypto_type;

processing: D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};

marking necessary through D.43885_18 stmt D.43885_18 = engine_10->crypto_type;
processing: D.43885_18 = engine_10->crypto_type;

processing: D.43889_16 = switch_channel_test_flag (D.43881_15, 92);

marking necessary through D.43881_15 stmt D.43881_15 = session_5(D)->channel;
processing: D.43881_15 = session_5(D)->channel;

processing: D.43882_12 = switch_channel_test_flag (D.43881_11, 84);

marking necessary through D.43881_11 stmt D.43881_11 = session_5(D)->channel;
processing: D.43881_11 = session_5(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 48 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_session_apply_crypto (struct switch_core_session_t * session, switch_media_type_t type)
{
  const char * varname;
  struct switch_rtp_engine_t * engine;
  char * D.43903;
  unsigned char[64] * D.43902;
  uint32_t D.43901;
  int D.43900;
  switch_size_t D.43899;
  int D.43898;
  unsigned char[64] * D.43897;
  switch_rtp_crypto_key_type_t D.43896;
  struct switch_rtp_t * D.43895;
  struct switch_secure_settings_t * D.43894;
  uint32_t D.43889;
  char * D.43886;
  switch_rtp_crypto_key_type_t D.43885;
  uint32_t D.43882;
  struct switch_channel_t * D.43881;
  struct switch_media_handle_t * D.43876;

<bb 2>:
  if (type_2(D) == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  # DEBUG varname => "rtp_secure_video_confirmed"

<bb 4>:
  # varname_1 = PHI <"rtp_secure_audio_confirmed"(2), "rtp_secure_video_confirmed"(3)>
  # DEBUG varname => varname_1
  D.43876_6 = session_5(D)->media_handle;
  if (D.43876_6 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

<bb 5>:
  D.43876_7 = session_5(D)->media_handle;
  engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  D.43881_11 = session_5(D)->channel;
  D.43882_12 = switch_channel_test_flag (D.43881_11, 84);
  if (D.43882_12 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;

<bb 6>:
  D.43885_13 = engine_10->crypto_type;
  D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
  if (D.43886_14 != 0B)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 7>:
  D.43881_15 = session_5(D)->channel;
  D.43889_16 = switch_channel_test_flag (D.43881_15, 92);
  if (D.43889_16 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.43885_18 = engine_10->crypto_type;
  D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};
  D.43885_21 = engine_10->crypto_type;
  D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
  switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);
  D.43895_23 = engine_10->rtp_session;
  D.43885_26 = engine_10->crypto_type;
  D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
  D.43885_28 = engine_10->crypto_type;
  D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
  D.43898_30 = SUITES[D.43896_29].keylen;
  D.43899_31 = (switch_size_t) D.43898_30;
  switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);
  D.43895_32 = engine_10->rtp_session;
  D.43885_33 = engine_10->crypto_type;
  D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
  D.43901_35 = (uint32_t) D.43900_34;
  D.43885_38 = engine_10->crypto_type;
  D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
  D.43885_40 = engine_10->crypto_type;
  D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
  D.43898_42 = SUITES[D.43896_41].keylen;
  D.43899_43 = (switch_size_t) D.43898_42;
  switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);
  D.43881_44 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);
  D.43881_45 = session_5(D)->channel;
  D.43885_46 = engine_10->crypto_type;
  D.43903_47 = SUITES[D.43885_46].name;
  switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);

<bb 9>:
  return;

}



;; Function switch_core_media_set_rtp_session (switch_core_media_set_rtp_session)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Marking useful stmt: # DEBUG engine => engine_7

Marking useful stmt: engine_7->rtp_session = rtp_session_8(D);

Marking useful stmt: engine_7->type = type_5(D);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: engine_7->type = type_5(D);

Marking useful stmt: if (D.46810_2 == 0B)

marking necessary through engine_7 stmt engine_7 = &D.46810_3->engines[type_5(D)]{lb: 0 sz: 11416};
processing: engine_7 = &D.46810_3->engines[type_5(D)]{lb: 0 sz: 11416};

marking necessary through D.46810_3 stmt D.46810_3 = session_1(D)->media_handle;
processing: D.46810_3 = session_1(D)->media_handle;

processing: if (D.46810_2 == 0B)

marking necessary through D.46810_2 stmt D.46810_2 = session_1(D)->media_handle;
processing: D.46810_2 = session_1(D)->media_handle;

processing: engine_7->rtp_session = rtp_session_8(D);


Eliminating unnecessary statements:
Removed 0 of 8 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_set_rtp_session (struct switch_core_session_t * session, switch_media_type_t type, struct switch_rtp_t * rtp_session)
{
  struct switch_rtp_engine_t * engine;
  unsigned int D.46814;
  struct switch_media_handle_t * D.46810;

<bb 2>:
  D.46810_2 = session_1(D)->media_handle;
  if (D.46810_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  D.46810_3 = session_1(D)->media_handle;
  engine_7 = &D.46810_3->engines[type_5(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_7
  engine_7->rtp_session = rtp_session_8(D);
  engine_7->type = type_5(D);

<bb 4>:
  return;

}



;; Function switch_core_session_check_incoming_crypto (switch_core_session_check_incoming_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
;; 2 succs { 42 3 }
;; 3 succs { 42 4 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 29 }
;; 10 succs { 11 29 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 41 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 41 }
;; 18 succs { 19 }
;; 19 succs { 20 28 }
;; 20 succs { 21 28 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 41 }
;; 26 succs { 27 41 }
;; 27 succs { 41 }
;; 28 succs { 41 }
;; 29 succs { 30 41 }
;; 30 succs { 31 32 }
;; 31 succs { 41 }
;; 32 succs { 33 34 }
;; 33 succs { 36 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 39 37 }
;; 37 succs { 39 38 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 }
;; 42 succs { 1 }
Marking useful stmt: # DEBUG got_crypto => 0

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG ctype => 0

Marking useful stmt: # DEBUG vval => 0B

Marking useful stmt: # DEBUG smh => smh_11

Marking useful stmt: # DEBUG engine => engine_19

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG j => j_23

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1179, session_10(D), 7, "looking for crypto suite [%s] in [%s]\n", D.46729_24, crypto_25(D));

Marking useful stmt: D.46730_27 = switch_stristr (D.46729_26, crypto_25(D));

Marking useful stmt: # DEBUG ctype => ctype_29

Marking useful stmt: # DEBUG vval => vval_30

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1184, session_10(D), 7, "Found suite %s\n", vval_30);

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_31, "rtp_secure_media_negotiated", vval_30, 1);

Marking useful stmt: # DEBUG i => i_32

Marking useful stmt: # DEBUG i => i_2

Marking useful stmt: # DEBUG vval => vval_4

Marking useful stmt: # DEBUG ctype => ctype_3

Marking useful stmt: D.46741_36 = switch_rtp_ready (D.46740_35);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1193, session_10(D), 7, "Existing key is still valid.\n");

Marking useful stmt: # DEBUG got_crypto => 1

Marking useful stmt: a_44 = switch_stristr ("AE", D.46738_43);

Marking useful stmt: # DEBUG a => a_44

Marking useful stmt: b_45 = switch_stristr ("AE", crypto_25(D));

Marking useful stmt: # DEBUG b => b_45

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1201, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_47, varname_48(D), vval_4, 1);

Marking useful stmt: switch_core_media_build_crypto (D.46725_49, type_17(D), crypto_tag_51(D), ctype.166_50, 0, 1);

Marking useful stmt: # DEBUG __nptr => crypto_25(D)

Marking useful stmt: D.47412_185 = strtol (crypto_25(D), 0B, 10);

Marking useful stmt: switch_rtp_add_crypto_key (D.46740_52, 0, D.46754_54, D.46755_56, D.46756_58, D.46758_60);

Marking useful stmt: engine_19->crypto_type = ctype.166_65;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1214, session_10(D), 7, "Change Remote key to [%s]\n", crypto_25(D));

Marking useful stmt: D.46767_67 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1215);

Marking useful stmt: engine_19->ssec[D.46737_66].remote_crypto_key = D.46767_67;

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_69, "srtp_remote_audio_crypto_key", crypto_25(D), 1);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_70, "srtp_remote_audio_crypto_tag", "%d", crypto_tag_51(D));

Marking useful stmt: D.46771_73 = switch_core_media_crypto_type2str (ctype.166_72);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_71, "srtp_remote_audio_crypto_type", "%s", D.46771_73);

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_75, "srtp_remote_video_crypto_key", crypto_25(D), 1);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_76, "srtp_remote_video_crypto_tag", "%d", crypto_tag_51(D));

Marking useful stmt: D.46775_79 = switch_core_media_crypto_type2str (ctype.166_78);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_77, "srtp_remote_video_crypto_type", "%s", D.46775_79);

Marking useful stmt: engine_19->ssec[D.46737_80].crypto_tag = crypto_tag_51(D);

Marking useful stmt: D.46776_82 = switch_rtp_ready (D.46740_81);

Marking useful stmt: D.46779_84 = switch_channel_test_flag (D.46734_83, 92);

Marking useful stmt: switch_core_media_add_crypto (D.46784_88, D.46738_90, 1);

Marking useful stmt: switch_rtp_add_crypto_key (D.46740_91, 1, D.46786_94, D.46755_100, D.46787_98, D.46789_102);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1238, session_10(D), 7, "Ignoring unacceptable key\n");

Marking useful stmt: D.46790_105 = switch_rtp_ready (D.46740_104);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1244, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));

Marking useful stmt: engine_19->crypto_type = ctype.166_106;

Marking useful stmt: D.46795_108 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1249);

Marking useful stmt: engine_19->ssec[D.46737_107].remote_crypto_key = D.46795_108;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1250, session_10(D), 7, "Set Remote Key [%s]\n", D.46738_110);

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_112, "srtp_remote_audio_crypto_key", crypto_25(D), 1);

Marking useful stmt: D.46798_115 = switch_core_media_crypto_type2str (ctype.166_114);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_113, "srtp_remote_audio_crypto_type", "%s", D.46798_115);

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_117, "srtp_remote_video_crypto_key", crypto_25(D), 1);

Marking useful stmt: D.46802_120 = switch_core_media_crypto_type2str (ctype.166_119);

Marking useful stmt: switch_channel_set_variable_printf (D.46734_118, "srtp_remote_video_crypto_type", "%s", D.46802_120);

Marking useful stmt: engine_19->ssec[D.46737_121].crypto_tag = crypto_tag_51(D);

Marking useful stmt: # DEBUG got_crypto => 1

Marking useful stmt: switch_channel_set_variable_var_check (D.46734_123, varname_48(D), vval_4, 1);

Marking useful stmt: switch_channel_set_flag_value (D.46804_125, 92, 1);

Marking useful stmt: # DEBUG s => D.46805_127

Marking useful stmt: switch_core_media_build_crypto (D.46725_129, type_17(D), crypto_tag_51(D), ctype.166_130, 0, 1);

Marking useful stmt: end:

Marking useful stmt: # DEBUG got_crypto => got_crypto_1

Marking useful stmt: return got_crypto_5;

can not prove finiteness of loop 1
Marking useful stmt: if (D.46730_27 != 0B)


Processing worklist:
processing: if (D.46730_27 != 0B)

Marking useful stmt: if (D.46728_21 != 9)

processing: if (D.46728_21 != 9)

Marking useful stmt: if (D.46722_13 == 2)

marking necessary through D.46728_21 stmt D.46728_21 = smh_11->crypto_suite_order[i_2];
processing: D.46728_21 = smh_11->crypto_suite_order[i_2];

marking necessary through smh_11 stmt smh_11 = session_10(D)->media_handle;
marking necessary through i_2 stmt i_2 = PHI <0(4), i_32(7)>
processing: i_2 = PHI <0(4), i_32(7)>

marking necessary through i_32 stmt i_32 = i_2 + 1;
processing: i_32 = i_2 + 1;

processing: smh_11 = session_10(D)->media_handle;

processing: if (D.46722_13 == 2)

Marking useful stmt: if (smh_11 == 0B)

marking necessary through D.46722_13 stmt D.46722_13 = smh_11->crypto_mode;
processing: D.46722_13 = smh_11->crypto_mode;

processing: if (smh_11 == 0B)

processing: return got_crypto_5;

marking necessary through got_crypto_5 stmt got_crypto_5 = PHI <0(2), -1(3), got_crypto_1(41)>
processing: got_crypto_5 = PHI <0(2), -1(3), got_crypto_1(41)>

marking necessary through got_crypto_1 stmt got_crypto_1 = PHI <0(17), 1(26), 0(29), 0(31), 1(39), 1(40), 1(14), 0(28), 1(25), 1(27)>
processing: got_crypto_1 = PHI <0(17), 1(26), 0(29), 0(31), 1(39), 1(40), 1(14), 0(28), 1(25), 1(27)>

Marking useful stmt: if (vval_4 == 0B)

Marking useful stmt: if (D.46776_82 != 0)

Marking useful stmt: if (D.46738_34 != 0B)

Marking useful stmt: if (D.46741_36 != 0)

Marking useful stmt: if (vval_4 == 0B)

Marking useful stmt: if (D.47415_187 != 0)

Marking useful stmt: if (D.38621_40 == 0)

Marking useful stmt: if (D.46763_63 != 0)

Marking useful stmt: if (D.46765_64 == 0)

Marking useful stmt: if (D.46779_84 != 0)

processing: if (D.46779_84 != 0)

processing: if (D.46765_64 == 0)

marking necessary through D.46765_64 stmt D.46765_64 = strncasecmp (a_44, b_45, 23);
processing: D.46765_64 = strncasecmp (a_44, b_45, 23);

processing: if (D.46763_63 != 0)

Marking useful stmt: if (sdp_type_46(D) == 0)

marking necessary through D.46763_63 stmt D.46763_63 = D.46761_61 && D.46762_62;
processing: D.46763_63 = D.46761_61 && D.46762_62;

marking necessary through D.46761_61 stmt D.46761_61 = a_44 != 0B;
marking necessary through D.46762_62 stmt D.46762_62 = b_45 != 0B;
processing: D.46762_62 = b_45 != 0B;

processing: D.46761_61 = a_44 != 0B;

processing: if (sdp_type_46(D) == 0)

Marking useful stmt: if (crypto_25(D) != 0B)

Marking useful stmt: if (D.46737_37 != 9)

processing: if (D.46737_37 != 9)

marking necessary through D.46737_37 stmt D.46737_37 = engine_19->crypto_type;
processing: D.46737_37 = engine_19->crypto_type;

marking necessary through engine_19 stmt engine_19 = &D.46725_15->engines[type_17(D)]{lb: 0 sz: 11416};
processing: engine_19 = &D.46725_15->engines[type_17(D)]{lb: 0 sz: 11416};

marking necessary through D.46725_15 stmt D.46725_15 = session_10(D)->media_handle;
processing: D.46725_15 = session_10(D)->media_handle;

processing: if (crypto_25(D) != 0B)

processing: if (D.38621_40 == 0)

marking necessary through D.38621_40 stmt D.38621_40 = __builtin_strcmp (crypto_25(D), D.46738_39);
processing: D.38621_40 = __builtin_strcmp (crypto_25(D), D.46738_39);

marking necessary through D.46738_39 stmt D.46738_39 = engine_19->ssec[D.46737_38].remote_crypto_key;
processing: D.46738_39 = engine_19->ssec[D.46737_38].remote_crypto_key;

marking necessary through D.46737_38 stmt D.46737_38 = engine_19->crypto_type;
processing: D.46737_38 = engine_19->crypto_type;

processing: if (D.47415_187 != 0)

marking necessary through D.47415_187 stmt D.47415_187 = PHI <1(36), 1(37), 0(38)>
processing: D.47415_187 = PHI <1(36), 1(37), 0(38)>

Marking useful stmt: if (D.46805_127 == 0B)

Marking useful stmt: if (D.47416_186 == 0)

processing: if (D.47416_186 == 0)

marking necessary through D.47416_186 stmt D.47416_186 = MEM[(const char *)D.46805_127];
processing: D.47416_186 = MEM[(const char *)D.46805_127];

marking necessary through D.46805_127 stmt D.46805_127 = engine_19->ssec[D.46737_126].local_crypto_key;
processing: D.46805_127 = engine_19->ssec[D.46737_126].local_crypto_key;

marking necessary through D.46737_126 stmt D.46737_126 = engine_19->crypto_type;
processing: D.46737_126 = engine_19->crypto_type;

processing: if (D.46805_127 == 0B)

processing: if (vval_4 == 0B)

Marking useful stmt: if (D.46790_105 == 0)

marking necessary through vval_4 stmt vval_4 = PHI <vval_30(6), 0B(8)>
processing: vval_4 = PHI <vval_30(6), 0B(8)>

marking necessary through vval_30 stmt vval_30 = SUITES[j_23].name;
processing: vval_30 = SUITES[j_23].name;

marking necessary through j_23 stmt j_23 = SUITES[D.46728_22].type;
processing: j_23 = SUITES[D.46728_22].type;

marking necessary through D.46728_22 stmt D.46728_22 = smh_11->crypto_suite_order[i_2];
processing: D.46728_22 = smh_11->crypto_suite_order[i_2];

processing: if (D.46790_105 == 0)

processing: if (D.46741_36 != 0)

processing: if (D.46738_34 != 0B)

marking necessary through D.46738_34 stmt D.46738_34 = engine_19->ssec[D.46737_33].remote_crypto_key;
processing: D.46738_34 = engine_19->ssec[D.46737_33].remote_crypto_key;

marking necessary through D.46737_33 stmt D.46737_33 = engine_19->crypto_type;
processing: D.46737_33 = engine_19->crypto_type;

processing: if (D.46776_82 != 0)

processing: if (vval_4 == 0B)

processing: switch_core_media_build_crypto (D.46725_129, type_17(D), crypto_tag_51(D), ctype.166_130, 0, 1);

marking necessary through D.46725_129 stmt D.46725_129 = session_10(D)->media_handle;
marking necessary through ctype.166_130 stmt ctype.166_130 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_130 = (switch_rtp_crypto_key_type_t) ctype_3;

marking necessary through ctype_3 stmt ctype_3 = PHI <ctype_29(6), 0(8)>
processing: ctype_3 = PHI <ctype_29(6), 0(8)>

marking necessary through ctype_29 stmt ctype_29 = (int) D.46733_28;
processing: ctype_29 = (int) D.46733_28;

marking necessary through D.46733_28 stmt D.46733_28 = SUITES[j_23].type;
processing: D.46733_28 = SUITES[j_23].type;

processing: D.46725_129 = session_10(D)->media_handle;

processing: switch_channel_set_flag_value (D.46804_125, 92, 1);

marking necessary through D.46804_125 stmt D.46804_125 = D.46803_124->channel;
processing: D.46804_125 = D.46803_124->channel;

marking necessary through D.46803_124 stmt D.46803_124 = smh_11->session;
processing: D.46803_124 = smh_11->session;

processing: switch_channel_set_variable_var_check (D.46734_123, varname_48(D), vval_4, 1);

marking necessary through D.46734_123 stmt D.46734_123 = session_10(D)->channel;
processing: D.46734_123 = session_10(D)->channel;

processing: engine_19->ssec[D.46737_121].crypto_tag = crypto_tag_51(D);

marking necessary through D.46737_121 stmt D.46737_121 = engine_19->crypto_type;
processing: D.46737_121 = engine_19->crypto_type;

processing: switch_channel_set_variable_printf (D.46734_118, "srtp_remote_video_crypto_type", "%s", D.46802_120);

Marking useful stmt: if (D.46768_116 == 1)

marking necessary through D.46734_118 stmt D.46734_118 = session_10(D)->channel;
processing: D.46734_118 = session_10(D)->channel;

processing: if (D.46768_116 == 1)

Marking useful stmt: if (D.46768_111 == 0)

marking necessary through D.46768_116 stmt D.46768_116 = engine_19->type;
processing: D.46768_116 = engine_19->type;

processing: if (D.46768_111 == 0)

marking necessary through D.46768_111 stmt D.46768_111 = engine_19->type;
processing: D.46768_111 = engine_19->type;

processing: D.46802_120 = switch_core_media_crypto_type2str (ctype.166_119);

marking necessary through ctype.166_119 stmt ctype.166_119 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_119 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_channel_set_variable_var_check (D.46734_117, "srtp_remote_video_crypto_key", crypto_25(D), 1);

marking necessary through D.46734_117 stmt D.46734_117 = session_10(D)->channel;
processing: D.46734_117 = session_10(D)->channel;

processing: switch_channel_set_variable_printf (D.46734_113, "srtp_remote_audio_crypto_type", "%s", D.46798_115);

marking necessary through D.46734_113 stmt D.46734_113 = session_10(D)->channel;
processing: D.46734_113 = session_10(D)->channel;

processing: D.46798_115 = switch_core_media_crypto_type2str (ctype.166_114);

marking necessary through ctype.166_114 stmt ctype.166_114 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_114 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_channel_set_variable_var_check (D.46734_112, "srtp_remote_audio_crypto_key", crypto_25(D), 1);

marking necessary through D.46734_112 stmt D.46734_112 = session_10(D)->channel;
processing: D.46734_112 = session_10(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1250, session_10(D), 7, "Set Remote Key [%s]\n", D.46738_110);

marking necessary through D.46738_110 stmt D.46738_110 = engine_19->ssec[D.46737_109].remote_crypto_key;
processing: D.46738_110 = engine_19->ssec[D.46737_109].remote_crypto_key;

marking necessary through D.46737_109 stmt D.46737_109 = engine_19->crypto_type;
processing: D.46737_109 = engine_19->crypto_type;

processing: engine_19->ssec[D.46737_107].remote_crypto_key = D.46795_108;

marking necessary through D.46737_107 stmt D.46737_107 = engine_19->crypto_type;
processing: D.46737_107 = engine_19->crypto_type;

processing: D.46795_108 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1249);

processing: engine_19->crypto_type = ctype.166_106;

marking necessary through ctype.166_106 stmt ctype.166_106 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_106 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1244, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));

processing: D.46790_105 = switch_rtp_ready (D.46740_104);

marking necessary through D.46740_104 stmt D.46740_104 = engine_19->rtp_session;
processing: D.46740_104 = engine_19->rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1238, session_10(D), 7, "Ignoring unacceptable key\n");

processing: switch_rtp_add_crypto_key (D.46740_91, 1, D.46786_94, D.46755_100, D.46787_98, D.46789_102);

marking necessary through D.46740_91 stmt D.46740_91 = engine_19->rtp_session;
marking necessary through D.46786_94 stmt D.46786_94 = (uint32_t) D.46785_93;
marking necessary through D.46755_100 stmt D.46755_100 = engine_19->ssec[D.46737_99].crypto_type;
marking necessary through D.46787_98 stmt D.46787_98 = &engine_19->ssec[D.46737_97].remote_raw_key;
marking necessary through D.46789_102 stmt D.46789_102 = (switch_size_t) D.46788_101;
processing: D.46789_102 = (switch_size_t) D.46788_101;

marking necessary through D.46788_101 stmt D.46788_101 = SUITES[D.46755_100].keylen;
processing: D.46788_101 = SUITES[D.46755_100].keylen;

processing: D.46787_98 = &engine_19->ssec[D.46737_97].remote_raw_key;

marking necessary through D.46737_97 stmt D.46737_97 = engine_19->crypto_type;
processing: D.46737_97 = engine_19->crypto_type;

processing: D.46755_100 = engine_19->ssec[D.46737_99].crypto_type;

marking necessary through D.46737_99 stmt D.46737_99 = engine_19->crypto_type;
processing: D.46737_99 = engine_19->crypto_type;

processing: D.46786_94 = (uint32_t) D.46785_93;

marking necessary through D.46785_93 stmt D.46785_93 = engine_19->ssec[D.46737_92].crypto_tag;
processing: D.46785_93 = engine_19->ssec[D.46737_92].crypto_tag;

marking necessary through D.46737_92 stmt D.46737_92 = engine_19->crypto_type;
processing: D.46737_92 = engine_19->crypto_type;

processing: D.46740_91 = engine_19->rtp_session;

processing: switch_core_media_add_crypto (D.46784_88, D.46738_90, 1);

marking necessary through D.46784_88 stmt D.46784_88 = &engine_19->ssec[D.46737_86]{lb: 0 sz: 144};
marking necessary through D.46738_90 stmt D.46738_90 = engine_19->ssec[D.46737_89].remote_crypto_key;
processing: D.46738_90 = engine_19->ssec[D.46737_89].remote_crypto_key;

marking necessary through D.46737_89 stmt D.46737_89 = engine_19->crypto_type;
processing: D.46737_89 = engine_19->crypto_type;

processing: D.46784_88 = &engine_19->ssec[D.46737_86]{lb: 0 sz: 144};

marking necessary through D.46737_86 stmt D.46737_86 = engine_19->crypto_type;
processing: D.46737_86 = engine_19->crypto_type;

processing: D.46779_84 = switch_channel_test_flag (D.46734_83, 92);

marking necessary through D.46734_83 stmt D.46734_83 = session_10(D)->channel;
processing: D.46734_83 = session_10(D)->channel;

processing: D.46776_82 = switch_rtp_ready (D.46740_81);

marking necessary through D.46740_81 stmt D.46740_81 = engine_19->rtp_session;
processing: D.46740_81 = engine_19->rtp_session;

processing: engine_19->ssec[D.46737_80].crypto_tag = crypto_tag_51(D);

marking necessary through D.46737_80 stmt D.46737_80 = engine_19->crypto_type;
processing: D.46737_80 = engine_19->crypto_type;

processing: switch_channel_set_variable_printf (D.46734_77, "srtp_remote_video_crypto_type", "%s", D.46775_79);

Marking useful stmt: if (D.46768_74 == 1)

marking necessary through D.46734_77 stmt D.46734_77 = session_10(D)->channel;
processing: D.46734_77 = session_10(D)->channel;

processing: if (D.46768_74 == 1)

Marking useful stmt: if (D.46768_68 == 0)

marking necessary through D.46768_74 stmt D.46768_74 = engine_19->type;
processing: D.46768_74 = engine_19->type;

processing: if (D.46768_68 == 0)

marking necessary through D.46768_68 stmt D.46768_68 = engine_19->type;
processing: D.46768_68 = engine_19->type;

processing: D.46775_79 = switch_core_media_crypto_type2str (ctype.166_78);

marking necessary through ctype.166_78 stmt ctype.166_78 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_78 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_channel_set_variable_printf (D.46734_76, "srtp_remote_video_crypto_tag", "%d", crypto_tag_51(D));

marking necessary through D.46734_76 stmt D.46734_76 = session_10(D)->channel;
processing: D.46734_76 = session_10(D)->channel;

processing: switch_channel_set_variable_var_check (D.46734_75, "srtp_remote_video_crypto_key", crypto_25(D), 1);

marking necessary through D.46734_75 stmt D.46734_75 = session_10(D)->channel;
processing: D.46734_75 = session_10(D)->channel;

processing: switch_channel_set_variable_printf (D.46734_71, "srtp_remote_audio_crypto_type", "%s", D.46771_73);

marking necessary through D.46734_71 stmt D.46734_71 = session_10(D)->channel;
processing: D.46734_71 = session_10(D)->channel;

processing: D.46771_73 = switch_core_media_crypto_type2str (ctype.166_72);

marking necessary through ctype.166_72 stmt ctype.166_72 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_72 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_channel_set_variable_printf (D.46734_70, "srtp_remote_audio_crypto_tag", "%d", crypto_tag_51(D));

marking necessary through D.46734_70 stmt D.46734_70 = session_10(D)->channel;
processing: D.46734_70 = session_10(D)->channel;

processing: switch_channel_set_variable_var_check (D.46734_69, "srtp_remote_audio_crypto_key", crypto_25(D), 1);

marking necessary through D.46734_69 stmt D.46734_69 = session_10(D)->channel;
processing: D.46734_69 = session_10(D)->channel;

processing: engine_19->ssec[D.46737_66].remote_crypto_key = D.46767_67;

marking necessary through D.46737_66 stmt D.46737_66 = engine_19->crypto_type;
processing: D.46737_66 = engine_19->crypto_type;

processing: D.46767_67 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1215);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1214, session_10(D), 7, "Change Remote key to [%s]\n", crypto_25(D));

processing: engine_19->crypto_type = ctype.166_65;

marking necessary through ctype.166_65 stmt ctype.166_65 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_65 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: switch_rtp_add_crypto_key (D.46740_52, 0, D.46754_54, D.46755_56, D.46756_58, D.46758_60);

marking necessary through D.46740_52 stmt D.46740_52 = engine_19->rtp_session;
marking necessary through D.46754_54 stmt D.46754_54 = (uint32_t) D.47412_185;
marking necessary through D.46755_56 stmt D.46755_56 = engine_19->ssec[D.46737_55].crypto_type;
marking necessary through D.46756_58 stmt D.46756_58 = &engine_19->ssec[D.46737_57].local_raw_key;
marking necessary through D.46758_60 stmt D.46758_60 = (switch_size_t) D.46757_59;
processing: D.46758_60 = (switch_size_t) D.46757_59;

marking necessary through D.46757_59 stmt D.46757_59 = SUITES[ctype_3].keylen;
processing: D.46757_59 = SUITES[ctype_3].keylen;

processing: D.46756_58 = &engine_19->ssec[D.46737_57].local_raw_key;

marking necessary through D.46737_57 stmt D.46737_57 = engine_19->crypto_type;
processing: D.46737_57 = engine_19->crypto_type;

processing: D.46755_56 = engine_19->ssec[D.46737_55].crypto_type;

marking necessary through D.46737_55 stmt D.46737_55 = engine_19->crypto_type;
processing: D.46737_55 = engine_19->crypto_type;

processing: D.46754_54 = (uint32_t) D.47412_185;

processing: D.46740_52 = engine_19->rtp_session;

processing: D.47412_185 = strtol (crypto_25(D), 0B, 10);

processing: switch_core_media_build_crypto (D.46725_49, type_17(D), crypto_tag_51(D), ctype.166_50, 0, 1);

marking necessary through D.46725_49 stmt D.46725_49 = session_10(D)->media_handle;
marking necessary through ctype.166_50 stmt ctype.166_50 = (switch_rtp_crypto_key_type_t) ctype_3;
processing: ctype.166_50 = (switch_rtp_crypto_key_type_t) ctype_3;

processing: D.46725_49 = session_10(D)->media_handle;

processing: switch_channel_set_variable_var_check (D.46734_47, varname_48(D), vval_4, 1);

marking necessary through D.46734_47 stmt D.46734_47 = session_10(D)->channel;
processing: D.46734_47 = session_10(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1201, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));

processing: b_45 = switch_stristr ("AE", crypto_25(D));

processing: a_44 = switch_stristr ("AE", D.46738_43);

marking necessary through D.46738_43 stmt D.46738_43 = engine_19->ssec[D.46737_42].remote_crypto_key;
processing: D.46738_43 = engine_19->ssec[D.46737_42].remote_crypto_key;

marking necessary through D.46737_42 stmt D.46737_42 = engine_19->crypto_type;
processing: D.46737_42 = engine_19->crypto_type;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1193, session_10(D), 7, "Existing key is still valid.\n");

processing: D.46741_36 = switch_rtp_ready (D.46740_35);

marking necessary through D.46740_35 stmt D.46740_35 = engine_19->rtp_session;
processing: D.46740_35 = engine_19->rtp_session;

processing: switch_channel_set_variable_var_check (D.46734_31, "rtp_secure_media_negotiated", vval_30, 1);

marking necessary through D.46734_31 stmt D.46734_31 = session_10(D)->channel;
processing: D.46734_31 = session_10(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1184, session_10(D), 7, "Found suite %s\n", vval_30);

processing: D.46730_27 = switch_stristr (D.46729_26, crypto_25(D));

marking necessary through D.46729_26 stmt D.46729_26 = SUITES[j_23].name;
processing: D.46729_26 = SUITES[j_23].name;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1179, session_10(D), 7, "looking for crypto suite [%s] in [%s]\n", D.46729_24, crypto_25(D));

marking necessary through D.46729_24 stmt D.46729_24 = SUITES[j_23].name;
processing: D.46729_24 = SUITES[j_23].name;


Eliminating unnecessary statements:
Deleting : got_crypto_131 = got_crypto_1;

Removed 1 of 184 statements (0%)
Removed 0 of 12 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  int got_crypto;
  int i;
  int ctype;
  const char * vval;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  static const char __func__[42] = "switch_core_session_check_incoming_crypto";
  void end = <<< error >>>; (unused)

  { Scope block #87 src/switch_core_media.c:1265 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #88 Originating from :#0 

    }

  }

  { Scope block #89 
    switch_rtp_crypto_key_type_t j;

  }

  { Scope block #90 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #91 
    const char * a;
    const char * b;

    { Scope block #92 src/switch_core_media.c:1207 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #93 Originating from :#0 

      }

    }

  }

}
switch_core_session_check_incoming_crypto (struct switch_core_session_t * session, const char * varname, switch_media_type_t type, const char * crypto, int crypto_tag, switch_sdp_type_t sdp_type)
{
  const char D.47416;
  int D.47415;
  int D.47412;
  const char * b;
  const char * a;
  switch_rtp_crypto_key_type_t j;
  static const char __func__[42] = "switch_core_session_check_incoming_crypto";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * vval;
  int ctype;
  int i;
  int got_crypto;
  char * D.46805;
  struct switch_channel_t * D.46804;
  struct switch_core_session_t * D.46803;
  const char * D.46802;
  const char * D.46798;
  char * D.46795;
  uint8_t D.46790;
  switch_size_t D.46789;
  int D.46788;
  unsigned char[64] * D.46787;
  uint32_t D.46786;
  int D.46785;
  struct switch_secure_settings_t * D.46784;
  uint32_t D.46779;
  uint8_t D.46776;
  const char * D.46775;
  const char * D.46771;
  switch_media_type_t D.46768;
  char * D.46767;
  int D.46765;
  _Bool D.46763;
  _Bool D.46762;
  _Bool D.46761;
  switch_size_t D.46758;
  int D.46757;
  unsigned char[64] * D.46756;
  switch_rtp_crypto_key_type_t D.46755;
  uint32_t D.46754;
  switch_rtp_crypto_key_type_t ctype.166;
  int D.38621;
  uint8_t D.46741;
  struct switch_rtp_t * D.46740;
  char * D.46738;
  switch_rtp_crypto_key_type_t D.46737;
  struct switch_channel_t * D.46734;
  switch_rtp_crypto_key_type_t D.46733;
  const char * D.46730;
  char * D.46729;
  switch_rtp_crypto_key_type_t D.46728;
  struct switch_media_handle_t * D.46725;
  switch_rtp_crypto_mode_t D.46722;

<bb 2>:
  # DEBUG got_crypto => 0
  # DEBUG i => 0
  # DEBUG ctype => 0
  # DEBUG vval => 0B
  smh_11 = session_10(D)->media_handle;
  # DEBUG smh => smh_11
  if (smh_11 == 0B)
    goto <bb 42>;
  else
    goto <bb 3>;

<bb 3>:
  D.46722_13 = smh_11->crypto_mode;
  if (D.46722_13 == 2)
    goto <bb 42>;
  else
    goto <bb 4>;

<bb 4>:
  D.46725_15 = session_10(D)->media_handle;
  engine_19 = &D.46725_15->engines[type_17(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_19
  # DEBUG i => 0
  goto <bb 8>;

<bb 5>:
  D.46728_22 = smh_11->crypto_suite_order[i_2];
  j_23 = SUITES[D.46728_22].type;
  # DEBUG j => j_23
  D.46729_24 = SUITES[j_23].name;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1179, session_10(D), 7, "looking for crypto suite [%s] in [%s]\n", D.46729_24, crypto_25(D));
  D.46729_26 = SUITES[j_23].name;
  D.46730_27 = switch_stristr (D.46729_26, crypto_25(D));
  if (D.46730_27 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.46733_28 = SUITES[j_23].type;
  ctype_29 = (int) D.46733_28;
  # DEBUG ctype => ctype_29
  vval_30 = SUITES[j_23].name;
  # DEBUG vval => vval_30
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1184, session_10(D), 7, "Found suite %s\n", vval_30);
  D.46734_31 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_31, "rtp_secure_media_negotiated", vval_30, 1);
  goto <bb 9>;

<bb 7>:
  i_32 = i_2 + 1;
  # DEBUG i => i_32

<bb 8>:
  # i_2 = PHI <0(4), i_32(7)>
  # DEBUG i => i_2
  D.46728_21 = smh_11->crypto_suite_order[i_2];
  if (D.46728_21 != 9)
    goto <bb 5>;
  else
    goto <bb 9>;

<bb 9>:
  # ctype_3 = PHI <ctype_29(6), 0(8)>
  # vval_4 = PHI <vval_30(6), 0B(8)>
  # DEBUG vval => vval_4
  # DEBUG ctype => ctype_3
  D.46737_33 = engine_19->crypto_type;
  D.46738_34 = engine_19->ssec[D.46737_33].remote_crypto_key;
  if (D.46738_34 != 0B)
    goto <bb 10>;
  else
    goto <bb 29>;

<bb 10>:
  D.46740_35 = engine_19->rtp_session;
  D.46741_36 = switch_rtp_ready (D.46740_35);
  if (D.46741_36 != 0)
    goto <bb 11>;
  else
    goto <bb 29>;

<bb 11>:
  if (crypto_25(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  D.46737_37 = engine_19->crypto_type;
  if (D.46737_37 != 9)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.46737_38 = engine_19->crypto_type;
  D.46738_39 = engine_19->ssec[D.46737_38].remote_crypto_key;
  D.38621_40 = __builtin_strcmp (crypto_25(D), D.46738_39);
  if (D.38621_40 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1193, session_10(D), 7, "Existing key is still valid.\n");
  # DEBUG got_crypto => 1
  goto <bb 41> (end);

<bb 15>:
  D.46737_42 = engine_19->crypto_type;
  D.46738_43 = engine_19->ssec[D.46737_42].remote_crypto_key;
  a_44 = switch_stristr ("AE", D.46738_43);
  # DEBUG a => a_44
  b_45 = switch_stristr ("AE", crypto_25(D));
  # DEBUG b => b_45
  if (sdp_type_46(D) == 0)
    goto <bb 16>;
  else
    goto <bb 19>;

<bb 16>:
  if (vval_4 == 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1201, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 41> (end);

<bb 18>:
  D.46734_47 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_47, varname_48(D), vval_4, 1);
  D.46725_49 = session_10(D)->media_handle;
  ctype.166_50 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_49, type_17(D), crypto_tag_51(D), ctype.166_50, 0, 1);
  D.46740_52 = engine_19->rtp_session;
  # DEBUG __nptr => crypto_25(D)
  D.47412_185 = strtol (crypto_25(D), 0B, 10);
  D.46754_54 = (uint32_t) D.47412_185;
  D.46737_55 = engine_19->crypto_type;
  D.46755_56 = engine_19->ssec[D.46737_55].crypto_type;
  D.46737_57 = engine_19->crypto_type;
  D.46756_58 = &engine_19->ssec[D.46737_57].local_raw_key;
  D.46757_59 = SUITES[ctype_3].keylen;
  D.46758_60 = (switch_size_t) D.46757_59;
  switch_rtp_add_crypto_key (D.46740_52, 0, D.46754_54, D.46755_56, D.46756_58, D.46758_60);

<bb 19>:
  D.46761_61 = a_44 != 0B;
  D.46762_62 = b_45 != 0B;
  D.46763_63 = D.46761_61 && D.46762_62;
  if (D.46763_63 != 0)
    goto <bb 20>;
  else
    goto <bb 28>;

<bb 20>:
  D.46765_64 = strncasecmp (a_44, b_45, 23);
  if (D.46765_64 == 0)
    goto <bb 21>;
  else
    goto <bb 28>;

<bb 21>:
  ctype.166_65 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_65;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1214, session_10(D), 7, "Change Remote key to [%s]\n", crypto_25(D));
  D.46737_66 = engine_19->crypto_type;
  D.46767_67 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1215);
  engine_19->ssec[D.46737_66].remote_crypto_key = D.46767_67;
  D.46768_68 = engine_19->type;
  if (D.46768_68 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.46734_69 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_69, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_70 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_70, "srtp_remote_audio_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_71 = session_10(D)->channel;
  ctype.166_72 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46771_73 = switch_core_media_crypto_type2str (ctype.166_72);
  switch_channel_set_variable_printf (D.46734_71, "srtp_remote_audio_crypto_type", "%s", D.46771_73);
  goto <bb 25>;

<bb 23>:
  D.46768_74 = engine_19->type;
  if (D.46768_74 == 1)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.46734_75 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_75, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_76 = session_10(D)->channel;
  switch_channel_set_variable_printf (D.46734_76, "srtp_remote_video_crypto_tag", "%d", crypto_tag_51(D));
  D.46734_77 = session_10(D)->channel;
  ctype.166_78 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46775_79 = switch_core_media_crypto_type2str (ctype.166_78);
  switch_channel_set_variable_printf (D.46734_77, "srtp_remote_video_crypto_type", "%s", D.46775_79);

<bb 25>:
  D.46737_80 = engine_19->crypto_type;
  engine_19->ssec[D.46737_80].crypto_tag = crypto_tag_51(D);
  D.46740_81 = engine_19->rtp_session;
  D.46776_82 = switch_rtp_ready (D.46740_81);
  if (D.46776_82 != 0)
    goto <bb 26>;
  else
    goto <bb 41> (end);

<bb 26>:
  D.46734_83 = session_10(D)->channel;
  D.46779_84 = switch_channel_test_flag (D.46734_83, 92);
  if (D.46779_84 != 0)
    goto <bb 27>;
  else
    goto <bb 41> (end);

<bb 27>:
  D.46737_86 = engine_19->crypto_type;
  D.46784_88 = &engine_19->ssec[D.46737_86]{lb: 0 sz: 144};
  D.46737_89 = engine_19->crypto_type;
  D.46738_90 = engine_19->ssec[D.46737_89].remote_crypto_key;
  switch_core_media_add_crypto (D.46784_88, D.46738_90, 1);
  D.46740_91 = engine_19->rtp_session;
  D.46737_92 = engine_19->crypto_type;
  D.46785_93 = engine_19->ssec[D.46737_92].crypto_tag;
  D.46786_94 = (uint32_t) D.46785_93;
  D.46737_97 = engine_19->crypto_type;
  D.46787_98 = &engine_19->ssec[D.46737_97].remote_raw_key;
  D.46737_99 = engine_19->crypto_type;
  D.46755_100 = engine_19->ssec[D.46737_99].crypto_type;
  D.46788_101 = SUITES[D.46755_100].keylen;
  D.46789_102 = (switch_size_t) D.46788_101;
  switch_rtp_add_crypto_key (D.46740_91, 1, D.46786_94, D.46755_100, D.46787_98, D.46789_102);
  goto <bb 41> (end);

<bb 28>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1238, session_10(D), 7, "Ignoring unacceptable key\n");
  goto <bb 41> (end);

<bb 29>:
  D.46740_104 = engine_19->rtp_session;
  D.46790_105 = switch_rtp_ready (D.46740_104);
  if (D.46790_105 == 0)
    goto <bb 30>;
  else
    goto <bb 41> (end);

<bb 30>:
  if (vval_4 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1244, session_10(D), 7, "Unsupported Crypto [%s]\n", crypto_25(D));
  goto <bb 41> (end);

<bb 32>:
  ctype.166_106 = (switch_rtp_crypto_key_type_t) ctype_3;
  engine_19->crypto_type = ctype.166_106;
  D.46737_107 = engine_19->crypto_type;
  D.46795_108 = switch_core_perform_session_strdup (session_10(D), crypto_25(D), "src/switch_core_media.c", &__func__, 1249);
  engine_19->ssec[D.46737_107].remote_crypto_key = D.46795_108;
  D.46737_109 = engine_19->crypto_type;
  D.46738_110 = engine_19->ssec[D.46737_109].remote_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1250, session_10(D), 7, "Set Remote Key [%s]\n", D.46738_110);
  D.46768_111 = engine_19->type;
  if (D.46768_111 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.46734_112 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_112, "srtp_remote_audio_crypto_key", crypto_25(D), 1);
  D.46734_113 = session_10(D)->channel;
  ctype.166_114 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46798_115 = switch_core_media_crypto_type2str (ctype.166_114);
  switch_channel_set_variable_printf (D.46734_113, "srtp_remote_audio_crypto_type", "%s", D.46798_115);
  goto <bb 36>;

<bb 34>:
  D.46768_116 = engine_19->type;
  if (D.46768_116 == 1)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.46734_117 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_117, "srtp_remote_video_crypto_key", crypto_25(D), 1);
  D.46734_118 = session_10(D)->channel;
  ctype.166_119 = (switch_rtp_crypto_key_type_t) ctype_3;
  D.46802_120 = switch_core_media_crypto_type2str (ctype.166_119);
  switch_channel_set_variable_printf (D.46734_118, "srtp_remote_video_crypto_type", "%s", D.46802_120);

<bb 36>:
  D.46737_121 = engine_19->crypto_type;
  engine_19->ssec[D.46737_121].crypto_tag = crypto_tag_51(D);
  # DEBUG got_crypto => 1
  D.46734_123 = session_10(D)->channel;
  switch_channel_set_variable_var_check (D.46734_123, varname_48(D), vval_4, 1);
  D.46803_124 = smh_11->session;
  D.46804_125 = D.46803_124->channel;
  switch_channel_set_flag_value (D.46804_125, 92, 1);
  D.46737_126 = engine_19->crypto_type;
  D.46805_127 = engine_19->ssec[D.46737_126].local_crypto_key;
  # DEBUG s => D.46805_127
  if (D.46805_127 == 0B)
    goto <bb 39>;
  else
    goto <bb 37>;

<bb 37>:
  D.47416_186 = MEM[(const char *)D.46805_127];
  if (D.47416_186 == 0)
    goto <bb 39>;
  else
    goto <bb 38>;

<bb 38>:

<bb 39>:
  # D.47415_187 = PHI <1(36), 1(37), 0(38)>
  if (D.47415_187 != 0)
    goto <bb 40>;
  else
    goto <bb 41> (end);

<bb 40>:
  D.46725_129 = session_10(D)->media_handle;
  ctype.166_130 = (switch_rtp_crypto_key_type_t) ctype_3;
  switch_core_media_build_crypto (D.46725_129, type_17(D), crypto_tag_51(D), ctype.166_130, 0, 1);

  # got_crypto_1 = PHI <0(17), 1(26), 0(29), 0(31), 1(39), 1(40), 1(14), 0(28), 1(25), 1(27)>
end:
  # DEBUG got_crypto => got_crypto_1

<bb 42>:
  # got_crypto_5 = PHI <0(2), -1(3), got_crypto_1(41)>
  return got_crypto_5;

}



;; Function switch_media_handle_create (switch_media_handle_create)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 3
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 2
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 18 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Marking useful stmt: # DEBUG status => 1

Marking useful stmt: # DEBUG smh => 0B

Marking useful stmt: *smhp_7(D) = 0B;

Marking useful stmt: # DEBUG s => D.46463_9

Marking useful stmt: params_8(D)->sdp_username = "FreeSWITCH";

Marking useful stmt: D.46467_12 = switch_core_perform_session_alloc (session_11(D), 23856, "src/switch_core_media.c", &__func__, 1426);

Marking useful stmt: session_11(D)->media_handle = D.46467_12;

Marking useful stmt: D.46468_14->session = session_11(D);

Marking useful stmt: *smhp_7(D) = D.46468_15;

Marking useful stmt: D.46468_17->flags = D.46472_19;

Marking useful stmt: D.46468_20->media_flags[0] = 1;

Marking useful stmt: D.46468_21->engines[0].read_frame.buflen = 16384;

Marking useful stmt: D.46468_22->engines[0].type = 0;

Marking useful stmt: D.46468_23->engines[0].crypto_type = 9;

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: D.46468_25->engines[0].ssec[i_2].crypto_type = i.136_26;

Marking useful stmt: # DEBUG i => i_27

Marking useful stmt: # DEBUG i => i_2

Marking useful stmt: D.46468_28->engines[1].read_frame.buflen = 16384;

Marking useful stmt: D.46468_29->engines[1].type = 1;

Marking useful stmt: D.46468_30->engines[1].crypto_type = 9;

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: D.46468_32->engines[1].ssec[i_3].crypto_type = i.136_33;

Marking useful stmt: # DEBUG i => i_34

Marking useful stmt: # DEBUG i => i_3

Marking useful stmt: D.46468_35->mparams = params_8(D);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: D.46468_37->crypto_suite_order[i_4] = 9;

Marking useful stmt: # DEBUG i => i_38

Marking useful stmt: # DEBUG i => i_4

Marking useful stmt: D.46475_41 = switch_core_session_get_pool (session_11(D));

Marking useful stmt: switch_mutex_init (D.46474_40, 1, D.46475_41);

Marking useful stmt: D.46477_44 = switch_core_session_get_pool (session_11(D));

Marking useful stmt: switch_mutex_init (D.46476_43, 1, D.46477_44);

Marking useful stmt: D.46480_49 = time (0B);

Marking useful stmt: D.46468_46->engines[0].ssrc = D.46482_51;

Marking useful stmt: D.46485_56 = time (0B);

Marking useful stmt: D.46468_53->engines[1].ssrc = D.46488_59;

Marking useful stmt: D.46490_62 = switch_core_perform_alloc (D.46489_61, 84, "src/switch_core_media.c", &__func__, 1464);

Marking useful stmt: D.46468_60->engines[0].payload_map = D.46490_62;

Marking useful stmt: D.46468_64->engines[0].cur_payload_map = D.46491_65;

Marking useful stmt: D.46492_67->current = 1;

Marking useful stmt: D.46493_70 = switch_core_perform_alloc (D.46489_69, 84, "src/switch_core_media.c", &__func__, 1467);

Marking useful stmt: D.46468_68->engines[1].payload_map = D.46493_70;

Marking useful stmt: D.46468_72->engines[1].cur_payload_map = D.46494_73;

Marking useful stmt: D.46495_75->current = 1;

Marking useful stmt: switch_channel_set_flag_value (D.46496_76, 111, 1);

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: return status_1;

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = i_4)
(get_scalar_evolution 
  (scalar = i_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_4 = PHI <0(14), i_38(15)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_4 = PHI <0(14), i_38(15)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_3))
  (evolution_function = {0, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 14 
  (scalar = i_4)
  (scalar_evolution = {0, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 9)
(get_scalar_evolution 
  (scalar = 9)
  (scalar_evolution = 9))
)
Analyzing # of iterations of loop 3
  exit condition [0, + , 1](no_overflow) <= 9
  bounds on difference of bases: 9 ... 9
  result:
    # of iterations 10, bounded by 10
Found loop 3 to be finite: iterating 10 times
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = i_3)
(get_scalar_evolution 
  (scalar = i_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_3 = PHI <0(11), i_34(12)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_3 = PHI <0(11), i_34(12)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_2))
  (evolution_function = {0, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 11 
  (scalar = i_3)
  (scalar_evolution = {0, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 2
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 2 to be finite: iterating 9 times
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <0(8), i_27(9)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <0(8), i_27(9)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 8)
(get_scalar_evolution 
  (scalar = 8)
  (scalar_evolution = 8))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 8
  bounds on difference of bases: 8 ... 8
  result:
    # of iterations 9, bounded by 9
Found loop 1 to be finite: iterating 9 times

Processing worklist:
processing: return status_1;

marking necessary through status_1 stmt status_1 = PHI <1(7), 0(17)>
processing: status_1 = PHI <1(7), 0(17)>

Marking useful stmt: if (D.46468_13 != 0B)

processing: if (D.46468_13 != 0B)

marking necessary through D.46468_13 stmt D.46468_13 = session_11(D)->media_handle;
processing: D.46468_13 = session_11(D)->media_handle;

processing: switch_channel_set_flag_value (D.46496_76, 111, 1);

marking necessary through D.46496_76 stmt D.46496_76 = session_11(D)->channel;
processing: D.46496_76 = session_11(D)->channel;

processing: D.46495_75->current = 1;

marking necessary through D.46495_75 stmt D.46495_75 = D.46468_74->engines[1].cur_payload_map;
processing: D.46495_75 = D.46468_74->engines[1].cur_payload_map;

marking necessary through D.46468_74 stmt D.46468_74 = session_11(D)->media_handle;
processing: D.46468_74 = session_11(D)->media_handle;

processing: D.46468_72->engines[1].cur_payload_map = D.46494_73;

marking necessary through D.46468_72 stmt D.46468_72 = session_11(D)->media_handle;
marking necessary through D.46494_73 stmt D.46494_73 = D.46468_72->engines[1].payload_map;
processing: D.46494_73 = D.46468_72->engines[1].payload_map;

processing: D.46468_72 = session_11(D)->media_handle;

processing: D.46468_68->engines[1].payload_map = D.46493_70;

marking necessary through D.46468_68 stmt D.46468_68 = session_11(D)->media_handle;
processing: D.46468_68 = session_11(D)->media_handle;

processing: D.46493_70 = switch_core_perform_alloc (D.46489_69, 84, "src/switch_core_media.c", &__func__, 1467);

marking necessary through D.46489_69 stmt D.46489_69 = session_11(D)->pool;
processing: D.46489_69 = session_11(D)->pool;

processing: D.46492_67->current = 1;

marking necessary through D.46492_67 stmt D.46492_67 = D.46468_66->engines[0].cur_payload_map;
processing: D.46492_67 = D.46468_66->engines[0].cur_payload_map;

marking necessary through D.46468_66 stmt D.46468_66 = session_11(D)->media_handle;
processing: D.46468_66 = session_11(D)->media_handle;

processing: D.46468_64->engines[0].cur_payload_map = D.46491_65;

marking necessary through D.46468_64 stmt D.46468_64 = session_11(D)->media_handle;
marking necessary through D.46491_65 stmt D.46491_65 = D.46468_64->engines[0].payload_map;
processing: D.46491_65 = D.46468_64->engines[0].payload_map;

processing: D.46468_64 = session_11(D)->media_handle;

processing: D.46468_60->engines[0].payload_map = D.46490_62;

marking necessary through D.46468_60 stmt D.46468_60 = session_11(D)->media_handle;
processing: D.46468_60 = session_11(D)->media_handle;

processing: D.46490_62 = switch_core_perform_alloc (D.46489_61, 84, "src/switch_core_media.c", &__func__, 1464);

marking necessary through D.46489_61 stmt D.46489_61 = session_11(D)->pool;
processing: D.46489_61 = session_11(D)->pool;

processing: D.46468_53->engines[1].ssrc = D.46488_59;

marking necessary through D.46468_53 stmt D.46468_53 = session_11(D)->media_handle;
marking necessary through D.46488_59 stmt D.46488_59 = D.46484_55 + D.46487_58;
processing: D.46488_59 = D.46484_55 + D.46487_58;

marking necessary through D.46484_55 stmt D.46484_55 = (unsigned int) D.46483_54;
marking necessary through D.46487_58 stmt D.46487_58 = D.46486_57 / 2;
processing: D.46487_58 = D.46486_57 / 2;

marking necessary through D.46486_57 stmt D.46486_57 = (unsigned int) D.46485_56;
processing: D.46486_57 = (unsigned int) D.46485_56;

processing: D.46484_55 = (unsigned int) D.46483_54;

marking necessary through D.46483_54 stmt D.46483_54 = &D.46468_53->engines[1];
processing: D.46483_54 = &D.46468_53->engines[1];

processing: D.46468_53 = session_11(D)->media_handle;

processing: D.46485_56 = time (0B);

processing: D.46468_46->engines[0].ssrc = D.46482_51;

marking necessary through D.46468_46 stmt D.46468_46 = session_11(D)->media_handle;
marking necessary through D.46482_51 stmt D.46482_51 = D.46479_48 + D.46481_50;
processing: D.46482_51 = D.46479_48 + D.46481_50;

marking necessary through D.46479_48 stmt D.46479_48 = (unsigned int) D.46478_47;
marking necessary through D.46481_50 stmt D.46481_50 = (unsigned int) D.46480_49;
processing: D.46481_50 = (unsigned int) D.46480_49;

processing: D.46479_48 = (unsigned int) D.46478_47;

marking necessary through D.46478_47 stmt D.46478_47 = &D.46468_46->engines;
processing: D.46478_47 = &D.46468_46->engines;

processing: D.46468_46 = session_11(D)->media_handle;

processing: D.46480_49 = time (0B);

processing: switch_mutex_init (D.46476_43, 1, D.46477_44);

marking necessary through D.46476_43 stmt D.46476_43 = &D.46468_42->sdp_mutex;
processing: D.46476_43 = &D.46468_42->sdp_mutex;

marking necessary through D.46468_42 stmt D.46468_42 = session_11(D)->media_handle;
processing: D.46468_42 = session_11(D)->media_handle;

processing: D.46477_44 = switch_core_session_get_pool (session_11(D));

processing: switch_mutex_init (D.46474_40, 1, D.46475_41);

marking necessary through D.46474_40 stmt D.46474_40 = &D.46468_39->mutex;
processing: D.46474_40 = &D.46468_39->mutex;

marking necessary through D.46468_39 stmt D.46468_39 = session_11(D)->media_handle;
processing: D.46468_39 = session_11(D)->media_handle;

processing: D.46475_41 = switch_core_session_get_pool (session_11(D));

processing: D.46468_37->crypto_suite_order[i_4] = 9;

Marking useful stmt: if (i_4 <= 9)

marking necessary through D.46468_37 stmt D.46468_37 = session_11(D)->media_handle;
marking necessary through i_4 stmt i_4 = PHI <0(14), i_38(15)>
processing: i_4 = PHI <0(14), i_38(15)>

marking necessary through i_38 stmt i_38 = i_4 + 1;
processing: i_38 = i_4 + 1;

processing: D.46468_37 = session_11(D)->media_handle;

processing: if (i_4 <= 9)

processing: D.46468_35->mparams = params_8(D);

marking necessary through D.46468_35 stmt D.46468_35 = session_11(D)->media_handle;
processing: D.46468_35 = session_11(D)->media_handle;

processing: D.46468_32->engines[1].ssec[i_3].crypto_type = i.136_33;

Marking useful stmt: if (i_3 <= 8)

marking necessary through D.46468_32 stmt D.46468_32 = session_11(D)->media_handle;
marking necessary through i_3 stmt i_3 = PHI <0(11), i_34(12)>
marking necessary through i.136_33 stmt i.136_33 = (switch_rtp_crypto_key_type_t) i_3;
processing: i.136_33 = (switch_rtp_crypto_key_type_t) i_3;

processing: i_3 = PHI <0(11), i_34(12)>

marking necessary through i_34 stmt i_34 = i_3 + 1;
processing: i_34 = i_3 + 1;

processing: D.46468_32 = session_11(D)->media_handle;

processing: if (i_3 <= 8)

processing: D.46468_30->engines[1].crypto_type = 9;

marking necessary through D.46468_30 stmt D.46468_30 = session_11(D)->media_handle;
processing: D.46468_30 = session_11(D)->media_handle;

processing: D.46468_29->engines[1].type = 1;

marking necessary through D.46468_29 stmt D.46468_29 = session_11(D)->media_handle;
processing: D.46468_29 = session_11(D)->media_handle;

processing: D.46468_28->engines[1].read_frame.buflen = 16384;

marking necessary through D.46468_28 stmt D.46468_28 = session_11(D)->media_handle;
processing: D.46468_28 = session_11(D)->media_handle;

processing: D.46468_25->engines[0].ssec[i_2].crypto_type = i.136_26;

Marking useful stmt: if (i_2 <= 8)

marking necessary through D.46468_25 stmt D.46468_25 = session_11(D)->media_handle;
marking necessary through i_2 stmt i_2 = PHI <0(8), i_27(9)>
marking necessary through i.136_26 stmt i.136_26 = (switch_rtp_crypto_key_type_t) i_2;
processing: i.136_26 = (switch_rtp_crypto_key_type_t) i_2;

processing: i_2 = PHI <0(8), i_27(9)>

marking necessary through i_27 stmt i_27 = i_2 + 1;
processing: i_27 = i_2 + 1;

processing: D.46468_25 = session_11(D)->media_handle;

processing: if (i_2 <= 8)

processing: D.46468_23->engines[0].crypto_type = 9;

marking necessary through D.46468_23 stmt D.46468_23 = session_11(D)->media_handle;
processing: D.46468_23 = session_11(D)->media_handle;

processing: D.46468_22->engines[0].type = 0;

marking necessary through D.46468_22 stmt D.46468_22 = session_11(D)->media_handle;
processing: D.46468_22 = session_11(D)->media_handle;

processing: D.46468_21->engines[0].read_frame.buflen = 16384;

marking necessary through D.46468_21 stmt D.46468_21 = session_11(D)->media_handle;
processing: D.46468_21 = session_11(D)->media_handle;

processing: D.46468_20->media_flags[0] = 1;

marking necessary through D.46468_20 stmt D.46468_20 = session_11(D)->media_handle;
processing: D.46468_20 = session_11(D)->media_handle;

processing: D.46468_17->flags = D.46472_19;

marking necessary through D.46468_17 stmt D.46468_17 = session_11(D)->media_handle;
marking necessary through D.46472_19 stmt D.46472_19 = D.46471_18 | 1;
processing: D.46472_19 = D.46471_18 | 1;

marking necessary through D.46471_18 stmt D.46471_18 = D.46468_17->flags;
processing: D.46471_18 = D.46468_17->flags;

processing: D.46468_17 = session_11(D)->media_handle;

processing: *smhp_7(D) = D.46468_15;

marking necessary through D.46468_15 stmt D.46468_15 = session_11(D)->media_handle;
processing: D.46468_15 = session_11(D)->media_handle;

processing: D.46468_14->session = session_11(D);

marking necessary through D.46468_14 stmt D.46468_14 = session_11(D)->media_handle;
processing: D.46468_14 = session_11(D)->media_handle;

processing: session_11(D)->media_handle = D.46467_12;

processing: D.46467_12 = switch_core_perform_session_alloc (session_11(D), 23856, "src/switch_core_media.c", &__func__, 1426);

processing: params_8(D)->sdp_username = "FreeSWITCH";

Marking useful stmt: if (D.47420_120 != 0)

processing: if (D.47420_120 != 0)

marking necessary through D.47420_120 stmt D.47420_120 = PHI <1(2), 1(3), 0(4)>
processing: D.47420_120 = PHI <1(2), 1(3), 0(4)>

Marking useful stmt: if (D.46463_9 == 0B)

Marking useful stmt: if (D.47421_119 == 0)

processing: if (D.47421_119 == 0)

marking necessary through D.47421_119 stmt D.47421_119 = MEM[(const char *)D.46463_9];
processing: D.47421_119 = MEM[(const char *)D.46463_9];

marking necessary through D.46463_9 stmt D.46463_9 = params_8(D)->sdp_username;
processing: D.46463_9 = params_8(D)->sdp_username;

processing: if (D.46463_9 == 0B)

processing: *smhp_7(D) = 0B;


Eliminating unnecessary statements:
Removed 0 of 109 statements (0%)
Removed 0 of 9 PHI nodes (0%)
switch_media_handle_create (struct switch_media_handle_t * * smhp, struct switch_core_session_t * session, struct switch_core_media_params_t * params)
{
  const char D.47421;
  int D.47420;
  static const char __func__[27] = "switch_media_handle_create";
  int i;
  switch_status_t status;
  struct switch_channel_t * D.46496;
  struct payload_map_t * D.46495;
  struct payload_map_t * D.46494;
  void * D.46493;
  struct payload_map_t * D.46492;
  struct payload_map_t * D.46491;
  void * D.46490;
  struct switch_memory_pool_t * D.46489;
  unsigned int D.46488;
  unsigned int D.46487;
  unsigned int D.46486;
  time_t D.46485;
  unsigned int D.46484;
  struct switch_rtp_engine_t * D.46483;
  unsigned int D.46482;
  unsigned int D.46481;
  time_t D.46480;
  unsigned int D.46479;
  struct switch_rtp_engine_t[2] * D.46478;
  struct switch_memory_pool_t * D.46477;
  struct switch_mutex_t * * D.46476;
  struct switch_memory_pool_t * D.46475;
  struct switch_mutex_t * * D.46474;
  switch_rtp_crypto_key_type_t i.136;
  unsigned int D.46472;
  smh_flag_t D.46471;
  struct switch_media_handle_t * D.46468;
  void * D.46467;
  char * D.46463;

<bb 2>:
  # DEBUG status => 1
  # DEBUG smh => 0B
  *smhp_7(D) = 0B;
  D.46463_9 = params_8(D)->sdp_username;
  # DEBUG s => D.46463_9
  if (D.46463_9 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

<bb 3>:
  D.47421_119 = MEM[(const char *)D.46463_9];
  if (D.47421_119 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:

<bb 5>:
  # D.47420_120 = PHI <1(2), 1(3), 0(4)>
  if (D.47420_120 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  params_8(D)->sdp_username = "FreeSWITCH";

<bb 7>:
  D.46467_12 = switch_core_perform_session_alloc (session_11(D), 23856, "src/switch_core_media.c", &__func__, 1426);
  session_11(D)->media_handle = D.46467_12;
  D.46468_13 = session_11(D)->media_handle;
  if (D.46468_13 != 0B)
    goto <bb 8>;
  else
    goto <bb 18>;

<bb 8>:
  D.46468_14 = session_11(D)->media_handle;
  D.46468_14->session = session_11(D);
  D.46468_15 = session_11(D)->media_handle;
  *smhp_7(D) = D.46468_15;
  D.46468_17 = session_11(D)->media_handle;
  D.46471_18 = D.46468_17->flags;
  D.46472_19 = D.46471_18 | 1;
  D.46468_17->flags = D.46472_19;
  D.46468_20 = session_11(D)->media_handle;
  D.46468_20->media_flags[0] = 1;
  D.46468_21 = session_11(D)->media_handle;
  D.46468_21->engines[0].read_frame.buflen = 16384;
  D.46468_22 = session_11(D)->media_handle;
  D.46468_22->engines[0].type = 0;
  D.46468_23 = session_11(D)->media_handle;
  D.46468_23->engines[0].crypto_type = 9;
  # DEBUG i => 0
  goto <bb 10>;

<bb 9>:
  D.46468_25 = session_11(D)->media_handle;
  i.136_26 = (switch_rtp_crypto_key_type_t) i_2;
  D.46468_25->engines[0].ssec[i_2].crypto_type = i.136_26;
  i_27 = i_2 + 1;
  # DEBUG i => i_27

<bb 10>:
  # i_2 = PHI <0(8), i_27(9)>
  # DEBUG i => i_2
  if (i_2 <= 8)
    goto <bb 9>;
  else
    goto <bb 11>;

<bb 11>:
  D.46468_28 = session_11(D)->media_handle;
  D.46468_28->engines[1].read_frame.buflen = 16384;
  D.46468_29 = session_11(D)->media_handle;
  D.46468_29->engines[1].type = 1;
  D.46468_30 = session_11(D)->media_handle;
  D.46468_30->engines[1].crypto_type = 9;
  # DEBUG i => 0
  goto <bb 13>;

<bb 12>:
  D.46468_32 = session_11(D)->media_handle;
  i.136_33 = (switch_rtp_crypto_key_type_t) i_3;
  D.46468_32->engines[1].ssec[i_3].crypto_type = i.136_33;
  i_34 = i_3 + 1;
  # DEBUG i => i_34

<bb 13>:
  # i_3 = PHI <0(11), i_34(12)>
  # DEBUG i => i_3
  if (i_3 <= 8)
    goto <bb 12>;
  else
    goto <bb 14>;

<bb 14>:
  D.46468_35 = session_11(D)->media_handle;
  D.46468_35->mparams = params_8(D);
  # DEBUG i => 0
  goto <bb 16>;

<bb 15>:
  D.46468_37 = session_11(D)->media_handle;
  D.46468_37->crypto_suite_order[i_4] = 9;
  i_38 = i_4 + 1;
  # DEBUG i => i_38

<bb 16>:
  # i_4 = PHI <0(14), i_38(15)>
  # DEBUG i => i_4
  if (i_4 <= 9)
    goto <bb 15>;
  else
    goto <bb 17>;

<bb 17>:
  D.46468_39 = session_11(D)->media_handle;
  D.46474_40 = &D.46468_39->mutex;
  D.46475_41 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46474_40, 1, D.46475_41);
  D.46468_42 = session_11(D)->media_handle;
  D.46476_43 = &D.46468_42->sdp_mutex;
  D.46477_44 = switch_core_session_get_pool (session_11(D));
  switch_mutex_init (D.46476_43, 1, D.46477_44);
  D.46468_46 = session_11(D)->media_handle;
  D.46478_47 = &D.46468_46->engines;
  D.46479_48 = (unsigned int) D.46478_47;
  D.46480_49 = time (0B);
  D.46481_50 = (unsigned int) D.46480_49;
  D.46482_51 = D.46479_48 + D.46481_50;
  D.46468_46->engines[0].ssrc = D.46482_51;
  D.46468_53 = session_11(D)->media_handle;
  D.46483_54 = &D.46468_53->engines[1];
  D.46484_55 = (unsigned int) D.46483_54;
  D.46485_56 = time (0B);
  D.46486_57 = (unsigned int) D.46485_56;
  D.46487_58 = D.46486_57 / 2;
  D.46488_59 = D.46484_55 + D.46487_58;
  D.46468_53->engines[1].ssrc = D.46488_59;
  D.46468_60 = session_11(D)->media_handle;
  D.46489_61 = session_11(D)->pool;
  D.46490_62 = switch_core_perform_alloc (D.46489_61, 84, "src/switch_core_media.c", &__func__, 1464);
  D.46468_60->engines[0].payload_map = D.46490_62;
  D.46468_64 = session_11(D)->media_handle;
  D.46491_65 = D.46468_64->engines[0].payload_map;
  D.46468_64->engines[0].cur_payload_map = D.46491_65;
  D.46468_66 = session_11(D)->media_handle;
  D.46492_67 = D.46468_66->engines[0].cur_payload_map;
  D.46492_67->current = 1;
  D.46468_68 = session_11(D)->media_handle;
  D.46489_69 = session_11(D)->pool;
  D.46493_70 = switch_core_perform_alloc (D.46489_69, 84, "src/switch_core_media.c", &__func__, 1467);
  D.46468_68->engines[1].payload_map = D.46493_70;
  D.46468_72 = session_11(D)->media_handle;
  D.46494_73 = D.46468_72->engines[1].payload_map;
  D.46468_72->engines[1].cur_payload_map = D.46494_73;
  D.46468_74 = session_11(D)->media_handle;
  D.46495_75 = D.46468_74->engines[1].cur_payload_map;
  D.46495_75->current = 1;
  D.46496_76 = session_11(D)->channel;
  switch_channel_set_flag_value (D.46496_76, 111, 1);
  # DEBUG status => 0

<bb 18>:
  # status_1 = PHI <1(7), 0(17)>
  # DEBUG status => status_1
  return status_1;

}



;; Function switch_media_handle_set_media_flag (switch_media_handle_set_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 1482, &__PRETTY_FUNCTION__);

Marking useful stmt: smh_1(D)->media_flags[flag_2(D)] = 1;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (smh_1(D) == 0B)

processing: if (smh_1(D) == 0B)

processing: smh_1(D)->media_flags[flag_2(D)] = 1;

processing: __assert_fail ("smh", "src/switch_core_media.c", 1482, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_media_handle_set_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_media_handle_set_media_flag";

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1482, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_1(D)->media_flags[flag_2(D)] = 1;
  return;

}



;; Function switch_media_handle_set_media_flags (switch_media_handle_set_media_flags)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 7 3 4 5 6 9 8
;;
;; Loop 1
;;  header 9, latch 6
;;  depth 1, outer 0
;;  nodes: 9 6 4 5
;; 2 succs { 3 7 }
;; 7 succs { 9 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 9 }
;; 9 succs { 4 8 }
;; 8 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 1491, &__PRETTY_FUNCTION__);

Marking useful stmt: smh_2(D)->media_flags[i_1] = D.46458_12;

Marking useful stmt: # DEBUG i => i_13

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = i_1)
(get_scalar_evolution 
  (scalar = i_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_1 = PHI <i_3(7), i_13(6)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_1 = PHI <i_3(7), i_13(6)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = i_1)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 16)
(get_scalar_evolution 
  (scalar = 16)
  (scalar_evolution = 16))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 16
  bounds on difference of bases: 16 ... 16
  result:
    # of iterations 17, bounded by 17
Found loop 1 to be finite: iterating 17 times

Processing worklist:
processing: return;

Marking useful stmt: if (smh_2(D) == 0B)

processing: if (smh_2(D) == 0B)

processing: smh_2(D)->media_flags[i_1] = D.46458_12;

Marking useful stmt: if (D.46458_8 != 0)

marking necessary through i_1 stmt i_1 = PHI <i_3(7), i_13(6)>
marking necessary through D.46458_12 stmt D.46458_12 = *D.46457_11;
processing: D.46458_12 = *D.46457_11;

marking necessary through D.46457_11 stmt D.46457_11 = flags_6(D) + D.46456_10;
processing: D.46457_11 = flags_6(D) + D.46456_10;

marking necessary through D.46456_10 stmt D.46456_10 = i.135_9 * 4;
processing: D.46456_10 = i.135_9 * 4;

marking necessary through i.135_9 stmt i.135_9 = (unsigned int) i_1;
processing: i.135_9 = (unsigned int) i_1;

processing: i_1 = PHI <i_3(7), i_13(6)>

Marking useful stmt: if (i_1 <= 16)

marking necessary through i_3 stmt i_3 = PHI <0(2)>
marking necessary through i_13 stmt i_13 = i_1 + 1;
processing: i_13 = i_1 + 1;

processing: i_3 = PHI <0(2)>

processing: if (i_1 <= 16)

processing: if (D.46458_8 != 0)

marking necessary through D.46458_8 stmt D.46458_8 = *D.46457_7;
processing: D.46458_8 = *D.46457_7;

marking necessary through D.46457_7 stmt D.46457_7 = flags_6(D) + D.46456_5;
processing: D.46457_7 = flags_6(D) + D.46456_5;

marking necessary through D.46456_5 stmt D.46456_5 = i.135_4 * 4;
processing: D.46456_5 = i.135_4 * 4;

marking necessary through i.135_4 stmt i.135_4 = (unsigned int) i_1;
processing: i.135_4 = (unsigned int) i_1;

processing: __assert_fail ("smh", "src/switch_core_media.c", 1491, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : .MEM_18 = PHI <.MEM_16(D)(2)>

Removed 0 of 17 statements (0%)
Removed 1 of 5 PHI nodes (20%)
Scope blocks after cleanups:

{ Scope block #0 
  int i;
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_set_media_flags";

}
switch_media_handle_set_media_flags (struct switch_media_handle_t * smh, switch_core_media_flag_t * flags)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_set_media_flags";
  int i;
  switch_core_media_flag_t D.46458;
  switch_core_media_flag_t * D.46457;
  unsigned int D.46456;
  unsigned int i.135;

<bb 2>:
  if (smh_2(D) == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  # i_3 = PHI <0(2)>
  goto <bb 8>;

<bb 4>:
  __assert_fail ("smh", "src/switch_core_media.c", 1491, &__PRETTY_FUNCTION__);

<bb 5>:
  i.135_4 = (unsigned int) i_1;
  D.46456_5 = i.135_4 * 4;
  D.46457_7 = flags_6(D) + D.46456_5;
  D.46458_8 = *D.46457_7;
  if (D.46458_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  i.135_9 = (unsigned int) i_1;
  D.46456_10 = i.135_9 * 4;
  D.46457_11 = flags_6(D) + D.46456_10;
  D.46458_12 = *D.46457_11;
  smh_2(D)->media_flags[i_1] = D.46458_12;

<bb 7>:
  i_13 = i_1 + 1;
  # DEBUG i => i_13

<bb 8>:
  # i_1 = PHI <i_3(3), i_13(7)>
  # DEBUG i => i_1
  if (i_1 <= 16)
    goto <bb 5>;
  else
    goto <bb 9>;

<bb 9>:
  return;

}



;; Function switch_media_handle_clear_media_flag (switch_media_handle_clear_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 1503, &__PRETTY_FUNCTION__);

Marking useful stmt: smh_1(D)->media_flags[flag_2(D)] = 0;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (smh_1(D) == 0B)

processing: if (smh_1(D) == 0B)

processing: smh_1(D)->media_flags[flag_2(D)] = 0;

processing: __assert_fail ("smh", "src/switch_core_media.c", 1503, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_media_handle_clear_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[37] = "switch_media_handle_clear_media_flag";

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1503, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_1(D)->media_flags[flag_2(D)] = 0;
  return;

}



;; Function switch_media_handle_test_media_flag (switch_media_handle_test_media_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 1510, &__PRETTY_FUNCTION__);

Marking useful stmt: return D.46448_4;


Processing worklist:
processing: return D.46448_4;

Marking useful stmt: if (smh_1(D) == 0B)

marking necessary through D.46448_4 stmt D.46448_4 = (int32_t) D.46449_3;
processing: D.46448_4 = (int32_t) D.46449_3;

marking necessary through D.46449_3 stmt D.46449_3 = smh_1(D)->media_flags[flag_2(D)];
processing: D.46449_3 = smh_1(D)->media_flags[flag_2(D)];

processing: if (smh_1(D) == 0B)

processing: __assert_fail ("smh", "src/switch_core_media.c", 1510, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 5 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_media_handle_test_media_flag (struct switch_media_handle_t * smh, switch_core_media_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[36] = "switch_media_handle_test_media_flag";
  switch_core_media_flag_t D.46449;
  int32_t D.46448;

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1510, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46449_3 = smh_1(D)->media_flags[flag_2(D)];
  D.46448_4 = (int32_t) D.46449_3;
  return D.46448_4;

}



;; Function generate_m (generate_m)

Created preheader block for loop 3
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 138 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 115 107 108 109 110 111 112 113 114 139 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
;;
;; Loop 3
;;  header 139, latch 114
;;  depth 1, outer 0
;;  nodes: 139 114 108 112 113 109 110 111 107
;;
;; Loop 2
;;  header 62, latch 61
;;  depth 1, outer 0
;;  nodes: 62 61 35 43 46 59 60 55 57 58 56 54 52 53 48 50 51 49 44 47 45 40 41 42 39 37 38 36 34
;;
;; Loop 1
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 14 19 22 24 20 23 21 16 17 18 15 13 11 12 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 137 5 }
;; 5 succs { 6 7 }
;; 6 succs { 9 7 }
;; 7 succs { 138 9 }
;; 138 succs { 9 }
;; 9 succs { 26 }
;; 10 succs { 12 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 25 }
;; 15 succs { 16 18 }
;; 16 succs { 17 20 }
;; 17 succs { 20 }
;; 18 succs { 19 20 }
;; 19 succs { 25 }
;; 20 succs { 21 24 }
;; 21 succs { 22 23 }
;; 22 succs { 25 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 10 27 }
;; 27 succs { 28 30 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 33 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 62 }
;; 34 succs { 35 36 }
;; 35 succs { 61 }
;; 36 succs { 38 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 42 }
;; 40 succs { 41 44 }
;; 41 succs { 44 }
;; 42 succs { 43 44 }
;; 43 succs { 61 }
;; 44 succs { 45 48 }
;; 45 succs { 46 47 }
;; 46 succs { 61 }
;; 47 succs { 48 }
;; 48 succs { 49 52 }
;; 49 succs { 51 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 53 54 }
;; 53 succs { 54 }
;; 54 succs { 56 55 }
;; 55 succs { 56 59 }
;; 56 succs { 57 58 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 62 }
;; 62 succs { 34 63 }
;; 63 succs { 66 64 }
;; 64 succs { 66 65 }
;; 65 succs { 66 70 }
;; 66 succs { 67 70 }
;; 67 succs { 68 69 }
;; 68 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 73 71 }
;; 71 succs { 73 72 }
;; 72 succs { 73 }
;; 73 succs { 74 76 }
;; 74 succs { 75 76 }
;; 75 succs { 76 }
;; 76 succs { 77 80 }
;; 77 succs { 78 79 }
;; 78 succs { 80 }
;; 79 succs { 80 }
;; 80 succs { 81 105 }
;; 81 succs { 84 82 }
;; 82 succs { 84 83 }
;; 83 succs { 84 }
;; 84 succs { 85 92 }
;; 85 succs { 88 86 }
;; 86 succs { 88 87 }
;; 87 succs { 88 }
;; 88 succs { 89 92 }
;; 89 succs { 90 92 }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 94 93 }
;; 93 succs { 94 105 }
;; 94 succs { 97 95 }
;; 95 succs { 97 96 }
;; 96 succs { 97 }
;; 97 succs { 98 105 }
;; 98 succs { 101 99 }
;; 99 succs { 101 100 }
;; 100 succs { 101 }
;; 101 succs { 102 105 }
;; 102 succs { 103 105 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 116 }
;; 106 succs { 115 116 }
;; 115 succs { 139 }
;; 107 succs { 109 108 }
;; 108 succs { 109 114 }
;; 109 succs { 112 110 }
;; 110 succs { 112 111 }
;; 111 succs { 112 }
;; 112 succs { 113 114 }
;; 113 succs { 114 }
;; 114 succs { 139 }
;; 139 succs { 107 116 }
;; 116 succs { 117 119 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 126 }
;; 120 succs { 121 122 }
;; 121 succs { 123 }
;; 122 succs { 123 }
;; 123 succs { 125 124 }
;; 124 succs { 125 }
;; 125 succs { 126 }
;; 126 succs { 127 128 }
;; 127 succs { 128 }
;; 128 succs { 129 130 }
;; 129 succs { 130 }
;; 130 succs { 131 132 }
;; 131 succs { 132 }
;; 132 succs { 135 133 }
;; 133 succs { 135 134 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 1 }
Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG ptime => 0

Marking useful stmt: # DEBUG noptime => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_23

Marking useful stmt: # DEBUG D#4 => &smh_23->engines

Marking useful stmt: # DEBUG a_engine => D#4

Marking useful stmt: D.42600_35 = switch_channel_direction (D.42599_34);

Marking useful stmt: D.42602_39 = get_media_profile_name (session_22(D), iftmp.40_16);

Marking useful stmt: switch_snprintf (D.42589_27, D.42591_30, "m=audio %d %s", D.42592_32, D.42602_39);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_43

Marking useful stmt: # DEBUG this_ptime => this_ptime_45

Marking useful stmt: # DEBUG this_ptime => 20

Marking useful stmt: # DEBUG this_ptime => this_ptime_10

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG ptime => this_ptime_10

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG ptime => ptime_4

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: switch_snprintf (D.42631_62, D.42633_64, " %d", D.42626_66);

Marking useful stmt: # DEBUG ptime => ptime_5

Marking useful stmt: # DEBUG i => i_67

Marking useful stmt: # DEBUG ptime => ptime_6

Marking useful stmt: # DEBUG i => i_2

Marking useful stmt: switch_snprintf (D.42643_73, D.42645_75, " %d", D.42646_78);

Marking useful stmt: D.42647_79 = switch_media_handle_test_media_flag (smh_23, 9);

Marking useful stmt: switch_snprintf (D.42656_86, D.42658_88, " %d", cng_type_80(D));

Marking useful stmt: switch_snprintf (D.42660_90, D.42662_92, "\n");

Marking useful stmt: memset (&already_did, 0, 512);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_96

Marking useful stmt: # DEBUG fmtp => fmtp_97

Marking useful stmt: # DEBUG this_ptime => this_ptime_99

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG this_ptime => 20

Marking useful stmt: # DEBUG this_ptime => this_ptime_13

Marking useful stmt: # DEBUG ptime => this_ptime_13

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG ptime => ptime_7

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG rate => rate_115

Marking useful stmt: # DEBUG check => 0B

Marking useful stmt: switch_snprintf (&key, 128, "%s:%u", D.42669_118, D.42689_119);

Marking useful stmt: check_120 = switch_event_get_header_idx (map_116(D), &key, -1);

Marking useful stmt: # DEBUG check => check_120

Marking useful stmt: check_122 = switch_event_get_header_idx (map_116(D), D.42669_121, -1);

Marking useful stmt: # DEBUG check => check_122

Marking useful stmt: # DEBUG check => check_14

Marking useful stmt: # DEBUG fmtp => check_14

Marking useful stmt: # DEBUG fmtp => fmtp_11

Marking useful stmt: # DEBUG fmtp => fmtp_125

Marking useful stmt: # DEBUG fmtp => fmtp_12

Marking useful stmt: D.42699_128 = switch_channel_test_flag (D.42599_127, 110);

Marking useful stmt: channels_132 = get_channels (D.42669_129, D.42701_131);

Marking useful stmt: # DEBUG channels => channels_132

Marking useful stmt: switch_snprintf (D.42705_134, D.42707_136, "a=rtpmap:%d %s/%d/%d\n", D.42626_138, D.42669_139, rate_115, channels_132);

Marking useful stmt: switch_snprintf (D.42710_141, D.42712_143, "a=rtpmap:%d %s/%d\n", D.42626_145, D.42669_146, rate_115);

Marking useful stmt: switch_snprintf (D.42716_148, D.42718_150, "a=fmtp:%d %s\n", D.42626_152, fmtp_12);

Marking useful stmt: # DEBUG ptime => ptime_8

Marking useful stmt: # DEBUG i => i_153

Marking useful stmt: # DEBUG ptime => ptime_9

Marking useful stmt: # DEBUG i => i_3

Marking useful stmt: D.42722_156 = switch_media_handle_test_media_flag (smh_23, 8);

Marking useful stmt: D.42724_158 = switch_channel_test_flag (D.42599_157, 93);

Marking useful stmt: D.42727_162 = switch_channel_test_flag (D.42599_161, 106);

Marking useful stmt: switch_snprintf (D.42731_164, D.42733_166, "a=rtpmap:%d telephone-event/8000\n", D.42646_169);

Marking useful stmt: switch_snprintf (D.42736_171, D.42738_173, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.42646_179, D.42646_179);

Marking useful stmt: # DEBUG s => D.42739_180

Marking useful stmt: switch_snprintf (D.42746_183, D.42748_185, "a=fingerprint:%s %s\n", D.42739_186, D.42749_187);

Marking useful stmt: switch_snprintf (D.42757_192, D.42759_194, "a=rtcp-mux\n");

Marking useful stmt: switch_snprintf (D.42761_196, D.42763_198, "a=rtcp:%d IN %s %s\n", D.42592_199, family_200(D), ip_201(D));

Marking useful stmt: switch_snprintf (D.42766_203, D.42768_205, "a=rtcp:%d IN %s %s\n", D.42769_207, family_200(D), ip_201(D));

Marking useful stmt: # DEBUG c1 => 659136

Marking useful stmt: # DEBUG c2 => 659134

Marking useful stmt: switch_stun_random_string (&tmp1, 10, "0123456789");

Marking useful stmt: switch_stun_random_string (&tmp2, 10, "0123456789");

Marking useful stmt: gen_ice (session_22(D), 0, 0B, 0);

Marking useful stmt: # DEBUG D#5 => &MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ice_out

Marking useful stmt: # DEBUG ice_out => D#5

Marking useful stmt: switch_snprintf (D.42774_213, D.42776_215, "a=ssrc:%u cname:%s\n", D.42777_216, D.42778_217);

Marking useful stmt: switch_snprintf (D.42780_219, D.42782_221, "a=ssrc:%u msid:%s a0\n", D.42777_222, D.42783_223);

Marking useful stmt: switch_snprintf (D.42785_225, D.42787_227, "a=ssrc:%u mslabel:%s\n", D.42777_228, D.42783_229);

Marking useful stmt: switch_snprintf (D.42789_231, D.42791_233, "a=ssrc:%u label:%sa0\n", D.42777_234, D.42783_235);

Marking useful stmt: switch_snprintf (D.42793_237, D.42795_239, "a=ice-ufrag:%s\n", D.42796_240);

Marking useful stmt: switch_snprintf (D.42798_242, D.42800_244, "a=ice-pwd:%s\n", D.42801_245);

Marking useful stmt: switch_snprintf (D.42803_247, D.42805_249, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_250, 659136, D.42807_251, D.42809_253);

Marking useful stmt: # DEBUG s => D.42810_254

Marking useful stmt: # DEBUG s => D.42807_256

Marking useful stmt: switch_snprintf (D.42823_264, D.42825_266, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_267, 659134, D.42807_268, D.42809_270, D.42810_271, D.42826_273);

Marking useful stmt: D.42830_276 = switch_channel_direction (D.42599_275);

Marking useful stmt: switch_snprintf (D.42832_278, D.42834_280, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_281, 659136, D.42807_282, D.42836_287);

Marking useful stmt: # DEBUG s => D.42810_288

Marking useful stmt: # DEBUG s => D.42840_290

Marking useful stmt: switch_snprintf (D.42850_298, D.42852_300, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_301, 659134, D.42807_302, D.42836_307, D.42810_308, D.42853_313);

Marking useful stmt: D.42856_315 = switch_channel_test_flag (D.42599_314, 109);

Marking useful stmt: # DEBUG j => j_319

Marking useful stmt: # DEBUG s => D.42863_322

Marking useful stmt: switch_snprintf (D.42868_325, D.42870_327, "a=crypto:%s\n", D.42863_328);

Marking useful stmt: # DEBUG i => i_329

Marking useful stmt: # DEBUG i => i_15

Marking useful stmt: D.42873_330 = switch_media_handle_test_media_flag (smh_23, 9);

Marking useful stmt: switch_snprintf (D.42877_332, D.42879_334, "a=silenceSupp:off - - - -\n");

Marking useful stmt: switch_snprintf (D.42883_337, D.42885_339, "%s%s", append_audio_335(D), iftmp.41_17);

Marking useful stmt: # DEBUG cur_ptime => ptime_9

Marking useful stmt: # DEBUG cur_ptime => cur_ptime_1

Marking useful stmt: switch_snprintf (D.42906_353, D.42908_355, "a=ptime:%d\n", cur_ptime_1);

Marking useful stmt: local_sdp_audio_zrtp_hash_356 = switch_core_media_get_zrtp_hash (session_22(D), 0, 1);

Marking useful stmt: # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_356

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_22(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

Marking useful stmt: switch_snprintf (D.42912_358, D.42914_360, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

Marking useful stmt: # DEBUG s => sr_361(D)

Marking useful stmt: switch_snprintf (D.42919_364, D.42921_366, "a=%s\n", sr_361(D));

Marking useful stmt: return;

can not prove finiteness of loop 3
Marking useful stmt: if (D.42859_317 != 9)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.42635_95)
(get_scalar_evolution 
  (scalar = D.42635_95)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.42635_95)
  (scalar_evolution = D.42635_95))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.42635_95)
(get_scalar_evolution 
  (scalar = D.42635_95)
  (scalar_evolution = D.42635_95))
(set_scalar_evolution 
  instantiated_below = 33 
  (scalar = D.42635_95)
  (scalar_evolution = D.42635_95))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.42635_95 > i_3)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.42635_42)
(get_scalar_evolution 
  (scalar = D.42635_42)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.42635_42)
  (scalar_evolution = D.42635_42))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.42635_42)
(get_scalar_evolution 
  (scalar = D.42635_42)
  (scalar_evolution = D.42635_42))
(set_scalar_evolution 
  instantiated_below = 9 
  (scalar = D.42635_42)
  (scalar_evolution = D.42635_42))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.42635_42 > i_2)


Processing worklist:
processing: if (D.42635_42 > i_2)

Marking useful stmt: if (smh_23 == 0B)

marking necessary through D.42635_42 stmt D.42635_42 = D.42634_41->num_codecs;
marking necessary through i_2 stmt i_2 = PHI <0(9), i_67(25)>
processing: i_2 = PHI <0(9), i_67(25)>

marking necessary through i_67 stmt i_67 = i_2 + 1;
processing: i_67 = i_2 + 1;

processing: D.42635_42 = D.42634_41->num_codecs;

marking necessary through D.42634_41 stmt D.42634_41 = smh_23->mparams;
marking necessary through .MEM_397 stmt already_did = {};
marking necessary through .MEM_401 stmt already_did[D.42626_60] = 1;
processing: already_did[D.42626_60] = 1;

Marking useful stmt: if (D.42627_58 != 0)

marking necessary through D.42626_60 stmt D.42626_60 = (int) D.42622_59;
processing: D.42626_60 = (int) D.42622_59;

marking necessary through D.42622_59 stmt D.42622_59 = smh_23->ianacodes[i_2];
processing: D.42622_59 = smh_23->ianacodes[i_2];

marking necessary through smh_23 stmt smh_23 = session_22(D)->media_handle;
processing: smh_23 = session_22(D)->media_handle;

Marking useful stmt: if (session_22(D) == 0B)

processing: if (session_22(D) == 0B)

processing: if (D.42627_58 != 0)

Marking useful stmt: if (D.42623_55 >= 0)

marking necessary through D.42627_58 stmt D.42627_58 = already_did[D.42626_57];
processing: D.42627_58 = already_did[D.42626_57];

marking necessary through D.42626_57 stmt D.42626_57 = (int) D.42622_56;
processing: D.42626_57 = (int) D.42622_56;

marking necessary through D.42622_56 stmt D.42622_56 = smh_23->ianacodes[i_2];
processing: D.42622_56 = smh_23->ianacodes[i_2];

processing: if (D.42623_55 >= 0)

Marking useful stmt: if (cur_ptime_52(D) == 0)

Marking useful stmt: if (this_ptime_10 != cur_ptime_52(D))

marking necessary through D.42623_55 stmt D.42623_55 = (signed char) D.42622_54;
processing: D.42623_55 = (signed char) D.42622_54;

marking necessary through D.42622_54 stmt D.42622_54 = smh_23->ianacodes[i_2];
processing: D.42622_54 = smh_23->ianacodes[i_2];

processing: if (this_ptime_10 != cur_ptime_52(D))

marking necessary through this_ptime_10 stmt this_ptime_10 = PHI <this_ptime_45(11), 20(12)>
processing: this_ptime_10 = PHI <this_ptime_45(11), 20(12)>

marking necessary through this_ptime_45 stmt this_ptime_45 = D.42603_44 / 1000;
Marking useful stmt: if (D.42607_47 == 0)

Marking useful stmt: if (D.42609_49 == 0)

processing: if (D.42609_49 == 0)

marking necessary through D.42609_49 stmt D.42609_49 = strcasecmp (D.42606_48, "isac");
processing: D.42609_49 = strcasecmp (D.42606_48, "isac");

marking necessary through D.42606_48 stmt D.42606_48 = imp_43->iananame;
processing: D.42606_48 = imp_43->iananame;

marking necessary through imp_43 stmt imp_43 = smh_23->codecs[i_2];
processing: imp_43 = smh_23->codecs[i_2];

processing: if (D.42607_47 == 0)

marking necessary through D.42607_47 stmt D.42607_47 = strcasecmp (D.42606_46, "ilbc");
processing: D.42607_47 = strcasecmp (D.42606_46, "ilbc");

marking necessary through D.42606_46 stmt D.42606_46 = imp_43->iananame;
processing: D.42606_46 = imp_43->iananame;

processing: this_ptime_45 = D.42603_44 / 1000;

marking necessary through D.42603_44 stmt D.42603_44 = imp_43->microseconds_per_packet;
processing: D.42603_44 = imp_43->microseconds_per_packet;

processing: if (cur_ptime_52(D) == 0)

Marking useful stmt: if (D.42610_51 != 0)

processing: if (D.42610_51 != 0)

marking necessary through D.42610_51 stmt D.42610_51 = imp_43->codec_type;
processing: D.42610_51 = imp_43->codec_type;

processing: already_did = {};

processing: D.42634_41 = smh_23->mparams;

processing: if (smh_23 == 0B)

processing: if (D.42635_95 > i_3)

marking necessary through D.42635_95 stmt D.42635_95 = D.42634_94->num_codecs;
marking necessary through i_3 stmt i_3 = PHI <0(33), i_153(61)>
processing: i_3 = PHI <0(33), i_153(61)>

marking necessary through i_153 stmt i_153 = i_3 + 1;
processing: i_153 = i_3 + 1;

processing: D.42635_95 = D.42634_94->num_codecs;

marking necessary through D.42634_94 stmt D.42634_94 = smh_23->mparams;
marking necessary through .MEM_408 stmt already_did[D.42626_113] = 1;
marking necessary through .MEM_409 stmt key = "";
processing: key = "";

Marking useful stmt: if (map_116(D) != 0B)

processing: if (map_116(D) != 0B)

Marking useful stmt: if (D.42623_108 >= 0)

Marking useful stmt: if (D.42627_111 != 0)

processing: if (D.42627_111 != 0)

marking necessary through D.42627_111 stmt D.42627_111 = already_did[D.42626_110];
processing: D.42627_111 = already_did[D.42626_110];

marking necessary through D.42626_110 stmt D.42626_110 = (int) D.42622_109;
processing: D.42626_110 = (int) D.42622_109;

marking necessary through D.42622_109 stmt D.42622_109 = smh_23->ianacodes[i_3];
processing: D.42622_109 = smh_23->ianacodes[i_3];

processing: if (D.42623_108 >= 0)

Marking useful stmt: if (cur_ptime_52(D) == 0)

Marking useful stmt: if (this_ptime_13 != cur_ptime_52(D))

marking necessary through D.42623_108 stmt D.42623_108 = (signed char) D.42622_107;
processing: D.42623_108 = (signed char) D.42622_107;

marking necessary through D.42622_107 stmt D.42622_107 = smh_23->ianacodes[i_3];
processing: D.42622_107 = smh_23->ianacodes[i_3];

processing: if (this_ptime_13 != cur_ptime_52(D))

marking necessary through this_ptime_13 stmt this_ptime_13 = PHI <this_ptime_99(37), 20(38)>
processing: this_ptime_13 = PHI <this_ptime_99(37), 20(38)>

Marking useful stmt: if (D.42664_100 != 0)

marking necessary through this_ptime_99 stmt this_ptime_99 = D.42663_98 / 1000;
Marking useful stmt: if (D.42670_102 == 0)

Marking useful stmt: if (D.42672_104 == 0)

processing: if (D.42672_104 == 0)

marking necessary through D.42672_104 stmt D.42672_104 = strcasecmp (D.42669_103, "isac");
processing: D.42672_104 = strcasecmp (D.42669_103, "isac");

marking necessary through D.42669_103 stmt D.42669_103 = imp_96->iananame;
processing: D.42669_103 = imp_96->iananame;

marking necessary through imp_96 stmt imp_96 = smh_23->codecs[i_3];
processing: imp_96 = smh_23->codecs[i_3];

processing: if (D.42670_102 == 0)

marking necessary through D.42670_102 stmt D.42670_102 = strcasecmp (D.42669_101, "ilbc");
processing: D.42670_102 = strcasecmp (D.42669_101, "ilbc");

marking necessary through D.42669_101 stmt D.42669_101 = imp_96->iananame;
processing: D.42669_101 = imp_96->iananame;

processing: this_ptime_99 = D.42663_98 / 1000;

marking necessary through D.42663_98 stmt D.42663_98 = imp_96->microseconds_per_packet;
processing: D.42663_98 = imp_96->microseconds_per_packet;

processing: if (D.42664_100 != 0)

marking necessary through D.42664_100 stmt D.42664_100 = imp_96->codec_type;
processing: D.42664_100 = imp_96->codec_type;

processing: if (cur_ptime_52(D) == 0)

processing: already_did[D.42626_113] = 1;

marking necessary through D.42626_113 stmt D.42626_113 = (int) D.42622_112;
processing: D.42626_113 = (int) D.42622_112;

marking necessary through D.42622_112 stmt D.42622_112 = smh_23->ianacodes[i_3];
processing: D.42622_112 = smh_23->ianacodes[i_3];

processing: D.42634_94 = smh_23->mparams;

processing: if (D.42859_317 != 9)

Marking useful stmt: if (D.42856_315 == 0)

marking necessary through D.42859_317 stmt D.42859_317 = smh_23->crypto_suite_order[i_15];
processing: D.42859_317 = smh_23->crypto_suite_order[i_15];

marking necessary through i_15 stmt i_15 = PHI <i_368(115), i_329(114)>
marking necessary through .MEM_430 stmt tmp2[10] = 0;
marking necessary through .MEM_429 stmt tmp1[10] = 0;
marking necessary through .MEM_428 stmt tmp2 = "";
marking necessary through .MEM_427 stmt tmp1 = "";
processing: tmp1 = "";

Marking useful stmt: if (D.42770_208 != 0)

processing: if (D.42770_208 != 0)

marking necessary through D.42770_208 stmt D.42770_208 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ice_out.cands[0][0].ready;
processing: D.42770_208 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ice_out.cands[0][0].ready;

processing: tmp2 = "";

processing: tmp1[10] = 0;

processing: tmp2[10] = 0;

processing: i_15 = PHI <i_368(115), i_329(114)>

marking necessary through i_368 stmt i_368 = PHI <0(106)>
marking necessary through i_329 stmt i_329 = i_15 + 1;
processing: i_329 = i_15 + 1;

processing: i_368 = PHI <0(106)>

processing: if (D.42856_315 == 0)

Marking useful stmt: if (secure_33(D) != 0)

processing: if (secure_33(D) != 0)

processing: return;

processing: switch_snprintf (D.42919_364, D.42921_366, "a=%s\n", sr_361(D));

Marking useful stmt: if (D.47465_468 == 0)

marking necessary through D.42919_364 stmt D.42919_364 = buf_25(D) + D.42918_363;
marking necessary through D.42921_366 stmt D.42921_366 = buflen_29(D) - D.42920_365;
processing: D.42921_366 = buflen_29(D) - D.42920_365;

marking necessary through D.42920_365 stmt D.42920_365 = strlen (buf_25(D));
processing: D.42920_365 = strlen (buf_25(D));

processing: D.42919_364 = buf_25(D) + D.42918_363;

marking necessary through D.42918_363 stmt D.42918_363 = strlen (buf_25(D));
processing: D.42918_363 = strlen (buf_25(D));

processing: if (D.47465_468 == 0)

marking necessary through D.47465_468 stmt D.47465_468 = PHI <1(132), 1(133), 0(134)>
processing: D.47465_468 = PHI <1(132), 1(133), 0(134)>

Marking useful stmt: if (sr_361(D) == 0B)

Marking useful stmt: if (D.47466_467 == 0)

processing: if (D.47466_467 == 0)

marking necessary through D.47466_467 stmt D.47466_467 = *sr_361(D);
processing: D.47466_467 = *sr_361(D);

processing: if (sr_361(D) == 0B)

processing: switch_snprintf (D.42912_358, D.42914_360, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

Marking useful stmt: if (local_sdp_audio_zrtp_hash_356 != 0B)

marking necessary through D.42912_358 stmt D.42912_358 = buf_25(D) + D.42911_357;
marking necessary through D.42914_360 stmt D.42914_360 = buflen_29(D) - D.42913_359;
processing: D.42914_360 = buflen_29(D) - D.42913_359;

marking necessary through D.42913_359 stmt D.42913_359 = strlen (buf_25(D));
processing: D.42913_359 = strlen (buf_25(D));

processing: D.42912_358 = buf_25(D) + D.42911_357;

marking necessary through D.42911_357 stmt D.42911_357 = strlen (buf_25(D));
processing: D.42911_357 = strlen (buf_25(D));

processing: if (local_sdp_audio_zrtp_hash_356 != 0B)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_22(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

processing: local_sdp_audio_zrtp_hash_356 = switch_core_media_get_zrtp_hash (session_22(D), 0, 1);

processing: switch_snprintf (D.42906_353, D.42908_355, "a=ptime:%d\n", cur_ptime_1);

Marking useful stmt: if (cur_ptime_1 != 0)

marking necessary through D.42906_353 stmt D.42906_353 = buf_25(D) + D.42905_352;
marking necessary through D.42908_355 stmt D.42908_355 = buflen_29(D) - D.42907_354;
marking necessary through cur_ptime_1 stmt cur_ptime_1 = PHI <cur_ptime_52(D)(126), ptime_9(127)>
processing: cur_ptime_1 = PHI <cur_ptime_52(D)(126), ptime_9(127)>

marking necessary through ptime_9 stmt ptime_9 = PHI <ptime_6(33), ptime_8(61)>
Marking useful stmt: if (cur_ptime_52(D) == 0)

processing: if (cur_ptime_52(D) == 0)

processing: ptime_9 = PHI <ptime_6(33), ptime_8(61)>

marking necessary through ptime_6 stmt ptime_6 = PHI <0(9), ptime_5(25)>
marking necessary through ptime_8 stmt ptime_8 = PHI <ptime_9(35), ptime_9(43), ptime_7(46), ptime_7(59), ptime_7(60)>
processing: ptime_8 = PHI <ptime_9(35), ptime_9(43), ptime_7(46), ptime_7(59), ptime_7(60)>

marking necessary through ptime_7 stmt ptime_7 = PHI <ptime_9(40), this_ptime_13(41), ptime_9(42)>
Marking useful stmt: if (fmtp_12 != 0B)

processing: if (fmtp_12 != 0B)

marking necessary through fmtp_12 stmt fmtp_12 = PHI <fmtp_11(52), fmtp_125(53)>
processing: fmtp_12 = PHI <fmtp_11(52), fmtp_125(53)>

marking necessary through fmtp_11 stmt fmtp_11 = PHI <fmtp_97(48), fmtp_97(50), check_14(51)>
marking necessary through fmtp_125 stmt fmtp_125 = smh_23->fmtps[i_3];
Marking useful stmt: if (D.42693_124 != 0B)

processing: if (D.42693_124 != 0B)

marking necessary through D.42693_124 stmt D.42693_124 = smh_23->fmtps[i_3];
processing: D.42693_124 = smh_23->fmtps[i_3];

processing: fmtp_125 = smh_23->fmtps[i_3];

processing: fmtp_11 = PHI <fmtp_97(48), fmtp_97(50), check_14(51)>

marking necessary through fmtp_97 stmt fmtp_97 = imp_96->fmtp;
marking necessary through check_14 stmt check_14 = PHI <check_120(49), check_122(50)>
Marking useful stmt: if (check_120 != 0B)

Marking useful stmt: if (check_122 != 0B)

processing: if (check_122 != 0B)

processing: if (check_120 != 0B)

processing: check_14 = PHI <check_120(49), check_122(50)>

processing: fmtp_97 = imp_96->fmtp;

processing: ptime_7 = PHI <ptime_9(40), this_ptime_13(41), ptime_9(42)>

Marking useful stmt: if (ptime_9 == 0)

processing: if (ptime_9 == 0)

processing: ptime_6 = PHI <0(9), ptime_5(25)>

marking necessary through ptime_5 stmt ptime_5 = PHI <ptime_6(14), ptime_6(19), ptime_4(22), ptime_4(24)>
processing: ptime_5 = PHI <ptime_6(14), ptime_6(19), ptime_4(22), ptime_4(24)>

marking necessary through ptime_4 stmt ptime_4 = PHI <ptime_6(16), this_ptime_10(17), ptime_6(18)>
processing: ptime_4 = PHI <ptime_6(16), this_ptime_10(17), ptime_6(18)>

Marking useful stmt: if (ptime_6 == 0)

processing: if (ptime_6 == 0)

processing: D.42908_355 = buflen_29(D) - D.42907_354;

marking necessary through D.42907_354 stmt D.42907_354 = strlen (buf_25(D));
processing: D.42907_354 = strlen (buf_25(D));

processing: D.42906_353 = buf_25(D) + D.42905_352;

marking necessary through D.42905_352 stmt D.42905_352 = strlen (buf_25(D));
processing: D.42905_352 = strlen (buf_25(D));

processing: if (cur_ptime_1 != 0)

processing: switch_snprintf (D.42883_337, D.42885_339, "%s%s", append_audio_335(D), iftmp.41_17);

Marking useful stmt: if (append_audio_335(D) != 0B)

marking necessary through D.42883_337 stmt D.42883_337 = buf_25(D) + D.42882_336;
marking necessary through D.42885_339 stmt D.42885_339 = buflen_29(D) - D.42884_338;
marking necessary through iftmp.41_17 stmt iftmp.41_17 = PHI <""(123), "\n"(124)>
processing: iftmp.41_17 = PHI <""(123), "\n"(124)>

Marking useful stmt: if (D.42894_345 == 10)

processing: if (D.42894_345 == 10)

marking necessary through D.42894_345 stmt D.42894_345 = *append_audio_18;
processing: D.42894_345 = *append_audio_18;

marking necessary through append_audio_18 stmt append_audio_18 = PHI <append_audio_343(121), append_audio_335(D)(122)>
processing: append_audio_18 = PHI <append_audio_343(121), append_audio_335(D)(122)>

marking necessary through append_audio_343 stmt append_audio_343 = append_audio_335(D) + D.42892_342;
Marking useful stmt: if (D.42888_340 != 0)

processing: if (D.42888_340 != 0)

marking necessary through D.42888_340 stmt D.42888_340 = *append_audio_335(D);
processing: D.42888_340 = *append_audio_335(D);

processing: append_audio_343 = append_audio_335(D) + D.42892_342;

marking necessary through D.42892_342 stmt D.42892_342 = D.42891_341 + -1;
processing: D.42892_342 = D.42891_341 + -1;

marking necessary through D.42891_341 stmt D.42891_341 = strlen (append_audio_335(D));
processing: D.42891_341 = strlen (append_audio_335(D));

processing: D.42885_339 = buflen_29(D) - D.42884_338;

marking necessary through D.42884_338 stmt D.42884_338 = strlen (buf_25(D));
processing: D.42884_338 = strlen (buf_25(D));

processing: D.42883_337 = buf_25(D) + D.42882_336;

marking necessary through D.42882_336 stmt D.42882_336 = strlen (buf_25(D));
processing: D.42882_336 = strlen (buf_25(D));

processing: if (append_audio_335(D) != 0B)

processing: switch_snprintf (D.42877_332, D.42879_334, "a=silenceSupp:off - - - -\n");

Marking useful stmt: if (D.42873_330 != 0)

marking necessary through D.42877_332 stmt D.42877_332 = buf_25(D) + D.42876_331;
marking necessary through D.42879_334 stmt D.42879_334 = buflen_29(D) - D.42878_333;
processing: D.42879_334 = buflen_29(D) - D.42878_333;

marking necessary through D.42878_333 stmt D.42878_333 = strlen (buf_25(D));
processing: D.42878_333 = strlen (buf_25(D));

processing: D.42877_332 = buf_25(D) + D.42876_331;

marking necessary through D.42876_331 stmt D.42876_331 = strlen (buf_25(D));
processing: D.42876_331 = strlen (buf_25(D));

processing: if (D.42873_330 != 0)

Marking useful stmt: if (cng_type_80(D) == 0)

processing: if (cng_type_80(D) == 0)

processing: D.42873_330 = switch_media_handle_test_media_flag (smh_23, 9);

processing: switch_snprintf (D.42868_325, D.42870_327, "a=crypto:%s\n", D.42863_328);

Marking useful stmt: if (D.47461_466 == 0)

marking necessary through D.42868_325 stmt D.42868_325 = buf_25(D) + D.42867_324;
marking necessary through D.42870_327 stmt D.42870_327 = buflen_29(D) - D.42869_326;
marking necessary through D.42863_328 stmt D.42863_328 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;
processing: D.42863_328 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;

marking necessary through j_319 stmt j_319 = SUITES[D.42859_318].type;
processing: j_319 = SUITES[D.42859_318].type;

marking necessary through D.42859_318 stmt D.42859_318 = smh_23->crypto_suite_order[i_15];
processing: D.42859_318 = smh_23->crypto_suite_order[i_15];

processing: D.42870_327 = buflen_29(D) - D.42869_326;

marking necessary through D.42869_326 stmt D.42869_326 = strlen (buf_25(D));
processing: D.42869_326 = strlen (buf_25(D));

processing: D.42868_325 = buf_25(D) + D.42867_324;

marking necessary through D.42867_324 stmt D.42867_324 = strlen (buf_25(D));
processing: D.42867_324 = strlen (buf_25(D));

processing: if (D.47461_466 == 0)

Marking useful stmt: if (D.42601_320 == j_319)

Marking useful stmt: if (D.42601_321 == 9)

marking necessary through D.47461_466 stmt D.47461_466 = PHI <1(109), 1(110), 0(111)>
processing: D.47461_466 = PHI <1(109), 1(110), 0(111)>

Marking useful stmt: if (D.42863_322 == 0B)

Marking useful stmt: if (D.47462_465 == 0)

processing: if (D.47462_465 == 0)

marking necessary through D.47462_465 stmt D.47462_465 = MEM[(const char *)D.42863_322];
processing: D.47462_465 = MEM[(const char *)D.42863_322];

marking necessary through D.42863_322 stmt D.42863_322 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;
processing: D.42863_322 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;

processing: if (D.42863_322 == 0B)

processing: if (D.42601_321 == 9)

marking necessary through D.42601_321 stmt D.42601_321 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
processing: D.42601_321 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;

processing: if (D.42601_320 == j_319)

marking necessary through D.42601_320 stmt D.42601_320 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
processing: D.42601_320 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;

processing: D.42856_315 = switch_channel_test_flag (D.42599_314, 109);

marking necessary through D.42599_314 stmt D.42599_314 = session_22(D)->channel;
processing: D.42599_314 = session_22(D)->channel;

processing: switch_snprintf (D.42850_298, D.42852_300, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_301, 659134, D.42807_302, D.42836_307, D.42810_308, D.42853_313);

Marking useful stmt: if (D.42819_295 != D.42846_296)

marking necessary through D.42850_298 stmt D.42850_298 = buf_25(D) + D.42849_297;
marking necessary through D.42852_300 stmt D.42852_300 = buflen_29(D) - D.42851_299;
marking necessary through D.42806_301 stmt D.42806_301 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
marking necessary through D.42807_302 stmt D.42807_302 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
marking necessary through D.42836_307 stmt D.42836_307 = D.42809_304 + D.42835_306;
marking necessary through D.42810_308 stmt D.42810_308 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
marking necessary through D.42853_313 stmt D.42853_313 = D.42826_310 + D.42835_312;
processing: D.42853_313 = D.42826_310 + D.42835_312;

marking necessary through D.42826_310 stmt D.42826_310 = (int) D.42819_309;
marking necessary through D.42835_312 stmt D.42835_312 = D.42753_311 <= 0;
processing: D.42835_312 = D.42753_311 <= 0;

marking necessary through D.42753_311 stmt D.42753_311 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
processing: D.42753_311 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;

processing: D.42826_310 = (int) D.42819_309;

marking necessary through D.42819_309 stmt D.42819_309 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
processing: D.42819_309 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;

processing: D.42810_308 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: D.42836_307 = D.42809_304 + D.42835_306;

marking necessary through D.42809_304 stmt D.42809_304 = (int) D.42808_303;
marking necessary through D.42835_306 stmt D.42835_306 = D.42753_305 <= 0;
processing: D.42835_306 = D.42753_305 <= 0;

marking necessary through D.42753_305 stmt D.42753_305 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
processing: D.42753_305 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;

processing: D.42809_304 = (int) D.42808_303;

marking necessary through D.42808_303 stmt D.42808_303 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
processing: D.42808_303 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;

processing: D.42807_302 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: D.42806_301 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;

processing: D.42852_300 = buflen_29(D) - D.42851_299;

marking necessary through D.42851_299 stmt D.42851_299 = strlen (buf_25(D));
processing: D.42851_299 = strlen (buf_25(D));

processing: D.42850_298 = buf_25(D) + D.42849_297;

marking necessary through D.42849_297 stmt D.42849_297 = strlen (buf_25(D));
processing: D.42849_297 = strlen (buf_25(D));

processing: if (D.42819_295 != D.42846_296)

Marking useful stmt: if (D.39488_294 != 0)

marking necessary through D.42819_295 stmt D.42819_295 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
marking necessary through D.42846_296 stmt D.42846_296 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_port;
processing: D.42846_296 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_port;

processing: D.42819_295 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;

processing: if (D.39488_294 != 0)

Marking useful stmt: if (D.47457_464 == 0)

marking necessary through D.39488_294 stmt D.39488_294 = __builtin_strcmp (D.42810_292, D.42840_293);
processing: D.39488_294 = __builtin_strcmp (D.42810_292, D.42840_293);

marking necessary through D.42810_292 stmt D.42810_292 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
marking necessary through D.42840_293 stmt D.42840_293 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;
processing: D.42840_293 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;

processing: D.42810_292 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: if (D.47457_464 == 0)

Marking useful stmt: if (D.47453_462 == 0)

marking necessary through D.47457_464 stmt D.47457_464 = PHI <1(98), 1(99), 0(100)>
processing: D.47457_464 = PHI <1(98), 1(99), 0(100)>

Marking useful stmt: if (D.42840_290 == 0B)

Marking useful stmt: if (D.47458_463 == 0)

processing: if (D.47458_463 == 0)

marking necessary through D.47458_463 stmt D.47458_463 = MEM[(const char *)D.42840_290];
processing: D.47458_463 = MEM[(const char *)D.42840_290];

marking necessary through D.42840_290 stmt D.42840_290 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;
processing: D.42840_290 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;

processing: if (D.42840_290 == 0B)

processing: if (D.47453_462 == 0)

Marking useful stmt: if (D.42753_274 <= 0)

Marking useful stmt: if (D.42830_276 == 1)

marking necessary through D.47453_462 stmt D.47453_462 = PHI <1(94), 1(95), 0(96)>
processing: D.47453_462 = PHI <1(94), 1(95), 0(96)>

Marking useful stmt: if (D.42810_288 == 0B)

Marking useful stmt: if (D.47454_461 == 0)

processing: if (D.47454_461 == 0)

marking necessary through D.47454_461 stmt D.47454_461 = MEM[(const char *)D.42810_288];
processing: D.47454_461 = MEM[(const char *)D.42810_288];

marking necessary through D.42810_288 stmt D.42810_288 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
processing: D.42810_288 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: if (D.42810_288 == 0B)

processing: if (D.42830_276 == 1)

processing: if (D.42753_274 <= 0)

marking necessary through D.42753_274 stmt D.42753_274 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
processing: D.42753_274 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;

processing: switch_snprintf (D.42832_278, D.42834_280, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_281, 659136, D.42807_282, D.42836_287);

marking necessary through D.42832_278 stmt D.42832_278 = buf_25(D) + D.42831_277;
marking necessary through D.42834_280 stmt D.42834_280 = buflen_29(D) - D.42833_279;
marking necessary through D.42806_281 stmt D.42806_281 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
marking necessary through D.42807_282 stmt D.42807_282 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
marking necessary through D.42836_287 stmt D.42836_287 = D.42809_284 + D.42835_286;
processing: D.42836_287 = D.42809_284 + D.42835_286;

marking necessary through D.42809_284 stmt D.42809_284 = (int) D.42808_283;
marking necessary through D.42835_286 stmt D.42835_286 = D.42753_285 <= 0;
processing: D.42835_286 = D.42753_285 <= 0;

marking necessary through D.42753_285 stmt D.42753_285 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
processing: D.42753_285 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;

processing: D.42809_284 = (int) D.42808_283;

marking necessary through D.42808_283 stmt D.42808_283 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
processing: D.42808_283 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;

processing: D.42807_282 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: D.42806_281 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;

processing: D.42834_280 = buflen_29(D) - D.42833_279;

marking necessary through D.42833_279 stmt D.42833_279 = strlen (buf_25(D));
processing: D.42833_279 = strlen (buf_25(D));

processing: D.42832_278 = buf_25(D) + D.42831_277;

marking necessary through D.42831_277 stmt D.42831_277 = strlen (buf_25(D));
processing: D.42831_277 = strlen (buf_25(D));

processing: D.42830_276 = switch_channel_direction (D.42599_275);

marking necessary through D.42599_275 stmt D.42599_275 = session_22(D)->channel;
processing: D.42599_275 = session_22(D)->channel;

processing: switch_snprintf (D.42823_264, D.42825_266, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_267, 659134, D.42807_268, D.42809_270, D.42810_271, D.42826_273);

Marking useful stmt: if (D.42819_261 != D.42808_262)

marking necessary through D.42823_264 stmt D.42823_264 = buf_25(D) + D.42822_263;
marking necessary through D.42825_266 stmt D.42825_266 = buflen_29(D) - D.42824_265;
marking necessary through D.42806_267 stmt D.42806_267 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
marking necessary through D.42807_268 stmt D.42807_268 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
marking necessary through D.42809_270 stmt D.42809_270 = (int) D.42808_269;
marking necessary through D.42810_271 stmt D.42810_271 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
marking necessary through D.42826_273 stmt D.42826_273 = (int) D.42819_272;
processing: D.42826_273 = (int) D.42819_272;

marking necessary through D.42819_272 stmt D.42819_272 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
processing: D.42819_272 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;

processing: D.42810_271 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: D.42809_270 = (int) D.42808_269;

marking necessary through D.42808_269 stmt D.42808_269 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
processing: D.42808_269 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;

processing: D.42807_268 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: D.42806_267 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;

processing: D.42825_266 = buflen_29(D) - D.42824_265;

marking necessary through D.42824_265 stmt D.42824_265 = strlen (buf_25(D));
processing: D.42824_265 = strlen (buf_25(D));

processing: D.42823_264 = buf_25(D) + D.42822_263;

marking necessary through D.42822_263 stmt D.42822_263 = strlen (buf_25(D));
processing: D.42822_263 = strlen (buf_25(D));

processing: if (D.42819_261 != D.42808_262)

Marking useful stmt: if (D.39479_260 != 0)

marking necessary through D.42819_261 stmt D.42819_261 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
marking necessary through D.42808_262 stmt D.42808_262 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
processing: D.42808_262 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;

processing: D.42819_261 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;

processing: if (D.39479_260 != 0)

Marking useful stmt: if (D.47449_460 == 0)

marking necessary through D.39479_260 stmt D.39479_260 = __builtin_strcmp (D.42810_258, D.42807_259);
processing: D.39479_260 = __builtin_strcmp (D.42810_258, D.42807_259);

marking necessary through D.42810_258 stmt D.42810_258 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
marking necessary through D.42807_259 stmt D.42807_259 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
processing: D.42807_259 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: D.42810_258 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: if (D.47449_460 == 0)

Marking useful stmt: if (D.47445_458 == 0)

marking necessary through D.47449_460 stmt D.47449_460 = PHI <1(85), 1(86), 0(87)>
processing: D.47449_460 = PHI <1(85), 1(86), 0(87)>

Marking useful stmt: if (D.42807_256 == 0B)

Marking useful stmt: if (D.47450_459 == 0)

processing: if (D.47450_459 == 0)

marking necessary through D.47450_459 stmt D.47450_459 = MEM[(const char *)D.42807_256];
processing: D.47450_459 = MEM[(const char *)D.42807_256];

marking necessary through D.42807_256 stmt D.42807_256 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
processing: D.42807_256 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: if (D.42807_256 == 0B)

processing: if (D.47445_458 == 0)

marking necessary through D.47445_458 stmt D.47445_458 = PHI <1(81), 1(82), 0(83)>
processing: D.47445_458 = PHI <1(81), 1(82), 0(83)>

Marking useful stmt: if (D.42810_254 == 0B)

Marking useful stmt: if (D.47446_457 == 0)

processing: if (D.47446_457 == 0)

marking necessary through D.47446_457 stmt D.47446_457 = MEM[(const char *)D.42810_254];
processing: D.47446_457 = MEM[(const char *)D.42810_254];

marking necessary through D.42810_254 stmt D.42810_254 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
processing: D.42810_254 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;

processing: if (D.42810_254 == 0B)

processing: switch_snprintf (D.42803_247, D.42805_249, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_250, 659136, D.42807_251, D.42809_253);

marking necessary through D.42803_247 stmt D.42803_247 = buf_25(D) + D.42802_246;
marking necessary through D.42805_249 stmt D.42805_249 = buflen_29(D) - D.42804_248;
marking necessary through D.42806_250 stmt D.42806_250 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
marking necessary through D.42807_251 stmt D.42807_251 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
marking necessary through D.42809_253 stmt D.42809_253 = (int) D.42808_252;
processing: D.42809_253 = (int) D.42808_252;

marking necessary through D.42808_252 stmt D.42808_252 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
processing: D.42808_252 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;

processing: D.42807_251 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;

processing: D.42806_250 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;

processing: D.42805_249 = buflen_29(D) - D.42804_248;

marking necessary through D.42804_248 stmt D.42804_248 = strlen (buf_25(D));
processing: D.42804_248 = strlen (buf_25(D));

processing: D.42803_247 = buf_25(D) + D.42802_246;

marking necessary through D.42802_246 stmt D.42802_246 = strlen (buf_25(D));
processing: D.42802_246 = strlen (buf_25(D));

processing: switch_snprintf (D.42798_242, D.42800_244, "a=ice-pwd:%s\n", D.42801_245);

marking necessary through D.42798_242 stmt D.42798_242 = buf_25(D) + D.42797_241;
marking necessary through D.42800_244 stmt D.42800_244 = buflen_29(D) - D.42799_243;
marking necessary through D.42801_245 stmt D.42801_245 = MEM[(struct ice_t *)smh_23 + 6480B].pwd;
processing: D.42801_245 = MEM[(struct ice_t *)smh_23 + 6480B].pwd;

processing: D.42800_244 = buflen_29(D) - D.42799_243;

marking necessary through D.42799_243 stmt D.42799_243 = strlen (buf_25(D));
processing: D.42799_243 = strlen (buf_25(D));

processing: D.42798_242 = buf_25(D) + D.42797_241;

marking necessary through D.42797_241 stmt D.42797_241 = strlen (buf_25(D));
processing: D.42797_241 = strlen (buf_25(D));

processing: switch_snprintf (D.42793_237, D.42795_239, "a=ice-ufrag:%s\n", D.42796_240);

marking necessary through D.42793_237 stmt D.42793_237 = buf_25(D) + D.42792_236;
marking necessary through D.42795_239 stmt D.42795_239 = buflen_29(D) - D.42794_238;
marking necessary through D.42796_240 stmt D.42796_240 = MEM[(struct ice_t *)smh_23 + 6480B].ufrag;
processing: D.42796_240 = MEM[(struct ice_t *)smh_23 + 6480B].ufrag;

processing: D.42795_239 = buflen_29(D) - D.42794_238;

marking necessary through D.42794_238 stmt D.42794_238 = strlen (buf_25(D));
processing: D.42794_238 = strlen (buf_25(D));

processing: D.42793_237 = buf_25(D) + D.42792_236;

marking necessary through D.42792_236 stmt D.42792_236 = strlen (buf_25(D));
processing: D.42792_236 = strlen (buf_25(D));

processing: switch_snprintf (D.42789_231, D.42791_233, "a=ssrc:%u label:%sa0\n", D.42777_234, D.42783_235);

marking necessary through D.42789_231 stmt D.42789_231 = buf_25(D) + D.42788_230;
marking necessary through D.42791_233 stmt D.42791_233 = buflen_29(D) - D.42790_232;
marking necessary through D.42777_234 stmt D.42777_234 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
marking necessary through D.42783_235 stmt D.42783_235 = smh_23->msid;
processing: D.42783_235 = smh_23->msid;

processing: D.42777_234 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;

processing: D.42791_233 = buflen_29(D) - D.42790_232;

marking necessary through D.42790_232 stmt D.42790_232 = strlen (buf_25(D));
processing: D.42790_232 = strlen (buf_25(D));

processing: D.42789_231 = buf_25(D) + D.42788_230;

marking necessary through D.42788_230 stmt D.42788_230 = strlen (buf_25(D));
processing: D.42788_230 = strlen (buf_25(D));

processing: switch_snprintf (D.42785_225, D.42787_227, "a=ssrc:%u mslabel:%s\n", D.42777_228, D.42783_229);

marking necessary through D.42785_225 stmt D.42785_225 = buf_25(D) + D.42784_224;
marking necessary through D.42787_227 stmt D.42787_227 = buflen_29(D) - D.42786_226;
marking necessary through D.42777_228 stmt D.42777_228 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
marking necessary through D.42783_229 stmt D.42783_229 = smh_23->msid;
processing: D.42783_229 = smh_23->msid;

processing: D.42777_228 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;

processing: D.42787_227 = buflen_29(D) - D.42786_226;

marking necessary through D.42786_226 stmt D.42786_226 = strlen (buf_25(D));
processing: D.42786_226 = strlen (buf_25(D));

processing: D.42785_225 = buf_25(D) + D.42784_224;

marking necessary through D.42784_224 stmt D.42784_224 = strlen (buf_25(D));
processing: D.42784_224 = strlen (buf_25(D));

processing: switch_snprintf (D.42780_219, D.42782_221, "a=ssrc:%u msid:%s a0\n", D.42777_222, D.42783_223);

marking necessary through D.42780_219 stmt D.42780_219 = buf_25(D) + D.42779_218;
marking necessary through D.42782_221 stmt D.42782_221 = buflen_29(D) - D.42781_220;
marking necessary through D.42777_222 stmt D.42777_222 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
marking necessary through D.42783_223 stmt D.42783_223 = smh_23->msid;
processing: D.42783_223 = smh_23->msid;

processing: D.42777_222 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;

processing: D.42782_221 = buflen_29(D) - D.42781_220;

marking necessary through D.42781_220 stmt D.42781_220 = strlen (buf_25(D));
processing: D.42781_220 = strlen (buf_25(D));

processing: D.42780_219 = buf_25(D) + D.42779_218;

marking necessary through D.42779_218 stmt D.42779_218 = strlen (buf_25(D));
processing: D.42779_218 = strlen (buf_25(D));

processing: switch_snprintf (D.42774_213, D.42776_215, "a=ssrc:%u cname:%s\n", D.42777_216, D.42778_217);

marking necessary through D.42774_213 stmt D.42774_213 = buf_25(D) + D.42773_212;
marking necessary through D.42776_215 stmt D.42776_215 = buflen_29(D) - D.42775_214;
marking necessary through D.42777_216 stmt D.42777_216 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
marking necessary through D.42778_217 stmt D.42778_217 = smh_23->cname;
processing: D.42778_217 = smh_23->cname;

processing: D.42777_216 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;

processing: D.42776_215 = buflen_29(D) - D.42775_214;

marking necessary through D.42775_214 stmt D.42775_214 = strlen (buf_25(D));
processing: D.42775_214 = strlen (buf_25(D));

processing: D.42774_213 = buf_25(D) + D.42773_212;

marking necessary through D.42773_212 stmt D.42773_212 = strlen (buf_25(D));
processing: D.42773_212 = strlen (buf_25(D));

processing: gen_ice (session_22(D), 0, 0B, 0);

processing: switch_stun_random_string (&tmp2, 10, "0123456789");

processing: switch_stun_random_string (&tmp1, 10, "0123456789");

processing: switch_snprintf (D.42766_203, D.42768_205, "a=rtcp:%d IN %s %s\n", D.42769_207, family_200(D), ip_201(D));

Marking useful stmt: if (D.42753_190 > 0)

marking necessary through D.42766_203 stmt D.42766_203 = buf_25(D) + D.42765_202;
marking necessary through D.42768_205 stmt D.42768_205 = buflen_29(D) - D.42767_204;
marking necessary through D.42769_207 stmt D.42769_207 = D.42592_206 + 1;
processing: D.42769_207 = D.42592_206 + 1;

marking necessary through D.42592_206 stmt D.42592_206 = (int) port_31(D);
processing: D.42592_206 = (int) port_31(D);

processing: D.42768_205 = buflen_29(D) - D.42767_204;

marking necessary through D.42767_204 stmt D.42767_204 = strlen (buf_25(D));
processing: D.42767_204 = strlen (buf_25(D));

processing: D.42766_203 = buf_25(D) + D.42765_202;

marking necessary through D.42765_202 stmt D.42765_202 = strlen (buf_25(D));
processing: D.42765_202 = strlen (buf_25(D));

processing: if (D.42753_190 > 0)

Marking useful stmt: if (D.42750_189 != 0B)

marking necessary through D.42753_190 stmt D.42753_190 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
processing: D.42753_190 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;

processing: if (D.42750_189 != 0B)

marking necessary through D.42750_189 stmt D.42750_189 = D.42634_188->rtcp_audio_interval_msec;
processing: D.42750_189 = D.42634_188->rtcp_audio_interval_msec;

marking necessary through D.42634_188 stmt D.42634_188 = smh_23->mparams;
processing: D.42634_188 = smh_23->mparams;

processing: switch_snprintf (D.42761_196, D.42763_198, "a=rtcp:%d IN %s %s\n", D.42592_199, family_200(D), ip_201(D));

marking necessary through D.42761_196 stmt D.42761_196 = buf_25(D) + D.42760_195;
marking necessary through D.42763_198 stmt D.42763_198 = buflen_29(D) - D.42762_197;
marking necessary through D.42592_199 stmt D.42592_199 = (int) port_31(D);
processing: D.42592_199 = (int) port_31(D);

processing: D.42763_198 = buflen_29(D) - D.42762_197;

marking necessary through D.42762_197 stmt D.42762_197 = strlen (buf_25(D));
processing: D.42762_197 = strlen (buf_25(D));

processing: D.42761_196 = buf_25(D) + D.42760_195;

marking necessary through D.42760_195 stmt D.42760_195 = strlen (buf_25(D));
processing: D.42760_195 = strlen (buf_25(D));

processing: switch_snprintf (D.42757_192, D.42759_194, "a=rtcp-mux\n");

marking necessary through D.42757_192 stmt D.42757_192 = buf_25(D) + D.42756_191;
marking necessary through D.42759_194 stmt D.42759_194 = buflen_29(D) - D.42758_193;
processing: D.42759_194 = buflen_29(D) - D.42758_193;

marking necessary through D.42758_193 stmt D.42758_193 = strlen (buf_25(D));
processing: D.42758_193 = strlen (buf_25(D));

processing: D.42757_192 = buf_25(D) + D.42756_191;

marking necessary through D.42756_191 stmt D.42756_191 = strlen (buf_25(D));
processing: D.42756_191 = strlen (buf_25(D));

processing: switch_snprintf (D.42746_183, D.42748_185, "a=fingerprint:%s %s\n", D.42739_186, D.42749_187);

Marking useful stmt: if (secure_33(D) != 0)

marking necessary through D.42746_183 stmt D.42746_183 = buf_25(D) + D.42745_182;
marking necessary through D.42748_185 stmt D.42748_185 = buflen_29(D) - D.42747_184;
marking necessary through D.42739_186 stmt D.42739_186 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;
marking necessary through D.42749_187 stmt D.42749_187 = &MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.str;
processing: D.42749_187 = &MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.str;

processing: D.42739_186 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;

processing: D.42748_185 = buflen_29(D) - D.42747_184;

marking necessary through D.42747_184 stmt D.42747_184 = strlen (buf_25(D));
processing: D.42747_184 = strlen (buf_25(D));

processing: D.42746_183 = buf_25(D) + D.42745_182;

marking necessary through D.42745_182 stmt D.42745_182 = strlen (buf_25(D));
processing: D.42745_182 = strlen (buf_25(D));

processing: if (secure_33(D) != 0)

Marking useful stmt: if (D.47441_456 == 0)

processing: if (D.47441_456 == 0)

marking necessary through D.47441_456 stmt D.47441_456 = PHI <1(70), 1(71), 0(72)>
processing: D.47441_456 = PHI <1(70), 1(71), 0(72)>

Marking useful stmt: if (D.42739_180 == 0B)

Marking useful stmt: if (D.47442_455 == 0)

processing: if (D.47442_455 == 0)

marking necessary through D.47442_455 stmt D.47442_455 = MEM[(const char *)D.42739_180];
processing: D.47442_455 = MEM[(const char *)D.42739_180];

marking necessary through D.42739_180 stmt D.42739_180 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;
processing: D.42739_180 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;

processing: if (D.42739_180 == 0B)

processing: switch_snprintf (D.42736_171, D.42738_173, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.42646_179, D.42646_179);

Marking useful stmt: if (D.42727_162 != 0)

marking necessary through D.42736_171 stmt D.42736_171 = buf_25(D) + D.42735_170;
marking necessary through D.42738_173 stmt D.42738_173 = buflen_29(D) - D.42737_172;
marking necessary through D.42646_179 stmt D.42646_179 = (int) D.42639_178;
processing: D.42646_179 = (int) D.42639_178;

marking necessary through D.42639_178 stmt D.42639_178 = D.42634_177->te;
processing: D.42639_178 = D.42634_177->te;

marking necessary through D.42634_177 stmt D.42634_177 = smh_23->mparams;
processing: D.42634_177 = smh_23->mparams;

processing: D.42738_173 = buflen_29(D) - D.42737_172;

marking necessary through D.42737_172 stmt D.42737_172 = strlen (buf_25(D));
processing: D.42737_172 = strlen (buf_25(D));

processing: D.42736_171 = buf_25(D) + D.42735_170;

marking necessary through D.42735_170 stmt D.42735_170 = strlen (buf_25(D));
processing: D.42735_170 = strlen (buf_25(D));

processing: if (D.42727_162 != 0)

Marking useful stmt: if (D.42639_160 > 95)

processing: if (D.42639_160 > 95)

Marking useful stmt: if (D.42636_155 == 0)

Marking useful stmt: if (D.42722_156 != 0)

Marking useful stmt: if (D.42724_158 != 0)

marking necessary through D.42639_160 stmt D.42639_160 = D.42634_159->te;
processing: D.42639_160 = D.42634_159->te;

marking necessary through D.42634_159 stmt D.42634_159 = smh_23->mparams;
processing: D.42634_159 = smh_23->mparams;

processing: if (D.42724_158 != 0)

processing: if (D.42722_156 != 0)

processing: if (D.42636_155 == 0)

marking necessary through D.42636_155 stmt D.42636_155 = D.42634_154->dtmf_type;
processing: D.42636_155 = D.42634_154->dtmf_type;

marking necessary through D.42634_154 stmt D.42634_154 = smh_23->mparams;
processing: D.42634_154 = smh_23->mparams;

processing: switch_snprintf (D.42731_164, D.42733_166, "a=rtpmap:%d telephone-event/8000\n", D.42646_169);

marking necessary through D.42731_164 stmt D.42731_164 = buf_25(D) + D.42730_163;
marking necessary through D.42733_166 stmt D.42733_166 = buflen_29(D) - D.42732_165;
marking necessary through D.42646_169 stmt D.42646_169 = (int) D.42639_168;
processing: D.42646_169 = (int) D.42639_168;

marking necessary through D.42639_168 stmt D.42639_168 = D.42634_167->te;
processing: D.42639_168 = D.42634_167->te;

marking necessary through D.42634_167 stmt D.42634_167 = smh_23->mparams;
processing: D.42634_167 = smh_23->mparams;

processing: D.42733_166 = buflen_29(D) - D.42732_165;

marking necessary through D.42732_165 stmt D.42732_165 = strlen (buf_25(D));
processing: D.42732_165 = strlen (buf_25(D));

processing: D.42731_164 = buf_25(D) + D.42730_163;

marking necessary through D.42730_163 stmt D.42730_163 = strlen (buf_25(D));
processing: D.42730_163 = strlen (buf_25(D));

processing: D.42727_162 = switch_channel_test_flag (D.42599_161, 106);

marking necessary through D.42599_161 stmt D.42599_161 = session_22(D)->channel;
processing: D.42599_161 = session_22(D)->channel;

processing: D.42724_158 = switch_channel_test_flag (D.42599_157, 93);

marking necessary through D.42599_157 stmt D.42599_157 = session_22(D)->channel;
processing: D.42599_157 = session_22(D)->channel;

processing: D.42722_156 = switch_media_handle_test_media_flag (smh_23, 8);

processing: switch_snprintf (D.42716_148, D.42718_150, "a=fmtp:%d %s\n", D.42626_152, fmtp_12);

marking necessary through D.42716_148 stmt D.42716_148 = buf_25(D) + D.42715_147;
marking necessary through D.42718_150 stmt D.42718_150 = buflen_29(D) - D.42717_149;
marking necessary through D.42626_152 stmt D.42626_152 = (int) D.42622_151;
processing: D.42626_152 = (int) D.42622_151;

marking necessary through D.42622_151 stmt D.42622_151 = smh_23->ianacodes[i_3];
processing: D.42622_151 = smh_23->ianacodes[i_3];

processing: D.42718_150 = buflen_29(D) - D.42717_149;

marking necessary through D.42717_149 stmt D.42717_149 = strlen (buf_25(D));
processing: D.42717_149 = strlen (buf_25(D));

processing: D.42716_148 = buf_25(D) + D.42715_147;

marking necessary through D.42715_147 stmt D.42715_147 = strlen (buf_25(D));
processing: D.42715_147 = strlen (buf_25(D));

processing: switch_snprintf (D.42710_141, D.42712_143, "a=rtpmap:%d %s/%d\n", D.42626_145, D.42669_146, rate_115);

Marking useful stmt: if (channels_132 > 1)

marking necessary through D.42710_141 stmt D.42710_141 = buf_25(D) + D.42709_140;
marking necessary through D.42712_143 stmt D.42712_143 = buflen_29(D) - D.42711_142;
marking necessary through D.42626_145 stmt D.42626_145 = (int) D.42622_144;
marking necessary through D.42669_146 stmt D.42669_146 = imp_96->iananame;
marking necessary through rate_115 stmt rate_115 = (int) D.42686_114;
processing: rate_115 = (int) D.42686_114;

marking necessary through D.42686_114 stmt D.42686_114 = imp_96->samples_per_second;
processing: D.42686_114 = imp_96->samples_per_second;

processing: D.42669_146 = imp_96->iananame;

processing: D.42626_145 = (int) D.42622_144;

marking necessary through D.42622_144 stmt D.42622_144 = smh_23->ianacodes[i_3];
processing: D.42622_144 = smh_23->ianacodes[i_3];

processing: D.42712_143 = buflen_29(D) - D.42711_142;

marking necessary through D.42711_142 stmt D.42711_142 = strlen (buf_25(D));
processing: D.42711_142 = strlen (buf_25(D));

processing: D.42710_141 = buf_25(D) + D.42709_140;

marking necessary through D.42709_140 stmt D.42709_140 = strlen (buf_25(D));
processing: D.42709_140 = strlen (buf_25(D));

processing: if (channels_132 > 1)

Marking useful stmt: if (D.42622_126 > 95)

Marking useful stmt: if (D.42699_128 != 0)

processing: if (D.42699_128 != 0)

processing: if (D.42622_126 > 95)

marking necessary through D.42622_126 stmt D.42622_126 = smh_23->ianacodes[i_3];
processing: D.42622_126 = smh_23->ianacodes[i_3];

processing: switch_snprintf (D.42705_134, D.42707_136, "a=rtpmap:%d %s/%d/%d\n", D.42626_138, D.42669_139, rate_115, channels_132);

marking necessary through D.42705_134 stmt D.42705_134 = buf_25(D) + D.42704_133;
marking necessary through D.42707_136 stmt D.42707_136 = buflen_29(D) - D.42706_135;
marking necessary through D.42626_138 stmt D.42626_138 = (int) D.42622_137;
marking necessary through D.42669_139 stmt D.42669_139 = imp_96->iananame;
processing: D.42669_139 = imp_96->iananame;

processing: D.42626_138 = (int) D.42622_137;

marking necessary through D.42622_137 stmt D.42622_137 = smh_23->ianacodes[i_3];
processing: D.42622_137 = smh_23->ianacodes[i_3];

processing: D.42707_136 = buflen_29(D) - D.42706_135;

marking necessary through D.42706_135 stmt D.42706_135 = strlen (buf_25(D));
processing: D.42706_135 = strlen (buf_25(D));

processing: D.42705_134 = buf_25(D) + D.42704_133;

marking necessary through D.42704_133 stmt D.42704_133 = strlen (buf_25(D));
processing: D.42704_133 = strlen (buf_25(D));

processing: channels_132 = get_channels (D.42669_129, D.42701_131);

marking necessary through D.42669_129 stmt D.42669_129 = imp_96->iananame;
marking necessary through D.42701_131 stmt D.42701_131 = (int) D.42700_130;
processing: D.42701_131 = (int) D.42700_130;

marking necessary through D.42700_130 stmt D.42700_130 = imp_96->number_of_channels;
processing: D.42700_130 = imp_96->number_of_channels;

processing: D.42669_129 = imp_96->iananame;

processing: D.42699_128 = switch_channel_test_flag (D.42599_127, 110);

marking necessary through D.42599_127 stmt D.42599_127 = session_22(D)->channel;
processing: D.42599_127 = session_22(D)->channel;

processing: check_122 = switch_event_get_header_idx (map_116(D), D.42669_121, -1);

marking necessary through D.42669_121 stmt D.42669_121 = imp_96->iananame;
processing: D.42669_121 = imp_96->iananame;

processing: check_120 = switch_event_get_header_idx (map_116(D), &key, -1);

processing: switch_snprintf (&key, 128, "%s:%u", D.42669_118, D.42689_119);

marking necessary through D.42669_118 stmt D.42669_118 = imp_96->iananame;
marking necessary through D.42689_119 stmt D.42689_119 = imp_96->bits_per_second;
processing: D.42689_119 = imp_96->bits_per_second;

processing: D.42669_118 = imp_96->iananame;

processing: memset (&already_did, 0, 512);

processing: switch_snprintf (D.42660_90, D.42662_92, "\n");

marking necessary through D.42660_90 stmt D.42660_90 = buf_25(D) + D.42659_89;
marking necessary through D.42662_92 stmt D.42662_92 = buflen_29(D) - D.42661_91;
processing: D.42662_92 = buflen_29(D) - D.42661_91;

marking necessary through D.42661_91 stmt D.42661_91 = strlen (buf_25(D));
processing: D.42661_91 = strlen (buf_25(D));

processing: D.42660_90 = buf_25(D) + D.42659_89;

marking necessary through D.42659_89 stmt D.42659_89 = strlen (buf_25(D));
processing: D.42659_89 = strlen (buf_25(D));

processing: switch_snprintf (D.42656_86, D.42658_88, " %d", cng_type_80(D));

Marking useful stmt: if (D.42652_84 != 0)

marking necessary through D.42656_86 stmt D.42656_86 = buf_25(D) + D.42655_85;
marking necessary through D.42658_88 stmt D.42658_88 = buflen_29(D) - D.42657_87;
processing: D.42658_88 = buflen_29(D) - D.42657_87;

marking necessary through D.42657_87 stmt D.42657_87 = strlen (buf_25(D));
processing: D.42657_87 = strlen (buf_25(D));

processing: D.42656_86 = buf_25(D) + D.42655_85;

marking necessary through D.42655_85 stmt D.42655_85 = strlen (buf_25(D));
processing: D.42655_85 = strlen (buf_25(D));

processing: if (D.42652_84 != 0)

Marking useful stmt: if (D.42647_79 == 0)

marking necessary through D.42652_84 stmt D.42652_84 = D.42650_81 && D.42651_83;
processing: D.42652_84 = D.42650_81 && D.42651_83;

marking necessary through D.42650_81 stmt D.42650_81 = cng_type_80(D) != 0;
marking necessary through D.42651_83 stmt D.42651_83 = use_cng_82(D) != 0;
processing: D.42651_83 = use_cng_82(D) != 0;

processing: D.42650_81 = cng_type_80(D) != 0;

processing: if (D.42647_79 == 0)

processing: D.42647_79 = switch_media_handle_test_media_flag (smh_23, 9);

processing: switch_snprintf (D.42643_73, D.42645_75, " %d", D.42646_78);

Marking useful stmt: if (D.42639_71 > 95)

marking necessary through D.42643_73 stmt D.42643_73 = buf_25(D) + D.42642_72;
marking necessary through D.42645_75 stmt D.42645_75 = buflen_29(D) - D.42644_74;
marking necessary through D.42646_78 stmt D.42646_78 = (int) D.42639_77;
processing: D.42646_78 = (int) D.42639_77;

marking necessary through D.42639_77 stmt D.42639_77 = D.42634_76->te;
processing: D.42639_77 = D.42634_76->te;

marking necessary through D.42634_76 stmt D.42634_76 = smh_23->mparams;
processing: D.42634_76 = smh_23->mparams;

processing: D.42645_75 = buflen_29(D) - D.42644_74;

marking necessary through D.42644_74 stmt D.42644_74 = strlen (buf_25(D));
processing: D.42644_74 = strlen (buf_25(D));

processing: D.42643_73 = buf_25(D) + D.42642_72;

marking necessary through D.42642_72 stmt D.42642_72 = strlen (buf_25(D));
processing: D.42642_72 = strlen (buf_25(D));

processing: if (D.42639_71 > 95)

Marking useful stmt: if (D.42636_69 == 0)

marking necessary through D.42639_71 stmt D.42639_71 = D.42634_70->te;
processing: D.42639_71 = D.42634_70->te;

marking necessary through D.42634_70 stmt D.42634_70 = smh_23->mparams;
processing: D.42634_70 = smh_23->mparams;

processing: if (D.42636_69 == 0)

marking necessary through D.42636_69 stmt D.42636_69 = D.42634_68->dtmf_type;
processing: D.42636_69 = D.42634_68->dtmf_type;

marking necessary through D.42634_68 stmt D.42634_68 = smh_23->mparams;
processing: D.42634_68 = smh_23->mparams;

processing: switch_snprintf (D.42631_62, D.42633_64, " %d", D.42626_66);

marking necessary through D.42631_62 stmt D.42631_62 = buf_25(D) + D.42630_61;
marking necessary through D.42633_64 stmt D.42633_64 = buflen_29(D) - D.42632_63;
marking necessary through D.42626_66 stmt D.42626_66 = (int) D.42622_65;
processing: D.42626_66 = (int) D.42622_65;

marking necessary through D.42622_65 stmt D.42622_65 = smh_23->ianacodes[i_2];
processing: D.42622_65 = smh_23->ianacodes[i_2];

processing: D.42633_64 = buflen_29(D) - D.42632_63;

marking necessary through D.42632_63 stmt D.42632_63 = strlen (buf_25(D));
processing: D.42632_63 = strlen (buf_25(D));

processing: D.42631_62 = buf_25(D) + D.42630_61;

marking necessary through D.42630_61 stmt D.42630_61 = strlen (buf_25(D));
processing: D.42630_61 = strlen (buf_25(D));

processing: switch_snprintf (D.42589_27, D.42591_30, "m=audio %d %s", D.42592_32, D.42602_39);

marking necessary through D.42589_27 stmt D.42589_27 = buf_25(D) + D.42588_26;
marking necessary through D.42591_30 stmt D.42591_30 = buflen_29(D) - D.42590_28;
marking necessary through D.42592_32 stmt D.42592_32 = (int) port_31(D);
processing: D.42592_32 = (int) port_31(D);

processing: D.42591_30 = buflen_29(D) - D.42590_28;

marking necessary through D.42590_28 stmt D.42590_28 = strlen (buf_25(D));
processing: D.42590_28 = strlen (buf_25(D));

processing: D.42589_27 = buf_25(D) + D.42588_26;

marking necessary through D.42588_26 stmt D.42588_26 = strlen (buf_25(D));
processing: D.42588_26 = strlen (buf_25(D));

processing: D.42602_39 = get_media_profile_name (session_22(D), iftmp.40_16);

marking necessary through iftmp.40_16 stmt iftmp.40_16 = PHI <1(138), 0(7), 1(6)>
processing: iftmp.40_16 = PHI <1(138), 0(7), 1(6)>

Marking useful stmt: if (D.42601_36 != 9)

Marking useful stmt: if (secure_33(D) != 0)

Marking useful stmt: if (D.42600_35 == 1)

processing: if (D.42600_35 == 1)

processing: if (secure_33(D) != 0)

processing: if (D.42601_36 != 9)

marking necessary through D.42601_36 stmt D.42601_36 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
processing: D.42601_36 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;

processing: D.42600_35 = switch_channel_direction (D.42599_34);

marking necessary through D.42599_34 stmt D.42599_34 = session_22(D)->channel;
processing: D.42599_34 = session_22(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : append_audio_344 = append_audio_335(D);

Deleting : cur_ptime_348 = ptime_9;

Deleting : fmtp_123 = check_14;

Deleting : ptime_106 = this_ptime_13;

Deleting : ptime_53 = this_ptime_10;

Deleting : .MEM_475 = PHI <.MEM_445(106)>

Removed 5 of 504 statements (0%)
Removed 1 of 55 PHI nodes (1%)
Removing basic block 122
;; basic block 122, loop depth 0, count 0
;; prev block 121, next block 123
;; pred:      
;; succ:       123 (fallthru,exec)
<bb 122>:


Scope blocks after cleanups:

{ Scope block #0 
  int i;
  int rate;
  int already_did[128];
  int ptime;
  int noptime; (unused)
  const char * local_sdp_audio_zrtp_hash;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  static const char __func__[11] = "generate_m";

  { Scope block #96 src/switch_core_media.c:5886 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #97 Originating from :#0 

    }

  }

  { Scope block #98 src/switch_core_media.c:5758 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #99 Originating from :#0 

    }

  }

  { Scope block #100 
    const struct switch_codec_implementation_t * imp;
    int this_ptime;

  }

  { Scope block #101 
    const struct switch_codec_implementation_t * imp;
    char * fmtp;
    int this_ptime;

    { Scope block #102 
      char key[128];
      char * check;

    }

    { Scope block #103 
      int channels;

    }

  }

  { Scope block #104 
    char tmp1[11];
    char tmp2[11];
    uint32_t c1; (unused)
    uint32_t c2; (unused)
    struct ice_t * ice_out; (unused)

    { Scope block #105 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #106 Originating from :#0 

      }

    }

    { Scope block #107 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #108 Originating from :#0 

      }

    }

    { Scope block #109 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #110 Originating from :#0 

      }

    }

    { Scope block #111 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #112 Originating from :#0 

      }

    }

    { Scope block #113 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #114 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #115 
    int i;

    { Scope block #116 
      switch_rtp_crypto_key_type_t j;

      { Scope block #117 src/switch_core_media.c:5852 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #118 Originating from :#0 

        }

      }

    }

  }

}
generate_m (struct switch_core_session_t * session, char * buf, size_t buflen, switch_port_t port, const char * family, const char * ip, int cur_ptime, const char * append_audio, const char * sr, int use_cng, int cng_type, struct switch_event_t * map, int secure, switch_sdp_type_t sdp_type)
{
  const char D.47466;
  int D.47465;
  const char D.47462;
  int D.47461;
  const char D.47458;
  int D.47457;
  const char D.47454;
  int D.47453;
  const char D.47450;
  int D.47449;
  const char D.47446;
  int D.47445;
  const char D.47442;
  int D.47441;
  switch_rtp_crypto_key_type_t j;
  int i;
  char tmp2[11];
  char tmp1[11];
  int channels;
  char * check;
  char key[128];
  int this_ptime;
  char * fmtp;
  const struct switch_codec_implementation_t * imp;
  int this_ptime;
  const struct switch_codec_implementation_t * imp;
  static const char __func__[11] = "generate_m";
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  struct switch_media_handle_t * smh;
  const char * local_sdp_audio_zrtp_hash;
  int ptime;
  int already_did[128];
  int rate;
  int i;
  size_t D.42921;
  size_t D.42920;
  char * D.42919;
  size_t D.42918;
  size_t D.42914;
  size_t D.42913;
  char * D.42912;
  size_t D.42911;
  size_t D.42908;
  size_t D.42907;
  char * D.42906;
  size_t D.42905;
  const char D.42894;
  unsigned int D.42892;
  size_t D.42891;
  const char D.42888;
  char * iftmp.41;
  size_t D.42885;
  size_t D.42884;
  char * D.42883;
  size_t D.42882;
  size_t D.42879;
  size_t D.42878;
  char * D.42877;
  size_t D.42876;
  int32_t D.42873;
  size_t D.42870;
  size_t D.42869;
  char * D.42868;
  size_t D.42867;
  char * D.42863;
  switch_rtp_crypto_key_type_t D.42859;
  uint32_t D.42856;
  int D.42853;
  size_t D.42852;
  size_t D.42851;
  char * D.42850;
  size_t D.42849;
  switch_port_t D.42846;
  int D.39488;
  char * D.42840;
  int D.42836;
  int D.42835;
  size_t D.42834;
  size_t D.42833;
  char * D.42832;
  size_t D.42831;
  switch_call_direction_t D.42830;
  int D.42826;
  size_t D.42825;
  size_t D.42824;
  char * D.42823;
  size_t D.42822;
  switch_port_t D.42819;
  int D.39479;
  char * D.42810;
  int D.42809;
  switch_port_t D.42808;
  char * D.42807;
  char * D.42806;
  size_t D.42805;
  size_t D.42804;
  char * D.42803;
  size_t D.42802;
  char * D.42801;
  size_t D.42800;
  size_t D.42799;
  char * D.42798;
  size_t D.42797;
  char * D.42796;
  size_t D.42795;
  size_t D.42794;
  char * D.42793;
  size_t D.42792;
  size_t D.42791;
  size_t D.42790;
  char * D.42789;
  size_t D.42788;
  size_t D.42787;
  size_t D.42786;
  char * D.42785;
  size_t D.42784;
  char * D.42783;
  size_t D.42782;
  size_t D.42781;
  char * D.42780;
  size_t D.42779;
  char * D.42778;
  uint32_t D.42777;
  size_t D.42776;
  size_t D.42775;
  char * D.42774;
  size_t D.42773;
  uint8_t D.42770;
  int D.42769;
  size_t D.42768;
  size_t D.42767;
  char * D.42766;
  size_t D.42765;
  size_t D.42763;
  size_t D.42762;
  char * D.42761;
  size_t D.42760;
  size_t D.42759;
  size_t D.42758;
  char * D.42757;
  size_t D.42756;
  int8_t D.42753;
  char * D.42750;
  char[192] * D.42749;
  size_t D.42748;
  size_t D.42747;
  char * D.42746;
  size_t D.42745;
  char * D.42739;
  size_t D.42738;
  size_t D.42737;
  char * D.42736;
  size_t D.42735;
  size_t D.42733;
  size_t D.42732;
  char * D.42731;
  size_t D.42730;
  uint32_t D.42727;
  uint32_t D.42724;
  int32_t D.42722;
  size_t D.42718;
  size_t D.42717;
  char * D.42716;
  size_t D.42715;
  size_t D.42712;
  size_t D.42711;
  char * D.42710;
  size_t D.42709;
  size_t D.42707;
  size_t D.42706;
  char * D.42705;
  size_t D.42704;
  int D.42701;
  const uint8_t D.42700;
  uint32_t D.42699;
  char * D.42693;
  const int D.42689;
  const uint32_t D.42686;
  int D.42672;
  int D.42670;
  char * const D.42669;
  const switch_codec_type_t D.42664;
  const int D.42663;
  size_t D.42662;
  size_t D.42661;
  char * D.42660;
  size_t D.42659;
  size_t D.42658;
  size_t D.42657;
  char * D.42656;
  size_t D.42655;
  _Bool D.42652;
  _Bool D.42651;
  _Bool D.42650;
  int32_t D.42647;
  int D.42646;
  size_t D.42645;
  size_t D.42644;
  char * D.42643;
  size_t D.42642;
  switch_payload_t D.42639;
  switch_core_media_dtmf_t D.42636;
  int D.42635;
  struct switch_core_media_params_t * D.42634;
  size_t D.42633;
  size_t D.42632;
  char * D.42631;
  size_t D.42630;
  int D.42627;
  int D.42626;
  signed char D.42623;
  switch_payload_t D.42622;
  const switch_codec_type_t D.42610;
  int D.42609;
  int D.42607;
  char * const D.42606;
  const int D.42603;
  const char * D.42602;
  switch_rtp_crypto_key_type_t D.42601;
  switch_call_direction_t D.42600;
  struct switch_channel_t * D.42599;
  int iftmp.40;
  int D.42592;
  size_t D.42591;
  size_t D.42590;
  char * D.42589;
  size_t D.42588;

<bb 2>:
  # DEBUG i => 0
  already_did = {};
  # DEBUG ptime => 0
  # DEBUG noptime => 0
  if (session_22(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_23 = session_22(D)->media_handle;
  # DEBUG smh => smh_23
  if (smh_23 == 0B)
    goto <bb 137>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#4 => &smh_23->engines
  # DEBUG a_engine => D#4
  D.42588_26 = strlen (buf_25(D));
  D.42589_27 = buf_25(D) + D.42588_26;
  D.42590_28 = strlen (buf_25(D));
  D.42591_30 = buflen_29(D) - D.42590_28;
  D.42592_32 = (int) port_31(D);
  if (secure_33(D) != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.42599_34 = session_22(D)->channel;
  D.42600_35 = switch_channel_direction (D.42599_34);
  if (D.42600_35 == 1)
    goto <bb 9>;
  else
    goto <bb 7>;

<bb 7>:
  D.42601_36 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
  if (D.42601_36 != 9)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:

<bb 9>:
  # iftmp.40_16 = PHI <1(8), 0(7), 1(6)>
  D.42602_39 = get_media_profile_name (session_22(D), iftmp.40_16);
  switch_snprintf (D.42589_27, D.42591_30, "m=audio %d %s", D.42592_32, D.42602_39);
  # DEBUG i => 0
  goto <bb 26>;

<bb 10>:
  imp_43 = smh_23->codecs[i_2];
  # DEBUG imp => imp_43
  D.42603_44 = imp_43->microseconds_per_packet;
  this_ptime_45 = D.42603_44 / 1000;
  # DEBUG this_ptime => this_ptime_45
  D.42606_46 = imp_43->iananame;
  D.42607_47 = strcasecmp (D.42606_46, "ilbc");
  if (D.42607_47 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:
  D.42606_48 = imp_43->iananame;
  D.42609_49 = strcasecmp (D.42606_48, "isac");
  if (D.42609_49 == 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  # DEBUG this_ptime => 20

<bb 13>:
  # this_ptime_10 = PHI <this_ptime_45(11), 20(12)>
  # DEBUG this_ptime => this_ptime_10
  D.42610_51 = imp_43->codec_type;
  if (D.42610_51 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  // predicted unlikely by continue predictor.
  goto <bb 25>;

<bb 15>:
  if (cur_ptime_52(D) == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  if (ptime_6 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;

<bb 17>:
  # DEBUG ptime => this_ptime_10
  goto <bb 20>;

<bb 18>:
  if (this_ptime_10 != cur_ptime_52(D))
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  // predicted unlikely by continue predictor.
  goto <bb 25>;

<bb 20>:
  # ptime_4 = PHI <ptime_6(16), this_ptime_10(17), ptime_6(18)>
  # DEBUG ptime => ptime_4
  D.42622_54 = smh_23->ianacodes[i_2];
  D.42623_55 = (signed char) D.42622_54;
  if (D.42623_55 >= 0)
    goto <bb 21>;
  else
    goto <bb 24>;

<bb 21>:
  D.42622_56 = smh_23->ianacodes[i_2];
  D.42626_57 = (int) D.42622_56;
  D.42627_58 = already_did[D.42626_57];
  if (D.42627_58 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  // predicted unlikely by continue predictor.
  goto <bb 25>;

<bb 23>:
  D.42622_59 = smh_23->ianacodes[i_2];
  D.42626_60 = (int) D.42622_59;
  already_did[D.42626_60] = 1;

<bb 24>:
  D.42630_61 = strlen (buf_25(D));
  D.42631_62 = buf_25(D) + D.42630_61;
  D.42632_63 = strlen (buf_25(D));
  D.42633_64 = buflen_29(D) - D.42632_63;
  D.42622_65 = smh_23->ianacodes[i_2];
  D.42626_66 = (int) D.42622_65;
  switch_snprintf (D.42631_62, D.42633_64, " %d", D.42626_66);

<bb 25>:
  # ptime_5 = PHI <ptime_6(14), ptime_6(19), ptime_4(22), ptime_4(24)>
  # DEBUG ptime => ptime_5
  i_67 = i_2 + 1;
  # DEBUG i => i_67

<bb 26>:
  # i_2 = PHI <0(9), i_67(25)>
  # ptime_6 = PHI <0(9), ptime_5(25)>
  # DEBUG ptime => ptime_6
  # DEBUG i => i_2
  D.42634_41 = smh_23->mparams;
  D.42635_42 = D.42634_41->num_codecs;
  if (D.42635_42 > i_2)
    goto <bb 10>;
  else
    goto <bb 27>;

<bb 27>:
  D.42634_68 = smh_23->mparams;
  D.42636_69 = D.42634_68->dtmf_type;
  if (D.42636_69 == 0)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.42634_70 = smh_23->mparams;
  D.42639_71 = D.42634_70->te;
  if (D.42639_71 > 95)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.42642_72 = strlen (buf_25(D));
  D.42643_73 = buf_25(D) + D.42642_72;
  D.42644_74 = strlen (buf_25(D));
  D.42645_75 = buflen_29(D) - D.42644_74;
  D.42634_76 = smh_23->mparams;
  D.42639_77 = D.42634_76->te;
  D.42646_78 = (int) D.42639_77;
  switch_snprintf (D.42643_73, D.42645_75, " %d", D.42646_78);

<bb 30>:
  D.42647_79 = switch_media_handle_test_media_flag (smh_23, 9);
  if (D.42647_79 == 0)
    goto <bb 31>;
  else
    goto <bb 33>;

<bb 31>:
  D.42650_81 = cng_type_80(D) != 0;
  D.42651_83 = use_cng_82(D) != 0;
  D.42652_84 = D.42650_81 && D.42651_83;
  if (D.42652_84 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  D.42655_85 = strlen (buf_25(D));
  D.42656_86 = buf_25(D) + D.42655_85;
  D.42657_87 = strlen (buf_25(D));
  D.42658_88 = buflen_29(D) - D.42657_87;
  switch_snprintf (D.42656_86, D.42658_88, " %d", cng_type_80(D));

<bb 33>:
  D.42659_89 = strlen (buf_25(D));
  D.42660_90 = buf_25(D) + D.42659_89;
  D.42661_91 = strlen (buf_25(D));
  D.42662_92 = buflen_29(D) - D.42661_91;
  switch_snprintf (D.42660_90, D.42662_92, "\n");
  memset (&already_did, 0, 512);
  # DEBUG i => 0
  goto <bb 62>;

<bb 34>:
  imp_96 = smh_23->codecs[i_3];
  # DEBUG imp => imp_96
  fmtp_97 = imp_96->fmtp;
  # DEBUG fmtp => fmtp_97
  D.42663_98 = imp_96->microseconds_per_packet;
  this_ptime_99 = D.42663_98 / 1000;
  # DEBUG this_ptime => this_ptime_99
  D.42664_100 = imp_96->codec_type;
  if (D.42664_100 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  // predicted unlikely by continue predictor.
  goto <bb 61>;

<bb 36>:
  D.42669_101 = imp_96->iananame;
  D.42670_102 = strcasecmp (D.42669_101, "ilbc");
  if (D.42670_102 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;

<bb 37>:
  D.42669_103 = imp_96->iananame;
  D.42672_104 = strcasecmp (D.42669_103, "isac");
  if (D.42672_104 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  # DEBUG this_ptime => 20

<bb 39>:
  # this_ptime_13 = PHI <this_ptime_99(37), 20(38)>
  # DEBUG this_ptime => this_ptime_13
  if (cur_ptime_52(D) == 0)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  if (ptime_9 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;

<bb 41>:
  # DEBUG ptime => this_ptime_13
  goto <bb 44>;

<bb 42>:
  if (this_ptime_13 != cur_ptime_52(D))
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  // predicted unlikely by continue predictor.
  goto <bb 61>;

<bb 44>:
  # ptime_7 = PHI <ptime_9(40), this_ptime_13(41), ptime_9(42)>
  # DEBUG ptime => ptime_7
  D.42622_107 = smh_23->ianacodes[i_3];
  D.42623_108 = (signed char) D.42622_107;
  if (D.42623_108 >= 0)
    goto <bb 45>;
  else
    goto <bb 48>;

<bb 45>:
  D.42622_109 = smh_23->ianacodes[i_3];
  D.42626_110 = (int) D.42622_109;
  D.42627_111 = already_did[D.42626_110];
  if (D.42627_111 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  // predicted unlikely by continue predictor.
  goto <bb 61>;

<bb 47>:
  D.42622_112 = smh_23->ianacodes[i_3];
  D.42626_113 = (int) D.42622_112;
  already_did[D.42626_113] = 1;

<bb 48>:
  D.42686_114 = imp_96->samples_per_second;
  rate_115 = (int) D.42686_114;
  # DEBUG rate => rate_115
  if (map_116(D) != 0B)
    goto <bb 49>;
  else
    goto <bb 52>;

<bb 49>:
  key = "";
  # DEBUG check => 0B
  D.42669_118 = imp_96->iananame;
  D.42689_119 = imp_96->bits_per_second;
  switch_snprintf (&key, 128, "%s:%u", D.42669_118, D.42689_119);
  check_120 = switch_event_get_header_idx (map_116(D), &key, -1);
  # DEBUG check => check_120
  if (check_120 != 0B)
    goto <bb 51>;
  else
    goto <bb 50>;

<bb 50>:
  D.42669_121 = imp_96->iananame;
  check_122 = switch_event_get_header_idx (map_116(D), D.42669_121, -1);
  # DEBUG check => check_122
  if (check_122 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  # check_14 = PHI <check_120(49), check_122(50)>
  # DEBUG check => check_14
  # DEBUG fmtp => check_14

<bb 52>:
  # fmtp_11 = PHI <fmtp_97(48), fmtp_97(50), check_14(51)>
  # DEBUG fmtp => fmtp_11
  D.42693_124 = smh_23->fmtps[i_3];
  if (D.42693_124 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  fmtp_125 = smh_23->fmtps[i_3];
  # DEBUG fmtp => fmtp_125

<bb 54>:
  # fmtp_12 = PHI <fmtp_11(52), fmtp_125(53)>
  # DEBUG fmtp => fmtp_12
  D.42622_126 = smh_23->ianacodes[i_3];
  if (D.42622_126 > 95)
    goto <bb 56>;
  else
    goto <bb 55>;

<bb 55>:
  D.42599_127 = session_22(D)->channel;
  D.42699_128 = switch_channel_test_flag (D.42599_127, 110);
  if (D.42699_128 != 0)
    goto <bb 56>;
  else
    goto <bb 59>;

<bb 56>:
  D.42669_129 = imp_96->iananame;
  D.42700_130 = imp_96->number_of_channels;
  D.42701_131 = (int) D.42700_130;
  channels_132 = get_channels (D.42669_129, D.42701_131);
  # DEBUG channels => channels_132
  if (channels_132 > 1)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  D.42704_133 = strlen (buf_25(D));
  D.42705_134 = buf_25(D) + D.42704_133;
  D.42706_135 = strlen (buf_25(D));
  D.42707_136 = buflen_29(D) - D.42706_135;
  D.42622_137 = smh_23->ianacodes[i_3];
  D.42626_138 = (int) D.42622_137;
  D.42669_139 = imp_96->iananame;
  switch_snprintf (D.42705_134, D.42707_136, "a=rtpmap:%d %s/%d/%d\n", D.42626_138, D.42669_139, rate_115, channels_132);
  goto <bb 59>;

<bb 58>:
  D.42709_140 = strlen (buf_25(D));
  D.42710_141 = buf_25(D) + D.42709_140;
  D.42711_142 = strlen (buf_25(D));
  D.42712_143 = buflen_29(D) - D.42711_142;
  D.42622_144 = smh_23->ianacodes[i_3];
  D.42626_145 = (int) D.42622_144;
  D.42669_146 = imp_96->iananame;
  switch_snprintf (D.42710_141, D.42712_143, "a=rtpmap:%d %s/%d\n", D.42626_145, D.42669_146, rate_115);

<bb 59>:
  if (fmtp_12 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.42715_147 = strlen (buf_25(D));
  D.42716_148 = buf_25(D) + D.42715_147;
  D.42717_149 = strlen (buf_25(D));
  D.42718_150 = buflen_29(D) - D.42717_149;
  D.42622_151 = smh_23->ianacodes[i_3];
  D.42626_152 = (int) D.42622_151;
  switch_snprintf (D.42716_148, D.42718_150, "a=fmtp:%d %s\n", D.42626_152, fmtp_12);

<bb 61>:
  # ptime_8 = PHI <ptime_9(35), ptime_9(43), ptime_7(46), ptime_7(59), ptime_7(60)>
  # DEBUG ptime => ptime_8
  i_153 = i_3 + 1;
  # DEBUG i => i_153

<bb 62>:
  # i_3 = PHI <0(33), i_153(61)>
  # ptime_9 = PHI <ptime_6(33), ptime_8(61)>
  # DEBUG ptime => ptime_9
  # DEBUG i => i_3
  D.42634_94 = smh_23->mparams;
  D.42635_95 = D.42634_94->num_codecs;
  if (D.42635_95 > i_3)
    goto <bb 34>;
  else
    goto <bb 63>;

<bb 63>:
  D.42634_154 = smh_23->mparams;
  D.42636_155 = D.42634_154->dtmf_type;
  if (D.42636_155 == 0)
    goto <bb 66>;
  else
    goto <bb 64>;

<bb 64>:
  D.42722_156 = switch_media_handle_test_media_flag (smh_23, 8);
  if (D.42722_156 != 0)
    goto <bb 66>;
  else
    goto <bb 65>;

<bb 65>:
  D.42599_157 = session_22(D)->channel;
  D.42724_158 = switch_channel_test_flag (D.42599_157, 93);
  if (D.42724_158 != 0)
    goto <bb 66>;
  else
    goto <bb 70>;

<bb 66>:
  D.42634_159 = smh_23->mparams;
  D.42639_160 = D.42634_159->te;
  if (D.42639_160 > 95)
    goto <bb 67>;
  else
    goto <bb 70>;

<bb 67>:
  D.42599_161 = session_22(D)->channel;
  D.42727_162 = switch_channel_test_flag (D.42599_161, 106);
  if (D.42727_162 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;

<bb 68>:
  D.42730_163 = strlen (buf_25(D));
  D.42731_164 = buf_25(D) + D.42730_163;
  D.42732_165 = strlen (buf_25(D));
  D.42733_166 = buflen_29(D) - D.42732_165;
  D.42634_167 = smh_23->mparams;
  D.42639_168 = D.42634_167->te;
  D.42646_169 = (int) D.42639_168;
  switch_snprintf (D.42731_164, D.42733_166, "a=rtpmap:%d telephone-event/8000\n", D.42646_169);
  goto <bb 70>;

<bb 69>:
  D.42735_170 = strlen (buf_25(D));
  D.42736_171 = buf_25(D) + D.42735_170;
  D.42737_172 = strlen (buf_25(D));
  D.42738_173 = buflen_29(D) - D.42737_172;
  D.42634_177 = smh_23->mparams;
  D.42639_178 = D.42634_177->te;
  D.42646_179 = (int) D.42639_178;
  switch_snprintf (D.42736_171, D.42738_173, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.42646_179, D.42646_179);

<bb 70>:
  D.42739_180 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;
  # DEBUG s => D.42739_180
  if (D.42739_180 == 0B)
    goto <bb 73>;
  else
    goto <bb 71>;

<bb 71>:
  D.47442_455 = MEM[(const char *)D.42739_180];
  if (D.47442_455 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;

<bb 72>:

<bb 73>:
  # D.47441_456 = PHI <1(70), 1(71), 0(72)>
  if (D.47441_456 == 0)
    goto <bb 74>;
  else
    goto <bb 76>;

<bb 74>:
  if (secure_33(D) != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

<bb 75>:
  D.42745_182 = strlen (buf_25(D));
  D.42746_183 = buf_25(D) + D.42745_182;
  D.42747_184 = strlen (buf_25(D));
  D.42748_185 = buflen_29(D) - D.42747_184;
  D.42739_186 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.type;
  D.42749_187 = &MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_dtls_fingerprint.str;
  switch_snprintf (D.42746_183, D.42748_185, "a=fingerprint:%s %s\n", D.42739_186, D.42749_187);

<bb 76>:
  D.42634_188 = smh_23->mparams;
  D.42750_189 = D.42634_188->rtcp_audio_interval_msec;
  if (D.42750_189 != 0B)
    goto <bb 77>;
  else
    goto <bb 80>;

<bb 77>:
  D.42753_190 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
  if (D.42753_190 > 0)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  D.42756_191 = strlen (buf_25(D));
  D.42757_192 = buf_25(D) + D.42756_191;
  D.42758_193 = strlen (buf_25(D));
  D.42759_194 = buflen_29(D) - D.42758_193;
  switch_snprintf (D.42757_192, D.42759_194, "a=rtcp-mux\n");
  D.42760_195 = strlen (buf_25(D));
  D.42761_196 = buf_25(D) + D.42760_195;
  D.42762_197 = strlen (buf_25(D));
  D.42763_198 = buflen_29(D) - D.42762_197;
  D.42592_199 = (int) port_31(D);
  switch_snprintf (D.42761_196, D.42763_198, "a=rtcp:%d IN %s %s\n", D.42592_199, family_200(D), ip_201(D));
  goto <bb 80>;

<bb 79>:
  D.42765_202 = strlen (buf_25(D));
  D.42766_203 = buf_25(D) + D.42765_202;
  D.42767_204 = strlen (buf_25(D));
  D.42768_205 = buflen_29(D) - D.42767_204;
  D.42592_206 = (int) port_31(D);
  D.42769_207 = D.42592_206 + 1;
  switch_snprintf (D.42766_203, D.42768_205, "a=rtcp:%d IN %s %s\n", D.42769_207, family_200(D), ip_201(D));

<bb 80>:
  D.42770_208 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ice_out.cands[0][0].ready;
  if (D.42770_208 != 0)
    goto <bb 81>;
  else
    goto <bb 105>;

<bb 81>:
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  gen_ice (session_22(D), 0, 0B, 0);
  # DEBUG D#5 => &MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ice_out
  # DEBUG ice_out => D#5
  D.42773_212 = strlen (buf_25(D));
  D.42774_213 = buf_25(D) + D.42773_212;
  D.42775_214 = strlen (buf_25(D));
  D.42776_215 = buflen_29(D) - D.42775_214;
  D.42777_216 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
  D.42778_217 = smh_23->cname;
  switch_snprintf (D.42774_213, D.42776_215, "a=ssrc:%u cname:%s\n", D.42777_216, D.42778_217);
  D.42779_218 = strlen (buf_25(D));
  D.42780_219 = buf_25(D) + D.42779_218;
  D.42781_220 = strlen (buf_25(D));
  D.42782_221 = buflen_29(D) - D.42781_220;
  D.42777_222 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
  D.42783_223 = smh_23->msid;
  switch_snprintf (D.42780_219, D.42782_221, "a=ssrc:%u msid:%s a0\n", D.42777_222, D.42783_223);
  D.42784_224 = strlen (buf_25(D));
  D.42785_225 = buf_25(D) + D.42784_224;
  D.42786_226 = strlen (buf_25(D));
  D.42787_227 = buflen_29(D) - D.42786_226;
  D.42777_228 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
  D.42783_229 = smh_23->msid;
  switch_snprintf (D.42785_225, D.42787_227, "a=ssrc:%u mslabel:%s\n", D.42777_228, D.42783_229);
  D.42788_230 = strlen (buf_25(D));
  D.42789_231 = buf_25(D) + D.42788_230;
  D.42790_232 = strlen (buf_25(D));
  D.42791_233 = buflen_29(D) - D.42790_232;
  D.42777_234 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssrc;
  D.42783_235 = smh_23->msid;
  switch_snprintf (D.42789_231, D.42791_233, "a=ssrc:%u label:%sa0\n", D.42777_234, D.42783_235);
  D.42792_236 = strlen (buf_25(D));
  D.42793_237 = buf_25(D) + D.42792_236;
  D.42794_238 = strlen (buf_25(D));
  D.42795_239 = buflen_29(D) - D.42794_238;
  D.42796_240 = MEM[(struct ice_t *)smh_23 + 6480B].ufrag;
  switch_snprintf (D.42793_237, D.42795_239, "a=ice-ufrag:%s\n", D.42796_240);
  D.42797_241 = strlen (buf_25(D));
  D.42798_242 = buf_25(D) + D.42797_241;
  D.42799_243 = strlen (buf_25(D));
  D.42800_244 = buflen_29(D) - D.42799_243;
  D.42801_245 = MEM[(struct ice_t *)smh_23 + 6480B].pwd;
  switch_snprintf (D.42798_242, D.42800_244, "a=ice-pwd:%s\n", D.42801_245);
  D.42802_246 = strlen (buf_25(D));
  D.42803_247 = buf_25(D) + D.42802_246;
  D.42804_248 = strlen (buf_25(D));
  D.42805_249 = buflen_29(D) - D.42804_248;
  D.42806_250 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
  D.42807_251 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  D.42808_252 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
  D.42809_253 = (int) D.42808_252;
  switch_snprintf (D.42803_247, D.42805_249, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_250, 659136, D.42807_251, D.42809_253);
  D.42810_254 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  # DEBUG s => D.42810_254
  if (D.42810_254 == 0B)
    goto <bb 84>;
  else
    goto <bb 82>;

<bb 82>:
  D.47446_457 = MEM[(const char *)D.42810_254];
  if (D.47446_457 == 0)
    goto <bb 84>;
  else
    goto <bb 83>;

<bb 83>:

<bb 84>:
  # D.47445_458 = PHI <1(81), 1(82), 0(83)>
  if (D.47445_458 == 0)
    goto <bb 85>;
  else
    goto <bb 92>;

<bb 85>:
  D.42807_256 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.42807_256
  if (D.42807_256 == 0B)
    goto <bb 88>;
  else
    goto <bb 86>;

<bb 86>:
  D.47450_459 = MEM[(const char *)D.42807_256];
  if (D.47450_459 == 0)
    goto <bb 88>;
  else
    goto <bb 87>;

<bb 87>:

<bb 88>:
  # D.47449_460 = PHI <1(85), 1(86), 0(87)>
  if (D.47449_460 == 0)
    goto <bb 89>;
  else
    goto <bb 92>;

<bb 89>:
  D.42810_258 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  D.42807_259 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  D.39479_260 = __builtin_strcmp (D.42810_258, D.42807_259);
  if (D.39479_260 != 0)
    goto <bb 90>;
  else
    goto <bb 92>;

<bb 90>:
  D.42819_261 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
  D.42808_262 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
  if (D.42819_261 != D.42808_262)
    goto <bb 91>;
  else
    goto <bb 92>;

<bb 91>:
  D.42822_263 = strlen (buf_25(D));
  D.42823_264 = buf_25(D) + D.42822_263;
  D.42824_265 = strlen (buf_25(D));
  D.42825_266 = buflen_29(D) - D.42824_265;
  D.42806_267 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
  D.42807_268 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  D.42808_269 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
  D.42809_270 = (int) D.42808_269;
  D.42810_271 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  D.42819_272 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
  D.42826_273 = (int) D.42819_272;
  switch_snprintf (D.42823_264, D.42825_266, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_267, 659134, D.42807_268, D.42809_270, D.42810_271, D.42826_273);

<bb 92>:
  D.42753_274 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
  if (D.42753_274 <= 0)
    goto <bb 94>;
  else
    goto <bb 93>;

<bb 93>:
  D.42599_275 = session_22(D)->channel;
  D.42830_276 = switch_channel_direction (D.42599_275);
  if (D.42830_276 == 1)
    goto <bb 94>;
  else
    goto <bb 105>;

<bb 94>:
  D.42831_277 = strlen (buf_25(D));
  D.42832_278 = buf_25(D) + D.42831_277;
  D.42833_279 = strlen (buf_25(D));
  D.42834_280 = buflen_29(D) - D.42833_279;
  D.42806_281 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
  D.42807_282 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  D.42808_283 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
  D.42809_284 = (int) D.42808_283;
  D.42753_285 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
  D.42835_286 = D.42753_285 <= 0;
  D.42836_287 = D.42809_284 + D.42835_286;
  switch_snprintf (D.42832_278, D.42834_280, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.42806_281, 659136, D.42807_282, D.42836_287);
  D.42810_288 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  # DEBUG s => D.42810_288
  if (D.42810_288 == 0B)
    goto <bb 97>;
  else
    goto <bb 95>;

<bb 95>:
  D.47454_461 = MEM[(const char *)D.42810_288];
  if (D.47454_461 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;

<bb 96>:

<bb 97>:
  # D.47453_462 = PHI <1(94), 1(95), 0(96)>
  if (D.47453_462 == 0)
    goto <bb 98>;
  else
    goto <bb 105>;

<bb 98>:
  D.42840_290 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;
  # DEBUG s => D.42840_290
  if (D.42840_290 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;

<bb 99>:
  D.47458_463 = MEM[(const char *)D.42840_290];
  if (D.47458_463 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;

<bb 100>:

<bb 101>:
  # D.47457_464 = PHI <1(98), 1(99), 0(100)>
  if (D.47457_464 == 0)
    goto <bb 102>;
  else
    goto <bb 105>;

<bb 102>:
  D.42810_292 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  D.42840_293 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_addr;
  D.39488_294 = __builtin_strcmp (D.42810_292, D.42840_293);
  if (D.39488_294 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;

<bb 103>:
  D.42819_295 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
  D.42846_296 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][1].con_port;
  if (D.42819_295 != D.42846_296)
    goto <bb 104>;
  else
    goto <bb 105>;

<bb 104>:
  D.42849_297 = strlen (buf_25(D));
  D.42850_298 = buf_25(D) + D.42849_297;
  D.42851_299 = strlen (buf_25(D));
  D.42852_300 = buflen_29(D) - D.42851_299;
  D.42806_301 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].transport;
  D.42807_302 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_addr;
  D.42808_303 = MEM[(struct ice_t *)smh_23 + 6480B].cands[0][0].con_port;
  D.42809_304 = (int) D.42808_303;
  D.42753_305 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
  D.42835_306 = D.42753_305 <= 0;
  D.42836_307 = D.42809_304 + D.42835_306;
  D.42810_308 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_ip;
  D.42819_309 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].local_sdp_port;
  D.42826_310 = (int) D.42819_309;
  D.42753_311 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].rtcp_mux;
  D.42835_312 = D.42753_311 <= 0;
  D.42853_313 = D.42826_310 + D.42835_312;
  switch_snprintf (D.42850_298, D.42852_300, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.42806_301, 659134, D.42807_302, D.42836_307, D.42810_308, D.42853_313);

<bb 105>:
  if (secure_33(D) != 0)
    goto <bb 106>;
  else
    goto <bb 117>;

<bb 106>:
  D.42599_314 = session_22(D)->channel;
  D.42856_315 = switch_channel_test_flag (D.42599_314, 109);
  if (D.42856_315 == 0)
    goto <bb 107>;
  else
    goto <bb 117>;

<bb 107>:
  # i_368 = PHI <0(106)>
  goto <bb 116>;

<bb 108>:
  D.42859_318 = smh_23->crypto_suite_order[i_15];
  j_319 = SUITES[D.42859_318].type;
  # DEBUG j => j_319
  D.42601_320 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
  if (D.42601_320 == j_319)
    goto <bb 110>;
  else
    goto <bb 109>;

<bb 109>:
  D.42601_321 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].crypto_type;
  if (D.42601_321 == 9)
    goto <bb 110>;
  else
    goto <bb 115>;

<bb 110>:
  D.42863_322 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;
  # DEBUG s => D.42863_322
  if (D.42863_322 == 0B)
    goto <bb 113>;
  else
    goto <bb 111>;

<bb 111>:
  D.47462_465 = MEM[(const char *)D.42863_322];
  if (D.47462_465 == 0)
    goto <bb 113>;
  else
    goto <bb 112>;

<bb 112>:

<bb 113>:
  # D.47461_466 = PHI <1(110), 1(111), 0(112)>
  if (D.47461_466 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  D.42867_324 = strlen (buf_25(D));
  D.42868_325 = buf_25(D) + D.42867_324;
  D.42869_326 = strlen (buf_25(D));
  D.42870_327 = buflen_29(D) - D.42869_326;
  D.42863_328 = MEM[(struct switch_rtp_engine_t *)smh_23 + 80B].ssec[j_319].local_crypto_key;
  switch_snprintf (D.42868_325, D.42870_327, "a=crypto:%s\n", D.42863_328);

<bb 115>:
  i_329 = i_15 + 1;
  # DEBUG i => i_329

<bb 116>:
  # i_15 = PHI <i_368(107), i_329(115)>
  # DEBUG i => i_15
  D.42859_317 = smh_23->crypto_suite_order[i_15];
  if (D.42859_317 != 9)
    goto <bb 108>;
  else
    goto <bb 117>;

<bb 117>:
  if (cng_type_80(D) == 0)
    goto <bb 118>;
  else
    goto <bb 120>;

<bb 118>:
  D.42873_330 = switch_media_handle_test_media_flag (smh_23, 9);
  if (D.42873_330 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;

<bb 119>:
  D.42876_331 = strlen (buf_25(D));
  D.42877_332 = buf_25(D) + D.42876_331;
  D.42878_333 = strlen (buf_25(D));
  D.42879_334 = buflen_29(D) - D.42878_333;
  switch_snprintf (D.42877_332, D.42879_334, "a=silenceSupp:off - - - -\n");

<bb 120>:
  if (append_audio_335(D) != 0B)
    goto <bb 121>;
  else
    goto <bb 126>;

<bb 121>:
  D.42882_336 = strlen (buf_25(D));
  D.42883_337 = buf_25(D) + D.42882_336;
  D.42884_338 = strlen (buf_25(D));
  D.42885_339 = buflen_29(D) - D.42884_338;
  D.42888_340 = *append_audio_335(D);
  if (D.42888_340 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;

<bb 122>:
  D.42891_341 = strlen (append_audio_335(D));
  D.42892_342 = D.42891_341 + -1;
  append_audio_343 = append_audio_335(D) + D.42892_342;

<bb 123>:
  # append_audio_18 = PHI <append_audio_343(122), append_audio_335(D)(121)>
  D.42894_345 = *append_audio_18;
  if (D.42894_345 == 10)
    goto <bb 125>;
  else
    goto <bb 124>;

<bb 124>:

<bb 125>:
  # iftmp.41_17 = PHI <""(123), "\n"(124)>
  switch_snprintf (D.42883_337, D.42885_339, "%s%s", append_audio_335(D), iftmp.41_17);

<bb 126>:
  if (cur_ptime_52(D) == 0)
    goto <bb 127>;
  else
    goto <bb 128>;

<bb 127>:
  # DEBUG cur_ptime => ptime_9

<bb 128>:
  # cur_ptime_1 = PHI <cur_ptime_52(D)(126), ptime_9(127)>
  # DEBUG cur_ptime => cur_ptime_1
  if (cur_ptime_1 != 0)
    goto <bb 129>;
  else
    goto <bb 130>;

<bb 129>:
  D.42905_352 = strlen (buf_25(D));
  D.42906_353 = buf_25(D) + D.42905_352;
  D.42907_354 = strlen (buf_25(D));
  D.42908_355 = buflen_29(D) - D.42907_354;
  switch_snprintf (D.42906_353, D.42908_355, "a=ptime:%d\n", cur_ptime_1);

<bb 130>:
  local_sdp_audio_zrtp_hash_356 = switch_core_media_get_zrtp_hash (session_22(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_356
  if (local_sdp_audio_zrtp_hash_356 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;

<bb 131>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_22(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);
  D.42911_357 = strlen (buf_25(D));
  D.42912_358 = buf_25(D) + D.42911_357;
  D.42913_359 = strlen (buf_25(D));
  D.42914_360 = buflen_29(D) - D.42913_359;
  switch_snprintf (D.42912_358, D.42914_360, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_356);

<bb 132>:
  # DEBUG s => sr_361(D)
  if (sr_361(D) == 0B)
    goto <bb 135>;
  else
    goto <bb 133>;

<bb 133>:
  D.47466_467 = *sr_361(D);
  if (D.47466_467 == 0)
    goto <bb 135>;
  else
    goto <bb 134>;

<bb 134>:

<bb 135>:
  # D.47465_468 = PHI <1(132), 1(133), 0(134)>
  if (D.47465_468 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  D.42918_363 = strlen (buf_25(D));
  D.42919_364 = buf_25(D) + D.42918_363;
  D.42920_365 = strlen (buf_25(D));
  D.42921_366 = buflen_29(D) - D.42920_365;
  switch_snprintf (D.42919_364, D.42921_366, "a=%s\n", sr_361(D));

<bb 137>:
  return;

}



;; Function switch_core_session_media_handle_ready (switch_core_session_media_handle_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Marking useful stmt: return D.46444_1;


Processing worklist:
processing: return D.46444_1;

marking necessary through D.46444_1 stmt D.46444_1 = PHI <0(3), 1(4)>
processing: D.46444_1 = PHI <0(3), 1(4)>

Marking useful stmt: if (D.46435_3 != 0B)

Marking useful stmt: if (D.46440_7 != 0)

processing: if (D.46440_7 != 0)

marking necessary through D.46440_7 stmt D.46440_7 = D.46439_6 & 1;
processing: D.46440_7 = D.46439_6 & 1;

marking necessary through D.46439_6 stmt D.46439_6 = (int) D.46438_5;
processing: D.46439_6 = (int) D.46438_5;

marking necessary through D.46438_5 stmt D.46438_5 = D.46435_4->flags;
processing: D.46438_5 = D.46435_4->flags;

marking necessary through D.46435_4 stmt D.46435_4 = session_2(D)->media_handle;
processing: D.46435_4 = session_2(D)->media_handle;

processing: if (D.46435_3 != 0B)

marking necessary through D.46435_3 stmt D.46435_3 = session_2(D)->media_handle;
processing: D.46435_3 = session_2(D)->media_handle;


Eliminating unnecessary statements:
Removed 0 of 8 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_session_media_handle_ready (struct switch_core_session_t * session)
{
  switch_status_t D.46444;
  int D.46440;
  int D.46439;
  smh_flag_t D.46438;
  struct switch_media_handle_t * D.46435;

<bb 2>:
  D.46435_3 = session_2(D)->media_handle;
  if (D.46435_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.46435_4 = session_2(D)->media_handle;
  D.46438_5 = D.46435_4->flags;
  D.46439_6 = (int) D.46438_5;
  D.46440_7 = D.46439_6 & 1;
  if (D.46440_7 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;

<bb 4>:

<bb 5>:
  # D.46444_1 = PHI <0(3), 1(4)>
  return D.46444_1;

}



;; Function switch_core_session_check_outgoing_crypto (switch_core_session_check_outgoing_crypto)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;; 2 succs { 8 3 }
;; 3 succs { 8 4 }
;; 4 succs { 8 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }
Marking useful stmt: channel_3 = switch_core_session_get_channel (session_2(D));

Marking useful stmt: # DEBUG channel => channel_3

Marking useful stmt: D.46663_4 = switch_core_session_media_handle_ready (session_2(D));

Marking useful stmt: # DEBUG smh => smh_5

Marking useful stmt: switch_channel_set_flag_value (channel_3, 92, 1);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: switch_core_media_build_crypto (D.46671_9, 0, 0, D.46672_10, 0, 0);

Marking useful stmt: switch_core_media_build_crypto (D.46671_11, 1, 0, D.46672_12, 0, 0);

Marking useful stmt: # DEBUG i => i_13

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: return;

can not prove finiteness of loop 1
Marking useful stmt: if (D.46672_8 != 9)


Processing worklist:
processing: if (D.46672_8 != 9)

Marking useful stmt: if (D.46668_6 > 1)

marking necessary through D.46672_8 stmt D.46672_8 = smh_5->crypto_suite_order[i_1];
processing: D.46672_8 = smh_5->crypto_suite_order[i_1];

marking necessary through smh_5 stmt smh_5 = session_2(D)->media_handle;
marking necessary through i_1 stmt i_1 = PHI <0(5), i_13(6)>
processing: i_1 = PHI <0(5), i_13(6)>

marking necessary through i_13 stmt i_13 = i_1 + 1;
processing: i_13 = i_1 + 1;

processing: smh_5 = session_2(D)->media_handle;

Marking useful stmt: if (D.46663_4 != 0)

processing: if (D.46663_4 != 0)

processing: if (D.46668_6 > 1)

Marking useful stmt: if (smh_5 == 0B)

marking necessary through D.46668_6 stmt D.46668_6 = smh_5->crypto_mode;
processing: D.46668_6 = smh_5->crypto_mode;

processing: if (smh_5 == 0B)

processing: return;

processing: switch_core_media_build_crypto (D.46671_11, 1, 0, D.46672_12, 0, 0);

marking necessary through D.46671_11 stmt D.46671_11 = session_2(D)->media_handle;
marking necessary through D.46672_12 stmt D.46672_12 = smh_5->crypto_suite_order[i_1];
processing: D.46672_12 = smh_5->crypto_suite_order[i_1];

processing: D.46671_11 = session_2(D)->media_handle;

processing: switch_core_media_build_crypto (D.46671_9, 0, 0, D.46672_10, 0, 0);

marking necessary through D.46671_9 stmt D.46671_9 = session_2(D)->media_handle;
marking necessary through D.46672_10 stmt D.46672_10 = smh_5->crypto_suite_order[i_1];
processing: D.46672_10 = smh_5->crypto_suite_order[i_1];

processing: D.46671_9 = session_2(D)->media_handle;

processing: switch_channel_set_flag_value (channel_3, 92, 1);

processing: D.46663_4 = switch_core_session_media_handle_ready (session_2(D));

processing: channel_3 = switch_core_session_get_channel (session_2(D));


Eliminating unnecessary statements:
Removed 0 of 23 statements (0%)
Removed 0 of 2 PHI nodes (0%)
switch_core_session_check_outgoing_crypto (struct switch_core_session_t * session)
{
  int i;
  struct switch_media_handle_t * smh;
  struct switch_channel_t * channel;
  switch_rtp_crypto_key_type_t D.46672;
  struct switch_media_handle_t * D.46671;
  switch_rtp_crypto_mode_t D.46668;
  switch_status_t D.46663;

<bb 2>:
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  D.46663_4 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46663_4 != 0)
    goto <bb 8>;
  else
    goto <bb 3>;

<bb 3>:
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 8>;
  else
    goto <bb 4>;

<bb 4>:
  D.46668_6 = smh_5->crypto_mode;
  if (D.46668_6 > 1)
    goto <bb 8>;
  else
    goto <bb 5>;

<bb 5>:
  switch_channel_set_flag_value (channel_3, 92, 1);
  # DEBUG i => 0
  goto <bb 7>;

<bb 6>:
  D.46671_9 = session_2(D)->media_handle;
  D.46672_10 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_9, 0, 0, D.46672_10, 0, 0);
  D.46671_11 = session_2(D)->media_handle;
  D.46672_12 = smh_5->crypto_suite_order[i_1];
  switch_core_media_build_crypto (D.46671_11, 1, 0, D.46672_12, 0, 0);
  i_13 = i_1 + 1;
  # DEBUG i => i_13

<bb 7>:
  # i_1 = PHI <0(5), i_13(6)>
  # DEBUG i => i_1
  D.46672_8 = smh_5->crypto_suite_order[i_1];
  if (D.46672_8 != 9)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 8>:
  return;

}



;; Function switch_core_session_get_media_handle (switch_core_session_get_media_handle)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Marking useful stmt: D.46430_3 = switch_core_session_media_handle_ready (session_2(D));

Marking useful stmt: return D.46433_1;


Processing worklist:
processing: return D.46433_1;

marking necessary through D.46433_1 stmt D.46433_1 = PHI <D.46433_4(3), 0B(2)>
processing: D.46433_1 = PHI <D.46433_4(3), 0B(2)>

marking necessary through D.46433_4 stmt D.46433_4 = session_2(D)->media_handle;
Marking useful stmt: if (D.46430_3 == 0)

processing: if (D.46430_3 == 0)

processing: D.46433_4 = session_2(D)->media_handle;

processing: D.46430_3 = switch_core_session_media_handle_ready (session_2(D));


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_session_get_media_handle (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46433;
  switch_status_t D.46430;

<bb 2>:
  D.46430_3 = switch_core_session_media_handle_ready (session_2(D));
  if (D.46430_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  D.46433_4 = session_2(D)->media_handle;

<bb 4>:
  # D.46433_1 = PHI <D.46433_4(3), 0B(2)>
  return D.46433_1;

}



;; Function switch_core_session_clear_media_handle (switch_core_session_clear_media_handle)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Marking useful stmt: return D.46428_1;


Processing worklist:
processing: return D.46428_1;

marking necessary through D.46428_1 stmt D.46428_1 = PHI <1(2), 0(3)>
processing: D.46428_1 = PHI <1(2), 0(3)>

Marking useful stmt: if (D.46425_3 == 0B)

processing: if (D.46425_3 == 0B)

marking necessary through D.46425_3 stmt D.46425_3 = session_2(D)->media_handle;
processing: D.46425_3 = session_2(D)->media_handle;


Eliminating unnecessary statements:
Removed 0 of 3 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_session_clear_media_handle (struct switch_core_session_t * session)
{
  switch_status_t D.46428;
  struct switch_media_handle_t * D.46425;

<bb 2>:
  D.46425_3 = session_2(D)->media_handle;
  if (D.46425_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:

<bb 4>:
  # D.46428_1 = PHI <1(2), 0(3)>
  return D.46428_1;

}



;; Function switch_core_media_get_mparams (switch_core_media_get_mparams)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Marking useful stmt: __assert_fail ("smh", "src/switch_core_media.c", 1545, &__PRETTY_FUNCTION__);

Marking useful stmt: return D.46423_2;


Processing worklist:
processing: return D.46423_2;

Marking useful stmt: if (smh_1(D) == 0B)

marking necessary through D.46423_2 stmt D.46423_2 = smh_1(D)->mparams;
processing: D.46423_2 = smh_1(D)->mparams;

processing: if (smh_1(D) == 0B)

processing: __assert_fail ("smh", "src/switch_core_media.c", 1545, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 4 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_get_mparams (struct switch_media_handle_t * smh)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_get_mparams";
  struct switch_core_media_params_t * D.46423;

<bb 2>:
  if (smh_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("smh", "src/switch_core_media.c", 1545, &__PRETTY_FUNCTION__);

<bb 4>:
  D.46423_2 = smh_1(D)->mparams;
  return D.46423_2;

}



;; Function switch_core_media_prepare_codecs (switch_core_media_prepare_codecs)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 29 5 }
;; 5 succs { 6 8 }
;; 6 succs { 29 7 }
;; 7 succs { 29 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 29 11 }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 14 15 }
;; 14 succs { 26 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 20 }
;; 18 succs { 19 20 }
;; 19 succs { 26 }
;; 20 succs { 21 26 }
;; 21 succs { 23 22 }
;; 22 succs { 23 24 }
;; 23 succs { 26 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 1 }
Marking useful stmt: # DEBUG codec_string => 0B

Marking useful stmt: # DEBUG ocodec => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 1555, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_6

Marking useful stmt: D.46380_9 = switch_channel_test_flag (D.46379_8, 15);

Marking useful stmt: D.46382_11 = switch_channel_test_flag (D.46379_10, 29);

Marking useful stmt: D.46385_12->num_codecs = 0;

Marking useful stmt: smh_6->payload_space = 0;

Marking useful stmt: __assert_fail ("smh->session != ((void *)0)", "src/switch_core_media.c", 1575, &__PRETTY_FUNCTION__);

Marking useful stmt: abs_17 = switch_channel_get_variable_dup (D.46379_16, "absolute_codec_string", 1, -1);

Marking useful stmt: # DEBUG abs => abs_17

Marking useful stmt: # DEBUG codec_string => abs_17

Marking useful stmt: codec_string_20 = switch_channel_get_variable_dup (D.46379_19, "codec_string", 1, -1);

Marking useful stmt: # DEBUG codec_string => codec_string_20

Marking useful stmt: codec_string_22 = switch_core_media_get_codec_string (D.46389_21);

Marking useful stmt: # DEBUG codec_string => codec_string_22

Marking useful stmt: # DEBUG codec_string => codec_string_1

Marking useful stmt: # DEBUG codec_string => codec_string_24

Marking useful stmt: ocodec_26 = switch_channel_get_variable_dup (D.46379_25, "originator_codec", 1, -1);

Marking useful stmt: # DEBUG ocodec => ocodec_26

Marking useful stmt: # DEBUG codec_string => ocodec_26

Marking useful stmt: codec_string_29 = switch_core_session_sprintf (D.46389_28, "%s,%s", ocodec_26, codec_string_1);

Marking useful stmt: # DEBUG codec_string => codec_string_29

Marking useful stmt: # DEBUG codec_string => ocodec_26

Marking useful stmt: ready:

Marking useful stmt: # DEBUG codec_string => codec_string_2

Marking useful stmt: tmp_codec_string_33 = switch_core_perform_session_strdup (D.46389_32, codec_string_2, "src/switch_core_media.c", &__func__, 1603);

Marking useful stmt: # DEBUG tmp_codec_string => tmp_codec_string_33

Marking useful stmt: switch_channel_set_variable_var_check (D.46379_34, "rtp_use_codec_string", codec_string_2, 1);

Marking useful stmt: D.46413_36 = switch_separate_string (tmp_codec_string_33, 44, D.46412_35, 50);

Marking useful stmt: smh_6->codec_order_last = D.46414_37;

Marking useful stmt: D.46417_42 = switch_loadable_module_get_codecs_sorted (D.46415_39, 50, D.46412_40, D.46416_41);

Marking useful stmt: D.46385_38->num_codecs = D.46417_42;

Marking useful stmt: D.46419_45 = switch_loadable_module_get_codecs (D.46415_44, 50);

Marking useful stmt: D.46385_43->num_codecs = D.46419_45;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (smh_6 == 0B)

Marking useful stmt: if (D.46380_9 != 0)

Marking useful stmt: if (D.46382_11 != 0)

Marking useful stmt: if (D.46386_14 != 0)

Marking useful stmt: if (D.46389_15 == 0B)

processing: if (D.46389_15 == 0B)

marking necessary through D.46389_15 stmt D.46389_15 = smh_6->session;
processing: D.46389_15 = smh_6->session;

marking necessary through smh_6 stmt smh_6 = session_5(D)->media_handle;
processing: smh_6 = session_5(D)->media_handle;

Marking useful stmt: if (session_5(D) == 0B)

processing: if (session_5(D) == 0B)

processing: if (D.46386_14 != 0)

Marking useful stmt: if (force_7(D) == 0)

marking necessary through D.46386_14 stmt D.46386_14 = D.46385_13->num_codecs;
processing: D.46386_14 = D.46385_13->num_codecs;

marking necessary through D.46385_13 stmt D.46385_13 = smh_6->mparams;
processing: D.46385_13 = smh_6->mparams;

processing: if (force_7(D) == 0)

processing: if (D.46382_11 != 0)

processing: if (D.46380_9 != 0)

processing: if (smh_6 == 0B)

processing: D.46385_43->num_codecs = D.46419_45;

Marking useful stmt: if (codec_string_2 != 0B)

marking necessary through D.46385_43 stmt D.46385_43 = smh_6->mparams;
processing: D.46385_43 = smh_6->mparams;

processing: if (codec_string_2 != 0B)

marking necessary through codec_string_2 stmt codec_string_2 = PHI <abs_17(14), codec_string_24(19), codec_string_1(20), ocodec_26(23), codec_string_29(24), ocodec_26(25)>
processing: codec_string_2 = PHI <abs_17(14), codec_string_24(19), codec_string_1(20), ocodec_26(23), codec_string_29(24), ocodec_26(25)>

marking necessary through codec_string_24 stmt codec_string_24 = codec_string_1 + 1;
marking necessary through codec_string_1 stmt codec_string_1 = PHI <codec_string_20(15), codec_string_22(16)>
Marking useful stmt: if (abs_17 != 0B)

Marking useful stmt: if (D.46398_23 == 61)

Marking useful stmt: if (codec_string_1 != 0B)

Marking useful stmt: if (codec_string_1 == 0B)

Marking useful stmt: if (D.46407_27 != 0)

Marking useful stmt: if (codec_string_29 == 0B)

processing: if (codec_string_29 == 0B)

processing: if (D.46407_27 != 0)

marking necessary through D.46407_27 stmt D.46407_27 = smh_6->media_flags[1];
processing: D.46407_27 = smh_6->media_flags[1];

processing: if (codec_string_1 == 0B)

Marking useful stmt: if (ocodec_26 != 0B)

processing: if (ocodec_26 != 0B)

processing: if (codec_string_1 != 0B)

processing: if (D.46398_23 == 61)

marking necessary through D.46398_23 stmt D.46398_23 = *codec_string_1;
processing: D.46398_23 = *codec_string_1;

processing: if (abs_17 != 0B)

processing: codec_string_1 = PHI <codec_string_20(15), codec_string_22(16)>

Marking useful stmt: if (codec_string_20 == 0B)

processing: if (codec_string_20 == 0B)

processing: codec_string_24 = codec_string_1 + 1;

processing: D.46419_45 = switch_loadable_module_get_codecs (D.46415_44, 50);

marking necessary through D.46415_44 stmt D.46415_44 = &smh_6->codecs;
processing: D.46415_44 = &smh_6->codecs;

processing: D.46385_38->num_codecs = D.46417_42;

marking necessary through D.46385_38 stmt D.46385_38 = smh_6->mparams;
processing: D.46385_38 = smh_6->mparams;

processing: D.46417_42 = switch_loadable_module_get_codecs_sorted (D.46415_39, 50, D.46412_40, D.46416_41);

marking necessary through D.46415_39 stmt D.46415_39 = &smh_6->codecs;
marking necessary through D.46412_40 stmt D.46412_40 = &smh_6->codec_order;
marking necessary through D.46416_41 stmt D.46416_41 = smh_6->codec_order_last;
processing: D.46416_41 = smh_6->codec_order_last;

processing: D.46412_40 = &smh_6->codec_order;

processing: D.46415_39 = &smh_6->codecs;

processing: smh_6->codec_order_last = D.46414_37;

marking necessary through D.46414_37 stmt D.46414_37 = (int) D.46413_36;
processing: D.46414_37 = (int) D.46413_36;

processing: D.46413_36 = switch_separate_string (tmp_codec_string_33, 44, D.46412_35, 50);

marking necessary through D.46412_35 stmt D.46412_35 = &smh_6->codec_order;
processing: D.46412_35 = &smh_6->codec_order;

processing: switch_channel_set_variable_var_check (D.46379_34, "rtp_use_codec_string", codec_string_2, 1);

marking necessary through D.46379_34 stmt D.46379_34 = session_5(D)->channel;
processing: D.46379_34 = session_5(D)->channel;

processing: tmp_codec_string_33 = switch_core_perform_session_strdup (D.46389_32, codec_string_2, "src/switch_core_media.c", &__func__, 1603);

marking necessary through D.46389_32 stmt D.46389_32 = smh_6->session;
processing: D.46389_32 = smh_6->session;

processing: codec_string_29 = switch_core_session_sprintf (D.46389_28, "%s,%s", ocodec_26, codec_string_1);

marking necessary through D.46389_28 stmt D.46389_28 = smh_6->session;
processing: D.46389_28 = smh_6->session;

processing: ocodec_26 = switch_channel_get_variable_dup (D.46379_25, "originator_codec", 1, -1);

marking necessary through D.46379_25 stmt D.46379_25 = session_5(D)->channel;
processing: D.46379_25 = session_5(D)->channel;

processing: codec_string_22 = switch_core_media_get_codec_string (D.46389_21);

marking necessary through D.46389_21 stmt D.46389_21 = smh_6->session;
processing: D.46389_21 = smh_6->session;

processing: codec_string_20 = switch_channel_get_variable_dup (D.46379_19, "codec_string", 1, -1);

marking necessary through D.46379_19 stmt D.46379_19 = session_5(D)->channel;
processing: D.46379_19 = session_5(D)->channel;

processing: abs_17 = switch_channel_get_variable_dup (D.46379_16, "absolute_codec_string", 1, -1);

marking necessary through D.46379_16 stmt D.46379_16 = session_5(D)->channel;
processing: D.46379_16 = session_5(D)->channel;

processing: __assert_fail ("smh->session != ((void *)0)", "src/switch_core_media.c", 1575, &__PRETTY_FUNCTION__);

processing: smh_6->payload_space = 0;

processing: D.46385_12->num_codecs = 0;

Marking useful stmt: if (force_7(D) != 0)

marking necessary through D.46385_12 stmt D.46385_12 = smh_6->mparams;
processing: D.46385_12 = smh_6->mparams;

processing: if (force_7(D) != 0)

processing: D.46382_11 = switch_channel_test_flag (D.46379_10, 29);

marking necessary through D.46379_10 stmt D.46379_10 = session_5(D)->channel;
processing: D.46379_10 = session_5(D)->channel;

processing: D.46380_9 = switch_channel_test_flag (D.46379_8, 15);

marking necessary through D.46379_8 stmt D.46379_8 = session_5(D)->channel;
processing: D.46379_8 = session_5(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 1555, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : codec_string_30 = ocodec_26;

Deleting : codec_string_31 = ocodec_26;

Deleting : codec_string_18 = abs_17;

Removed 3 of 81 statements (3%)
Removed 0 of 6 PHI nodes (0%)
Removing basic block 14
;; basic block 14, loop depth 0, count 0
;; prev block 13, next block 15
;; pred:      
;; succ:       26 (fallthru,exec)
<bb 14>:
# DEBUG codec_string => abs_17
goto <bb 26> (ready);


Removing basic block 23
;; basic block 23, loop depth 0, count 0
;; prev block 22, next block 24
;; pred:      
;; succ:       26 (fallthru,exec)
<bb 23>:
# DEBUG codec_string => ocodec_26
goto <bb 26> (ready);


Scope blocks after cleanups:

{ Scope block #0 
  const char * abs;
  const char * codec_string;
  const char * ocodec;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_prepare_codecs";
  void ready = <<< error >>>; (unused)
  static const char __func__[33] = "switch_core_media_prepare_codecs";

  { Scope block #0 
    char * tmp_codec_string;

  }

}
switch_core_media_prepare_codecs (struct switch_core_session_t * session, switch_bool_t force)
{
  char * tmp_codec_string;
  static const char __func__[33] = "switch_core_media_prepare_codecs";
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_prepare_codecs";
  struct switch_media_handle_t * smh;
  const char * ocodec;
  const char * codec_string;
  const char * abs;
  int D.46419;
  int D.46417;
  int D.46416;
  const struct switch_codec_implementation_t *[50] * D.46415;
  int D.46414;
  unsigned int D.46413;
  char *[50] * D.46412;
  switch_core_media_flag_t D.46407;
  const char D.46398;
  struct switch_core_session_t * D.46389;
  int D.46386;
  struct switch_core_media_params_t * D.46385;
  uint32_t D.46382;
  uint32_t D.46380;
  struct switch_channel_t * D.46379;

<bb 2>:
  # DEBUG codec_string => 0B
  # DEBUG ocodec => 0B
  if (session_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1555, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_6 = session_5(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;

<bb 5>:
  if (force_7(D) == 0)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.46379_8 = session_5(D)->channel;
  D.46380_9 = switch_channel_test_flag (D.46379_8, 15);
  if (D.46380_9 != 0)
    goto <bb 27>;
  else
    goto <bb 7>;

<bb 7>:
  D.46379_10 = session_5(D)->channel;
  D.46382_11 = switch_channel_test_flag (D.46379_10, 29);
  if (D.46382_11 != 0)
    goto <bb 27>;
  else
    goto <bb 8>;

<bb 8>:
  if (force_7(D) != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.46385_12 = smh_6->mparams;
  D.46385_12->num_codecs = 0;

<bb 10>:
  D.46385_13 = smh_6->mparams;
  D.46386_14 = D.46385_13->num_codecs;
  if (D.46386_14 != 0)
    goto <bb 27>;
  else
    goto <bb 11>;

<bb 11>:
  smh_6->payload_space = 0;
  D.46389_15 = smh_6->session;
  if (D.46389_15 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  __assert_fail ("smh->session != ((void *)0)", "src/switch_core_media.c", 1575, &__PRETTY_FUNCTION__);

<bb 13>:
  D.46379_16 = session_5(D)->channel;
  abs_17 = switch_channel_get_variable_dup (D.46379_16, "absolute_codec_string", 1, -1);
  # DEBUG abs => abs_17
  if (abs_17 != 0B)
    goto <bb 24> (ready);
  else
    goto <bb 14>;

<bb 14>:
  D.46379_19 = session_5(D)->channel;
  codec_string_20 = switch_channel_get_variable_dup (D.46379_19, "codec_string", 1, -1);
  # DEBUG codec_string => codec_string_20
  if (codec_string_20 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.46389_21 = smh_6->session;
  codec_string_22 = switch_core_media_get_codec_string (D.46389_21);
  # DEBUG codec_string => codec_string_22

<bb 16>:
  # codec_string_1 = PHI <codec_string_20(14), codec_string_22(15)>
  # DEBUG codec_string => codec_string_1
  if (codec_string_1 != 0B)
    goto <bb 17>;
  else
    goto <bb 19>;

<bb 17>:
  D.46398_23 = *codec_string_1;
  if (D.46398_23 == 61)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  codec_string_24 = codec_string_1 + 1;
  # DEBUG codec_string => codec_string_24
  goto <bb 24> (ready);

<bb 19>:
  D.46379_25 = session_5(D)->channel;
  ocodec_26 = switch_channel_get_variable_dup (D.46379_25, "originator_codec", 1, -1);
  # DEBUG ocodec => ocodec_26
  if (ocodec_26 != 0B)
    goto <bb 20>;
  else
    goto <bb 24> (ready);

<bb 20>:
  if (codec_string_1 == 0B)
    goto <bb 24> (ready);
  else
    goto <bb 21>;

<bb 21>:
  D.46407_27 = smh_6->media_flags[1];
  if (D.46407_27 != 0)
    goto <bb 24> (ready);
  else
    goto <bb 22>;

<bb 22>:
  D.46389_28 = smh_6->session;
  codec_string_29 = switch_core_session_sprintf (D.46389_28, "%s,%s", ocodec_26, codec_string_1);
  # DEBUG codec_string => codec_string_29
  if (codec_string_29 == 0B)
    goto <bb 23>;
  else
    goto <bb 24> (ready);

<bb 23>:
  # DEBUG codec_string => ocodec_26

  # codec_string_2 = PHI <abs_17(13), codec_string_24(18), codec_string_1(19), ocodec_26(21), codec_string_29(22), ocodec_26(23), ocodec_26(20)>
ready:
  # DEBUG codec_string => codec_string_2
  if (codec_string_2 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.46389_32 = smh_6->session;
  tmp_codec_string_33 = switch_core_perform_session_strdup (D.46389_32, codec_string_2, "src/switch_core_media.c", &__func__, 1603);
  # DEBUG tmp_codec_string => tmp_codec_string_33
  D.46379_34 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.46379_34, "rtp_use_codec_string", codec_string_2, 1);
  D.46412_35 = &smh_6->codec_order;
  D.46413_36 = switch_separate_string (tmp_codec_string_33, 44, D.46412_35, 50);
  D.46414_37 = (int) D.46413_36;
  smh_6->codec_order_last = D.46414_37;
  D.46385_38 = smh_6->mparams;
  D.46415_39 = &smh_6->codecs;
  D.46412_40 = &smh_6->codec_order;
  D.46416_41 = smh_6->codec_order_last;
  D.46417_42 = switch_loadable_module_get_codecs_sorted (D.46415_39, 50, D.46412_40, D.46416_41);
  D.46385_38->num_codecs = D.46417_42;
  goto <bb 27>;

<bb 26>:
  D.46385_43 = smh_6->mparams;
  D.46415_44 = &smh_6->codecs;
  D.46419_45 = switch_loadable_module_get_codecs (D.46415_44, 50);
  D.46385_43->num_codecs = D.46419_45;

<bb 27>:
  return;

}



;; Function switch_core_media_write_frame (switch_core_media_write_frame)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 7 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 34 5 }
;; 5 succs { 34 6 }
;; 6 succs { 9 }
;; 7 succs { 8 34 }
;; 8 succs { 9 }
;; 9 succs { 7 10 }
;; 10 succs { 7 11 }
;; 11 succs { 34 12 }
;; 12 succs { 13 17 }
;; 13 succs { 14 17 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 18 17 }
;; 17 succs { 18 }
;; 18 succs { 34 19 }
;; 19 succs { 34 20 }
;; 20 succs { 21 25 }
;; 21 succs { 22 25 }
;; 22 succs { 23 25 }
;; 23 succs { 24 25 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 34 27 }
;; 27 succs { 28 31 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 1 }
Marking useful stmt: # DEBUG status => 0

Marking useful stmt: # DEBUG bytes => 0

Marking useful stmt: # DEBUG samples => 0

Marking useful stmt: # DEBUG frames => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 1996, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_10

Marking useful stmt: # DEBUG engine => engine_17

Marking useful stmt: D.46087_51 = switch_channel_test_ready (D.46086_50, 1, 0);

Marking useful stmt: switch_sleep (10000);

Marking useful stmt: D.46094_20 = switch_rtp_ready (D.46093_19);

Marking useful stmt: # DEBUG codec => D.46098_22

Marking useful stmt: # DEBUG codec => D.46098_25

Marking useful stmt: # DEBUG bytes => bytes_32

Marking useful stmt: # DEBUG frames => frames_35

Marking useful stmt: # DEBUG frames => frames_3

Marking useful stmt: # DEBUG samples => samples_40

Marking useful stmt: # DEBUG samples => samples_2

Marking useful stmt: engine_17->timestamp_send = D.46119_43;

Marking useful stmt: D.46120_45 = switch_rtp_write_frame (D.46093_44, frame_27(D));

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: return status_4;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46087_51)
(get_scalar_evolution 
  (scalar = D.46087_51)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46087_51)
(get_scalar_evolution 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
(set_scalar_evolution 
  instantiated_below = 6 
  (scalar = D.46087_51)
  (scalar_evolution = D.46087_51))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.46087_51 != 0)


Processing worklist:
processing: if (D.46087_51 != 0)

Marking useful stmt: if (D.46091_18 == 0B)

Marking useful stmt: if (D.46094_20 == 0)

processing: if (D.46094_20 == 0)

processing: if (D.46091_18 == 0B)

Marking useful stmt: if (D.46081_12 == 0)

marking necessary through D.46091_18 stmt D.46091_18 = engine_17->read_codec.implementation;
processing: D.46091_18 = engine_17->read_codec.implementation;

marking necessary through engine_17 stmt engine_17 = &smh_10->engines[type_15(D)]{lb: 0 sz: 11416};
processing: engine_17 = &smh_10->engines[type_15(D)]{lb: 0 sz: 11416};

marking necessary through smh_10 stmt smh_10 = session_9(D)->media_handle;
processing: smh_10 = session_9(D)->media_handle;

Marking useful stmt: if (session_9(D) == 0B)

processing: if (session_9(D) == 0B)

processing: if (D.46081_12 == 0)

Marking useful stmt: if (smh_10 == 0B)

marking necessary through D.46081_12 stmt D.46081_12 = smh_10->media_flags[0];
processing: D.46081_12 = smh_10->media_flags[0];

processing: if (smh_10 == 0B)

processing: return status_4;

marking necessary through status_4 stmt status_4 = PHI <1(4), 1(5), 9(7), 9(18), 1(26), status_1(33), 9(11), 1(19)>
processing: status_4 = PHI <1(4), 1(5), 9(7), 9(18), 1(26), status_1(33), 9(11), 1(19)>

marking necessary through status_1 stmt status_1 = PHI <0(31), 1(32)>
Marking useful stmt: if (D.46091_21 == 0B)

Marking useful stmt: if (D.46091_24 == 0B)

Marking useful stmt: if (iftmp.104_73 == 0)

Marking useful stmt: if (iftmp.104_66 == 0)

processing: if (iftmp.104_66 == 0)

marking necessary through iftmp.104_66 stmt iftmp.104_66 = PHI <1(16), 0(17)>
processing: iftmp.104_66 = PHI <1(16), 0(17)>

Marking useful stmt: if (D.47723_64 != 0B)

Marking useful stmt: if (D.46098_22 != 0B)

Marking useful stmt: if (D.47725_62 != 0)

Marking useful stmt: if (D.47724_63 != 0B)

Marking useful stmt: if (D.47722_65 != 0B)

processing: if (D.47722_65 != 0B)

marking necessary through D.47722_65 stmt D.47722_65 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
processing: D.47722_65 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;

processing: if (D.47724_63 != 0B)

marking necessary through D.47724_63 stmt D.47724_63 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
processing: D.47724_63 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;

processing: if (D.47725_62 != 0)

marking necessary through D.47725_62 stmt D.47725_62 = D.47726_61 & 256;
processing: D.47725_62 = D.47726_61 & 256;

marking necessary through D.47726_61 stmt D.47726_61 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
processing: D.47726_61 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;

processing: if (D.46098_22 != 0B)

marking necessary through D.46098_22 stmt D.46098_22 = &engine_17->read_codec;
processing: D.46098_22 = &engine_17->read_codec;

processing: if (D.47723_64 != 0B)

marking necessary through D.47723_64 stmt D.47723_64 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
processing: D.47723_64 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;

processing: if (iftmp.104_73 == 0)

marking necessary through iftmp.104_73 stmt iftmp.104_73 = PHI <1(24), 0(25)>
processing: iftmp.104_73 = PHI <1(24), 0(25)>

Marking useful stmt: if (D.47732_71 != 0B)

Marking useful stmt: if (D.46098_25 != 0B)

Marking useful stmt: if (D.47734_69 != 0)

Marking useful stmt: if (D.47733_70 != 0B)

Marking useful stmt: if (D.47731_72 != 0B)

processing: if (D.47731_72 != 0B)

marking necessary through D.47731_72 stmt D.47731_72 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
processing: D.47731_72 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;

processing: if (D.47733_70 != 0B)

marking necessary through D.47733_70 stmt D.47733_70 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
processing: D.47733_70 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;

processing: if (D.47734_69 != 0)

marking necessary through D.47734_69 stmt D.47734_69 = D.47735_68 & 256;
processing: D.47734_69 = D.47735_68 & 256;

marking necessary through D.47735_68 stmt D.47735_68 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
processing: D.47735_68 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;

processing: if (D.46098_25 != 0B)

marking necessary through D.46098_25 stmt D.46098_25 = &engine_17->read_codec;
processing: D.46098_25 = &engine_17->read_codec;

processing: if (D.47732_71 != 0B)

marking necessary through D.47732_71 stmt D.47732_71 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
processing: D.47732_71 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;

processing: if (D.46091_24 == 0B)

marking necessary through D.46091_24 stmt D.46091_24 = engine_17->read_codec.implementation;
processing: D.46091_24 = engine_17->read_codec.implementation;

processing: if (D.46091_21 == 0B)

marking necessary through D.46091_21 stmt D.46091_21 = engine_17->read_codec.implementation;
processing: D.46091_21 = engine_17->read_codec.implementation;

processing: status_1 = PHI <0(31), 1(32)>

Marking useful stmt: if (D.46120_45 < 0)

processing: if (D.46120_45 < 0)

processing: D.46120_45 = switch_rtp_write_frame (D.46093_44, frame_27(D));

marking necessary through D.46093_44 stmt D.46093_44 = engine_17->rtp_session;
processing: D.46093_44 = engine_17->rtp_session;

processing: engine_17->timestamp_send = D.46119_43;

marking necessary through D.46119_43 stmt D.46119_43 = D.46117_41 + samples.128_42;
processing: D.46119_43 = D.46117_41 + samples.128_42;

marking necessary through D.46117_41 stmt D.46117_41 = engine_17->timestamp_send;
marking necessary through samples.128_42 stmt samples.128_42 = (uint32_t) samples_2;
processing: samples.128_42 = (uint32_t) samples_2;

marking necessary through samples_2 stmt samples_2 = PHI <0(27), samples_40(30)>
processing: samples_2 = PHI <0(27), samples_40(30)>

marking necessary through samples_40 stmt samples_40 = (int) D.46116_39;
Marking useful stmt: if (D.46105_29 == 0)

processing: if (D.46105_29 == 0)

marking necessary through D.46105_29 stmt D.46105_29 = D.46104_28 & 33;
processing: D.46105_29 = D.46104_28 & 33;

marking necessary through D.46104_28 stmt D.46104_28 = BIT_FIELD_REF <*frame_27(D), 32, 480>;
processing: D.46104_28 = BIT_FIELD_REF <*frame_27(D), 32, 480>;

processing: samples_40 = (int) D.46116_39;

marking necessary through D.46116_39 stmt D.46116_39 = D.46114_37 * frames.127_38;
processing: D.46116_39 = D.46114_37 * frames.127_38;

marking necessary through D.46114_37 stmt D.46114_37 = engine_17->read_impl.samples_per_packet;
marking necessary through frames.127_38 stmt frames.127_38 = (uint32_t) frames_3;
processing: frames.127_38 = (uint32_t) frames_3;

marking necessary through frames_3 stmt frames_3 = PHI <frames_35(29), 1(28)>
processing: frames_3 = PHI <frames_35(29), 1(28)>

marking necessary through frames_35 stmt frames_35 = D.46112_34 / bytes_32;
Marking useful stmt: if (D.46108_30 != 0)

processing: if (D.46108_30 != 0)

marking necessary through D.46108_30 stmt D.46108_30 = engine_17->read_impl.encoded_bytes_per_packet;
processing: D.46108_30 = engine_17->read_impl.encoded_bytes_per_packet;

processing: frames_35 = D.46112_34 / bytes_32;

marking necessary through D.46112_34 stmt D.46112_34 = (int) D.46111_33;
marking necessary through bytes_32 stmt bytes_32 = (int) D.46108_31;
processing: bytes_32 = (int) D.46108_31;

marking necessary through D.46108_31 stmt D.46108_31 = engine_17->read_impl.encoded_bytes_per_packet;
processing: D.46108_31 = engine_17->read_impl.encoded_bytes_per_packet;

processing: D.46112_34 = (int) D.46111_33;

marking necessary through D.46111_33 stmt D.46111_33 = frame_27(D)->datalen;
processing: D.46111_33 = frame_27(D)->datalen;

processing: D.46114_37 = engine_17->read_impl.samples_per_packet;

processing: D.46117_41 = engine_17->timestamp_send;

processing: D.46094_20 = switch_rtp_ready (D.46093_19);

marking necessary through D.46093_19 stmt D.46093_19 = engine_17->rtp_session;
processing: D.46093_19 = engine_17->rtp_session;

processing: switch_sleep (10000);

processing: D.46087_51 = switch_channel_test_ready (D.46086_50, 1, 0);

marking necessary through D.46086_50 stmt D.46086_50 = session_9(D)->channel;
processing: D.46086_50 = session_9(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 1996, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : status_47 = status_1;

Removed 1 of 82 statements (1%)
Removed 0 of 8 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;
  int bytes;
  int samples;
  int frames;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_write_frame";

  { Scope block #142 src/switch_core_media.c:2021 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #143 Originating from :#0 

    }

  }

  { Scope block #144 src/switch_core_media.c:2016 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #145 Originating from :#0 

    }

  }

}
switch_core_media_write_frame (struct switch_core_session_t * session, struct switch_frame_t * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47735;
  uint32_t D.47734;
  struct switch_mutex_t * D.47733;
  struct switch_codec_interface_t * D.47732;
  const struct switch_codec_implementation_t * D.47731;
  int iftmp.104;
  uint32_t D.47726;
  uint32_t D.47725;
  struct switch_mutex_t * D.47724;
  struct switch_codec_interface_t * D.47723;
  const struct switch_codec_implementation_t * D.47722;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_write_frame";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  int frames;
  int samples;
  int bytes;
  switch_status_t status;
  int D.46120;
  uint32_t D.46119;
  uint32_t samples.128;
  uint32_t D.46117;
  uint32_t D.46116;
  uint32_t frames.127;
  uint32_t D.46114;
  int D.46112;
  uint32_t D.46111;
  uint32_t D.46108;
  unsigned int D.46105;
  unsigned int D.46104;
  struct switch_codec_t * D.46098;
  uint8_t D.46094;
  struct switch_rtp_t * D.46093;
  const struct switch_codec_implementation_t * D.46091;
  int D.46087;
  struct switch_channel_t * D.46086;
  switch_core_media_flag_t D.46081;

<bb 2>:
  # DEBUG status => 0
  # DEBUG bytes => 0
  # DEBUG samples => 0
  # DEBUG frames => 0
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1996, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 34>;
  else
    goto <bb 5>;

<bb 5>:
  D.46081_12 = smh_10->media_flags[0];
  if (D.46081_12 == 0)
    goto <bb 34>;
  else
    goto <bb 6>;

<bb 6>:
  engine_17 = &smh_10->engines[type_15(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_17
  goto <bb 9>;

<bb 7>:
  D.46086_50 = session_9(D)->channel;
  D.46087_51 = switch_channel_test_ready (D.46086_50, 1, 0);
  if (D.46087_51 != 0)
    goto <bb 8>;
  else
    goto <bb 34>;

<bb 8>:
  switch_sleep (10000);

<bb 9>:
  D.46091_18 = engine_17->read_codec.implementation;
  if (D.46091_18 == 0B)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 10>:
  D.46093_19 = engine_17->rtp_session;
  D.46094_20 = switch_rtp_ready (D.46093_19);
  if (D.46094_20 == 0)
    goto <bb 7>;
  else
    goto <bb 11>;

<bb 11>:
  D.46091_21 = engine_17->read_codec.implementation;
  if (D.46091_21 == 0B)
    goto <bb 34>;
  else
    goto <bb 12>;

<bb 12>:
  D.46098_22 = &engine_17->read_codec;
  # DEBUG codec => D.46098_22
  if (D.46098_22 != 0B)
    goto <bb 13>;
  else
    goto <bb 17>;

<bb 13>:
  D.47726_61 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
  D.47725_62 = D.47726_61 & 256;
  if (D.47725_62 != 0)
    goto <bb 14>;
  else
    goto <bb 17>;

<bb 14>:
  D.47724_63 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
  if (D.47724_63 != 0B)
    goto <bb 15>;
  else
    goto <bb 17>;

<bb 15>:
  D.47723_64 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
  if (D.47723_64 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.47722_65 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
  if (D.47722_65 != 0B)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:

<bb 18>:
  # iftmp.104_66 = PHI <1(16), 0(17)>
  if (iftmp.104_66 == 0)
    goto <bb 34>;
  else
    goto <bb 19>;

<bb 19>:
  D.46091_24 = engine_17->read_codec.implementation;
  if (D.46091_24 == 0B)
    goto <bb 34>;
  else
    goto <bb 20>;

<bb 20>:
  D.46098_25 = &engine_17->read_codec;
  # DEBUG codec => D.46098_25
  if (D.46098_25 != 0B)
    goto <bb 21>;
  else
    goto <bb 25>;

<bb 21>:
  D.47735_68 = MEM[(struct switch_codec_t *)engine_17 + 1524B].flags;
  D.47734_69 = D.47735_68 & 256;
  if (D.47734_69 != 0)
    goto <bb 22>;
  else
    goto <bb 25>;

<bb 22>:
  D.47733_70 = MEM[(struct switch_codec_t *)engine_17 + 1524B].mutex;
  if (D.47733_70 != 0B)
    goto <bb 23>;
  else
    goto <bb 25>;

<bb 23>:
  D.47732_71 = MEM[(struct switch_codec_t *)engine_17 + 1524B].codec_interface;
  if (D.47732_71 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.47731_72 = MEM[(struct switch_codec_t *)engine_17 + 1524B].implementation;
  if (D.47731_72 != 0B)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:

<bb 26>:
  # iftmp.104_73 = PHI <1(24), 0(25)>
  if (iftmp.104_73 == 0)
    goto <bb 34>;
  else
    goto <bb 27>;

<bb 27>:
  D.46104_28 = BIT_FIELD_REF <*frame_27(D), 32, 480>;
  D.46105_29 = D.46104_28 & 33;
  if (D.46105_29 == 0)
    goto <bb 28>;
  else
    goto <bb 31>;

<bb 28>:
  D.46108_30 = engine_17->read_impl.encoded_bytes_per_packet;
  if (D.46108_30 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.46108_31 = engine_17->read_impl.encoded_bytes_per_packet;
  bytes_32 = (int) D.46108_31;
  # DEBUG bytes => bytes_32
  D.46111_33 = frame_27(D)->datalen;
  D.46112_34 = (int) D.46111_33;
  frames_35 = D.46112_34 / bytes_32;
  # DEBUG frames => frames_35

<bb 30>:
  # frames_3 = PHI <frames_35(29), 1(28)>
  # DEBUG frames => frames_3
  D.46114_37 = engine_17->read_impl.samples_per_packet;
  frames.127_38 = (uint32_t) frames_3;
  D.46116_39 = D.46114_37 * frames.127_38;
  samples_40 = (int) D.46116_39;
  # DEBUG samples => samples_40

<bb 31>:
  # samples_2 = PHI <0(27), samples_40(30)>
  # DEBUG samples => samples_2
  D.46117_41 = engine_17->timestamp_send;
  samples.128_42 = (uint32_t) samples_2;
  D.46119_43 = D.46117_41 + samples.128_42;
  engine_17->timestamp_send = D.46119_43;
  D.46093_44 = engine_17->rtp_session;
  D.46120_45 = switch_rtp_write_frame (D.46093_44, frame_27(D));
  if (D.46120_45 < 0)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  # DEBUG status => 1

<bb 33>:
  # status_1 = PHI <0(31), 1(32)>
  # DEBUG status => status_1

<bb 34>:
  # status_4 = PHI <1(4), 1(5), 9(7), 9(18), 1(26), status_1(33), 9(11), 1(19)>
  return status_4;

}



;; Function switch_core_media_copy_t38_options (switch_core_media_copy_t38_options)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: channel_3 = switch_core_session_get_channel (session_2(D));

Marking useful stmt: # DEBUG channel => channel_3

Marking useful stmt: local_t38_options_4 = switch_channel_get_private (channel_3, "t38_options");

Marking useful stmt: # DEBUG local_t38_options => local_t38_options_4

Marking useful stmt: __assert_fail ("t38_options", "src/switch_core_media.c", 2052, &__PRETTY_FUNCTION__);

Marking useful stmt: local_t38_options_6 = switch_core_perform_session_alloc (session_2(D), 60, "src/switch_core_media.c", &__func__, 2055);

Marking useful stmt: # DEBUG local_t38_options => local_t38_options_6

Marking useful stmt: # DEBUG local_t38_options => local_t38_options_1

Marking useful stmt: local_t38_options_1->T38MaxBitRate = D.46061_7;

Marking useful stmt: local_t38_options_1->T38FaxFillBitRemoval = D.46062_8;

Marking useful stmt: local_t38_options_1->T38FaxTranscodingMMR = D.46063_9;

Marking useful stmt: local_t38_options_1->T38FaxTranscodingJBIG = D.46064_10;

Marking useful stmt: D.46066_12 = switch_core_perform_session_strdup (session_2(D), D.46065_11, "src/switch_core_media.c", &__func__, 2062);

Marking useful stmt: local_t38_options_1->T38FaxRateManagement = D.46066_12;

Marking useful stmt: local_t38_options_1->T38FaxMaxBuffer = D.46067_13;

Marking useful stmt: local_t38_options_1->T38FaxMaxDatagram = D.46068_14;

Marking useful stmt: D.46070_16 = switch_core_perform_session_strdup (session_2(D), D.46069_15, "src/switch_core_media.c", &__func__, 2065);

Marking useful stmt: local_t38_options_1->T38FaxUdpEC = D.46070_16;

Marking useful stmt: D.46072_18 = switch_core_perform_session_strdup (session_2(D), D.46071_17, "src/switch_core_media.c", &__func__, 2066);

Marking useful stmt: local_t38_options_1->T38VendorInfo = D.46072_18;

Marking useful stmt: D.46074_20 = switch_core_perform_session_strdup (session_2(D), D.46073_19, "src/switch_core_media.c", &__func__, 2067);

Marking useful stmt: local_t38_options_1->remote_ip = D.46074_20;

Marking useful stmt: local_t38_options_1->remote_port = D.46075_21;

Marking useful stmt: switch_channel_set_private (channel_3, "t38_options", local_t38_options_1);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (t38_options_5(D) == 0B)

processing: if (t38_options_5(D) == 0B)

processing: switch_channel_set_private (channel_3, "t38_options", local_t38_options_1);

marking necessary through local_t38_options_1 stmt local_t38_options_1 = PHI <local_t38_options_4(4), local_t38_options_6(5)>
processing: local_t38_options_1 = PHI <local_t38_options_4(4), local_t38_options_6(5)>

Marking useful stmt: if (local_t38_options_4 == 0B)

processing: if (local_t38_options_4 == 0B)

processing: local_t38_options_1->remote_port = D.46075_21;

marking necessary through D.46075_21 stmt D.46075_21 = t38_options_5(D)->remote_port;
processing: D.46075_21 = t38_options_5(D)->remote_port;

processing: local_t38_options_1->remote_ip = D.46074_20;

processing: D.46074_20 = switch_core_perform_session_strdup (session_2(D), D.46073_19, "src/switch_core_media.c", &__func__, 2067);

marking necessary through D.46073_19 stmt D.46073_19 = t38_options_5(D)->remote_ip;
processing: D.46073_19 = t38_options_5(D)->remote_ip;

processing: local_t38_options_1->T38VendorInfo = D.46072_18;

processing: D.46072_18 = switch_core_perform_session_strdup (session_2(D), D.46071_17, "src/switch_core_media.c", &__func__, 2066);

marking necessary through D.46071_17 stmt D.46071_17 = t38_options_5(D)->T38VendorInfo;
processing: D.46071_17 = t38_options_5(D)->T38VendorInfo;

processing: local_t38_options_1->T38FaxUdpEC = D.46070_16;

processing: D.46070_16 = switch_core_perform_session_strdup (session_2(D), D.46069_15, "src/switch_core_media.c", &__func__, 2065);

marking necessary through D.46069_15 stmt D.46069_15 = t38_options_5(D)->T38FaxUdpEC;
processing: D.46069_15 = t38_options_5(D)->T38FaxUdpEC;

processing: local_t38_options_1->T38FaxMaxDatagram = D.46068_14;

marking necessary through D.46068_14 stmt D.46068_14 = t38_options_5(D)->T38FaxMaxDatagram;
processing: D.46068_14 = t38_options_5(D)->T38FaxMaxDatagram;

processing: local_t38_options_1->T38FaxMaxBuffer = D.46067_13;

marking necessary through D.46067_13 stmt D.46067_13 = t38_options_5(D)->T38FaxMaxBuffer;
processing: D.46067_13 = t38_options_5(D)->T38FaxMaxBuffer;

processing: local_t38_options_1->T38FaxRateManagement = D.46066_12;

processing: D.46066_12 = switch_core_perform_session_strdup (session_2(D), D.46065_11, "src/switch_core_media.c", &__func__, 2062);

marking necessary through D.46065_11 stmt D.46065_11 = t38_options_5(D)->T38FaxRateManagement;
processing: D.46065_11 = t38_options_5(D)->T38FaxRateManagement;

processing: local_t38_options_1->T38FaxTranscodingJBIG = D.46064_10;

marking necessary through D.46064_10 stmt D.46064_10 = t38_options_5(D)->T38FaxTranscodingJBIG;
processing: D.46064_10 = t38_options_5(D)->T38FaxTranscodingJBIG;

processing: local_t38_options_1->T38FaxTranscodingMMR = D.46063_9;

marking necessary through D.46063_9 stmt D.46063_9 = t38_options_5(D)->T38FaxTranscodingMMR;
processing: D.46063_9 = t38_options_5(D)->T38FaxTranscodingMMR;

processing: local_t38_options_1->T38FaxFillBitRemoval = D.46062_8;

marking necessary through D.46062_8 stmt D.46062_8 = t38_options_5(D)->T38FaxFillBitRemoval;
processing: D.46062_8 = t38_options_5(D)->T38FaxFillBitRemoval;

processing: local_t38_options_1->T38MaxBitRate = D.46061_7;

marking necessary through D.46061_7 stmt D.46061_7 = t38_options_5(D)->T38MaxBitRate;
processing: D.46061_7 = t38_options_5(D)->T38MaxBitRate;

processing: local_t38_options_6 = switch_core_perform_session_alloc (session_2(D), 60, "src/switch_core_media.c", &__func__, 2055);

processing: __assert_fail ("t38_options", "src/switch_core_media.c", 2052, &__PRETTY_FUNCTION__);

processing: local_t38_options_4 = switch_channel_get_private (channel_3, "t38_options");

processing: channel_3 = switch_core_session_get_channel (session_2(D));


Eliminating unnecessary statements:
Removed 0 of 38 statements (0%)
Removed 0 of 2 PHI nodes (0%)
switch_core_media_copy_t38_options (struct switch_t38_options_t * t38_options, struct switch_core_session_t * session)
{
  static const char __func__[35] = "switch_core_media_copy_t38_options";
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_copy_t38_options";
  struct switch_t38_options_t * local_t38_options;
  struct switch_channel_t * channel;
  uint16_t D.46075;
  char * D.46074;
  const char * D.46073;
  char * D.46072;
  const char * D.46071;
  char * D.46070;
  const char * D.46069;
  uint32_t D.46068;
  uint32_t D.46067;
  char * D.46066;
  const char * D.46065;
  switch_bool_t D.46064;
  switch_bool_t D.46063;
  switch_bool_t D.46062;
  uint32_t D.46061;

<bb 2>:
  channel_3 = switch_core_session_get_channel (session_2(D));
  # DEBUG channel => channel_3
  local_t38_options_4 = switch_channel_get_private (channel_3, "t38_options");
  # DEBUG local_t38_options => local_t38_options_4
  if (t38_options_5(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("t38_options", "src/switch_core_media.c", 2052, &__PRETTY_FUNCTION__);

<bb 4>:
  if (local_t38_options_4 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  local_t38_options_6 = switch_core_perform_session_alloc (session_2(D), 60, "src/switch_core_media.c", &__func__, 2055);
  # DEBUG local_t38_options => local_t38_options_6

<bb 6>:
  # local_t38_options_1 = PHI <local_t38_options_4(4), local_t38_options_6(5)>
  # DEBUG local_t38_options => local_t38_options_1
  D.46061_7 = t38_options_5(D)->T38MaxBitRate;
  local_t38_options_1->T38MaxBitRate = D.46061_7;
  D.46062_8 = t38_options_5(D)->T38FaxFillBitRemoval;
  local_t38_options_1->T38FaxFillBitRemoval = D.46062_8;
  D.46063_9 = t38_options_5(D)->T38FaxTranscodingMMR;
  local_t38_options_1->T38FaxTranscodingMMR = D.46063_9;
  D.46064_10 = t38_options_5(D)->T38FaxTranscodingJBIG;
  local_t38_options_1->T38FaxTranscodingJBIG = D.46064_10;
  D.46065_11 = t38_options_5(D)->T38FaxRateManagement;
  D.46066_12 = switch_core_perform_session_strdup (session_2(D), D.46065_11, "src/switch_core_media.c", &__func__, 2062);
  local_t38_options_1->T38FaxRateManagement = D.46066_12;
  D.46067_13 = t38_options_5(D)->T38FaxMaxBuffer;
  local_t38_options_1->T38FaxMaxBuffer = D.46067_13;
  D.46068_14 = t38_options_5(D)->T38FaxMaxDatagram;
  local_t38_options_1->T38FaxMaxDatagram = D.46068_14;
  D.46069_15 = t38_options_5(D)->T38FaxUdpEC;
  D.46070_16 = switch_core_perform_session_strdup (session_2(D), D.46069_15, "src/switch_core_media.c", &__func__, 2065);
  local_t38_options_1->T38FaxUdpEC = D.46070_16;
  D.46071_17 = t38_options_5(D)->T38VendorInfo;
  D.46072_18 = switch_core_perform_session_strdup (session_2(D), D.46071_17, "src/switch_core_media.c", &__func__, 2066);
  local_t38_options_1->T38VendorInfo = D.46072_18;
  D.46073_19 = t38_options_5(D)->remote_ip;
  D.46074_20 = switch_core_perform_session_strdup (session_2(D), D.46073_19, "src/switch_core_media.c", &__func__, 2067);
  local_t38_options_1->remote_ip = D.46074_20;
  D.46075_21 = t38_options_5(D)->remote_port;
  local_t38_options_1->remote_port = D.46075_21;
  switch_channel_set_private (channel_3, "t38_options", local_t38_options_1);
  return;

}



;; Function switch_core_media_process_t38_passthru (switch_core_media_process_t38_passthru)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 12 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 473, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: # DEBUG D#6 => &smh_3->engines

Marking useful stmt: # DEBUG a_engine => D#6

Marking useful stmt: remote_host_7 = switch_rtp_get_remote_host (D.47110_6);

Marking useful stmt: # DEBUG remote_host => remote_host_7

Marking useful stmt: remote_port_9 = switch_rtp_get_remote_port (D.47110_8);

Marking useful stmt: # DEBUG remote_port => remote_port_9

Marking useful stmt: D.47113_13 = switch_core_perform_session_strdup (session_2(D), D.47112_12, "src/switch_core_media.c", &__func__, 484);

Marking useful stmt: D.47111_10->remote_sdp_ip = D.47113_13;

Marking useful stmt: D.47111_14->remote_sdp_port = D.47114_15;

Marking useful stmt: D.47126_25 = switch_channel_get_name (D.47125_24);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 489, session_2(D), 7, "Audio params are unchanged for %s.\n", D.47126_25);

Marking useful stmt: D.47127_27 = switch_channel_get_name (D.47125_26);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 495, session_2(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.47127_27, remote_host_7, D.47128_28, D.47121_30, D.47129_33);

Marking useful stmt: switch_snprintf (&tmp, 32, "%d", D.47129_36);

Marking useful stmt: switch_channel_set_variable_var_check (D.47125_37, "remote_media_ip", D.47121_39, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.47125_40, "remote_media_port", &tmp, 1);

Marking useful stmt: D.47130_46 = switch_rtp_set_remote_address (D.47110_41, D.47121_43, D.47123_45, 0, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 505, session_2(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.171_47);

Marking useful stmt: switch_channel_perform_hangup (D.47125_48, "src/switch_core_media.c", &__func__, 506, 88);

Marking useful stmt: switch_core_media_copy_t38_options (t38_options_11(D), other_session_49(D));

Marking useful stmt: return D.47109_1;


Processing worklist:
processing: return D.47109_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.47109_1 stmt D.47109_1 = PHI <1(4), 0(11)>
processing: D.47109_1 = PHI <1(4), 0(11)>

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

marking necessary through .MEM_53 stmt tmp = "";
processing: tmp = "";

processing: if (session_2(D) == 0B)

processing: switch_core_media_copy_t38_options (t38_options_11(D), other_session_49(D));

marking necessary through .MEM_61 stmt err = 0B;
processing: err = 0B;

Marking useful stmt: if (D.47119_18 != 0)

Marking useful stmt: if (D.38429_21 == 0)

Marking useful stmt: if (D.47123_23 == remote_port_9)

processing: if (D.47123_23 == remote_port_9)

marking necessary through D.47123_23 stmt D.47123_23 = D.47111_22->remote_sdp_port;
processing: D.47123_23 = D.47111_22->remote_sdp_port;

marking necessary through D.47111_22 stmt D.47111_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: if (D.38429_21 == 0)

marking necessary through D.38429_21 stmt D.38429_21 = __builtin_strcmp (remote_host_7, D.47121_20);
processing: D.38429_21 = __builtin_strcmp (remote_host_7, D.47121_20);

marking necessary through D.47121_20 stmt D.47121_20 = D.47111_19->remote_sdp_ip;
processing: D.47121_20 = D.47111_19->remote_sdp_ip;

marking necessary through D.47111_19 stmt D.47111_19 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_19 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: if (D.47119_18 != 0)

marking necessary through D.47119_18 stmt D.47119_18 = D.47117_16 && D.47118_17;
processing: D.47119_18 = D.47117_16 && D.47118_17;

marking necessary through D.47117_16 stmt D.47117_16 = remote_host_7 != 0B;
marking necessary through D.47118_17 stmt D.47118_17 = remote_port_9 != 0;
processing: D.47118_17 = remote_port_9 != 0;

processing: D.47117_16 = remote_host_7 != 0B;

processing: switch_channel_perform_hangup (D.47125_48, "src/switch_core_media.c", &__func__, 506, 88);

Marking useful stmt: if (D.47130_46 != 0)

marking necessary through D.47125_48 stmt D.47125_48 = session_2(D)->channel;
processing: D.47125_48 = session_2(D)->channel;

processing: if (D.47130_46 != 0)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 505, session_2(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.171_47);

marking necessary through err.171_47 stmt err.171_47 = err;
processing: err.171_47 = err;

processing: D.47130_46 = switch_rtp_set_remote_address (D.47110_41, D.47121_43, D.47123_45, 0, 1, &err);

marking necessary through D.47110_41 stmt D.47110_41 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
marking necessary through D.47121_43 stmt D.47121_43 = D.47111_42->remote_sdp_ip;
marking necessary through D.47123_45 stmt D.47123_45 = D.47111_44->remote_sdp_port;
processing: D.47123_45 = D.47111_44->remote_sdp_port;

marking necessary through D.47111_44 stmt D.47111_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47121_43 = D.47111_42->remote_sdp_ip;

marking necessary through D.47111_42 stmt D.47111_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47110_41 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;

processing: switch_channel_set_variable_var_check (D.47125_40, "remote_media_port", &tmp, 1);

marking necessary through D.47125_40 stmt D.47125_40 = session_2(D)->channel;
processing: D.47125_40 = session_2(D)->channel;

processing: switch_channel_set_variable_var_check (D.47125_37, "remote_media_ip", D.47121_39, 1);

marking necessary through D.47125_37 stmt D.47125_37 = session_2(D)->channel;
marking necessary through D.47121_39 stmt D.47121_39 = D.47111_38->remote_sdp_ip;
processing: D.47121_39 = D.47111_38->remote_sdp_ip;

marking necessary through D.47111_38 stmt D.47111_38 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_38 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47125_37 = session_2(D)->channel;

processing: switch_snprintf (&tmp, 32, "%d", D.47129_36);

marking necessary through D.47129_36 stmt D.47129_36 = (int) D.47123_35;
processing: D.47129_36 = (int) D.47123_35;

marking necessary through D.47123_35 stmt D.47123_35 = D.47111_34->remote_sdp_port;
processing: D.47123_35 = D.47111_34->remote_sdp_port;

marking necessary through D.47111_34 stmt D.47111_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 495, session_2(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.47127_27, remote_host_7, D.47128_28, D.47121_30, D.47129_33);

marking necessary through D.47128_28 stmt D.47128_28 = (int) remote_port_9;
marking necessary through D.47121_30 stmt D.47121_30 = D.47111_29->remote_sdp_ip;
marking necessary through D.47129_33 stmt D.47129_33 = (int) D.47123_32;
processing: D.47129_33 = (int) D.47123_32;

marking necessary through D.47123_32 stmt D.47123_32 = D.47111_31->remote_sdp_port;
processing: D.47123_32 = D.47111_31->remote_sdp_port;

marking necessary through D.47111_31 stmt D.47111_31 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_31 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47121_30 = D.47111_29->remote_sdp_ip;

marking necessary through D.47111_29 stmt D.47111_29 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_29 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47128_28 = (int) remote_port_9;

processing: D.47127_27 = switch_channel_get_name (D.47125_26);

marking necessary through D.47125_26 stmt D.47125_26 = session_2(D)->channel;
processing: D.47125_26 = session_2(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 489, session_2(D), 7, "Audio params are unchanged for %s.\n", D.47126_25);

processing: D.47126_25 = switch_channel_get_name (D.47125_24);

marking necessary through D.47125_24 stmt D.47125_24 = session_2(D)->channel;
processing: D.47125_24 = session_2(D)->channel;

processing: D.47111_14->remote_sdp_port = D.47114_15;

marking necessary through D.47111_14 stmt D.47111_14 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
marking necessary through D.47114_15 stmt D.47114_15 = t38_options_11(D)->remote_port;
processing: D.47114_15 = t38_options_11(D)->remote_port;

processing: D.47111_14 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47111_10->remote_sdp_ip = D.47113_13;

marking necessary through D.47111_10 stmt D.47111_10 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
processing: D.47111_10 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;

processing: D.47113_13 = switch_core_perform_session_strdup (session_2(D), D.47112_12, "src/switch_core_media.c", &__func__, 484);

marking necessary through D.47112_12 stmt D.47112_12 = t38_options_11(D)->remote_ip;
processing: D.47112_12 = t38_options_11(D)->remote_ip;

processing: remote_port_9 = switch_rtp_get_remote_port (D.47110_8);

marking necessary through D.47110_8 stmt D.47110_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
processing: D.47110_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;

processing: remote_host_7 = switch_rtp_get_remote_host (D.47110_6);

marking necessary through D.47110_6 stmt D.47110_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
processing: D.47110_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 473, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 68 statements (0%)
Removed 0 of 2 PHI nodes (0%)
switch_core_media_process_t38_passthru (struct switch_core_session_t * session, struct switch_core_session_t * other_session, struct switch_t38_options_t * t38_options)
{
  const char * err;
  static const char __func__[39] = "switch_core_media_process_t38_passthru";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_process_t38_passthru";
  struct switch_media_handle_t * smh;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  const char * err.171;
  switch_status_t D.47130;
  int D.47129;
  int D.47128;
  char * D.47127;
  char * D.47126;
  struct switch_channel_t * D.47125;
  switch_port_t D.47123;
  char * D.47121;
  int D.38429;
  _Bool D.47119;
  _Bool D.47118;
  _Bool D.47117;
  uint16_t D.47114;
  char * D.47113;
  const char * D.47112;
  struct payload_map_t * D.47111;
  struct switch_rtp_t * D.47110;
  switch_status_t D.47109;

<bb 2>:
  tmp = "";
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 473, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#6 => &smh_3->engines
  # DEBUG a_engine => D#6
  D.47110_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  remote_host_7 = switch_rtp_get_remote_host (D.47110_6);
  # DEBUG remote_host => remote_host_7
  D.47110_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  remote_port_9 = switch_rtp_get_remote_port (D.47110_8);
  # DEBUG remote_port => remote_port_9
  D.47111_10 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47112_12 = t38_options_11(D)->remote_ip;
  D.47113_13 = switch_core_perform_session_strdup (session_2(D), D.47112_12, "src/switch_core_media.c", &__func__, 484);
  D.47111_10->remote_sdp_ip = D.47113_13;
  D.47111_14 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47114_15 = t38_options_11(D)->remote_port;
  D.47111_14->remote_sdp_port = D.47114_15;
  D.47117_16 = remote_host_7 != 0B;
  D.47118_17 = remote_port_9 != 0;
  D.47119_18 = D.47117_16 && D.47118_17;
  if (D.47119_18 != 0)
    goto <bb 6>;
  else
    goto <bb 9>;

<bb 6>:
  D.47111_19 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_20 = D.47111_19->remote_sdp_ip;
  D.38429_21 = __builtin_strcmp (remote_host_7, D.47121_20);
  if (D.38429_21 == 0)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 7>:
  D.47111_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_23 = D.47111_22->remote_sdp_port;
  if (D.47123_23 == remote_port_9)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.47125_24 = session_2(D)->channel;
  D.47126_25 = switch_channel_get_name (D.47125_24);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 489, session_2(D), 7, "Audio params are unchanged for %s.\n", D.47126_25);
  goto <bb 11>;

<bb 9>:
  err = 0B;
  D.47125_26 = session_2(D)->channel;
  D.47127_27 = switch_channel_get_name (D.47125_26);
  D.47128_28 = (int) remote_port_9;
  D.47111_29 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_30 = D.47111_29->remote_sdp_ip;
  D.47111_31 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_32 = D.47111_31->remote_sdp_port;
  D.47129_33 = (int) D.47123_32;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 495, session_2(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.47127_27, remote_host_7, D.47128_28, D.47121_30, D.47129_33);
  D.47111_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_35 = D.47111_34->remote_sdp_port;
  D.47129_36 = (int) D.47123_35;
  switch_snprintf (&tmp, 32, "%d", D.47129_36);
  D.47125_37 = session_2(D)->channel;
  D.47111_38 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_39 = D.47111_38->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.47125_37, "remote_media_ip", D.47121_39, 1);
  D.47125_40 = session_2(D)->channel;
  switch_channel_set_variable_var_check (D.47125_40, "remote_media_port", &tmp, 1);
  D.47110_41 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].rtp_session;
  D.47111_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47121_43 = D.47111_42->remote_sdp_ip;
  D.47111_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 80B].cur_payload_map;
  D.47123_45 = D.47111_44->remote_sdp_port;
  D.47130_46 = switch_rtp_set_remote_address (D.47110_41, D.47121_43, D.47123_45, 0, 1, &err);
  if (D.47130_46 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  err.171_47 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 505, session_2(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.171_47);
  D.47125_48 = session_2(D)->channel;
  switch_channel_perform_hangup (D.47125_48, "src/switch_core_media.c", &__func__, 506, 88);

<bb 11>:
  switch_core_media_copy_t38_options (t38_options_11(D), other_session_49(D));

<bb 12>:
  # D.47109_1 = PHI <1(4), 0(11)>
  return D.47109_1;

}



;; Function switch_core_media_get_offered_pt (switch_core_media_get_offered_pt)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 10 6 7 8 9 12 11
;;
;; Loop 1
;;  header 12, latch 9
;;  depth 1, outer 0
;;  nodes: 12 9 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 5 }
;; 5 succs { 11 10 }
;; 10 succs { 12 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 12 }
;; 12 succs { 6 11 }
;; 11 succs { 1 }
Marking useful stmt: # DEBUG i => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2081, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_5

Marking useful stmt: # DEBUG imp => imp_10

Marking useful stmt: *pt_17(D) = D.46053_16;

Marking useful stmt: # DEBUG i => i_19

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: return D.46043_2;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46055_9)
(get_scalar_evolution 
  (scalar = D.46055_9)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 10 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.46055_9)
(get_scalar_evolution 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
(set_scalar_evolution 
  instantiated_below = 10 
  (scalar = D.46055_9)
  (scalar_evolution = D.46055_9))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.46046_13 == 0)

Marking useful stmt: if (D.46049_14 == D.46050_15)


Processing worklist:
processing: if (D.46049_14 == D.46050_15)

marking necessary through D.46049_14 stmt D.46049_14 = imp_10->actual_samples_per_second;
marking necessary through D.46050_15 stmt D.46050_15 = mimp_6(D)->actual_samples_per_second;
processing: D.46050_15 = mimp_6(D)->actual_samples_per_second;

processing: D.46049_14 = imp_10->actual_samples_per_second;

marking necessary through imp_10 stmt imp_10 = smh_5->codecs[i_1];
processing: imp_10 = smh_5->codecs[i_1];

Marking useful stmt: if (D.46055_9 > i_1)

marking necessary through smh_5 stmt smh_5 = session_4(D)->media_handle;
marking necessary through i_1 stmt i_1 = PHI <i_20(10), i_19(9)>
processing: i_1 = PHI <i_20(10), i_19(9)>

Marking useful stmt: if (mimp_6(D) == 0B)

marking necessary through i_20 stmt i_20 = PHI <0(5)>
marking necessary through i_19 stmt i_19 = i_1 + 1;
processing: i_19 = i_1 + 1;

processing: i_20 = PHI <0(5)>

processing: if (mimp_6(D) == 0B)

Marking useful stmt: if (smh_5 == 0B)

processing: if (smh_5 == 0B)

Marking useful stmt: if (session_4(D) == 0B)

processing: if (session_4(D) == 0B)

processing: smh_5 = session_4(D)->media_handle;

processing: if (D.46055_9 > i_1)

marking necessary through D.46055_9 stmt D.46055_9 = D.46054_8->num_codecs;
processing: D.46055_9 = D.46054_8->num_codecs;

marking necessary through D.46054_8 stmt D.46054_8 = smh_5->mparams;
processing: D.46054_8 = smh_5->mparams;

processing: if (D.46046_13 == 0)

marking necessary through D.46046_13 stmt D.46046_13 = strcasecmp (D.46044_11, D.46045_12);
processing: D.46046_13 = strcasecmp (D.46044_11, D.46045_12);

marking necessary through D.46044_11 stmt D.46044_11 = imp_10->iananame;
marking necessary through D.46045_12 stmt D.46045_12 = mimp_6(D)->iananame;
processing: D.46045_12 = mimp_6(D)->iananame;

processing: D.46044_11 = imp_10->iananame;

processing: return D.46043_2;

marking necessary through D.46043_2 stmt D.46043_2 = PHI <1(5), 0(8), 1(12), 1(4)>
processing: D.46043_2 = PHI <1(5), 0(8), 1(12), 1(4)>

processing: *pt_17(D) = D.46053_16;

marking necessary through D.46053_16 stmt D.46053_16 = smh_5->ianacodes[i_1];
processing: D.46053_16 = smh_5->ianacodes[i_1];

processing: __assert_fail ("session", "src/switch_core_media.c", 2081, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 25 statements (0%)
Removed 0 of 3 PHI nodes (0%)
switch_core_media_get_offered_pt (struct switch_core_session_t * session, const struct switch_codec_implementation_t * mimp, switch_payload_t * pt)
{
  const struct switch_codec_implementation_t * imp;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_get_offered_pt";
  struct switch_media_handle_t * smh;
  int i;
  int D.46055;
  struct switch_core_media_params_t * D.46054;
  switch_payload_t D.46053;
  const uint32_t D.46050;
  const uint32_t D.46049;
  int D.46046;
  char * const D.46045;
  char * const D.46044;
  switch_status_t D.46043;

<bb 2>:
  # DEBUG i => 0
  if (session_4(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2081, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_5 = session_4(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

<bb 5>:
  if (mimp_6(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:
  # i_20 = PHI <0(5)>
  goto <bb 12>;

<bb 6>:
  imp_10 = smh_5->codecs[i_1];
  # DEBUG imp => imp_10
  D.46044_11 = imp_10->iananame;
  D.46045_12 = mimp_6(D)->iananame;
  D.46046_13 = strcasecmp (D.46044_11, D.46045_12);
  if (D.46046_13 == 0)
    goto <bb 7>;
  else
    goto <bb 9>;

<bb 7>:
  D.46049_14 = imp_10->actual_samples_per_second;
  D.46050_15 = mimp_6(D)->actual_samples_per_second;
  if (D.46049_14 == D.46050_15)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.46053_16 = smh_5->ianacodes[i_1];
  *pt_17(D) = D.46053_16;
  goto <bb 11>;

<bb 9>:
  i_19 = i_1 + 1;
  # DEBUG i => i_19

<bb 12>:
  # i_1 = PHI <i_20(10), i_19(9)>
  # DEBUG i => i_1
  D.46054_8 = smh_5->mparams;
  D.46055_9 = D.46054_8->num_codecs;
  if (D.46055_9 > i_1)
    goto <bb 6>;
  else
    goto <bb 11>;

<bb 11>:
  # D.46043_2 = PHI <1(5), 0(8), 1(12), 1(4)>
  return D.46043_2;

}



;; Function switch_core_media_set_video_codec (switch_core_media_set_video_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 26 5 }
;; 5 succs { 26 6 }
;; 6 succs { 7 19 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 19 }
;; 14 succs { 26 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 26 }
;; 19 succs { 20 21 }
;; 20 succs { 26 }
;; 21 succs { 22 23 }
;; 22 succs { 26 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2109, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: # DEBUG D#7 => &smh_3->engines[1]

Marking useful stmt: # DEBUG v_engine => D#7

Marking useful stmt: # DEBUG codec => D.46001_9

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2128, session_2(D), 7, "Changing Codec from %s to %s\n", D.46010_26, D.46012_28);

Marking useful stmt: switch_core_codec_destroy (D.46001_29);

Marking useful stmt: switch_core_codec_destroy (D.46017_30);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2133, session_2(D), 7, "Already using %s\n", D.46010_23);

Marking useful stmt: D.46019_38 = switch_core_session_get_pool (session_2(D));

Marking useful stmt: D.46020_39 = switch_core_codec_init_with_bitrate (D.46001_31, D.46012_33, D.46018_35, D.46016_37, 0, 1, 0, 3, 0B, D.46019_38);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2149, session_2(D), 3, "Can\'t load codec?\n");

Marking useful stmt: D.46023_48 = switch_core_session_get_pool (session_2(D));

Marking useful stmt: D.46024_49 = switch_core_codec_init_with_bitrate (D.46017_41, D.46012_43, D.46018_45, D.46016_47, 0, 1, 0, 3, 0B, D.46023_48);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2160, session_2(D), 3, "Can\'t load codec?\n");

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.rate = D.46016_52;

Marking useful stmt: D.46028_54 = switch_channel_get_name (D.46027_53);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2164, session_2(D), 7, "Set VIDEO Codec %s %s/%ld %d ms\n", D.46028_54, D.46012_56, D.46016_58, D.46029_60);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.codec = D.46001_61;

Marking useful stmt: D.46031_63 = switch_core_perform_session_strdup (session_2(D), D.46030_62, "src/switch_core_media.c", &__func__, 2169);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out = D.46031_63;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.agreed_pt = D.46032_65;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.agreed_pt = D.46032_67;

Marking useful stmt: switch_core_session_set_video_read_codec (session_2(D), D.46001_68);

Marking useful stmt: switch_core_session_set_video_write_codec (session_2(D), D.46017_69);

Marking useful stmt: switch_channel_set_variable_printf (D.46027_70, "rtp_last_video_codec_string", "%s@%dh", D.46012_72, D.46016_74);

Marking useful stmt: D.46034_76 = switch_rtp_ready (D.46033_75);

Marking useful stmt: switch_rtp_set_default_payload (D.46033_77, D.46032_79);

Marking useful stmt: switch_core_session_perform_receive_message (session_2(D), &msg, "src/switch_core_media.c", &__func__, 2191);

Marking useful stmt: switch_channel_set_variable_var_check (D.46027_80, "rtp_use_video_codec_name", D.46012_82, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.46027_83, "rtp_use_video_codec_fmtp", D.46018_85, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.46027_86, "rtp_use_video_codec_rate", "%d", D.46016_88);

Marking useful stmt: switch_channel_set_variable_printf (D.46027_89, "rtp_use_video_codec_ptime", "%d", 0);

Marking useful stmt: return D.45994_1;


Processing worklist:
processing: return D.45994_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.45994_1 stmt D.45994_1 = PHI <1(4), 1(5), 0(14), 0(18), 1(20), 1(22), 0(25)>
processing: D.45994_1 = PHI <1(4), 1(5), 0(14), 0(18), 1(20), 1(22), 0(25)>

Marking useful stmt: if (smh_3 == 0B)

Marking useful stmt: if (iftmp.104_130 != 0)

Marking useful stmt: if (D.46015_19 != D.46016_21)

Marking useful stmt: if (D.46020_39 != 0)

Marking useful stmt: if (D.46024_49 != 0)

processing: if (D.46024_49 != 0)

processing: if (D.46020_39 != 0)

Marking useful stmt: if (D.45998_8 != 0B)

Marking useful stmt: if (D.46013_17 != 0)

processing: if (D.46013_17 != 0)

Marking useful stmt: if (force_11(D) == 0)

marking necessary through D.46013_17 stmt D.46013_17 = strcasecmp (D.46010_14, D.46012_16);
processing: D.46013_17 = strcasecmp (D.46010_14, D.46012_16);

marking necessary through D.46010_14 stmt D.46010_14 = D.45998_13->iananame;
marking necessary through D.46012_16 stmt D.46012_16 = D.46011_15->rm_encoding;
processing: D.46012_16 = D.46011_15->rm_encoding;

marking necessary through D.46011_15 stmt D.46011_15 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_15 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: D.46010_14 = D.45998_13->iananame;

marking necessary through D.45998_13 stmt D.45998_13 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
processing: D.45998_13 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;

processing: if (force_11(D) == 0)

processing: if (D.45998_8 != 0B)

Marking useful stmt: if (D.45995_6 == 0)

marking necessary through D.45998_8 stmt D.45998_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
processing: D.45998_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;

processing: if (D.45995_6 == 0)

marking necessary through D.45995_6 stmt D.45995_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].codec_negotiated;
processing: D.45995_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].codec_negotiated;

processing: if (D.46015_19 != D.46016_21)

marking necessary through D.46015_19 stmt D.46015_19 = D.45998_18->samples_per_second;
marking necessary through D.46016_21 stmt D.46016_21 = D.46011_20->rm_rate;
processing: D.46016_21 = D.46011_20->rm_rate;

marking necessary through D.46011_20 stmt D.46011_20 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_20 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46015_19 = D.45998_18->samples_per_second;

marking necessary through D.45998_18 stmt D.45998_18 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
processing: D.45998_18 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;

processing: if (iftmp.104_130 != 0)

marking necessary through iftmp.104_130 stmt iftmp.104_130 = PHI <1(11), 0(12)>
processing: iftmp.104_130 = PHI <1(11), 0(12)>

Marking useful stmt: if (D.47745_128 != 0B)

Marking useful stmt: if (D.46001_9 != 0B)

Marking useful stmt: if (D.47747_126 != 0)

Marking useful stmt: if (D.47746_127 != 0B)

Marking useful stmt: if (D.47744_129 != 0B)

processing: if (D.47744_129 != 0B)

marking necessary through D.47744_129 stmt D.47744_129 = MEM[(struct switch_codec_t *)smh_3 + 13020B].implementation;
processing: D.47744_129 = MEM[(struct switch_codec_t *)smh_3 + 13020B].implementation;

processing: if (D.47746_127 != 0B)

marking necessary through D.47746_127 stmt D.47746_127 = MEM[(struct switch_codec_t *)smh_3 + 13020B].mutex;
processing: D.47746_127 = MEM[(struct switch_codec_t *)smh_3 + 13020B].mutex;

processing: if (D.47747_126 != 0)

marking necessary through D.47747_126 stmt D.47747_126 = D.47748_125 & 256;
processing: D.47747_126 = D.47748_125 & 256;

marking necessary through D.47748_125 stmt D.47748_125 = MEM[(struct switch_codec_t *)smh_3 + 13020B].flags;
processing: D.47748_125 = MEM[(struct switch_codec_t *)smh_3 + 13020B].flags;

processing: if (D.46001_9 != 0B)

marking necessary through D.46001_9 stmt D.46001_9 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
processing: D.46001_9 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;

processing: if (D.47745_128 != 0B)

marking necessary through D.47745_128 stmt D.47745_128 = MEM[(struct switch_codec_t *)smh_3 + 13020B].codec_interface;
processing: D.47745_128 = MEM[(struct switch_codec_t *)smh_3 + 13020B].codec_interface;

processing: if (smh_3 == 0B)

processing: if (session_2(D) == 0B)

processing: switch_channel_set_variable_printf (D.46027_89, "rtp_use_video_codec_ptime", "%d", 0);

marking necessary through D.46027_89 stmt D.46027_89 = session_2(D)->channel;
marking necessary through .MEM_118 stmt msg.message_id = 17;
marking necessary through .MEM_117 stmt msg.from = "src/switch_core_media.c";
marking necessary through .MEM_116 stmt msg = {};
processing: msg = {};

Marking useful stmt: if (D.46034_76 != 0)

processing: if (D.46034_76 != 0)

processing: msg.from = "src/switch_core_media.c";

processing: msg.message_id = 17;

processing: D.46027_89 = session_2(D)->channel;

processing: switch_channel_set_variable_printf (D.46027_86, "rtp_use_video_codec_rate", "%d", D.46016_88);

marking necessary through D.46027_86 stmt D.46027_86 = session_2(D)->channel;
marking necessary through D.46016_88 stmt D.46016_88 = D.46011_87->rm_rate;
processing: D.46016_88 = D.46011_87->rm_rate;

marking necessary through D.46011_87 stmt D.46011_87 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_87 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46027_86 = session_2(D)->channel;

processing: switch_channel_set_variable_var_check (D.46027_83, "rtp_use_video_codec_fmtp", D.46018_85, 1);

marking necessary through D.46027_83 stmt D.46027_83 = session_2(D)->channel;
marking necessary through D.46018_85 stmt D.46018_85 = D.46011_84->rm_fmtp;
processing: D.46018_85 = D.46011_84->rm_fmtp;

marking necessary through D.46011_84 stmt D.46011_84 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_84 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46027_83 = session_2(D)->channel;

processing: switch_channel_set_variable_var_check (D.46027_80, "rtp_use_video_codec_name", D.46012_82, 1);

marking necessary through D.46027_80 stmt D.46027_80 = session_2(D)->channel;
marking necessary through D.46012_82 stmt D.46012_82 = D.46011_81->rm_encoding;
processing: D.46012_82 = D.46011_81->rm_encoding;

marking necessary through D.46011_81 stmt D.46011_81 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_81 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46027_80 = session_2(D)->channel;

processing: switch_core_session_perform_receive_message (session_2(D), &msg, "src/switch_core_media.c", &__func__, 2191);

processing: switch_rtp_set_default_payload (D.46033_77, D.46032_79);

marking necessary through D.46033_77 stmt D.46033_77 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
marking necessary through D.46032_79 stmt D.46032_79 = D.46011_78->agreed_pt;
processing: D.46032_79 = D.46011_78->agreed_pt;

marking necessary through D.46011_78 stmt D.46011_78 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_78 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46033_77 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;

processing: D.46034_76 = switch_rtp_ready (D.46033_75);

marking necessary through D.46033_75 stmt D.46033_75 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
processing: D.46033_75 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;

processing: switch_channel_set_variable_printf (D.46027_70, "rtp_last_video_codec_string", "%s@%dh", D.46012_72, D.46016_74);

marking necessary through D.46027_70 stmt D.46027_70 = session_2(D)->channel;
marking necessary through D.46012_72 stmt D.46012_72 = D.46011_71->rm_encoding;
marking necessary through D.46016_74 stmt D.46016_74 = D.46011_73->rm_rate;
processing: D.46016_74 = D.46011_73->rm_rate;

marking necessary through D.46011_73 stmt D.46011_73 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_73 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46012_72 = D.46011_71->rm_encoding;

marking necessary through D.46011_71 stmt D.46011_71 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_71 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46027_70 = session_2(D)->channel;

processing: switch_core_session_set_video_write_codec (session_2(D), D.46017_69);

marking necessary through D.46017_69 stmt D.46017_69 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
processing: D.46017_69 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;

processing: switch_core_session_set_video_read_codec (session_2(D), D.46001_68);

marking necessary through D.46001_68 stmt D.46001_68 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
processing: D.46001_68 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;

processing: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.agreed_pt = D.46032_67;

marking necessary through D.46032_67 stmt D.46032_67 = D.46011_66->agreed_pt;
processing: D.46032_67 = D.46011_66->agreed_pt;

marking necessary through D.46011_66 stmt D.46011_66 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_66 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.agreed_pt = D.46032_65;

marking necessary through D.46032_65 stmt D.46032_65 = D.46011_64->agreed_pt;
processing: D.46032_65 = D.46011_64->agreed_pt;

marking necessary through D.46011_64 stmt D.46011_64 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_64 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out = D.46031_63;

processing: D.46031_63 = switch_core_perform_session_strdup (session_2(D), D.46030_62, "src/switch_core_media.c", &__func__, 2169);

marking necessary through D.46030_62 stmt D.46030_62 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out;
processing: D.46030_62 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out;

processing: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.codec = D.46001_61;

marking necessary through D.46001_61 stmt D.46001_61 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
processing: D.46001_61 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2164, session_2(D), 7, "Set VIDEO Codec %s %s/%ld %d ms\n", D.46028_54, D.46012_56, D.46016_58, D.46029_60);

marking necessary through D.46012_56 stmt D.46012_56 = D.46011_55->rm_encoding;
marking necessary through D.46016_58 stmt D.46016_58 = D.46011_57->rm_rate;
marking necessary through D.46029_60 stmt D.46029_60 = D.46011_59->codec_ms;
processing: D.46029_60 = D.46011_59->codec_ms;

marking necessary through D.46011_59 stmt D.46011_59 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_59 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46016_58 = D.46011_57->rm_rate;

marking necessary through D.46011_57 stmt D.46011_57 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_57 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46012_56 = D.46011_55->rm_encoding;

marking necessary through D.46011_55 stmt D.46011_55 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_55 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46028_54 = switch_channel_get_name (D.46027_53);

marking necessary through D.46027_53 stmt D.46027_53 = session_2(D)->channel;
processing: D.46027_53 = session_2(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.rate = D.46016_52;

marking necessary through D.46016_52 stmt D.46016_52 = D.46011_51->rm_rate;
processing: D.46016_52 = D.46011_51->rm_rate;

marking necessary through D.46011_51 stmt D.46011_51 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_51 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2160, session_2(D), 3, "Can\'t load codec?\n");

processing: D.46024_49 = switch_core_codec_init_with_bitrate (D.46017_41, D.46012_43, D.46018_45, D.46016_47, 0, 1, 0, 3, 0B, D.46023_48);

marking necessary through D.46017_41 stmt D.46017_41 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
marking necessary through D.46012_43 stmt D.46012_43 = D.46011_42->rm_encoding;
marking necessary through D.46018_45 stmt D.46018_45 = D.46011_44->rm_fmtp;
marking necessary through D.46016_47 stmt D.46016_47 = D.46011_46->rm_rate;
processing: D.46016_47 = D.46011_46->rm_rate;

marking necessary through D.46011_46 stmt D.46011_46 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_46 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46018_45 = D.46011_44->rm_fmtp;

marking necessary through D.46011_44 stmt D.46011_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46012_43 = D.46011_42->rm_encoding;

marking necessary through D.46011_42 stmt D.46011_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46017_41 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;

processing: D.46023_48 = switch_core_session_get_pool (session_2(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2149, session_2(D), 3, "Can\'t load codec?\n");

processing: D.46020_39 = switch_core_codec_init_with_bitrate (D.46001_31, D.46012_33, D.46018_35, D.46016_37, 0, 1, 0, 3, 0B, D.46019_38);

marking necessary through D.46001_31 stmt D.46001_31 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
marking necessary through D.46012_33 stmt D.46012_33 = D.46011_32->rm_encoding;
marking necessary through D.46018_35 stmt D.46018_35 = D.46011_34->rm_fmtp;
marking necessary through D.46016_37 stmt D.46016_37 = D.46011_36->rm_rate;
processing: D.46016_37 = D.46011_36->rm_rate;

marking necessary through D.46011_36 stmt D.46011_36 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_36 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46018_35 = D.46011_34->rm_fmtp;

marking necessary through D.46011_34 stmt D.46011_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46012_33 = D.46011_32->rm_encoding;

marking necessary through D.46011_32 stmt D.46011_32 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_32 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46001_31 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;

processing: D.46019_38 = switch_core_session_get_pool (session_2(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2133, session_2(D), 7, "Already using %s\n", D.46010_23);

marking necessary through D.46010_23 stmt D.46010_23 = D.45998_22->iananame;
processing: D.46010_23 = D.45998_22->iananame;

marking necessary through D.45998_22 stmt D.45998_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
processing: D.45998_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;

processing: switch_core_codec_destroy (D.46017_30);

marking necessary through D.46017_30 stmt D.46017_30 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
processing: D.46017_30 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;

processing: switch_core_codec_destroy (D.46001_29);

marking necessary through D.46001_29 stmt D.46001_29 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
processing: D.46001_29 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2128, session_2(D), 7, "Changing Codec from %s to %s\n", D.46010_26, D.46012_28);

marking necessary through D.46010_26 stmt D.46010_26 = D.45998_25->iananame;
marking necessary through D.46012_28 stmt D.46012_28 = D.46011_27->rm_encoding;
processing: D.46012_28 = D.46011_27->rm_encoding;

marking necessary through D.46011_27 stmt D.46011_27 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
processing: D.46011_27 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;

processing: D.46010_26 = D.45998_25->iananame;

marking necessary through D.45998_25 stmt D.45998_25 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
processing: D.45998_25 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;

processing: __assert_fail ("session", "src/switch_core_media.c", 2109, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 129 statements (0%)
Removed 0 of 4 PHI nodes (0%)
switch_core_media_set_video_codec (struct switch_core_session_t * session, int force)
{
  int iftmp.104;
  uint32_t D.47748;
  uint32_t D.47747;
  struct switch_mutex_t * D.47746;
  struct switch_codec_interface_t * D.47745;
  const struct switch_codec_implementation_t * D.47744;
  struct switch_core_session_message_t msg;
  static const char __func__[34] = "switch_core_media_set_video_codec";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_set_video_codec";
  struct switch_media_handle_t * smh;
  uint8_t D.46034;
  struct switch_rtp_t * D.46033;
  switch_payload_t D.46032;
  char * D.46031;
  char * D.46030;
  uint32_t D.46029;
  char * D.46028;
  struct switch_channel_t * D.46027;
  switch_status_t D.46024;
  struct switch_memory_pool_t * D.46023;
  switch_status_t D.46020;
  struct switch_memory_pool_t * D.46019;
  char * D.46018;
  struct switch_codec_t * D.46017;
  long unsigned int D.46016;
  const uint32_t D.46015;
  int D.46013;
  char * D.46012;
  struct payload_map_t * D.46011;
  char * const D.46010;
  struct switch_codec_t * D.46001;
  const struct switch_codec_implementation_t * D.45998;
  uint8_t D.45995;
  switch_status_t D.45994;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2109, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 26>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#7 => &smh_3->engines[1]
  # DEBUG v_engine => D#7
  D.45995_6 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].codec_negotiated;
  if (D.45995_6 == 0)
    goto <bb 26>;
  else
    goto <bb 6>;

<bb 6>:
  D.45998_8 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  if (D.45998_8 != 0B)
    goto <bb 7>;
  else
    goto <bb 19>;

<bb 7>:
  D.46001_9 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  # DEBUG codec => D.46001_9
  if (D.46001_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;

<bb 8>:
  D.47748_125 = MEM[(struct switch_codec_t *)smh_3 + 13020B].flags;
  D.47747_126 = D.47748_125 & 256;
  if (D.47747_126 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.47746_127 = MEM[(struct switch_codec_t *)smh_3 + 13020B].mutex;
  if (D.47746_127 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.47745_128 = MEM[(struct switch_codec_t *)smh_3 + 13020B].codec_interface;
  if (D.47745_128 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.47744_129 = MEM[(struct switch_codec_t *)smh_3 + 13020B].implementation;
  if (D.47744_129 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # iftmp.104_130 = PHI <1(11), 0(12)>
  if (iftmp.104_130 != 0)
    goto <bb 14>;
  else
    goto <bb 19>;

<bb 14>:
  if (force_11(D) == 0)
    goto <bb 26>;
  else
    goto <bb 15>;

<bb 15>:
  D.45998_13 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_14 = D.45998_13->iananame;
  D.46011_15 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_16 = D.46011_15->rm_encoding;
  D.46013_17 = strcasecmp (D.46010_14, D.46012_16);
  if (D.46013_17 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:
  D.45998_18 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46015_19 = D.45998_18->samples_per_second;
  D.46011_20 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_21 = D.46011_20->rm_rate;
  if (D.46015_19 != D.46016_21)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.45998_25 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_26 = D.45998_25->iananame;
  D.46011_27 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_28 = D.46011_27->rm_encoding;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2128, session_2(D), 7, "Changing Codec from %s to %s\n", D.46010_26, D.46012_28);
  D.46001_29 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  switch_core_codec_destroy (D.46001_29);
  D.46017_30 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  switch_core_codec_destroy (D.46017_30);
  goto <bb 19>;

<bb 18>:
  D.45998_22 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.implementation;
  D.46010_23 = D.45998_22->iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2133, session_2(D), 7, "Already using %s\n", D.46010_23);
  goto <bb 26>;

<bb 19>:
  D.46001_31 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  D.46011_32 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_33 = D.46011_32->rm_encoding;
  D.46011_34 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_35 = D.46011_34->rm_fmtp;
  D.46011_36 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_37 = D.46011_36->rm_rate;
  D.46019_38 = switch_core_session_get_pool (session_2(D));
  D.46020_39 = switch_core_codec_init_with_bitrate (D.46001_31, D.46012_33, D.46018_35, D.46016_37, 0, 1, 0, 3, 0B, D.46019_38);
  if (D.46020_39 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2149, session_2(D), 3, "Can\'t load codec?\n");
  goto <bb 26>;

<bb 21>:
  D.46017_41 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  D.46011_42 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_43 = D.46011_42->rm_encoding;
  D.46011_44 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_45 = D.46011_44->rm_fmtp;
  D.46011_46 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_47 = D.46011_46->rm_rate;
  D.46023_48 = switch_core_session_get_pool (session_2(D));
  D.46024_49 = switch_core_codec_init_with_bitrate (D.46017_41, D.46012_43, D.46018_45, D.46016_47, 0, 1, 0, 3, 0B, D.46023_48);
  if (D.46024_49 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2160, session_2(D), 3, "Can\'t load codec?\n");
  goto <bb 26>;

<bb 23>:
  D.46011_51 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_52 = D.46011_51->rm_rate;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.rate = D.46016_52;
  D.46027_53 = session_2(D)->channel;
  D.46028_54 = switch_channel_get_name (D.46027_53);
  D.46011_55 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_56 = D.46011_55->rm_encoding;
  D.46011_57 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_58 = D.46011_57->rm_rate;
  D.46011_59 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46029_60 = D.46011_59->codec_ms;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2164, session_2(D), 7, "Set VIDEO Codec %s %s/%ld %d ms\n", D.46028_54, D.46012_56, D.46016_58, D.46029_60);
  D.46001_61 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_frame.codec = D.46001_61;
  D.46030_62 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out;
  D.46031_63 = switch_core_perform_session_strdup (session_2(D), D.46030_62, "src/switch_core_media.c", &__func__, 2169);
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.fmtp_out = D.46031_63;
  D.46011_64 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_65 = D.46011_64->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec.agreed_pt = D.46032_65;
  D.46011_66 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_67 = D.46011_66->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec.agreed_pt = D.46032_67;
  D.46001_68 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].read_codec;
  switch_core_session_set_video_read_codec (session_2(D), D.46001_68);
  D.46017_69 = &MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].write_codec;
  switch_core_session_set_video_write_codec (session_2(D), D.46017_69);
  D.46027_70 = session_2(D)->channel;
  D.46011_71 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_72 = D.46011_71->rm_encoding;
  D.46011_73 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_74 = D.46011_73->rm_rate;
  switch_channel_set_variable_printf (D.46027_70, "rtp_last_video_codec_string", "%s@%dh", D.46012_72, D.46016_74);
  D.46033_75 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
  D.46034_76 = switch_rtp_ready (D.46033_75);
  if (D.46034_76 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  msg = {};
  msg.from = "src/switch_core_media.c";
  msg.message_id = 17;
  D.46033_77 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].rtp_session;
  D.46011_78 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46032_79 = D.46011_78->agreed_pt;
  switch_rtp_set_default_payload (D.46033_77, D.46032_79);
  switch_core_session_perform_receive_message (session_2(D), &msg, "src/switch_core_media.c", &__func__, 2191);

<bb 25>:
  D.46027_80 = session_2(D)->channel;
  D.46011_81 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46012_82 = D.46011_81->rm_encoding;
  switch_channel_set_variable_var_check (D.46027_80, "rtp_use_video_codec_name", D.46012_82, 1);
  D.46027_83 = session_2(D)->channel;
  D.46011_84 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46018_85 = D.46011_84->rm_fmtp;
  switch_channel_set_variable_var_check (D.46027_83, "rtp_use_video_codec_fmtp", D.46018_85, 1);
  D.46027_86 = session_2(D)->channel;
  D.46011_87 = MEM[(struct switch_rtp_engine_t *)smh_3 + 11496B].cur_payload_map;
  D.46016_88 = D.46011_87->rm_rate;
  switch_channel_set_variable_printf (D.46027_86, "rtp_use_video_codec_rate", "%d", D.46016_88);
  D.46027_89 = session_2(D)->channel;
  switch_channel_set_variable_printf (D.46027_89, "rtp_use_video_codec_ptime", "%d", 0);

<bb 26>:
  # D.45994_1 = PHI <1(4), 1(5), 0(14), 0(18), 1(20), 1(22), 0(25)>
  return D.45994_1;

}



;; Function switch_core_media_set_codec (switch_core_media_set_codec)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 52 5 }
;; 5 succs { 6 7 }
;; 6 succs { 49 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 24 }
;; 14 succs { 49 15 }
;; 15 succs { 18 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 23 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 24 }
;; 23 succs { 49 }
;; 24 succs { 25 26 }
;; 25 succs { 49 }
;; 26 succs { 27 28 }
;; 27 succs { 49 }
;; 28 succs { 29 30 }
;; 29 succs { }
;; 30 succs { 31 32 }
;; 31 succs { }
;; 32 succs { 33 37 }
;; 33 succs { 34 35 }
;; 34 succs { }
;; 35 succs { 36 37 }
;; 36 succs { 49 }
;; 37 succs { 38 42 }
;; 38 succs { 39 42 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 43 42 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 49 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 }
;; 52 succs { 1 }
Marking useful stmt: # DEBUG status => 0

Marking useful stmt: # DEBUG resetting => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2215, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_8

Marking useful stmt: # DEBUG D#8 => &smh_8->engines

Marking useful stmt: # DEBUG a_engine => D#8

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2223, session_7(D), 7, "No audio codec available\n");

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: # DEBUG codec => D.45911_14

Marking useful stmt: switch_mutex_lock (D.45933_33);

Marking useful stmt: switch_resample_destroy (D.45934_34);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2238, session_7(D), 5, "Deactivating read resampler\n");

Marking useful stmt: switch_mutex_unlock (D.45933_35);

Marking useful stmt: switch_mutex_lock (D.45933_37);

Marking useful stmt: switch_resample_destroy (D.45938_38);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2245, session_7(D), 5, "Deactivating write resampler\n");

Marking useful stmt: switch_mutex_unlock (D.45933_39);

Marking useful stmt: switch_core_session_reset (session_7(D), 0, 0);

Marking useful stmt: switch_channel_perform_audio_sync (D.45939_40, "src/switch_core_media.c", &__func__, 2250);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2252, session_7(D), 7, "Changing Codec from %s@%dms@%dhz to %s@%dms@%luhz\n", D.45920_41, D.45940_43, D.45928_44, D.45908_46, D.45926_48, D.45929_50);

Marking useful stmt: switch_sleep (D.45941_52);

Marking useful stmt: switch_core_session_lock_codec_write (session_7(D));

Marking useful stmt: switch_core_session_lock_codec_read (session_7(D));

Marking useful stmt: # DEBUG resetting => 1

Marking useful stmt: switch_sleep (D.45941_55);

Marking useful stmt: switch_core_codec_destroy (D.45911_56);

Marking useful stmt: switch_core_codec_destroy (D.45942_57);

Marking useful stmt: switch_channel_perform_audio_sync (D.45939_58, "src/switch_core_media.c", &__func__, 2269);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2271, session_7(D), 7, "Already using %s\n", D.45920_30);

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: # DEBUG resetting => resetting_2

Marking useful stmt: D.45948_75 = switch_core_session_get_pool (session_7(D));

Marking useful stmt: D.45949_76 = switch_core_codec_init_with_bitrate (D.45911_59, D.45908_61, D.45943_63, D.45929_65, D.45944_68, D.45945_70, D.45946_72, D.45947_74, 0B, D.45948_75);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2285, session_7(D), 3, "Can\'t load codec?\n");

Marking useful stmt: switch_channel_perform_hangup (D.45939_77, "src/switch_core_media.c", &__func__, 2286, 88);

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.session = session_7(D);

Marking useful stmt: D.45952_94 = switch_core_session_get_pool (session_7(D));

Marking useful stmt: D.45953_95 = switch_core_codec_init_with_bitrate (D.45942_79, D.45908_81, D.45943_83, D.45929_85, D.45944_88, D.45945_90, D.45946_92, D.45947_93, 0B, D.45952_94);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2302, session_7(D), 3, "Can\'t load codec?\n");

Marking useful stmt: switch_channel_perform_hangup (D.45939_96, "src/switch_core_media.c", &__func__, 2303, 88);

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.session = session_7(D);

Marking useful stmt: switch_channel_set_variable_var_check (D.45939_98, "rtp_use_codec_name", D.45908_100, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.45939_101, "rtp_use_codec_fmtp", D.45943_103, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.45939_104, "rtp_use_codec_rate", "%d", D.45929_106);

Marking useful stmt: switch_channel_set_variable_printf (D.45939_107, "rtp_use_codec_ptime", "%d", D.45926_109);

Marking useful stmt: switch_channel_set_variable_printf (D.45939_110, "rtp_last_audio_codec_string", "%s@%dh@%di", D.45908_112, D.45929_114, D.45926_116);

Marking useful stmt: __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2316, &__PRETTY_FUNCTION__);

Marking useful stmt: __assert_fail ("a_engine->write_codec.implementation", "src/switch_core_media.c", 2317, &__PRETTY_FUNCTION__);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl = *D.45956_119;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_impl = *D.45959_120;

Marking useful stmt: switch_core_session_set_read_impl (session_7(D), D.45956_121);

Marking useful stmt: switch_core_session_set_write_impl (session_7(D), D.45959_122);

Marking useful stmt: D.45963_124 = switch_rtp_ready (D.45962_123);

Marking useful stmt: __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2326, &__PRETTY_FUNCTION__);

Marking useful stmt: D.45970_130 = switch_rtp_change_interval (D.45962_126, D.45968_128, D.45969_129);

Marking useful stmt: switch_channel_perform_hangup (D.45939_131, "src/switch_core_media.c", &__func__, 2331, 27);

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.rate = D.45929_134;

Marking useful stmt: # DEBUG codec => D.45911_135

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2339, session_7(D), 3, "Can\'t load codec?\n");

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: D.45976_139 = switch_channel_get_name (D.45939_138);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2343, session_7(D), 7, "Set Codec %s %s/%ld %d ms %d samples %d bits\n", D.45976_139, D.45908_141, D.45929_143, D.45926_145, D.45969_146, D.45977_147);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.codec = D.45911_148;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.agreed_pt = D.45978_150;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.agreed_pt = D.45978_152;

Marking useful stmt: switch_core_session_set_real_read_codec (session_7(D), D.45911_153);

Marking useful stmt: switch_core_session_set_write_codec (session_7(D), D.45942_154);

Marking useful stmt: D.45982_157 = switch_core_perform_session_strdup (session_7(D), D.45981_156, "src/switch_core_media.c", &__func__, 2357);

Marking useful stmt: D.45907_155->fmtp_out = D.45982_157;

Marking useful stmt: D.45983_159 = switch_rtp_ready (D.45962_158);

Marking useful stmt: switch_rtp_set_default_payload (D.45962_160, D.45986_162);

Marking useful stmt: end:

Marking useful stmt: # DEBUG resetting => resetting_3

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: switch_core_session_unlock_codec_write (session_7(D));

Marking useful stmt: switch_core_session_unlock_codec_read (session_7(D));

Marking useful stmt: return status_4;


Processing worklist:
processing: return status_4;

Marking useful stmt: if (smh_8 == 0B)

Marking useful stmt: if (D.45908_12 == 0B)

Marking useful stmt: if (force_16(D) == 0)

Marking useful stmt: if (D.45928_27 != D.45929_29)

Marking useful stmt: if (D.45949_76 != 0)

Marking useful stmt: if (D.45953_95 != 0)

Marking useful stmt: if (D.45963_124 != 0)

Marking useful stmt: if (D.45956_125 == 0B)

marking necessary through status_4 stmt status_4 = PHI <1(4), status_1(51)>
processing: status_4 = PHI <1(4), status_1(51)>

marking necessary through status_1 stmt status_1 = PHI <1(6), 0(14), 0(23), 1(25), 1(27), 1(36), 1(44), 0(47), 0(48)>
processing: status_1 = PHI <1(6), 0(14), 0(23), 1(25), 1(27), 1(36), 1(44), 0(47), 0(48)>

Marking useful stmt: if (D.45970_130 != 0)

Marking useful stmt: if (iftmp.104_240 == 0)

Marking useful stmt: if (D.45983_159 != 0)

processing: if (D.45983_159 != 0)

processing: if (iftmp.104_240 == 0)

marking necessary through iftmp.104_240 stmt iftmp.104_240 = PHI <1(41), 0(42)>
processing: iftmp.104_240 = PHI <1(41), 0(42)>

Marking useful stmt: if (D.47764_238 != 0B)

Marking useful stmt: if (D.45911_135 != 0B)

Marking useful stmt: if (D.47766_236 != 0)

Marking useful stmt: if (D.47765_237 != 0B)

Marking useful stmt: if (D.47763_239 != 0B)

processing: if (D.47763_239 != 0B)

marking necessary through D.47763_239 stmt D.47763_239 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
processing: D.47763_239 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;

marking necessary through smh_8 stmt smh_8 = session_7(D)->media_handle;
processing: smh_8 = session_7(D)->media_handle;

Marking useful stmt: if (session_7(D) == 0B)

processing: if (session_7(D) == 0B)

processing: if (D.47765_237 != 0B)

marking necessary through D.47765_237 stmt D.47765_237 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
processing: D.47765_237 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;

processing: if (D.47766_236 != 0)

marking necessary through D.47766_236 stmt D.47766_236 = D.47767_235 & 256;
processing: D.47766_236 = D.47767_235 & 256;

marking necessary through D.47767_235 stmt D.47767_235 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
processing: D.47767_235 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;

processing: if (D.45911_135 != 0B)

marking necessary through D.45911_135 stmt D.45911_135 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
processing: D.45911_135 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: if (D.47764_238 != 0B)

marking necessary through D.47764_238 stmt D.47764_238 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
processing: D.47764_238 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;

processing: if (D.45970_130 != 0)

processing: if (D.45956_125 == 0B)

marking necessary through D.45956_125 stmt D.45956_125 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
processing: D.45956_125 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;

processing: if (D.45963_124 != 0)

Marking useful stmt: if (D.45959_118 == 0B)

processing: if (D.45959_118 == 0B)

Marking useful stmt: if (D.45956_117 == 0B)

marking necessary through D.45959_118 stmt D.45959_118 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
processing: D.45959_118 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;

processing: if (D.45956_117 == 0B)

marking necessary through D.45956_117 stmt D.45956_117 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
processing: D.45956_117 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;

processing: if (D.45953_95 != 0)

processing: if (D.45949_76 != 0)

Marking useful stmt: if (iftmp.104_233 != 0)

Marking useful stmt: if (D.45921_21 != 0)

Marking useful stmt: if (D.45925_24 != D.45926_26)

processing: if (D.45925_24 != D.45926_26)

marking necessary through D.45925_24 stmt D.45925_24 = D.45924_23 / 1000;
marking necessary through D.45926_26 stmt D.45926_26 = D.45907_25->codec_ms;
processing: D.45926_26 = D.45907_25->codec_ms;

marking necessary through D.45907_25 stmt D.45907_25 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_25 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45925_24 = D.45924_23 / 1000;

marking necessary through D.45924_23 stmt D.45924_23 = (unsigned int) D.45923_22;
processing: D.45924_23 = (unsigned int) D.45923_22;

marking necessary through D.45923_22 stmt D.45923_22 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
processing: D.45923_22 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;

processing: if (D.45921_21 != 0)

marking necessary through D.45921_21 stmt D.45921_21 = strcasecmp (D.45920_18, D.45908_20);
processing: D.45921_21 = strcasecmp (D.45920_18, D.45908_20);

marking necessary through D.45920_18 stmt D.45920_18 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
marking necessary through D.45908_20 stmt D.45908_20 = D.45907_19->iananame;
processing: D.45908_20 = D.45907_19->iananame;

marking necessary through D.45907_19 stmt D.45907_19 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_19 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45920_18 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;

processing: if (iftmp.104_233 != 0)

marking necessary through iftmp.104_233 stmt iftmp.104_233 = PHI <1(11), 0(12)>
processing: iftmp.104_233 = PHI <1(11), 0(12)>

Marking useful stmt: if (D.47755_231 != 0B)

Marking useful stmt: if (D.45911_14 != 0B)

Marking useful stmt: if (D.47757_229 != 0)

Marking useful stmt: if (D.47756_230 != 0B)

Marking useful stmt: if (D.47754_232 != 0B)

processing: if (D.47754_232 != 0B)

marking necessary through D.47754_232 stmt D.47754_232 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
processing: D.47754_232 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;

processing: if (D.47756_230 != 0B)

marking necessary through D.47756_230 stmt D.47756_230 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
processing: D.47756_230 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;

processing: if (D.47757_229 != 0)

marking necessary through D.47757_229 stmt D.47757_229 = D.47758_228 & 256;
processing: D.47757_229 = D.47758_228 & 256;

marking necessary through D.47758_228 stmt D.47758_228 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
processing: D.47758_228 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;

processing: if (D.45911_14 != 0B)

marking necessary through D.45911_14 stmt D.45911_14 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
processing: D.45911_14 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: if (D.47755_231 != 0B)

marking necessary through D.47755_231 stmt D.47755_231 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
processing: D.47755_231 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;

processing: if (D.45928_27 != D.45929_29)

marking necessary through D.45928_27 stmt D.45928_27 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
marking necessary through D.45929_29 stmt D.45929_29 = D.45907_28->rm_rate;
processing: D.45929_29 = D.45907_28->rm_rate;

marking necessary through D.45907_28 stmt D.45907_28 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_28 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45928_27 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;

processing: if (force_16(D) == 0)

processing: if (D.45908_12 == 0B)

marking necessary through D.45908_12 stmt D.45908_12 = D.45907_11->iananame;
processing: D.45908_12 = D.45907_11->iananame;

marking necessary through D.45907_11 stmt D.45907_11 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_11 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: if (smh_8 == 0B)

processing: switch_core_session_unlock_codec_read (session_7(D));

Marking useful stmt: if (resetting_3 != 0)

processing: if (resetting_3 != 0)

marking necessary through resetting_3 stmt resetting_3 = PHI <0(6), 0(14), 0(23), resetting_2(25), resetting_2(27), resetting_2(36), resetting_2(44), resetting_2(47), resetting_2(48)>
processing: resetting_3 = PHI <0(6), 0(14), 0(23), resetting_2(25), resetting_2(27), resetting_2(36), resetting_2(44), resetting_2(47), resetting_2(48)>

marking necessary through resetting_2 stmt resetting_2 = PHI <0(13), 1(22)>
processing: resetting_2 = PHI <0(13), 1(22)>

processing: switch_core_session_unlock_codec_write (session_7(D));

processing: switch_rtp_set_default_payload (D.45962_160, D.45986_162);

marking necessary through D.45962_160 stmt D.45962_160 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
marking necessary through D.45986_162 stmt D.45986_162 = D.45907_161->pt;
processing: D.45986_162 = D.45907_161->pt;

marking necessary through D.45907_161 stmt D.45907_161 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_161 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45962_160 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;

processing: D.45983_159 = switch_rtp_ready (D.45962_158);

marking necessary through D.45962_158 stmt D.45962_158 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
processing: D.45962_158 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;

processing: D.45907_155->fmtp_out = D.45982_157;

marking necessary through D.45907_155 stmt D.45907_155 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_155 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45982_157 = switch_core_perform_session_strdup (session_7(D), D.45981_156, "src/switch_core_media.c", &__func__, 2357);

marking necessary through D.45981_156 stmt D.45981_156 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.fmtp_out;
processing: D.45981_156 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.fmtp_out;

processing: switch_core_session_set_write_codec (session_7(D), D.45942_154);

Marking useful stmt: if (force_16(D) != 2)

marking necessary through D.45942_154 stmt D.45942_154 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
processing: D.45942_154 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;

processing: if (force_16(D) != 2)

processing: switch_core_session_set_real_read_codec (session_7(D), D.45911_153);

marking necessary through D.45911_153 stmt D.45911_153 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
processing: D.45911_153 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.agreed_pt = D.45978_152;

marking necessary through D.45978_152 stmt D.45978_152 = D.45907_151->agreed_pt;
processing: D.45978_152 = D.45907_151->agreed_pt;

marking necessary through D.45907_151 stmt D.45907_151 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_151 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.agreed_pt = D.45978_150;

marking necessary through D.45978_150 stmt D.45978_150 = D.45907_149->agreed_pt;
processing: D.45978_150 = D.45907_149->agreed_pt;

marking necessary through D.45907_149 stmt D.45907_149 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_149 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.codec = D.45911_148;

marking necessary through D.45911_148 stmt D.45911_148 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
processing: D.45911_148 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2343, session_7(D), 7, "Set Codec %s %s/%ld %d ms %d samples %d bits\n", D.45976_139, D.45908_141, D.45929_143, D.45926_145, D.45969_146, D.45977_147);

marking necessary through D.45908_141 stmt D.45908_141 = D.45907_140->iananame;
marking necessary through D.45929_143 stmt D.45929_143 = D.45907_142->rm_rate;
marking necessary through D.45926_145 stmt D.45926_145 = D.45907_144->codec_ms;
marking necessary through D.45969_146 stmt D.45969_146 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
marking necessary through D.45977_147 stmt D.45977_147 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.bits_per_second;
processing: D.45977_147 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.bits_per_second;

processing: D.45969_146 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;

processing: D.45926_145 = D.45907_144->codec_ms;

marking necessary through D.45907_144 stmt D.45907_144 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_144 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45929_143 = D.45907_142->rm_rate;

marking necessary through D.45907_142 stmt D.45907_142 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_142 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45908_141 = D.45907_140->iananame;

marking necessary through D.45907_140 stmt D.45907_140 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_140 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45976_139 = switch_channel_get_name (D.45939_138);

marking necessary through D.45939_138 stmt D.45939_138 = session_7(D)->channel;
processing: D.45939_138 = session_7(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2339, session_7(D), 3, "Can\'t load codec?\n");

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.rate = D.45929_134;

marking necessary through D.45929_134 stmt D.45929_134 = D.45907_133->rm_rate;
processing: D.45929_134 = D.45907_133->rm_rate;

marking necessary through D.45907_133 stmt D.45907_133 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_133 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: switch_channel_perform_hangup (D.45939_131, "src/switch_core_media.c", &__func__, 2331, 27);

marking necessary through D.45939_131 stmt D.45939_131 = session_7(D)->channel;
processing: D.45939_131 = session_7(D)->channel;

processing: D.45970_130 = switch_rtp_change_interval (D.45962_126, D.45968_128, D.45969_129);

marking necessary through D.45962_126 stmt D.45962_126 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
marking necessary through D.45968_128 stmt D.45968_128 = (uint32_t) D.45923_127;
marking necessary through D.45969_129 stmt D.45969_129 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
processing: D.45969_129 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;

processing: D.45968_128 = (uint32_t) D.45923_127;

marking necessary through D.45923_127 stmt D.45923_127 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
processing: D.45923_127 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;

processing: D.45962_126 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;

processing: __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2326, &__PRETTY_FUNCTION__);

processing: D.45963_124 = switch_rtp_ready (D.45962_123);

marking necessary through D.45962_123 stmt D.45962_123 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
processing: D.45962_123 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;

processing: switch_core_session_set_write_impl (session_7(D), D.45959_122);

marking necessary through D.45959_122 stmt D.45959_122 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
processing: D.45959_122 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;

processing: switch_core_session_set_read_impl (session_7(D), D.45956_121);

marking necessary through D.45956_121 stmt D.45956_121 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
processing: D.45956_121 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_impl = *D.45959_120;

marking necessary through D.45959_120 stmt D.45959_120 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
processing: D.45959_120 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl = *D.45956_119;

marking necessary through D.45956_119 stmt D.45956_119 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
processing: D.45956_119 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;

processing: __assert_fail ("a_engine->write_codec.implementation", "src/switch_core_media.c", 2317, &__PRETTY_FUNCTION__);

processing: __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2316, &__PRETTY_FUNCTION__);

processing: switch_channel_set_variable_printf (D.45939_110, "rtp_last_audio_codec_string", "%s@%dh@%di", D.45908_112, D.45929_114, D.45926_116);

marking necessary through D.45939_110 stmt D.45939_110 = session_7(D)->channel;
marking necessary through D.45908_112 stmt D.45908_112 = D.45907_111->iananame;
marking necessary through D.45929_114 stmt D.45929_114 = D.45907_113->rm_rate;
marking necessary through D.45926_116 stmt D.45926_116 = D.45907_115->codec_ms;
processing: D.45926_116 = D.45907_115->codec_ms;

marking necessary through D.45907_115 stmt D.45907_115 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_115 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45929_114 = D.45907_113->rm_rate;

marking necessary through D.45907_113 stmt D.45907_113 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_113 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45908_112 = D.45907_111->iananame;

marking necessary through D.45907_111 stmt D.45907_111 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_111 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45939_110 = session_7(D)->channel;

processing: switch_channel_set_variable_printf (D.45939_107, "rtp_use_codec_ptime", "%d", D.45926_109);

marking necessary through D.45939_107 stmt D.45939_107 = session_7(D)->channel;
marking necessary through D.45926_109 stmt D.45926_109 = D.45907_108->codec_ms;
processing: D.45926_109 = D.45907_108->codec_ms;

marking necessary through D.45907_108 stmt D.45907_108 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_108 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45939_107 = session_7(D)->channel;

processing: switch_channel_set_variable_printf (D.45939_104, "rtp_use_codec_rate", "%d", D.45929_106);

marking necessary through D.45939_104 stmt D.45939_104 = session_7(D)->channel;
marking necessary through D.45929_106 stmt D.45929_106 = D.45907_105->rm_rate;
processing: D.45929_106 = D.45907_105->rm_rate;

marking necessary through D.45907_105 stmt D.45907_105 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_105 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45939_104 = session_7(D)->channel;

processing: switch_channel_set_variable_var_check (D.45939_101, "rtp_use_codec_fmtp", D.45943_103, 1);

marking necessary through D.45939_101 stmt D.45939_101 = session_7(D)->channel;
marking necessary through D.45943_103 stmt D.45943_103 = D.45907_102->rm_fmtp;
processing: D.45943_103 = D.45907_102->rm_fmtp;

marking necessary through D.45907_102 stmt D.45907_102 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_102 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45939_101 = session_7(D)->channel;

processing: switch_channel_set_variable_var_check (D.45939_98, "rtp_use_codec_name", D.45908_100, 1);

marking necessary through D.45939_98 stmt D.45939_98 = session_7(D)->channel;
marking necessary through D.45908_100 stmt D.45908_100 = D.45907_99->iananame;
processing: D.45908_100 = D.45907_99->iananame;

marking necessary through D.45907_99 stmt D.45907_99 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_99 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45939_98 = session_7(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.session = session_7(D);

processing: switch_channel_perform_hangup (D.45939_96, "src/switch_core_media.c", &__func__, 2303, 88);

marking necessary through D.45939_96 stmt D.45939_96 = session_7(D)->channel;
processing: D.45939_96 = session_7(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2302, session_7(D), 3, "Can\'t load codec?\n");

processing: D.45953_95 = switch_core_codec_init_with_bitrate (D.45942_79, D.45908_81, D.45943_83, D.45929_85, D.45944_88, D.45945_90, D.45946_92, D.45947_93, 0B, D.45952_94);

marking necessary through D.45942_79 stmt D.45942_79 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
marking necessary through D.45908_81 stmt D.45908_81 = D.45907_80->iananame;
marking necessary through D.45943_83 stmt D.45943_83 = D.45907_82->rm_fmtp;
marking necessary through D.45929_85 stmt D.45929_85 = D.45907_84->rm_rate;
marking necessary through D.45944_88 stmt D.45944_88 = (int) D.45926_87;
marking necessary through D.45945_90 stmt D.45945_90 = D.45907_89->channels;
marking necessary through D.45946_92 stmt D.45946_92 = D.45907_91->bitrate;
marking necessary through D.45947_93 stmt D.45947_93 = codec_flags_73(D) | 3;
processing: D.45947_93 = codec_flags_73(D) | 3;

processing: D.45946_92 = D.45907_91->bitrate;

marking necessary through D.45907_91 stmt D.45907_91 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_91 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45945_90 = D.45907_89->channels;

marking necessary through D.45907_89 stmt D.45907_89 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_89 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45944_88 = (int) D.45926_87;

marking necessary through D.45926_87 stmt D.45926_87 = D.45907_86->codec_ms;
processing: D.45926_87 = D.45907_86->codec_ms;

marking necessary through D.45907_86 stmt D.45907_86 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_86 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45929_85 = D.45907_84->rm_rate;

marking necessary through D.45907_84 stmt D.45907_84 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_84 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45943_83 = D.45907_82->rm_fmtp;

marking necessary through D.45907_82 stmt D.45907_82 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_82 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45908_81 = D.45907_80->iananame;

marking necessary through D.45907_80 stmt D.45907_80 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_80 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45942_79 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;

processing: D.45952_94 = switch_core_session_get_pool (session_7(D));

processing: MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.session = session_7(D);

processing: switch_channel_perform_hangup (D.45939_77, "src/switch_core_media.c", &__func__, 2286, 88);

marking necessary through D.45939_77 stmt D.45939_77 = session_7(D)->channel;
processing: D.45939_77 = session_7(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2285, session_7(D), 3, "Can\'t load codec?\n");

processing: D.45949_76 = switch_core_codec_init_with_bitrate (D.45911_59, D.45908_61, D.45943_63, D.45929_65, D.45944_68, D.45945_70, D.45946_72, D.45947_74, 0B, D.45948_75);

marking necessary through D.45911_59 stmt D.45911_59 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
marking necessary through D.45908_61 stmt D.45908_61 = D.45907_60->iananame;
marking necessary through D.45943_63 stmt D.45943_63 = D.45907_62->rm_fmtp;
marking necessary through D.45929_65 stmt D.45929_65 = D.45907_64->rm_rate;
marking necessary through D.45944_68 stmt D.45944_68 = (int) D.45926_67;
marking necessary through D.45945_70 stmt D.45945_70 = D.45907_69->channels;
marking necessary through D.45946_72 stmt D.45946_72 = D.45907_71->bitrate;
marking necessary through D.45947_74 stmt D.45947_74 = codec_flags_73(D) | 3;
processing: D.45947_74 = codec_flags_73(D) | 3;

processing: D.45946_72 = D.45907_71->bitrate;

marking necessary through D.45907_71 stmt D.45907_71 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_71 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45945_70 = D.45907_69->channels;

marking necessary through D.45907_69 stmt D.45907_69 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_69 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45944_68 = (int) D.45926_67;

marking necessary through D.45926_67 stmt D.45926_67 = D.45907_66->codec_ms;
processing: D.45926_67 = D.45907_66->codec_ms;

marking necessary through D.45907_66 stmt D.45907_66 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_66 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45929_65 = D.45907_64->rm_rate;

marking necessary through D.45907_64 stmt D.45907_64 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_64 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45943_63 = D.45907_62->rm_fmtp;

marking necessary through D.45907_62 stmt D.45907_62 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_62 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45908_61 = D.45907_60->iananame;

marking necessary through D.45907_60 stmt D.45907_60 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_60 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45911_59 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: D.45948_75 = switch_core_session_get_pool (session_7(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2271, session_7(D), 7, "Already using %s\n", D.45920_30);

marking necessary through D.45920_30 stmt D.45920_30 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
processing: D.45920_30 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;

processing: switch_channel_perform_audio_sync (D.45939_58, "src/switch_core_media.c", &__func__, 2269);

marking necessary through D.45939_58 stmt D.45939_58 = session_7(D)->channel;
processing: D.45939_58 = session_7(D)->channel;

processing: switch_core_codec_destroy (D.45942_57);

marking necessary through D.45942_57 stmt D.45942_57 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
processing: D.45942_57 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;

processing: switch_core_codec_destroy (D.45911_56);

marking necessary through D.45911_56 stmt D.45911_56 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
processing: D.45911_56 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;

processing: switch_sleep (D.45941_55);

marking necessary through D.45941_55 stmt D.45941_55 = (switch_interval_time_t) D.45923_54;
processing: D.45941_55 = (switch_interval_time_t) D.45923_54;

marking necessary through D.45923_54 stmt D.45923_54 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
processing: D.45923_54 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;

processing: switch_core_session_lock_codec_read (session_7(D));

processing: switch_core_session_lock_codec_write (session_7(D));

processing: switch_sleep (D.45941_52);

marking necessary through D.45941_52 stmt D.45941_52 = (switch_interval_time_t) D.45923_51;
processing: D.45941_52 = (switch_interval_time_t) D.45923_51;

marking necessary through D.45923_51 stmt D.45923_51 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
processing: D.45923_51 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2252, session_7(D), 7, "Changing Codec from %s@%dms@%dhz to %s@%dms@%luhz\n", D.45920_41, D.45940_43, D.45928_44, D.45908_46, D.45926_48, D.45929_50);

marking necessary through D.45920_41 stmt D.45920_41 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
marking necessary through D.45940_43 stmt D.45940_43 = D.45923_42 / 1000;
marking necessary through D.45928_44 stmt D.45928_44 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
marking necessary through D.45908_46 stmt D.45908_46 = D.45907_45->iananame;
marking necessary through D.45926_48 stmt D.45926_48 = D.45907_47->codec_ms;
marking necessary through D.45929_50 stmt D.45929_50 = D.45907_49->rm_rate;
processing: D.45929_50 = D.45907_49->rm_rate;

marking necessary through D.45907_49 stmt D.45907_49 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_49 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45926_48 = D.45907_47->codec_ms;

marking necessary through D.45907_47 stmt D.45907_47 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_47 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45908_46 = D.45907_45->iananame;

marking necessary through D.45907_45 stmt D.45907_45 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
processing: D.45907_45 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;

processing: D.45928_44 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;

processing: D.45940_43 = D.45923_42 / 1000;

marking necessary through D.45923_42 stmt D.45923_42 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
processing: D.45923_42 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;

processing: D.45920_41 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;

processing: switch_channel_perform_audio_sync (D.45939_40, "src/switch_core_media.c", &__func__, 2250);

marking necessary through D.45939_40 stmt D.45939_40 = session_7(D)->channel;
processing: D.45939_40 = session_7(D)->channel;

processing: switch_core_session_reset (session_7(D), 0, 0);

processing: switch_mutex_unlock (D.45933_39);

Marking useful stmt: if (D.45935_36 != 0B)

marking necessary through D.45933_39 stmt D.45933_39 = session_7(D)->resample_mutex;
processing: D.45933_39 = session_7(D)->resample_mutex;

processing: if (D.45935_36 != 0B)

marking necessary through D.45935_36 stmt D.45935_36 = session_7(D)->write_resampler;
processing: D.45935_36 = session_7(D)->write_resampler;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2245, session_7(D), 5, "Deactivating write resampler\n");

processing: switch_resample_destroy (D.45938_38);

marking necessary through D.45938_38 stmt D.45938_38 = &session_7(D)->write_resampler;
processing: D.45938_38 = &session_7(D)->write_resampler;

processing: switch_mutex_lock (D.45933_37);

marking necessary through D.45933_37 stmt D.45933_37 = session_7(D)->resample_mutex;
processing: D.45933_37 = session_7(D)->resample_mutex;

processing: switch_mutex_unlock (D.45933_35);

Marking useful stmt: if (D.45930_32 != 0B)

marking necessary through D.45933_35 stmt D.45933_35 = session_7(D)->resample_mutex;
processing: D.45933_35 = session_7(D)->resample_mutex;

processing: if (D.45930_32 != 0B)

marking necessary through D.45930_32 stmt D.45930_32 = session_7(D)->read_resampler;
processing: D.45930_32 = session_7(D)->read_resampler;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2238, session_7(D), 5, "Deactivating read resampler\n");

processing: switch_resample_destroy (D.45934_34);

marking necessary through D.45934_34 stmt D.45934_34 = &session_7(D)->read_resampler;
processing: D.45934_34 = &session_7(D)->read_resampler;

processing: switch_mutex_lock (D.45933_33);

marking necessary through D.45933_33 stmt D.45933_33 = session_7(D)->resample_mutex;
processing: D.45933_33 = session_7(D)->resample_mutex;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2223, session_7(D), 7, "No audio codec available\n");

processing: __assert_fail ("session", "src/switch_core_media.c", 2215, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : status_163 = status_1;

Removed 1 of 254 statements (0%)
Removed 0 of 12 PHI nodes (0%)
Removing basic block 51
;; basic block 51, loop depth 0, count 0
;; prev block 50, next block 52
;; pred:      
;; succ:       52 (fallthru,exec)
<bb 51>:


Scope blocks after cleanups:

{ Scope block #0 
  switch_status_t status;
  int resetting;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_set_codec";
  static const char __func__[28] = "switch_core_media_set_codec";
  void end = <<< error >>>; (unused)

  { Scope block #149 src/switch_core_media.c:2338 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #150 Originating from :#0 

    }

  }

  { Scope block #151 src/switch_core_media.c:2227 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #152 Originating from :#0 

    }

  }

}
switch_core_media_set_codec (struct switch_core_session_t * session, int force, uint32_t codec_flags)
{
  int iftmp.104;
  uint32_t D.47767;
  uint32_t D.47766;
  struct switch_mutex_t * D.47765;
  struct switch_codec_interface_t * D.47764;
  const struct switch_codec_implementation_t * D.47763;
  int iftmp.104;
  uint32_t D.47758;
  uint32_t D.47757;
  struct switch_mutex_t * D.47756;
  struct switch_codec_interface_t * D.47755;
  const struct switch_codec_implementation_t * D.47754;
  static const char __func__[28] = "switch_core_media_set_codec";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_set_codec";
  struct switch_media_handle_t * smh;
  int resetting;
  switch_status_t status;
  switch_payload_t D.45986;
  uint8_t D.45983;
  char * D.45982;
  char * D.45981;
  switch_payload_t D.45978;
  int D.45977;
  char * D.45976;
  switch_status_t D.45970;
  uint32_t D.45969;
  uint32_t D.45968;
  uint8_t D.45963;
  struct switch_rtp_t * D.45962;
  const struct switch_codec_implementation_t * D.45959;
  const struct switch_codec_implementation_t * D.45956;
  switch_status_t D.45953;
  struct switch_memory_pool_t * D.45952;
  switch_status_t D.45949;
  struct switch_memory_pool_t * D.45948;
  uint32_t D.45947;
  uint32_t D.45946;
  int D.45945;
  int D.45944;
  char * D.45943;
  struct switch_codec_t * D.45942;
  switch_interval_time_t D.45941;
  int D.45940;
  struct switch_channel_t * D.45939;
  struct switch_audio_resampler_t * * D.45938;
  struct switch_audio_resampler_t * D.45935;
  struct switch_audio_resampler_t * * D.45934;
  struct switch_mutex_t * D.45933;
  struct switch_audio_resampler_t * D.45930;
  long unsigned int D.45929;
  uint32_t D.45928;
  uint32_t D.45926;
  unsigned int D.45925;
  unsigned int D.45924;
  int D.45923;
  int D.45921;
  char * D.45920;
  struct switch_codec_t * D.45911;
  char * D.45908;
  struct payload_map_t * D.45907;

<bb 2>:
  # DEBUG status => 0
  # DEBUG resetting => 0
  if (session_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2215, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 51>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#8 => &smh_8->engines
  # DEBUG a_engine => D#8
  D.45907_11 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_12 = D.45907_11->iananame;
  if (D.45908_12 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2223, session_7(D), 7, "No audio codec available\n");
  # DEBUG status => 1
  goto <bb 49> (end);

<bb 7>:
  D.45911_14 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  # DEBUG codec => D.45911_14
  if (D.45911_14 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;

<bb 8>:
  D.47758_228 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
  D.47757_229 = D.47758_228 & 256;
  if (D.47757_229 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.47756_230 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
  if (D.47756_230 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.47755_231 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
  if (D.47755_231 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.47754_232 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
  if (D.47754_232 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # iftmp.104_233 = PHI <1(11), 0(12)>
  if (iftmp.104_233 != 0)
    goto <bb 14>;
  else
    goto <bb 24>;

<bb 14>:
  if (force_16(D) == 0)
    goto <bb 49> (end);
  else
    goto <bb 15>;

<bb 15>:
  D.45920_18 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  D.45907_19 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_20 = D.45907_19->iananame;
  D.45921_21 = strcasecmp (D.45920_18, D.45908_20);
  if (D.45921_21 != 0)
    goto <bb 18>;
  else
    goto <bb 16>;

<bb 16>:
  D.45923_22 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45924_23 = (unsigned int) D.45923_22;
  D.45925_24 = D.45924_23 / 1000;
  D.45907_25 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_26 = D.45907_25->codec_ms;
  if (D.45925_24 != D.45926_26)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:
  D.45928_27 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
  D.45907_28 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_29 = D.45907_28->rm_rate;
  if (D.45928_27 != D.45929_29)
    goto <bb 18>;
  else
    goto <bb 23>;

<bb 18>:
  D.45930_32 = session_7(D)->read_resampler;
  if (D.45930_32 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.45933_33 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_33);
  D.45934_34 = &session_7(D)->read_resampler;
  switch_resample_destroy (D.45934_34);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2238, session_7(D), 5, "Deactivating read resampler\n");
  D.45933_35 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_35);

<bb 20>:
  D.45935_36 = session_7(D)->write_resampler;
  if (D.45935_36 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.45933_37 = session_7(D)->resample_mutex;
  switch_mutex_lock (D.45933_37);
  D.45938_38 = &session_7(D)->write_resampler;
  switch_resample_destroy (D.45938_38);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2245, session_7(D), 5, "Deactivating write resampler\n");
  D.45933_39 = session_7(D)->resample_mutex;
  switch_mutex_unlock (D.45933_39);

<bb 22>:
  switch_core_session_reset (session_7(D), 0, 0);
  D.45939_40 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_40, "src/switch_core_media.c", &__func__, 2250);
  D.45920_41 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  D.45923_42 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45940_43 = D.45923_42 / 1000;
  D.45928_44 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_second;
  D.45907_45 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_46 = D.45907_45->iananame;
  D.45907_47 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_48 = D.45907_47->codec_ms;
  D.45907_49 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_50 = D.45907_49->rm_rate;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2252, session_7(D), 7, "Changing Codec from %s@%dms@%dhz to %s@%dms@%luhz\n", D.45920_41, D.45940_43, D.45928_44, D.45908_46, D.45926_48, D.45929_50);
  D.45923_51 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45941_52 = (switch_interval_time_t) D.45923_51;
  switch_sleep (D.45941_52);
  switch_core_session_lock_codec_write (session_7(D));
  switch_core_session_lock_codec_read (session_7(D));
  # DEBUG resetting => 1
  D.45923_54 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45941_55 = (switch_interval_time_t) D.45923_54;
  switch_sleep (D.45941_55);
  D.45911_56 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  switch_core_codec_destroy (D.45911_56);
  D.45942_57 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  switch_core_codec_destroy (D.45942_57);
  D.45939_58 = session_7(D)->channel;
  switch_channel_perform_audio_sync (D.45939_58, "src/switch_core_media.c", &__func__, 2269);
  goto <bb 24>;

<bb 23>:
  D.45920_30 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.iananame;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2271, session_7(D), 7, "Already using %s\n", D.45920_30);
  # DEBUG status => 0
  goto <bb 49> (end);

<bb 24>:
  # resetting_2 = PHI <0(13), 1(22)>
  # DEBUG resetting => resetting_2
  D.45911_59 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  D.45907_60 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_61 = D.45907_60->iananame;
  D.45907_62 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_63 = D.45907_62->rm_fmtp;
  D.45907_64 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_65 = D.45907_64->rm_rate;
  D.45907_66 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_67 = D.45907_66->codec_ms;
  D.45944_68 = (int) D.45926_67;
  D.45907_69 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45945_70 = D.45907_69->channels;
  D.45907_71 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45946_72 = D.45907_71->bitrate;
  D.45947_74 = codec_flags_73(D) | 3;
  D.45948_75 = switch_core_session_get_pool (session_7(D));
  D.45949_76 = switch_core_codec_init_with_bitrate (D.45911_59, D.45908_61, D.45943_63, D.45929_65, D.45944_68, D.45945_70, D.45946_72, D.45947_74, 0B, D.45948_75);
  if (D.45949_76 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2285, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_77 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_77, "src/switch_core_media.c", &__func__, 2286, 88);
  # DEBUG status => 1
  goto <bb 49> (end);

<bb 26>:
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.session = session_7(D);
  D.45942_79 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  D.45907_80 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_81 = D.45907_80->iananame;
  D.45907_82 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_83 = D.45907_82->rm_fmtp;
  D.45907_84 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_85 = D.45907_84->rm_rate;
  D.45907_86 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_87 = D.45907_86->codec_ms;
  D.45944_88 = (int) D.45926_87;
  D.45907_89 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45945_90 = D.45907_89->channels;
  D.45907_91 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45946_92 = D.45907_91->bitrate;
  D.45947_93 = codec_flags_73(D) | 3;
  D.45952_94 = switch_core_session_get_pool (session_7(D));
  D.45953_95 = switch_core_codec_init_with_bitrate (D.45942_79, D.45908_81, D.45943_83, D.45929_85, D.45944_88, D.45945_90, D.45946_92, D.45947_93, 0B, D.45952_94);
  if (D.45953_95 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2302, session_7(D), 3, "Can\'t load codec?\n");
  D.45939_96 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_96, "src/switch_core_media.c", &__func__, 2303, 88);
  # DEBUG status => 1
  goto <bb 49> (end);

<bb 28>:
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.session = session_7(D);
  D.45939_98 = session_7(D)->channel;
  D.45907_99 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_100 = D.45907_99->iananame;
  switch_channel_set_variable_var_check (D.45939_98, "rtp_use_codec_name", D.45908_100, 1);
  D.45939_101 = session_7(D)->channel;
  D.45907_102 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45943_103 = D.45907_102->rm_fmtp;
  switch_channel_set_variable_var_check (D.45939_101, "rtp_use_codec_fmtp", D.45943_103, 1);
  D.45939_104 = session_7(D)->channel;
  D.45907_105 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_106 = D.45907_105->rm_rate;
  switch_channel_set_variable_printf (D.45939_104, "rtp_use_codec_rate", "%d", D.45929_106);
  D.45939_107 = session_7(D)->channel;
  D.45907_108 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_109 = D.45907_108->codec_ms;
  switch_channel_set_variable_printf (D.45939_107, "rtp_use_codec_ptime", "%d", D.45926_109);
  D.45939_110 = session_7(D)->channel;
  D.45907_111 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_112 = D.45907_111->iananame;
  D.45907_113 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_114 = D.45907_113->rm_rate;
  D.45907_115 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_116 = D.45907_115->codec_ms;
  switch_channel_set_variable_printf (D.45939_110, "rtp_last_audio_codec_string", "%s@%dh@%di", D.45908_112, D.45929_114, D.45926_116);
  D.45956_117 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  if (D.45956_117 == 0B)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2316, &__PRETTY_FUNCTION__);

<bb 30>:
  D.45959_118 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  if (D.45959_118 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  __assert_fail ("a_engine->write_codec.implementation", "src/switch_core_media.c", 2317, &__PRETTY_FUNCTION__);

<bb 32>:
  D.45956_119 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl = *D.45956_119;
  D.45959_120 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_impl = *D.45959_120;
  D.45956_121 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  switch_core_session_set_read_impl (session_7(D), D.45956_121);
  D.45959_122 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.implementation;
  switch_core_session_set_write_impl (session_7(D), D.45959_122);
  D.45962_123 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45963_124 = switch_rtp_ready (D.45962_123);
  if (D.45963_124 != 0)
    goto <bb 33>;
  else
    goto <bb 37>;

<bb 33>:
  D.45956_125 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.implementation;
  if (D.45956_125 == 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  __assert_fail ("a_engine->read_codec.implementation", "src/switch_core_media.c", 2326, &__PRETTY_FUNCTION__);

<bb 35>:
  D.45962_126 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45923_127 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.microseconds_per_packet;
  D.45968_128 = (uint32_t) D.45923_127;
  D.45969_129 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
  D.45970_130 = switch_rtp_change_interval (D.45962_126, D.45968_128, D.45969_129);
  if (D.45970_130 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.45939_131 = session_7(D)->channel;
  switch_channel_perform_hangup (D.45939_131, "src/switch_core_media.c", &__func__, 2331, 27);
  # DEBUG status => 1
  goto <bb 49> (end);

<bb 37>:
  D.45907_133 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_134 = D.45907_133->rm_rate;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.rate = D.45929_134;
  D.45911_135 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  # DEBUG codec => D.45911_135
  if (D.45911_135 != 0B)
    goto <bb 38>;
  else
    goto <bb 42>;

<bb 38>:
  D.47767_235 = MEM[(struct switch_codec_t *)smh_8 + 1604B].flags;
  D.47766_236 = D.47767_235 & 256;
  if (D.47766_236 != 0)
    goto <bb 39>;
  else
    goto <bb 42>;

<bb 39>:
  D.47765_237 = MEM[(struct switch_codec_t *)smh_8 + 1604B].mutex;
  if (D.47765_237 != 0B)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  D.47764_238 = MEM[(struct switch_codec_t *)smh_8 + 1604B].codec_interface;
  if (D.47764_238 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.47763_239 = MEM[(struct switch_codec_t *)smh_8 + 1604B].implementation;
  if (D.47763_239 != 0B)
    goto <bb 43>;
  else
    goto <bb 42>;

<bb 42>:

<bb 43>:
  # iftmp.104_240 = PHI <1(41), 0(42)>
  if (iftmp.104_240 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2339, session_7(D), 3, "Can\'t load codec?\n");
  # DEBUG status => 1
  goto <bb 49> (end);

<bb 45>:
  D.45939_138 = session_7(D)->channel;
  D.45976_139 = switch_channel_get_name (D.45939_138);
  D.45907_140 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45908_141 = D.45907_140->iananame;
  D.45907_142 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45929_143 = D.45907_142->rm_rate;
  D.45907_144 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45926_145 = D.45907_144->codec_ms;
  D.45969_146 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.samples_per_packet;
  D.45977_147 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_impl.bits_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2343, session_7(D), 7, "Set Codec %s %s/%ld %d ms %d samples %d bits\n", D.45976_139, D.45908_141, D.45929_143, D.45926_145, D.45969_146, D.45977_147);
  D.45911_148 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_frame.codec = D.45911_148;
  D.45907_149 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45978_150 = D.45907_149->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.agreed_pt = D.45978_150;
  D.45907_151 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45978_152 = D.45907_151->agreed_pt;
  MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec.agreed_pt = D.45978_152;
  if (force_16(D) != 2)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  D.45911_153 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].read_codec;
  switch_core_session_set_real_read_codec (session_7(D), D.45911_153);
  D.45942_154 = &MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec;
  switch_core_session_set_write_codec (session_7(D), D.45942_154);

<bb 47>:
  D.45907_155 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45981_156 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].write_codec.fmtp_out;
  D.45982_157 = switch_core_perform_session_strdup (session_7(D), D.45981_156, "src/switch_core_media.c", &__func__, 2357);
  D.45907_155->fmtp_out = D.45982_157;
  D.45962_158 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45983_159 = switch_rtp_ready (D.45962_158);
  if (D.45983_159 != 0)
    goto <bb 48>;
  else
    goto <bb 49> (end);

<bb 48>:
  D.45962_160 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].rtp_session;
  D.45907_161 = MEM[(struct switch_rtp_engine_t *)smh_8 + 80B].cur_payload_map;
  D.45986_162 = D.45907_161->pt;
  switch_rtp_set_default_payload (D.45962_160, D.45986_162);

  # status_1 = PHI <1(6), 0(14), 0(23), 1(25), 1(27), 1(36), 1(44), 0(47), 0(48)>
  # resetting_3 = PHI <0(6), 0(14), 0(23), resetting_2(25), resetting_2(27), resetting_2(36), resetting_2(44), resetting_2(47), resetting_2(48)>
end:
  # DEBUG resetting => resetting_3
  # DEBUG status => status_1
  if (resetting_3 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  switch_core_session_unlock_codec_write (session_7(D));
  switch_core_session_unlock_codec_read (session_7(D));

<bb 51>:
  # status_4 = PHI <1(4), status_1(50), status_1(49)>
  return status_4;

}



;; Function switch_core_media_read_frame (switch_core_media_read_frame)

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
Created preheader block for loop 1
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 127 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 128 119 120 121 122 123 124 125 126
;;
;; Loop 1
;;  header 128, latch 118
;;  depth 1, outer 0
;;  nodes: 128 118 117 61 59 60 57 49 50 56 55 53 54 51 52 47 29 46 30 44 45 41 42 43 38 39 40 35 36 37 32 33 31 24 119 116 114 115 75 82 89 95 96 98 100 102 103 104 105 112 113 109 111 106 110 107 108 101 99 97 72 73 93 94 76 77 74 87 92 86 91 90 88 83 84 85 81 80 79 78 70 68 69 64 65 66 67 63 62
;;
;; Loop 3
;;  header 111, latch 110
;;  depth 2, outer 1
;;  nodes: 111 110 107 108
;;
;; Loop 2
;;  header 55, latch 54
;;  depth 2, outer 1
;;  nodes: 55 54
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 126 5 }
;; 5 succs { 126 6 }
;; 6 succs { 126 7 }
;; 7 succs { 8 12 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 126 14 }
;; 14 succs { 15 16 }
;; 15 succs { }
;; 16 succs { 126 17 }
;; 17 succs { 126 18 }
;; 18 succs { 126 19 }
;; 19 succs { 20 127 }
;; 127 succs { 128 }
;; 20 succs { 21 127 }
;; 21 succs { 23 22 }
;; 22 succs { 23 }
;; 23 succs { 126 }
;; 24 succs { 25 29 }
;; 25 succs { 26 123 }
;; 26 succs { 27 28 }
;; 27 succs { 123 }
;; 28 succs { 123 }
;; 29 succs { 30 47 }
;; 30 succs { 31 46 }
;; 31 succs { 32 33 }
;; 32 succs { 35 }
;; 33 succs { 34 35 }
;; 34 succs { 123 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 41 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 44 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 123 }
;; 49 succs { 50 57 }
;; 50 succs { 51 57 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 54 56 }
;; 56 succs { 57 }
;; 57 succs { 58 59 }
;; 58 succs { 123 }
;; 59 succs { 60 61 }
;; 60 succs { 61 }
;; 61 succs { 62 118 }
;; 62 succs { 63 120 }
;; 63 succs { 71 64 }
;; 64 succs { 65 69 }
;; 65 succs { 66 69 }
;; 66 succs { 67 69 }
;; 67 succs { 68 69 }
;; 68 succs { 70 69 }
;; 69 succs { 70 }
;; 70 succs { 71 72 }
;; 71 succs { 123 }
;; 72 succs { 73 95 }
;; 73 succs { 74 95 }
;; 74 succs { 75 76 }
;; 75 succs { 114 }
;; 76 succs { 77 94 }
;; 77 succs { 78 94 }
;; 78 succs { 79 92 }
;; 79 succs { 80 92 }
;; 80 succs { 82 81 }
;; 81 succs { 82 83 }
;; 82 succs { 114 }
;; 83 succs { 84 86 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 93 }
;; 87 succs { 88 93 }
;; 88 succs { 89 90 }
;; 89 succs { 114 }
;; 90 succs { 91 93 }
;; 91 succs { 93 }
;; 92 succs { 93 }
;; 93 succs { 95 }
;; 94 succs { 95 }
;; 95 succs { 96 114 }
;; 96 succs { 97 114 }
;; 97 succs { 99 98 }
;; 98 succs { 99 114 }
;; 99 succs { 101 100 }
;; 100 succs { 101 114 }
;; 101 succs { 103 102 }
;; 102 succs { 103 114 }
;; 103 succs { 104 114 }
;; 104 succs { 105 114 }
;; 105 succs { 106 114 }
;; 106 succs { 111 }
;; 107 succs { 108 110 }
;; 108 succs { 109 110 }
;; 109 succs { 112 }
;; 110 succs { 111 }
;; 111 succs { 107 112 }
;; 112 succs { 113 114 }
;; 113 succs { 114 }
;; 114 succs { 115 116 }
;; 115 succs { 116 }
;; 116 succs { 117 120 }
;; 117 succs { 118 }
;; 118 succs { 128 }
;; 128 succs { 119 120 }
;; 119 succs { 24 120 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 }
;; 123 succs { 124 125 }
;; 124 succs { 125 }
;; 125 succs { 126 }
;; 126 succs { 1 }
Marking useful stmt: # DEBUG do_cng => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 1623, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_14

Marking useful stmt: # DEBUG engine => engine_21

Marking useful stmt: engine_21->read_frame.datalen = 0;

Marking useful stmt: # DEBUG codec => D.46138_23

Marking useful stmt: __assert_fail ("engine->rtp_session != ((void *)0)", "src/switch_core_media.c", 1641, &__PRETTY_FUNCTION__);

Marking useful stmt: engine_21->read_frame.datalen = 0;

Marking useful stmt: D.46146_27 = switch_channel_get_state (D.46145_26);

Marking useful stmt: D.46148_29 = switch_rtp_ready (D.46140_28);

Marking useful stmt: D.46150_31 = switch_channel_test_flag (D.46145_30, 45);

Marking useful stmt: D.46154_34 = switch_mutex_trylock (D.46151_33);

Marking useful stmt: D.46157_36 = switch_channel_get_name (D.46145_35);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1650, session_13(D), 101, "%s is already being read for %s\n", D.46157_36, iftmp.129_11);

Marking useful stmt: engine_21->read_frame.flags = 0;

Marking useful stmt: status_45 = switch_rtp_zerocopy_read_frame (D.46140_42, D.46162_43, flags_44(D));

Marking useful stmt: # DEBUG status => status_45

Marking useful stmt: D.46170_50 = switch_channel_get_variable_dup (D.46145_49, "execute_on_media_timeout", 1, -1);

Marking useful stmt: *frame_52(D) = D.46162_51;

Marking useful stmt: D.46173_54->flags = D.46175_56;

Marking useful stmt: D.46173_57->datalen = D.46176_58;

Marking useful stmt: memset (D.46177_60, 0, D.46178_62);

Marking useful stmt: switch_channel_execute_on (D.46145_63, "execute_on_media_timeout");

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: switch_channel_perform_hangup (D.46145_65, "src/switch_core_media.c", &__func__, 1674, 604);

Marking useful stmt: # DEBUG rtp_timeout_sec => 0

Marking useful stmt: # DEBUG rtp_hold_timeout_sec => 0

Marking useful stmt: engine_21->reset_codec = 0;

Marking useful stmt: D.46182_70 = switch_rtp_ready (D.46140_69);

Marking useful stmt: switch_core_media_set_video_codec (session_13(D), 1);

Marking useful stmt: D.46188_71 = switch_core_media_set_codec (session_13(D), 1, 0);

Marking useful stmt: *frame_52(D) = 0B;

Marking useful stmt: # DEBUG status => 9

Marking useful stmt: val_74 = switch_channel_get_variable_dup (D.46145_73, "rtp_timeout_sec", 1, -1);

Marking useful stmt: # DEBUG val => val_74

Marking useful stmt: # DEBUG __nptr => val_74

Marking useful stmt: v_431 = strtol (val_74, 0B, 10);

Marking useful stmt: # DEBUG v => NULL

Marking useful stmt: # DEBUG rtp_timeout_sec => v_431

Marking useful stmt: # DEBUG rtp_timeout_sec => rtp_timeout_sec_4

Marking useful stmt: val_78 = switch_channel_get_variable_dup (D.46145_77, "rtp_hold_timeout_sec", 1, -1);

Marking useful stmt: # DEBUG val => val_78

Marking useful stmt: # DEBUG __nptr => val_78

Marking useful stmt: v_432 = strtol (val_78, 0B, 10);

Marking useful stmt: # DEBUG v => NULL

Marking useful stmt: # DEBUG rtp_hold_timeout_sec => v_432

Marking useful stmt: # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_5

Marking useful stmt: engine_21->max_missed_packets = D.46205_85;

Marking useful stmt: switch_rtp_set_max_missed_packets (D.46140_86, D.46206_87);

Marking useful stmt: # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_88

Marking useful stmt: # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_6

Marking useful stmt: engine_21->max_missed_hold_packets = D.46213_93;

Marking useful stmt: engine_21->check_frames = 0;

Marking useful stmt: engine_21->last_ts = 0;

Marking useful stmt: # DEBUG do_cng => 1

Marking useful stmt: # DEBUG do_cng => do_cng_2

Marking useful stmt: *frame_52(D) = D.46162_95;

Marking useful stmt: D.46173_97->flags = D.46175_99;

Marking useful stmt: D.46173_100->datalen = D.46176_101;

Marking useful stmt: memset (D.46177_103, 0, D.46178_105);

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: D.46216_108 = switch_rtcp_zerocopy_read_frame (D.46140_107, &rtcp_frame);

Marking useful stmt: D.46219_109 = switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 1747, &event, 71, 0B);

Marking useful stmt: uuid_110 = switch_core_session_get_uuid (session_13(D));

Marking useful stmt: # DEBUG uuid => uuid_110

Marking useful stmt: D.46225_112 = switch_core_session_get_uuid (session_13(D));

Marking useful stmt: switch_event_add_header_string (event.132_111, 1, "Unique-ID", D.46225_112);

Marking useful stmt: snprintf (&value, 30, &"%.8x"[0], D.46227_114);

Marking useful stmt: switch_event_add_header_string (event.132_115, 1, "SSRC", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46229_117);

Marking useful stmt: switch_event_add_header_string (event.132_118, 1, "NTP-Most-Significant-Word", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46230_120);

Marking useful stmt: switch_event_add_header_string (event.132_121, 1, "NTP-Least-Significant-Word", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46231_123);

Marking useful stmt: switch_event_add_header_string (event.132_124, 1, "RTP-Timestamp", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46232_126);

Marking useful stmt: switch_event_add_header_string (event.132_127, 1, "Sender-Packet-Count", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46233_129);

Marking useful stmt: switch_event_add_header_string (event.132_130, 1, "Octect-Packet-Count", &value);

Marking useful stmt: snprintf (&value, 30, &"%d"[0], D.46235_132);

Marking useful stmt: switch_event_add_header_string (event.132_133, 1, "Last-RTP-Timestamp", &value);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46236_135);

Marking useful stmt: switch_event_add_header_string (event.132_136, 1, "RTP-Rate", &value);

Marking useful stmt: D.46238_138 = switch_time_now ();

Marking useful stmt: snprintf (&value, 30, &"%lld"[0], D.46238_138);

Marking useful stmt: switch_event_add_header_string (event.132_139, 1, "Capture-Time", &value);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: snprintf (&header, 50, &"Source%u-SSRC"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%.8x"[0], D.46240_145);

Marking useful stmt: switch_event_add_header_string (event.132_146, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-Fraction"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46243_150);

Marking useful stmt: switch_event_add_header_string (event.132_151, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-Lost"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46245_154);

Marking useful stmt: switch_event_add_header_string (event.132_155, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-Highest-Sequence-Number-Received"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46247_158);

Marking useful stmt: switch_event_add_header_string (event.132_159, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-Jitter"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46249_162);

Marking useful stmt: switch_event_add_header_string (event.132_163, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-LSR"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46251_166);

Marking useful stmt: switch_event_add_header_string (event.132_167, 1, &header, &value);

Marking useful stmt: snprintf (&header, 50, &"Source%u-DLSR"[0], i_7);

Marking useful stmt: snprintf (&value, 30, &"%u"[0], D.46253_170);

Marking useful stmt: switch_event_add_header_string (event.132_171, 1, &header, &value);

Marking useful stmt: # DEBUG i => i_172

Marking useful stmt: # DEBUG i => i_7

Marking useful stmt: switch_event_fire_detailed ("src/switch_core_media.c", &__func__, 1809, &event, 0B);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1810, session_13(D), 110, "Dispatched RTCP event\n");

Marking useful stmt: *frame_52(D) = D.46162_175;

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: D.46260_178 = switch_rtp_has_dtmf (D.46140_177);

Marking useful stmt: switch_rtp_dequeue_dtmf (D.46140_179, &dtmf);

Marking useful stmt: switch_channel_queue_dtmf (D.46145_180, &dtmf);

Marking useful stmt: # DEBUG bytes => 0

Marking useful stmt: # DEBUG frames => 1

Marking useful stmt: # DEBUG codec => D.46138_187

Marking useful stmt: *frame_52(D) = 0B;

Marking useful stmt: # DEBUG status => 9

Marking useful stmt: engine_21->check_frames = D.46279_192;

Marking useful stmt: engine_21->check_frames = 50;

Marking useful stmt: # DEBUG codec_ms => codec_ms_205

Marking useful stmt: engine_21->last_ts = 0;

Marking useful stmt: engine_21->mismatch_count = D.46305_212;

Marking useful stmt: engine_21->last_codec_ms = codec_ms_205;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1871, session_13(D), 4, "Your phone is trying to send timestamps that suggest an increment of %dms per packet\nThat seems hard to believe so I am going to go on ahead and um ignore that, mmkay?\n", codec_ms.133_216);

Marking useful stmt: engine_21->check_frames = 50;

Marking useful stmt: engine_21->read_frame.datalen = 0;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1882, session_13(D), 4, "Asynchronous PTIME not supported, changing our end from %d to %d\n", D.46317_221, codec_ms.133_222);

Marking useful stmt: switch_channel_set_variable_printf (D.46145_223, "rtp_h_X-Broken-PTIME", "Adv=%d;Sent=%d", D.46317_226, codec_ms.133_227);

Marking useful stmt: D.46308_228->codec_ms = codec_ms_205;

Marking useful stmt: engine_21->reset_codec = 2;

Marking useful stmt: engine_21->mismatch_count = 0;

Marking useful stmt: engine_21->last_ts = D.46235_229;

Marking useful stmt: engine_21->mismatch_count = 0;

Marking useful stmt: engine_21->last_ts = 0;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1926, session_13(D), 7, "alternate payload received (received %d, expecting %d)\n", D.46344_257, D.46345_260);

Marking useful stmt: switch_mutex_lock (D.46346_261);

Marking useful stmt: # DEBUG pmap => pmap_262

Marking useful stmt: engine_21->cur_payload_map = pmap_9;

Marking useful stmt: D.46308_266->current = 1;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1937, session_13(D), 4, "Changing current codec to %s (payload type %d).\n", D.46353_267, D.46355_269);

Marking useful stmt: engine_21->reset_codec = 1;

Marking useful stmt: # DEBUG pmap => pmap_270

Marking useful stmt: # DEBUG pmap => pmap_9

Marking useful stmt: switch_mutex_unlock (D.46346_271);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1949, session_13(D), 4, "Could not change to payload type %d, ignoring...\n", D.46344_274);

Marking useful stmt: skip:

Marking useful stmt: # DEBUG bytes => bytes_275

Marking useful stmt: # DEBUG frames => frames_278

Marking useful stmt: # DEBUG frames => frames_8

Marking useful stmt: engine_21->read_frame.samples = D.46362_281;

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG do_cng => do_cng_3

Marking useful stmt: *frame_52(D) = 0B;

Marking useful stmt: *frame_52(D) = D.46162_285;

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: end:

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: switch_mutex_unlock (D.46151_288);

Marking useful stmt: return status_10;

can not prove finiteness of loop 1
Marking useful stmt: if (D.46263_181 != 0)

Marking useful stmt: if (D.46263_282 == 0)

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pmap_9)
(get_scalar_evolution 
  (scalar = pmap_9)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_9 = PHI <pmap_262(106), pmap_270(110)>
)
  (init_cond = pmap_262))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_9 = PHI <pmap_262(106), pmap_270(110)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 106 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pmap_9)
(get_scalar_evolution 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
(set_scalar_evolution 
  instantiated_below = 106 
  (scalar = pmap_9)
  (scalar_evolution = pmap_9))
)
can not prove finiteness of loop 3
Marking useful stmt: if (D.46330_263 == D.46347_264)

Marking useful stmt: if (D.46350_265 != 0)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46255_142)
(get_scalar_evolution 
  (scalar = D.46255_142)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.46255_142)
  (scalar_evolution = (int) D.46254_141))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.46254_141)
(get_scalar_evolution 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
(set_scalar_evolution 
  instantiated_below = 53 
  (scalar = D.46254_141)
  (scalar_evolution = D.46254_141))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.46255_142 > i_7)


Processing worklist:
processing: if (D.46255_142 > i_7)

Marking useful stmt: if (D.46219_109 == 0)

marking necessary through D.46255_142 stmt D.46255_142 = (int) D.46254_141;
marking necessary through i_7 stmt i_7 = PHI <0(53), i_172(54)>
processing: i_7 = PHI <0(53), i_172(54)>

marking necessary through i_172 stmt i_172 = i_7 + 1;
processing: i_172 = i_7 + 1;

processing: D.46255_142 = (int) D.46254_141;

marking necessary through D.46254_141 stmt D.46254_141 = rtcp_frame.report_count;
processing: D.46254_141 = rtcp_frame.report_count;

marking necessary through .MEM_392 stmt dtmf = {};
processing: dtmf = {};

Marking useful stmt: if (D.46260_178 != 0)

processing: if (D.46260_178 != 0)

Marking useful stmt: if (D.46257_174 != 0)

processing: if (D.46257_174 != 0)

Marking useful stmt: if (do_cng_2 != 0)

marking necessary through D.46257_174 stmt D.46257_174 = D.46256_173 & 32;
processing: D.46257_174 = D.46256_173 & 32;

marking necessary through D.46256_173 stmt D.46256_173 = engine_21->read_frame.flags;
processing: D.46256_173 = engine_21->read_frame.flags;

marking necessary through engine_21 stmt engine_21 = &smh_14->engines[type_19(D)]{lb: 0 sz: 11416};
processing: engine_21 = &smh_14->engines[type_19(D)]{lb: 0 sz: 11416};

Marking useful stmt: if (D.46129_16 == 0)

marking necessary through smh_14 stmt smh_14 = session_13(D)->media_handle;
processing: smh_14 = session_13(D)->media_handle;

Marking useful stmt: if (session_13(D) == 0B)

processing: if (session_13(D) == 0B)

processing: if (D.46129_16 == 0)

Marking useful stmt: if (smh_14 == 0B)

marking necessary through D.46129_16 stmt D.46129_16 = smh_14->media_flags[0];
processing: D.46129_16 = smh_14->media_flags[0];

processing: if (smh_14 == 0B)

processing: if (do_cng_2 != 0)

Marking useful stmt: if (D.46179_66 != 0)

Marking useful stmt: if (D.46182_70 != 0)

Marking useful stmt: if (type_19(D) == 1)

Marking useful stmt: if (D.46188_71 != 0)

marking necessary through do_cng_2 stmt do_cng_2 = PHI <do_cng_3(29), 1(46)>
processing: do_cng_2 = PHI <do_cng_3(29), 1(46)>

marking necessary through do_cng_3 stmt do_cng_3 = PHI <do_cng_183(127), do_cng_286(118)>
processing: do_cng_3 = PHI <do_cng_183(127), do_cng_286(118)>

Marking useful stmt: if (D.46151_32 != 0B)

Marking useful stmt: if (D.46154_34 != 0)

marking necessary through do_cng_183 stmt do_cng_183 = PHI <0(19), 0(20)>
marking necessary through do_cng_286 stmt do_cng_286 = PHI <do_cng_2(117), do_cng_2(61)>
processing: do_cng_286 = PHI <do_cng_2(117), do_cng_2(61)>

processing: do_cng_183 = PHI <0(19), 0(20)>

processing: if (D.46154_34 != 0)

processing: if (D.46151_32 != 0B)

Marking useful stmt: if (D.46150_31 != 0)

marking necessary through D.46151_32 stmt D.46151_32 = engine_21->read_mutex[type_19(D)];
processing: D.46151_32 = engine_21->read_mutex[type_19(D)];

processing: if (D.46150_31 != 0)

Marking useful stmt: if (D.46148_29 == 0)

processing: if (D.46148_29 == 0)

Marking useful stmt: if (D.46146_27 > 9)

processing: if (D.46146_27 > 9)

Marking useful stmt: if (D.46140_25 == 0B)

processing: if (D.46140_25 == 0B)

Marking useful stmt: if (iftmp.104_429 == 0)

marking necessary through D.46140_25 stmt D.46140_25 = engine_21->rtp_session;
processing: D.46140_25 = engine_21->rtp_session;

processing: if (iftmp.104_429 == 0)

Marking useful stmt: if (D.46136_22 == 0B)

marking necessary through iftmp.104_429 stmt iftmp.104_429 = PHI <1(11), 0(12)>
processing: iftmp.104_429 = PHI <1(11), 0(12)>

Marking useful stmt: if (D.47774_427 != 0B)

Marking useful stmt: if (D.46138_23 != 0B)

Marking useful stmt: if (D.47776_425 != 0)

Marking useful stmt: if (D.47775_426 != 0B)

Marking useful stmt: if (D.47773_428 != 0B)

processing: if (D.47773_428 != 0B)

marking necessary through D.47773_428 stmt D.47773_428 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
processing: D.47773_428 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;

processing: if (D.47775_426 != 0B)

marking necessary through D.47775_426 stmt D.47775_426 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
processing: D.47775_426 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;

processing: if (D.47776_425 != 0)

marking necessary through D.47776_425 stmt D.47776_425 = D.47777_424 & 256;
processing: D.47776_425 = D.47777_424 & 256;

marking necessary through D.47777_424 stmt D.47777_424 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
processing: D.47777_424 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;

processing: if (D.46138_23 != 0B)

marking necessary through D.46138_23 stmt D.46138_23 = &engine_21->read_codec;
processing: D.46138_23 = &engine_21->read_codec;

processing: if (D.47774_427 != 0B)

marking necessary through D.47774_427 stmt D.47774_427 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
processing: D.47774_427 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;

processing: if (D.46136_22 == 0B)

marking necessary through D.46136_22 stmt D.46136_22 = engine_21->read_codec.implementation;
processing: D.46136_22 = engine_21->read_codec.implementation;

processing: if (D.46188_71 != 0)

processing: if (type_19(D) == 1)

processing: if (D.46182_70 != 0)

processing: if (D.46179_66 != 0)

Marking useful stmt: if (D.46165_48 != 0)

marking necessary through D.46179_66 stmt D.46179_66 = engine_21->reset_codec;
processing: D.46179_66 = engine_21->reset_codec;

processing: if (D.46165_48 != 0)

Marking useful stmt: if (D.46263_41 == 0)

marking necessary through D.46165_48 stmt D.46165_48 = D.46163_46 && D.46164_47;
processing: D.46165_48 = D.46163_46 && D.46164_47;

marking necessary through D.46163_46 stmt D.46163_46 = status_45 != 0;
marking necessary through D.46164_47 stmt D.46164_47 = status_45 != 11;
processing: D.46164_47 = status_45 != 11;

processing: D.46163_46 = status_45 != 0;

processing: if (D.46263_41 == 0)

Marking useful stmt: if (D.46129_40 != 0)

marking necessary through D.46263_41 stmt D.46263_41 = engine_21->read_frame.datalen;
processing: D.46263_41 = engine_21->read_frame.datalen;

processing: if (D.46129_40 != 0)

marking necessary through D.46129_40 stmt D.46129_40 = smh_14->media_flags[0];
processing: D.46129_40 = smh_14->media_flags[0];

processing: if (D.46219_109 == 0)

Marking useful stmt: if (D.46216_108 == 0)

processing: if (D.46216_108 == 0)

processing: if (D.46350_265 != 0)

marking necessary through D.46350_265 stmt D.46350_265 = pmap_9->negotiated;
processing: D.46350_265 = pmap_9->negotiated;

marking necessary through pmap_9 stmt pmap_9 = PHI <pmap_262(106), pmap_270(110)>
processing: pmap_9 = PHI <pmap_262(106), pmap_270(110)>

Marking useful stmt: if (D.46330_253 != D.46341_255)

marking necessary through pmap_262 stmt pmap_262 = engine_21->payload_map;
marking necessary through pmap_270 stmt pmap_270 = pmap_9->next;
processing: pmap_270 = pmap_9->next;

processing: pmap_262 = engine_21->payload_map;

processing: if (D.46330_253 != D.46341_255)

Marking useful stmt: if (D.46330_250 != D.46338_252)

marking necessary through D.46330_253 stmt D.46330_253 = engine_21->read_frame.payload;
marking necessary through D.46341_255 stmt D.46341_255 = D.46308_254->pt;
processing: D.46341_255 = D.46308_254->pt;

marking necessary through D.46308_254 stmt D.46308_254 = engine_21->cur_payload_map;
processing: D.46308_254 = engine_21->cur_payload_map;

processing: D.46330_253 = engine_21->read_frame.payload;

processing: if (D.46330_250 != D.46338_252)

Marking useful stmt: if (D.46330_247 != D.46335_249)

marking necessary through D.46330_250 stmt D.46330_250 = engine_21->read_frame.payload;
marking necessary through D.46338_252 stmt D.46338_252 = D.46308_251->agreed_pt;
processing: D.46338_252 = D.46308_251->agreed_pt;

marking necessary through D.46308_251 stmt D.46308_251 = engine_21->cur_payload_map;
processing: D.46308_251 = engine_21->cur_payload_map;

processing: D.46330_250 = engine_21->read_frame.payload;

processing: if (D.46330_247 != D.46335_249)

Marking useful stmt: if (D.46333_243 == 0)

Marking useful stmt: if (D.46330_244 != D.46333_246)

marking necessary through D.46330_247 stmt D.46330_247 = engine_21->read_frame.payload;
marking necessary through D.46335_249 stmt D.46335_249 = D.46308_248->recv_pt;
processing: D.46335_249 = D.46308_248->recv_pt;

marking necessary through D.46308_248 stmt D.46308_248 = engine_21->cur_payload_map;
processing: D.46308_248 = engine_21->cur_payload_map;

processing: D.46330_247 = engine_21->read_frame.payload;

processing: if (D.46330_244 != D.46333_246)

marking necessary through D.46330_244 stmt D.46330_244 = engine_21->read_frame.payload;
marking necessary through D.46333_246 stmt D.46333_246 = D.46327_245->te;
processing: D.46333_246 = D.46327_245->te;

marking necessary through D.46327_245 stmt D.46327_245 = smh_14->mparams;
processing: D.46327_245 = smh_14->mparams;

processing: D.46330_244 = engine_21->read_frame.payload;

processing: if (D.46333_243 == 0)

Marking useful stmt: if (D.46331_238 == 0)

Marking useful stmt: if (D.46330_239 != D.46331_241)

marking necessary through D.46333_243 stmt D.46333_243 = D.46327_242->te;
processing: D.46333_243 = D.46327_242->te;

marking necessary through D.46327_242 stmt D.46327_242 = smh_14->mparams;
processing: D.46327_242 = smh_14->mparams;

processing: if (D.46330_239 != D.46331_241)

marking necessary through D.46330_239 stmt D.46330_239 = engine_21->read_frame.payload;
marking necessary through D.46331_241 stmt D.46331_241 = D.46327_240->recv_te;
processing: D.46331_241 = D.46327_240->recv_te;

marking necessary through D.46327_240 stmt D.46327_240 = smh_14->mparams;
processing: D.46327_240 = smh_14->mparams;

processing: D.46330_239 = engine_21->read_frame.payload;

processing: if (D.46331_238 == 0)

Marking useful stmt: if (D.46328_233 == 0)

Marking useful stmt: if (D.46330_234 != D.46328_236)

marking necessary through D.46331_238 stmt D.46331_238 = D.46327_237->recv_te;
processing: D.46331_238 = D.46327_237->recv_te;

marking necessary through D.46327_237 stmt D.46327_237 = smh_14->mparams;
processing: D.46327_237 = smh_14->mparams;

processing: if (D.46330_234 != D.46328_236)

marking necessary through D.46330_234 stmt D.46330_234 = engine_21->read_frame.payload;
marking necessary through D.46328_236 stmt D.46328_236 = D.46327_235->cng_pt;
processing: D.46328_236 = D.46327_235->cng_pt;

marking necessary through D.46327_235 stmt D.46327_235 = smh_14->mparams;
processing: D.46327_235 = smh_14->mparams;

processing: D.46330_234 = engine_21->read_frame.payload;

processing: if (D.46328_233 == 0)

Marking useful stmt: if (D.46324_231 != 0)

marking necessary through D.46328_233 stmt D.46328_233 = D.46327_232->cng_pt;
processing: D.46328_233 = D.46327_232->cng_pt;

marking necessary through D.46327_232 stmt D.46327_232 = smh_14->mparams;
processing: D.46327_232 = smh_14->mparams;

processing: if (D.46324_231 != 0)

Marking useful stmt: if (D.46179_230 == 0)

marking necessary through D.46324_231 stmt D.46324_231 = engine_21->codec_negotiated;
processing: D.46324_231 = engine_21->codec_negotiated;

processing: if (D.46179_230 == 0)

Marking useful stmt: if (D.46273_189 != 0)

Marking useful stmt: if (D.46276_190 <= 49)

Marking useful stmt: if (D.46273_194 != 0)

Marking useful stmt: if (D.46285_196 == 0)

Marking useful stmt: if (D.46289_197 != 0)

Marking useful stmt: if (D.46263_198 != D.46176_199)

Marking useful stmt: if (D.46304_213 > 5)

Marking useful stmt: if (D.46309_215 != codec_ms_205)

Marking useful stmt: if (codec_ms_205 > 120)

marking necessary through D.46179_230 stmt D.46179_230 = engine_21->reset_codec;
processing: D.46179_230 = engine_21->reset_codec;

processing: if (codec_ms_205 > 120)

marking necessary through codec_ms_205 stmt codec_ms_205 = D.46292_202 / D.46293_204;
processing: codec_ms_205 = D.46292_202 / D.46293_204;

marking necessary through D.46292_202 stmt D.46292_202 = D.46235_200 - D.46289_201;
marking necessary through D.46293_204 stmt D.46293_204 = D.46201_203 / 1000;
processing: D.46293_204 = D.46201_203 / 1000;

marking necessary through D.46201_203 stmt D.46201_203 = engine_21->read_impl.samples_per_second;
processing: D.46201_203 = engine_21->read_impl.samples_per_second;

processing: D.46292_202 = D.46235_200 - D.46289_201;

marking necessary through D.46235_200 stmt D.46235_200 = engine_21->read_frame.timestamp;
marking necessary through D.46289_201 stmt D.46289_201 = engine_21->last_ts;
processing: D.46289_201 = engine_21->last_ts;

processing: D.46235_200 = engine_21->read_frame.timestamp;

processing: if (D.46309_215 != codec_ms_205)

marking necessary through D.46309_215 stmt D.46309_215 = D.46308_214->codec_ms;
processing: D.46309_215 = D.46308_214->codec_ms;

marking necessary through D.46308_214 stmt D.46308_214 = engine_21->cur_payload_map;
processing: D.46308_214 = engine_21->cur_payload_map;

processing: if (D.46304_213 > 5)

Marking useful stmt: if (D.46298_208 < codec_ms_205)

marking necessary through D.46304_213 stmt D.46304_213 = engine_21->mismatch_count;
processing: D.46304_213 = engine_21->mismatch_count;

processing: if (D.46298_208 < codec_ms_205)

Marking useful stmt: if (D.46296_206 != 0)

marking necessary through D.46298_208 stmt D.46298_208 = D.46204_207 * 10;
processing: D.46298_208 = D.46204_207 * 10;

marking necessary through D.46204_207 stmt D.46204_207 = engine_21->read_impl.samples_per_packet;
processing: D.46204_207 = engine_21->read_impl.samples_per_packet;

processing: if (D.46296_206 != 0)

marking necessary through D.46296_206 stmt D.46296_206 = codec_ms_205 % 10;
processing: D.46296_206 = codec_ms_205 % 10;

processing: if (D.46263_198 != D.46176_199)

marking necessary through D.46263_198 stmt D.46263_198 = engine_21->read_frame.datalen;
marking necessary through D.46176_199 stmt D.46176_199 = engine_21->read_impl.encoded_bytes_per_packet;
processing: D.46176_199 = engine_21->read_impl.encoded_bytes_per_packet;

processing: D.46263_198 = engine_21->read_frame.datalen;

processing: if (D.46289_197 != 0)

marking necessary through D.46289_197 stmt D.46289_197 = engine_21->last_ts;
processing: D.46289_197 = engine_21->last_ts;

processing: if (D.46285_196 == 0)

marking necessary through D.46285_196 stmt D.46285_196 = D.46263_195 % 10;
processing: D.46285_196 = D.46263_195 % 10;

marking necessary through D.46263_195 stmt D.46263_195 = engine_21->read_frame.datalen;
processing: D.46263_195 = engine_21->read_frame.datalen;

processing: if (D.46273_194 != 0)

Marking useful stmt: if (D.46176_193 == 0)

marking necessary through D.46273_194 stmt D.46273_194 = smh_14->media_flags[2];
processing: D.46273_194 = smh_14->media_flags[2];

processing: if (D.46176_193 == 0)

marking necessary through D.46176_193 stmt D.46176_193 = engine_21->read_impl.encoded_bytes_per_packet;
processing: D.46176_193 = engine_21->read_impl.encoded_bytes_per_packet;

processing: if (D.46276_190 <= 49)

marking necessary through D.46276_190 stmt D.46276_190 = engine_21->check_frames;
processing: D.46276_190 = engine_21->check_frames;

processing: if (D.46273_189 != 0)

Marking useful stmt: if (iftmp.104_438 == 0)

marking necessary through D.46273_189 stmt D.46273_189 = smh_14->media_flags[2];
processing: D.46273_189 = smh_14->media_flags[2];

processing: if (iftmp.104_438 == 0)

Marking useful stmt: if (D.46136_186 == 0B)

marking necessary through iftmp.104_438 stmt iftmp.104_438 = PHI <1(68), 0(69)>
processing: iftmp.104_438 = PHI <1(68), 0(69)>

Marking useful stmt: if (D.47789_436 != 0B)

Marking useful stmt: if (D.46138_187 != 0B)

Marking useful stmt: if (D.47791_434 != 0)

Marking useful stmt: if (D.47790_435 != 0B)

Marking useful stmt: if (D.47788_437 != 0B)

processing: if (D.47788_437 != 0B)

marking necessary through D.47788_437 stmt D.47788_437 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
processing: D.47788_437 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;

processing: if (D.47790_435 != 0B)

marking necessary through D.47790_435 stmt D.47790_435 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
processing: D.47790_435 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;

processing: if (D.47791_434 != 0)

marking necessary through D.47791_434 stmt D.47791_434 = D.47792_433 & 256;
processing: D.47791_434 = D.47792_433 & 256;

marking necessary through D.47792_433 stmt D.47792_433 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
processing: D.47792_433 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;

processing: if (D.46138_187 != 0B)

marking necessary through D.46138_187 stmt D.46138_187 = &engine_21->read_codec;
processing: D.46138_187 = &engine_21->read_codec;

processing: if (D.47789_436 != 0B)

marking necessary through D.47789_436 stmt D.47789_436 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
processing: D.47789_436 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;

processing: if (D.46136_186 == 0B)

Marking useful stmt: if (D.46266_185 == 0)

marking necessary through D.46136_186 stmt D.46136_186 = engine_21->read_codec.implementation;
processing: D.46136_186 = engine_21->read_codec.implementation;

processing: if (D.46266_185 == 0)

marking necessary through D.46266_185 stmt D.46266_185 = D.46256_184 & 1;
processing: D.46266_185 = D.46256_184 & 1;

marking necessary through D.46256_184 stmt D.46256_184 = engine_21->read_frame.flags;
processing: D.46256_184 = engine_21->read_frame.flags;

processing: if (D.46330_263 == D.46347_264)

Marking useful stmt: if (pmap_9 != 0B)

marking necessary through D.46330_263 stmt D.46330_263 = engine_21->read_frame.payload;
marking necessary through D.46347_264 stmt D.46347_264 = pmap_9->recv_pt;
processing: D.46347_264 = pmap_9->recv_pt;

processing: D.46330_263 = engine_21->read_frame.payload;

processing: if (pmap_9 != 0B)

processing: if (D.46263_282 == 0)

marking necessary through D.46263_282 stmt D.46263_282 = engine_21->read_frame.datalen;
processing: D.46263_282 = engine_21->read_frame.datalen;

processing: if (D.46263_181 != 0)

marking necessary through D.46263_181 stmt D.46263_181 = engine_21->read_frame.datalen;
processing: D.46263_181 = engine_21->read_frame.datalen;

processing: return status_10;

marking necessary through status_10 stmt status_10 = PHI <1(4), 1(5), 1(13), 1(17), 10(23), status_1(125), 1(6), 1(16), 1(18)>
processing: status_10 = PHI <1(4), 1(5), 1(13), 1(17), 10(23), status_1(125), 1(6), 1(16), 1(18)>

marking necessary through status_1 stmt status_1 = PHI <0(27), status_45(28), 9(34), 0(48), 0(58), 9(71), 0(122), status_45(25)>
processing: status_1 = PHI <0(27), status_45(28), 9(34), 0(48), 0(58), 9(71), 0(122), status_45(25)>

Marking useful stmt: if (D.46170_50 != 0B)

processing: if (D.46170_50 != 0B)

Marking useful stmt: if (status_45 == 2)

processing: if (status_45 == 2)

processing: switch_mutex_unlock (D.46151_288);

Marking useful stmt: if (D.46151_287 != 0B)

marking necessary through D.46151_288 stmt D.46151_288 = engine_21->read_mutex[type_19(D)];
processing: D.46151_288 = engine_21->read_mutex[type_19(D)];

processing: if (D.46151_287 != 0B)

marking necessary through D.46151_287 stmt D.46151_287 = engine_21->read_mutex[type_19(D)];
processing: D.46151_287 = engine_21->read_mutex[type_19(D)];

processing: *frame_52(D) = D.46162_285;

marking necessary through D.46162_285 stmt D.46162_285 = &engine_21->read_frame;
processing: D.46162_285 = &engine_21->read_frame;

processing: *frame_52(D) = 0B;

Marking useful stmt: if (D.46263_284 == 0)

processing: if (D.46263_284 == 0)

marking necessary through D.46263_284 stmt D.46263_284 = engine_21->read_frame.datalen;
processing: D.46263_284 = engine_21->read_frame.datalen;

processing: engine_21->read_frame.samples = D.46362_281;

marking necessary through D.46362_281 stmt D.46362_281 = D.46204_279 * frames.134_280;
processing: D.46362_281 = D.46204_279 * frames.134_280;

marking necessary through D.46204_279 stmt D.46204_279 = engine_21->read_impl.samples_per_packet;
marking necessary through frames.134_280 stmt frames.134_280 = (uint32_t) frames_8;
processing: frames.134_280 = (uint32_t) frames_8;

marking necessary through frames_8 stmt frames_8 = PHI <1(114), frames_278(115)>
processing: frames_8 = PHI <1(114), frames_278(115)>

marking necessary through frames_278 stmt frames_278 = (int) D.46360_277;
Marking useful stmt: if (bytes_275 != 0)

processing: if (bytes_275 != 0)

marking necessary through bytes_275 stmt bytes_275 = engine_21->read_impl.encoded_bytes_per_packet;
processing: bytes_275 = engine_21->read_impl.encoded_bytes_per_packet;

processing: frames_278 = (int) D.46360_277;

marking necessary through D.46360_277 stmt D.46360_277 = D.46263_276 / bytes_275;
processing: D.46360_277 = D.46263_276 / bytes_275;

marking necessary through D.46263_276 stmt D.46263_276 = engine_21->read_frame.datalen;
processing: D.46263_276 = engine_21->read_frame.datalen;

processing: D.46204_279 = engine_21->read_impl.samples_per_packet;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1949, session_13(D), 4, "Could not change to payload type %d, ignoring...\n", D.46344_274);

Marking useful stmt: if (D.46179_272 == 0)

marking necessary through D.46344_274 stmt D.46344_274 = (int) D.46330_273;
processing: D.46344_274 = (int) D.46330_273;

marking necessary through D.46330_273 stmt D.46330_273 = engine_21->read_frame.payload;
processing: D.46330_273 = engine_21->read_frame.payload;

processing: if (D.46179_272 == 0)

marking necessary through D.46179_272 stmt D.46179_272 = engine_21->reset_codec;
processing: D.46179_272 = engine_21->reset_codec;

processing: switch_mutex_unlock (D.46346_271);

marking necessary through D.46346_271 stmt D.46346_271 = smh_14->sdp_mutex;
processing: D.46346_271 = smh_14->sdp_mutex;

processing: engine_21->reset_codec = 1;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1937, session_13(D), 4, "Changing current codec to %s (payload type %d).\n", D.46353_267, D.46355_269);

marking necessary through D.46353_267 stmt D.46353_267 = pmap_9->iananame;
marking necessary through D.46355_269 stmt D.46355_269 = (int) D.46354_268;
processing: D.46355_269 = (int) D.46354_268;

marking necessary through D.46354_268 stmt D.46354_268 = pmap_9->pt;
processing: D.46354_268 = pmap_9->pt;

processing: D.46353_267 = pmap_9->iananame;

processing: D.46308_266->current = 1;

marking necessary through D.46308_266 stmt D.46308_266 = engine_21->cur_payload_map;
processing: D.46308_266 = engine_21->cur_payload_map;

processing: engine_21->cur_payload_map = pmap_9;

processing: switch_mutex_lock (D.46346_261);

marking necessary through D.46346_261 stmt D.46346_261 = smh_14->sdp_mutex;
processing: D.46346_261 = smh_14->sdp_mutex;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1926, session_13(D), 7, "alternate payload received (received %d, expecting %d)\n", D.46344_257, D.46345_260);

marking necessary through D.46344_257 stmt D.46344_257 = (int) D.46330_256;
marking necessary through D.46345_260 stmt D.46345_260 = (int) D.46338_259;
processing: D.46345_260 = (int) D.46338_259;

marking necessary through D.46338_259 stmt D.46338_259 = D.46308_258->agreed_pt;
processing: D.46338_259 = D.46308_258->agreed_pt;

marking necessary through D.46308_258 stmt D.46308_258 = engine_21->cur_payload_map;
processing: D.46308_258 = engine_21->cur_payload_map;

processing: D.46344_257 = (int) D.46330_256;

marking necessary through D.46330_256 stmt D.46330_256 = engine_21->read_frame.payload;
processing: D.46330_256 = engine_21->read_frame.payload;

processing: engine_21->last_ts = 0;

processing: engine_21->mismatch_count = 0;

processing: engine_21->last_ts = D.46235_229;

marking necessary through D.46235_229 stmt D.46235_229 = engine_21->read_frame.timestamp;
processing: D.46235_229 = engine_21->read_frame.timestamp;

processing: engine_21->mismatch_count = 0;

processing: engine_21->reset_codec = 2;

Marking useful stmt: if (D.46309_218 != codec_ms_205)

processing: if (D.46309_218 != codec_ms_205)

marking necessary through D.46309_218 stmt D.46309_218 = D.46308_217->codec_ms;
processing: D.46309_218 = D.46308_217->codec_ms;

marking necessary through D.46308_217 stmt D.46308_217 = engine_21->cur_payload_map;
processing: D.46308_217 = engine_21->cur_payload_map;

processing: D.46308_228->codec_ms = codec_ms_205;

marking necessary through D.46308_228 stmt D.46308_228 = engine_21->cur_payload_map;
processing: D.46308_228 = engine_21->cur_payload_map;

processing: switch_channel_set_variable_printf (D.46145_223, "rtp_h_X-Broken-PTIME", "Adv=%d;Sent=%d", D.46317_226, codec_ms.133_227);

marking necessary through D.46145_223 stmt D.46145_223 = session_13(D)->channel;
marking necessary through D.46317_226 stmt D.46317_226 = (int) D.46309_225;
marking necessary through codec_ms.133_227 stmt codec_ms.133_227 = (int) codec_ms_205;
processing: codec_ms.133_227 = (int) codec_ms_205;

processing: D.46317_226 = (int) D.46309_225;

marking necessary through D.46309_225 stmt D.46309_225 = D.46308_224->codec_ms;
processing: D.46309_225 = D.46308_224->codec_ms;

marking necessary through D.46308_224 stmt D.46308_224 = engine_21->cur_payload_map;
processing: D.46308_224 = engine_21->cur_payload_map;

processing: D.46145_223 = session_13(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1882, session_13(D), 4, "Asynchronous PTIME not supported, changing our end from %d to %d\n", D.46317_221, codec_ms.133_222);

marking necessary through D.46317_221 stmt D.46317_221 = (int) D.46309_220;
marking necessary through codec_ms.133_222 stmt codec_ms.133_222 = (int) codec_ms_205;
processing: codec_ms.133_222 = (int) codec_ms_205;

processing: D.46317_221 = (int) D.46309_220;

marking necessary through D.46309_220 stmt D.46309_220 = D.46308_219->codec_ms;
processing: D.46309_220 = D.46308_219->codec_ms;

marking necessary through D.46308_219 stmt D.46308_219 = engine_21->cur_payload_map;
processing: D.46308_219 = engine_21->cur_payload_map;

processing: engine_21->read_frame.datalen = 0;

processing: engine_21->check_frames = 50;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1871, session_13(D), 4, "Your phone is trying to send timestamps that suggest an increment of %dms per packet\nThat seems hard to believe so I am going to go on ahead and um ignore that, mmkay?\n", codec_ms.133_216);

marking necessary through codec_ms.133_216 stmt codec_ms.133_216 = (int) codec_ms_205;
processing: codec_ms.133_216 = (int) codec_ms_205;

processing: engine_21->last_codec_ms = codec_ms_205;

processing: engine_21->mismatch_count = D.46305_212;

Marking useful stmt: if (D.46299_210 == codec_ms_205)

marking necessary through D.46305_212 stmt D.46305_212 = D.46304_211 + 1;
processing: D.46305_212 = D.46304_211 + 1;

marking necessary through D.46304_211 stmt D.46304_211 = engine_21->mismatch_count;
processing: D.46304_211 = engine_21->mismatch_count;

processing: if (D.46299_210 == codec_ms_205)

Marking useful stmt: if (D.46299_209 != 0)

marking necessary through D.46299_210 stmt D.46299_210 = engine_21->last_codec_ms;
processing: D.46299_210 = engine_21->last_codec_ms;

processing: if (D.46299_209 != 0)

marking necessary through D.46299_209 stmt D.46299_209 = engine_21->last_codec_ms;
processing: D.46299_209 = engine_21->last_codec_ms;

processing: engine_21->last_ts = 0;

processing: engine_21->check_frames = 50;

processing: engine_21->check_frames = D.46279_192;

marking necessary through D.46279_192 stmt D.46279_192 = D.46276_191 + 1;
processing: D.46279_192 = D.46276_191 + 1;

marking necessary through D.46276_191 stmt D.46276_191 = engine_21->check_frames;
processing: D.46276_191 = engine_21->check_frames;

processing: *frame_52(D) = 0B;

processing: switch_channel_queue_dtmf (D.46145_180, &dtmf);

marking necessary through D.46145_180 stmt D.46145_180 = session_13(D)->channel;
processing: D.46145_180 = session_13(D)->channel;

processing: switch_rtp_dequeue_dtmf (D.46140_179, &dtmf);

marking necessary through D.46140_179 stmt D.46140_179 = engine_21->rtp_session;
processing: D.46140_179 = engine_21->rtp_session;

processing: D.46260_178 = switch_rtp_has_dtmf (D.46140_177);

marking necessary through D.46140_177 stmt D.46140_177 = engine_21->rtp_session;
processing: D.46140_177 = engine_21->rtp_session;

processing: *frame_52(D) = D.46162_175;

marking necessary through D.46162_175 stmt D.46162_175 = &engine_21->read_frame;
processing: D.46162_175 = &engine_21->read_frame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1810, session_13(D), 110, "Dispatched RTCP event\n");

processing: switch_event_fire_detailed ("src/switch_core_media.c", &__func__, 1809, &event, 0B);

processing: switch_event_add_header_string (event.132_171, 1, &header, &value);

marking necessary through event.132_171 stmt event.132_171 = event;
processing: event.132_171 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46253_170);

marking necessary through D.46253_170 stmt D.46253_170 = rtcp_frame.reports[i_7].dlsr;
processing: D.46253_170 = rtcp_frame.reports[i_7].dlsr;

processing: snprintf (&header, 50, &"Source%u-DLSR"[0], i_7);

processing: switch_event_add_header_string (event.132_167, 1, &header, &value);

marking necessary through event.132_167 stmt event.132_167 = event;
processing: event.132_167 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46251_166);

marking necessary through D.46251_166 stmt D.46251_166 = rtcp_frame.reports[i_7].lsr;
processing: D.46251_166 = rtcp_frame.reports[i_7].lsr;

processing: snprintf (&header, 50, &"Source%u-LSR"[0], i_7);

processing: switch_event_add_header_string (event.132_163, 1, &header, &value);

marking necessary through event.132_163 stmt event.132_163 = event;
processing: event.132_163 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46249_162);

marking necessary through D.46249_162 stmt D.46249_162 = rtcp_frame.reports[i_7].jitter;
processing: D.46249_162 = rtcp_frame.reports[i_7].jitter;

processing: snprintf (&header, 50, &"Source%u-Jitter"[0], i_7);

processing: switch_event_add_header_string (event.132_159, 1, &header, &value);

marking necessary through event.132_159 stmt event.132_159 = event;
processing: event.132_159 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46247_158);

marking necessary through D.46247_158 stmt D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
processing: D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;

processing: snprintf (&header, 50, &"Source%u-Highest-Sequence-Number-Received"[0], i_7);

processing: switch_event_add_header_string (event.132_155, 1, &header, &value);

marking necessary through event.132_155 stmt event.132_155 = event;
processing: event.132_155 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46245_154);

marking necessary through D.46245_154 stmt D.46245_154 = rtcp_frame.reports[i_7].lost;
processing: D.46245_154 = rtcp_frame.reports[i_7].lost;

processing: snprintf (&header, 50, &"Source%u-Lost"[0], i_7);

processing: switch_event_add_header_string (event.132_151, 1, &header, &value);

marking necessary through event.132_151 stmt event.132_151 = event;
processing: event.132_151 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46243_150);

marking necessary through D.46243_150 stmt D.46243_150 = (int) D.46242_149;
processing: D.46243_150 = (int) D.46242_149;

marking necessary through D.46242_149 stmt D.46242_149 = rtcp_frame.reports[i_7].fraction;
processing: D.46242_149 = rtcp_frame.reports[i_7].fraction;

processing: snprintf (&header, 50, &"Source%u-Fraction"[0], i_7);

processing: switch_event_add_header_string (event.132_146, 1, &header, &value);

marking necessary through event.132_146 stmt event.132_146 = event;
processing: event.132_146 = event;

processing: snprintf (&value, 30, &"%.8x"[0], D.46240_145);

marking necessary through D.46240_145 stmt D.46240_145 = rtcp_frame.reports[i_7].ssrc;
processing: D.46240_145 = rtcp_frame.reports[i_7].ssrc;

processing: snprintf (&header, 50, &"Source%u-SSRC"[0], i_7);

processing: switch_event_add_header_string (event.132_139, 1, "Capture-Time", &value);

marking necessary through event.132_139 stmt event.132_139 = event;
processing: event.132_139 = event;

processing: snprintf (&value, 30, &"%lld"[0], D.46238_138);

processing: D.46238_138 = switch_time_now ();

processing: switch_event_add_header_string (event.132_136, 1, "RTP-Rate", &value);

marking necessary through event.132_136 stmt event.132_136 = event;
processing: event.132_136 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46236_135);

marking necessary through D.46236_135 stmt D.46236_135 = engine_21->read_frame.rate;
processing: D.46236_135 = engine_21->read_frame.rate;

processing: switch_event_add_header_string (event.132_133, 1, "Last-RTP-Timestamp", &value);

marking necessary through event.132_133 stmt event.132_133 = event;
processing: event.132_133 = event;

processing: snprintf (&value, 30, &"%d"[0], D.46235_132);

marking necessary through D.46235_132 stmt D.46235_132 = engine_21->read_frame.timestamp;
processing: D.46235_132 = engine_21->read_frame.timestamp;

processing: switch_event_add_header_string (event.132_130, 1, "Octect-Packet-Count", &value);

marking necessary through event.132_130 stmt event.132_130 = event;
processing: event.132_130 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46233_129);

marking necessary through D.46233_129 stmt D.46233_129 = rtcp_frame.octect_count;
processing: D.46233_129 = rtcp_frame.octect_count;

processing: switch_event_add_header_string (event.132_127, 1, "Sender-Packet-Count", &value);

marking necessary through event.132_127 stmt event.132_127 = event;
processing: event.132_127 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46232_126);

marking necessary through D.46232_126 stmt D.46232_126 = rtcp_frame.packet_count;
processing: D.46232_126 = rtcp_frame.packet_count;

processing: switch_event_add_header_string (event.132_124, 1, "RTP-Timestamp", &value);

marking necessary through event.132_124 stmt event.132_124 = event;
processing: event.132_124 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46231_123);

marking necessary through D.46231_123 stmt D.46231_123 = rtcp_frame.timestamp;
processing: D.46231_123 = rtcp_frame.timestamp;

processing: switch_event_add_header_string (event.132_121, 1, "NTP-Least-Significant-Word", &value);

marking necessary through event.132_121 stmt event.132_121 = event;
processing: event.132_121 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46230_120);

marking necessary through D.46230_120 stmt D.46230_120 = rtcp_frame.ntp_lsw;
processing: D.46230_120 = rtcp_frame.ntp_lsw;

processing: switch_event_add_header_string (event.132_118, 1, "NTP-Most-Significant-Word", &value);

marking necessary through event.132_118 stmt event.132_118 = event;
processing: event.132_118 = event;

processing: snprintf (&value, 30, &"%u"[0], D.46229_117);

marking necessary through D.46229_117 stmt D.46229_117 = rtcp_frame.ntp_msw;
processing: D.46229_117 = rtcp_frame.ntp_msw;

processing: switch_event_add_header_string (event.132_115, 1, "SSRC", &value);

marking necessary through event.132_115 stmt event.132_115 = event;
processing: event.132_115 = event;

processing: snprintf (&value, 30, &"%.8x"[0], D.46227_114);

marking necessary through D.46227_114 stmt D.46227_114 = rtcp_frame.ssrc;
processing: D.46227_114 = rtcp_frame.ssrc;

processing: switch_event_add_header_string (event.132_111, 1, "Unique-ID", D.46225_112);

Marking useful stmt: if (uuid_110 != 0B)

marking necessary through event.132_111 stmt event.132_111 = event;
processing: event.132_111 = event;

processing: if (uuid_110 != 0B)

processing: D.46225_112 = switch_core_session_get_uuid (session_13(D));

processing: uuid_110 = switch_core_session_get_uuid (session_13(D));

processing: D.46219_109 = switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 1747, &event, 71, 0B);

processing: D.46216_108 = switch_rtcp_zerocopy_read_frame (D.46140_107, &rtcp_frame);

marking necessary through D.46140_107 stmt D.46140_107 = engine_21->rtp_session;
processing: D.46140_107 = engine_21->rtp_session;

processing: memset (D.46177_103, 0, D.46178_105);

marking necessary through D.46177_103 stmt D.46177_103 = D.46173_102->data;
marking necessary through D.46178_105 stmt D.46178_105 = D.46173_104->datalen;
processing: D.46178_105 = D.46173_104->datalen;

marking necessary through D.46173_104 stmt D.46173_104 = *frame_52(D);
processing: D.46173_104 = *frame_52(D);

processing: D.46177_103 = D.46173_102->data;

marking necessary through D.46173_102 stmt D.46173_102 = *frame_52(D);
processing: D.46173_102 = *frame_52(D);

processing: D.46173_100->datalen = D.46176_101;

marking necessary through D.46173_100 stmt D.46173_100 = *frame_52(D);
marking necessary through D.46176_101 stmt D.46176_101 = engine_21->read_impl.encoded_bytes_per_packet;
processing: D.46176_101 = engine_21->read_impl.encoded_bytes_per_packet;

processing: D.46173_100 = *frame_52(D);

processing: D.46173_97->flags = D.46175_99;

marking necessary through D.46173_97 stmt D.46173_97 = *frame_52(D);
marking necessary through D.46175_99 stmt D.46175_99 = D.46174_98 | 1;
processing: D.46175_99 = D.46174_98 | 1;

marking necessary through D.46174_98 stmt D.46174_98 = D.46173_97->flags;
processing: D.46174_98 = D.46173_97->flags;

processing: D.46173_97 = *frame_52(D);

processing: *frame_52(D) = D.46162_95;

marking necessary through D.46162_95 stmt D.46162_95 = &engine_21->read_frame;
processing: D.46162_95 = &engine_21->read_frame;

processing: engine_21->last_ts = 0;

processing: engine_21->check_frames = 0;

processing: engine_21->max_missed_hold_packets = D.46213_93;

Marking useful stmt: if (rtp_hold_timeout_sec_6 != 0)

marking necessary through D.46213_93 stmt D.46213_93 = D.46212_91 / D.46204_92;
processing: D.46213_93 = D.46212_91 / D.46204_92;

marking necessary through D.46212_91 stmt D.46212_91 = D.46201_89 * rtp_hold_timeout_sec.131_90;
marking necessary through D.46204_92 stmt D.46204_92 = engine_21->read_impl.samples_per_packet;
processing: D.46204_92 = engine_21->read_impl.samples_per_packet;

processing: D.46212_91 = D.46201_89 * rtp_hold_timeout_sec.131_90;

marking necessary through D.46201_89 stmt D.46201_89 = engine_21->read_impl.samples_per_second;
marking necessary through rtp_hold_timeout_sec.131_90 stmt rtp_hold_timeout_sec.131_90 = (uint32_t) rtp_hold_timeout_sec_6;
processing: rtp_hold_timeout_sec.131_90 = (uint32_t) rtp_hold_timeout_sec_6;

marking necessary through rtp_hold_timeout_sec_6 stmt rtp_hold_timeout_sec_6 = PHI <rtp_hold_timeout_sec_5(41), rtp_hold_timeout_sec_5(42), rtp_hold_timeout_sec_88(43)>
processing: rtp_hold_timeout_sec_6 = PHI <rtp_hold_timeout_sec_5(41), rtp_hold_timeout_sec_5(42), rtp_hold_timeout_sec_88(43)>

marking necessary through rtp_hold_timeout_sec_5 stmt rtp_hold_timeout_sec_5 = PHI <0(38), 0(39), v_432(40)>
marking necessary through rtp_hold_timeout_sec_88 stmt rtp_hold_timeout_sec_88 = rtp_timeout_sec_4 * 10;
Marking useful stmt: if (rtp_timeout_sec_4 != 0)

Marking useful stmt: if (rtp_hold_timeout_sec_5 == 0)

processing: if (rtp_hold_timeout_sec_5 == 0)

processing: if (rtp_timeout_sec_4 != 0)

marking necessary through rtp_timeout_sec_4 stmt rtp_timeout_sec_4 = PHI <0(35), 0(36), v_431(37)>
processing: rtp_timeout_sec_4 = PHI <0(35), 0(36), v_431(37)>

Marking useful stmt: if (val_74 != 0B)

Marking useful stmt: if (v_431 >= 0)

processing: if (v_431 >= 0)

processing: if (val_74 != 0B)

processing: rtp_hold_timeout_sec_88 = rtp_timeout_sec_4 * 10;

processing: rtp_hold_timeout_sec_5 = PHI <0(38), 0(39), v_432(40)>

Marking useful stmt: if (val_78 != 0B)

Marking useful stmt: if (v_432 >= 0)

processing: if (v_432 >= 0)

processing: if (val_78 != 0B)

processing: D.46201_89 = engine_21->read_impl.samples_per_second;

processing: if (rtp_hold_timeout_sec_6 != 0)

processing: switch_rtp_set_max_missed_packets (D.46140_86, D.46206_87);

marking necessary through D.46140_86 stmt D.46140_86 = engine_21->rtp_session;
marking necessary through D.46206_87 stmt D.46206_87 = engine_21->max_missed_packets;
processing: D.46206_87 = engine_21->max_missed_packets;

processing: D.46140_86 = engine_21->rtp_session;

processing: engine_21->max_missed_packets = D.46205_85;

marking necessary through D.46205_85 stmt D.46205_85 = D.46203_83 / D.46204_84;
processing: D.46205_85 = D.46203_83 / D.46204_84;

marking necessary through D.46203_83 stmt D.46203_83 = D.46201_81 * rtp_timeout_sec.130_82;
marking necessary through D.46204_84 stmt D.46204_84 = engine_21->read_impl.samples_per_packet;
processing: D.46204_84 = engine_21->read_impl.samples_per_packet;

processing: D.46203_83 = D.46201_81 * rtp_timeout_sec.130_82;

marking necessary through D.46201_81 stmt D.46201_81 = engine_21->read_impl.samples_per_second;
marking necessary through rtp_timeout_sec.130_82 stmt rtp_timeout_sec.130_82 = (uint32_t) rtp_timeout_sec_4;
processing: rtp_timeout_sec.130_82 = (uint32_t) rtp_timeout_sec_4;

processing: D.46201_81 = engine_21->read_impl.samples_per_second;

processing: v_432 = strtol (val_78, 0B, 10);

processing: val_78 = switch_channel_get_variable_dup (D.46145_77, "rtp_hold_timeout_sec", 1, -1);

marking necessary through D.46145_77 stmt D.46145_77 = session_13(D)->channel;
processing: D.46145_77 = session_13(D)->channel;

processing: v_431 = strtol (val_74, 0B, 10);

processing: val_74 = switch_channel_get_variable_dup (D.46145_73, "rtp_timeout_sec", 1, -1);

marking necessary through D.46145_73 stmt D.46145_73 = session_13(D)->channel;
processing: D.46145_73 = session_13(D)->channel;

processing: *frame_52(D) = 0B;

processing: D.46188_71 = switch_core_media_set_codec (session_13(D), 1, 0);

processing: switch_core_media_set_video_codec (session_13(D), 1);

processing: D.46182_70 = switch_rtp_ready (D.46140_69);

marking necessary through D.46140_69 stmt D.46140_69 = engine_21->rtp_session;
processing: D.46140_69 = engine_21->rtp_session;

processing: engine_21->reset_codec = 0;

processing: switch_channel_perform_hangup (D.46145_65, "src/switch_core_media.c", &__func__, 1674, 604);

marking necessary through D.46145_65 stmt D.46145_65 = session_13(D)->channel;
processing: D.46145_65 = session_13(D)->channel;

processing: switch_channel_execute_on (D.46145_63, "execute_on_media_timeout");

marking necessary through D.46145_63 stmt D.46145_63 = session_13(D)->channel;
processing: D.46145_63 = session_13(D)->channel;

processing: memset (D.46177_60, 0, D.46178_62);

marking necessary through D.46177_60 stmt D.46177_60 = D.46173_59->data;
marking necessary through D.46178_62 stmt D.46178_62 = D.46173_61->datalen;
processing: D.46178_62 = D.46173_61->datalen;

marking necessary through D.46173_61 stmt D.46173_61 = *frame_52(D);
processing: D.46173_61 = *frame_52(D);

processing: D.46177_60 = D.46173_59->data;

marking necessary through D.46173_59 stmt D.46173_59 = *frame_52(D);
processing: D.46173_59 = *frame_52(D);

processing: D.46173_57->datalen = D.46176_58;

marking necessary through D.46173_57 stmt D.46173_57 = *frame_52(D);
marking necessary through D.46176_58 stmt D.46176_58 = engine_21->read_impl.encoded_bytes_per_packet;
processing: D.46176_58 = engine_21->read_impl.encoded_bytes_per_packet;

processing: D.46173_57 = *frame_52(D);

processing: D.46173_54->flags = D.46175_56;

marking necessary through D.46173_54 stmt D.46173_54 = *frame_52(D);
marking necessary through D.46175_56 stmt D.46175_56 = D.46174_55 | 1;
processing: D.46175_56 = D.46174_55 | 1;

marking necessary through D.46174_55 stmt D.46174_55 = D.46173_54->flags;
processing: D.46174_55 = D.46173_54->flags;

processing: D.46173_54 = *frame_52(D);

processing: *frame_52(D) = D.46162_51;

marking necessary through D.46162_51 stmt D.46162_51 = &engine_21->read_frame;
processing: D.46162_51 = &engine_21->read_frame;

processing: D.46170_50 = switch_channel_get_variable_dup (D.46145_49, "execute_on_media_timeout", 1, -1);

marking necessary through D.46145_49 stmt D.46145_49 = session_13(D)->channel;
processing: D.46145_49 = session_13(D)->channel;

processing: status_45 = switch_rtp_zerocopy_read_frame (D.46140_42, D.46162_43, flags_44(D));

marking necessary through D.46140_42 stmt D.46140_42 = engine_21->rtp_session;
marking necessary through D.46162_43 stmt D.46162_43 = &engine_21->read_frame;
processing: D.46162_43 = &engine_21->read_frame;

processing: D.46140_42 = engine_21->rtp_session;

processing: engine_21->read_frame.flags = 0;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1650, session_13(D), 101, "%s is already being read for %s\n", D.46157_36, iftmp.129_11);

marking necessary through iftmp.129_11 stmt iftmp.129_11 = PHI <"video"(21), "audio"(22)>
processing: iftmp.129_11 = PHI <"video"(21), "audio"(22)>

Marking useful stmt: if (type_19(D) == 1)

processing: if (type_19(D) == 1)

processing: D.46157_36 = switch_channel_get_name (D.46145_35);

marking necessary through D.46145_35 stmt D.46145_35 = session_13(D)->channel;
processing: D.46145_35 = session_13(D)->channel;

processing: D.46154_34 = switch_mutex_trylock (D.46151_33);

marking necessary through D.46151_33 stmt D.46151_33 = engine_21->read_mutex[type_19(D)];
processing: D.46151_33 = engine_21->read_mutex[type_19(D)];

processing: D.46150_31 = switch_channel_test_flag (D.46145_30, 45);

marking necessary through D.46145_30 stmt D.46145_30 = session_13(D)->channel;
processing: D.46145_30 = session_13(D)->channel;

processing: D.46148_29 = switch_rtp_ready (D.46140_28);

marking necessary through D.46140_28 stmt D.46140_28 = engine_21->rtp_session;
processing: D.46140_28 = engine_21->rtp_session;

processing: D.46146_27 = switch_channel_get_state (D.46145_26);

marking necessary through D.46145_26 stmt D.46145_26 = session_13(D)->channel;
processing: D.46145_26 = session_13(D)->channel;

processing: engine_21->read_frame.datalen = 0;

processing: __assert_fail ("engine->rtp_session != ((void *)0)", "src/switch_core_media.c", 1641, &__PRETTY_FUNCTION__);

processing: engine_21->read_frame.datalen = 0;

processing: __assert_fail ("session", "src/switch_core_media.c", 1623, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : rtp_hold_timeout_sec_80 = v_432;

Deleting : rtp_timeout_sec_76 = v_431;

Deleting : status_289 = status_1;

Removed 3 of 466 statements (0%)
Removed 0 of 36 PHI nodes (0%)
Removing basic block 125
;; basic block 125, loop depth 0, count 0
;; prev block 124, next block 126
;; pred:      
;; succ:       126 (fallthru,exec)
<bb 125>:


Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtcp_frame_t rtcp_frame;
  struct switch_rtp_engine_t * engine;
  switch_status_t status;
  struct switch_media_handle_t * smh;
  int do_cng;
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_read_frame";
  static const char __func__[29] = "switch_core_media_read_frame";
  void end = <<< error >>>; (unused)
  void skip = <<< error >>>; (unused)

  { Scope block #153 src/switch_core_media.c:1637 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
    struct switch_codec_t * codec; (unused)

    { Scope block #154 Originating from :#0 

    }

  }

  { Scope block #155 
    const char * val;
    int rtp_timeout_sec;
    int rtp_hold_timeout_sec;

    { Scope block #156 
      int v;

      { Scope block #157 src/switch_core_media.c:1698 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #158 Originating from :#0 

        }

      }

    }

    { Scope block #159 
      int v;

      { Scope block #160 src/switch_core_media.c:1705 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #161 Originating from :#0 

        }

      }

    }

  }

  { Scope block #162 
    struct switch_event_t * event;

    { Scope block #163 
      char value[30];
      char header[50];
      int i;
      char * uuid;

    }

  }

  { Scope block #164 
    struct switch_dtmf_t dtmf;

  }

  { Scope block #165 
    uint32_t bytes;
    int frames;

    { Scope block #166 src/switch_core_media.c:1832 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
      struct switch_codec_t * codec; (unused)

      { Scope block #167 Originating from :#0 

      }

    }

    { Scope block #168 
      uint32_t codec_ms;

    }

    { Scope block #169 
      struct payload_map_t * pmap;

    }

  }

}
switch_core_media_read_frame (struct switch_core_session_t * session, struct switch_frame_t * * frame, switch_io_flag_t flags, int stream_id, switch_media_type_t type)
{
  int iftmp.104;
  uint32_t D.47792;
  uint32_t D.47791;
  struct switch_mutex_t * D.47790;
  struct switch_codec_interface_t * D.47789;
  const struct switch_codec_implementation_t * D.47788;
  int iftmp.104;
  uint32_t D.47777;
  uint32_t D.47776;
  struct switch_mutex_t * D.47775;
  struct switch_codec_interface_t * D.47774;
  const struct switch_codec_implementation_t * D.47773;
  struct payload_map_t * pmap;
  uint32_t codec_ms;
  int frames;
  uint32_t bytes;
  struct switch_dtmf_t dtmf;
  char * uuid;
  int i;
  char header[50];
  char value[30];
  struct switch_event_t * event;
  int v;
  int v;
  int rtp_hold_timeout_sec;
  int rtp_timeout_sec;
  const char * val;
  static const char __func__[29] = "switch_core_media_read_frame";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_read_frame";
  int do_cng;
  struct switch_media_handle_t * smh;
  switch_status_t status;
  struct switch_rtp_engine_t * engine;
  struct switch_rtcp_frame_t rtcp_frame;
  uint32_t D.46362;
  uint32_t frames.134;
  uint32_t D.46360;
  int D.46355;
  switch_payload_t D.46354;
  char * D.46353;
  uint8_t D.46350;
  switch_payload_t D.46347;
  struct switch_mutex_t * D.46346;
  int D.46345;
  int D.46344;
  switch_payload_t D.46341;
  switch_payload_t D.46338;
  switch_payload_t D.46335;
  switch_payload_t D.46333;
  switch_payload_t D.46331;
  switch_payload_t D.46330;
  switch_payload_t D.46328;
  struct switch_core_media_params_t * D.46327;
  uint8_t D.46324;
  int D.46317;
  int codec_ms.133;
  uint32_t D.46309;
  struct payload_map_t * D.46308;
  uint32_t D.46305;
  uint32_t D.46304;
  uint32_t D.46299;
  uint32_t D.46298;
  uint32_t D.46296;
  uint32_t D.46293;
  switch_size_t D.46292;
  switch_size_t D.46289;
  uint32_t D.46285;
  uint32_t D.46279;
  uint32_t D.46276;
  switch_core_media_flag_t D.46273;
  switch_frame_flag_t D.46266;
  uint32_t D.46263;
  switch_size_t D.46260;
  switch_frame_flag_t D.46257;
  switch_frame_flag_t D.46256;
  int D.46255;
  uint16_t D.46254;
  uint32_t D.46253;
  uint32_t D.46251;
  uint32_t D.46249;
  uint32_t D.46247;
  uint32_t D.46245;
  int D.46243;
  uint8_t D.46242;
  uint32_t D.46240;
  switch_time_t D.46238;
  uint32_t D.46236;
  switch_size_t D.46235;
  uint32_t D.46233;
  uint32_t D.46232;
  uint32_t D.46231;
  uint32_t D.46230;
  uint32_t D.46229;
  uint32_t D.46227;
  char * D.46225;
  struct switch_event_t * event.132;
  switch_status_t D.46219;
  switch_status_t D.46216;
  uint32_t D.46213;
  uint32_t D.46212;
  uint32_t rtp_hold_timeout_sec.131;
  uint32_t D.46206;
  uint32_t D.46205;
  uint32_t D.46204;
  uint32_t D.46203;
  uint32_t rtp_timeout_sec.130;
  uint32_t D.46201;
  switch_status_t D.46188;
  uint8_t D.46182;
  uint8_t D.46179;
  uint32_t D.46178;
  void * D.46177;
  uint32_t D.46176;
  switch_frame_flag_t D.46175;
  switch_frame_flag_t D.46174;
  struct switch_frame_t * D.46173;
  const char * D.46170;
  _Bool D.46165;
  _Bool D.46164;
  _Bool D.46163;
  struct switch_frame_t * D.46162;
  char * iftmp.129;
  char * D.46157;
  switch_status_t D.46154;
  struct switch_mutex_t * D.46151;
  uint32_t D.46150;
  uint8_t D.46148;
  switch_channel_state_t D.46146;
  struct switch_channel_t * D.46145;
  struct switch_rtp_t * D.46140;
  struct switch_codec_t * D.46138;
  const struct switch_codec_implementation_t * D.46136;
  switch_core_media_flag_t D.46129;

<bb 2>:
  # DEBUG do_cng => 0
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1623, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_14 = session_13(D)->media_handle;
  # DEBUG smh => smh_14
  if (smh_14 == 0B)
    goto <bb 127>;
  else
    goto <bb 5>;

<bb 5>:
  D.46129_16 = smh_14->media_flags[0];
  if (D.46129_16 == 0)
    goto <bb 127>;
  else
    goto <bb 6>;

<bb 6>:
  engine_21 = &smh_14->engines[type_19(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_21
  engine_21->read_frame.datalen = 0;
  D.46136_22 = engine_21->read_codec.implementation;
  if (D.46136_22 == 0B)
    goto <bb 127>;
  else
    goto <bb 7>;

<bb 7>:
  D.46138_23 = &engine_21->read_codec;
  # DEBUG codec => D.46138_23
  if (D.46138_23 != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;

<bb 8>:
  D.47777_424 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
  D.47776_425 = D.47777_424 & 256;
  if (D.47776_425 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.47775_426 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
  if (D.47775_426 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.47774_427 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
  if (D.47774_427 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.47773_428 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
  if (D.47773_428 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # iftmp.104_429 = PHI <1(11), 0(12)>
  if (iftmp.104_429 == 0)
    goto <bb 127>;
  else
    goto <bb 14>;

<bb 14>:
  D.46140_25 = engine_21->rtp_session;
  if (D.46140_25 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  __assert_fail ("engine->rtp_session != ((void *)0)", "src/switch_core_media.c", 1641, &__PRETTY_FUNCTION__);

<bb 16>:
  engine_21->read_frame.datalen = 0;
  D.46145_26 = session_13(D)->channel;
  D.46146_27 = switch_channel_get_state (D.46145_26);
  if (D.46146_27 > 9)
    goto <bb 127>;
  else
    goto <bb 17>;

<bb 17>:
  D.46140_28 = engine_21->rtp_session;
  D.46148_29 = switch_rtp_ready (D.46140_28);
  if (D.46148_29 == 0)
    goto <bb 127>;
  else
    goto <bb 18>;

<bb 18>:
  D.46145_30 = session_13(D)->channel;
  D.46150_31 = switch_channel_test_flag (D.46145_30, 45);
  if (D.46150_31 != 0)
    goto <bb 127>;
  else
    goto <bb 19>;

<bb 19>:
  D.46151_32 = engine_21->read_mutex[type_19(D)];
  if (D.46151_32 != 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:
  # do_cng_183 = PHI <0(19), 0(21)>
  goto <bb 120>;

<bb 21>:
  D.46151_33 = engine_21->read_mutex[type_19(D)];
  D.46154_34 = switch_mutex_trylock (D.46151_33);
  if (D.46154_34 != 0)
    goto <bb 22>;
  else
    goto <bb 20>;

<bb 22>:
  D.46145_35 = session_13(D)->channel;
  D.46157_36 = switch_channel_get_name (D.46145_35);
  if (type_19(D) == 1)
    goto <bb 24>;
  else
    goto <bb 23>;

<bb 23>:

<bb 24>:
  # iftmp.129_11 = PHI <"video"(22), "audio"(23)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1650, session_13(D), 101, "%s is already being read for %s\n", D.46157_36, iftmp.129_11);
  goto <bb 127>;

<bb 25>:
  engine_21->read_frame.flags = 0;
  D.46140_42 = engine_21->rtp_session;
  D.46162_43 = &engine_21->read_frame;
  status_45 = switch_rtp_zerocopy_read_frame (D.46140_42, D.46162_43, flags_44(D));
  # DEBUG status => status_45
  D.46163_46 = status_45 != 0;
  D.46164_47 = status_45 != 11;
  D.46165_48 = D.46163_46 && D.46164_47;
  if (D.46165_48 != 0)
    goto <bb 26>;
  else
    goto <bb 30>;

<bb 26>:
  if (status_45 == 2)
    goto <bb 27>;
  else
    goto <bb 125> (end);

<bb 27>:
  D.46145_49 = session_13(D)->channel;
  D.46170_50 = switch_channel_get_variable_dup (D.46145_49, "execute_on_media_timeout", 1, -1);
  if (D.46170_50 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.46162_51 = &engine_21->read_frame;
  *frame_52(D) = D.46162_51;
  D.46173_54 = *frame_52(D);
  D.46174_55 = D.46173_54->flags;
  D.46175_56 = D.46174_55 | 1;
  D.46173_54->flags = D.46175_56;
  D.46173_57 = *frame_52(D);
  D.46176_58 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_57->datalen = D.46176_58;
  D.46173_59 = *frame_52(D);
  D.46177_60 = D.46173_59->data;
  D.46173_61 = *frame_52(D);
  D.46178_62 = D.46173_61->datalen;
  memset (D.46177_60, 0, D.46178_62);
  D.46145_63 = session_13(D)->channel;
  switch_channel_execute_on (D.46145_63, "execute_on_media_timeout");
  # DEBUG status => 0
  goto <bb 125> (end);

<bb 29>:
  D.46145_65 = session_13(D)->channel;
  switch_channel_perform_hangup (D.46145_65, "src/switch_core_media.c", &__func__, 1674, 604);
  goto <bb 125> (end);

<bb 30>:
  D.46179_66 = engine_21->reset_codec;
  if (D.46179_66 != 0)
    goto <bb 31>;
  else
    goto <bb 48>;

<bb 31>:
  # DEBUG rtp_timeout_sec => 0
  # DEBUG rtp_hold_timeout_sec => 0
  engine_21->reset_codec = 0;
  D.46140_69 = engine_21->rtp_session;
  D.46182_70 = switch_rtp_ready (D.46140_69);
  if (D.46182_70 != 0)
    goto <bb 32>;
  else
    goto <bb 47>;

<bb 32>:
  if (type_19(D) == 1)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  switch_core_media_set_video_codec (session_13(D), 1);
  goto <bb 36>;

<bb 34>:
  D.46188_71 = switch_core_media_set_codec (session_13(D), 1, 0);
  if (D.46188_71 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  *frame_52(D) = 0B;
  # DEBUG status => 9
  goto <bb 125> (end);

<bb 36>:
  D.46145_73 = session_13(D)->channel;
  val_74 = switch_channel_get_variable_dup (D.46145_73, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_74
  if (val_74 != 0B)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  # DEBUG __nptr => val_74
  v_431 = strtol (val_74, 0B, 10);
  # DEBUG v => NULL
  if (v_431 >= 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  # DEBUG rtp_timeout_sec => v_431

<bb 39>:
  # rtp_timeout_sec_4 = PHI <0(36), 0(37), v_431(38)>
  # DEBUG rtp_timeout_sec => rtp_timeout_sec_4
  D.46145_77 = session_13(D)->channel;
  val_78 = switch_channel_get_variable_dup (D.46145_77, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_78
  if (val_78 != 0B)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  # DEBUG __nptr => val_78
  v_432 = strtol (val_78, 0B, 10);
  # DEBUG v => NULL
  if (v_432 >= 0)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  # DEBUG rtp_hold_timeout_sec => v_432

<bb 42>:
  # rtp_hold_timeout_sec_5 = PHI <0(39), 0(40), v_432(41)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_5
  if (rtp_timeout_sec_4 != 0)
    goto <bb 43>;
  else
    goto <bb 45>;

<bb 43>:
  D.46201_81 = engine_21->read_impl.samples_per_second;
  rtp_timeout_sec.130_82 = (uint32_t) rtp_timeout_sec_4;
  D.46203_83 = D.46201_81 * rtp_timeout_sec.130_82;
  D.46204_84 = engine_21->read_impl.samples_per_packet;
  D.46205_85 = D.46203_83 / D.46204_84;
  engine_21->max_missed_packets = D.46205_85;
  D.46140_86 = engine_21->rtp_session;
  D.46206_87 = engine_21->max_missed_packets;
  switch_rtp_set_max_missed_packets (D.46140_86, D.46206_87);
  if (rtp_hold_timeout_sec_5 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  rtp_hold_timeout_sec_88 = rtp_timeout_sec_4 * 10;
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_88

<bb 45>:
  # rtp_hold_timeout_sec_6 = PHI <rtp_hold_timeout_sec_5(42), rtp_hold_timeout_sec_5(43), rtp_hold_timeout_sec_88(44)>
  # DEBUG rtp_hold_timeout_sec => rtp_hold_timeout_sec_6
  if (rtp_hold_timeout_sec_6 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  D.46201_89 = engine_21->read_impl.samples_per_second;
  rtp_hold_timeout_sec.131_90 = (uint32_t) rtp_hold_timeout_sec_6;
  D.46212_91 = D.46201_89 * rtp_hold_timeout_sec.131_90;
  D.46204_92 = engine_21->read_impl.samples_per_packet;
  D.46213_93 = D.46212_91 / D.46204_92;
  engine_21->max_missed_hold_packets = D.46213_93;

<bb 47>:
  engine_21->check_frames = 0;
  engine_21->last_ts = 0;
  # DEBUG do_cng => 1

<bb 48>:
  # do_cng_2 = PHI <do_cng_3(30), 1(47)>
  # DEBUG do_cng => do_cng_2
  if (do_cng_2 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.46162_95 = &engine_21->read_frame;
  *frame_52(D) = D.46162_95;
  D.46173_97 = *frame_52(D);
  D.46174_98 = D.46173_97->flags;
  D.46175_99 = D.46174_98 | 1;
  D.46173_97->flags = D.46175_99;
  D.46173_100 = *frame_52(D);
  D.46176_101 = engine_21->read_impl.encoded_bytes_per_packet;
  D.46173_100->datalen = D.46176_101;
  D.46173_102 = *frame_52(D);
  D.46177_103 = D.46173_102->data;
  D.46173_104 = *frame_52(D);
  D.46178_105 = D.46173_104->datalen;
  memset (D.46177_103, 0, D.46178_105);
  # DEBUG status => 0
  goto <bb 125> (end);

<bb 50>:
  D.46140_107 = engine_21->rtp_session;
  D.46216_108 = switch_rtcp_zerocopy_read_frame (D.46140_107, &rtcp_frame);
  if (D.46216_108 == 0)
    goto <bb 51>;
  else
    goto <bb 58>;

<bb 51>:
  D.46219_109 = switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 1747, &event, 71, 0B);
  if (D.46219_109 == 0)
    goto <bb 52>;
  else
    goto <bb 58>;

<bb 52>:
  uuid_110 = switch_core_session_get_uuid (session_13(D));
  # DEBUG uuid => uuid_110
  if (uuid_110 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;

<bb 53>:
  event.132_111 = event;
  D.46225_112 = switch_core_session_get_uuid (session_13(D));
  switch_event_add_header_string (event.132_111, 1, "Unique-ID", D.46225_112);

<bb 54>:
  D.46227_114 = rtcp_frame.ssrc;
  snprintf (&value, 30, &"%.8x"[0], D.46227_114);
  event.132_115 = event;
  switch_event_add_header_string (event.132_115, 1, "SSRC", &value);
  D.46229_117 = rtcp_frame.ntp_msw;
  snprintf (&value, 30, &"%u"[0], D.46229_117);
  event.132_118 = event;
  switch_event_add_header_string (event.132_118, 1, "NTP-Most-Significant-Word", &value);
  D.46230_120 = rtcp_frame.ntp_lsw;
  snprintf (&value, 30, &"%u"[0], D.46230_120);
  event.132_121 = event;
  switch_event_add_header_string (event.132_121, 1, "NTP-Least-Significant-Word", &value);
  D.46231_123 = rtcp_frame.timestamp;
  snprintf (&value, 30, &"%u"[0], D.46231_123);
  event.132_124 = event;
  switch_event_add_header_string (event.132_124, 1, "RTP-Timestamp", &value);
  D.46232_126 = rtcp_frame.packet_count;
  snprintf (&value, 30, &"%u"[0], D.46232_126);
  event.132_127 = event;
  switch_event_add_header_string (event.132_127, 1, "Sender-Packet-Count", &value);
  D.46233_129 = rtcp_frame.octect_count;
  snprintf (&value, 30, &"%u"[0], D.46233_129);
  event.132_130 = event;
  switch_event_add_header_string (event.132_130, 1, "Octect-Packet-Count", &value);
  D.46235_132 = engine_21->read_frame.timestamp;
  snprintf (&value, 30, &"%d"[0], D.46235_132);
  event.132_133 = event;
  switch_event_add_header_string (event.132_133, 1, "Last-RTP-Timestamp", &value);
  D.46236_135 = engine_21->read_frame.rate;
  snprintf (&value, 30, &"%u"[0], D.46236_135);
  event.132_136 = event;
  switch_event_add_header_string (event.132_136, 1, "RTP-Rate", &value);
  D.46238_138 = switch_time_now ();
  snprintf (&value, 30, &"%lld"[0], D.46238_138);
  event.132_139 = event;
  switch_event_add_header_string (event.132_139, 1, "Capture-Time", &value);
  # DEBUG i => 0
  goto <bb 56>;

<bb 55>:
  snprintf (&header, 50, &"Source%u-SSRC"[0], i_7);
  D.46240_145 = rtcp_frame.reports[i_7].ssrc;
  snprintf (&value, 30, &"%.8x"[0], D.46240_145);
  event.132_146 = event;
  switch_event_add_header_string (event.132_146, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Fraction"[0], i_7);
  D.46242_149 = rtcp_frame.reports[i_7].fraction;
  D.46243_150 = (int) D.46242_149;
  snprintf (&value, 30, &"%u"[0], D.46243_150);
  event.132_151 = event;
  switch_event_add_header_string (event.132_151, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Lost"[0], i_7);
  D.46245_154 = rtcp_frame.reports[i_7].lost;
  snprintf (&value, 30, &"%u"[0], D.46245_154);
  event.132_155 = event;
  switch_event_add_header_string (event.132_155, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Highest-Sequence-Number-Received"[0], i_7);
  D.46247_158 = rtcp_frame.reports[i_7].highest_sequence_number_received;
  snprintf (&value, 30, &"%u"[0], D.46247_158);
  event.132_159 = event;
  switch_event_add_header_string (event.132_159, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-Jitter"[0], i_7);
  D.46249_162 = rtcp_frame.reports[i_7].jitter;
  snprintf (&value, 30, &"%u"[0], D.46249_162);
  event.132_163 = event;
  switch_event_add_header_string (event.132_163, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-LSR"[0], i_7);
  D.46251_166 = rtcp_frame.reports[i_7].lsr;
  snprintf (&value, 30, &"%u"[0], D.46251_166);
  event.132_167 = event;
  switch_event_add_header_string (event.132_167, 1, &header, &value);
  snprintf (&header, 50, &"Source%u-DLSR"[0], i_7);
  D.46253_170 = rtcp_frame.reports[i_7].dlsr;
  snprintf (&value, 30, &"%u"[0], D.46253_170);
  event.132_171 = event;
  switch_event_add_header_string (event.132_171, 1, &header, &value);
  i_172 = i_7 + 1;
  # DEBUG i => i_172

<bb 56>:
  # i_7 = PHI <0(54), i_172(55)>
  # DEBUG i => i_7
  D.46254_141 = rtcp_frame.report_count;
  D.46255_142 = (int) D.46254_141;
  if (D.46255_142 > i_7)
    goto <bb 55>;
  else
    goto <bb 57>;

<bb 57>:
  switch_event_fire_detailed ("src/switch_core_media.c", &__func__, 1809, &event, 0B);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1810, session_13(D), 110, "Dispatched RTCP event\n");

<bb 58>:
  D.46256_173 = engine_21->read_frame.flags;
  D.46257_174 = D.46256_173 & 32;
  if (D.46257_174 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

<bb 59>:
  D.46162_175 = &engine_21->read_frame;
  *frame_52(D) = D.46162_175;
  # DEBUG status => 0
  goto <bb 125> (end);

<bb 60>:
  D.46140_177 = engine_21->rtp_session;
  D.46260_178 = switch_rtp_has_dtmf (D.46140_177);
  if (D.46260_178 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  dtmf = {};
  D.46140_179 = engine_21->rtp_session;
  switch_rtp_dequeue_dtmf (D.46140_179, &dtmf);
  D.46145_180 = session_13(D)->channel;
  switch_channel_queue_dtmf (D.46145_180, &dtmf);

<bb 62>:
  D.46263_181 = engine_21->read_frame.datalen;
  if (D.46263_181 != 0)
    goto <bb 63>;
  else
    goto <bb 119>;

<bb 63>:
  # DEBUG bytes => 0
  # DEBUG frames => 1
  D.46256_184 = engine_21->read_frame.flags;
  D.46266_185 = D.46256_184 & 1;
  if (D.46266_185 == 0)
    goto <bb 64>;
  else
    goto <bb 122>;

<bb 64>:
  D.46136_186 = engine_21->read_codec.implementation;
  if (D.46136_186 == 0B)
    goto <bb 72>;
  else
    goto <bb 65>;

<bb 65>:
  D.46138_187 = &engine_21->read_codec;
  # DEBUG codec => D.46138_187
  if (D.46138_187 != 0B)
    goto <bb 66>;
  else
    goto <bb 70>;

<bb 66>:
  D.47792_433 = MEM[(struct switch_codec_t *)engine_21 + 1524B].flags;
  D.47791_434 = D.47792_433 & 256;
  if (D.47791_434 != 0)
    goto <bb 67>;
  else
    goto <bb 70>;

<bb 67>:
  D.47790_435 = MEM[(struct switch_codec_t *)engine_21 + 1524B].mutex;
  if (D.47790_435 != 0B)
    goto <bb 68>;
  else
    goto <bb 70>;

<bb 68>:
  D.47789_436 = MEM[(struct switch_codec_t *)engine_21 + 1524B].codec_interface;
  if (D.47789_436 != 0B)
    goto <bb 69>;
  else
    goto <bb 70>;

<bb 69>:
  D.47788_437 = MEM[(struct switch_codec_t *)engine_21 + 1524B].implementation;
  if (D.47788_437 != 0B)
    goto <bb 71>;
  else
    goto <bb 70>;

<bb 70>:

<bb 71>:
  # iftmp.104_438 = PHI <1(69), 0(70)>
  if (iftmp.104_438 == 0)
    goto <bb 72>;
  else
    goto <bb 73>;

<bb 72>:
  *frame_52(D) = 0B;
  # DEBUG status => 9
  goto <bb 125> (end);

<bb 73>:
  D.46273_189 = smh_14->media_flags[2];
  if (D.46273_189 != 0)
    goto <bb 74>;
  else
    goto <bb 96>;

<bb 74>:
  D.46276_190 = engine_21->check_frames;
  if (D.46276_190 <= 49)
    goto <bb 75>;
  else
    goto <bb 96>;

<bb 75>:
  D.46276_191 = engine_21->check_frames;
  D.46279_192 = D.46276_191 + 1;
  engine_21->check_frames = D.46279_192;
  D.46176_193 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46176_193 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;

<bb 76>:
  engine_21->check_frames = 50;
  goto <bb 115> (skip);

<bb 77>:
  D.46273_194 = smh_14->media_flags[2];
  if (D.46273_194 != 0)
    goto <bb 78>;
  else
    goto <bb 95>;

<bb 78>:
  D.46263_195 = engine_21->read_frame.datalen;
  D.46285_196 = D.46263_195 % 10;
  if (D.46285_196 == 0)
    goto <bb 79>;
  else
    goto <bb 95>;

<bb 79>:
  D.46289_197 = engine_21->last_ts;
  if (D.46289_197 != 0)
    goto <bb 80>;
  else
    goto <bb 93>;

<bb 80>:
  D.46263_198 = engine_21->read_frame.datalen;
  D.46176_199 = engine_21->read_impl.encoded_bytes_per_packet;
  if (D.46263_198 != D.46176_199)
    goto <bb 81>;
  else
    goto <bb 93>;

<bb 81>:
  D.46235_200 = engine_21->read_frame.timestamp;
  D.46289_201 = engine_21->last_ts;
  D.46292_202 = D.46235_200 - D.46289_201;
  D.46201_203 = engine_21->read_impl.samples_per_second;
  D.46293_204 = D.46201_203 / 1000;
  codec_ms_205 = D.46292_202 / D.46293_204;
  # DEBUG codec_ms => codec_ms_205
  D.46296_206 = codec_ms_205 % 10;
  if (D.46296_206 != 0)
    goto <bb 83>;
  else
    goto <bb 82>;

<bb 82>:
  D.46204_207 = engine_21->read_impl.samples_per_packet;
  D.46298_208 = D.46204_207 * 10;
  if (D.46298_208 < codec_ms_205)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  engine_21->last_ts = 0;
  goto <bb 115> (skip);

<bb 84>:
  D.46299_209 = engine_21->last_codec_ms;
  if (D.46299_209 != 0)
    goto <bb 85>;
  else
    goto <bb 87>;

<bb 85>:
  D.46299_210 = engine_21->last_codec_ms;
  if (D.46299_210 == codec_ms_205)
    goto <bb 86>;
  else
    goto <bb 87>;

<bb 86>:
  D.46304_211 = engine_21->mismatch_count;
  D.46305_212 = D.46304_211 + 1;
  engine_21->mismatch_count = D.46305_212;

<bb 87>:
  engine_21->last_codec_ms = codec_ms_205;
  D.46304_213 = engine_21->mismatch_count;
  if (D.46304_213 > 5)
    goto <bb 88>;
  else
    goto <bb 94>;

<bb 88>:
  D.46308_214 = engine_21->cur_payload_map;
  D.46309_215 = D.46308_214->codec_ms;
  if (D.46309_215 != codec_ms_205)
    goto <bb 89>;
  else
    goto <bb 94>;

<bb 89>:
  if (codec_ms_205 > 120)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  codec_ms.133_216 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1871, session_13(D), 4, "Your phone is trying to send timestamps that suggest an increment of %dms per packet\nThat seems hard to believe so I am going to go on ahead and um ignore that, mmkay?\n", codec_ms.133_216);
  engine_21->check_frames = 50;
  goto <bb 115> (skip);

<bb 91>:
  engine_21->read_frame.datalen = 0;
  D.46308_217 = engine_21->cur_payload_map;
  D.46309_218 = D.46308_217->codec_ms;
  if (D.46309_218 != codec_ms_205)
    goto <bb 92>;
  else
    goto <bb 94>;

<bb 92>:
  D.46308_219 = engine_21->cur_payload_map;
  D.46309_220 = D.46308_219->codec_ms;
  D.46317_221 = (int) D.46309_220;
  codec_ms.133_222 = (int) codec_ms_205;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1882, session_13(D), 4, "Asynchronous PTIME not supported, changing our end from %d to %d\n", D.46317_221, codec_ms.133_222);
  D.46145_223 = session_13(D)->channel;
  D.46308_224 = engine_21->cur_payload_map;
  D.46309_225 = D.46308_224->codec_ms;
  D.46317_226 = (int) D.46309_225;
  codec_ms.133_227 = (int) codec_ms_205;
  switch_channel_set_variable_printf (D.46145_223, "rtp_h_X-Broken-PTIME", "Adv=%d;Sent=%d", D.46317_226, codec_ms.133_227);
  D.46308_228 = engine_21->cur_payload_map;
  D.46308_228->codec_ms = codec_ms_205;
  engine_21->reset_codec = 2;
  goto <bb 94>;

<bb 93>:
  engine_21->mismatch_count = 0;

<bb 94>:
  D.46235_229 = engine_21->read_frame.timestamp;
  engine_21->last_ts = D.46235_229;
  goto <bb 96>;

<bb 95>:
  engine_21->mismatch_count = 0;
  engine_21->last_ts = 0;

<bb 96>:
  D.46179_230 = engine_21->reset_codec;
  if (D.46179_230 == 0)
    goto <bb 97>;
  else
    goto <bb 115> (skip);

<bb 97>:
  D.46324_231 = engine_21->codec_negotiated;
  if (D.46324_231 != 0)
    goto <bb 98>;
  else
    goto <bb 115> (skip);

<bb 98>:
  D.46327_232 = smh_14->mparams;
  D.46328_233 = D.46327_232->cng_pt;
  if (D.46328_233 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;

<bb 99>:
  D.46330_234 = engine_21->read_frame.payload;
  D.46327_235 = smh_14->mparams;
  D.46328_236 = D.46327_235->cng_pt;
  if (D.46330_234 != D.46328_236)
    goto <bb 100>;
  else
    goto <bb 115> (skip);

<bb 100>:
  D.46327_237 = smh_14->mparams;
  D.46331_238 = D.46327_237->recv_te;
  if (D.46331_238 == 0)
    goto <bb 102>;
  else
    goto <bb 101>;

<bb 101>:
  D.46330_239 = engine_21->read_frame.payload;
  D.46327_240 = smh_14->mparams;
  D.46331_241 = D.46327_240->recv_te;
  if (D.46330_239 != D.46331_241)
    goto <bb 102>;
  else
    goto <bb 115> (skip);

<bb 102>:
  D.46327_242 = smh_14->mparams;
  D.46333_243 = D.46327_242->te;
  if (D.46333_243 == 0)
    goto <bb 104>;
  else
    goto <bb 103>;

<bb 103>:
  D.46330_244 = engine_21->read_frame.payload;
  D.46327_245 = smh_14->mparams;
  D.46333_246 = D.46327_245->te;
  if (D.46330_244 != D.46333_246)
    goto <bb 104>;
  else
    goto <bb 115> (skip);

<bb 104>:
  D.46330_247 = engine_21->read_frame.payload;
  D.46308_248 = engine_21->cur_payload_map;
  D.46335_249 = D.46308_248->recv_pt;
  if (D.46330_247 != D.46335_249)
    goto <bb 105>;
  else
    goto <bb 115> (skip);

<bb 105>:
  D.46330_250 = engine_21->read_frame.payload;
  D.46308_251 = engine_21->cur_payload_map;
  D.46338_252 = D.46308_251->agreed_pt;
  if (D.46330_250 != D.46338_252)
    goto <bb 106>;
  else
    goto <bb 115> (skip);

<bb 106>:
  D.46330_253 = engine_21->read_frame.payload;
  D.46308_254 = engine_21->cur_payload_map;
  D.46341_255 = D.46308_254->pt;
  if (D.46330_253 != D.46341_255)
    goto <bb 107>;
  else
    goto <bb 115> (skip);

<bb 107>:
  D.46330_256 = engine_21->read_frame.payload;
  D.46344_257 = (int) D.46330_256;
  D.46308_258 = engine_21->cur_payload_map;
  D.46338_259 = D.46308_258->agreed_pt;
  D.46345_260 = (int) D.46338_259;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1926, session_13(D), 7, "alternate payload received (received %d, expecting %d)\n", D.46344_257, D.46345_260);
  D.46346_261 = smh_14->sdp_mutex;
  switch_mutex_lock (D.46346_261);
  pmap_262 = engine_21->payload_map;
  # DEBUG pmap => pmap_262
  goto <bb 112>;

<bb 108>:
  D.46330_263 = engine_21->read_frame.payload;
  D.46347_264 = pmap_9->recv_pt;
  if (D.46330_263 == D.46347_264)
    goto <bb 109>;
  else
    goto <bb 111>;

<bb 109>:
  D.46350_265 = pmap_9->negotiated;
  if (D.46350_265 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;

<bb 110>:
  engine_21->cur_payload_map = pmap_9;
  D.46308_266 = engine_21->cur_payload_map;
  D.46308_266->current = 1;
  D.46353_267 = pmap_9->iananame;
  D.46354_268 = pmap_9->pt;
  D.46355_269 = (int) D.46354_268;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1937, session_13(D), 4, "Changing current codec to %s (payload type %d).\n", D.46353_267, D.46355_269);
  engine_21->reset_codec = 1;
  goto <bb 113>;

<bb 111>:
  pmap_270 = pmap_9->next;
  # DEBUG pmap => pmap_270

<bb 112>:
  # pmap_9 = PHI <pmap_262(107), pmap_270(111)>
  # DEBUG pmap => pmap_9
  if (pmap_9 != 0B)
    goto <bb 108>;
  else
    goto <bb 113>;

<bb 113>:
  D.46346_271 = smh_14->sdp_mutex;
  switch_mutex_unlock (D.46346_271);
  D.46179_272 = engine_21->reset_codec;
  if (D.46179_272 == 0)
    goto <bb 114>;
  else
    goto <bb 115> (skip);

<bb 114>:
  D.46330_273 = engine_21->read_frame.payload;
  D.46344_274 = (int) D.46330_273;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1949, session_13(D), 4, "Could not change to payload type %d, ignoring...\n", D.46344_274);

skip:
  bytes_275 = engine_21->read_impl.encoded_bytes_per_packet;
  # DEBUG bytes => bytes_275
  if (bytes_275 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;

<bb 116>:
  D.46263_276 = engine_21->read_frame.datalen;
  D.46360_277 = D.46263_276 / bytes_275;
  frames_278 = (int) D.46360_277;
  # DEBUG frames => frames_278

<bb 117>:
  # frames_8 = PHI <1(115), frames_278(116)>
  # DEBUG frames => frames_8
  D.46204_279 = engine_21->read_impl.samples_per_packet;
  frames.134_280 = (uint32_t) frames_8;
  D.46362_281 = D.46204_279 * frames.134_280;
  engine_21->read_frame.samples = D.46362_281;
  D.46263_282 = engine_21->read_frame.datalen;
  if (D.46263_282 == 0)
    goto <bb 118>;
  else
    goto <bb 122>;

<bb 118>:
  // predicted unlikely by continue predictor.

<bb 119>:
  # do_cng_286 = PHI <do_cng_2(118), do_cng_2(62)>

<bb 120>:
  # do_cng_3 = PHI <do_cng_183(20), do_cng_286(119)>
  # DEBUG do_cng => do_cng_3
  D.46129_40 = smh_14->media_flags[0];
  if (D.46129_40 != 0)
    goto <bb 121>;
  else
    goto <bb 122>;

<bb 121>:
  D.46263_41 = engine_21->read_frame.datalen;
  if (D.46263_41 == 0)
    goto <bb 25>;
  else
    goto <bb 122>;

<bb 122>:
  D.46263_284 = engine_21->read_frame.datalen;
  if (D.46263_284 == 0)
    goto <bb 123>;
  else
    goto <bb 124>;

<bb 123>:
  *frame_52(D) = 0B;

<bb 124>:
  D.46162_285 = &engine_21->read_frame;
  *frame_52(D) = D.46162_285;
  # DEBUG status => 0

  # status_1 = PHI <0(28), status_45(29), 9(35), 0(49), 0(59), 9(72), 0(124), status_45(26)>
end:
  # DEBUG status => status_1
  D.46151_287 = engine_21->read_mutex[type_19(D)];
  if (D.46151_287 != 0B)
    goto <bb 126>;
  else
    goto <bb 127>;

<bb 126>:
  D.46151_288 = engine_21->read_mutex[type_19(D)];
  switch_mutex_unlock (D.46151_288);

<bb 127>:
  # status_10 = PHI <1(4), 1(5), 1(13), 1(17), 10(24), status_1(126), 1(6), 1(16), 1(18), status_1(125)>
  return status_10;

}



;; Function switch_core_media_add_ice_acl (switch_core_media_add_ice_acl)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2379, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: # DEBUG engine => engine_8

Marking useful stmt: D.45900_12 = switch_core_perform_session_strdup (session_2(D), acl_name_11(D), "src/switch_core_media.c", &__func__, 2388);

Marking useful stmt: engine_8->cand_acl[D.45896_10] = D.45900_12;

Marking useful stmt: engine_8->cand_acl_count = D.45899_13;

Marking useful stmt: return D.45893_1;


Processing worklist:
processing: return D.45893_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.45893_1 stmt D.45893_1 = PHI <1(4), 0(6), 1(5)>
processing: D.45893_1 = PHI <1(4), 0(6), 1(5)>

Marking useful stmt: if (D.45896_9 <= 24)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.45896_9 <= 24)

marking necessary through D.45896_9 stmt D.45896_9 = engine_8->cand_acl_count;
processing: D.45896_9 = engine_8->cand_acl_count;

marking necessary through engine_8 stmt engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
processing: engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};

processing: if (session_2(D) == 0B)

processing: engine_8->cand_acl_count = D.45899_13;

marking necessary through D.45899_13 stmt D.45899_13 = D.45896_10 + 1;
processing: D.45899_13 = D.45896_10 + 1;

marking necessary through D.45896_10 stmt D.45896_10 = engine_8->cand_acl_count;
processing: D.45896_10 = engine_8->cand_acl_count;

processing: engine_8->cand_acl[D.45896_10] = D.45900_12;

processing: D.45900_12 = switch_core_perform_session_strdup (session_2(D), acl_name_11(D), "src/switch_core_media.c", &__func__, 2388);

processing: __assert_fail ("session", "src/switch_core_media.c", 2379, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 15 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_add_ice_acl (struct switch_core_session_t * session, switch_media_type_t type, const char * acl_name)
{
  static const char __func__[30] = "switch_core_media_add_ice_acl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_add_ice_acl";
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.45900;
  int D.45899;
  int D.45896;
  switch_status_t D.45893;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2379, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_8
  D.45896_9 = engine_8->cand_acl_count;
  if (D.45896_9 <= 24)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.45896_10 = engine_8->cand_acl_count;
  D.45900_12 = switch_core_perform_session_strdup (session_2(D), acl_name_11(D), "src/switch_core_media.c", &__func__, 2388);
  engine_8->cand_acl[D.45896_10] = D.45900_12;
  D.45899_13 = D.45896_10 + 1;
  engine_8->cand_acl_count = D.45899_13;

<bb 7>:
  # D.45893_1 = PHI <1(4), 0(6), 1(5)>
  return D.45893_1;

}



;; Function switch_core_media_check_video_codecs (switch_core_media_check_video_codecs)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 8 11 12 9 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 17 5 }
;; 5 succs { 6 17 }
;; 6 succs { 7 17 }
;; 7 succs { 14 }
;; 8 succs { 9 13 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 8 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2400, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.45871_7 = switch_channel_test_flag (D.45870_6, 98);

Marking useful stmt: smh_3->video_count = 0;

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: D.45878_14 = switch_channel_direction (D.45870_13);

Marking useful stmt: D.45881_16 = switch_channel_test_flag (D.45870_15, 114);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: smh_3->video_count = D.45885_18;

Marking useful stmt: # DEBUG i => i_19

Marking useful stmt: # DEBUG i => i_1

Marking useful stmt: switch_channel_set_flag_value (D.45870_21, 98, 1);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.45867_10)
(get_scalar_evolution 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = D.45867_10)
  (scalar_evolution = D.45867_10))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.45867_10 > i_1)


Processing worklist:
processing: if (D.45867_10 > i_1)

Marking useful stmt: if (D.45871_7 == 0)

marking necessary through D.45867_10 stmt D.45867_10 = D.45866_9->num_codecs;
marking necessary through i_1 stmt i_1 = PHI <0(7), i_19(13)>
processing: i_1 = PHI <0(7), i_19(13)>

marking necessary through i_19 stmt i_19 = i_1 + 1;
processing: i_19 = i_1 + 1;

processing: D.45867_10 = D.45866_9->num_codecs;

marking necessary through D.45866_9 stmt D.45866_9 = smh_3->mparams;
processing: D.45866_9 = smh_3->mparams;

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

Marking useful stmt: if (session_2(D) == 0B)

processing: if (session_2(D) == 0B)

processing: if (D.45871_7 == 0)

Marking useful stmt: if (D.45867_5 != 0)

processing: if (D.45867_5 != 0)

Marking useful stmt: if (smh_3 == 0B)

marking necessary through D.45867_5 stmt D.45867_5 = D.45866_4->num_codecs;
processing: D.45867_5 = D.45866_4->num_codecs;

marking necessary through D.45866_4 stmt D.45866_4 = smh_3->mparams;
processing: D.45866_4 = smh_3->mparams;

processing: if (smh_3 == 0B)

processing: return;

processing: switch_channel_set_flag_value (D.45870_21, 98, 1);

Marking useful stmt: if (D.45884_20 != 0)

marking necessary through D.45870_21 stmt D.45870_21 = session_2(D)->channel;
processing: D.45870_21 = session_2(D)->channel;

processing: if (D.45884_20 != 0)

marking necessary through D.45884_20 stmt D.45884_20 = smh_3->video_count;
processing: D.45884_20 = smh_3->video_count;

processing: smh_3->video_count = D.45885_18;

Marking useful stmt: if (D.45878_14 == 0)

Marking useful stmt: if (D.45881_16 != 0)

marking necessary through D.45885_18 stmt D.45885_18 = D.45884_17 + 1;
processing: D.45885_18 = D.45884_17 + 1;

marking necessary through D.45884_17 stmt D.45884_17 = smh_3->video_count;
processing: D.45884_17 = smh_3->video_count;

processing: if (D.45881_16 != 0)

processing: if (D.45878_14 == 0)

Marking useful stmt: if (D.45875_12 == 1)

processing: if (D.45875_12 == 1)

marking necessary through D.45875_12 stmt D.45875_12 = D.45874_11->codec_type;
processing: D.45875_12 = D.45874_11->codec_type;

marking necessary through D.45874_11 stmt D.45874_11 = smh_3->codecs[i_1];
processing: D.45874_11 = smh_3->codecs[i_1];

processing: D.45881_16 = switch_channel_test_flag (D.45870_15, 114);

marking necessary through D.45870_15 stmt D.45870_15 = session_2(D)->channel;
processing: D.45870_15 = session_2(D)->channel;

processing: D.45878_14 = switch_channel_direction (D.45870_13);

marking necessary through D.45870_13 stmt D.45870_13 = session_2(D)->channel;
processing: D.45870_13 = session_2(D)->channel;

processing: smh_3->video_count = 0;

processing: D.45871_7 = switch_channel_test_flag (D.45870_6, 98);

marking necessary through D.45870_6 stmt D.45870_6 = session_2(D)->channel;
processing: D.45870_6 = session_2(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 2400, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 37 statements (0%)
Removed 0 of 4 PHI nodes (0%)
switch_core_media_check_video_codecs (struct switch_core_session_t * session)
{
  int i;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_check_video_codecs";
  struct switch_media_handle_t * smh;
  int D.45885;
  int D.45884;
  uint32_t D.45881;
  switch_call_direction_t D.45878;
  const switch_codec_type_t D.45875;
  const struct switch_codec_implementation_t * D.45874;
  uint32_t D.45871;
  struct switch_channel_t * D.45870;
  int D.45867;
  struct switch_core_media_params_t * D.45866;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2400, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 17>;
  else
    goto <bb 5>;

<bb 5>:
  D.45866_4 = smh_3->mparams;
  D.45867_5 = D.45866_4->num_codecs;
  if (D.45867_5 != 0)
    goto <bb 6>;
  else
    goto <bb 17>;

<bb 6>:
  D.45870_6 = session_2(D)->channel;
  D.45871_7 = switch_channel_test_flag (D.45870_6, 98);
  if (D.45871_7 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;

<bb 7>:
  smh_3->video_count = 0;
  # DEBUG i => 0
  goto <bb 14>;

<bb 8>:
  D.45874_11 = smh_3->codecs[i_1];
  D.45875_12 = D.45874_11->codec_type;
  if (D.45875_12 == 1)
    goto <bb 9>;
  else
    goto <bb 13>;

<bb 9>:
  D.45870_13 = session_2(D)->channel;
  D.45878_14 = switch_channel_direction (D.45870_13);
  if (D.45878_14 == 0)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.45870_15 = session_2(D)->channel;
  D.45881_16 = switch_channel_test_flag (D.45870_15, 114);
  if (D.45881_16 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  // predicted unlikely by continue predictor.
  goto <bb 13>;

<bb 12>:
  D.45884_17 = smh_3->video_count;
  D.45885_18 = D.45884_17 + 1;
  smh_3->video_count = D.45885_18;

<bb 13>:
  i_19 = i_1 + 1;
  # DEBUG i => i_19

<bb 14>:
  # i_1 = PHI <0(7), i_19(13)>
  # DEBUG i => i_1
  D.45866_9 = smh_3->mparams;
  D.45867_10 = D.45866_9->num_codecs;
  if (D.45867_10 > i_1)
    goto <bb 8>;
  else
    goto <bb 15>;

<bb 15>:
  D.45884_20 = smh_3->video_count;
  if (D.45884_20 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.45870_21 = session_2(D)->channel;
  switch_channel_set_flag_value (D.45870_21, 98, 1);

<bb 17>:
  return;

}



;; Function switch_ice_direction (switch_ice_direction)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Marking useful stmt: r_5 = switch_channel_direction (D.45848_4);

Marking useful stmt: # DEBUG r => r_5

Marking useful stmt: D.45849_7 = switch_channel_test_flag (D.45848_6, 112);

Marking useful stmt: # DEBUG r => r_8

Marking useful stmt: # DEBUG r => r_1

Marking useful stmt: D.45854_10 = switch_channel_test_flag (D.45848_9, 103);

Marking useful stmt: D.45856_12 = switch_channel_test_flag (D.45848_11, 84);

Marking useful stmt: D.45857_14 = switch_channel_test_flag (D.45848_13, 106);

Marking useful stmt: # DEBUG r => 1

Marking useful stmt: # DEBUG r => r_2

Marking useful stmt: return r_2;


Processing worklist:
processing: return r_2;

marking necessary through r_2 stmt r_2 = PHI <r_1(5), r_1(6), 1(7)>
processing: r_2 = PHI <r_1(5), r_1(6), 1(7)>

marking necessary through r_1 stmt r_1 = PHI <r_5(2), r_8(3)>
Marking useful stmt: if (D.45854_10 != 0)

Marking useful stmt: if (D.45856_12 != 0)

Marking useful stmt: if (D.45857_14 != 0)

processing: if (D.45857_14 != 0)

processing: if (D.45856_12 != 0)

processing: if (D.45854_10 != 0)

processing: r_1 = PHI <r_5(2), r_8(3)>

marking necessary through r_8 stmt r_8 = r_5 == 0;
Marking useful stmt: if (D.45849_7 != 0)

processing: if (D.45849_7 != 0)

processing: r_8 = r_5 == 0;

processing: D.45857_14 = switch_channel_test_flag (D.45848_13, 106);

marking necessary through D.45848_13 stmt D.45848_13 = session_3(D)->channel;
processing: D.45848_13 = session_3(D)->channel;

processing: D.45856_12 = switch_channel_test_flag (D.45848_11, 84);

marking necessary through D.45848_11 stmt D.45848_11 = session_3(D)->channel;
processing: D.45848_11 = session_3(D)->channel;

processing: D.45854_10 = switch_channel_test_flag (D.45848_9, 103);

marking necessary through D.45848_9 stmt D.45848_9 = session_3(D)->channel;
processing: D.45848_9 = session_3(D)->channel;

processing: D.45849_7 = switch_channel_test_flag (D.45848_6, 112);

marking necessary through D.45848_6 stmt D.45848_6 = session_3(D)->channel;
processing: D.45848_6 = session_3(D)->channel;

processing: r_5 = switch_channel_direction (D.45848_4);

marking necessary through D.45848_4 stmt D.45848_4 = session_3(D)->channel;
processing: D.45848_4 = session_3(D)->channel;


Eliminating unnecessary statements:
Removed 0 of 21 statements (0%)
Removed 0 of 3 PHI nodes (0%)
switch_ice_direction (struct switch_core_session_t * session)
{
  switch_call_direction_t r;
  uint32_t D.45857;
  uint32_t D.45856;
  uint32_t D.45854;
  uint32_t D.45849;
  struct switch_channel_t * D.45848;

<bb 2>:
  D.45848_4 = session_3(D)->channel;
  r_5 = switch_channel_direction (D.45848_4);
  # DEBUG r => r_5
  D.45848_6 = session_3(D)->channel;
  D.45849_7 = switch_channel_test_flag (D.45848_6, 112);
  if (D.45849_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  r_8 = r_5 == 0;
  # DEBUG r => r_8

<bb 4>:
  # r_1 = PHI <r_5(2), r_8(3)>
  # DEBUG r => r_1
  D.45848_9 = session_3(D)->channel;
  D.45854_10 = switch_channel_test_flag (D.45848_9, 103);
  if (D.45854_10 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.45848_11 = session_3(D)->channel;
  D.45856_12 = switch_channel_test_flag (D.45848_11, 84);
  if (D.45856_12 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  D.45848_13 = session_3(D)->channel;
  D.45857_14 = switch_channel_test_flag (D.45848_13, 106);
  if (D.45857_14 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  # DEBUG r => 1

<bb 8>:
  # r_2 = PHI <r_1(5), r_1(6), 1(7)>
  # DEBUG r => r_2
  return r_2;

}



;; Function check_dtls_reinvite (check_dtls_reinvite)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;; 2 succs { 3 17 }
;; 3 succs { 6 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 17 }
;; 7 succs { 8 17 }
;; 8 succs { 9 17 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Marking useful stmt: D.43906_6 = switch_channel_test_flag (D.43905_5, 103);

Marking useful stmt: # DEBUG s => D.43909_8

Marking useful stmt: D.43913_10 = switch_rtp_has_dtls ();

Marking useful stmt: D.43916_11 = dtls_ok (session_4(D));

Marking useful stmt: D.43920_12 = switch_ice_direction (session_4(D));

Marking useful stmt: # DEBUG dtype => dtype_2

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);

Marking useful stmt: # DEBUG xtype => 4

Marking useful stmt: # DEBUG xtype => 12

Marking useful stmt: # DEBUG xtype => xtype_1

Marking useful stmt: switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);

Marking useful stmt: # DEBUG xtype => 8

Marking useful stmt: switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);

Marking useful stmt: if (D.43929_26 <= 0)

marking necessary through D.43932_28 stmt D.43932_28 = engine_7(D)->rtp_session;
marking necessary through D.43933_29 stmt D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
marking necessary through D.43934_30 stmt D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
marking necessary through D.43935_31 stmt D.43935_31 = dtype_2 | 8;
processing: D.43935_31 = dtype_2 | 8;

marking necessary through dtype_2 stmt dtype_2 = PHI <1(9), 2(10)>
processing: dtype_2 = PHI <1(9), 2(10)>

Marking useful stmt: if (D.43916_11 != 0)

Marking useful stmt: if (D.43920_12 == 0)

processing: if (D.43920_12 == 0)

processing: if (D.43916_11 != 0)

Marking useful stmt: if (D.43913_10 != 0)

processing: if (D.43913_10 != 0)

Marking useful stmt: if (D.47800_41 == 0)

processing: if (D.47800_41 == 0)

Marking useful stmt: if (D.43906_6 != 0)

marking necessary through D.47800_41 stmt D.47800_41 = PHI <1(3), 1(4), 0(5)>
processing: D.47800_41 = PHI <1(3), 1(4), 0(5)>

Marking useful stmt: if (D.43909_8 == 0B)

Marking useful stmt: if (D.47801_40 == 0)

processing: if (D.47801_40 == 0)

marking necessary through D.47801_40 stmt D.47801_40 = MEM[(const char *)engine_7(D) + 10904B];
processing: D.47801_40 = MEM[(const char *)engine_7(D) + 10904B];

processing: if (D.43909_8 == 0B)

marking necessary through D.43909_8 stmt D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
processing: D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;

processing: if (D.43906_6 != 0)

processing: D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;

processing: D.43933_29 = &engine_7(D)->local_dtls_fingerprint;

processing: D.43932_28 = engine_7(D)->rtp_session;

processing: if (D.43929_26 <= 0)

marking necessary through D.43929_26 stmt D.43929_26 = engine_7(D)->rtcp_mux;
processing: D.43929_26 = engine_7(D)->rtcp_mux;

processing: switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);

marking necessary through D.43932_22 stmt D.43932_22 = engine_7(D)->rtp_session;
marking necessary through D.43933_23 stmt D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
marking necessary through D.43934_24 stmt D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
marking necessary through D.43935_25 stmt D.43935_25 = xtype_1 | dtype_2;
processing: D.43935_25 = xtype_1 | dtype_2;

marking necessary through xtype_1 stmt xtype_1 = PHI <4(13), 12(14)>
processing: xtype_1 = PHI <4(13), 12(14)>

Marking useful stmt: if (D.43929_20 > 0)

processing: if (D.43929_20 > 0)

marking necessary through D.43929_20 stmt D.43929_20 = engine_7(D)->rtcp_mux;
processing: D.43929_20 = engine_7(D)->rtcp_mux;

processing: D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;

processing: D.43933_23 = &engine_7(D)->local_dtls_fingerprint;

processing: D.43932_22 = engine_7(D)->rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);

marking necessary through iftmp.75_3 stmt iftmp.75_3 = PHI <"video"(11), "audio"(12)>
processing: iftmp.75_3 = PHI <"video"(11), "audio"(12)>

Marking useful stmt: if (D.43925_16 == 1)

processing: if (D.43925_16 == 1)

marking necessary through D.43925_16 stmt D.43925_16 = engine_7(D)->type;
processing: D.43925_16 = engine_7(D)->type;

processing: D.43920_12 = switch_ice_direction (session_4(D));

processing: D.43916_11 = dtls_ok (session_4(D));

processing: D.43913_10 = switch_rtp_has_dtls ();

processing: D.43906_6 = switch_channel_test_flag (D.43905_5, 103);

marking necessary through D.43905_5 stmt D.43905_5 = session_4(D)->channel;
processing: D.43905_5 = session_4(D)->channel;


Eliminating unnecessary statements:
Deleting : dtype_15 = dtype_2;

Removed 1 of 39 statements (2%)
Removed 0 of 4 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  static const char __func__[20] = "check_dtls_reinvite";

  { Scope block #170 src/switch_core_media.c:4699 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #171 Originating from :#0 

    }

  }

  { Scope block #172 
    dtls_type_t xtype;
    dtls_type_t dtype;

  }

}
check_dtls_reinvite (struct switch_core_session_t * session, struct switch_rtp_engine_t * engine)
{
  const char D.47801;
  int D.47800;
  dtls_type_t dtype;
  dtls_type_t xtype;
  static const char __func__[20] = "check_dtls_reinvite";
  unsigned int D.43935;
  struct dtls_fingerprint_t * D.43934;
  struct dtls_fingerprint_t * D.43933;
  struct switch_rtp_t * D.43932;
  int8_t D.43929;
  switch_media_type_t D.43925;
  char * iftmp.75;
  switch_call_direction_t D.43920;
  int D.43916;
  int D.43913;
  char[192] * D.43909;
  uint32_t D.43906;
  struct switch_channel_t * D.43905;

<bb 2>:
  D.43905_5 = session_4(D)->channel;
  D.43906_6 = switch_channel_test_flag (D.43905_5, 103);
  if (D.43906_6 != 0)
    goto <bb 3>;
  else
    goto <bb 17>;

<bb 3>:
  D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
  # DEBUG s => D.43909_8
  if (D.43909_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;

<bb 4>:
  D.47801_40 = MEM[(const char *)engine_7(D) + 10904B];
  if (D.47801_40 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:

<bb 6>:
  # D.47800_41 = PHI <1(3), 1(4), 0(5)>
  if (D.47800_41 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;

<bb 7>:
  D.43913_10 = switch_rtp_has_dtls ();
  if (D.43913_10 != 0)
    goto <bb 8>;
  else
    goto <bb 17>;

<bb 8>:
  D.43916_11 = dtls_ok (session_4(D));
  if (D.43916_11 != 0)
    goto <bb 9>;
  else
    goto <bb 17>;

<bb 9>:
  D.43920_12 = switch_ice_direction (session_4(D));
  if (D.43920_12 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # dtype_2 = PHI <1(9), 2(10)>
  # DEBUG dtype => dtype_2
  D.43925_16 = engine_7(D)->type;
  if (D.43925_16 == 1)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # iftmp.75_3 = PHI <"video"(11), "audio"(12)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);
  # DEBUG xtype => 4
  D.43929_20 = engine_7(D)->rtcp_mux;
  if (D.43929_20 > 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  # DEBUG xtype => 12

<bb 15>:
  # xtype_1 = PHI <4(13), 12(14)>
  # DEBUG xtype => xtype_1
  D.43932_22 = engine_7(D)->rtp_session;
  D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_25 = xtype_1 | dtype_2;
  switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);
  D.43929_26 = engine_7(D)->rtcp_mux;
  if (D.43929_26 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  # DEBUG xtype => 8
  D.43932_28 = engine_7(D)->rtp_session;
  D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_31 = dtype_2 | 8;
  switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);

<bb 17>:
  return;

}



;; Function check_ice (check_ice)

Created preheader block for loop 5
Created preheader block for loop 4
Created preheader block for loop 3
Created preheader block for loop 2
Created preheader block for loop 1
;; 8 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 5
;;  header 200, latch 143
;;  depth 1, outer 0
;;  nodes: 200 143 133 141 142 137 134 135 136 138 139 140
;;
;; Loop 4
;;  header 201, latch 128
;;  depth 1, outer 0
;;  nodes: 201 128 123 124 127 125 126 118 119 122 120 121 130 131
;;
;; Loop 3
;;  header 202, latch 107
;;  depth 1, outer 0
;;  nodes: 202 107 101 102 103 106 104 105 95 96 97 100 98 99 109 110
;;
;; Loop 2
;;  header 203, latch 89
;;  depth 1, outer 0
;;  nodes: 203 89 82 83 84 85 88 86 87 75 76 77 78 81 79 80 91 92
;;
;; Loop 1
;;  header 204, latch 71
;;  depth 1, outer 0
;;  nodes: 204 71 12 14 16 18 28 33 36 37 41 44 70 48 32 34 69 67 68 57 66 59 61 63 64 65 62 60 58 53 56 54 55 49 50 51 52 31 30 29 19 20 21 25 22 23 24 17 15 13 11 8 9 10 47 45 46 43 42 40 38 39 35 26 27
;;
;; Loop 7
;;  header 67, latch 66
;;  depth 2, outer 1
;;  nodes: 67 66 59 61 63 64 65 62 60 58 68
;;
;; Loop 6
;;  header 47, latch 46
;;  depth 2, outer 1
;;  nodes: 47 46
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 199 5 }
;; 5 succs { 6 7 }
;; 6 succs { 72 }
;; 72 succs { 204 }
;; 7 succs { 72 }
;; 8 succs { 11 9 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 71 }
;; 13 succs { 14 15 }
;; 14 succs { 71 }
;; 15 succs { 16 17 }
;; 16 succs { 71 }
;; 17 succs { 18 19 }
;; 18 succs { 71 }
;; 19 succs { 20 29 }
;; 20 succs { 21 29 }
;; 21 succs { 22 29 }
;; 22 succs { 25 23 }
;; 23 succs { 25 24 }
;; 24 succs { 25 }
;; 25 succs { 26 29 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 71 }
;; 29 succs { 30 35 }
;; 30 succs { 31 35 }
;; 31 succs { 32 35 }
;; 32 succs { 33 71 }
;; 33 succs { 34 71 }
;; 34 succs { 71 }
;; 35 succs { 36 37 }
;; 36 succs { 71 }
;; 37 succs { 38 71 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 71 }
;; 42 succs { 44 43 }
;; 43 succs { 44 45 }
;; 44 succs { 71 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 46 48 }
;; 48 succs { 49 71 }
;; 49 succs { 50 54 }
;; 50 succs { 51 54 }
;; 51 succs { 53 52 }
;; 52 succs { 53 }
;; 53 succs { 57 }
;; 54 succs { 56 55 }
;; 55 succs { 56 }
;; 56 succs { 57 }
;; 57 succs { 67 }
;; 58 succs { 59 60 }
;; 59 succs { 66 }
;; 60 succs { 61 62 }
;; 61 succs { 66 }
;; 62 succs { 63 64 }
;; 63 succs { 66 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 }
;; 67 succs { 68 69 }
;; 68 succs { 58 69 }
;; 69 succs { 70 71 }
;; 70 succs { 71 }
;; 71 succs { 204 }
;; 204 succs { 8 73 }
;; 73 succs { 90 74 }
;; 74 succs { 90 93 }
;; 90 succs { 203 }
;; 75 succs { 76 82 }
;; 76 succs { 77 82 }
;; 77 succs { 78 82 }
;; 78 succs { 79 82 }
;; 79 succs { 81 80 }
;; 80 succs { 81 }
;; 81 succs { 82 }
;; 82 succs { 83 89 }
;; 83 succs { 84 89 }
;; 84 succs { 85 89 }
;; 85 succs { 86 89 }
;; 86 succs { 88 87 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 203 }
;; 203 succs { 91 93 }
;; 91 succs { 75 92 }
;; 92 succs { 75 93 }
;; 93 succs { 108 94 }
;; 94 succs { 108 111 }
;; 108 succs { 202 }
;; 95 succs { 96 101 }
;; 96 succs { 97 101 }
;; 97 succs { 98 101 }
;; 98 succs { 100 99 }
;; 99 succs { 100 }
;; 100 succs { 101 }
;; 101 succs { 102 107 }
;; 102 succs { 103 107 }
;; 103 succs { 104 107 }
;; 104 succs { 106 105 }
;; 105 succs { 106 }
;; 106 succs { 107 }
;; 107 succs { 202 }
;; 202 succs { 109 111 }
;; 109 succs { 95 110 }
;; 110 succs { 95 111 }
;; 111 succs { 112 116 }
;; 112 succs { 113 116 }
;; 113 succs { 115 114 }
;; 114 succs { 115 }
;; 115 succs { 116 }
;; 116 succs { 129 117 }
;; 117 succs { 129 144 }
;; 129 succs { 201 }
;; 118 succs { 119 123 }
;; 119 succs { 120 123 }
;; 120 succs { 122 121 }
;; 121 succs { 122 }
;; 122 succs { 123 }
;; 123 succs { 124 128 }
;; 124 succs { 125 128 }
;; 125 succs { 127 126 }
;; 126 succs { 127 }
;; 127 succs { 128 }
;; 128 succs { 201 }
;; 201 succs { 130 144 }
;; 144 succs { 200 }
;; 130 succs { 118 131 }
;; 131 succs { 118 144 }
;; 133 succs { 134 143 }
;; 134 succs { 137 135 }
;; 135 succs { 137 136 }
;; 136 succs { 137 }
;; 137 succs { 142 138 }
;; 138 succs { 141 139 }
;; 139 succs { 141 140 }
;; 140 succs { 141 }
;; 141 succs { 142 143 }
;; 142 succs { 143 }
;; 143 succs { 200 }
;; 200 succs { 133 145 }
;; 145 succs { 146 152 }
;; 146 succs { 147 152 }
;; 147 succs { 149 148 }
;; 148 succs { 149 }
;; 149 succs { 150 151 }
;; 150 succs { 151 }
;; 151 succs { 152 }
;; 152 succs { 153 156 }
;; 153 succs { 155 154 }
;; 154 succs { 155 }
;; 155 succs { 156 }
;; 156 succs { 157 158 }
;; 157 succs { 158 }
;; 158 succs { 159 199 }
;; 159 succs { 160 166 }
;; 160 succs { 161 166 }
;; 161 succs { 163 162 }
;; 162 succs { 163 }
;; 163 succs { 165 164 }
;; 164 succs { 165 }
;; 165 succs { 166 }
;; 166 succs { 167 187 }
;; 167 succs { 169 168 }
;; 168 succs { 169 }
;; 169 succs { 174 170 }
;; 170 succs { 171 172 }
;; 171 succs { 173 }
;; 172 succs { 173 }
;; 173 succs { 174 187 }
;; 174 succs { 176 175 }
;; 175 succs { 176 }
;; 176 succs { 177 178 }
;; 177 succs { 178 }
;; 178 succs { 179 182 }
;; 179 succs { 181 180 }
;; 180 succs { 181 }
;; 181 succs { 187 }
;; 182 succs { 183 184 }
;; 183 succs { 184 }
;; 184 succs { 186 185 }
;; 185 succs { 186 }
;; 186 succs { 187 }
;; 187 succs { 188 199 }
;; 188 succs { 189 194 }
;; 189 succs { 190 194 }
;; 190 succs { 191 194 }
;; 191 succs { 193 192 }
;; 192 succs { 193 }
;; 193 succs { 199 }
;; 194 succs { 196 195 }
;; 195 succs { 196 }
;; 196 succs { 198 197 }
;; 197 succs { 198 }
;; 198 succs { 199 }
;; 199 succs { 1 }
Marking useful stmt: # DEBUG engine => engine_38

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG got_rtcp_mux => 0

Marking useful stmt: D.45469_45 = switch_channel_test_flag (D.45468_44, 103);

Marking useful stmt: engine_38->ice_in.chosen[0] = 0;

Marking useful stmt: engine_38->ice_in.chosen[1] = 0;

Marking useful stmt: engine_38->ice_in.cand_idx = 0;

Marking useful stmt: # DEBUG attr => attr_47

Marking useful stmt: # DEBUG attr => attr_49

Marking useful stmt: # DEBUG argc => 0

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: # DEBUG cid => 0

Marking useful stmt: # DEBUG s => D.45475_53

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.45483_59 = switch_core_perform_session_strdup (D.45467_57, D.45482_58, "src/switch_core_media.c", &__func__, 2503);

Marking useful stmt: engine_38->ice_in.ufrag = D.45483_59;

Marking useful stmt: D.45488_64 = switch_core_perform_session_strdup (D.45467_62, D.45482_63, "src/switch_core_media.c", &__func__, 2505);

Marking useful stmt: engine_38->ice_in.pwd = D.45488_64;

Marking useful stmt: D.45493_69 = switch_core_perform_session_strdup (D.45467_67, D.45482_68, "src/switch_core_media.c", &__func__, 2507);

Marking useful stmt: engine_38->ice_in.options = D.45493_69;

Marking useful stmt: D.45497_70 = switch_rtp_has_dtls ();

Marking useful stmt: D.45499_72 = dtls_ok (D.45467_71);

Marking useful stmt: # DEBUG s => D.45482_75

Marking useful stmt: D.45505_79 = switch_core_perform_session_strdup (D.45467_77, D.45482_78, "src/switch_core_media.c", &__func__, 2512);

Marking useful stmt: engine_38->remote_dtls_fingerprint.type = D.45505_79;

Marking useful stmt: # DEBUG p => p_81

Marking useful stmt: *p_81 = 0;

Marking useful stmt: # DEBUG p => p_82

Marking useful stmt: switch_copy_string (D.45509_83, p_82, 192);

Marking useful stmt: generate_local_fingerprint (smh_34(D), type_36(D));

Marking useful stmt: switch_channel_set_flag_value (D.45468_85, 109, 1);

Marking useful stmt: # DEBUG __nptr => D.45482_90

Marking useful stmt: D.47836_644 = strtol (D.45482_90, 0B, 10);

Marking useful stmt: engine_38->remote_ssrc = D.45518_92;

Marking useful stmt: switch_rtp_set_remote_ssrc (D.45519_95, D.45512_96);

Marking useful stmt: engine_38->rtcp_mux = 1;

Marking useful stmt: engine_38->remote_rtcp_port = D.45528_100;

Marking useful stmt: # DEBUG got_rtcp_mux => got_rtcp_mux_101

Marking useful stmt: switch_channel_set_flag_value (D.45468_105, 108, 1);

Marking useful stmt: engine_38->cand_acl[D.45533_107] = "wan.auto";

Marking useful stmt: engine_38->cand_acl_count = D.45536_108;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45467_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");

Marking useful stmt: D.45537_111 = switch_stristr (" udp ", D.45482_110);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: data_114 = switch_core_perform_session_strdup (D.45467_112, D.45482_113, "src/switch_core_media.c", &__func__, 2556);

Marking useful stmt: # DEBUG data => data_114

Marking useful stmt: D.45540_115 = switch_separate_string (data_114, 32, &fields, 15);

Marking useful stmt: # DEBUG argc => argc_116

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45467_215, 4, "Invalid data\n");

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG __nptr => D.45545_118

Marking useful stmt: D.47839_645 = strtol (D.45545_118, 0B, 10);

Marking useful stmt: # DEBUG cid => cid_120

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45467_122, 101, "CAND %d [%s]\n", i_2, D.45547_123);

Marking useful stmt: # DEBUG i => i_124

Marking useful stmt: # DEBUG i => i_2

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45467_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47839_645, D.45549_127, D.45550_128, D.45551_129, D.45552_130);

Marking useful stmt: engine_38->ice_in.cand_idx = D.45553_132;

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: D.45559_138 = switch_check_network_list_ip_token (D.45551_136, D.45558_137, 0B);

Marking useful stmt: engine_38->ice_in.chosen[cid_120] = D.45544_139;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45467_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47839_645, D.45549_144, D.45550_145, D.45551_146, D.45552_147);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45467_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47839_645, D.45549_152, D.45550_153, D.45551_154, D.45552_155);

Marking useful stmt: D.45570_159 = switch_core_perform_session_strdup (D.45467_157, D.45569_158, "src/switch_core_media.c", &__func__, 2592);

Marking useful stmt: engine_38->ice_in.cands[D.45544_156][cid_120].foundation = D.45570_159;

Marking useful stmt: # DEBUG __nptr => D.45545_161

Marking useful stmt: D.47842_646 = strtol (D.45545_161, 0B, 10);

Marking useful stmt: engine_38->ice_in.cands[D.45544_160][cid_120].component_id = D.47842_646;

Marking useful stmt: D.45572_166 = switch_core_perform_session_strdup (D.45467_164, D.45549_165, "src/switch_core_media.c", &__func__, 2594);

Marking useful stmt: engine_38->ice_in.cands[D.45544_163][cid_120].transport = D.45572_166;

Marking useful stmt: # DEBUG __nptr => D.45573_168

Marking useful stmt: D.47845_647 = strtol (D.45573_168, 0B, 10);

Marking useful stmt: engine_38->ice_in.cands[D.45544_167][cid_120].priority = D.45575_170;

Marking useful stmt: D.45576_174 = switch_core_perform_session_strdup (D.45467_172, D.45551_173, "src/switch_core_media.c", &__func__, 2596);

Marking useful stmt: engine_38->ice_in.cands[D.45544_171][cid_120].con_addr = D.45576_174;

Marking useful stmt: # DEBUG __nptr => D.45552_176

Marking useful stmt: D.47848_648 = strtol (D.45552_176, 0B, 10);

Marking useful stmt: engine_38->ice_in.cands[D.45544_175][cid_120].con_port = D.45578_178;

Marking useful stmt: # DEBUG j => 6

Marking useful stmt: D.45585_188 = switch_core_perform_session_strdup (D.45467_185, D.45584_187, "src/switch_core_media.c", &__func__, 2604);

Marking useful stmt: engine_38->ice_in.cands[D.45544_184][cid_120].cand_type = D.45585_188;

Marking useful stmt: D.45590_195 = switch_core_perform_session_strdup (D.45467_192, D.45584_194, "src/switch_core_media.c", &__func__, 2606);

Marking useful stmt: engine_38->ice_in.cands[D.45544_191][cid_120].raddr = D.45590_195;

Marking useful stmt: # DEBUG __nptr => D.45584_200

Marking useful stmt: D.47851_649 = strtol (D.45584_200, 0B, 10);

Marking useful stmt: engine_38->ice_in.cands[D.45544_198][cid_120].rport = D.45596_202;

Marking useful stmt: D.45601_209 = switch_core_perform_session_strdup (D.45467_206, D.45584_208, "src/switch_core_media.c", &__func__, 2610);

Marking useful stmt: engine_38->ice_in.cands[D.45544_205][cid_120].generation = D.45601_209;

Marking useful stmt: # DEBUG j => j_210

Marking useful stmt: # DEBUG j => j_10

Marking useful stmt: engine_38->ice_in.cands[D.45556_212][cid_120].ready = D.45606_214;

Marking useful stmt: # DEBUG got_rtcp_mux => got_rtcp_mux_7

Marking useful stmt: # DEBUG attr => attr_216

Marking useful stmt: # DEBUG got_rtcp_mux => got_rtcp_mux_8

Marking useful stmt: # DEBUG attr => attr_1

Marking useful stmt: D.45618_227 = switch_check_network_list_ip_token (D.45617_226, "localnet.auto", 0B);

Marking useful stmt: engine_38->ice_in.chosen[0] = i_3;

Marking useful stmt: engine_38->ice_in.cands[D.45461_228][0].ready = D.45622_230;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45467_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);

Marking useful stmt: D.45636_238 = switch_check_network_list_ip_token (D.45635_237, "localnet.auto", 0B);

Marking useful stmt: engine_38->ice_in.chosen[1] = i_3;

Marking useful stmt: engine_38->ice_in.cands[D.45464_239][1].ready = D.45640_241;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45467_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);

Marking useful stmt: # DEBUG i => i_245

Marking useful stmt: # DEBUG i => i_3

Marking useful stmt: engine_38->ice_in.chosen[0] = i_4;

Marking useful stmt: engine_38->ice_in.cands[D.45461_255][0].ready = D.45622_257;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45467_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);

Marking useful stmt: engine_38->ice_in.chosen[1] = i_4;

Marking useful stmt: engine_38->ice_in.cands[D.45464_264][1].ready = D.45640_266;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45467_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);

Marking useful stmt: # DEBUG i => i_270

Marking useful stmt: # DEBUG i => i_4

Marking useful stmt: engine_38->ice_in.chosen[1] = D.45461_276;

Marking useful stmt: memcpy (D.45683_283, D.45687_289, 44);

Marking useful stmt: engine_38->ice_in.cands[D.45464_290][1].ready = D.45640_292;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45467_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45692_297, D.45694_300);

Marking useful stmt: engine_38->ice_in.chosen[0] = i_5;

Marking useful stmt: engine_38->ice_in.cands[D.45461_309][0].ready = D.45622_311;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45467_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);

Marking useful stmt: engine_38->ice_in.chosen[1] = i_5;

Marking useful stmt: engine_38->ice_in.cands[D.45464_317][1].ready = D.45640_319;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45467_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);

Marking useful stmt: # DEBUG i => i_323

Marking useful stmt: # DEBUG i => i_5

Marking useful stmt: # DEBUG s => D.45721_327

Marking useful stmt: # DEBUG s => D.45724_329

Marking useful stmt: engine_38->ice_in.cands[D.45715_331][i_6].ready = 0;

Marking useful stmt: # DEBUG i => i_332

Marking useful stmt: # DEBUG i => i_6

Marking useful stmt: D.45732_341 = switch_core_perform_session_strdup (D.45467_338, D.45726_340, "src/switch_core_media.c", &__func__, 2709);

Marking useful stmt: D.45527_337->remote_sdp_ip = D.45732_341;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45467_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45726_346, D.45737_349);

Marking useful stmt: engine_38->ice_in.cands[D.45461_350][0].ready = D.45622_352;

Marking useful stmt: engine_38->remote_rtp_ice_port = D.45729_354;

Marking useful stmt: D.45738_358 = switch_core_perform_session_strdup (D.45467_355, D.45726_357, "src/switch_core_media.c", &__func__, 2716);

Marking useful stmt: engine_38->remote_rtp_ice_addr = D.45738_358;

Marking useful stmt: D.45739_363 = switch_core_perform_session_strdup (D.45467_360, D.45726_362, "src/switch_core_media.c", &__func__, 2718);

Marking useful stmt: D.45527_359->remote_sdp_ip = D.45739_363;

Marking useful stmt: D.45527_364->remote_sdp_port = D.45729_366;

Marking useful stmt: engine_38->remote_rtcp_port = D.45528_369;

Marking useful stmt: switch_snprintf (&tmp, 80, "%d", D.45743_372);

Marking useful stmt: switch_channel_set_variable_var_check (D.45468_374, "remote_media_ip", D.45744_376, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.45468_378, "remote_media_port", &tmp, 1);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45467_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45692_385, D.45694_388);

Marking useful stmt: engine_38->remote_rtcp_ice_port = D.45693_390;

Marking useful stmt: D.45751_394 = switch_core_perform_session_strdup (D.45467_391, D.45692_393, "src/switch_core_media.c", &__func__, 2734);

Marking useful stmt: engine_38->remote_rtcp_ice_addr = D.45751_394;

Marking useful stmt: engine_38->remote_rtcp_port = D.45693_396;

Marking useful stmt: engine_38->rtcp_mux = -1;

Marking useful stmt: D.45757_402 = switch_channel_test_flag (D.45468_401, 103);

Marking useful stmt: D.45760_404 = switch_rtp_ready (D.45519_403);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45467_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);

Marking useful stmt: D.45772_416 = switch_ice_direction (D.45467_415);

Marking useful stmt: switch_rtp_activate_ice (D.45519_410, D.45721_411, D.45769_412, D.45770_413, D.45724_414, 0, iftmp.117_25, D.45776_419);

Marking useful stmt: val_425 = switch_channel_get_variable_dup (D.45468_422, iftmp.118_26, 1, -1);

Marking useful stmt: # DEBUG val => val_425

Marking useful stmt: # DEBUG val => val_27

Marking useful stmt: # DEBUG val => val_9

Marking useful stmt: rport_435 = switch_channel_get_variable_dup (D.45468_432, iftmp.120_28, 1, -1);

Marking useful stmt: # DEBUG rport => rport_435

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_436

Marking useful stmt: # DEBUG __nptr => rport_435

Marking useful stmt: D.47862_654 = strtol (rport_435, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_441

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_11

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45467_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45808_446);

Marking useful stmt: switch_rtp_activate_rtcp (D.45519_447, -1, remote_rtcp_port_11, D.45810_449);

Marking useful stmt: # DEBUG __nptr => val_9

Marking useful stmt: interval_655 = strtol (val_9, 0B, 10);

Marking useful stmt: # DEBUG interval => NULL

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45467_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);

Marking useful stmt: # DEBUG interval => 10000

Marking useful stmt: # DEBUG interval => interval_12

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45467_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45808_458);

Marking useful stmt: switch_rtp_activate_rtcp (D.45519_459, interval_12, remote_rtcp_port_11, D.45810_461);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45467_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45467_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);

Marking useful stmt: D.45836_486 = switch_ice_direction (D.45467_485);

Marking useful stmt: switch_rtp_activate_ice (D.45519_480, D.45721_481, D.45769_482, D.45770_483, D.45724_484, 1, iftmp.126_33, D.45776_489);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = i_6)
(get_scalar_evolution 
  (scalar = i_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_6 = PHI <i_513(144), i_332(143)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_6 = PHI <i_513(144), i_332(143)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_5))
  (evolution_function = {0, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 144 
  (scalar = i_6)
  (scalar_evolution = {0, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
Analyzing # of iterations of loop 5
  exit condition [0, + , 1](no_overflow) <= 1
  bounds on difference of bases: 1 ... 1
  result:
    # of iterations 2, bounded by 2
Found loop 5 to be finite: iterating 2 times
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.45544_304)
(get_scalar_evolution 
  (scalar = D.45544_304)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 129 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.45544_304)
(get_scalar_evolution 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
(set_scalar_evolution 
  instantiated_below = 129 
  (scalar = D.45544_304)
  (scalar_evolution = D.45544_304))
)
can not prove finiteness of loop 4
Marking useful stmt: if (D.45461_305 == 0)

Marking useful stmt: if (D.45464_306 == 0)

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.45544_249)
(get_scalar_evolution 
  (scalar = D.45544_249)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 108 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.45544_249)
(get_scalar_evolution 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
(set_scalar_evolution 
  instantiated_below = 108 
  (scalar = D.45544_249)
  (scalar_evolution = D.45544_249))
)
can not prove finiteness of loop 3
Marking useful stmt: if (D.45461_250 == 0)

Marking useful stmt: if (D.45464_251 == 0)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45544_220)
(get_scalar_evolution 
  (scalar = D.45544_220)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 90 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.45544_220)
(get_scalar_evolution 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
(set_scalar_evolution 
  instantiated_below = 90 
  (scalar = D.45544_220)
  (scalar_evolution = D.45544_220))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.45461_221 == 0)

Marking useful stmt: if (D.45464_222 == 0)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_1 = PHI <attr_417(72), attr_216(71)>
)
  (init_cond = attr_417))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_1 = PHI <attr_417(72), attr_216(71)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 72 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_1)
(get_scalar_evolution 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
(set_scalar_evolution 
  instantiated_below = 72 
  (scalar = attr_1)
  (scalar_evolution = attr_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (attr_1 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45584_181)
(get_scalar_evolution 
  (scalar = D.45584_181)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 57 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.45584_181)
(get_scalar_evolution 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
(set_scalar_evolution 
  instantiated_below = 57 
  (scalar = D.45584_181)
  (scalar_evolution = D.45584_181))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = j_10)
(get_scalar_evolution 
  (scalar = j_10)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_10 = PHI <6(57), j_210(66)>
)
  (init_cond = 6))
(analyze_evolution_in_loop 
  (loop_phi_node = j_10 = PHI <6(57), j_210(66)>
)
(add_to_evolution 
  (loop_nb = 7)
  (chrec_before = 6)
  (to_add = 2)
  (res = {6, +, 2}_7))
  (evolution_function = {6, +, 2}_7))
(set_scalar_evolution 
  instantiated_below = 57 
  (scalar = j_10)
  (scalar_evolution = {6, +, 2}_7))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 7
  exit condition [6, + , 2](no_overflow) < (int) D.45540_115
  bounds on difference of bases: -1 ... 2147483641
  result:
    # of iterations (D.45540_115 + 4294967291) / 2, bounded by 1073741821
Found loop 7 to be finite: iterating (D.45540_115 + 4294967291) / 2 times
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = i_2)
(get_scalar_evolution 
  (scalar = i_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_2 = PHI <0(45), i_124(46)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_2 = PHI <0(45), i_124(46)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 45 
  (scalar = i_2)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = argc_116)
(get_scalar_evolution 
  (scalar = argc_116)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < (int) D.45540_115
  bounds on difference of bases: 5 ... 2147483647
  result:
    # of iterations D.45540_115, bounded by 2147483647
Found loop 6 to be finite: iterating D.45540_115 times

Processing worklist:
processing: if (attr_1 != 0B)

Marking useful stmt: if (D.45461_41 != 0)

Marking useful stmt: if (D.45464_42 != 0)

Marking useful stmt: if (D.45469_45 == 0)

marking necessary through attr_1 stmt attr_1 = PHI <attr_417(72), attr_216(71)>
processing: attr_1 = PHI <attr_417(72), attr_216(71)>

marking necessary through attr_417 stmt attr_417 = PHI <attr_49(7), attr_47(6)>
marking necessary through attr_216 stmt attr_216 = attr_1->a_next;
processing: attr_216 = attr_1->a_next;

processing: attr_417 = PHI <attr_49(7), attr_47(6)>

marking necessary through attr_49 stmt attr_49 = sdp_48(D)->sdp_attributes;
marking necessary through attr_47 stmt attr_47 = m_46(D)->m_attributes;
Marking useful stmt: if (m_46(D) != 0B)

processing: if (m_46(D) != 0B)

processing: attr_47 = m_46(D)->m_attributes;

processing: attr_49 = sdp_48(D)->sdp_attributes;

processing: if (D.45469_45 == 0)

processing: if (D.45464_42 != 0)

marking necessary through D.45464_42 stmt D.45464_42 = engine_38->ice_in.chosen[1];
processing: D.45464_42 = engine_38->ice_in.chosen[1];

marking necessary through engine_38 stmt engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};
processing: engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};

processing: if (D.45461_41 != 0)

marking necessary through D.45461_41 stmt D.45461_41 = engine_38->ice_in.chosen[0];
processing: D.45461_41 = engine_38->ice_in.chosen[0];

processing: if (D.45464_222 == 0)

marking necessary through D.45464_222 stmt D.45464_222 = engine_38->ice_in.chosen[1];
processing: D.45464_222 = engine_38->ice_in.chosen[1];

processing: if (D.45461_221 == 0)

Marking useful stmt: if (D.45544_220 >= i_3)

marking necessary through D.45461_221 stmt D.45461_221 = engine_38->ice_in.chosen[0];
processing: D.45461_221 = engine_38->ice_in.chosen[0];

processing: if (D.45544_220 >= i_3)

Marking useful stmt: if (D.45461_217 == 0)

Marking useful stmt: if (D.45464_218 == 0)

marking necessary through D.45544_220 stmt D.45544_220 = engine_38->ice_in.cand_idx;
marking necessary through i_3 stmt i_3 = PHI <i_440(90), i_245(89)>
processing: i_3 = PHI <i_440(90), i_245(89)>

marking necessary through i_440 stmt i_440 = PHI <0(74), 0(73)>
marking necessary through i_245 stmt i_245 = i_3 + 1;
processing: i_245 = i_3 + 1;

processing: i_440 = PHI <0(74), 0(73)>

processing: D.45544_220 = engine_38->ice_in.cand_idx;

processing: if (D.45464_218 == 0)

marking necessary through D.45464_218 stmt D.45464_218 = engine_38->ice_in.chosen[1];
processing: D.45464_218 = engine_38->ice_in.chosen[1];

processing: if (D.45461_217 == 0)

marking necessary through D.45461_217 stmt D.45461_217 = engine_38->ice_in.chosen[0];
processing: D.45461_217 = engine_38->ice_in.chosen[0];

processing: if (D.45464_251 == 0)

marking necessary through D.45464_251 stmt D.45464_251 = engine_38->ice_in.chosen[1];
processing: D.45464_251 = engine_38->ice_in.chosen[1];

processing: if (D.45461_250 == 0)

Marking useful stmt: if (D.45544_249 >= i_4)

marking necessary through D.45461_250 stmt D.45461_250 = engine_38->ice_in.chosen[0];
processing: D.45461_250 = engine_38->ice_in.chosen[0];

processing: if (D.45544_249 >= i_4)

Marking useful stmt: if (D.45461_246 == 0)

Marking useful stmt: if (D.45464_247 == 0)

marking necessary through D.45544_249 stmt D.45544_249 = engine_38->ice_in.cand_idx;
marking necessary through i_4 stmt i_4 = PHI <i_676(108), i_270(107)>
processing: i_4 = PHI <i_676(108), i_270(107)>

marking necessary through i_676 stmt i_676 = PHI <0(94), 0(93)>
marking necessary through i_270 stmt i_270 = i_4 + 1;
processing: i_270 = i_4 + 1;

processing: i_676 = PHI <0(94), 0(93)>

processing: D.45544_249 = engine_38->ice_in.cand_idx;

processing: if (D.45464_247 == 0)

marking necessary through D.45464_247 stmt D.45464_247 = engine_38->ice_in.chosen[1];
processing: D.45464_247 = engine_38->ice_in.chosen[1];

processing: if (D.45461_246 == 0)

marking necessary through D.45461_246 stmt D.45461_246 = engine_38->ice_in.chosen[0];
processing: D.45461_246 = engine_38->ice_in.chosen[0];

processing: if (D.45464_306 == 0)

marking necessary through D.45464_306 stmt D.45464_306 = engine_38->ice_in.chosen[1];
processing: D.45464_306 = engine_38->ice_in.chosen[1];

processing: if (D.45461_305 == 0)

Marking useful stmt: if (D.45544_304 >= i_5)

marking necessary through D.45461_305 stmt D.45461_305 = engine_38->ice_in.chosen[0];
processing: D.45461_305 = engine_38->ice_in.chosen[0];

processing: if (D.45544_304 >= i_5)

Marking useful stmt: if (D.45461_301 == 0)

Marking useful stmt: if (D.45464_302 == 0)

marking necessary through D.45544_304 stmt D.45544_304 = engine_38->ice_in.cand_idx;
marking necessary through i_5 stmt i_5 = PHI <i_487(129), i_323(128)>
processing: i_5 = PHI <i_487(129), i_323(128)>

marking necessary through i_487 stmt i_487 = PHI <0(117), 0(116)>
marking necessary through i_323 stmt i_323 = i_5 + 1;
processing: i_323 = i_5 + 1;

processing: i_487 = PHI <0(117), 0(116)>

processing: D.45544_304 = engine_38->ice_in.cand_idx;

processing: if (D.45464_302 == 0)

marking necessary through D.45464_302 stmt D.45464_302 = engine_38->ice_in.chosen[1];
processing: D.45464_302 = engine_38->ice_in.chosen[1];

processing: if (D.45461_301 == 0)

marking necessary through D.45461_301 stmt D.45461_301 = engine_38->ice_in.chosen[0];
processing: D.45461_301 = engine_38->ice_in.chosen[0];

processing: return;

processing: switch_rtp_activate_ice (D.45519_480, D.45721_481, D.45769_482, D.45770_483, D.45724_484, 1, iftmp.126_33, D.45776_489);

Marking useful stmt: if (D.45809_464 > 0)

Marking useful stmt: if (D.38904_469 == 0)

Marking useful stmt: if (D.45693_471 == D.45729_473)

marking necessary through D.45519_480 stmt D.45519_480 = engine_38->rtp_session;
marking necessary through D.45721_481 stmt D.45721_481 = engine_38->ice_in.ufrag;
marking necessary through D.45769_482 stmt D.45769_482 = engine_38->ice_out.ufrag;
marking necessary through D.45770_483 stmt D.45770_483 = engine_38->ice_out.pwd;
marking necessary through D.45724_484 stmt D.45724_484 = engine_38->ice_in.pwd;
marking necessary through iftmp.126_33 stmt iftmp.126_33 = PHI <2(196), 6(197)>
marking necessary through D.45776_489 stmt D.45776_489 = &engine_38->ice_in;
marking necessary through .MEM_603 stmt tmp = "";
processing: tmp = "";

Marking useful stmt: if (D.45729_336 != 0)

processing: if (D.45729_336 != 0)

Marking useful stmt: if (D.45726_334 != 0B)

marking necessary through D.45729_336 stmt D.45729_336 = engine_38->ice_in.cands[D.45461_335][0].con_port;
processing: D.45729_336 = engine_38->ice_in.cands[D.45461_335][0].con_port;

marking necessary through D.45461_335 stmt D.45461_335 = engine_38->ice_in.chosen[0];
processing: D.45461_335 = engine_38->ice_in.chosen[0];

processing: if (D.45726_334 != 0B)

marking necessary through D.45726_334 stmt D.45726_334 = engine_38->ice_in.cands[D.45461_333][0].con_addr;
processing: D.45726_334 = engine_38->ice_in.cands[D.45461_333][0].con_addr;

marking necessary through D.45461_333 stmt D.45461_333 = engine_38->ice_in.chosen[0];
processing: D.45461_333 = engine_38->ice_in.chosen[0];

processing: D.45776_489 = &engine_38->ice_in;

processing: iftmp.126_33 = PHI <2(196), 6(197)>

Marking useful stmt: if (D.45836_486 == 1)

processing: if (D.45836_486 == 1)

processing: D.45724_484 = engine_38->ice_in.pwd;

processing: D.45770_483 = engine_38->ice_out.pwd;

processing: D.45769_482 = engine_38->ice_out.ufrag;

processing: D.45721_481 = engine_38->ice_in.ufrag;

processing: D.45519_480 = engine_38->rtp_session;

processing: if (D.45693_471 == D.45729_473)

marking necessary through D.45693_471 stmt D.45693_471 = engine_38->ice_in.cands[D.45464_470][1].con_port;
marking necessary through D.45729_473 stmt D.45729_473 = engine_38->ice_in.cands[D.45461_472][0].con_port;
processing: D.45729_473 = engine_38->ice_in.cands[D.45461_472][0].con_port;

marking necessary through D.45461_472 stmt D.45461_472 = engine_38->ice_in.chosen[0];
processing: D.45461_472 = engine_38->ice_in.chosen[0];

processing: D.45693_471 = engine_38->ice_in.cands[D.45464_470][1].con_port;

marking necessary through D.45464_470 stmt D.45464_470 = engine_38->ice_in.chosen[1];
processing: D.45464_470 = engine_38->ice_in.chosen[1];

processing: if (D.38904_469 == 0)

marking necessary through D.38904_469 stmt D.38904_469 = __builtin_strcmp (D.45692_466, D.45726_468);
processing: D.38904_469 = __builtin_strcmp (D.45692_466, D.45726_468);

marking necessary through D.45692_466 stmt D.45692_466 = engine_38->ice_in.cands[D.45464_465][1].con_addr;
marking necessary through D.45726_468 stmt D.45726_468 = engine_38->ice_in.cands[D.45461_467][0].con_addr;
processing: D.45726_468 = engine_38->ice_in.cands[D.45461_467][0].con_addr;

marking necessary through D.45461_467 stmt D.45461_467 = engine_38->ice_in.chosen[0];
processing: D.45461_467 = engine_38->ice_in.chosen[0];

processing: D.45692_466 = engine_38->ice_in.cands[D.45464_465][1].con_addr;

marking necessary through D.45464_465 stmt D.45464_465 = engine_38->ice_in.chosen[1];
processing: D.45464_465 = engine_38->ice_in.chosen[1];

processing: if (D.45809_464 > 0)

Marking useful stmt: if (D.45639_463 != 0)

marking necessary through D.45809_464 stmt D.45809_464 = engine_38->rtcp_mux;
processing: D.45809_464 = engine_38->rtcp_mux;

processing: if (D.45639_463 != 0)

Marking useful stmt: if (D.45757_402 != 0)

marking necessary through D.45639_463 stmt D.45639_463 = engine_38->ice_in.cands[D.45464_462][1].ready;
processing: D.45639_463 = engine_38->ice_in.cands[D.45464_462][1].ready;

marking necessary through D.45464_462 stmt D.45464_462 = engine_38->ice_in.chosen[1];
processing: D.45464_462 = engine_38->ice_in.chosen[1];

processing: if (D.45757_402 != 0)

processing: D.45836_486 = switch_ice_direction (D.45467_485);

marking necessary through D.45467_485 stmt D.45467_485 = smh_34(D)->session;
processing: D.45467_485 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45467_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);

marking necessary through D.45467_477 stmt D.45467_477 = smh_34(D)->session;
marking necessary through iftmp.125_32 stmt iftmp.125_32 = PHI <"video"(194), "audio"(195)>
processing: iftmp.125_32 = PHI <"video"(194), "audio"(195)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_477 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45467_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);

marking necessary through D.45467_474 stmt D.45467_474 = smh_34(D)->session;
marking necessary through iftmp.124_31 stmt iftmp.124_31 = PHI <"video"(191), "audio"(192)>
processing: iftmp.124_31 = PHI <"video"(191), "audio"(192)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_474 = smh_34(D)->session;

processing: switch_rtp_activate_rtcp (D.45519_459, interval_12, remote_rtcp_port_11, D.45810_461);

Marking useful stmt: if (D.45801_442 == 0)

marking necessary through D.45519_459 stmt D.45519_459 = engine_38->rtp_session;
marking necessary through interval_12 stmt interval_12 = PHI <interval_655(182), 10000(183)>
marking necessary through remote_rtcp_port_11 stmt remote_rtcp_port_11 = PHI <remote_rtcp_port_436(176), remote_rtcp_port_441(177)>
marking necessary through D.45810_461 stmt D.45810_461 = D.45809_460 > 0;
processing: D.45810_461 = D.45809_460 > 0;

marking necessary through D.45809_460 stmt D.45809_460 = engine_38->rtcp_mux;
processing: D.45809_460 = engine_38->rtcp_mux;

processing: remote_rtcp_port_11 = PHI <remote_rtcp_port_436(176), remote_rtcp_port_441(177)>

Marking useful stmt: if (val_425 != 0B)

Marking useful stmt: if (val_27 != 0B)

marking necessary through remote_rtcp_port_436 stmt remote_rtcp_port_436 = engine_38->remote_rtcp_port;
marking necessary through remote_rtcp_port_441 stmt remote_rtcp_port_441 = (switch_port_t) D.47862_654;
Marking useful stmt: if (D.45797_439 != 0)

processing: if (D.45797_439 != 0)

marking necessary through D.45797_439 stmt D.45797_439 = D.45795_437 && D.45796_438;
processing: D.45797_439 = D.45795_437 && D.45796_438;

marking necessary through D.45795_437 stmt D.45795_437 = remote_rtcp_port_436 == 0;
marking necessary through D.45796_438 stmt D.45796_438 = rport_435 != 0B;
processing: D.45796_438 = rport_435 != 0B;

processing: D.45795_437 = remote_rtcp_port_436 == 0;

processing: remote_rtcp_port_441 = (switch_port_t) D.47862_654;

processing: remote_rtcp_port_436 = engine_38->remote_rtcp_port;

processing: if (val_27 != 0B)

marking necessary through val_27 stmt val_27 = PHI <val_427(171), val_429(172)>
processing: val_27 = PHI <val_427(171), val_429(172)>

marking necessary through val_427 stmt val_427 = D.45789_426->rtcp_video_interval_msec;
marking necessary through val_429 stmt val_429 = D.45789_428->rtcp_audio_interval_msec;
Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: val_429 = D.45789_428->rtcp_audio_interval_msec;

marking necessary through D.45789_428 stmt D.45789_428 = smh_34(D)->mparams;
processing: D.45789_428 = smh_34(D)->mparams;

processing: val_427 = D.45789_426->rtcp_video_interval_msec;

marking necessary through D.45789_426 stmt D.45789_426 = smh_34(D)->mparams;
processing: D.45789_426 = smh_34(D)->mparams;

processing: if (val_425 != 0B)

Marking useful stmt: if (D.45519_420 != 0B)

processing: if (D.45519_420 != 0B)

marking necessary through D.45519_420 stmt D.45519_420 = engine_38->rtp_session;
processing: D.45519_420 = engine_38->rtp_session;

processing: interval_12 = PHI <interval_655(182), 10000(183)>

Marking useful stmt: if (D.45813_452 > 499900)

processing: if (D.45813_452 > 499900)

marking necessary through D.45813_452 stmt D.45813_452 = interval.122_451 + 4294967196;
processing: D.45813_452 = interval.122_451 + 4294967196;

marking necessary through interval.122_451 stmt interval.122_451 = (unsigned int) interval_655;
processing: interval.122_451 = (unsigned int) interval_655;

processing: D.45519_459 = engine_38->rtp_session;

processing: if (D.45801_442 == 0)

marking necessary through D.45801_442 stmt D.45801_442 = strcasecmp (val_9, "passthru");
processing: D.45801_442 = strcasecmp (val_9, "passthru");

marking necessary through val_9 stmt val_9 = PHI <val_425(169), val_27(173)>
processing: val_9 = PHI <val_425(169), val_27(173)>

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45467_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45808_458);

marking necessary through D.45467_455 stmt D.45467_455 = smh_34(D)->session;
marking necessary through iftmp.123_30 stmt iftmp.123_30 = PHI <"video"(184), "audio"(185)>
marking necessary through D.45808_458 stmt D.45808_458 = (int) remote_rtcp_port_11;
processing: D.45808_458 = (int) remote_rtcp_port_11;

processing: iftmp.123_30 = PHI <"video"(184), "audio"(185)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_455 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45467_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);

marking necessary through D.45467_453 stmt D.45467_453 = smh_34(D)->session;
processing: D.45467_453 = smh_34(D)->session;

processing: interval_655 = strtol (val_9, 0B, 10);

processing: switch_rtp_activate_rtcp (D.45519_447, -1, remote_rtcp_port_11, D.45810_449);

marking necessary through D.45519_447 stmt D.45519_447 = engine_38->rtp_session;
marking necessary through D.45810_449 stmt D.45810_449 = D.45809_448 > 0;
processing: D.45810_449 = D.45809_448 > 0;

marking necessary through D.45809_448 stmt D.45809_448 = engine_38->rtcp_mux;
processing: D.45809_448 = engine_38->rtcp_mux;

processing: D.45519_447 = engine_38->rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45467_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45808_446);

marking necessary through D.45467_443 stmt D.45467_443 = smh_34(D)->session;
marking necessary through iftmp.121_29 stmt iftmp.121_29 = PHI <"video"(179), "audio"(180)>
marking necessary through D.45808_446 stmt D.45808_446 = (int) remote_rtcp_port_11;
processing: D.45808_446 = (int) remote_rtcp_port_11;

processing: iftmp.121_29 = PHI <"video"(179), "audio"(180)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_443 = smh_34(D)->session;

processing: D.47862_654 = strtol (rport_435, 0B, 10);

processing: rport_435 = switch_channel_get_variable_dup (D.45468_432, iftmp.120_28, 1, -1);

marking necessary through D.45468_432 stmt D.45468_432 = D.45467_431->channel;
marking necessary through iftmp.120_28 stmt iftmp.120_28 = PHI <"rtp_remote_video_rtcp_port"(174), "rtp_remote_audio_rtcp_port"(175)>
processing: iftmp.120_28 = PHI <"rtp_remote_video_rtcp_port"(174), "rtp_remote_audio_rtcp_port"(175)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45468_432 = D.45467_431->channel;

marking necessary through D.45467_431 stmt D.45467_431 = smh_34(D)->session;
processing: D.45467_431 = smh_34(D)->session;

processing: val_425 = switch_channel_get_variable_dup (D.45468_422, iftmp.118_26, 1, -1);

marking necessary through D.45468_422 stmt D.45468_422 = D.45467_421->channel;
marking necessary through iftmp.118_26 stmt iftmp.118_26 = PHI <"rtcp_video_interval_msec"(167), "rtcp_audio_interval_msec"(168)>
processing: iftmp.118_26 = PHI <"rtcp_video_interval_msec"(167), "rtcp_audio_interval_msec"(168)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45468_422 = D.45467_421->channel;

marking necessary through D.45467_421 stmt D.45467_421 = smh_34(D)->session;
processing: D.45467_421 = smh_34(D)->session;

processing: switch_rtp_activate_ice (D.45519_410, D.45721_411, D.45769_412, D.45770_413, D.45724_414, 0, iftmp.117_25, D.45776_419);

Marking useful stmt: if (D.45621_406 != 0)

marking necessary through D.45519_410 stmt D.45519_410 = engine_38->rtp_session;
marking necessary through D.45721_411 stmt D.45721_411 = engine_38->ice_in.ufrag;
marking necessary through D.45769_412 stmt D.45769_412 = engine_38->ice_out.ufrag;
marking necessary through D.45770_413 stmt D.45770_413 = engine_38->ice_out.pwd;
marking necessary through D.45724_414 stmt D.45724_414 = engine_38->ice_in.pwd;
marking necessary through iftmp.117_25 stmt iftmp.117_25 = PHI <2(163), 6(164)>
marking necessary through D.45776_419 stmt D.45776_419 = &engine_38->ice_in;
processing: D.45776_419 = &engine_38->ice_in;

processing: iftmp.117_25 = PHI <2(163), 6(164)>

Marking useful stmt: if (D.45772_416 == 1)

processing: if (D.45772_416 == 1)

processing: D.45724_414 = engine_38->ice_in.pwd;

processing: D.45770_413 = engine_38->ice_out.pwd;

processing: D.45769_412 = engine_38->ice_out.ufrag;

processing: D.45721_411 = engine_38->ice_in.ufrag;

processing: D.45519_410 = engine_38->rtp_session;

processing: if (D.45621_406 != 0)

Marking useful stmt: if (D.45760_404 != 0)

marking necessary through D.45621_406 stmt D.45621_406 = engine_38->ice_in.cands[D.45461_405][0].ready;
processing: D.45621_406 = engine_38->ice_in.cands[D.45461_405][0].ready;

marking necessary through D.45461_405 stmt D.45461_405 = engine_38->ice_in.chosen[0];
processing: D.45461_405 = engine_38->ice_in.chosen[0];

processing: if (D.45760_404 != 0)

processing: D.45772_416 = switch_ice_direction (D.45467_415);

marking necessary through D.45467_415 stmt D.45467_415 = smh_34(D)->session;
processing: D.45467_415 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45467_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);

marking necessary through D.45467_407 stmt D.45467_407 = smh_34(D)->session;
marking necessary through iftmp.116_24 stmt iftmp.116_24 = PHI <"video"(161), "audio"(162)>
processing: iftmp.116_24 = PHI <"video"(161), "audio"(162)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_407 = smh_34(D)->session;

processing: D.45760_404 = switch_rtp_ready (D.45519_403);

marking necessary through D.45519_403 stmt D.45519_403 = engine_38->rtp_session;
processing: D.45519_403 = engine_38->rtp_session;

processing: D.45757_402 = switch_channel_test_flag (D.45468_401, 103);

marking necessary through D.45468_401 stmt D.45468_401 = D.45467_400->channel;
processing: D.45468_401 = D.45467_400->channel;

marking necessary through D.45467_400 stmt D.45467_400 = smh_34(D)->session;
processing: D.45467_400 = smh_34(D)->session;

processing: engine_38->rtcp_mux = -1;

Marking useful stmt: if (D.45754_399 != 0)

processing: if (D.45754_399 != 0)

marking necessary through D.45754_399 stmt D.45754_399 = D.45752_397 && D.45753_398;
processing: D.45754_399 = D.45752_397 && D.45753_398;

marking necessary through D.45752_397 stmt D.45752_397 = m_46(D) != 0B;
marking necessary through D.45753_398 stmt D.45753_398 = got_rtcp_mux_8 == 0;
processing: D.45753_398 = got_rtcp_mux_8 == 0;

marking necessary through got_rtcp_mux_8 stmt got_rtcp_mux_8 = PHI <got_rtcp_mux_672(72), got_rtcp_mux_7(71)>
processing: got_rtcp_mux_8 = PHI <got_rtcp_mux_672(72), got_rtcp_mux_7(71)>

marking necessary through got_rtcp_mux_672 stmt got_rtcp_mux_672 = PHI <0(7), 0(6)>
marking necessary through got_rtcp_mux_7 stmt got_rtcp_mux_7 = PHI <got_rtcp_mux_8(12), got_rtcp_mux_8(14), got_rtcp_mux_8(16), got_rtcp_mux_8(18), got_rtcp_mux_8(28), got_rtcp_mux_8(33), got_rtcp_mux_101(36), got_rtcp_mux_8(37), got_rtcp_mux_8(41), got_rtcp_mux_8(44), got_rtcp_mux_8(70), got_rtcp_mux_8(48), got_rtcp_mux_8(32), got_rtcp_mux_8(34), got_rtcp_mux_8(69)>
processing: got_rtcp_mux_7 = PHI <got_rtcp_mux_8(12), got_rtcp_mux_8(14), got_rtcp_mux_8(16), got_rtcp_mux_8(18), got_rtcp_mux_8(28), got_rtcp_mux_8(33), got_rtcp_mux_101(36), got_rtcp_mux_8(37), got_rtcp_mux_8(41), got_rtcp_mux_8(44), got_rtcp_mux_8(70), got_rtcp_mux_8(48), got_rtcp_mux_8(32), got_rtcp_mux_8(34), got_rtcp_mux_8(69)>

marking necessary through got_rtcp_mux_101 stmt got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
Marking useful stmt: if (D.47828_641 != 0)

Marking useful stmt: if (D.45479_56 == 0)

Marking useful stmt: if (D.45485_61 == 0)

Marking useful stmt: if (D.45490_66 == 0)

Marking useful stmt: if (D.47832_643 == 0)

Marking useful stmt: if (D.45519_93 != 0B)

Marking useful stmt: if (D.45524_98 == 0)

Marking useful stmt: if (D.45537_111 == 0B)

Marking useful stmt: if (argc_116 <= 4)

Marking useful stmt: if (D.45544_117 > 48)

Marking useful stmt: if (D.45556_211 != 0)

Marking useful stmt: if (D.45482_89 != 0B)

Marking useful stmt: if (D.45512_94 != 0)

Marking useful stmt: if (D.45533_134 > 0)

processing: if (D.45533_134 > 0)

marking necessary through D.45533_134 stmt D.45533_134 = engine_38->cand_acl_count;
processing: D.45533_134 = engine_38->cand_acl_count;

processing: if (D.45512_94 != 0)

marking necessary through D.45512_94 stmt D.45512_94 = engine_38->remote_ssrc;
processing: D.45512_94 = engine_38->remote_ssrc;

processing: if (D.45482_89 != 0B)

Marking useful stmt: if (D.45514_88 == 0)

marking necessary through D.45482_89 stmt D.45482_89 = attr_1->a_value;
processing: D.45482_89 = attr_1->a_value;

processing: if (D.45514_88 == 0)

Marking useful stmt: if (D.45512_86 == 0)

marking necessary through D.45514_88 stmt D.45514_88 = strcasecmp (D.45475_87, "ssrc");
processing: D.45514_88 = strcasecmp (D.45475_87, "ssrc");

marking necessary through D.45475_87 stmt D.45475_87 = attr_1->a_name;
processing: D.45475_87 = attr_1->a_name;

processing: if (D.45512_86 == 0)

Marking useful stmt: if (D.45497_70 != 0)

Marking useful stmt: if (D.45499_72 != 0)

Marking useful stmt: if (D.45501_74 == 0)

marking necessary through D.45512_86 stmt D.45512_86 = engine_38->remote_ssrc;
processing: D.45512_86 = engine_38->remote_ssrc;

processing: if (D.45501_74 == 0)

marking necessary through D.45501_74 stmt D.45501_74 = strcasecmp (D.45475_73, "fingerprint");
processing: D.45501_74 = strcasecmp (D.45475_73, "fingerprint");

marking necessary through D.45475_73 stmt D.45475_73 = attr_1->a_name;
processing: D.45475_73 = attr_1->a_name;

processing: if (D.45499_72 != 0)

processing: if (D.45497_70 != 0)

processing: if (D.45556_211 != 0)

marking necessary through D.45556_211 stmt D.45556_211 = engine_38->ice_in.chosen[cid_120];
processing: D.45556_211 = engine_38->ice_in.chosen[cid_120];

marking necessary through cid_120 stmt cid_120 = D.47839_645 + -1;
processing: cid_120 = D.47839_645 + -1;

processing: if (D.45544_117 > 48)

marking necessary through D.45544_117 stmt D.45544_117 = engine_38->ice_in.cand_idx;
processing: D.45544_117 = engine_38->ice_in.cand_idx;

processing: if (argc_116 <= 4)

marking necessary through argc_116 stmt argc_116 = (int) D.45540_115;
processing: argc_116 = (int) D.45540_115;

processing: if (D.45537_111 == 0B)

Marking useful stmt: if (D.45530_103 == 0)

processing: if (D.45530_103 == 0)

marking necessary through D.45530_103 stmt D.45530_103 = strcasecmp (D.45475_102, "candidate");
processing: D.45530_103 = strcasecmp (D.45475_102, "candidate");

marking necessary through D.45475_102 stmt D.45475_102 = attr_1->a_name;
processing: D.45475_102 = attr_1->a_name;

processing: if (D.45524_98 == 0)

marking necessary through D.45524_98 stmt D.45524_98 = strcasecmp (D.45475_97, "rtcp-mux");
processing: D.45524_98 = strcasecmp (D.45475_97, "rtcp-mux");

marking necessary through D.45475_97 stmt D.45475_97 = attr_1->a_name;
processing: D.45475_97 = attr_1->a_name;

processing: if (D.45519_93 != 0B)

marking necessary through D.45519_93 stmt D.45519_93 = engine_38->rtp_session;
processing: D.45519_93 = engine_38->rtp_session;

processing: if (D.47832_643 == 0)

marking necessary through D.47832_643 stmt D.47832_643 = PHI <1(22), 1(23), 0(24)>
processing: D.47832_643 = PHI <1(22), 1(23), 0(24)>

Marking useful stmt: if (D.45482_75 == 0B)

Marking useful stmt: if (D.47833_642 == 0)

processing: if (D.47833_642 == 0)

marking necessary through D.47833_642 stmt D.47833_642 = *D.45482_75;
processing: D.47833_642 = *D.45482_75;

marking necessary through D.45482_75 stmt D.45482_75 = attr_1->a_value;
processing: D.45482_75 = attr_1->a_value;

processing: if (D.45482_75 == 0B)

processing: if (D.45490_66 == 0)

marking necessary through D.45490_66 stmt D.45490_66 = strcasecmp (D.45475_65, "ice-options");
processing: D.45490_66 = strcasecmp (D.45475_65, "ice-options");

marking necessary through D.45475_65 stmt D.45475_65 = attr_1->a_name;
processing: D.45475_65 = attr_1->a_name;

processing: if (D.45485_61 == 0)

marking necessary through D.45485_61 stmt D.45485_61 = strcasecmp (D.45475_60, "ice-pwd");
processing: D.45485_61 = strcasecmp (D.45475_60, "ice-pwd");

marking necessary through D.45475_60 stmt D.45475_60 = attr_1->a_name;
processing: D.45475_60 = attr_1->a_name;

processing: if (D.45479_56 == 0)

marking necessary through D.45479_56 stmt D.45479_56 = strcasecmp (D.45475_55, "ice-ufrag");
processing: D.45479_56 = strcasecmp (D.45475_55, "ice-ufrag");

marking necessary through D.45475_55 stmt D.45475_55 = attr_1->a_name;
processing: D.45475_55 = attr_1->a_name;

processing: if (D.47828_641 != 0)

marking necessary through D.47828_641 stmt D.47828_641 = PHI <1(8), 1(9), 0(10)>
processing: D.47828_641 = PHI <1(8), 1(9), 0(10)>

Marking useful stmt: if (D.45475_53 == 0B)

Marking useful stmt: if (D.47829_640 == 0)

processing: if (D.47829_640 == 0)

marking necessary through D.47829_640 stmt D.47829_640 = *D.45475_53;
processing: D.47829_640 = *D.45475_53;

marking necessary through D.45475_53 stmt D.45475_53 = attr_1->a_name;
processing: D.45475_53 = attr_1->a_name;

processing: if (D.45475_53 == 0B)

processing: got_rtcp_mux_101 = got_rtcp_mux_8 + 1;

processing: got_rtcp_mux_672 = PHI <0(7), 0(6)>

processing: D.45752_397 = m_46(D) != 0B;

processing: engine_38->remote_rtcp_port = D.45693_396;

Marking useful stmt: if (D.45693_380 != 0)

marking necessary through D.45693_396 stmt D.45693_396 = engine_38->ice_in.cands[D.45464_395][1].con_port;
processing: D.45693_396 = engine_38->ice_in.cands[D.45464_395][1].con_port;

marking necessary through D.45464_395 stmt D.45464_395 = engine_38->ice_in.chosen[1];
processing: D.45464_395 = engine_38->ice_in.chosen[1];

processing: if (D.45693_380 != 0)

marking necessary through D.45693_380 stmt D.45693_380 = engine_38->ice_in.cands[D.45464_379][1].con_port;
processing: D.45693_380 = engine_38->ice_in.cands[D.45464_379][1].con_port;

marking necessary through D.45464_379 stmt D.45464_379 = engine_38->ice_in.chosen[1];
processing: D.45464_379 = engine_38->ice_in.chosen[1];

processing: engine_38->remote_rtcp_ice_addr = D.45751_394;

processing: D.45751_394 = switch_core_perform_session_strdup (D.45467_391, D.45692_393, "src/switch_core_media.c", &__func__, 2734);

marking necessary through D.45467_391 stmt D.45467_391 = smh_34(D)->session;
marking necessary through D.45692_393 stmt D.45692_393 = engine_38->ice_in.cands[D.45464_392][1].con_addr;
processing: D.45692_393 = engine_38->ice_in.cands[D.45464_392][1].con_addr;

marking necessary through D.45464_392 stmt D.45464_392 = engine_38->ice_in.chosen[1];
processing: D.45464_392 = engine_38->ice_in.chosen[1];

processing: D.45467_391 = smh_34(D)->session;

processing: engine_38->remote_rtcp_ice_port = D.45693_390;

marking necessary through D.45693_390 stmt D.45693_390 = engine_38->ice_in.cands[D.45464_389][1].con_port;
processing: D.45693_390 = engine_38->ice_in.cands[D.45464_389][1].con_port;

marking necessary through D.45464_389 stmt D.45464_389 = engine_38->ice_in.chosen[1];
processing: D.45464_389 = engine_38->ice_in.chosen[1];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45467_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45692_385, D.45694_388);

marking necessary through D.45467_381 stmt D.45467_381 = smh_34(D)->session;
marking necessary through iftmp.115_23 stmt iftmp.115_23 = PHI <"video"(153), "audio"(154)>
marking necessary through D.45692_385 stmt D.45692_385 = engine_38->ice_in.cands[D.45464_384][1].con_addr;
marking necessary through D.45694_388 stmt D.45694_388 = (int) D.45693_387;
processing: D.45694_388 = (int) D.45693_387;

marking necessary through D.45693_387 stmt D.45693_387 = engine_38->ice_in.cands[D.45464_386][1].con_port;
processing: D.45693_387 = engine_38->ice_in.cands[D.45464_386][1].con_port;

marking necessary through D.45464_386 stmt D.45464_386 = engine_38->ice_in.chosen[1];
processing: D.45464_386 = engine_38->ice_in.chosen[1];

processing: D.45692_385 = engine_38->ice_in.cands[D.45464_384][1].con_addr;

marking necessary through D.45464_384 stmt D.45464_384 = engine_38->ice_in.chosen[1];
processing: D.45464_384 = engine_38->ice_in.chosen[1];

processing: iftmp.115_23 = PHI <"video"(153), "audio"(154)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_381 = smh_34(D)->session;

processing: switch_channel_set_variable_var_check (D.45468_378, "remote_media_port", &tmp, 1);

marking necessary through D.45468_378 stmt D.45468_378 = D.45467_377->channel;
processing: D.45468_378 = D.45467_377->channel;

marking necessary through D.45467_377 stmt D.45467_377 = smh_34(D)->session;
processing: D.45467_377 = smh_34(D)->session;

processing: switch_channel_set_variable_var_check (D.45468_374, "remote_media_ip", D.45744_376, 1);

marking necessary through D.45468_374 stmt D.45468_374 = D.45467_373->channel;
marking necessary through D.45744_376 stmt D.45744_376 = D.45527_375->remote_sdp_ip;
processing: D.45744_376 = D.45527_375->remote_sdp_ip;

marking necessary through D.45527_375 stmt D.45527_375 = engine_38->cur_payload_map;
processing: D.45527_375 = engine_38->cur_payload_map;

processing: D.45468_374 = D.45467_373->channel;

marking necessary through D.45467_373 stmt D.45467_373 = smh_34(D)->session;
processing: D.45467_373 = smh_34(D)->session;

processing: switch_snprintf (&tmp, 80, "%d", D.45743_372);

marking necessary through D.45743_372 stmt D.45743_372 = (int) D.45528_371;
processing: D.45743_372 = (int) D.45528_371;

marking necessary through D.45528_371 stmt D.45528_371 = D.45527_370->remote_sdp_port;
processing: D.45528_371 = D.45527_370->remote_sdp_port;

marking necessary through D.45527_370 stmt D.45527_370 = engine_38->cur_payload_map;
processing: D.45527_370 = engine_38->cur_payload_map;

processing: engine_38->remote_rtcp_port = D.45528_369;

Marking useful stmt: if (D.45740_367 != 0)

marking necessary through D.45528_369 stmt D.45528_369 = D.45527_368->remote_sdp_port;
processing: D.45528_369 = D.45527_368->remote_sdp_port;

marking necessary through D.45527_368 stmt D.45527_368 = engine_38->cur_payload_map;
processing: D.45527_368 = engine_38->cur_payload_map;

processing: if (D.45740_367 != 0)

marking necessary through D.45740_367 stmt D.45740_367 = engine_38->remote_rtcp_port;
processing: D.45740_367 = engine_38->remote_rtcp_port;

processing: D.45527_364->remote_sdp_port = D.45729_366;

marking necessary through D.45527_364 stmt D.45527_364 = engine_38->cur_payload_map;
marking necessary through D.45729_366 stmt D.45729_366 = engine_38->ice_in.cands[D.45461_365][0].con_port;
processing: D.45729_366 = engine_38->ice_in.cands[D.45461_365][0].con_port;

marking necessary through D.45461_365 stmt D.45461_365 = engine_38->ice_in.chosen[0];
processing: D.45461_365 = engine_38->ice_in.chosen[0];

processing: D.45527_364 = engine_38->cur_payload_map;

processing: D.45527_359->remote_sdp_ip = D.45739_363;

marking necessary through D.45527_359 stmt D.45527_359 = engine_38->cur_payload_map;
processing: D.45527_359 = engine_38->cur_payload_map;

processing: D.45739_363 = switch_core_perform_session_strdup (D.45467_360, D.45726_362, "src/switch_core_media.c", &__func__, 2718);

marking necessary through D.45467_360 stmt D.45467_360 = smh_34(D)->session;
marking necessary through D.45726_362 stmt D.45726_362 = engine_38->ice_in.cands[D.45461_361][0].con_addr;
processing: D.45726_362 = engine_38->ice_in.cands[D.45461_361][0].con_addr;

marking necessary through D.45461_361 stmt D.45461_361 = engine_38->ice_in.chosen[0];
processing: D.45461_361 = engine_38->ice_in.chosen[0];

processing: D.45467_360 = smh_34(D)->session;

processing: engine_38->remote_rtp_ice_addr = D.45738_358;

processing: D.45738_358 = switch_core_perform_session_strdup (D.45467_355, D.45726_357, "src/switch_core_media.c", &__func__, 2716);

marking necessary through D.45467_355 stmt D.45467_355 = smh_34(D)->session;
marking necessary through D.45726_357 stmt D.45726_357 = engine_38->ice_in.cands[D.45461_356][0].con_addr;
processing: D.45726_357 = engine_38->ice_in.cands[D.45461_356][0].con_addr;

marking necessary through D.45461_356 stmt D.45461_356 = engine_38->ice_in.chosen[0];
processing: D.45461_356 = engine_38->ice_in.chosen[0];

processing: D.45467_355 = smh_34(D)->session;

processing: engine_38->remote_rtp_ice_port = D.45729_354;

marking necessary through D.45729_354 stmt D.45729_354 = engine_38->ice_in.cands[D.45461_353][0].con_port;
processing: D.45729_354 = engine_38->ice_in.cands[D.45461_353][0].con_port;

marking necessary through D.45461_353 stmt D.45461_353 = engine_38->ice_in.chosen[0];
processing: D.45461_353 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.cands[D.45461_350][0].ready = D.45622_352;

marking necessary through D.45461_350 stmt D.45461_350 = engine_38->ice_in.chosen[0];
marking necessary through D.45622_352 stmt D.45622_352 = D.45621_351 + 1;
processing: D.45622_352 = D.45621_351 + 1;

marking necessary through D.45621_351 stmt D.45621_351 = engine_38->ice_in.cands[D.45461_350][0].ready;
processing: D.45621_351 = engine_38->ice_in.cands[D.45461_350][0].ready;

processing: D.45461_350 = engine_38->ice_in.chosen[0];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45467_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45726_346, D.45737_349);

marking necessary through D.45467_342 stmt D.45467_342 = smh_34(D)->session;
marking necessary through iftmp.114_22 stmt iftmp.114_22 = PHI <"video"(147), "audio"(148)>
marking necessary through D.45726_346 stmt D.45726_346 = engine_38->ice_in.cands[D.45461_345][0].con_addr;
marking necessary through D.45737_349 stmt D.45737_349 = (int) D.45729_348;
processing: D.45737_349 = (int) D.45729_348;

marking necessary through D.45729_348 stmt D.45729_348 = engine_38->ice_in.cands[D.45461_347][0].con_port;
processing: D.45729_348 = engine_38->ice_in.cands[D.45461_347][0].con_port;

marking necessary through D.45461_347 stmt D.45461_347 = engine_38->ice_in.chosen[0];
processing: D.45461_347 = engine_38->ice_in.chosen[0];

processing: D.45726_346 = engine_38->ice_in.cands[D.45461_345][0].con_addr;

marking necessary through D.45461_345 stmt D.45461_345 = engine_38->ice_in.chosen[0];
processing: D.45461_345 = engine_38->ice_in.chosen[0];

processing: iftmp.114_22 = PHI <"video"(147), "audio"(148)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_342 = smh_34(D)->session;

processing: D.45527_337->remote_sdp_ip = D.45732_341;

marking necessary through D.45527_337 stmt D.45527_337 = engine_38->cur_payload_map;
processing: D.45527_337 = engine_38->cur_payload_map;

processing: D.45732_341 = switch_core_perform_session_strdup (D.45467_338, D.45726_340, "src/switch_core_media.c", &__func__, 2709);

marking necessary through D.45467_338 stmt D.45467_338 = smh_34(D)->session;
marking necessary through D.45726_340 stmt D.45726_340 = engine_38->ice_in.cands[D.45461_339][0].con_addr;
processing: D.45726_340 = engine_38->ice_in.cands[D.45461_339][0].con_addr;

marking necessary through D.45461_339 stmt D.45461_339 = engine_38->ice_in.chosen[0];
processing: D.45461_339 = engine_38->ice_in.chosen[0];

processing: D.45467_338 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45715_331][i_6].ready = 0;

Marking useful stmt: if (D.47854_651 != 0)

Marking useful stmt: if (D.47858_653 != 0)

marking necessary through D.45715_331 stmt D.45715_331 = engine_38->ice_in.chosen[i_6];
marking necessary through i_6 stmt i_6 = PHI <i_513(144), i_332(143)>
processing: i_6 = PHI <i_513(144), i_332(143)>

Marking useful stmt: if (i_6 <= 1)

marking necessary through i_513 stmt i_513 = PHI <0(201), 0(131), 0(117)>
marking necessary through i_332 stmt i_332 = i_6 + 1;
processing: i_332 = i_6 + 1;

processing: i_513 = PHI <0(201), 0(131), 0(117)>

processing: if (i_6 <= 1)

processing: D.45715_331 = engine_38->ice_in.chosen[i_6];

processing: if (D.47858_653 != 0)

marking necessary through D.47858_653 stmt D.47858_653 = PHI <1(138), 1(139), 0(140)>
processing: D.47858_653 = PHI <1(138), 1(139), 0(140)>

Marking useful stmt: if (D.45724_329 == 0B)

Marking useful stmt: if (D.47859_652 == 0)

processing: if (D.47859_652 == 0)

marking necessary through D.47859_652 stmt D.47859_652 = MEM[(const char *)D.45724_329];
processing: D.47859_652 = MEM[(const char *)D.45724_329];

marking necessary through D.45724_329 stmt D.45724_329 = engine_38->ice_in.pwd;
processing: D.45724_329 = engine_38->ice_in.pwd;

processing: if (D.45724_329 == 0B)

processing: if (D.47854_651 != 0)

Marking useful stmt: if (D.45716_326 != 0)

marking necessary through D.47854_651 stmt D.47854_651 = PHI <1(134), 1(135), 0(136)>
processing: D.47854_651 = PHI <1(134), 1(135), 0(136)>

Marking useful stmt: if (D.45721_327 == 0B)

Marking useful stmt: if (D.47855_650 == 0)

processing: if (D.47855_650 == 0)

marking necessary through D.47855_650 stmt D.47855_650 = MEM[(const char *)D.45721_327];
processing: D.47855_650 = MEM[(const char *)D.45721_327];

marking necessary through D.45721_327 stmt D.45721_327 = engine_38->ice_in.ufrag;
processing: D.45721_327 = engine_38->ice_in.ufrag;

processing: if (D.45721_327 == 0B)

processing: if (D.45716_326 != 0)

marking necessary through D.45716_326 stmt D.45716_326 = engine_38->ice_in.cands[D.45715_325][i_6].ready;
processing: D.45716_326 = engine_38->ice_in.cands[D.45715_325][i_6].ready;

marking necessary through D.45715_325 stmt D.45715_325 = engine_38->ice_in.chosen[i_6];
processing: D.45715_325 = engine_38->ice_in.chosen[i_6];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45467_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);

Marking useful stmt: if (D.45629_316 == 2)

marking necessary through D.45467_320 stmt D.45467_320 = smh_34(D)->session;
marking necessary through iftmp.113_21 stmt iftmp.113_21 = PHI <"video"(125), "audio"(126)>
processing: iftmp.113_21 = PHI <"video"(125), "audio"(126)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_320 = smh_34(D)->session;

processing: if (D.45629_316 == 2)

Marking useful stmt: if (D.45464_315 == 0)

marking necessary through D.45629_316 stmt D.45629_316 = engine_38->ice_in.cands[i_5][1].component_id;
processing: D.45629_316 = engine_38->ice_in.cands[i_5][1].component_id;

processing: if (D.45464_315 == 0)

marking necessary through D.45464_315 stmt D.45464_315 = engine_38->ice_in.chosen[1];
processing: D.45464_315 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.cands[D.45464_317][1].ready = D.45640_319;

marking necessary through D.45464_317 stmt D.45464_317 = engine_38->ice_in.chosen[1];
marking necessary through D.45640_319 stmt D.45640_319 = D.45639_318 + 1;
processing: D.45640_319 = D.45639_318 + 1;

marking necessary through D.45639_318 stmt D.45639_318 = engine_38->ice_in.cands[D.45464_317][1].ready;
processing: D.45639_318 = engine_38->ice_in.cands[D.45464_317][1].ready;

processing: D.45464_317 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.chosen[1] = i_5;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45467_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);

Marking useful stmt: if (D.45611_308 == 1)

marking necessary through D.45467_312 stmt D.45467_312 = smh_34(D)->session;
marking necessary through iftmp.112_20 stmt iftmp.112_20 = PHI <"video"(120), "audio"(121)>
processing: iftmp.112_20 = PHI <"video"(120), "audio"(121)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_312 = smh_34(D)->session;

processing: if (D.45611_308 == 1)

Marking useful stmt: if (D.45461_307 == 0)

marking necessary through D.45611_308 stmt D.45611_308 = engine_38->ice_in.cands[i_5][0].component_id;
processing: D.45611_308 = engine_38->ice_in.cands[i_5][0].component_id;

processing: if (D.45461_307 == 0)

marking necessary through D.45461_307 stmt D.45461_307 = engine_38->ice_in.chosen[0];
processing: D.45461_307 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.cands[D.45461_309][0].ready = D.45622_311;

marking necessary through D.45461_309 stmt D.45461_309 = engine_38->ice_in.chosen[0];
marking necessary through D.45622_311 stmt D.45622_311 = D.45621_310 + 1;
processing: D.45622_311 = D.45621_310 + 1;

marking necessary through D.45621_310 stmt D.45621_310 = engine_38->ice_in.cands[D.45461_309][0].ready;
processing: D.45621_310 = engine_38->ice_in.cands[D.45461_309][0].ready;

processing: D.45461_309 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.chosen[0] = i_5;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45467_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45692_297, D.45694_300);

Marking useful stmt: if (D.45675_275 != 0)

marking necessary through D.45467_293 stmt D.45467_293 = smh_34(D)->session;
marking necessary through iftmp.111_19 stmt iftmp.111_19 = PHI <"video"(113), "audio"(114)>
marking necessary through D.45692_297 stmt D.45692_297 = engine_38->ice_in.cands[D.45464_296][1].con_addr;
marking necessary through D.45694_300 stmt D.45694_300 = (int) D.45693_299;
processing: D.45694_300 = (int) D.45693_299;

marking necessary through D.45693_299 stmt D.45693_299 = engine_38->ice_in.cands[D.45464_298][1].con_port;
processing: D.45693_299 = engine_38->ice_in.cands[D.45464_298][1].con_port;

marking necessary through D.45464_298 stmt D.45464_298 = engine_38->ice_in.chosen[1];
processing: D.45464_298 = engine_38->ice_in.chosen[1];

processing: D.45692_297 = engine_38->ice_in.cands[D.45464_296][1].con_addr;

marking necessary through D.45464_296 stmt D.45464_296 = engine_38->ice_in.chosen[1];
processing: D.45464_296 = engine_38->ice_in.chosen[1];

processing: iftmp.111_19 = PHI <"video"(113), "audio"(114)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_293 = smh_34(D)->session;

processing: if (D.45675_275 != 0)

Marking useful stmt: if (D.45461_271 != 0)

marking necessary through D.45675_275 stmt D.45675_275 = D.45673_273 && D.45674_274;
processing: D.45675_275 = D.45673_273 && D.45674_274;

marking necessary through D.45673_273 stmt D.45673_273 = D.45464_272 == 0;
marking necessary through D.45674_274 stmt D.45674_274 = got_rtcp_mux_8 != 0;
processing: D.45674_274 = got_rtcp_mux_8 != 0;

processing: D.45673_273 = D.45464_272 == 0;

marking necessary through D.45464_272 stmt D.45464_272 = engine_38->ice_in.chosen[1];
processing: D.45464_272 = engine_38->ice_in.chosen[1];

processing: if (D.45461_271 != 0)

marking necessary through D.45461_271 stmt D.45461_271 = engine_38->ice_in.chosen[0];
processing: D.45461_271 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.cands[D.45464_290][1].ready = D.45640_292;

marking necessary through D.45464_290 stmt D.45464_290 = engine_38->ice_in.chosen[1];
marking necessary through D.45640_292 stmt D.45640_292 = D.45639_291 + 1;
processing: D.45640_292 = D.45639_291 + 1;

marking necessary through D.45639_291 stmt D.45639_291 = engine_38->ice_in.cands[D.45464_290][1].ready;
processing: D.45639_291 = engine_38->ice_in.cands[D.45464_290][1].ready;

processing: D.45464_290 = engine_38->ice_in.chosen[1];

processing: memcpy (D.45683_283, D.45687_289, 44);

marking necessary through D.45683_283 stmt D.45683_283 = D.45679_278 + D.45682_282;
marking necessary through D.45687_289 stmt D.45687_289 = D.45684_285 + D.45686_288;
processing: D.45687_289 = D.45684_285 + D.45686_288;

marking necessary through D.45684_285 stmt D.45684_285 = (const void * restrict) D.45678_284;
marking necessary through D.45686_288 stmt D.45686_288 = D.45685_287 * 88;
processing: D.45686_288 = D.45685_287 * 88;

marking necessary through D.45685_287 stmt D.45685_287 = (unsigned int) D.45461_286;
processing: D.45685_287 = (unsigned int) D.45461_286;

marking necessary through D.45461_286 stmt D.45461_286 = engine_38->ice_in.chosen[0];
processing: D.45461_286 = engine_38->ice_in.chosen[0];

processing: D.45684_285 = (const void * restrict) D.45678_284;

marking necessary through D.45678_284 stmt D.45678_284 = &engine_38->ice_in.cands[0][0];
processing: D.45678_284 = &engine_38->ice_in.cands[0][0];

processing: D.45683_283 = D.45679_278 + D.45682_282;

marking necessary through D.45679_278 stmt D.45679_278 = (void * restrict) D.45678_277;
marking necessary through D.45682_282 stmt D.45682_282 = D.45681_281 + 44;
processing: D.45682_282 = D.45681_281 + 44;

marking necessary through D.45681_281 stmt D.45681_281 = D.45680_280 * 88;
processing: D.45681_281 = D.45680_280 * 88;

marking necessary through D.45680_280 stmt D.45680_280 = (unsigned int) D.45464_279;
processing: D.45680_280 = (unsigned int) D.45464_279;

marking necessary through D.45464_279 stmt D.45464_279 = engine_38->ice_in.chosen[1];
processing: D.45464_279 = engine_38->ice_in.chosen[1];

processing: D.45679_278 = (void * restrict) D.45678_277;

marking necessary through D.45678_277 stmt D.45678_277 = &engine_38->ice_in.cands[0][0];
processing: D.45678_277 = &engine_38->ice_in.cands[0][0];

processing: engine_38->ice_in.chosen[1] = D.45461_276;

marking necessary through D.45461_276 stmt D.45461_276 = engine_38->ice_in.chosen[0];
processing: D.45461_276 = engine_38->ice_in.chosen[0];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45467_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);

Marking useful stmt: if (D.45632_263 != 0)

marking necessary through D.45467_267 stmt D.45467_267 = smh_34(D)->session;
marking necessary through iftmp.110_18 stmt iftmp.110_18 = PHI <"video"(104), "audio"(105)>
processing: iftmp.110_18 = PHI <"video"(104), "audio"(105)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_267 = smh_34(D)->session;

processing: if (D.45632_263 != 0)

Marking useful stmt: if (D.45629_262 == 2)

marking necessary through D.45632_263 stmt D.45632_263 = engine_38->ice_in.cands[i_4][1].rport;
processing: D.45632_263 = engine_38->ice_in.cands[i_4][1].rport;

processing: if (D.45629_262 == 2)

Marking useful stmt: if (D.45464_261 == 0)

marking necessary through D.45629_262 stmt D.45629_262 = engine_38->ice_in.cands[i_4][1].component_id;
processing: D.45629_262 = engine_38->ice_in.cands[i_4][1].component_id;

processing: if (D.45464_261 == 0)

marking necessary through D.45464_261 stmt D.45464_261 = engine_38->ice_in.chosen[1];
processing: D.45464_261 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.cands[D.45464_264][1].ready = D.45640_266;

marking necessary through D.45464_264 stmt D.45464_264 = engine_38->ice_in.chosen[1];
marking necessary through D.45640_266 stmt D.45640_266 = D.45639_265 + 1;
processing: D.45640_266 = D.45639_265 + 1;

marking necessary through D.45639_265 stmt D.45639_265 = engine_38->ice_in.cands[D.45464_264][1].ready;
processing: D.45639_265 = engine_38->ice_in.cands[D.45464_264][1].ready;

processing: D.45464_264 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.chosen[1] = i_4;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45467_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);

Marking useful stmt: if (D.45614_254 != 0)

marking necessary through D.45467_258 stmt D.45467_258 = smh_34(D)->session;
marking necessary through iftmp.109_17 stmt iftmp.109_17 = PHI <"video"(98), "audio"(99)>
processing: iftmp.109_17 = PHI <"video"(98), "audio"(99)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_258 = smh_34(D)->session;

processing: if (D.45614_254 != 0)

Marking useful stmt: if (D.45611_253 == 1)

marking necessary through D.45614_254 stmt D.45614_254 = engine_38->ice_in.cands[i_4][0].rport;
processing: D.45614_254 = engine_38->ice_in.cands[i_4][0].rport;

processing: if (D.45611_253 == 1)

Marking useful stmt: if (D.45461_252 == 0)

marking necessary through D.45611_253 stmt D.45611_253 = engine_38->ice_in.cands[i_4][0].component_id;
processing: D.45611_253 = engine_38->ice_in.cands[i_4][0].component_id;

processing: if (D.45461_252 == 0)

marking necessary through D.45461_252 stmt D.45461_252 = engine_38->ice_in.chosen[0];
processing: D.45461_252 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.cands[D.45461_255][0].ready = D.45622_257;

marking necessary through D.45461_255 stmt D.45461_255 = engine_38->ice_in.chosen[0];
marking necessary through D.45622_257 stmt D.45622_257 = D.45621_256 + 1;
processing: D.45622_257 = D.45621_256 + 1;

marking necessary through D.45621_256 stmt D.45621_256 = engine_38->ice_in.cands[D.45461_255][0].ready;
processing: D.45621_256 = engine_38->ice_in.cands[D.45461_255][0].ready;

processing: D.45461_255 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.chosen[0] = i_4;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45467_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);

Marking useful stmt: if (D.45636_238 != 0)

marking necessary through D.45467_242 stmt D.45467_242 = smh_34(D)->session;
marking necessary through iftmp.108_16 stmt iftmp.108_16 = PHI <"video"(86), "audio"(87)>
processing: iftmp.108_16 = PHI <"video"(86), "audio"(87)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_242 = smh_34(D)->session;

processing: if (D.45636_238 != 0)

Marking useful stmt: if (D.45632_236 == 0)

processing: if (D.45632_236 == 0)

Marking useful stmt: if (D.45629_235 == 2)

marking necessary through D.45632_236 stmt D.45632_236 = engine_38->ice_in.cands[i_3][1].rport;
processing: D.45632_236 = engine_38->ice_in.cands[i_3][1].rport;

processing: if (D.45629_235 == 2)

Marking useful stmt: if (D.45464_234 == 0)

marking necessary through D.45629_235 stmt D.45629_235 = engine_38->ice_in.cands[i_3][1].component_id;
processing: D.45629_235 = engine_38->ice_in.cands[i_3][1].component_id;

processing: if (D.45464_234 == 0)

marking necessary through D.45464_234 stmt D.45464_234 = engine_38->ice_in.chosen[1];
processing: D.45464_234 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.cands[D.45464_239][1].ready = D.45640_241;

marking necessary through D.45464_239 stmt D.45464_239 = engine_38->ice_in.chosen[1];
marking necessary through D.45640_241 stmt D.45640_241 = D.45639_240 + 1;
processing: D.45640_241 = D.45639_240 + 1;

marking necessary through D.45639_240 stmt D.45639_240 = engine_38->ice_in.cands[D.45464_239][1].ready;
processing: D.45639_240 = engine_38->ice_in.cands[D.45464_239][1].ready;

processing: D.45464_239 = engine_38->ice_in.chosen[1];

processing: engine_38->ice_in.chosen[1] = i_3;

processing: D.45636_238 = switch_check_network_list_ip_token (D.45635_237, "localnet.auto", 0B);

marking necessary through D.45635_237 stmt D.45635_237 = engine_38->ice_in.cands[i_3][1].con_addr;
processing: D.45635_237 = engine_38->ice_in.cands[i_3][1].con_addr;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45467_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);

Marking useful stmt: if (D.45618_227 != 0)

marking necessary through D.45467_231 stmt D.45467_231 = smh_34(D)->session;
marking necessary through iftmp.107_15 stmt iftmp.107_15 = PHI <"video"(79), "audio"(80)>
processing: iftmp.107_15 = PHI <"video"(79), "audio"(80)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_231 = smh_34(D)->session;

processing: if (D.45618_227 != 0)

Marking useful stmt: if (D.45614_225 == 0)

processing: if (D.45614_225 == 0)

Marking useful stmt: if (D.45611_224 == 1)

marking necessary through D.45614_225 stmt D.45614_225 = engine_38->ice_in.cands[i_3][0].rport;
processing: D.45614_225 = engine_38->ice_in.cands[i_3][0].rport;

processing: if (D.45611_224 == 1)

Marking useful stmt: if (D.45461_223 == 0)

marking necessary through D.45611_224 stmt D.45611_224 = engine_38->ice_in.cands[i_3][0].component_id;
processing: D.45611_224 = engine_38->ice_in.cands[i_3][0].component_id;

processing: if (D.45461_223 == 0)

marking necessary through D.45461_223 stmt D.45461_223 = engine_38->ice_in.chosen[0];
processing: D.45461_223 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.cands[D.45461_228][0].ready = D.45622_230;

marking necessary through D.45461_228 stmt D.45461_228 = engine_38->ice_in.chosen[0];
marking necessary through D.45622_230 stmt D.45622_230 = D.45621_229 + 1;
processing: D.45622_230 = D.45621_229 + 1;

marking necessary through D.45621_229 stmt D.45621_229 = engine_38->ice_in.cands[D.45461_228][0].ready;
processing: D.45621_229 = engine_38->ice_in.cands[D.45461_228][0].ready;

processing: D.45461_228 = engine_38->ice_in.chosen[0];

processing: engine_38->ice_in.chosen[0] = i_3;

processing: D.45618_227 = switch_check_network_list_ip_token (D.45617_226, "localnet.auto", 0B);

marking necessary through D.45617_226 stmt D.45617_226 = engine_38->ice_in.cands[i_3][0].con_addr;
processing: D.45617_226 = engine_38->ice_in.cands[i_3][0].con_addr;

processing: engine_38->ice_in.cands[D.45556_212][cid_120].ready = D.45606_214;

marking necessary through D.45556_212 stmt D.45556_212 = engine_38->ice_in.chosen[cid_120];
marking necessary through D.45606_214 stmt D.45606_214 = D.45605_213 + 1;
processing: D.45606_214 = D.45605_213 + 1;

marking necessary through D.45605_213 stmt D.45605_213 = engine_38->ice_in.cands[D.45556_212][cid_120].ready;
processing: D.45605_213 = engine_38->ice_in.cands[D.45556_212][cid_120].ready;

processing: D.45556_212 = engine_38->ice_in.chosen[cid_120];

processing: engine_38->ice_in.cands[D.45544_205][cid_120].generation = D.45601_209;

Marking useful stmt: if (D.45598_204 == 0)

marking necessary through D.45544_205 stmt D.45544_205 = engine_38->ice_in.cand_idx;
processing: D.45544_205 = engine_38->ice_in.cand_idx;

processing: if (D.45598_204 == 0)

Marking useful stmt: if (D.45592_197 == 0)

marking necessary through D.45598_204 stmt D.45598_204 = strcasecmp (D.45579_203, "generation");
processing: D.45598_204 = strcasecmp (D.45579_203, "generation");

marking necessary through D.45579_203 stmt D.45579_203 = fields[j_10];
processing: D.45579_203 = fields[j_10];

marking necessary through j_10 stmt j_10 = PHI <6(57), j_210(66)>
processing: j_10 = PHI <6(57), j_210(66)>

Marking useful stmt: if (D.45584_181 != 0B)

marking necessary through j_210 stmt j_210 = j_10 + 2;
processing: j_210 = j_10 + 2;

processing: if (D.45584_181 != 0B)

Marking useful stmt: if (j_10 < argc_116)

marking necessary through D.45584_181 stmt D.45584_181 = fields[D.45583_180];
processing: D.45584_181 = fields[D.45583_180];

marking necessary through D.45583_180 stmt D.45583_180 = j_10 + 1;
processing: D.45583_180 = j_10 + 1;

processing: if (j_10 < argc_116)

processing: if (D.45592_197 == 0)

Marking useful stmt: if (D.45587_190 == 0)

marking necessary through D.45592_197 stmt D.45592_197 = strcasecmp (D.45579_196, "rport");
processing: D.45592_197 = strcasecmp (D.45579_196, "rport");

marking necessary through D.45579_196 stmt D.45579_196 = fields[j_10];
processing: D.45579_196 = fields[j_10];

processing: if (D.45587_190 == 0)

Marking useful stmt: if (D.45580_183 == 0)

marking necessary through D.45587_190 stmt D.45587_190 = strcasecmp (D.45579_189, "raddr");
processing: D.45587_190 = strcasecmp (D.45579_189, "raddr");

marking necessary through D.45579_189 stmt D.45579_189 = fields[j_10];
processing: D.45579_189 = fields[j_10];

processing: if (D.45580_183 == 0)

marking necessary through D.45580_183 stmt D.45580_183 = strcasecmp (D.45579_182, "typ");
processing: D.45580_183 = strcasecmp (D.45579_182, "typ");

marking necessary through D.45579_182 stmt D.45579_182 = fields[j_10];
processing: D.45579_182 = fields[j_10];

processing: D.45601_209 = switch_core_perform_session_strdup (D.45467_206, D.45584_208, "src/switch_core_media.c", &__func__, 2610);

marking necessary through D.45467_206 stmt D.45467_206 = smh_34(D)->session;
marking necessary through D.45584_208 stmt D.45584_208 = fields[D.45583_207];
processing: D.45584_208 = fields[D.45583_207];

marking necessary through D.45583_207 stmt D.45583_207 = j_10 + 1;
processing: D.45583_207 = j_10 + 1;

processing: D.45467_206 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45544_198][cid_120].rport = D.45596_202;

marking necessary through D.45544_198 stmt D.45544_198 = engine_38->ice_in.cand_idx;
marking necessary through D.45596_202 stmt D.45596_202 = (short unsigned int) D.47851_649;
processing: D.45596_202 = (short unsigned int) D.47851_649;

processing: D.45544_198 = engine_38->ice_in.cand_idx;

processing: D.47851_649 = strtol (D.45584_200, 0B, 10);

marking necessary through D.45584_200 stmt D.45584_200 = fields[D.45583_199];
processing: D.45584_200 = fields[D.45583_199];

marking necessary through D.45583_199 stmt D.45583_199 = j_10 + 1;
processing: D.45583_199 = j_10 + 1;

processing: engine_38->ice_in.cands[D.45544_191][cid_120].raddr = D.45590_195;

marking necessary through D.45544_191 stmt D.45544_191 = engine_38->ice_in.cand_idx;
processing: D.45544_191 = engine_38->ice_in.cand_idx;

processing: D.45590_195 = switch_core_perform_session_strdup (D.45467_192, D.45584_194, "src/switch_core_media.c", &__func__, 2606);

marking necessary through D.45467_192 stmt D.45467_192 = smh_34(D)->session;
marking necessary through D.45584_194 stmt D.45584_194 = fields[D.45583_193];
processing: D.45584_194 = fields[D.45583_193];

marking necessary through D.45583_193 stmt D.45583_193 = j_10 + 1;
processing: D.45583_193 = j_10 + 1;

processing: D.45467_192 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45544_184][cid_120].cand_type = D.45585_188;

marking necessary through D.45544_184 stmt D.45544_184 = engine_38->ice_in.cand_idx;
processing: D.45544_184 = engine_38->ice_in.cand_idx;

processing: D.45585_188 = switch_core_perform_session_strdup (D.45467_185, D.45584_187, "src/switch_core_media.c", &__func__, 2604);

marking necessary through D.45467_185 stmt D.45467_185 = smh_34(D)->session;
marking necessary through D.45584_187 stmt D.45584_187 = fields[D.45583_186];
processing: D.45584_187 = fields[D.45583_186];

marking necessary through D.45583_186 stmt D.45583_186 = j_10 + 1;
processing: D.45583_186 = j_10 + 1;

processing: D.45467_185 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45544_175][cid_120].con_port = D.45578_178;

marking necessary through D.45544_175 stmt D.45544_175 = engine_38->ice_in.cand_idx;
marking necessary through D.45578_178 stmt D.45578_178 = (short unsigned int) D.47848_648;
processing: D.45578_178 = (short unsigned int) D.47848_648;

processing: D.45544_175 = engine_38->ice_in.cand_idx;

processing: D.47848_648 = strtol (D.45552_176, 0B, 10);

marking necessary through D.45552_176 stmt D.45552_176 = fields[5];
processing: D.45552_176 = fields[5];

processing: engine_38->ice_in.cands[D.45544_171][cid_120].con_addr = D.45576_174;

marking necessary through D.45544_171 stmt D.45544_171 = engine_38->ice_in.cand_idx;
processing: D.45544_171 = engine_38->ice_in.cand_idx;

processing: D.45576_174 = switch_core_perform_session_strdup (D.45467_172, D.45551_173, "src/switch_core_media.c", &__func__, 2596);

marking necessary through D.45467_172 stmt D.45467_172 = smh_34(D)->session;
marking necessary through D.45551_173 stmt D.45551_173 = fields[4];
processing: D.45551_173 = fields[4];

processing: D.45467_172 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45544_167][cid_120].priority = D.45575_170;

marking necessary through D.45544_167 stmt D.45544_167 = engine_38->ice_in.cand_idx;
marking necessary through D.45575_170 stmt D.45575_170 = (uint32_t) D.47845_647;
processing: D.45575_170 = (uint32_t) D.47845_647;

processing: D.45544_167 = engine_38->ice_in.cand_idx;

processing: D.47845_647 = strtol (D.45573_168, 0B, 10);

marking necessary through D.45573_168 stmt D.45573_168 = fields[3];
processing: D.45573_168 = fields[3];

processing: engine_38->ice_in.cands[D.45544_163][cid_120].transport = D.45572_166;

marking necessary through D.45544_163 stmt D.45544_163 = engine_38->ice_in.cand_idx;
processing: D.45544_163 = engine_38->ice_in.cand_idx;

processing: D.45572_166 = switch_core_perform_session_strdup (D.45467_164, D.45549_165, "src/switch_core_media.c", &__func__, 2594);

marking necessary through D.45467_164 stmt D.45467_164 = smh_34(D)->session;
marking necessary through D.45549_165 stmt D.45549_165 = fields[2];
processing: D.45549_165 = fields[2];

processing: D.45467_164 = smh_34(D)->session;

processing: engine_38->ice_in.cands[D.45544_160][cid_120].component_id = D.47842_646;

marking necessary through D.45544_160 stmt D.45544_160 = engine_38->ice_in.cand_idx;
processing: D.45544_160 = engine_38->ice_in.cand_idx;

processing: D.47842_646 = strtol (D.45545_161, 0B, 10);

marking necessary through D.45545_161 stmt D.45545_161 = fields[1];
processing: D.45545_161 = fields[1];

processing: engine_38->ice_in.cands[D.45544_156][cid_120].foundation = D.45570_159;

marking necessary through D.45544_156 stmt D.45544_156 = engine_38->ice_in.cand_idx;
processing: D.45544_156 = engine_38->ice_in.cand_idx;

processing: D.45570_159 = switch_core_perform_session_strdup (D.45467_157, D.45569_158, "src/switch_core_media.c", &__func__, 2592);

marking necessary through D.45467_157 stmt D.45467_157 = smh_34(D)->session;
marking necessary through D.45569_158 stmt D.45569_158 = fields[0];
processing: D.45569_158 = fields[0];

processing: D.45467_157 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45467_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47839_645, D.45549_152, D.45550_153, D.45551_154, D.45552_155);

Marking useful stmt: if (D.45556_135 == 0)

Marking useful stmt: if (D.45559_138 != 0)

marking necessary through D.45467_148 stmt D.45467_148 = smh_34(D)->session;
marking necessary through iftmp.106_14 stmt iftmp.106_14 = PHI <"video"(54), "audio"(55)>
marking necessary through D.45549_152 stmt D.45549_152 = fields[2];
marking necessary through D.45550_153 stmt D.45550_153 = fields[7];
marking necessary through D.45551_154 stmt D.45551_154 = fields[4];
marking necessary through D.45552_155 stmt D.45552_155 = fields[5];
processing: D.45552_155 = fields[5];

processing: D.45551_154 = fields[4];

processing: D.45550_153 = fields[7];

processing: D.45549_152 = fields[2];

processing: iftmp.106_14 = PHI <"video"(54), "audio"(55)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_148 = smh_34(D)->session;

processing: if (D.45559_138 != 0)

processing: if (D.45556_135 == 0)

marking necessary through D.45556_135 stmt D.45556_135 = engine_38->ice_in.chosen[cid_120];
processing: D.45556_135 = engine_38->ice_in.chosen[cid_120];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45467_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47839_645, D.45549_144, D.45550_145, D.45551_146, D.45552_147);

marking necessary through D.45467_140 stmt D.45467_140 = smh_34(D)->session;
marking necessary through iftmp.105_13 stmt iftmp.105_13 = PHI <"video"(51), "audio"(52)>
marking necessary through D.45549_144 stmt D.45549_144 = fields[2];
marking necessary through D.45550_145 stmt D.45550_145 = fields[7];
marking necessary through D.45551_146 stmt D.45551_146 = fields[4];
marking necessary through D.45552_147 stmt D.45552_147 = fields[5];
processing: D.45552_147 = fields[5];

processing: D.45551_146 = fields[4];

processing: D.45550_145 = fields[7];

processing: D.45549_144 = fields[2];

processing: iftmp.105_13 = PHI <"video"(51), "audio"(52)>

Marking useful stmt: if (type_36(D) == 1)

processing: if (type_36(D) == 1)

processing: D.45467_140 = smh_34(D)->session;

processing: engine_38->ice_in.chosen[cid_120] = D.45544_139;

marking necessary through D.45544_139 stmt D.45544_139 = engine_38->ice_in.cand_idx;
processing: D.45544_139 = engine_38->ice_in.cand_idx;

processing: D.45559_138 = switch_check_network_list_ip_token (D.45551_136, D.45558_137, 0B);

marking necessary through D.45551_136 stmt D.45551_136 = fields[4];
marking necessary through D.45558_137 stmt D.45558_137 = engine_38->cand_acl[0];
processing: D.45558_137 = engine_38->cand_acl[0];

processing: D.45551_136 = fields[4];

processing: engine_38->ice_in.cand_idx = D.45553_132;

marking necessary through D.45553_132 stmt D.45553_132 = D.45544_131 + 1;
processing: D.45553_132 = D.45544_131 + 1;

marking necessary through D.45544_131 stmt D.45544_131 = engine_38->ice_in.cand_idx;
processing: D.45544_131 = engine_38->ice_in.cand_idx;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45467_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47839_645, D.45549_127, D.45550_128, D.45551_129, D.45552_130);

marking necessary through D.45467_125 stmt D.45467_125 = smh_34(D)->session;
marking necessary through D.45549_127 stmt D.45549_127 = fields[2];
marking necessary through D.45550_128 stmt D.45550_128 = fields[7];
marking necessary through D.45551_129 stmt D.45551_129 = fields[4];
marking necessary through D.45552_130 stmt D.45552_130 = fields[5];
processing: D.45552_130 = fields[5];

processing: D.45551_129 = fields[4];

processing: D.45550_128 = fields[7];

processing: D.45549_127 = fields[2];

processing: D.45467_125 = smh_34(D)->session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45467_122, 101, "CAND %d [%s]\n", i_2, D.45547_123);

Marking useful stmt: if (i_2 < argc_116)

marking necessary through D.45467_122 stmt D.45467_122 = smh_34(D)->session;
marking necessary through i_2 stmt i_2 = PHI <0(45), i_124(46)>
marking necessary through D.45547_123 stmt D.45547_123 = fields[i_2];
processing: D.45547_123 = fields[i_2];

processing: i_2 = PHI <0(45), i_124(46)>

marking necessary through i_124 stmt i_124 = i_2 + 1;
processing: i_124 = i_2 + 1;

processing: D.45467_122 = smh_34(D)->session;

processing: if (i_2 < argc_116)

processing: D.47839_645 = strtol (D.45545_118, 0B, 10);

marking necessary through D.45545_118 stmt D.45545_118 = fields[1];
processing: D.45545_118 = fields[1];

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45467_215, 4, "Invalid data\n");

marking necessary through D.45467_215 stmt D.45467_215 = smh_34(D)->session;
processing: D.45467_215 = smh_34(D)->session;

processing: D.45540_115 = switch_separate_string (data_114, 32, &fields, 15);

processing: data_114 = switch_core_perform_session_strdup (D.45467_112, D.45482_113, "src/switch_core_media.c", &__func__, 2556);

marking necessary through D.45467_112 stmt D.45467_112 = smh_34(D)->session;
marking necessary through D.45482_113 stmt D.45482_113 = attr_1->a_value;
processing: D.45482_113 = attr_1->a_value;

processing: D.45467_112 = smh_34(D)->session;

processing: D.45537_111 = switch_stristr (" udp ", D.45482_110);

marking necessary through D.45482_110 stmt D.45482_110 = attr_1->a_value;
processing: D.45482_110 = attr_1->a_value;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45467_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");

Marking useful stmt: if (D.45533_106 == 0)

marking necessary through D.45467_109 stmt D.45467_109 = smh_34(D)->session;
processing: D.45467_109 = smh_34(D)->session;

processing: if (D.45533_106 == 0)

marking necessary through D.45533_106 stmt D.45533_106 = engine_38->cand_acl_count;
processing: D.45533_106 = engine_38->cand_acl_count;

processing: engine_38->cand_acl_count = D.45536_108;

marking necessary through D.45536_108 stmt D.45536_108 = D.45533_107 + 1;
processing: D.45536_108 = D.45533_107 + 1;

marking necessary through D.45533_107 stmt D.45533_107 = engine_38->cand_acl_count;
processing: D.45533_107 = engine_38->cand_acl_count;

processing: engine_38->cand_acl[D.45533_107] = "wan.auto";

processing: switch_channel_set_flag_value (D.45468_105, 108, 1);

marking necessary through D.45468_105 stmt D.45468_105 = D.45467_104->channel;
processing: D.45468_105 = D.45467_104->channel;

marking necessary through D.45467_104 stmt D.45467_104 = smh_34(D)->session;
processing: D.45467_104 = smh_34(D)->session;

processing: engine_38->remote_rtcp_port = D.45528_100;

marking necessary through D.45528_100 stmt D.45528_100 = D.45527_99->remote_sdp_port;
processing: D.45528_100 = D.45527_99->remote_sdp_port;

marking necessary through D.45527_99 stmt D.45527_99 = engine_38->cur_payload_map;
processing: D.45527_99 = engine_38->cur_payload_map;

processing: engine_38->rtcp_mux = 1;

processing: switch_rtp_set_remote_ssrc (D.45519_95, D.45512_96);

marking necessary through D.45519_95 stmt D.45519_95 = engine_38->rtp_session;
marking necessary through D.45512_96 stmt D.45512_96 = engine_38->remote_ssrc;
processing: D.45512_96 = engine_38->remote_ssrc;

processing: D.45519_95 = engine_38->rtp_session;

processing: engine_38->remote_ssrc = D.45518_92;

marking necessary through D.45518_92 stmt D.45518_92 = (unsigned int) D.47836_644;
processing: D.45518_92 = (unsigned int) D.47836_644;

processing: D.47836_644 = strtol (D.45482_90, 0B, 10);

marking necessary through D.45482_90 stmt D.45482_90 = attr_1->a_value;
processing: D.45482_90 = attr_1->a_value;

processing: switch_channel_set_flag_value (D.45468_85, 109, 1);

marking necessary through D.45468_85 stmt D.45468_85 = D.45467_84->channel;
processing: D.45468_85 = D.45467_84->channel;

marking necessary through D.45467_84 stmt D.45467_84 = smh_34(D)->session;
processing: D.45467_84 = smh_34(D)->session;

processing: generate_local_fingerprint (smh_34(D), type_36(D));

processing: switch_copy_string (D.45509_83, p_82, 192);

Marking useful stmt: if (p_81 != 0B)

marking necessary through D.45509_83 stmt D.45509_83 = &engine_38->local_dtls_fingerprint.str;
marking necessary through p_82 stmt p_82 = p_81 + 1;
processing: p_82 = p_81 + 1;

marking necessary through p_81 stmt p_81 = __builtin_strchr (D.45506_80, 32);
processing: p_81 = __builtin_strchr (D.45506_80, 32);

marking necessary through D.45506_80 stmt D.45506_80 = engine_38->remote_dtls_fingerprint.type;
processing: D.45506_80 = engine_38->remote_dtls_fingerprint.type;

processing: D.45509_83 = &engine_38->local_dtls_fingerprint.str;

processing: if (p_81 != 0B)

processing: *p_81 = 0;

processing: engine_38->remote_dtls_fingerprint.type = D.45505_79;

processing: D.45505_79 = switch_core_perform_session_strdup (D.45467_77, D.45482_78, "src/switch_core_media.c", &__func__, 2512);

marking necessary through D.45467_77 stmt D.45467_77 = smh_34(D)->session;
marking necessary through D.45482_78 stmt D.45482_78 = attr_1->a_value;
processing: D.45482_78 = attr_1->a_value;

processing: D.45467_77 = smh_34(D)->session;

processing: D.45499_72 = dtls_ok (D.45467_71);

marking necessary through D.45467_71 stmt D.45467_71 = smh_34(D)->session;
processing: D.45467_71 = smh_34(D)->session;

processing: D.45497_70 = switch_rtp_has_dtls ();

processing: engine_38->ice_in.options = D.45493_69;

processing: D.45493_69 = switch_core_perform_session_strdup (D.45467_67, D.45482_68, "src/switch_core_media.c", &__func__, 2507);

marking necessary through D.45467_67 stmt D.45467_67 = smh_34(D)->session;
marking necessary through D.45482_68 stmt D.45482_68 = attr_1->a_value;
processing: D.45482_68 = attr_1->a_value;

processing: D.45467_67 = smh_34(D)->session;

processing: engine_38->ice_in.pwd = D.45488_64;

processing: D.45488_64 = switch_core_perform_session_strdup (D.45467_62, D.45482_63, "src/switch_core_media.c", &__func__, 2505);

marking necessary through D.45467_62 stmt D.45467_62 = smh_34(D)->session;
marking necessary through D.45482_63 stmt D.45482_63 = attr_1->a_value;
processing: D.45482_63 = attr_1->a_value;

processing: D.45467_62 = smh_34(D)->session;

processing: engine_38->ice_in.ufrag = D.45483_59;

processing: D.45483_59 = switch_core_perform_session_strdup (D.45467_57, D.45482_58, "src/switch_core_media.c", &__func__, 2503);

marking necessary through D.45467_57 stmt D.45467_57 = smh_34(D)->session;
marking necessary through D.45482_58 stmt D.45482_58 = attr_1->a_value;
processing: D.45482_58 = attr_1->a_value;

processing: D.45467_57 = smh_34(D)->session;

processing: engine_38->ice_in.cand_idx = 0;

processing: engine_38->ice_in.chosen[1] = 0;

processing: engine_38->ice_in.chosen[0] = 0;

processing: D.45469_45 = switch_channel_test_flag (D.45468_44, 103);

marking necessary through D.45468_44 stmt D.45468_44 = D.45467_43->channel;
processing: D.45468_44 = D.45467_43->channel;

marking necessary through D.45467_43 stmt D.45467_43 = smh_34(D)->session;
processing: D.45467_43 = smh_34(D)->session;


Eliminating unnecessary statements:
Deleting : interval_450 = interval_655;

Deleting : val_430 = val_27;

Deleting : .MEM_330 = PHI <.MEM_527(7), .MEM_527(6)>

Deleting : .MEM_418 = PHI <.MEM_500(74), .MEM_500(73)>

Deleting : .MEM_674 = PHI <.MEM_504(94), .MEM_504(93)>

Deleting : .MEM_454 = PHI <.MEM_509(117), .MEM_509(116)>

Removed 2 of 663 statements (0%)
Removed 4 of 81 PHI nodes (4%)
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtp_engine_t * engine;
  struct sdp_attribute_t * attr;
  int i;
  int got_rtcp_mux;
  const char * val;
  static const char __func__[10] = "check_ice";

  { Scope block #176 src/switch_core_media.c:2700 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #177 Originating from :#0 

    }

  }

  { Scope block #178 src/switch_core_media.c:2700 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #179 Originating from :#0 

    }

  }

  { Scope block #180 
    char * data;
    char * fields[15];
    int argc;
    int j;
    int cid;

    { Scope block #181 src/switch_core_media.c:2608 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #182 Originating from :#0 

      }

    }

    { Scope block #183 src/switch_core_media.c:2597 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #184 Originating from :#0 

      }

    }

    { Scope block #185 src/switch_core_media.c:2595 Originating from :  extern long int atol (const char *); 
      const char * __nptr; (unused)

      { Scope block #186 Originating from :#0 

      }

    }

    { Scope block #187 src/switch_core_media.c:2593 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #188 Originating from :#0 

      }

    }

    { Scope block #189 src/switch_core_media.c:2565 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #190 Originating from :#0 

      }

    }

    { Scope block #191 src/switch_core_media.c:2530 Originating from :  extern long int atol (const char *); 
      const char * __nptr; (unused)

      { Scope block #192 Originating from :#0 

      }

    }

    { Scope block #193 src/switch_core_media.c:2509 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #194 Originating from :#0 

      }

    }

    { Scope block #195 src/switch_core_media.c:2498 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #196 Originating from :#0 

      }

    }

    { Scope block #197 
      char * p;

    }

  }

  { Scope block #198 
    char tmp[80];

  }

  { Scope block #199 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #200 src/switch_core_media.c:2783 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #201 Originating from :#0 

      }

    }

    { Scope block #202 
      int interval;

      { Scope block #203 src/switch_core_media.c:2791 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #204 Originating from :#0 

        }

      }

    }

  }

  { Scope block #205 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

}
check_ice (struct switch_media_handle_t * smh, switch_media_type_t type, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47862;
  const char D.47859;
  int D.47858;
  const char D.47855;
  int D.47854;
  int D.47851;
  int D.47848;
  long int D.47845;
  int D.47842;
  int D.47839;
  long int D.47836;
  const char D.47833;
  int D.47832;
  const char D.47829;
  int D.47828;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char tmp[80];
  char * p;
  int cid;
  int j;
  int argc;
  char * fields[15];
  char * data;
  static const char __func__[10] = "check_ice";
  const char * val;
  int got_rtcp_mux;
  int i;
  struct sdp_attribute_t * attr;
  struct switch_rtp_engine_t * engine;
  switch_call_direction_t D.45836;
  switch_core_media_ice_type_t iftmp.126;
  char * iftmp.125;
  char * iftmp.124;
  int D.38904;
  char * iftmp.123;
  unsigned int D.45813;
  unsigned int interval.122;
  switch_bool_t D.45810;
  int8_t D.45809;
  int D.45808;
  char * iftmp.121;
  int D.45801;
  _Bool D.45797;
  _Bool D.45796;
  _Bool D.45795;
  char[27] * iftmp.120;
  struct switch_core_media_params_t * D.45789;
  char[25] * iftmp.118;
  struct ice_t * D.45776;
  switch_call_direction_t D.45772;
  switch_core_media_ice_type_t iftmp.117;
  char * D.45770;
  char * D.45769;
  char * iftmp.116;
  uint8_t D.45760;
  uint32_t D.45757;
  _Bool D.45754;
  _Bool D.45753;
  _Bool D.45752;
  char * D.45751;
  char * iftmp.115;
  char * D.45744;
  int D.45743;
  switch_port_t D.45740;
  char * D.45739;
  char * D.45738;
  int D.45737;
  char * iftmp.114;
  char * D.45732;
  switch_port_t D.45729;
  char * D.45726;
  char * D.45724;
  char * D.45721;
  uint8_t D.45716;
  int D.45715;
  char * iftmp.113;
  char * iftmp.112;
  int D.45694;
  switch_port_t D.45693;
  char * D.45692;
  char * iftmp.111;
  const void * restrict D.45687;
  unsigned int D.45686;
  unsigned int D.45685;
  const void * restrict D.45684;
  void * restrict D.45683;
  unsigned int D.45682;
  unsigned int D.45681;
  unsigned int D.45680;
  void * restrict D.45679;
  struct icand_t * D.45678;
  _Bool D.45675;
  _Bool D.45674;
  _Bool D.45673;
  char * iftmp.110;
  char * iftmp.109;
  char * iftmp.108;
  uint8_t D.45640;
  uint8_t D.45639;
  switch_bool_t D.45636;
  char * D.45635;
  switch_port_t D.45632;
  int D.45629;
  char * iftmp.107;
  uint8_t D.45622;
  uint8_t D.45621;
  switch_bool_t D.45618;
  char * D.45617;
  switch_port_t D.45614;
  int D.45611;
  uint8_t D.45606;
  uint8_t D.45605;
  char * D.45601;
  int D.45598;
  short unsigned int D.45596;
  int D.45592;
  char * D.45590;
  int D.45587;
  char * D.45585;
  char * D.45584;
  int D.45583;
  int D.45580;
  char * D.45579;
  short unsigned int D.45578;
  char * D.45576;
  uint32_t D.45575;
  char * D.45573;
  char * D.45572;
  char * D.45570;
  char * D.45569;
  char * iftmp.106;
  char * iftmp.105;
  switch_bool_t D.45559;
  char * D.45558;
  int D.45556;
  int D.45553;
  char * D.45552;
  char * D.45551;
  char * D.45550;
  char * D.45549;
  char * D.45547;
  char * D.45545;
  int D.45544;
  unsigned int D.45540;
  const char * D.45537;
  int D.45536;
  int D.45533;
  int D.45530;
  switch_port_t D.45528;
  struct payload_map_t * D.45527;
  int D.45524;
  struct switch_rtp_t * D.45519;
  unsigned int D.45518;
  int D.45514;
  uint32_t D.45512;
  char[192] * D.45509;
  char * D.45506;
  char * D.45505;
  int D.45501;
  int D.45499;
  int D.45497;
  char * D.45493;
  int D.45490;
  char * D.45488;
  int D.45485;
  char * D.45483;
  const char * D.45482;
  int D.45479;
  const char * D.45475;
  uint32_t D.45469;
  struct switch_channel_t * D.45468;
  struct switch_core_session_t * D.45467;
  int D.45464;
  int D.45461;

<bb 2>:
  engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_38
  # DEBUG i => 0
  # DEBUG got_rtcp_mux => 0
  D.45461_41 = engine_38->ice_in.chosen[0];
  if (D.45461_41 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

<bb 3>:
  D.45464_42 = engine_38->ice_in.chosen[1];
  if (D.45464_42 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  D.45467_43 = smh_34(D)->session;
  D.45468_44 = D.45467_43->channel;
  D.45469_45 = switch_channel_test_flag (D.45468_44, 103);
  if (D.45469_45 == 0)
    goto <bb 203>;
  else
    goto <bb 5>;

<bb 5>:
  engine_38->ice_in.chosen[0] = 0;
  engine_38->ice_in.chosen[1] = 0;
  engine_38->ice_in.cand_idx = 0;
  if (m_46(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;

<bb 6>:
  attr_47 = m_46(D)->m_attributes;
  # DEBUG attr => attr_47

<bb 7>:
  # attr_417 = PHI <attr_49(8), attr_47(6)>
  # got_rtcp_mux_672 = PHI <0(8), 0(6)>
  goto <bb 73>;

<bb 8>:
  attr_49 = sdp_48(D)->sdp_attributes;
  # DEBUG attr => attr_49
  goto <bb 7>;

<bb 9>:
  # DEBUG argc => 0
  # DEBUG j => 0
  # DEBUG cid => 0
  D.45475_53 = attr_1->a_name;
  # DEBUG s => D.45475_53
  if (D.45475_53 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.47829_640 = *D.45475_53;
  if (D.47829_640 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.47828_641 = PHI <1(9), 1(10), 0(11)>
  if (D.47828_641 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 72>;

<bb 14>:
  D.45475_55 = attr_1->a_name;
  D.45479_56 = strcasecmp (D.45475_55, "ice-ufrag");
  if (D.45479_56 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.45467_57 = smh_34(D)->session;
  D.45482_58 = attr_1->a_value;
  D.45483_59 = switch_core_perform_session_strdup (D.45467_57, D.45482_58, "src/switch_core_media.c", &__func__, 2503);
  engine_38->ice_in.ufrag = D.45483_59;
  goto <bb 72>;

<bb 16>:
  D.45475_60 = attr_1->a_name;
  D.45485_61 = strcasecmp (D.45475_60, "ice-pwd");
  if (D.45485_61 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.45467_62 = smh_34(D)->session;
  D.45482_63 = attr_1->a_value;
  D.45488_64 = switch_core_perform_session_strdup (D.45467_62, D.45482_63, "src/switch_core_media.c", &__func__, 2505);
  engine_38->ice_in.pwd = D.45488_64;
  goto <bb 72>;

<bb 18>:
  D.45475_65 = attr_1->a_name;
  D.45490_66 = strcasecmp (D.45475_65, "ice-options");
  if (D.45490_66 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.45467_67 = smh_34(D)->session;
  D.45482_68 = attr_1->a_value;
  D.45493_69 = switch_core_perform_session_strdup (D.45467_67, D.45482_68, "src/switch_core_media.c", &__func__, 2507);
  engine_38->ice_in.options = D.45493_69;
  goto <bb 72>;

<bb 20>:
  D.45497_70 = switch_rtp_has_dtls ();
  if (D.45497_70 != 0)
    goto <bb 21>;
  else
    goto <bb 30>;

<bb 21>:
  D.45467_71 = smh_34(D)->session;
  D.45499_72 = dtls_ok (D.45467_71);
  if (D.45499_72 != 0)
    goto <bb 22>;
  else
    goto <bb 30>;

<bb 22>:
  D.45475_73 = attr_1->a_name;
  D.45501_74 = strcasecmp (D.45475_73, "fingerprint");
  if (D.45501_74 == 0)
    goto <bb 23>;
  else
    goto <bb 30>;

<bb 23>:
  D.45482_75 = attr_1->a_value;
  # DEBUG s => D.45482_75
  if (D.45482_75 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;

<bb 24>:
  D.47833_642 = *D.45482_75;
  if (D.47833_642 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:

<bb 26>:
  # D.47832_643 = PHI <1(23), 1(24), 0(25)>
  if (D.47832_643 == 0)
    goto <bb 27>;
  else
    goto <bb 30>;

<bb 27>:
  D.45467_77 = smh_34(D)->session;
  D.45482_78 = attr_1->a_value;
  D.45505_79 = switch_core_perform_session_strdup (D.45467_77, D.45482_78, "src/switch_core_media.c", &__func__, 2512);
  engine_38->remote_dtls_fingerprint.type = D.45505_79;
  D.45506_80 = engine_38->remote_dtls_fingerprint.type;
  p_81 = __builtin_strchr (D.45506_80, 32);
  # DEBUG p => p_81
  if (p_81 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  *p_81 = 0;
  p_82 = p_81 + 1;
  # DEBUG p => p_82
  D.45509_83 = &engine_38->local_dtls_fingerprint.str;
  switch_copy_string (D.45509_83, p_82, 192);

<bb 29>:
  generate_local_fingerprint (smh_34(D), type_36(D));
  D.45467_84 = smh_34(D)->session;
  D.45468_85 = D.45467_84->channel;
  switch_channel_set_flag_value (D.45468_85, 109, 1);
  goto <bb 72>;

<bb 30>:
  D.45512_86 = engine_38->remote_ssrc;
  if (D.45512_86 == 0)
    goto <bb 31>;
  else
    goto <bb 36>;

<bb 31>:
  D.45475_87 = attr_1->a_name;
  D.45514_88 = strcasecmp (D.45475_87, "ssrc");
  if (D.45514_88 == 0)
    goto <bb 32>;
  else
    goto <bb 36>;

<bb 32>:
  D.45482_89 = attr_1->a_value;
  if (D.45482_89 != 0B)
    goto <bb 33>;
  else
    goto <bb 36>;

<bb 33>:
  D.45482_90 = attr_1->a_value;
  # DEBUG __nptr => D.45482_90
  D.47836_644 = strtol (D.45482_90, 0B, 10);
  D.45518_92 = (unsigned int) D.47836_644;
  engine_38->remote_ssrc = D.45518_92;
  D.45519_93 = engine_38->rtp_session;
  if (D.45519_93 != 0B)
    goto <bb 34>;
  else
    goto <bb 72>;

<bb 34>:
  D.45512_94 = engine_38->remote_ssrc;
  if (D.45512_94 != 0)
    goto <bb 35>;
  else
    goto <bb 72>;

<bb 35>:
  D.45519_95 = engine_38->rtp_session;
  D.45512_96 = engine_38->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.45519_95, D.45512_96);
  goto <bb 72>;

<bb 36>:
  D.45475_97 = attr_1->a_name;
  D.45524_98 = strcasecmp (D.45475_97, "rtcp-mux");
  if (D.45524_98 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  engine_38->rtcp_mux = 1;
  D.45527_99 = engine_38->cur_payload_map;
  D.45528_100 = D.45527_99->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_100;
  got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
  # DEBUG got_rtcp_mux => got_rtcp_mux_101
  goto <bb 72>;

<bb 38>:
  D.45475_102 = attr_1->a_name;
  D.45530_103 = strcasecmp (D.45475_102, "candidate");
  if (D.45530_103 == 0)
    goto <bb 39>;
  else
    goto <bb 72>;

<bb 39>:
  D.45467_104 = smh_34(D)->session;
  D.45468_105 = D.45467_104->channel;
  switch_channel_set_flag_value (D.45468_105, 108, 1);
  D.45533_106 = engine_38->cand_acl_count;
  if (D.45533_106 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  D.45533_107 = engine_38->cand_acl_count;
  engine_38->cand_acl[D.45533_107] = "wan.auto";
  D.45536_108 = D.45533_107 + 1;
  engine_38->cand_acl_count = D.45536_108;
  D.45467_109 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45467_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");

<bb 41>:
  D.45482_110 = attr_1->a_value;
  D.45537_111 = switch_stristr (" udp ", D.45482_110);
  if (D.45537_111 == 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  // predicted unlikely by continue predictor.
  goto <bb 72>;

<bb 43>:
  D.45467_112 = smh_34(D)->session;
  D.45482_113 = attr_1->a_value;
  data_114 = switch_core_perform_session_strdup (D.45467_112, D.45482_113, "src/switch_core_media.c", &__func__, 2556);
  # DEBUG data => data_114
  D.45540_115 = switch_separate_string (data_114, 32, &fields, 15);
  argc_116 = (int) D.45540_115;
  # DEBUG argc => argc_116
  if (argc_116 <= 4)
    goto <bb 45>;
  else
    goto <bb 44>;

<bb 44>:
  D.45544_117 = engine_38->ice_in.cand_idx;
  if (D.45544_117 > 48)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.45467_215 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45467_215, 4, "Invalid data\n");
  // predicted unlikely by continue predictor.
  goto <bb 72>;

<bb 46>:
  D.45545_118 = fields[1];
  # DEBUG __nptr => D.45545_118
  D.47839_645 = strtol (D.45545_118, 0B, 10);
  cid_120 = D.47839_645 + -1;
  # DEBUG cid => cid_120
  # DEBUG i => 0
  goto <bb 48>;

<bb 47>:
  D.45467_122 = smh_34(D)->session;
  D.45547_123 = fields[i_2];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45467_122, 101, "CAND %d [%s]\n", i_2, D.45547_123);
  i_124 = i_2 + 1;
  # DEBUG i => i_124

<bb 48>:
  # i_2 = PHI <0(46), i_124(47)>
  # DEBUG i => i_2
  if (i_2 < argc_116)
    goto <bb 47>;
  else
    goto <bb 49>;

<bb 49>:
  D.45467_125 = smh_34(D)->session;
  D.45549_127 = fields[2];
  D.45550_128 = fields[7];
  D.45551_129 = fields[4];
  D.45552_130 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45467_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47839_645, D.45549_127, D.45550_128, D.45551_129, D.45552_130);
  D.45544_131 = engine_38->ice_in.cand_idx;
  D.45553_132 = D.45544_131 + 1;
  engine_38->ice_in.cand_idx = D.45553_132;
  # DEBUG i => 0
  D.45533_134 = engine_38->cand_acl_count;
  if (D.45533_134 > 0)
    goto <bb 50>;
  else
    goto <bb 72>;

<bb 50>:
  D.45556_135 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_135 == 0)
    goto <bb 51>;
  else
    goto <bb 55>;

<bb 51>:
  D.45551_136 = fields[4];
  D.45558_137 = engine_38->cand_acl[0];
  D.45559_138 = switch_check_network_list_ip_token (D.45551_136, D.45558_137, 0B);
  if (D.45559_138 != 0)
    goto <bb 52>;
  else
    goto <bb 55>;

<bb 52>:
  D.45544_139 = engine_38->ice_in.cand_idx;
  engine_38->ice_in.chosen[cid_120] = D.45544_139;
  D.45467_140 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 54>;
  else
    goto <bb 53>;

<bb 53>:

<bb 54>:
  # iftmp.105_13 = PHI <"video"(52), "audio"(53)>
  D.45549_144 = fields[2];
  D.45550_145 = fields[7];
  D.45551_146 = fields[4];
  D.45552_147 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45467_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47839_645, D.45549_144, D.45550_145, D.45551_146, D.45552_147);
  goto <bb 58>;

<bb 55>:
  D.45467_148 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 57>;
  else
    goto <bb 56>;

<bb 56>:

<bb 57>:
  # iftmp.106_14 = PHI <"video"(55), "audio"(56)>
  D.45549_152 = fields[2];
  D.45550_153 = fields[7];
  D.45551_154 = fields[4];
  D.45552_155 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45467_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47839_645, D.45549_152, D.45550_153, D.45551_154, D.45552_155);

<bb 58>:
  D.45544_156 = engine_38->ice_in.cand_idx;
  D.45467_157 = smh_34(D)->session;
  D.45569_158 = fields[0];
  D.45570_159 = switch_core_perform_session_strdup (D.45467_157, D.45569_158, "src/switch_core_media.c", &__func__, 2592);
  engine_38->ice_in.cands[D.45544_156][cid_120].foundation = D.45570_159;
  D.45544_160 = engine_38->ice_in.cand_idx;
  D.45545_161 = fields[1];
  # DEBUG __nptr => D.45545_161
  D.47842_646 = strtol (D.45545_161, 0B, 10);
  engine_38->ice_in.cands[D.45544_160][cid_120].component_id = D.47842_646;
  D.45544_163 = engine_38->ice_in.cand_idx;
  D.45467_164 = smh_34(D)->session;
  D.45549_165 = fields[2];
  D.45572_166 = switch_core_perform_session_strdup (D.45467_164, D.45549_165, "src/switch_core_media.c", &__func__, 2594);
  engine_38->ice_in.cands[D.45544_163][cid_120].transport = D.45572_166;
  D.45544_167 = engine_38->ice_in.cand_idx;
  D.45573_168 = fields[3];
  # DEBUG __nptr => D.45573_168
  D.47845_647 = strtol (D.45573_168, 0B, 10);
  D.45575_170 = (uint32_t) D.47845_647;
  engine_38->ice_in.cands[D.45544_167][cid_120].priority = D.45575_170;
  D.45544_171 = engine_38->ice_in.cand_idx;
  D.45467_172 = smh_34(D)->session;
  D.45551_173 = fields[4];
  D.45576_174 = switch_core_perform_session_strdup (D.45467_172, D.45551_173, "src/switch_core_media.c", &__func__, 2596);
  engine_38->ice_in.cands[D.45544_171][cid_120].con_addr = D.45576_174;
  D.45544_175 = engine_38->ice_in.cand_idx;
  D.45552_176 = fields[5];
  # DEBUG __nptr => D.45552_176
  D.47848_648 = strtol (D.45552_176, 0B, 10);
  D.45578_178 = (short unsigned int) D.47848_648;
  engine_38->ice_in.cands[D.45544_175][cid_120].con_port = D.45578_178;
  # DEBUG j => 6
  goto <bb 68>;

<bb 59>:
  D.45579_182 = fields[j_10];
  D.45580_183 = strcasecmp (D.45579_182, "typ");
  if (D.45580_183 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.45544_184 = engine_38->ice_in.cand_idx;
  D.45467_185 = smh_34(D)->session;
  D.45583_186 = j_10 + 1;
  D.45584_187 = fields[D.45583_186];
  D.45585_188 = switch_core_perform_session_strdup (D.45467_185, D.45584_187, "src/switch_core_media.c", &__func__, 2604);
  engine_38->ice_in.cands[D.45544_184][cid_120].cand_type = D.45585_188;
  goto <bb 67>;

<bb 61>:
  D.45579_189 = fields[j_10];
  D.45587_190 = strcasecmp (D.45579_189, "raddr");
  if (D.45587_190 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  D.45544_191 = engine_38->ice_in.cand_idx;
  D.45467_192 = smh_34(D)->session;
  D.45583_193 = j_10 + 1;
  D.45584_194 = fields[D.45583_193];
  D.45590_195 = switch_core_perform_session_strdup (D.45467_192, D.45584_194, "src/switch_core_media.c", &__func__, 2606);
  engine_38->ice_in.cands[D.45544_191][cid_120].raddr = D.45590_195;
  goto <bb 67>;

<bb 63>:
  D.45579_196 = fields[j_10];
  D.45592_197 = strcasecmp (D.45579_196, "rport");
  if (D.45592_197 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  D.45544_198 = engine_38->ice_in.cand_idx;
  D.45583_199 = j_10 + 1;
  D.45584_200 = fields[D.45583_199];
  # DEBUG __nptr => D.45584_200
  D.47851_649 = strtol (D.45584_200, 0B, 10);
  D.45596_202 = (short unsigned int) D.47851_649;
  engine_38->ice_in.cands[D.45544_198][cid_120].rport = D.45596_202;
  goto <bb 67>;

<bb 65>:
  D.45579_203 = fields[j_10];
  D.45598_204 = strcasecmp (D.45579_203, "generation");
  if (D.45598_204 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.45544_205 = engine_38->ice_in.cand_idx;
  D.45467_206 = smh_34(D)->session;
  D.45583_207 = j_10 + 1;
  D.45584_208 = fields[D.45583_207];
  D.45601_209 = switch_core_perform_session_strdup (D.45467_206, D.45584_208, "src/switch_core_media.c", &__func__, 2610);
  engine_38->ice_in.cands[D.45544_205][cid_120].generation = D.45601_209;

<bb 67>:
  j_210 = j_10 + 2;
  # DEBUG j => j_210

<bb 68>:
  # j_10 = PHI <6(58), j_210(67)>
  # DEBUG j => j_10
  if (j_10 < argc_116)
    goto <bb 69>;
  else
    goto <bb 70>;

<bb 69>:
  D.45583_180 = j_10 + 1;
  D.45584_181 = fields[D.45583_180];
  if (D.45584_181 != 0B)
    goto <bb 59>;
  else
    goto <bb 70>;

<bb 70>:
  D.45556_211 = engine_38->ice_in.chosen[cid_120];
  if (D.45556_211 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;

<bb 71>:
  D.45556_212 = engine_38->ice_in.chosen[cid_120];
  D.45605_213 = engine_38->ice_in.cands[D.45556_212][cid_120].ready;
  D.45606_214 = D.45605_213 + 1;
  engine_38->ice_in.cands[D.45556_212][cid_120].ready = D.45606_214;

<bb 72>:
  # got_rtcp_mux_7 = PHI <got_rtcp_mux_8(13), got_rtcp_mux_8(15), got_rtcp_mux_8(17), got_rtcp_mux_8(19), got_rtcp_mux_8(29), got_rtcp_mux_8(34), got_rtcp_mux_101(37), got_rtcp_mux_8(38), got_rtcp_mux_8(42), got_rtcp_mux_8(45), got_rtcp_mux_8(71), got_rtcp_mux_8(49), got_rtcp_mux_8(33), got_rtcp_mux_8(35), got_rtcp_mux_8(70)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_7
  attr_216 = attr_1->a_next;
  # DEBUG attr => attr_216

<bb 73>:
  # attr_1 = PHI <attr_417(7), attr_216(72)>
  # got_rtcp_mux_8 = PHI <got_rtcp_mux_672(7), got_rtcp_mux_7(72)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_8
  # DEBUG attr => attr_1
  if (attr_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 74>;

<bb 74>:
  D.45461_217 = engine_38->ice_in.chosen[0];
  if (D.45461_217 == 0)
    goto <bb 76>;
  else
    goto <bb 75>;

<bb 75>:
  D.45464_218 = engine_38->ice_in.chosen[1];
  if (D.45464_218 == 0)
    goto <bb 76>;
  else
    goto <bb 95>;

<bb 76>:
  # i_440 = PHI <0(75), 0(74)>
  goto <bb 92>;

<bb 77>:
  D.45461_223 = engine_38->ice_in.chosen[0];
  if (D.45461_223 == 0)
    goto <bb 78>;
  else
    goto <bb 84>;

<bb 78>:
  D.45611_224 = engine_38->ice_in.cands[i_3][0].component_id;
  if (D.45611_224 == 1)
    goto <bb 79>;
  else
    goto <bb 84>;

<bb 79>:
  D.45614_225 = engine_38->ice_in.cands[i_3][0].rport;
  if (D.45614_225 == 0)
    goto <bb 80>;
  else
    goto <bb 84>;

<bb 80>:
  D.45617_226 = engine_38->ice_in.cands[i_3][0].con_addr;
  D.45618_227 = switch_check_network_list_ip_token (D.45617_226, "localnet.auto", 0B);
  if (D.45618_227 != 0)
    goto <bb 81>;
  else
    goto <bb 84>;

<bb 81>:
  engine_38->ice_in.chosen[0] = i_3;
  D.45461_228 = engine_38->ice_in.chosen[0];
  D.45621_229 = engine_38->ice_in.cands[D.45461_228][0].ready;
  D.45622_230 = D.45621_229 + 1;
  engine_38->ice_in.cands[D.45461_228][0].ready = D.45622_230;
  D.45467_231 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 83>;
  else
    goto <bb 82>;

<bb 82>:

<bb 83>:
  # iftmp.107_15 = PHI <"video"(81), "audio"(82)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45467_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);

<bb 84>:
  D.45464_234 = engine_38->ice_in.chosen[1];
  if (D.45464_234 == 0)
    goto <bb 85>;
  else
    goto <bb 91>;

<bb 85>:
  D.45629_235 = engine_38->ice_in.cands[i_3][1].component_id;
  if (D.45629_235 == 2)
    goto <bb 86>;
  else
    goto <bb 91>;

<bb 86>:
  D.45632_236 = engine_38->ice_in.cands[i_3][1].rport;
  if (D.45632_236 == 0)
    goto <bb 87>;
  else
    goto <bb 91>;

<bb 87>:
  D.45635_237 = engine_38->ice_in.cands[i_3][1].con_addr;
  D.45636_238 = switch_check_network_list_ip_token (D.45635_237, "localnet.auto", 0B);
  if (D.45636_238 != 0)
    goto <bb 88>;
  else
    goto <bb 91>;

<bb 88>:
  engine_38->ice_in.chosen[1] = i_3;
  D.45464_239 = engine_38->ice_in.chosen[1];
  D.45639_240 = engine_38->ice_in.cands[D.45464_239][1].ready;
  D.45640_241 = D.45639_240 + 1;
  engine_38->ice_in.cands[D.45464_239][1].ready = D.45640_241;
  D.45467_242 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 90>;
  else
    goto <bb 89>;

<bb 89>:

<bb 90>:
  # iftmp.108_16 = PHI <"video"(88), "audio"(89)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45467_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);

<bb 91>:
  i_245 = i_3 + 1;
  # DEBUG i => i_245

<bb 92>:
  # i_3 = PHI <i_440(76), i_245(91)>
  # DEBUG i => i_3
  D.45544_220 = engine_38->ice_in.cand_idx;
  if (D.45544_220 >= i_3)
    goto <bb 93>;
  else
    goto <bb 95>;

<bb 93>:
  D.45461_221 = engine_38->ice_in.chosen[0];
  if (D.45461_221 == 0)
    goto <bb 77>;
  else
    goto <bb 94>;

<bb 94>:
  D.45464_222 = engine_38->ice_in.chosen[1];
  if (D.45464_222 == 0)
    goto <bb 77>;
  else
    goto <bb 95>;

<bb 95>:
  D.45461_246 = engine_38->ice_in.chosen[0];
  if (D.45461_246 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;

<bb 96>:
  D.45464_247 = engine_38->ice_in.chosen[1];
  if (D.45464_247 == 0)
    goto <bb 97>;
  else
    goto <bb 114>;

<bb 97>:
  # i_676 = PHI <0(96), 0(95)>
  goto <bb 111>;

<bb 98>:
  D.45461_252 = engine_38->ice_in.chosen[0];
  if (D.45461_252 == 0)
    goto <bb 99>;
  else
    goto <bb 104>;

<bb 99>:
  D.45611_253 = engine_38->ice_in.cands[i_4][0].component_id;
  if (D.45611_253 == 1)
    goto <bb 100>;
  else
    goto <bb 104>;

<bb 100>:
  D.45614_254 = engine_38->ice_in.cands[i_4][0].rport;
  if (D.45614_254 != 0)
    goto <bb 101>;
  else
    goto <bb 104>;

<bb 101>:
  engine_38->ice_in.chosen[0] = i_4;
  D.45461_255 = engine_38->ice_in.chosen[0];
  D.45621_256 = engine_38->ice_in.cands[D.45461_255][0].ready;
  D.45622_257 = D.45621_256 + 1;
  engine_38->ice_in.cands[D.45461_255][0].ready = D.45622_257;
  D.45467_258 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 103>;
  else
    goto <bb 102>;

<bb 102>:

<bb 103>:
  # iftmp.109_17 = PHI <"video"(101), "audio"(102)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45467_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);

<bb 104>:
  D.45464_261 = engine_38->ice_in.chosen[1];
  if (D.45464_261 == 0)
    goto <bb 105>;
  else
    goto <bb 110>;

<bb 105>:
  D.45629_262 = engine_38->ice_in.cands[i_4][1].component_id;
  if (D.45629_262 == 2)
    goto <bb 106>;
  else
    goto <bb 110>;

<bb 106>:
  D.45632_263 = engine_38->ice_in.cands[i_4][1].rport;
  if (D.45632_263 != 0)
    goto <bb 107>;
  else
    goto <bb 110>;

<bb 107>:
  engine_38->ice_in.chosen[1] = i_4;
  D.45464_264 = engine_38->ice_in.chosen[1];
  D.45639_265 = engine_38->ice_in.cands[D.45464_264][1].ready;
  D.45640_266 = D.45639_265 + 1;
  engine_38->ice_in.cands[D.45464_264][1].ready = D.45640_266;
  D.45467_267 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 109>;
  else
    goto <bb 108>;

<bb 108>:

<bb 109>:
  # iftmp.110_18 = PHI <"video"(107), "audio"(108)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45467_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);

<bb 110>:
  i_270 = i_4 + 1;
  # DEBUG i => i_270

<bb 111>:
  # i_4 = PHI <i_676(97), i_270(110)>
  # DEBUG i => i_4
  D.45544_249 = engine_38->ice_in.cand_idx;
  if (D.45544_249 >= i_4)
    goto <bb 112>;
  else
    goto <bb 114>;

<bb 112>:
  D.45461_250 = engine_38->ice_in.chosen[0];
  if (D.45461_250 == 0)
    goto <bb 98>;
  else
    goto <bb 113>;

<bb 113>:
  D.45464_251 = engine_38->ice_in.chosen[1];
  if (D.45464_251 == 0)
    goto <bb 98>;
  else
    goto <bb 114>;

<bb 114>:
  D.45461_271 = engine_38->ice_in.chosen[0];
  if (D.45461_271 != 0)
    goto <bb 115>;
  else
    goto <bb 119>;

<bb 115>:
  D.45464_272 = engine_38->ice_in.chosen[1];
  D.45673_273 = D.45464_272 == 0;
  D.45674_274 = got_rtcp_mux_8 != 0;
  D.45675_275 = D.45673_273 && D.45674_274;
  if (D.45675_275 != 0)
    goto <bb 116>;
  else
    goto <bb 119>;

<bb 116>:
  D.45461_276 = engine_38->ice_in.chosen[0];
  engine_38->ice_in.chosen[1] = D.45461_276;
  D.45678_277 = &engine_38->ice_in.cands[0][0];
  D.45679_278 = (void * restrict) D.45678_277;
  D.45464_279 = engine_38->ice_in.chosen[1];
  D.45680_280 = (unsigned int) D.45464_279;
  D.45681_281 = D.45680_280 * 88;
  D.45682_282 = D.45681_281 + 44;
  D.45683_283 = D.45679_278 + D.45682_282;
  D.45678_284 = &engine_38->ice_in.cands[0][0];
  D.45684_285 = (const void * restrict) D.45678_284;
  D.45461_286 = engine_38->ice_in.chosen[0];
  D.45685_287 = (unsigned int) D.45461_286;
  D.45686_288 = D.45685_287 * 88;
  D.45687_289 = D.45684_285 + D.45686_288;
  memcpy (D.45683_283, D.45687_289, 44);
  D.45464_290 = engine_38->ice_in.chosen[1];
  D.45639_291 = engine_38->ice_in.cands[D.45464_290][1].ready;
  D.45640_292 = D.45639_291 + 1;
  engine_38->ice_in.cands[D.45464_290][1].ready = D.45640_292;
  D.45467_293 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 118>;
  else
    goto <bb 117>;

<bb 117>:

<bb 118>:
  # iftmp.111_19 = PHI <"video"(116), "audio"(117)>
  D.45464_296 = engine_38->ice_in.chosen[1];
  D.45692_297 = engine_38->ice_in.cands[D.45464_296][1].con_addr;
  D.45464_298 = engine_38->ice_in.chosen[1];
  D.45693_299 = engine_38->ice_in.cands[D.45464_298][1].con_port;
  D.45694_300 = (int) D.45693_299;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45467_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45692_297, D.45694_300);

<bb 119>:
  D.45461_301 = engine_38->ice_in.chosen[0];
  if (D.45461_301 == 0)
    goto <bb 121>;
  else
    goto <bb 120>;

<bb 120>:
  D.45464_302 = engine_38->ice_in.chosen[1];
  if (D.45464_302 == 0)
    goto <bb 121>;
  else
    goto <bb 134>;

<bb 121>:
  # i_487 = PHI <0(120), 0(119)>
  goto <bb 133>;

<bb 122>:
  D.45461_307 = engine_38->ice_in.chosen[0];
  if (D.45461_307 == 0)
    goto <bb 123>;
  else
    goto <bb 127>;

<bb 123>:
  D.45611_308 = engine_38->ice_in.cands[i_5][0].component_id;
  if (D.45611_308 == 1)
    goto <bb 124>;
  else
    goto <bb 127>;

<bb 124>:
  engine_38->ice_in.chosen[0] = i_5;
  D.45461_309 = engine_38->ice_in.chosen[0];
  D.45621_310 = engine_38->ice_in.cands[D.45461_309][0].ready;
  D.45622_311 = D.45621_310 + 1;
  engine_38->ice_in.cands[D.45461_309][0].ready = D.45622_311;
  D.45467_312 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 126>;
  else
    goto <bb 125>;

<bb 125>:

<bb 126>:
  # iftmp.112_20 = PHI <"video"(124), "audio"(125)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45467_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);

<bb 127>:
  D.45464_315 = engine_38->ice_in.chosen[1];
  if (D.45464_315 == 0)
    goto <bb 128>;
  else
    goto <bb 132>;

<bb 128>:
  D.45629_316 = engine_38->ice_in.cands[i_5][1].component_id;
  if (D.45629_316 == 2)
    goto <bb 129>;
  else
    goto <bb 132>;

<bb 129>:
  engine_38->ice_in.chosen[1] = i_5;
  D.45464_317 = engine_38->ice_in.chosen[1];
  D.45639_318 = engine_38->ice_in.cands[D.45464_317][1].ready;
  D.45640_319 = D.45639_318 + 1;
  engine_38->ice_in.cands[D.45464_317][1].ready = D.45640_319;
  D.45467_320 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 131>;
  else
    goto <bb 130>;

<bb 130>:

<bb 131>:
  # iftmp.113_21 = PHI <"video"(129), "audio"(130)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45467_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);

<bb 132>:
  i_323 = i_5 + 1;
  # DEBUG i => i_323

<bb 133>:
  # i_5 = PHI <i_487(121), i_323(132)>
  # DEBUG i => i_5
  D.45544_304 = engine_38->ice_in.cand_idx;
  if (D.45544_304 >= i_5)
    goto <bb 135>;
  else
    goto <bb 134>;

<bb 134>:
  # i_513 = PHI <0(133), 0(136), 0(120)>
  goto <bb 148>;

<bb 135>:
  D.45461_305 = engine_38->ice_in.chosen[0];
  if (D.45461_305 == 0)
    goto <bb 122>;
  else
    goto <bb 136>;

<bb 136>:
  D.45464_306 = engine_38->ice_in.chosen[1];
  if (D.45464_306 == 0)
    goto <bb 122>;
  else
    goto <bb 134>;

<bb 137>:
  D.45715_325 = engine_38->ice_in.chosen[i_6];
  D.45716_326 = engine_38->ice_in.cands[D.45715_325][i_6].ready;
  if (D.45716_326 != 0)
    goto <bb 138>;
  else
    goto <bb 147>;

<bb 138>:
  D.45721_327 = engine_38->ice_in.ufrag;
  # DEBUG s => D.45721_327
  if (D.45721_327 == 0B)
    goto <bb 141>;
  else
    goto <bb 139>;

<bb 139>:
  D.47855_650 = MEM[(const char *)D.45721_327];
  if (D.47855_650 == 0)
    goto <bb 141>;
  else
    goto <bb 140>;

<bb 140>:

<bb 141>:
  # D.47854_651 = PHI <1(138), 1(139), 0(140)>
  if (D.47854_651 != 0)
    goto <bb 146>;
  else
    goto <bb 142>;

<bb 142>:
  D.45724_329 = engine_38->ice_in.pwd;
  # DEBUG s => D.45724_329
  if (D.45724_329 == 0B)
    goto <bb 145>;
  else
    goto <bb 143>;

<bb 143>:
  D.47859_652 = MEM[(const char *)D.45724_329];
  if (D.47859_652 == 0)
    goto <bb 145>;
  else
    goto <bb 144>;

<bb 144>:

<bb 145>:
  # D.47858_653 = PHI <1(142), 1(143), 0(144)>
  if (D.47858_653 != 0)
    goto <bb 146>;
  else
    goto <bb 147>;

<bb 146>:
  D.45715_331 = engine_38->ice_in.chosen[i_6];
  engine_38->ice_in.cands[D.45715_331][i_6].ready = 0;

<bb 147>:
  i_332 = i_6 + 1;
  # DEBUG i => i_332

<bb 148>:
  # i_6 = PHI <i_513(134), i_332(147)>
  # DEBUG i => i_6
  if (i_6 <= 1)
    goto <bb 137>;
  else
    goto <bb 149>;

<bb 149>:
  D.45461_333 = engine_38->ice_in.chosen[0];
  D.45726_334 = engine_38->ice_in.cands[D.45461_333][0].con_addr;
  if (D.45726_334 != 0B)
    goto <bb 150>;
  else
    goto <bb 156>;

<bb 150>:
  D.45461_335 = engine_38->ice_in.chosen[0];
  D.45729_336 = engine_38->ice_in.cands[D.45461_335][0].con_port;
  if (D.45729_336 != 0)
    goto <bb 151>;
  else
    goto <bb 156>;

<bb 151>:
  tmp = "";
  D.45527_337 = engine_38->cur_payload_map;
  D.45467_338 = smh_34(D)->session;
  D.45461_339 = engine_38->ice_in.chosen[0];
  D.45726_340 = engine_38->ice_in.cands[D.45461_339][0].con_addr;
  D.45732_341 = switch_core_perform_session_strdup (D.45467_338, D.45726_340, "src/switch_core_media.c", &__func__, 2709);
  D.45527_337->remote_sdp_ip = D.45732_341;
  D.45467_342 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 153>;
  else
    goto <bb 152>;

<bb 152>:

<bb 153>:
  # iftmp.114_22 = PHI <"video"(151), "audio"(152)>
  D.45461_345 = engine_38->ice_in.chosen[0];
  D.45726_346 = engine_38->ice_in.cands[D.45461_345][0].con_addr;
  D.45461_347 = engine_38->ice_in.chosen[0];
  D.45729_348 = engine_38->ice_in.cands[D.45461_347][0].con_port;
  D.45737_349 = (int) D.45729_348;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45467_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45726_346, D.45737_349);
  D.45461_350 = engine_38->ice_in.chosen[0];
  D.45621_351 = engine_38->ice_in.cands[D.45461_350][0].ready;
  D.45622_352 = D.45621_351 + 1;
  engine_38->ice_in.cands[D.45461_350][0].ready = D.45622_352;
  D.45461_353 = engine_38->ice_in.chosen[0];
  D.45729_354 = engine_38->ice_in.cands[D.45461_353][0].con_port;
  engine_38->remote_rtp_ice_port = D.45729_354;
  D.45467_355 = smh_34(D)->session;
  D.45461_356 = engine_38->ice_in.chosen[0];
  D.45726_357 = engine_38->ice_in.cands[D.45461_356][0].con_addr;
  D.45738_358 = switch_core_perform_session_strdup (D.45467_355, D.45726_357, "src/switch_core_media.c", &__func__, 2716);
  engine_38->remote_rtp_ice_addr = D.45738_358;
  D.45527_359 = engine_38->cur_payload_map;
  D.45467_360 = smh_34(D)->session;
  D.45461_361 = engine_38->ice_in.chosen[0];
  D.45726_362 = engine_38->ice_in.cands[D.45461_361][0].con_addr;
  D.45739_363 = switch_core_perform_session_strdup (D.45467_360, D.45726_362, "src/switch_core_media.c", &__func__, 2718);
  D.45527_359->remote_sdp_ip = D.45739_363;
  D.45527_364 = engine_38->cur_payload_map;
  D.45461_365 = engine_38->ice_in.chosen[0];
  D.45729_366 = engine_38->ice_in.cands[D.45461_365][0].con_port;
  D.45527_364->remote_sdp_port = D.45729_366;
  D.45740_367 = engine_38->remote_rtcp_port;
  if (D.45740_367 != 0)
    goto <bb 154>;
  else
    goto <bb 155>;

<bb 154>:
  D.45527_368 = engine_38->cur_payload_map;
  D.45528_369 = D.45527_368->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45528_369;

<bb 155>:
  D.45527_370 = engine_38->cur_payload_map;
  D.45528_371 = D.45527_370->remote_sdp_port;
  D.45743_372 = (int) D.45528_371;
  switch_snprintf (&tmp, 80, "%d", D.45743_372);
  D.45467_373 = smh_34(D)->session;
  D.45468_374 = D.45467_373->channel;
  D.45527_375 = engine_38->cur_payload_map;
  D.45744_376 = D.45527_375->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.45468_374, "remote_media_ip", D.45744_376, 1);
  D.45467_377 = smh_34(D)->session;
  D.45468_378 = D.45467_377->channel;
  switch_channel_set_variable_var_check (D.45468_378, "remote_media_port", &tmp, 1);

<bb 156>:
  D.45464_379 = engine_38->ice_in.chosen[1];
  D.45693_380 = engine_38->ice_in.cands[D.45464_379][1].con_port;
  if (D.45693_380 != 0)
    goto <bb 157>;
  else
    goto <bb 160>;

<bb 157>:
  D.45467_381 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 159>;
  else
    goto <bb 158>;

<bb 158>:

<bb 159>:
  # iftmp.115_23 = PHI <"video"(157), "audio"(158)>
  D.45464_384 = engine_38->ice_in.chosen[1];
  D.45692_385 = engine_38->ice_in.cands[D.45464_384][1].con_addr;
  D.45464_386 = engine_38->ice_in.chosen[1];
  D.45693_387 = engine_38->ice_in.cands[D.45464_386][1].con_port;
  D.45694_388 = (int) D.45693_387;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45467_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45692_385, D.45694_388);
  D.45464_389 = engine_38->ice_in.chosen[1];
  D.45693_390 = engine_38->ice_in.cands[D.45464_389][1].con_port;
  engine_38->remote_rtcp_ice_port = D.45693_390;
  D.45467_391 = smh_34(D)->session;
  D.45464_392 = engine_38->ice_in.chosen[1];
  D.45692_393 = engine_38->ice_in.cands[D.45464_392][1].con_addr;
  D.45751_394 = switch_core_perform_session_strdup (D.45467_391, D.45692_393, "src/switch_core_media.c", &__func__, 2734);
  engine_38->remote_rtcp_ice_addr = D.45751_394;
  D.45464_395 = engine_38->ice_in.chosen[1];
  D.45693_396 = engine_38->ice_in.cands[D.45464_395][1].con_port;
  engine_38->remote_rtcp_port = D.45693_396;

<bb 160>:
  D.45752_397 = m_46(D) != 0B;
  D.45753_398 = got_rtcp_mux_8 == 0;
  D.45754_399 = D.45752_397 && D.45753_398;
  if (D.45754_399 != 0)
    goto <bb 161>;
  else
    goto <bb 162>;

<bb 161>:
  engine_38->rtcp_mux = -1;

<bb 162>:
  D.45467_400 = smh_34(D)->session;
  D.45468_401 = D.45467_400->channel;
  D.45757_402 = switch_channel_test_flag (D.45468_401, 103);
  if (D.45757_402 != 0)
    goto <bb 163>;
  else
    goto <bb 203>;

<bb 163>:
  D.45519_403 = engine_38->rtp_session;
  D.45760_404 = switch_rtp_ready (D.45519_403);
  if (D.45760_404 != 0)
    goto <bb 164>;
  else
    goto <bb 170>;

<bb 164>:
  D.45461_405 = engine_38->ice_in.chosen[0];
  D.45621_406 = engine_38->ice_in.cands[D.45461_405][0].ready;
  if (D.45621_406 != 0)
    goto <bb 165>;
  else
    goto <bb 170>;

<bb 165>:
  D.45467_407 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 167>;
  else
    goto <bb 166>;

<bb 166>:

<bb 167>:
  # iftmp.116_24 = PHI <"video"(165), "audio"(166)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45467_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);
  D.45519_410 = engine_38->rtp_session;
  D.45721_411 = engine_38->ice_in.ufrag;
  D.45769_412 = engine_38->ice_out.ufrag;
  D.45770_413 = engine_38->ice_out.pwd;
  D.45724_414 = engine_38->ice_in.pwd;
  D.45467_415 = smh_34(D)->session;
  D.45772_416 = switch_ice_direction (D.45467_415);
  if (D.45772_416 == 1)
    goto <bb 169>;
  else
    goto <bb 168>;

<bb 168>:

<bb 169>:
  # iftmp.117_25 = PHI <2(167), 6(168)>
  D.45776_419 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_410, D.45721_411, D.45769_412, D.45770_413, D.45724_414, 0, iftmp.117_25, D.45776_419);

<bb 170>:
  D.45519_420 = engine_38->rtp_session;
  if (D.45519_420 != 0B)
    goto <bb 171>;
  else
    goto <bb 191>;

<bb 171>:
  D.45467_421 = smh_34(D)->session;
  D.45468_422 = D.45467_421->channel;
  if (type_36(D) == 1)
    goto <bb 173>;
  else
    goto <bb 172>;

<bb 172>:

<bb 173>:
  # iftmp.118_26 = PHI <"rtcp_video_interval_msec"(171), "rtcp_audio_interval_msec"(172)>
  val_425 = switch_channel_get_variable_dup (D.45468_422, iftmp.118_26, 1, -1);
  # DEBUG val => val_425
  if (val_425 != 0B)
    goto <bb 178>;
  else
    goto <bb 174>;

<bb 174>:
  if (type_36(D) == 1)
    goto <bb 175>;
  else
    goto <bb 176>;

<bb 175>:
  D.45789_426 = smh_34(D)->mparams;
  val_427 = D.45789_426->rtcp_video_interval_msec;
  goto <bb 177>;

<bb 176>:
  D.45789_428 = smh_34(D)->mparams;
  val_429 = D.45789_428->rtcp_audio_interval_msec;

<bb 177>:
  # val_27 = PHI <val_427(175), val_429(176)>
  # DEBUG val => val_27
  if (val_27 != 0B)
    goto <bb 178>;
  else
    goto <bb 191>;

<bb 178>:
  # val_9 = PHI <val_425(173), val_27(177)>
  # DEBUG val => val_9
  D.45467_431 = smh_34(D)->session;
  D.45468_432 = D.45467_431->channel;
  if (type_36(D) == 1)
    goto <bb 180>;
  else
    goto <bb 179>;

<bb 179>:

<bb 180>:
  # iftmp.120_28 = PHI <"rtp_remote_video_rtcp_port"(178), "rtp_remote_audio_rtcp_port"(179)>
  rport_435 = switch_channel_get_variable_dup (D.45468_432, iftmp.120_28, 1, -1);
  # DEBUG rport => rport_435
  remote_rtcp_port_436 = engine_38->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_436
  D.45795_437 = remote_rtcp_port_436 == 0;
  D.45796_438 = rport_435 != 0B;
  D.45797_439 = D.45795_437 && D.45796_438;
  if (D.45797_439 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;

<bb 181>:
  # DEBUG __nptr => rport_435
  D.47862_654 = strtol (rport_435, 0B, 10);
  remote_rtcp_port_441 = (switch_port_t) D.47862_654;
  # DEBUG remote_rtcp_port => remote_rtcp_port_441

<bb 182>:
  # remote_rtcp_port_11 = PHI <remote_rtcp_port_436(180), remote_rtcp_port_441(181)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_11
  D.45801_442 = strcasecmp (val_9, "passthru");
  if (D.45801_442 == 0)
    goto <bb 183>;
  else
    goto <bb 186>;

<bb 183>:
  D.45467_443 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 185>;
  else
    goto <bb 184>;

<bb 184>:

<bb 185>:
  # iftmp.121_29 = PHI <"video"(183), "audio"(184)>
  D.45808_446 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45467_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45808_446);
  D.45519_447 = engine_38->rtp_session;
  D.45809_448 = engine_38->rtcp_mux;
  D.45810_449 = D.45809_448 > 0;
  switch_rtp_activate_rtcp (D.45519_447, -1, remote_rtcp_port_11, D.45810_449);
  goto <bb 191>;

<bb 186>:
  # DEBUG __nptr => val_9
  interval_655 = strtol (val_9, 0B, 10);
  # DEBUG interval => NULL
  interval.122_451 = (unsigned int) interval_655;
  D.45813_452 = interval.122_451 + 4294967196;
  if (D.45813_452 > 499900)
    goto <bb 187>;
  else
    goto <bb 188>;

<bb 187>:
  D.45467_453 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45467_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);
  # DEBUG interval => 10000

<bb 188>:
  # interval_12 = PHI <interval_655(186), 10000(187)>
  # DEBUG interval => interval_12
  D.45467_455 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 190>;
  else
    goto <bb 189>;

<bb 189>:

<bb 190>:
  # iftmp.123_30 = PHI <"video"(188), "audio"(189)>
  D.45808_458 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45467_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45808_458);
  D.45519_459 = engine_38->rtp_session;
  D.45809_460 = engine_38->rtcp_mux;
  D.45810_461 = D.45809_460 > 0;
  switch_rtp_activate_rtcp (D.45519_459, interval_12, remote_rtcp_port_11, D.45810_461);

<bb 191>:
  D.45464_462 = engine_38->ice_in.chosen[1];
  D.45639_463 = engine_38->ice_in.cands[D.45464_462][1].ready;
  if (D.45639_463 != 0)
    goto <bb 192>;
  else
    goto <bb 203>;

<bb 192>:
  D.45809_464 = engine_38->rtcp_mux;
  if (D.45809_464 > 0)
    goto <bb 193>;
  else
    goto <bb 198>;

<bb 193>:
  D.45464_465 = engine_38->ice_in.chosen[1];
  D.45692_466 = engine_38->ice_in.cands[D.45464_465][1].con_addr;
  D.45461_467 = engine_38->ice_in.chosen[0];
  D.45726_468 = engine_38->ice_in.cands[D.45461_467][0].con_addr;
  D.38904_469 = __builtin_strcmp (D.45692_466, D.45726_468);
  if (D.38904_469 == 0)
    goto <bb 194>;
  else
    goto <bb 198>;

<bb 194>:
  D.45464_470 = engine_38->ice_in.chosen[1];
  D.45693_471 = engine_38->ice_in.cands[D.45464_470][1].con_port;
  D.45461_472 = engine_38->ice_in.chosen[0];
  D.45729_473 = engine_38->ice_in.cands[D.45461_472][0].con_port;
  if (D.45693_471 == D.45729_473)
    goto <bb 195>;
  else
    goto <bb 198>;

<bb 195>:
  D.45467_474 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 197>;
  else
    goto <bb 196>;

<bb 196>:

<bb 197>:
  # iftmp.124_31 = PHI <"video"(195), "audio"(196)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45467_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);
  goto <bb 203>;

<bb 198>:
  D.45467_477 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 200>;
  else
    goto <bb 199>;

<bb 199>:

<bb 200>:
  # iftmp.125_32 = PHI <"video"(198), "audio"(199)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45467_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);
  D.45519_480 = engine_38->rtp_session;
  D.45721_481 = engine_38->ice_in.ufrag;
  D.45769_482 = engine_38->ice_out.ufrag;
  D.45770_483 = engine_38->ice_out.pwd;
  D.45724_484 = engine_38->ice_in.pwd;
  D.45467_485 = smh_34(D)->session;
  D.45836_486 = switch_ice_direction (D.45467_485);
  if (D.45836_486 == 1)
    goto <bb 202>;
  else
    goto <bb 201>;

<bb 201>:

<bb 202>:
  # iftmp.126_33 = PHI <2(200), 6(201)>
  D.45776_489 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45519_480, D.45721_481, D.45769_482, D.45770_483, D.45724_484, 1, iftmp.126_33, D.45776_489);

<bb 203>:
  return;

}



;; Function switch_core_session_set_ice (switch_core_session_set_ice)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2840, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: switch_channel_set_flag_value (D.45845_3, 110, 1);

Marking useful stmt: switch_channel_set_flag_value (D.45845_4, 106, 1);

Marking useful stmt: switch_channel_set_flag_value (D.45845_5, 108, 1);

Marking useful stmt: D.45846_6->rtcp_audio_interval_msec = "10000";

Marking useful stmt: D.45846_7->rtcp_video_interval_msec = "10000";

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: D.45846_7->rtcp_video_interval_msec = "10000";

Marking useful stmt: if (smh_2 == 0B)

marking necessary through D.45846_7 stmt D.45846_7 = smh_2->mparams;
processing: D.45846_7 = smh_2->mparams;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (smh_2 == 0B)

processing: D.45846_6->rtcp_audio_interval_msec = "10000";

marking necessary through D.45846_6 stmt D.45846_6 = smh_2->mparams;
processing: D.45846_6 = smh_2->mparams;

processing: switch_channel_set_flag_value (D.45845_5, 108, 1);

marking necessary through D.45845_5 stmt D.45845_5 = session_1(D)->channel;
processing: D.45845_5 = session_1(D)->channel;

processing: switch_channel_set_flag_value (D.45845_4, 106, 1);

marking necessary through D.45845_4 stmt D.45845_4 = session_1(D)->channel;
processing: D.45845_4 = session_1(D)->channel;

processing: switch_channel_set_flag_value (D.45845_3, 110, 1);

marking necessary through D.45845_3 stmt D.45845_3 = session_1(D)->channel;
processing: D.45845_3 = session_1(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 2840, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 16 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_session_set_ice (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_session_set_ice";
  struct switch_media_handle_t * smh;
  struct switch_core_media_params_t * D.45846;
  struct switch_channel_t * D.45845;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2840, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.45845_3 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_3, 110, 1);
  D.45845_4 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_4, 106, 1);
  D.45845_5 = session_1(D)->channel;
  switch_channel_set_flag_value (D.45845_5, 108, 1);
  D.45846_6 = smh_2->mparams;
  D.45846_6->rtcp_audio_interval_msec = "10000";
  D.45846_7 = smh_2->mparams;
  D.45846_7->rtcp_video_interval_msec = "10000";

<bb 6>:
  return;

}



;; Function switch_core_media_toggle_hold (switch_core_media_toggle_hold)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 65 66 67 68
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 68 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 34 }
;; 8 succs { 9 34 }
;; 9 succs { 10 65 }
;; 10 succs { 12 11 }
;; 11 succs { 12 15 }
;; 12 succs { 14 13 }
;; 13 succs { 14 15 }
;; 14 succs { 65 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 25 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 65 }
;; 28 succs { 29 65 }
;; 29 succs { 31 30 }
;; 30 succs { 31 65 }
;; 31 succs { 32 33 }
;; 32 succs { 65 }
;; 33 succs { 65 }
;; 34 succs { 35 40 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 40 }
;; 38 succs { 40 }
;; 40 succs { 41 65 }
;; 41 succs { 42 45 }
;; 42 succs { 44 43 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 48 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 54 }
;; 49 succs { 50 51 }
;; 50 succs { 54 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 }
;; 54 succs { 55 62 }
;; 55 succs { 57 56 }
;; 56 succs { 57 62 }
;; 57 succs { 58 62 }
;; 58 succs { 59 60 }
;; 59 succs { 60 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 65 }
;; 63 succs { 65 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 1 }
Marking useful stmt: # DEBUG changed => 0

Marking useful stmt: # DEBUG b_channel => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 3872, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_10

Marking useful stmt: # DEBUG D#9 => &smh_10->engines

Marking useful stmt: # DEBUG a_engine => D#9

Marking useful stmt: # DEBUG D#10 => &smh_10->engines[1]

Marking useful stmt: # DEBUG v_engine => D#10

Marking useful stmt: D.44360_14 = switch_core_session_perform_get_partner (session_9(D), &b_session, "src/switch_core_media.c", &__func__, 3882);

Marking useful stmt: b_channel_16 = switch_core_session_get_channel (b_session.86_15);

Marking useful stmt: # DEBUG b_channel => b_channel_16

Marking useful stmt: # DEBUG b_channel => b_channel_3

Marking useful stmt: D.44368_19 = switch_channel_test_flag (D.44367_18, 1);

Marking useful stmt: D.44370_21 = switch_channel_test_flag (D.44367_20, 96);

Marking useful stmt: # DEBUG msg => "hold"

Marking useful stmt: D.44376_24 = switch_channel_test_flag (D.44367_23, 94);

Marking useful stmt: D.44378_26 = switch_channel_test_flag (D.44367_25, 95);

Marking useful stmt: D.44380_27 = switch_channel_test_flag (b_channel_3, 25);

Marking useful stmt: switch_channel_mark_hold (D.44367_28, sendonly.87_29);

Marking useful stmt: switch_channel_set_flag_value (D.44367_30, 96, 1);

Marking useful stmt: # DEBUG changed => 0

Marking useful stmt: info_33 = switch_channel_get_variable_dup (D.44367_32, "presence_call_info", 1, -1);

Marking useful stmt: # DEBUG info => info_33

Marking useful stmt: D.44384_34 = switch_stristr ("private", info_33);

Marking useful stmt: # DEBUG msg => "hold-private"

Marking useful stmt: # DEBUG msg => msg_5

Marking useful stmt: switch_rtp_set_flag (D.44387_37, 35);

Marking useful stmt: switch_rtp_set_flag (D.44390_39, 35);

Marking useful stmt: switch_channel_set_flag_value (D.44367_40, 96, 1);

Marking useful stmt: switch_channel_mark_hold (D.44367_41, 1);

Marking useful stmt: switch_channel_perform_presence (D.44367_42, "unknown", msg_5, 0B, "src/switch_core_media.c", &__func__, 3918);

Marking useful stmt: # DEBUG changed => 1

Marking useful stmt: switch_rtp_set_max_missed_packets (D.44387_46, D.44393_47);

Marking useful stmt: stream_49 = switch_channel_get_hold_music (D.44367_48);

Marking useful stmt: # DEBUG stream => stream_49

Marking useful stmt: # DEBUG stream => "local_stream://moh"

Marking useful stmt: # DEBUG stream => stream_4

Marking useful stmt: D.44408_52 = switch_channel_test_flag (b_channel_3, 25);

Marking useful stmt: switch_channel_set_flag_value (D.44367_54, 16, 1);

Marking useful stmt: switch_channel_set_flag_value (D.44367_55, 10, 1);

Marking useful stmt: D.44412_57 = switch_core_session_get_uuid (b_session.86_56);

Marking useful stmt: switch_ivr_hold_uuid (D.44412_57, 0B, 0);

Marking useful stmt: D.44414_59 = switch_core_session_get_uuid (b_session.86_58);

Marking useful stmt: switch_ivr_broadcast (D.44414_59, stream_4, 274);

Marking useful stmt: switch_sleep (250000);

Marking useful stmt: D.44415_61 = switch_channel_test_flag (D.44367_60, 97);

Marking useful stmt: switch_channel_set_flag_value (D.44367_62, 96, 1);

Marking useful stmt: switch_channel_mark_hold (D.44367_63, 1);

Marking useful stmt: switch_rtp_set_flag (D.44387_65, 35);

Marking useful stmt: switch_rtp_set_flag (D.44390_67, 35);

Marking useful stmt: # DEBUG changed => changed_1

Marking useful stmt: switch_channel_clear_flag (D.44367_69, 97);

Marking useful stmt: D.44422_71 = switch_channel_test_flag (D.44367_70, 96);

Marking useful stmt: switch_sleep (250000);

Marking useful stmt: D.44429_73 = switch_channel_test_flag (D.44367_72, 120);

Marking useful stmt: D.44431_74 = switch_channel_test_flag (b_channel_3, 120);

Marking useful stmt: D.44432_75 = switch_core_session_get_uuid (session_9(D));

Marking useful stmt: switch_ivr_nomedia (D.44432_75, 1);

Marking useful stmt: switch_rtp_reset_media_timer (D.44387_78);

Marking useful stmt: switch_rtp_set_max_missed_packets (D.44387_79, D.44433_80);

Marking useful stmt: D.44440_82 = switch_channel_test_flag (D.44367_81, 10);

Marking useful stmt: switch_ivr_unhold (b_session.86_83);

Marking useful stmt: switch_channel_clear_flag (D.44367_84, 16);

Marking useful stmt: switch_channel_clear_flag (D.44367_85, 10);

Marking useful stmt: D.44444_86 = switch_channel_test_flag (b_channel_3, 21);

Marking useful stmt: switch_channel_set_flag_value (b_channel_3, 28, 1);

Marking useful stmt: switch_channel_set_flag_value (b_channel_3, 20, 1);

Marking useful stmt: switch_channel_wait_for_flag (b_channel_3, 21, 0, 5000, 0B);

Marking useful stmt: D.44449_87 = switch_media_handle_test_media_flag (smh_10, 10);

Marking useful stmt: val_89 = switch_channel_get_variable_dup (D.44367_88, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_89

Marking useful stmt: D.44453_90 = switch_true (val_89);

Marking useful stmt: D.44454_92 = switch_channel_test_flag (D.44367_91, 106);

Marking useful stmt: switch_rtp_set_flag (D.44387_94, 7);

Marking useful stmt: switch_rtp_set_flag (D.44390_96, 7);

Marking useful stmt: switch_channel_clear_flag (D.44367_97, 96);

Marking useful stmt: switch_channel_mark_hold (D.44367_98, 0);

Marking useful stmt: switch_channel_perform_presence (D.44367_99, "unknown", "unhold", 0B, "src/switch_core_media.c", &__func__, 4004);

Marking useful stmt: switch_rtp_clear_flag (D.44387_100, 35);

Marking useful stmt: switch_rtp_clear_flag (D.44390_102, 35);

Marking useful stmt: end:

Marking useful stmt: # DEBUG changed => changed_2

Marking useful stmt: switch_core_session_rwunlock (b_session.86_105);

Marking useful stmt: return changed_6;


Processing worklist:
processing: return changed_6;

Marking useful stmt: if (session_9(D) == 0B)

marking necessary through changed_6 stmt changed_6 = PHI <0(4), changed_2(67)>
processing: changed_6 = PHI <0(4), changed_2(67)>

marking necessary through changed_2 stmt changed_2 = PHI <0(14), 1(27), changed_1(40), 1(63), 0(9), 1(33), 1(32), 1(30), 1(28), 1(62)>
Marking useful stmt: if (smh_10 == 0B)

processing: if (smh_10 == 0B)

marking necessary through smh_10 stmt smh_10 = session_9(D)->media_handle;
processing: smh_10 = session_9(D)->media_handle;

marking necessary through .MEM_131 stmt b_session = 0B;
processing: b_session = 0B;

processing: changed_2 = PHI <0(14), 1(27), changed_1(40), 1(63), 0(9), 1(33), 1(32), 1(30), 1(28), 1(62)>

marking necessary through changed_1 stmt changed_1 = PHI <0(34), 1(38), 1(37)>
Marking useful stmt: if (b_channel_3 == 0B)

Marking useful stmt: if (D.44380_27 != 0)

Marking useful stmt: if (D.44378_26 != 0)

Marking useful stmt: if (sendonly_17(D) != 0)

Marking useful stmt: if (D.44368_19 != 0)

Marking useful stmt: if (D.44390_101 != 0B)

Marking useful stmt: if (D.44409_53 == 0)

Marking useful stmt: if (b_channel_3 == 0B)

Marking useful stmt: if (stream_4 != 0B)

Marking useful stmt: if (D.44422_71 != 0)

processing: if (D.44422_71 != 0)

processing: if (stream_4 != 0B)

marking necessary through stream_4 stmt stream_4 = PHI <stream_49(25), "local_stream://moh"(26)>
processing: stream_4 = PHI <stream_49(25), "local_stream://moh"(26)>

Marking useful stmt: if (stream_49 == 0B)

processing: if (stream_49 == 0B)

processing: if (b_channel_3 == 0B)

Marking useful stmt: if (D.44404_51 != 0)

marking necessary through b_channel_3 stmt b_channel_3 = PHI <0B(5), b_channel_16(6)>
processing: b_channel_3 = PHI <0B(5), b_channel_16(6)>

Marking useful stmt: if (D.44360_14 == 0)

processing: if (D.44360_14 == 0)

processing: if (D.44404_51 != 0)

marking necessary through D.44404_51 stmt D.44404_51 = strcasecmp (stream_4, "silence");
processing: D.44404_51 = strcasecmp (stream_4, "silence");

processing: if (D.44409_53 == 0)

Marking useful stmt: if (D.44408_52 == 0)

marking necessary through D.44409_53 stmt D.44409_53 = strcasecmp (stream_4, "indicate_hold");
processing: D.44409_53 = strcasecmp (stream_4, "indicate_hold");

processing: if (D.44408_52 == 0)

processing: if (D.44390_101 != 0B)

marking necessary through D.44390_101 stmt D.44390_101 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_101 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: if (D.44368_19 != 0)

processing: if (sendonly_17(D) != 0)

processing: if (D.44378_26 != 0)

Marking useful stmt: if (D.44376_24 != 0)

processing: if (D.44376_24 != 0)

Marking useful stmt: if (D.44370_21 == 0)

processing: if (D.44370_21 == 0)

processing: if (D.44380_27 != 0)

processing: if (b_channel_3 == 0B)

processing: changed_1 = PHI <0(34), 1(38), 1(37)>

Marking useful stmt: if (D.44390_66 != 0B)

Marking useful stmt: if (D.44415_61 != 0)

processing: if (D.44415_61 != 0)

processing: if (D.44390_66 != 0B)

marking necessary through D.44390_66 stmt D.44390_66 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_66 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: if (session_9(D) == 0B)

processing: switch_core_session_rwunlock (b_session.86_105);

Marking useful stmt: if (b_session.86_104 != 0B)

marking necessary through b_session.86_105 stmt b_session.86_105 = b_session;
processing: b_session.86_105 = b_session;

processing: if (b_session.86_104 != 0B)

marking necessary through b_session.86_104 stmt b_session.86_104 = b_session;
processing: b_session.86_104 = b_session;

processing: switch_rtp_clear_flag (D.44390_102, 35);

marking necessary through D.44390_102 stmt D.44390_102 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_102 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: switch_rtp_clear_flag (D.44387_100, 35);

marking necessary through D.44387_100 stmt D.44387_100 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_100 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: switch_channel_perform_presence (D.44367_99, "unknown", "unhold", 0B, "src/switch_core_media.c", &__func__, 4004);

marking necessary through D.44367_99 stmt D.44367_99 = session_9(D)->channel;
processing: D.44367_99 = session_9(D)->channel;

processing: switch_channel_mark_hold (D.44367_98, 0);

marking necessary through D.44367_98 stmt D.44367_98 = session_9(D)->channel;
processing: D.44367_98 = session_9(D)->channel;

processing: switch_channel_clear_flag (D.44367_97, 96);

marking necessary through D.44367_97 stmt D.44367_97 = session_9(D)->channel;
processing: D.44367_97 = session_9(D)->channel;

processing: switch_rtp_set_flag (D.44390_96, 7);

Marking useful stmt: if (D.44390_95 != 0B)

marking necessary through D.44390_96 stmt D.44390_96 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_96 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: if (D.44390_95 != 0B)

Marking useful stmt: if (D.44454_92 == 0)

marking necessary through D.44390_95 stmt D.44390_95 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_95 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: if (D.44454_92 == 0)

Marking useful stmt: if (val_89 == 0B)

Marking useful stmt: if (D.44453_90 == 0)

processing: if (D.44453_90 == 0)

processing: if (val_89 == 0B)

Marking useful stmt: if (D.44449_87 == 0)

processing: if (D.44449_87 == 0)

processing: switch_rtp_set_flag (D.44387_94, 7);

Marking useful stmt: if (D.44387_93 != 0B)

marking necessary through D.44387_94 stmt D.44387_94 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_94 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44387_93 != 0B)

marking necessary through D.44387_93 stmt D.44387_93 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_93 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: D.44454_92 = switch_channel_test_flag (D.44367_91, 106);

marking necessary through D.44367_91 stmt D.44367_91 = session_9(D)->channel;
processing: D.44367_91 = session_9(D)->channel;

processing: D.44453_90 = switch_true (val_89);

processing: val_89 = switch_channel_get_variable_dup (D.44367_88, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.44367_88 stmt D.44367_88 = session_9(D)->channel;
processing: D.44367_88 = session_9(D)->channel;

processing: D.44449_87 = switch_media_handle_test_media_flag (smh_10, 10);

processing: switch_channel_wait_for_flag (b_channel_3, 21, 0, 5000, 0B);

Marking useful stmt: if (D.44440_82 != 0)

processing: if (D.44440_82 != 0)

Marking useful stmt: if (b_channel_3 != 0B)

processing: if (b_channel_3 != 0B)

processing: switch_channel_set_flag_value (b_channel_3, 20, 1);

Marking useful stmt: if (D.44444_86 != 0)

processing: if (D.44444_86 != 0)

processing: switch_channel_set_flag_value (b_channel_3, 28, 1);

processing: D.44444_86 = switch_channel_test_flag (b_channel_3, 21);

processing: switch_channel_clear_flag (D.44367_85, 10);

marking necessary through D.44367_85 stmt D.44367_85 = session_9(D)->channel;
processing: D.44367_85 = session_9(D)->channel;

processing: switch_channel_clear_flag (D.44367_84, 16);

marking necessary through D.44367_84 stmt D.44367_84 = session_9(D)->channel;
processing: D.44367_84 = session_9(D)->channel;

processing: switch_ivr_unhold (b_session.86_83);

marking necessary through b_session.86_83 stmt b_session.86_83 = b_session;
processing: b_session.86_83 = b_session;

processing: D.44440_82 = switch_channel_test_flag (D.44367_81, 10);

marking necessary through D.44367_81 stmt D.44367_81 = session_9(D)->channel;
processing: D.44367_81 = session_9(D)->channel;

processing: switch_rtp_set_max_missed_packets (D.44387_79, D.44433_80);

Marking useful stmt: if (D.44387_77 != 0B)

marking necessary through D.44387_79 stmt D.44387_79 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
marking necessary through D.44433_80 stmt D.44433_80 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
processing: D.44433_80 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;

processing: D.44387_79 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44387_77 != 0B)

Marking useful stmt: if (D.44433_76 != 0)

marking necessary through D.44387_77 stmt D.44387_77 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_77 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44433_76 != 0)

marking necessary through D.44433_76 stmt D.44433_76 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
processing: D.44433_76 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;

processing: switch_rtp_reset_media_timer (D.44387_78);

marking necessary through D.44387_78 stmt D.44387_78 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_78 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: switch_ivr_nomedia (D.44432_75, 1);

Marking useful stmt: if (D.44429_73 != 0)

Marking useful stmt: if (D.44431_74 != 0)

processing: if (D.44431_74 != 0)

processing: if (D.44429_73 != 0)

Marking useful stmt: if (b_channel_3 != 0B)

processing: if (b_channel_3 != 0B)

processing: D.44432_75 = switch_core_session_get_uuid (session_9(D));

processing: D.44431_74 = switch_channel_test_flag (b_channel_3, 120);

processing: D.44429_73 = switch_channel_test_flag (D.44367_72, 120);

marking necessary through D.44367_72 stmt D.44367_72 = session_9(D)->channel;
processing: D.44367_72 = session_9(D)->channel;

processing: switch_sleep (250000);

processing: D.44422_71 = switch_channel_test_flag (D.44367_70, 96);

marking necessary through D.44367_70 stmt D.44367_70 = session_9(D)->channel;
processing: D.44367_70 = session_9(D)->channel;

processing: switch_channel_clear_flag (D.44367_69, 97);

marking necessary through D.44367_69 stmt D.44367_69 = session_9(D)->channel;
processing: D.44367_69 = session_9(D)->channel;

processing: switch_rtp_set_flag (D.44390_67, 35);

marking necessary through D.44390_67 stmt D.44390_67 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_67 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: switch_rtp_set_flag (D.44387_65, 35);

Marking useful stmt: if (D.44387_64 != 0B)

marking necessary through D.44387_65 stmt D.44387_65 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_65 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44387_64 != 0B)

marking necessary through D.44387_64 stmt D.44387_64 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_64 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: switch_channel_mark_hold (D.44367_63, 1);

marking necessary through D.44367_63 stmt D.44367_63 = session_9(D)->channel;
processing: D.44367_63 = session_9(D)->channel;

processing: switch_channel_set_flag_value (D.44367_62, 96, 1);

marking necessary through D.44367_62 stmt D.44367_62 = session_9(D)->channel;
processing: D.44367_62 = session_9(D)->channel;

processing: D.44415_61 = switch_channel_test_flag (D.44367_60, 97);

marking necessary through D.44367_60 stmt D.44367_60 = session_9(D)->channel;
processing: D.44367_60 = session_9(D)->channel;

processing: switch_sleep (250000);

processing: switch_ivr_broadcast (D.44414_59, stream_4, 274);

processing: D.44414_59 = switch_core_session_get_uuid (b_session.86_58);

marking necessary through b_session.86_58 stmt b_session.86_58 = b_session;
processing: b_session.86_58 = b_session;

processing: switch_ivr_hold_uuid (D.44412_57, 0B, 0);

processing: D.44412_57 = switch_core_session_get_uuid (b_session.86_56);

marking necessary through b_session.86_56 stmt b_session.86_56 = b_session;
processing: b_session.86_56 = b_session;

processing: switch_channel_set_flag_value (D.44367_55, 10, 1);

marking necessary through D.44367_55 stmt D.44367_55 = session_9(D)->channel;
processing: D.44367_55 = session_9(D)->channel;

processing: switch_channel_set_flag_value (D.44367_54, 16, 1);

marking necessary through D.44367_54 stmt D.44367_54 = session_9(D)->channel;
processing: D.44367_54 = session_9(D)->channel;

processing: D.44408_52 = switch_channel_test_flag (b_channel_3, 25);

processing: stream_49 = switch_channel_get_hold_music (D.44367_48);

marking necessary through D.44367_48 stmt D.44367_48 = session_9(D)->channel;
processing: D.44367_48 = session_9(D)->channel;

processing: switch_rtp_set_max_missed_packets (D.44387_46, D.44393_47);

Marking useful stmt: if (D.44387_45 != 0B)

marking necessary through D.44387_46 stmt D.44387_46 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
marking necessary through D.44393_47 stmt D.44393_47 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
processing: D.44393_47 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;

processing: D.44387_46 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44387_45 != 0B)

Marking useful stmt: if (D.44393_44 != 0)

marking necessary through D.44387_45 stmt D.44387_45 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_45 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44393_44 != 0)

marking necessary through D.44393_44 stmt D.44393_44 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
processing: D.44393_44 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;

processing: switch_channel_perform_presence (D.44367_42, "unknown", msg_5, 0B, "src/switch_core_media.c", &__func__, 3918);

marking necessary through D.44367_42 stmt D.44367_42 = session_9(D)->channel;
marking necessary through msg_5 stmt msg_5 = PHI <"hold"(15), "hold"(16), "hold-private"(17)>
processing: msg_5 = PHI <"hold"(15), "hold"(16), "hold-private"(17)>

Marking useful stmt: if (info_33 != 0B)

Marking useful stmt: if (D.44384_34 != 0B)

processing: if (D.44384_34 != 0B)

processing: if (info_33 != 0B)

processing: D.44367_42 = session_9(D)->channel;

processing: switch_channel_mark_hold (D.44367_41, 1);

marking necessary through D.44367_41 stmt D.44367_41 = session_9(D)->channel;
processing: D.44367_41 = session_9(D)->channel;

processing: switch_channel_set_flag_value (D.44367_40, 96, 1);

marking necessary through D.44367_40 stmt D.44367_40 = session_9(D)->channel;
processing: D.44367_40 = session_9(D)->channel;

processing: switch_rtp_set_flag (D.44390_39, 35);

Marking useful stmt: if (D.44390_38 != 0B)

marking necessary through D.44390_39 stmt D.44390_39 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_39 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: if (D.44390_38 != 0B)

marking necessary through D.44390_38 stmt D.44390_38 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
processing: D.44390_38 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;

processing: switch_rtp_set_flag (D.44387_37, 35);

Marking useful stmt: if (D.44387_36 != 0B)

marking necessary through D.44387_37 stmt D.44387_37 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_37 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: if (D.44387_36 != 0B)

marking necessary through D.44387_36 stmt D.44387_36 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
processing: D.44387_36 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;

processing: D.44384_34 = switch_stristr ("private", info_33);

processing: info_33 = switch_channel_get_variable_dup (D.44367_32, "presence_call_info", 1, -1);

marking necessary through D.44367_32 stmt D.44367_32 = session_9(D)->channel;
processing: D.44367_32 = session_9(D)->channel;

processing: switch_channel_set_flag_value (D.44367_30, 96, 1);

marking necessary through D.44367_30 stmt D.44367_30 = session_9(D)->channel;
processing: D.44367_30 = session_9(D)->channel;

processing: switch_channel_mark_hold (D.44367_28, sendonly.87_29);

marking necessary through D.44367_28 stmt D.44367_28 = session_9(D)->channel;
marking necessary through sendonly.87_29 stmt sendonly.87_29 = (switch_bool_t) sendonly_17(D);
processing: sendonly.87_29 = (switch_bool_t) sendonly_17(D);

processing: D.44367_28 = session_9(D)->channel;

processing: D.44380_27 = switch_channel_test_flag (b_channel_3, 25);

processing: D.44378_26 = switch_channel_test_flag (D.44367_25, 95);

marking necessary through D.44367_25 stmt D.44367_25 = session_9(D)->channel;
processing: D.44367_25 = session_9(D)->channel;

processing: D.44376_24 = switch_channel_test_flag (D.44367_23, 94);

marking necessary through D.44367_23 stmt D.44367_23 = session_9(D)->channel;
processing: D.44367_23 = session_9(D)->channel;

processing: D.44370_21 = switch_channel_test_flag (D.44367_20, 96);

marking necessary through D.44367_20 stmt D.44367_20 = session_9(D)->channel;
processing: D.44367_20 = session_9(D)->channel;

processing: D.44368_19 = switch_channel_test_flag (D.44367_18, 1);

marking necessary through D.44367_18 stmt D.44367_18 = session_9(D)->channel;
processing: D.44367_18 = session_9(D)->channel;

processing: b_channel_16 = switch_core_session_get_channel (b_session.86_15);

marking necessary through b_session.86_15 stmt b_session.86_15 = b_session;
processing: b_session.86_15 = b_session;

processing: D.44360_14 = switch_core_session_perform_get_partner (session_9(D), &b_session, "src/switch_core_media.c", &__func__, 3882);

processing: __assert_fail ("session", "src/switch_core_media.c", 3872, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : changed_106 = changed_2;

Removed 1 of 189 statements (0%)
Removed 0 of 27 PHI nodes (0%)
Removing basic block 67
;; basic block 67, loop depth 0, count 0
;; prev block 66, next block 68
;; pred:      
;; succ:       68 (fallthru,exec)
<bb 67>:


Scope blocks after cleanups:

{ Scope block #0 
  int changed;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  struct switch_media_handle_t * smh;
  struct switch_core_session_t * b_session;
  struct switch_channel_t * b_channel;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_toggle_hold";
  static const char __func__[30] = "switch_core_media_toggle_hold";
  void end = <<< error >>>; (unused)

  { Scope block #0 
    const char * stream;
    const char * msg;
    const char * info;

  }

  { Scope block #0 
    const char * val;

  }

}
switch_core_media_toggle_hold (struct switch_core_session_t * session, int sendonly)
{
  const char * val;
  const char * info;
  const char * msg;
  const char * stream;
  static const char __func__[30] = "switch_core_media_toggle_hold";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_toggle_hold";
  struct switch_channel_t * b_channel;
  struct switch_core_session_t * b_session;
  struct switch_media_handle_t * smh;
  int changed;
  uint32_t D.44454;
  int D.44453;
  int32_t D.44449;
  uint32_t D.44444;
  uint32_t D.44440;
  uint32_t D.44433;
  char * D.44432;
  uint32_t D.44431;
  uint32_t D.44429;
  uint32_t D.44422;
  uint32_t D.44415;
  char * D.44414;
  char * D.44412;
  int D.44409;
  uint32_t D.44408;
  int D.44404;
  uint32_t D.44393;
  struct switch_rtp_t * D.44390;
  struct switch_rtp_t * D.44387;
  const char * D.44384;
  switch_bool_t sendonly.87;
  uint32_t D.44380;
  uint32_t D.44378;
  uint32_t D.44376;
  uint32_t D.44370;
  uint32_t D.44368;
  struct switch_channel_t * D.44367;
  struct switch_core_session_t * b_session.86;
  switch_status_t D.44360;

<bb 2>:
  # DEBUG changed => 0
  b_session = 0B;
  # DEBUG b_channel => 0B
  if (session_9(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 3872, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_10 = session_9(D)->media_handle;
  # DEBUG smh => smh_10
  if (smh_10 == 0B)
    goto <bb 65>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#9 => &smh_10->engines
  # DEBUG a_engine => D#9
  # DEBUG D#10 => &smh_10->engines[1]
  # DEBUG v_engine => D#10
  D.44360_14 = switch_core_session_perform_get_partner (session_9(D), &b_session, "src/switch_core_media.c", &__func__, 3882);
  if (D.44360_14 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  b_session.86_15 = b_session;
  b_channel_16 = switch_core_session_get_channel (b_session.86_15);
  # DEBUG b_channel => b_channel_16

<bb 7>:
  # b_channel_3 = PHI <0B(5), b_channel_16(6)>
  # DEBUG b_channel => b_channel_3
  if (sendonly_17(D) != 0)
    goto <bb 8>;
  else
    goto <bb 34>;

<bb 8>:
  D.44367_18 = session_9(D)->channel;
  D.44368_19 = switch_channel_test_flag (D.44367_18, 1);
  if (D.44368_19 != 0)
    goto <bb 9>;
  else
    goto <bb 34>;

<bb 9>:
  D.44367_20 = session_9(D)->channel;
  D.44370_21 = switch_channel_test_flag (D.44367_20, 96);
  if (D.44370_21 == 0)
    goto <bb 10>;
  else
    goto <bb 63> (end);

<bb 10>:
  # DEBUG msg => "hold"
  D.44367_23 = session_9(D)->channel;
  D.44376_24 = switch_channel_test_flag (D.44367_23, 94);
  if (D.44376_24 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:
  D.44367_25 = session_9(D)->channel;
  D.44378_26 = switch_channel_test_flag (D.44367_25, 95);
  if (D.44378_26 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  if (b_channel_3 == 0B)
    goto <bb 14>;
  else
    goto <bb 13>;

<bb 13>:
  D.44380_27 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44380_27 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.44367_28 = session_9(D)->channel;
  sendonly.87_29 = (switch_bool_t) sendonly_17(D);
  switch_channel_mark_hold (D.44367_28, sendonly.87_29);
  D.44367_30 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_30, 96, 1);
  # DEBUG changed => 0
  goto <bb 63> (end);

<bb 15>:
  D.44367_32 = session_9(D)->channel;
  info_33 = switch_channel_get_variable_dup (D.44367_32, "presence_call_info", 1, -1);
  # DEBUG info => info_33
  if (info_33 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.44384_34 = switch_stristr ("private", info_33);
  if (D.44384_34 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  # DEBUG msg => "hold-private"

<bb 18>:
  # msg_5 = PHI <"hold"(15), "hold"(16), "hold-private"(17)>
  # DEBUG msg => msg_5
  D.44387_36 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_36 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.44387_37 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_37, 35);

<bb 20>:
  D.44390_38 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_38 != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.44390_39 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_39, 35);

<bb 22>:
  D.44367_40 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_40, 96, 1);
  D.44367_41 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_41, 1);
  D.44367_42 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_42, "unknown", msg_5, 0B, "src/switch_core_media.c", &__func__, 3918);
  # DEBUG changed => 1
  D.44393_44 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
  if (D.44393_44 != 0)
    goto <bb 23>;
  else
    goto <bb 25>;

<bb 23>:
  D.44387_45 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_45 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.44387_46 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  D.44393_47 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_hold_packets;
  switch_rtp_set_max_missed_packets (D.44387_46, D.44393_47);

<bb 25>:
  D.44367_48 = session_9(D)->channel;
  stream_49 = switch_channel_get_hold_music (D.44367_48);
  # DEBUG stream => stream_49
  if (stream_49 == 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  # DEBUG stream => "local_stream://moh"

<bb 27>:
  # stream_4 = PHI <stream_49(25), "local_stream://moh"(26)>
  # DEBUG stream => stream_4
  if (stream_4 != 0B)
    goto <bb 28>;
  else
    goto <bb 63> (end);

<bb 28>:
  D.44404_51 = strcasecmp (stream_4, "silence");
  if (D.44404_51 != 0)
    goto <bb 29>;
  else
    goto <bb 63> (end);

<bb 29>:
  if (b_channel_3 == 0B)
    goto <bb 31>;
  else
    goto <bb 30>;

<bb 30>:
  D.44408_52 = switch_channel_test_flag (b_channel_3, 25);
  if (D.44408_52 == 0)
    goto <bb 31>;
  else
    goto <bb 63> (end);

<bb 31>:
  D.44409_53 = strcasecmp (stream_4, "indicate_hold");
  if (D.44409_53 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:
  D.44367_54 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_54, 16, 1);
  D.44367_55 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_55, 10, 1);
  b_session.86_56 = b_session;
  D.44412_57 = switch_core_session_get_uuid (b_session.86_56);
  switch_ivr_hold_uuid (D.44412_57, 0B, 0);
  goto <bb 63> (end);

<bb 33>:
  b_session.86_58 = b_session;
  D.44414_59 = switch_core_session_get_uuid (b_session.86_58);
  switch_ivr_broadcast (D.44414_59, stream_4, 274);
  switch_sleep (250000);
  goto <bb 63> (end);

<bb 34>:
  D.44367_60 = session_9(D)->channel;
  D.44415_61 = switch_channel_test_flag (D.44367_60, 97);
  if (D.44415_61 != 0)
    goto <bb 35>;
  else
    goto <bb 39>;

<bb 35>:
  D.44367_62 = session_9(D)->channel;
  switch_channel_set_flag_value (D.44367_62, 96, 1);
  D.44367_63 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_63, 1);
  D.44387_64 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_64 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.44387_65 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_65, 35);

<bb 37>:
  D.44390_66 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_66 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.44390_67 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_67, 35);

<bb 39>:
  # changed_1 = PHI <0(34), 1(38), 1(37)>
  # DEBUG changed => changed_1
  D.44367_69 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_69, 97);
  D.44367_70 = session_9(D)->channel;
  D.44422_71 = switch_channel_test_flag (D.44367_70, 96);
  if (D.44422_71 != 0)
    goto <bb 40>;
  else
    goto <bb 63> (end);

<bb 40>:
  switch_sleep (250000);
  if (b_channel_3 != 0B)
    goto <bb 41>;
  else
    goto <bb 44>;

<bb 41>:
  D.44367_72 = session_9(D)->channel;
  D.44429_73 = switch_channel_test_flag (D.44367_72, 120);
  if (D.44429_73 != 0)
    goto <bb 43>;
  else
    goto <bb 42>;

<bb 42>:
  D.44431_74 = switch_channel_test_flag (b_channel_3, 120);
  if (D.44431_74 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.44432_75 = switch_core_session_get_uuid (session_9(D));
  switch_ivr_nomedia (D.44432_75, 1);

<bb 44>:
  D.44433_76 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
  if (D.44433_76 != 0)
    goto <bb 45>;
  else
    goto <bb 47>;

<bb 45>:
  D.44387_77 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_77 != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  D.44387_78 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_reset_media_timer (D.44387_78);
  D.44387_79 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  D.44433_80 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].max_missed_packets;
  switch_rtp_set_max_missed_packets (D.44387_79, D.44433_80);

<bb 47>:
  if (b_channel_3 != 0B)
    goto <bb 48>;
  else
    goto <bb 53>;

<bb 48>:
  D.44367_81 = session_9(D)->channel;
  D.44440_82 = switch_channel_test_flag (D.44367_81, 10);
  if (D.44440_82 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  b_session.86_83 = b_session;
  switch_ivr_unhold (b_session.86_83);
  D.44367_84 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_84, 16);
  D.44367_85 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_85, 10);
  goto <bb 53>;

<bb 50>:
  D.44444_86 = switch_channel_test_flag (b_channel_3, 21);
  if (D.44444_86 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  switch_channel_set_flag_value (b_channel_3, 28, 1);
  switch_channel_set_flag_value (b_channel_3, 20, 1);

<bb 52>:
  switch_channel_wait_for_flag (b_channel_3, 21, 0, 5000, 0B);

<bb 53>:
  D.44449_87 = switch_media_handle_test_media_flag (smh_10, 10);
  if (D.44449_87 == 0)
    goto <bb 54>;
  else
    goto <bb 61>;

<bb 54>:
  D.44367_88 = session_9(D)->channel;
  val_89 = switch_channel_get_variable_dup (D.44367_88, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_89
  if (val_89 == 0B)
    goto <bb 56>;
  else
    goto <bb 55>;

<bb 55>:
  D.44453_90 = switch_true (val_89);
  if (D.44453_90 == 0)
    goto <bb 56>;
  else
    goto <bb 61>;

<bb 56>:
  D.44367_91 = session_9(D)->channel;
  D.44454_92 = switch_channel_test_flag (D.44367_91, 106);
  if (D.44454_92 == 0)
    goto <bb 57>;
  else
    goto <bb 61>;

<bb 57>:
  D.44387_93 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  if (D.44387_93 != 0B)
    goto <bb 58>;
  else
    goto <bb 59>;

<bb 58>:
  D.44387_94 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_set_flag (D.44387_94, 7);

<bb 59>:
  D.44390_95 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_95 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.44390_96 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44390_96, 7);

<bb 61>:
  D.44367_97 = session_9(D)->channel;
  switch_channel_clear_flag (D.44367_97, 96);
  D.44367_98 = session_9(D)->channel;
  switch_channel_mark_hold (D.44367_98, 0);
  D.44367_99 = session_9(D)->channel;
  switch_channel_perform_presence (D.44367_99, "unknown", "unhold", 0B, "src/switch_core_media.c", &__func__, 4004);
  D.44387_100 = MEM[(struct switch_rtp_engine_t *)smh_10 + 80B].rtp_session;
  switch_rtp_clear_flag (D.44387_100, 35);
  D.44390_101 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  if (D.44390_101 != 0B)
    goto <bb 62>;
  else
    goto <bb 63> (end);

<bb 62>:
  D.44390_102 = MEM[(struct switch_rtp_engine_t *)smh_10 + 11496B].rtp_session;
  switch_rtp_clear_flag (D.44390_102, 35);

  # changed_2 = PHI <0(14), 1(27), changed_1(39), 1(62), 0(9), 1(33), 1(32), 1(30), 1(28), 1(61)>
end:
  # DEBUG changed => changed_2
  b_session.86_104 = b_session;
  if (b_session.86_104 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;

<bb 64>:
  b_session.86_105 = b_session;
  switch_core_session_rwunlock (b_session.86_105);

<bb 65>:
  # changed_6 = PHI <0(4), changed_2(64), changed_2(63)>
  return changed_6;

}



;; Function switch_core_media_negotiate_sdp (switch_core_media_negotiate_sdp)

Created preheader block for loop 14
;; 16 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 4
;;  header 424, latch 423
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 15
;;  header 302, latch 301
;;  depth 2, outer 4
;;  nodes: 302 301 299 300 298 297 296 293 294 295 291 292 290 289 288 287 285 286 282 283 284
;;
;; Loop 14
;;  header 430, latch 276
;;  depth 2, outer 4
;;  nodes: 430 276 274 273 271 272 270 268 269 267
;;
;; Loop 12
;;  header 263, latch 262
;;  depth 2, outer 4
;;  nodes: 263 262 190 196 198 200 261 258 260 225 259 227 251 257 255 256 254 252 246 247 249 250 248 241 242 243 244 245 234 239 240 237 238 236 235 232 233 231 228 229 230 226 216 218 223 224 215 217 214 211 212 213 208 209 210 206 207 204 205 201 202 203 199 197 191 192 193 186 184 185 221 222 219 220 253 194 195 188 189 187
;;
;; Loop 13
;;  header 260, latch 259
;;  depth 3, outer 12
;;  nodes: 260 259 227 251 257 258 253 256 254 255 252 246 247 249 250 248 241 242 243 244 245 234 239 240 237 238 236 235 232 233 231 228 229 230 226
;;
;; Loop 11
;;  header 175, latch 174
;;  depth 2, outer 4
;;  nodes: 175 174 156 159 162 163 164 168 173 155 154 153 169 170 171 165 166 167 160 161 157 158
;;
;; Loop 10
;;  header 151, latch 150
;;  depth 2, outer 4
;;  nodes: 151 150 144 148 149 145 146 147
;;
;; Loop 6
;;  header 410, latch 409
;;  depth 2, outer 4
;;  nodes: 410 409 406 407 408
;;
;; Loop 5
;;  header 399, latch 398
;;  depth 2, outer 4
;;  nodes: 399 398 397 378 396 380 383 393 392 394 390 391 388 389 387 384 385 386 381 382 379 376 377 375 345 374 347 355 362 363 364 368 373 352 361 360 358 359 357 356 348 346 349 350 351 369 370 371 365 366 367 353 354 334 335 344 336 343 337 341 342 338 339 340
;;
;; Loop 9
;;  header 397, latch 396
;;  depth 3, outer 5
;;  nodes: 397 396 380 383 393 392 394 390 391 388 389 387 384 385 386 381 382 379
;;
;; Loop 8
;;  header 375, latch 374
;;  depth 3, outer 5
;;  nodes: 375 374 347 355 362 363 364 368 373 352 361 360 358 359 357 356 348 346 349 350 351 369 370 371 365 366 367 353 354
;;
;; Loop 7
;;  header 344, latch 343
;;  depth 3, outer 5
;;  nodes: 344 343 337 341 342 338 339 340
;;
;; Loop 3
;;  header 64, latch 63
;;  depth 1, outer 0
;;  nodes: 64 63 48 50 52 56 58 60 61 62 55 54 53 51 49 47 44 45 46 59 57
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 19
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 15
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 428 5 }
;; 5 succs { 428 6 }
;; 6 succs { 7 8 }
;; 7 succs { 428 }
;; 8 succs { 9 12 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 13 16 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 17 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 27 }
;; 23 succs { 27 24 }
;; 24 succs { 27 25 }
;; 25 succs { 27 26 }
;; 26 succs { 27 }
;; 27 succs { 28 34 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 37 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 43 }
;; 38 succs { 42 39 }
;; 39 succs { 40 43 }
;; 40 succs { 41 43 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 64 }
;; 44 succs { 47 45 }
;; 45 succs { 47 46 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 63 }
;; 49 succs { 50 51 }
;; 50 succs { 63 }
;; 51 succs { 52 53 }
;; 52 succs { 63 }
;; 53 succs { 54 57 }
;; 54 succs { 55 56 }
;; 55 succs { 63 }
;; 56 succs { 63 }
;; 57 succs { 58 59 }
;; 58 succs { 63 59 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 44 65 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 74 }
;; 68 succs { 70 69 }
;; 69 succs { 70 74 }
;; 70 succs { 71 74 }
;; 71 succs { 72 74 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 77 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 82 }
;; 81 succs { 84 }
;; 82 succs { 83 84 }
;; 83 succs { 84 }
;; 84 succs { 87 85 }
;; 85 succs { 87 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 424 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 94 }
;; 94 succs { 95 98 }
;; 95 succs { 96 97 }
;; 96 succs { 104 }
;; 97 succs { 104 }
;; 98 succs { 99 102 }
;; 99 succs { 100 101 }
;; 100 succs { 104 }
;; 101 succs { 104 }
;; 102 succs { 103 104 }
;; 103 succs { 104 }
;; 104 succs { 105 139 }
;; 105 succs { 106 139 }
;; 106 succs { 107 139 }
;; 107 succs { 425 108 }
;; 108 succs { 109 110 }
;; 109 succs { 425 }
;; 110 succs { 111 113 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 117 }
;; 114 succs { 115 117 }
;; 115 succs { 116 117 }
;; 116 succs { 117 }
;; 117 succs { 118 119 }
;; 118 succs { 124 119 }
;; 119 succs { 124 120 }
;; 120 succs { 124 121 }
;; 121 succs { 124 122 }
;; 122 succs { 429 124 }
;; 429 succs { 124 }
;; 124 succs { 125 425 }
;; 125 succs { 126 425 }
;; 126 succs { 127 128 }
;; 127 succs { 425 }
;; 128 succs { 129 131 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 135 }
;; 132 succs { 133 135 }
;; 133 succs { 134 135 }
;; 134 succs { 137 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 425 }
;; 139 succs { 140 327 }
;; 140 succs { 141 327 }
;; 141 succs { 142 152 }
;; 142 succs { 143 152 }
;; 143 succs { 151 }
;; 144 succs { 145 150 }
;; 145 succs { 148 146 }
;; 146 succs { 148 147 }
;; 147 succs { 148 }
;; 148 succs { 149 150 }
;; 149 succs { 150 }
;; 150 succs { 151 }
;; 151 succs { 144 152 }
;; 152 succs { 175 }
;; 153 succs { 154 157 }
;; 154 succs { 155 157 }
;; 155 succs { 156 174 }
;; 156 succs { 174 }
;; 157 succs { 158 160 }
;; 158 succs { 159 160 }
;; 159 succs { 174 }
;; 160 succs { 161 163 }
;; 161 succs { 162 163 }
;; 162 succs { 174 }
;; 163 succs { 164 174 }
;; 164 succs { 165 174 }
;; 165 succs { 168 166 }
;; 166 succs { 168 167 }
;; 167 succs { 168 }
;; 168 succs { 169 174 }
;; 169 succs { 170 173 }
;; 170 succs { 171 173 }
;; 171 succs { 172 173 }
;; 172 succs { 425 }
;; 173 succs { 174 }
;; 174 succs { 175 }
;; 175 succs { 153 176 }
;; 176 succs { 177 179 }
;; 177 succs { 178 179 }
;; 178 succs { 425 }
;; 179 succs { 180 181 }
;; 180 succs { 181 }
;; 181 succs { 182 183 }
;; 182 succs { 425 }
;; 183 succs { 263 }
;; 184 succs { 185 186 }
;; 185 succs { 186 }
;; 186 succs { 187 191 }
;; 187 succs { 189 188 }
;; 188 succs { 189 190 }
;; 189 succs { 190 }
;; 190 succs { 262 }
;; 191 succs { 192 197 }
;; 192 succs { 193 197 }
;; 193 succs { 194 197 }
;; 194 succs { 195 196 }
;; 195 succs { 196 }
;; 196 succs { 262 }
;; 197 succs { 198 199 }
;; 198 succs { 262 }
;; 199 succs { 200 201 }
;; 200 succs { 262 }
;; 201 succs { 202 204 }
;; 202 succs { 203 204 }
;; 203 succs { 204 }
;; 204 succs { 205 206 }
;; 205 succs { 206 }
;; 206 succs { 208 207 }
;; 207 succs { 208 }
;; 208 succs { 209 211 }
;; 209 succs { 210 211 }
;; 210 succs { 211 }
;; 211 succs { 214 212 }
;; 212 succs { 214 213 }
;; 213 succs { 214 }
;; 214 succs { 215 218 }
;; 215 succs { 225 216 }
;; 216 succs { 225 217 }
;; 217 succs { 225 }
;; 218 succs { 219 225 }
;; 219 succs { 220 221 }
;; 220 succs { 221 }
;; 221 succs { 222 223 }
;; 222 succs { 223 }
;; 223 succs { 224 225 }
;; 224 succs { 225 }
;; 225 succs { 260 }
;; 226 succs { 227 228 }
;; 227 succs { 259 }
;; 228 succs { 231 229 }
;; 229 succs { 231 230 }
;; 230 succs { 231 }
;; 231 succs { 233 232 }
;; 232 succs { 233 235 }
;; 233 succs { 234 235 }
;; 234 succs { 241 }
;; 235 succs { 236 238 }
;; 236 succs { 239 237 }
;; 237 succs { 239 238 }
;; 238 succs { 239 }
;; 239 succs { 240 241 }
;; 240 succs { 241 }
;; 241 succs { 242 246 }
;; 242 succs { 243 246 }
;; 243 succs { 244 246 }
;; 244 succs { 245 246 }
;; 245 succs { 246 }
;; 246 succs { 247 251 }
;; 247 succs { 248 251 }
;; 248 succs { 250 249 }
;; 249 succs { 250 251 }
;; 250 succs { 251 }
;; 251 succs { 252 259 }
;; 252 succs { 253 254 }
;; 253 succs { 258 }
;; 254 succs { 255 256 }
;; 255 succs { 257 256 }
;; 256 succs { 257 258 }
;; 257 succs { 259 }
;; 258 succs { 261 259 }
;; 259 succs { 260 }
;; 260 succs { 226 261 }
;; 261 succs { 264 262 }
;; 262 succs { 263 }
;; 263 succs { 184 264 }
;; 264 succs { 265 266 }
;; 265 succs { 266 }
;; 266 succs { 277 278 }
;; 277 succs { 430 }
;; 267 succs { 268 269 }
;; 268 succs { 270 }
;; 269 succs { 270 }
;; 270 succs { 271 272 }
;; 271 succs { 273 }
;; 272 succs { 273 }
;; 273 succs { 275 274 }
;; 274 succs { 275 276 }
;; 275 succs { 278 }
;; 276 succs { 430 }
;; 430 succs { 267 278 }
;; 278 succs { 279 303 }
;; 279 succs { 280 281 }
;; 280 succs { 281 }
;; 281 succs { 302 }
;; 282 succs { 283 285 }
;; 283 succs { 284 285 }
;; 284 succs { 285 }
;; 285 succs { 286 287 }
;; 286 succs { 287 }
;; 287 succs { 288 289 }
;; 288 succs { 289 }
;; 289 succs { 290 300 }
;; 290 succs { 291 292 }
;; 291 succs { 293 }
;; 292 succs { 293 }
;; 293 succs { 296 294 }
;; 294 succs { 296 295 }
;; 295 succs { 296 }
;; 296 succs { 297 299 }
;; 297 succs { 298 299 }
;; 298 succs { 301 }
;; 299 succs { 301 }
;; 300 succs { 301 }
;; 301 succs { 302 }
;; 302 succs { 282 303 }
;; 303 succs { 304 314 }
;; 304 succs { 305 309 }
;; 305 succs { 306 309 }
;; 306 succs { 307 309 }
;; 307 succs { 308 309 }
;; 308 succs { 310 309 }
;; 309 succs { 310 }
;; 310 succs { 311 312 }
;; 311 succs { 312 }
;; 312 succs { 313 314 }
;; 313 succs { 314 }
;; 314 succs { 315 318 }
;; 315 succs { 317 316 }
;; 316 succs { 317 318 }
;; 317 succs { 318 }
;; 318 succs { 319 324 }
;; 319 succs { 320 322 }
;; 320 succs { 321 423 }
;; 321 succs { 423 }
;; 322 succs { 323 423 }
;; 323 succs { 423 }
;; 324 succs { 325 326 }
;; 325 succs { 423 }
;; 326 succs { 423 }
;; 327 succs { 328 423 }
;; 328 succs { 329 423 }
;; 329 succs { 330 331 }
;; 330 succs { 331 }
;; 331 succs { 332 333 }
;; 332 succs { 425 }
;; 333 succs { 399 }
;; 334 succs { 335 345 }
;; 335 succs { 336 345 }
;; 336 succs { 344 }
;; 337 succs { 338 343 }
;; 338 succs { 341 339 }
;; 339 succs { 341 340 }
;; 340 succs { 341 }
;; 341 succs { 342 343 }
;; 342 succs { 343 }
;; 343 succs { 344 }
;; 344 succs { 337 345 }
;; 345 succs { 375 }
;; 346 succs { 347 348 }
;; 347 succs { 374 348 }
;; 348 succs { 349 356 }
;; 349 succs { 352 350 }
;; 350 succs { 352 351 }
;; 351 succs { 352 }
;; 352 succs { 353 374 }
;; 353 succs { 354 355 }
;; 354 succs { 355 }
;; 355 succs { 374 }
;; 356 succs { 357 363 }
;; 357 succs { 358 363 }
;; 358 succs { 359 360 }
;; 359 succs { 360 }
;; 360 succs { 361 363 }
;; 361 succs { 362 374 }
;; 362 succs { 374 }
;; 363 succs { 364 374 }
;; 364 succs { 365 374 }
;; 365 succs { 368 366 }
;; 366 succs { 368 367 }
;; 367 succs { 368 }
;; 368 succs { 369 374 }
;; 369 succs { 370 373 }
;; 370 succs { 371 373 }
;; 371 succs { 372 373 }
;; 372 succs { 425 }
;; 373 succs { 374 }
;; 374 succs { 375 }
;; 375 succs { 346 376 }
;; 376 succs { 377 378 }
;; 377 succs { 378 }
;; 378 succs { 397 }
;; 379 succs { 380 381 }
;; 380 succs { 396 }
;; 381 succs { 382 384 }
;; 382 succs { 383 384 }
;; 383 succs { 396 }
;; 384 succs { 387 385 }
;; 385 succs { 387 386 }
;; 386 succs { 387 }
;; 387 succs { 389 388 }
;; 388 succs { 389 391 }
;; 389 succs { 390 391 }
;; 390 succs { 392 }
;; 391 succs { 392 }
;; 392 succs { 393 396 }
;; 393 succs { 394 396 }
;; 394 succs { 396 }
;; 396 succs { 397 }
;; 397 succs { 379 398 }
;; 398 succs { 399 }
;; 399 succs { 334 400 }
;; 400 succs { 401 402 }
;; 401 succs { 402 }
;; 402 succs { 403 423 }
;; 403 succs { 404 405 }
;; 404 succs { 405 }
;; 405 succs { 410 }
;; 406 succs { 407 409 }
;; 407 succs { 408 409 }
;; 408 succs { 409 }
;; 409 succs { 410 }
;; 410 succs { 406 411 }
;; 411 succs { 412 413 }
;; 412 succs { 413 }
;; 413 succs { 414 418 }
;; 414 succs { 415 418 }
;; 415 succs { 416 418 }
;; 416 succs { 417 418 }
;; 417 succs { 419 418 }
;; 418 succs { 419 }
;; 419 succs { 420 421 }
;; 420 succs { 421 }
;; 421 succs { 422 423 }
;; 422 succs { 423 }
;; 423 succs { 424 }
;; 424 succs { 89 425 }
;; 425 succs { 426 427 }
;; 426 succs { 427 }
;; 427 succs { 428 }
;; 428 succs { 1 }
Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG best_te => 0

Marking useful stmt: # DEBUG te => 0

Marking useful stmt: # DEBUG cng_pt => 0

Marking useful stmt: # DEBUG ptime => 0

Marking useful stmt: # DEBUG dptime => 0

Marking useful stmt: # DEBUG maxptime => 0

Marking useful stmt: # DEBUG dmaxptime => 0

Marking useful stmt: # DEBUG sendonly => 0

Marking useful stmt: # DEBUG recvonly => 0

Marking useful stmt: # DEBUG greedy => 0

Marking useful stmt: # DEBUG x => 0

Marking useful stmt: # DEBUG skip => 0

Marking useful stmt: channel_162 = switch_core_session_get_channel (session_161(D));

Marking useful stmt: # DEBUG channel => channel_162

Marking useful stmt: # DEBUG crypto => 0B

Marking useful stmt: # DEBUG got_crypto => 0

Marking useful stmt: # DEBUG got_video_crypto => 0

Marking useful stmt: # DEBUG got_audio => 0

Marking useful stmt: # DEBUG got_avp => 0

Marking useful stmt: # DEBUG got_video_avp => 0

Marking useful stmt: # DEBUG got_video_savp => 0

Marking useful stmt: # DEBUG got_savp => 0

Marking useful stmt: # DEBUG got_udptl => 0

Marking useful stmt: # DEBUG got_webrtc => 0

Marking useful stmt: # DEBUG scrooge => 0

Marking useful stmt: # DEBUG parser => 0B

Marking useful stmt: # DEBUG reneg => 1

Marking useful stmt: # DEBUG near_rate => 0

Marking useful stmt: # DEBUG mimp => 0B

Marking useful stmt: # DEBUG near_match => 0B

Marking useful stmt: # DEBUG mmap => 0B

Marking useful stmt: # DEBUG near_map => 0B

Marking useful stmt: # DEBUG codec_ms => 0

Marking useful stmt: # DEBUG remote_codec_rate => 0

Marking useful stmt: # DEBUG fmtp_remote_codec_rate => 0

Marking useful stmt: # DEBUG m_idx => 0

Marking useful stmt: # DEBUG nm_idx => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_186

Marking useful stmt: # DEBUG D#15 => &smh_186->engines

Marking useful stmt: # DEBUG a_engine => D#15

Marking useful stmt: # DEBUG D#14 => &smh_186->engines[1]

Marking useful stmt: # DEBUG v_engine => D#14

Marking useful stmt: # DEBUG codec_array => codec_array_190

Marking useful stmt: # DEBUG total_codecs => total_codecs_192

Marking useful stmt: parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);

Marking useful stmt: # DEBUG parser => parser_196

Marking useful stmt: sdp_198 = sdp_session (parser_196);

Marking useful stmt: # DEBUG sdp => sdp_198

Marking useful stmt: sdp_parser_free (parser_196);

Marking useful stmt: D.44478_200 = dtls_ok (session_161(D));

Marking useful stmt: tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_203

Marking useful stmt: D.44485_204 = switch_false (tmp_203);

Marking useful stmt: switch_channel_clear_flag (D.44482_206, 111);

Marking useful stmt: switch_channel_clear_flag (D.44482_208, 109);

Marking useful stmt: switch_core_session_parse_crypto_prefs (session_161(D));

Marking useful stmt: # DEBUG engine => D#15

Marking useful stmt: # DEBUG pmap => pmap_1458

Marking useful stmt: pmap_1459->negotiated = 0;

Marking useful stmt: pmap_1459->current = 0;

Marking useful stmt: # DEBUG pmap => pmap_1460

Marking useful stmt: # DEBUG pmap => pmap_1459

Marking useful stmt: # DEBUG engine => D#14

Marking useful stmt: # DEBUG pmap => pmap_1462

Marking useful stmt: pmap_1463->negotiated = 0;

Marking useful stmt: pmap_1463->current = 0;

Marking useful stmt: # DEBUG pmap => pmap_1464

Marking useful stmt: # DEBUG pmap => pmap_1463

Marking useful stmt: *proceed_209(D) = 1;

Marking useful stmt: D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);

Marking useful stmt: # DEBUG greedy => greedy_211

Marking useful stmt: D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);

Marking useful stmt: # DEBUG scrooge => scrooge_213

Marking useful stmt: val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);

Marking useful stmt: # DEBUG val => val_214

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);

Marking useful stmt: # DEBUG scrooge => scrooge_80

Marking useful stmt: # DEBUG greedy => greedy_47

Marking useful stmt: D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);

Marking useful stmt: smh_186->origin = D.44508_226;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");

Marking useful stmt: val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);

Marking useful stmt: # DEBUG val => val_245

Marking useful stmt: D.44533_246 = switch_true (val_245);

Marking useful stmt: switch_channel_set_flag_value (D.44530_247, 93, 1);

Marking useful stmt: # DEBUG m => m_248

Marking useful stmt: # DEBUG __s2_len => 7

Marking useful stmt: # DEBUG sendonly => 2

Marking useful stmt: # DEBUG sendonly => sendonly_42

Marking useful stmt: # DEBUG attr => attr_303

Marking useful stmt: # DEBUG s => D.44590_304

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG sendonly => 1

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);

Marking useful stmt: # DEBUG sendonly => 1

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);

Marking useful stmt: # DEBUG recvonly => 1

Marking useful stmt: D.44606_319 = switch_rtp_ready (D.44605_318);

Marking useful stmt: switch_rtp_set_max_missed_packets (D.44605_320, 0);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);

Marking useful stmt: # DEBUG __nptr => D.44619_328

Marking useful stmt: dptime_1468 = strtol (D.44619_328, 0B, 10);

Marking useful stmt: # DEBUG dptime => NULL

Marking useful stmt: # DEBUG __nptr => D.44619_332

Marking useful stmt: dmaxptime_1469 = strtol (D.44619_332, 0B, 10);

Marking useful stmt: # DEBUG dmaxptime => NULL

Marking useful stmt: # DEBUG recvonly => recvonly_45

Marking useful stmt: # DEBUG sendonly => sendonly_43

Marking useful stmt: # DEBUG dmaxptime => dmaxptime_40

Marking useful stmt: # DEBUG dptime => dptime_36

Marking useful stmt: # DEBUG attr => attr_334

Marking useful stmt: # DEBUG recvonly => recvonly_46

Marking useful stmt: # DEBUG sendonly => sendonly_44

Marking useful stmt: # DEBUG dmaxptime => dmaxptime_41

Marking useful stmt: # DEBUG dptime => dptime_37

Marking useful stmt: # DEBUG attr => attr_29

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);

Marking useful stmt: D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);

Marking useful stmt: val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);

Marking useful stmt: # DEBUG val => val_341

Marking useful stmt: D.44635_342 = switch_true (val_341);

Marking useful stmt: D.44471_345->hold_laps = D.44639_347;

Marking useful stmt: D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_44);

Marking useful stmt: reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);

Marking useful stmt: # DEBUG reneg => reneg_349

Marking useful stmt: val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);

Marking useful stmt: # DEBUG val => val_351

Marking useful stmt: reneg_352 = switch_true (val_351);

Marking useful stmt: # DEBUG reneg => reneg_352

Marking useful stmt: # DEBUG reneg => reneg_81

Marking useful stmt: reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);

Marking useful stmt: # DEBUG reneg => reneg_353

Marking useful stmt: val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);

Marking useful stmt: # DEBUG val => val_355

Marking useful stmt: reneg_356 = switch_true (val_355);

Marking useful stmt: # DEBUG reneg => reneg_356

Marking useful stmt: # DEBUG reneg => reneg_82

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");

Marking useful stmt: # DEBUG reneg => 0

Marking useful stmt: # DEBUG reneg => reneg_83

Marking useful stmt: # DEBUG codec_array => codec_array_360

Marking useful stmt: # DEBUG total_codecs => total_codecs_361

Marking useful stmt: D.44471_362->num_codecs = 0;

Marking useful stmt: switch_core_media_prepare_codecs (session_161(D), 0);

Marking useful stmt: # DEBUG codec_array => codec_array_363

Marking useful stmt: # DEBUG total_codecs => total_codecs_365

Marking useful stmt: # DEBUG total_codecs => total_codecs_85

Marking useful stmt: # DEBUG codec_array => codec_array_84

Marking useful stmt: D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));

Marking useful stmt: D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));

Marking useful stmt: D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);

Marking useful stmt: switch_core_media_find_zrtp_hash (session_161(D), sdp_198);

Marking useful stmt: switch_core_media_pass_zrtp_hash (session_161(D));

Marking useful stmt: check_ice (smh_186, 0, sdp_198, 0B);

Marking useful stmt: check_ice (smh_186, 1, sdp_198, 0B);

Marking useful stmt: # DEBUG m => m_370

Marking useful stmt: # DEBUG ptime => dptime_37

Marking useful stmt: # DEBUG maxptime => dmaxptime_41

Marking useful stmt: # DEBUG got_webrtc => got_webrtc_374

Marking useful stmt: switch_core_session_set_ice (session_161(D));

Marking useful stmt: # DEBUG got_webrtc => got_webrtc_78

Marking useful stmt: switch_channel_set_flag_value (D.44530_378, 107, 1);

Marking useful stmt: # DEBUG got_savp => got_savp_384

Marking useful stmt: # DEBUG got_video_savp => got_video_savp_385

Marking useful stmt: # DEBUG got_avp => got_avp_388

Marking useful stmt: # DEBUG got_video_avp => got_video_avp_389

Marking useful stmt: # DEBUG got_udptl => got_udptl_391

Marking useful stmt: # DEBUG got_udptl => got_udptl_76

Marking useful stmt: # DEBUG got_savp => got_savp_74

Marking useful stmt: # DEBUG got_video_savp => got_video_savp_72

Marking useful stmt: # DEBUG got_video_avp => got_video_avp_70

Marking useful stmt: # DEBUG got_avp => got_avp_68

Marking useful stmt: t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_28);

Marking useful stmt: # DEBUG t38_options => t38_options_394

Marking useful stmt: D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);

Marking useful stmt: D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);

Marking useful stmt: D.44703_399 = switch_true (D.44702_398);

Marking useful stmt: switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);

Marking useful stmt: # DEBUG var => var_402

Marking useful stmt: D.44706_405 = switch_channel_test_flag (D.44482_404, 101);

Marking useful stmt: # DEBUG pass => pass_406

Marking useful stmt: D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);

Marking useful stmt: *proceed_209(D) = 0;

Marking useful stmt: pass_409 = switch_true (var_402);

Marking useful stmt: # DEBUG pass => pass_409

Marking useful stmt: # DEBUG pass => 2

Marking useful stmt: # DEBUG pass => pass_126

Marking useful stmt: D.44723_414 = switch_channel_test_flag (D.44482_413, 101);

Marking useful stmt: D.44724_416 = switch_channel_test_flag (D.44530_415, 103);

Marking useful stmt: D.44726_418 = switch_channel_test_flag (D.44530_417, 15);

Marking useful stmt: D.44728_420 = switch_channel_test_flag (D.44530_419, 29);

Marking useful stmt: D.44730_422 = switch_rtp_ready (D.44605_421);

Marking useful stmt: # DEBUG pass => pass_127

Marking useful stmt: D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);

Marking useful stmt: other_channel_426 = switch_core_session_get_channel (other_session.89_425);

Marking useful stmt: # DEBUG other_channel => other_channel_426

Marking useful stmt: remote_host_428 = switch_rtp_get_remote_host (D.44605_427);

Marking useful stmt: # DEBUG remote_host => remote_host_428

Marking useful stmt: remote_port_430 = switch_rtp_get_remote_port (D.44605_429);

Marking useful stmt: # DEBUG remote_port => remote_port_430

Marking useful stmt: D.44737_431 = switch_channel_test_flag (other_channel_426, 1);

Marking useful stmt: D.44740_433 = switch_channel_get_name (D.44530_432);

Marking useful stmt: D.44741_434 = switch_channel_get_name (other_channel_426);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);

Marking useful stmt: switch_core_session_rwunlock (other_session.89_435);

Marking useful stmt: # DEBUG pass => 0

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);

Marking useful stmt: D.44743_440 = switch_true (D.44742_439);

Marking useful stmt: D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);

Marking useful stmt: D.44747_443 = switch_true (D.44746_442);

Marking useful stmt: switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);

Marking useful stmt: D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);

Marking useful stmt: D.44750_444->remote_sdp_ip = D.44752_446;

Marking useful stmt: D.44750_447->remote_sdp_port = D.44753_448;

Marking useful stmt: D.44764_458 = switch_channel_get_name (D.44530_457);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);

Marking useful stmt: D.44765_460 = switch_channel_get_name (D.44530_459);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);

Marking useful stmt: switch_snprintf (&tmp, 32, "%d", D.44767_469);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);

Marking useful stmt: D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);

Marking useful stmt: switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);

Marking useful stmt: switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);

Marking useful stmt: switch_channel_set_flag_value (D.44482_483, 101, 1);

Marking useful stmt: switch_channel_set_flag_value (D.44772_485, 101, 1);

Marking useful stmt: msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);

Marking useful stmt: # DEBUG msg => msg_487

Marking useful stmt: msg_487->message_id = 21;

Marking useful stmt: msg_487->from = "src/switch_core_media.c";

Marking useful stmt: D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);

Marking useful stmt: msg_487->string_arg = D.44773_489;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));

Marking useful stmt: switch_core_session_queue_message (other_session.89_490, msg_487);

Marking useful stmt: switch_core_session_rwunlock (other_session.89_491);

Marking useful stmt: D.44781_498 = switch_rtp_has_dtls ();

Marking useful stmt: D.44784_499 = dtls_ok (session_161(D));

Marking useful stmt: # DEBUG attr => attr_500

Marking useful stmt: # DEBUG s => D.44619_503

Marking useful stmt: # DEBUG got_crypto => 1

Marking useful stmt: # DEBUG got_crypto => got_crypto_50

Marking useful stmt: # DEBUG attr => attr_506

Marking useful stmt: # DEBUG got_crypto => got_crypto_51

Marking useful stmt: # DEBUG attr => attr_30

Marking useful stmt: # DEBUG got_crypto => got_crypto_52

Marking useful stmt: # DEBUG attr => attr_507

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_512, 1);

Marking useful stmt: # DEBUG __nptr => D.44619_513

Marking useful stmt: D.47891_1472 = strtol (D.44619_513, 0B, 10);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;

Marking useful stmt: D.44471_518->rtcp_audio_interval_msec = "5000";

Marking useful stmt: # DEBUG __nptr => D.44619_522

Marking useful stmt: ptime_1473 = strtol (D.44619_522, 0B, 10);

Marking useful stmt: # DEBUG ptime => NULL

Marking useful stmt: # DEBUG __nptr => D.44619_527

Marking useful stmt: maxptime_1474 = strtol (D.44619_527, 0B, 10);

Marking useful stmt: # DEBUG maxptime => NULL

Marking useful stmt: # DEBUG s => D.44619_531

Marking useful stmt: D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);

Marking useful stmt: D.44826_538 = switch_true (D.44825_537);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG crypto => crypto_544

Marking useful stmt: # DEBUG __nptr => crypto_544

Marking useful stmt: crypto_tag_1477 = strtol (crypto_544, 0B, 10);

Marking useful stmt: # DEBUG crypto_tag => NULL

Marking useful stmt: got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, crypto_544, crypto_tag_1477, sdp_type_546(D));

Marking useful stmt: # DEBUG got_crypto => got_crypto_547

Marking useful stmt: # DEBUG got_crypto => got_crypto_53

Marking useful stmt: # DEBUG maxptime => maxptime_38

Marking useful stmt: # DEBUG ptime => ptime_34

Marking useful stmt: # DEBUG attr => attr_548

Marking useful stmt: # DEBUG got_crypto => got_crypto_54

Marking useful stmt: # DEBUG maxptime => maxptime_39

Marking useful stmt: # DEBUG ptime => ptime_35

Marking useful stmt: # DEBUG attr => attr_31

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG connection => connection_554

Marking useful stmt: # DEBUG connection => connection_556

Marking useful stmt: # DEBUG connection => connection_124

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG x => 0

Marking useful stmt: # DEBUG map => map_559

Marking useful stmt: # DEBUG map_bit_rate => 0

Marking useful stmt: # DEBUG rm_encoding => rm_encoding_561

Marking useful stmt: # DEBUG rm_encoding => ""

Marking useful stmt: # DEBUG rm_encoding => rm_encoding_130

Marking useful stmt: # DEBUG best_te => best_te_568

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);

Marking useful stmt: # DEBUG best_te => best_te_18

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);

Marking useful stmt: # DEBUG cng_pt => cng_pt_573

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);

Marking useful stmt: switch_rtp_set_cng_pt (D.44605_576, D.44869_578);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG x => x_580

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG codec_ms => ptime_35

Marking useful stmt: # DEBUG codec_ms => maxptime_39

Marking useful stmt: # DEBUG codec_ms => codec_ms_86

Marking useful stmt: D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);

Marking useful stmt: # DEBUG codec_ms => codec_ms_589

Marking useful stmt: # DEBUG codec_ms => codec_ms_87

Marking useful stmt: # DEBUG payload => csui.173_591

Marking useful stmt: <L500>:

Marking useful stmt: <L501>:

Marking useful stmt: <L502>:

Marking useful stmt: # DEBUG map_bit_rate => NULL

Marking useful stmt: # DEBUG codec_ms => 33

Marking useful stmt: # DEBUG codec_ms => codec_ms_88

Marking useful stmt: # DEBUG remote_codec_rate => remote_codec_rate_596

Marking useful stmt: # DEBUG fmtp_remote_codec_rate => 0

Marking useful stmt: memset (&codec_fmtp, 0, 16);

Marking useful stmt: # DEBUG s => D.44893_598

Marking useful stmt: # DEBUG map_bit_rate => 32099

Marking useful stmt: D.44906_612 = switch_core_codec_parse_fmtp (D.44889_609, D.44893_610, D.44854_611, &codec_fmtp);

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_615

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_131

Marking useful stmt: # DEBUG codec_ms => codec_ms_618

Marking useful stmt: # DEBUG codec_ms => codec_ms_89

Marking useful stmt: # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_620

Marking useful stmt: # DEBUG map_bit_rate => map_bit_rate_132

Marking useful stmt: # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99

Marking useful stmt: # DEBUG codec_ms => codec_ms_90

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_630

Marking useful stmt: # DEBUG bit_rate => bit_rate_632

Marking useful stmt: # DEBUG codec_rate => codec_rate_633

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44925_636, remote_codec_rate.92_637, codec_ms_90, map_bit_rate_132, D.44927_638, D.44929_640, codec_rate_633, D.44931_642, bit_rate_632);

Marking useful stmt: # DEBUG s => D.44889_643

Marking useful stmt: # DEBUG match => match_656

Marking useful stmt: # DEBUG match => match_662

Marking useful stmt: # DEBUG remote_codec_rate => fmtp_remote_codec_rate_99

Marking useful stmt: # DEBUG remote_codec_rate => remote_codec_rate_96

Marking useful stmt: # DEBUG match => match_1

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG match => match_2

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG match => match_3

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44927_686, D.44985_687, D.44931_689);

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44927_696, D.44929_698, codec_rate_633, D.44931_700, bit_rate_632);

Marking useful stmt: # DEBUG nm_idx => nm_idx_702

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG m_idx => m_idx_704

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44927_705, D.44929_707, codec_rate_633, D.44931_709, bit_rate_632);

Marking useful stmt: # DEBUG nm_idx => nm_idx_115

Marking useful stmt: # DEBUG m_idx => m_idx_100

Marking useful stmt: # DEBUG remote_codec_rate => remote_codec_rate_97

Marking useful stmt: # DEBUG match => match_4

Marking useful stmt: # DEBUG i => i_711

Marking useful stmt: # DEBUG i => i_129

Marking useful stmt: # DEBUG nm_idx => nm_idx_116

Marking useful stmt: # DEBUG m_idx => m_idx_101

Marking useful stmt: # DEBUG remote_codec_rate => remote_codec_rate_98

Marking useful stmt: # DEBUG match => match_5

Marking useful stmt: # DEBUG m_idx => m_idx_102

Marking useful stmt: # DEBUG match => match_6

Marking useful stmt: # DEBUG nm_idx => nm_idx_117

Marking useful stmt: # DEBUG m_idx => m_idx_103

Marking useful stmt: # DEBUG codec_ms => codec_ms_91

Marking useful stmt: # DEBUG x => x_48

Marking useful stmt: # DEBUG cng_pt => cng_pt_24

Marking useful stmt: # DEBUG best_te => best_te_19

Marking useful stmt: # DEBUG match => match_7

Marking useful stmt: # DEBUG map => map_712

Marking useful stmt: # DEBUG map => map_128

Marking useful stmt: # DEBUG nm_idx => nm_idx_118

Marking useful stmt: # DEBUG m_idx => m_idx_104

Marking useful stmt: # DEBUG codec_ms => codec_ms_92

Marking useful stmt: # DEBUG x => x_49

Marking useful stmt: # DEBUG cng_pt => cng_pt_25

Marking useful stmt: # DEBUG best_te => best_te_20

Marking useful stmt: # DEBUG match => match_8

Marking useful stmt: # DEBUG nm_idx => nm_idx_119

Marking useful stmt: # DEBUG m_idx => m_idx_105

Marking useful stmt: # DEBUG codec_ms => codec_ms_93

Marking useful stmt: # DEBUG match => match_9

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG nm_idx => 0

Marking useful stmt: # DEBUG m_idx => 0

Marking useful stmt: # DEBUG nm_idx => nm_idx_120

Marking useful stmt: # DEBUG m_idx => m_idx_106

Marking useful stmt: # DEBUG match => match_10

Marking useful stmt: # DEBUG timp => 0B

Marking useful stmt: # DEBUG near_rate => near_rate_726

Marking useful stmt: # DEBUG near_match => near_match_727

Marking useful stmt: # DEBUG near_map => near_map_728

Marking useful stmt: switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45014_729, near_rate_145, codec_ms_93);

Marking useful stmt: num_732 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);

Marking useful stmt: # DEBUG num => num_732

Marking useful stmt: # DEBUG timp => timp_733

Marking useful stmt: # DEBUG timp => near_match_727

Marking useful stmt: # DEBUG timp => timp_134

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45027_738, D.45026_740, D.45028_741);

Marking useful stmt: # DEBUG match => 1

Marking useful stmt: # DEBUG m_idx => m_idx_745

Marking useful stmt: # DEBUG j => j_737

Marking useful stmt: # DEBUG j => j_133

Marking useful stmt: # DEBUG m_idx => m_idx_107

Marking useful stmt: # DEBUG match => match_11

Marking useful stmt: greedy_sort (smh_186, &matches, m_idx_107, codec_array_84, total_codecs_85);

Marking useful stmt: # DEBUG match => 1

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;

Marking useful stmt: smh_186->num_negotiated_codecs = 0;

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: pmap_761 = switch_core_media_add_payload_map (session_161(D), 0, D.45036_749, D.45037_751, sdp_type_546(D), D.45039_754, D.45041_756, D.45044_760, 1);

Marking useful stmt: # DEBUG pmap => pmap_761

Marking useful stmt: # DEBUG mimp => mimp_762

Marking useful stmt: # DEBUG mmap => mmap_763

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_761;

Marking useful stmt: D.44750_764->current = 1;

Marking useful stmt: switch_rtp_set_default_payload (D.44605_766, D.45049_767);

Marking useful stmt: D.45051_769 = switch_core_perform_session_strdup (session_161(D), D.45050_768, "src/switch_core_media.c", &__func__, 3535);

Marking useful stmt: pmap_761->rm_encoding = D.45051_769;

Marking useful stmt: D.45053_771 = switch_core_perform_session_strdup (session_161(D), D.45052_770, "src/switch_core_media.c", &__func__, 3536);

Marking useful stmt: pmap_761->iananame = D.45053_771;

Marking useful stmt: pmap_761->recv_pt = D.45055_773;

Marking useful stmt: pmap_761->rm_rate = D.45056_774;

Marking useful stmt: pmap_761->adv_rm_rate = D.45056_775;

Marking useful stmt: pmap_761->rm_rate = D.45060_778;

Marking useful stmt: pmap_761->codec_ms = D.45063_781;

Marking useful stmt: pmap_761->bitrate = D.45065_783;

Marking useful stmt: # DEBUG __nptr => D.45067_785

Marking useful stmt: D.47923_1486 = strtol (D.45067_785, 0B, 10);

Marking useful stmt: pmap_761->channels = D.47923_146;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");

Marking useful stmt: pmap_761->adv_channels = 1;

Marking useful stmt: pmap_761->adv_channels = 2;

Marking useful stmt: # DEBUG s => D.45080_791

Marking useful stmt: D.45083_794 = switch_stristr ("stereo=1", D.45080_793);

Marking useful stmt: pmap_761->channels = 2;

Marking useful stmt: pmap_761->channels = 1;

Marking useful stmt: pmap_761->adv_channels = D.45074_795;

Marking useful stmt: D.45087_797 = switch_core_perform_session_strdup (session_161(D), D.45086_796, "src/switch_core_media.c", &__func__, 3563);

Marking useful stmt: pmap_761->remote_sdp_ip = D.45087_797;

Marking useful stmt: pmap_761->remote_sdp_port = D.45088_799;

Marking useful stmt: D.45089_801 = switch_core_perform_session_strdup (session_161(D), D.45080_800, "src/switch_core_media.c", &__func__, 3565);

Marking useful stmt: pmap_761->rm_fmtp = D.45089_801;

Marking useful stmt: pmap_761->agreed_pt = D.45055_803;

Marking useful stmt: smh_186->negotiated_codecs[D.44655_804] = mimp_762;

Marking useful stmt: smh_186->num_negotiated_codecs = D.45090_805;

Marking useful stmt: pmap_761->recv_pt = D.45055_807;

Marking useful stmt: # DEBUG j => j_808

Marking useful stmt: # DEBUG j => j_135

Marking useful stmt: # DEBUG match => match_12

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.44767_811);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_812, "remote_media_ip", D.44760_814, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_815, "remote_media_port", &tmp, 1);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.45094_818);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_819, "rtp_audio_recv_pt", &tmp, 1);

Marking useful stmt: # DEBUG codec => D.45095_820

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;

Marking useful stmt: D.45100_824 = switch_core_media_set_codec (session_161(D), 0, D.45099_823);

Marking useful stmt: # DEBUG got_audio => 1

Marking useful stmt: check_ice (smh_186, 0, sdp_198, m_28);

Marking useful stmt: # DEBUG got_audio => got_audio_65

Marking useful stmt: # DEBUG match => match_13

Marking useful stmt: D.45108_827 = switch_media_handle_test_media_flag (smh_186, 8);

Marking useful stmt: D.45110_829 = switch_channel_test_flag (D.44530_828, 93);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45112_832);

Marking useful stmt: # DEBUG best_te => best_te_834

Marking useful stmt: # DEBUG best_te => best_te_21

Marking useful stmt: D.45115_835 = switch_channel_direction (channel_162);

Marking useful stmt: D.44471_836->te = best_te_21;

Marking useful stmt: # DEBUG D#11 => D.44471_836->te

Marking useful stmt: # DEBUG te => D#11

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_838);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_839, "dtmf_type", "rfc2833", 1);

Marking useful stmt: D.44471_840->dtmf_type = 0;

Marking useful stmt: switch_rtp_set_telephony_event (D.44605_842, best_te_21);

Marking useful stmt: switch_channel_set_variable_printf (D.44530_843, "rtp_2833_send_payload", "%d", D.44857_844);

Marking useful stmt: D.44471_846->te = best_te_21;

Marking useful stmt: D.44471_846->recv_te = D.45111_847;

Marking useful stmt: # DEBUG te => te_848

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45121_849);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_850, "dtmf_type", "rfc2833", 1);

Marking useful stmt: D.44471_851->dtmf_type = 0;

Marking useful stmt: switch_rtp_set_telephony_event (D.44605_853, te_848);

Marking useful stmt: switch_channel_set_variable_printf (D.44530_854, "rtp_2833_send_payload", "%d", D.45121_855);

Marking useful stmt: switch_rtp_set_telephony_recv_event (D.44605_856, te_848);

Marking useful stmt: switch_channel_set_variable_printf (D.44530_857, "rtp_2833_recv_payload", "%d", D.45121_858);

Marking useful stmt: D.45125_859 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);

Marking useful stmt: D.45126_860 = switch_false (D.45125_859);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_861, "dtmf_type", "info", 1);

Marking useful stmt: D.44471_862->dtmf_type = 1;

Marking useful stmt: D.44471_864->te = 0;

Marking useful stmt: D.44471_864->recv_te = D.45111_865;

Marking useful stmt: # DEBUG D#12 => D.44471_864->recv_te

Marking useful stmt: # DEBUG te => D#12

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_867, "dtmf_type", "none", 1);

Marking useful stmt: D.44471_868->dtmf_type = 2;

Marking useful stmt: D.44471_870->te = 0;

Marking useful stmt: D.44471_870->recv_te = D.45111_871;

Marking useful stmt: # DEBUG D#13 => D.44471_870->recv_te

Marking useful stmt: # DEBUG te => D#13

Marking useful stmt: # DEBUG mimp => 0B

Marking useful stmt: # DEBUG vmatch => 0

Marking useful stmt: # DEBUG nm_idx => 0

Marking useful stmt: # DEBUG m_idx => 0

Marking useful stmt: memset (&matches, 0, 480);

Marking useful stmt: memset (&near_matches, 0, 480);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_879, "video_possible", "true", 1);

Marking useful stmt: # DEBUG connection => connection_880

Marking useful stmt: # DEBUG connection => connection_882

Marking useful stmt: # DEBUG connection => connection_125

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG map => map_884

Marking useful stmt: D.45138_885 = switch_rtp_has_dtls ();

Marking useful stmt: D.45141_886 = dtls_ok (session_161(D));

Marking useful stmt: # DEBUG attr => attr_887

Marking useful stmt: # DEBUG s => D.44619_890

Marking useful stmt: # DEBUG got_video_crypto => 1

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_57

Marking useful stmt: # DEBUG attr => attr_893

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_58

Marking useful stmt: # DEBUG attr => attr_32

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_59

Marking useful stmt: # DEBUG attr => attr_894

Marking useful stmt: # DEBUG s => D.44619_900

Marking useful stmt: D.45161_903 = switch_stristr ("fir", D.44619_902);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45165_905;

Marking useful stmt: D.44471_906->rtcp_video_interval_msec = "10000";

Marking useful stmt: # DEBUG __s2_len => 1

Marking useful stmt: # DEBUG __s1 => __s1_911

Marking useful stmt: # DEBUG __result => __result_917

Marking useful stmt: # DEBUG __result => D.45187_923

Marking useful stmt: # DEBUG __result => __result_140

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_953, "rtp_remote_video_rtcp_port", D.44619_954, 1);

Marking useful stmt: # DEBUG __nptr => D.44619_955

Marking useful stmt: D.47947_1500 = strtol (D.44619_955, 0B, 10);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45214_957;

Marking useful stmt: D.44471_960->rtcp_video_interval_msec = "5000";

Marking useful stmt: # DEBUG s => D.44619_963

Marking useful stmt: D.45228_969 = switch_channel_get_variable_dup (D.44530_968, "rtp_allow_crypto_in_avp", 1, -1);

Marking useful stmt: D.45229_970 = switch_true (D.45228_969);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

Marking useful stmt: # DEBUG match => 0

Marking useful stmt: # DEBUG crypto => crypto_976

Marking useful stmt: # DEBUG __nptr => crypto_976

Marking useful stmt: crypto_tag_1503 = strtol (crypto_976, 0B, 10);

Marking useful stmt: # DEBUG crypto_tag => NULL

Marking useful stmt: got_video_crypto_978 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, crypto_976, crypto_tag_1503, sdp_type_546(D));

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_978

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_60

Marking useful stmt: # DEBUG attr => attr_979

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_61

Marking useful stmt: # DEBUG attr => attr_33

Marking useful stmt: # DEBUG rm_encoding => rm_encoding_980

Marking useful stmt: # DEBUG rm_encoding => ""

Marking useful stmt: # DEBUG rm_encoding => rm_encoding_137

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_986

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.45242_989 = switch_channel_direction (D.44530_988);

Marking useful stmt: D.45245_991 = switch_channel_test_flag (D.44530_990, 114);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45249_993, D.45250_994, D.45252_996);

Marking useful stmt: # DEBUG s => D.45256_997

Marking useful stmt: # DEBUG vmatch => vmatch_1010

Marking useful stmt: # DEBUG vmatch => vmatch_1013

Marking useful stmt: # DEBUG vmatch => vmatch_138

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45250_1016, D.45252_1018);

Marking useful stmt: # DEBUG m_idx => m_idx_1019

Marking useful stmt: # DEBUG m_idx => m_idx_109

Marking useful stmt: # DEBUG i => i_1021

Marking useful stmt: # DEBUG i => i_139

Marking useful stmt: # DEBUG m_idx => m_idx_110

Marking useful stmt: # DEBUG map => map_1022

Marking useful stmt: # DEBUG map => map_136

Marking useful stmt: # DEBUG m_idx => m_idx_111

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_62

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");

Marking useful stmt: # DEBUG vmatch => 0

Marking useful stmt: # DEBUG m_idx => 0

Marking useful stmt: # DEBUG m_idx => m_idx_112

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: greedy_sort (smh_186, &matches, m_idx_112, codec_array_84, total_codecs_85);

Marking useful stmt: # DEBUG vmatch => 1

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;

Marking useful stmt: # DEBUG j => 0

Marking useful stmt: pmap_1045 = switch_core_media_add_payload_map (session_161(D), 1, D.45276_1033, D.45277_1035, sdp_type_546(D), D.45279_1038, D.45281_1040, D.45284_1044, 1);

Marking useful stmt: # DEBUG pmap => pmap_1045

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1045;

Marking useful stmt: D.45287_1046->current = 1;

Marking useful stmt: switch_rtp_set_default_payload (D.45288_1048, D.45291_1049);

Marking useful stmt: # DEBUG mimp => mimp_1050

Marking useful stmt: # DEBUG map => map_1051

Marking useful stmt: D.45292_1053 = switch_core_perform_session_strdup (session_161(D), D.45256_1052, "src/switch_core_media.c", &__func__, 3804);

Marking useful stmt: pmap_1045->rm_encoding = D.45292_1053;

Marking useful stmt: pmap_1045->recv_pt = D.45293_1055;

Marking useful stmt: pmap_1045->rm_rate = D.45263_1056;

Marking useful stmt: pmap_1045->codec_ms = D.45296_1059;

Marking useful stmt: D.45297_1061 = switch_core_perform_session_strdup (session_161(D), D.45086_1060, "src/switch_core_media.c", &__func__, 3810);

Marking useful stmt: pmap_1045->remote_sdp_ip = D.45297_1061;

Marking useful stmt: pmap_1045->remote_sdp_port = D.45088_1063;

Marking useful stmt: D.45299_1065 = switch_core_perform_session_strdup (session_161(D), D.45298_1064, "src/switch_core_media.c", &__func__, 3813);

Marking useful stmt: pmap_1045->rm_fmtp = D.45299_1065;

Marking useful stmt: pmap_1045->agreed_pt = D.45293_1067;

Marking useful stmt: # DEBUG j => j_1068

Marking useful stmt: # DEBUG j => j_141

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.45301_1071);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_1072, "remote_video_ip", D.45302_1074, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_1075, "remote_video_port", &tmp, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_1076, "rtp_video_fmtp", D.45303_1078, 1);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.45305_1081);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_1082, "rtp_video_pt", &tmp, 1);

Marking useful stmt: switch_core_media_check_video_codecs (session_161(D));

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.45307_1085);

Marking useful stmt: switch_channel_set_variable_var_check (D.44530_1086, "rtp_video_recv_pt", &tmp, 1);

Marking useful stmt: # DEBUG match => 1

Marking useful stmt: # DEBUG match => match_14

Marking useful stmt: # DEBUG codec => D.45313_1091

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;

Marking useful stmt: D.45317_1093 = switch_core_media_set_video_codec (session_161(D), 0);

Marking useful stmt: check_ice (smh_186, 1, sdp_198, m_28);

Marking useful stmt: # DEBUG nm_idx => nm_idx_121

Marking useful stmt: # DEBUG m_idx => m_idx_113

Marking useful stmt: # DEBUG codec_ms => codec_ms_94

Marking useful stmt: # DEBUG got_audio => got_audio_66

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_63

Marking useful stmt: # DEBUG got_crypto => got_crypto_55

Marking useful stmt: # DEBUG cng_pt => cng_pt_26

Marking useful stmt: # DEBUG best_te => best_te_22

Marking useful stmt: # DEBUG match => match_15

Marking useful stmt: # DEBUG m => m_1094

Marking useful stmt: # DEBUG nm_idx => nm_idx_122

Marking useful stmt: # DEBUG m_idx => m_idx_114

Marking useful stmt: # DEBUG codec_ms => codec_ms_95

Marking useful stmt: # DEBUG got_webrtc => got_webrtc_79

Marking useful stmt: # DEBUG got_udptl => got_udptl_77

Marking useful stmt: # DEBUG got_savp => got_savp_75

Marking useful stmt: # DEBUG got_video_savp => got_video_savp_73

Marking useful stmt: # DEBUG got_video_avp => got_video_avp_71

Marking useful stmt: # DEBUG got_avp => got_avp_69

Marking useful stmt: # DEBUG got_audio => got_audio_67

Marking useful stmt: # DEBUG got_video_crypto => got_video_crypto_64

Marking useful stmt: # DEBUG got_crypto => got_crypto_56

Marking useful stmt: # DEBUG m => m_28

Marking useful stmt: # DEBUG cng_pt => cng_pt_27

Marking useful stmt: # DEBUG best_te => best_te_23

Marking useful stmt: # DEBUG match => match_16

Marking useful stmt: done:

Marking useful stmt: # DEBUG match => match_17

Marking useful stmt: sdp_parser_free (parser_196);

Marking useful stmt: D.44471_1095->cng_pt = cng_pt_27;

Marking useful stmt: return match_142;

(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = m_28)
(get_scalar_evolution 
  (scalar = m_28)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_28 = PHI <m_370(88), m_1094(423)>
)
  (init_cond = m_370))
(analyze_evolution_in_loop 
  (loop_phi_node = m_28 = PHI <m_370(88), m_1094(423)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 88 
  (scalar = m_28)
  (scalar_evolution = m_28))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = m_28)
(get_scalar_evolution 
  (scalar = m_28)
  (scalar_evolution = m_28))
(set_scalar_evolution 
  instantiated_below = 88 
  (scalar = m_28)
  (scalar_evolution = m_28))
)
can not prove finiteness of loop 4
Marking useful stmt: if (connection_124 == 0B)

Marking useful stmt: if (D.44681_873 == 3)

Marking useful stmt: if (D.44697_874 != 0)

Marking useful stmt: if (map_136 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = j_135)
(get_scalar_evolution 
  (scalar = j_135)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_135 = PHI <0(281), j_808(301)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_135 = PHI <0(281), j_808(301)>
)
(add_to_evolution 
  (loop_nb = 15)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_15))
  (evolution_function = {0, +, 1}_15))
(set_scalar_evolution 
  instantiated_below = 281 
  (scalar = j_135)
  (scalar_evolution = {0, +, 1}_15))
)
(analyze_scalar_evolution 
  (loop_nb = 15)
  (scalar = m_idx_107)
(get_scalar_evolution 
  (scalar = m_idx_107)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 15
  exit condition [0, + , 1](no_overflow) < m_idx_107
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_107 < 0
    # of iterations (unsigned int) m_idx_107, bounded by 2147483647
Found loop 15 to be finite: iterating (unsigned int) m_idx_107 times
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = j_133)
(get_scalar_evolution 
  (scalar = j_133)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_133 = PHI <j_1118(277), j_737(276)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_133 = PHI <j_1118(277), j_737(276)>
)
(add_to_evolution 
  (loop_nb = 14)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_14))
  (evolution_function = {0, +, 1}_14))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = j_133)
  (scalar_evolution = {0, +, 1}_14))
)
(analyze_scalar_evolution 
  (loop_nb = 14)
  (scalar = nm_idx_120)
(get_scalar_evolution 
  (scalar = nm_idx_120)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 14
  exit condition [0, + , 1](no_overflow) < nm_idx_120
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if nm_idx_120 < 0
    # of iterations (unsigned int) nm_idx_120, bounded by 2147483647
Found loop 14 to be finite: iterating (unsigned int) nm_idx_120 times
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = map_128)
(get_scalar_evolution 
  (scalar = map_128)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_128 = PHI <map_559(183), map_712(262)>
)
  (init_cond = map_559))
(analyze_evolution_in_loop 
  (loop_phi_node = map_128 = PHI <map_559(183), map_712(262)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 183 
  (scalar = map_128)
  (scalar_evolution = map_128))
)
(analyze_scalar_evolution 
  (loop_nb = 12)
  (scalar = map_128)
(get_scalar_evolution 
  (scalar = map_128)
  (scalar_evolution = map_128))
(set_scalar_evolution 
  instantiated_below = 183 
  (scalar = map_128)
  (scalar_evolution = map_128))
)
can not prove finiteness of loop 12
Marking useful stmt: if (D.44848_563 == 0)

Marking useful stmt: if (D.44863_571 == 0)

Marking useful stmt: if (x_49 < 0)

Marking useful stmt: if (match_8 != 0)

Marking useful stmt: if (m_idx_102 > 29)

can not prove finiteness of loop 13
Marking useful stmt: if (D.44922_634 != 0)

Marking useful stmt: if (match_3 != 0)

Marking useful stmt: if (D.44994_693 != D.44930_694)

Marking useful stmt: if (remote_codec_rate_96 != codec_rate_633)

Marking useful stmt: if (m_idx_704 > 29)

(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = attr_31)
(get_scalar_evolution 
  (scalar = attr_31)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_31 = PHI <attr_507(152), attr_548(174)>
)
  (init_cond = attr_507))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_31 = PHI <attr_507(152), attr_548(174)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 152 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
)
(analyze_scalar_evolution 
  (loop_nb = 11)
  (scalar = attr_31)
(get_scalar_evolution 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
(set_scalar_evolution 
  instantiated_below = 152 
  (scalar = attr_31)
  (scalar_evolution = attr_31))
)
can not prove finiteness of loop 11
Marking useful stmt: if (D.44619_510 != 0B)

Marking useful stmt: if (D.44619_521 != 0B)

Marking useful stmt: if (D.44619_526 != 0B)

Marking useful stmt: if (got_crypto_54 <= 0)

Marking useful stmt: if (D.44815_530 == 0)

Marking useful stmt: if (D.47900_1476 == 0)

Marking useful stmt: if (D.44822_535 == 0)

Marking useful stmt: if (D.44826_538 == 0)

Marking useful stmt: if (D.44831_542 != 0)

(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_30 = PHI <attr_500(143), attr_506(150)>
)
  (init_cond = attr_500))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_30 = PHI <attr_500(143), attr_506(150)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 143 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = attr_30)
(get_scalar_evolution 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
(set_scalar_evolution 
  instantiated_below = 143 
  (scalar = attr_30)
  (scalar_evolution = attr_30))
)
can not prove finiteness of loop 10
Marking useful stmt: if (attr_30 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = j_141)
(get_scalar_evolution 
  (scalar = j_141)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
j_141 = PHI <0(405), j_1068(409)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = j_141 = PHI <0(405), j_1068(409)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 405 
  (scalar = j_141)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = m_idx_112)
(get_scalar_evolution 
  (scalar = m_idx_112)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) < m_idx_112
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if m_idx_112 < 0
    # of iterations (unsigned int) m_idx_112, bounded by 2147483647
Found loop 6 to be finite: iterating (unsigned int) m_idx_112 times
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_136)
(get_scalar_evolution 
  (scalar = map_136)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_136 = PHI <map_884(333), map_1022(398)>
)
  (init_cond = map_884))
(analyze_evolution_in_loop 
  (loop_phi_node = map_136 = PHI <map_884(333), map_1022(398)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 333 
  (scalar = map_136)
  (scalar_evolution = map_136))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = map_136)
(get_scalar_evolution 
  (scalar = map_136)
  (scalar_evolution = map_136))
(set_scalar_evolution 
  instantiated_below = 333 
  (scalar = map_136)
  (scalar_evolution = map_136))
)
can not prove finiteness of loop 5
Marking useful stmt: if (attr_33 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = i_139)
(get_scalar_evolution 
  (scalar = i_139)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
i_139 = PHI <0(378), i_1021(396)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = i_139 = PHI <0(378), i_1021(396)>
)
(add_to_evolution 
  (loop_nb = 9)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_9))
  (evolution_function = {0, +, 1}_9))
(set_scalar_evolution 
  instantiated_below = 378 
  (scalar = i_139)
  (scalar_evolution = {0, +, 1}_9))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = total_codecs_85)
(get_scalar_evolution 
  (scalar = total_codecs_85)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 9
  exit condition [0, + , 1](no_overflow) < total_codecs_85
  bounds on difference of bases: -2147483648 ... 2147483647
  result:
    zero if total_codecs_85 < 0
    # of iterations (unsigned int) total_codecs_85, bounded by 2147483647
Found loop 9 to be finite: iterating (unsigned int) total_codecs_85 times
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = attr_33)
(get_scalar_evolution 
  (scalar = attr_33)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_33 = PHI <attr_894(345), attr_979(374)>
)
  (init_cond = attr_894))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_33 = PHI <attr_894(345), attr_979(374)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 345 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = attr_33)
(get_scalar_evolution 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
(set_scalar_evolution 
  instantiated_below = 345 
  (scalar = attr_33)
  (scalar_evolution = attr_33))
)
can not prove finiteness of loop 8
Marking useful stmt: if (D.44619_897 != 0B)

Marking useful stmt: if (D.45155_899 == 0)

Marking useful stmt: if (__result_140 == 0)

Marking useful stmt: if (got_video_crypto_61 == 0)

Marking useful stmt: if (D.45220_962 == 0)

Marking useful stmt: if (D.47950_1502 == 0)

Marking useful stmt: if (D.44822_967 == 0)

Marking useful stmt: if (D.45229_970 == 0)

Marking useful stmt: if (D.44831_974 != 0)

(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_32 = PHI <attr_887(336), attr_893(343)>
)
  (init_cond = attr_887))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_32 = PHI <attr_887(336), attr_893(343)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 336 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = attr_32)
(get_scalar_evolution 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
(set_scalar_evolution 
  instantiated_below = 336 
  (scalar = attr_32)
  (scalar_evolution = attr_32))
)
can not prove finiteness of loop 7
Marking useful stmt: if (attr_32 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_29 = PHI <attr_303(43), attr_334(63)>
)
  (init_cond = attr_303))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_29 = PHI <attr_303(43), attr_334(63)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_29)
(get_scalar_evolution 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = attr_29)
  (scalar_evolution = attr_29))
)
can not prove finiteness of loop 3
Marking useful stmt: if (attr_29 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47875_1465)
(get_scalar_evolution 
  (scalar = D.47875_1465)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.47875_1465)
(get_scalar_evolution 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = D.47875_1465)
  (scalar_evolution = D.47875_1465))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_1463)
(get_scalar_evolution 
  (scalar = pmap_1463)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
)
  (init_cond = pmap_1462))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_1463)
(get_scalar_evolution 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
(set_scalar_evolution 
  instantiated_below = 16 
  (scalar = pmap_1463)
  (scalar_evolution = pmap_1463))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.47875_1465 != 0)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47872_1461)
(get_scalar_evolution 
  (scalar = D.47872_1461)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.47872_1461)
(get_scalar_evolution 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = D.47872_1461)
  (scalar_evolution = D.47872_1461))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1459)
(get_scalar_evolution 
  (scalar = pmap_1459)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
)
  (init_cond = pmap_1458))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_1459)
(get_scalar_evolution 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
(set_scalar_evolution 
  instantiated_below = 12 
  (scalar = pmap_1459)
  (scalar_evolution = pmap_1459))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.47872_1461 != 0)


Processing worklist:
processing: if (D.47872_1461 != 0)

Marking useful stmt: if (pmap_1459 != 0B)

marking necessary through D.47872_1461 stmt D.47872_1461 = pmap_1459->allocated;
processing: D.47872_1461 = pmap_1459->allocated;

marking necessary through pmap_1459 stmt pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
marking necessary through .MEM_1176 stmt near_matches = {};
marking necessary through .MEM_1175 stmt matches = {};
processing: matches = {};

processing: near_matches = {};

processing: pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>

Marking useful stmt: if (sdp_198 == 0B)

marking necessary through pmap_1458 stmt pmap_1458 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;
marking necessary through pmap_1460 stmt pmap_1460 = pmap_1459->next;
processing: pmap_1460 = pmap_1459->next;

processing: pmap_1458 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;

marking necessary through smh_186 stmt smh_186 = session_161(D)->media_handle;
processing: smh_186 = session_161(D)->media_handle;

Marking useful stmt: if (session_161(D) == 0B)

processing: if (session_161(D) == 0B)

processing: if (sdp_198 == 0B)

Marking useful stmt: if (parser_196 == 0B)

processing: if (parser_196 == 0B)

Marking useful stmt: if (smh_186 == 0B)

processing: if (smh_186 == 0B)

processing: if (pmap_1459 != 0B)

processing: if (D.47875_1465 != 0)

Marking useful stmt: if (pmap_1463 != 0B)

marking necessary through D.47875_1465 stmt D.47875_1465 = pmap_1463->allocated;
processing: D.47875_1465 = pmap_1463->allocated;

marking necessary through pmap_1463 stmt pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
processing: pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>

marking necessary through pmap_1462 stmt pmap_1462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;
marking necessary through pmap_1464 stmt pmap_1464 = pmap_1463->next;
processing: pmap_1464 = pmap_1463->next;

processing: pmap_1462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;

processing: if (pmap_1463 != 0B)

processing: if (attr_29 != 0B)

marking necessary through attr_29 stmt attr_29 = PHI <attr_303(43), attr_334(63)>
processing: attr_29 = PHI <attr_303(43), attr_334(63)>

marking necessary through attr_303 stmt attr_303 = sdp_198->sdp_attributes;
marking necessary through attr_334 stmt attr_334 = attr_29->a_next;
processing: attr_334 = attr_29->a_next;

processing: attr_303 = sdp_198->sdp_attributes;

processing: if (attr_32 != 0B)

Marking useful stmt: if (D.45141_886 != 0)

marking necessary through attr_32 stmt attr_32 = PHI <attr_887(336), attr_893(343)>
processing: attr_32 = PHI <attr_887(336), attr_893(343)>

marking necessary through attr_887 stmt attr_887 = m_28->m_attributes;
marking necessary through attr_893 stmt attr_893 = attr_32->a_next;
processing: attr_893 = attr_32->a_next;

marking necessary through .MEM_1321 stmt matches[m_idx_101].map = map_128;
marking necessary through .MEM_1320 stmt matches[m_idx_101].imp = imp_630;
marking necessary through .MEM_1319 stmt matches[m_idx_101].rate = codec_rate.94_703;
marking necessary through .MEM_1318 stmt matches[m_idx_101].codec_idx = i_129;
marking necessary through .MEM_1302 stmt codec_fmtp = {};
marking necessary through .MEM_1317 stmt near_matches[nm_idx_116].map = map_128;
marking necessary through .MEM_1316 stmt near_matches[nm_idx_116].imp = imp_630;
marking necessary through .MEM_1315 stmt near_matches[nm_idx_116].rate = remote_codec_rate.92_701;
marking necessary through .MEM_1314 stmt near_matches[nm_idx_116].codec_idx = i_129;
marking necessary through .MEM_1331 stmt matches[m_idx_106].map = near_map_728;
marking necessary through .MEM_1330 stmt matches[m_idx_106].imp = timp_134;
marking necessary through .MEM_1329 stmt matches[m_idx_106].rate = near_rate.96_744;
marking necessary through .MEM_1328 stmt matches[m_idx_106].codec_idx = D.45029_743;
marking necessary through .MEM_1325 stmt prefs[0] = &tmp;
marking necessary through .MEM_1424 stmt matches[m_idx_110].map = map_136;
marking necessary through .MEM_1423 stmt matches[m_idx_110].imp = imp_986;
processing: matches[m_idx_110].imp = imp_986;

Marking useful stmt: if (D.45263_1014 == D.45264_1015)

marking necessary through m_idx_110 stmt m_idx_110 = PHI <m_idx_111(378), m_idx_109(396)>
marking necessary through imp_986 stmt imp_986 = *D.45238_985;
processing: imp_986 = *D.45238_985;

Marking useful stmt: if (i_139 < total_codecs_85)

marking necessary through D.45238_985 stmt D.45238_985 = codec_array_84 + D.45237_984;
processing: D.45238_985 = codec_array_84 + D.45237_984;

marking necessary through codec_array_84 stmt codec_array_84 = PHI <codec_array_360(81), codec_array_190(82), codec_array_363(83)>
marking necessary through D.45237_984 stmt D.45237_984 = i.99_983 * 4;
processing: D.45237_984 = i.99_983 * 4;

marking necessary through i.99_983 stmt i.99_983 = (unsigned int) i_139;
processing: i.99_983 = (unsigned int) i_139;

marking necessary through i_139 stmt i_139 = PHI <0(378), i_1021(396)>
processing: i_139 = PHI <0(378), i_1021(396)>

marking necessary through i_1021 stmt i_1021 = i_139 + 1;
processing: i_1021 = i_139 + 1;

processing: codec_array_84 = PHI <codec_array_360(81), codec_array_190(82), codec_array_363(83)>

marking necessary through codec_array_360 stmt codec_array_360 = &smh_186->negotiated_codecs;
marking necessary through codec_array_190 stmt codec_array_190 = &smh_186->codecs;
marking necessary through codec_array_363 stmt codec_array_363 = &smh_186->codecs;
Marking useful stmt: if (D.44655_359 != 0)

Marking useful stmt: if (reneg_83 == 0)

Marking useful stmt: if (reneg_83 != 0)

processing: if (reneg_83 != 0)

marking necessary through reneg_83 stmt reneg_83 = PHI <reneg_82(77), 0(78)>
processing: reneg_83 = PHI <reneg_82(77), 0(78)>

marking necessary through reneg_82 stmt reneg_82 = PHI <reneg_81(74), reneg_353(75), reneg_356(76)>
Marking useful stmt: if (D.44649_357 != 0B)

processing: if (D.44649_357 != 0B)

marking necessary through D.44649_357 stmt D.44649_357 = session_161(D)->bugs;
processing: D.44649_357 = session_161(D)->bugs;

processing: reneg_82 = PHI <reneg_81(74), reneg_353(75), reneg_356(76)>

marking necessary through reneg_81 stmt reneg_81 = PHI <1(67), 1(69), 1(70), 1(71), reneg_349(72), reneg_352(73)>
Marking useful stmt: if (reneg_81 != 0)

Marking useful stmt: if (val_355 != 0B)

processing: if (val_355 != 0B)

processing: if (reneg_81 != 0)

processing: reneg_81 = PHI <1(67), 1(69), 1(70), 1(71), reneg_349(72), reneg_352(73)>

Marking useful stmt: if (val_341 == 0B)

Marking useful stmt: if (D.44635_342 == 0)

Marking useful stmt: if (D.44636_344 == 0)

Marking useful stmt: if (D.44640_348 != 0)

Marking useful stmt: if (val_351 != 0B)

processing: if (val_351 != 0B)

processing: if (D.44640_348 != 0)

processing: if (D.44636_344 == 0)

marking necessary through D.44636_344 stmt D.44636_344 = D.44471_343->hold_laps;
processing: D.44636_344 = D.44471_343->hold_laps;

marking necessary through D.44471_343 stmt D.44471_343 = smh_186->mparams;
processing: D.44471_343 = smh_186->mparams;

processing: if (D.44635_342 == 0)

processing: if (val_341 == 0B)

Marking useful stmt: if (D.44631_339 == 0)

processing: if (D.44631_339 == 0)

processing: if (reneg_83 == 0)

processing: if (D.44655_359 != 0)

marking necessary through D.44655_359 stmt D.44655_359 = smh_186->num_negotiated_codecs;
processing: D.44655_359 = smh_186->num_negotiated_codecs;

processing: codec_array_363 = &smh_186->codecs;

processing: codec_array_190 = &smh_186->codecs;

processing: codec_array_360 = &smh_186->negotiated_codecs;

processing: if (i_139 < total_codecs_85)

marking necessary through total_codecs_85 stmt total_codecs_85 = PHI <total_codecs_361(81), total_codecs_192(82), total_codecs_365(83)>
processing: total_codecs_85 = PHI <total_codecs_361(81), total_codecs_192(82), total_codecs_365(83)>

marking necessary through total_codecs_361 stmt total_codecs_361 = smh_186->num_negotiated_codecs;
marking necessary through total_codecs_192 stmt total_codecs_192 = D.44471_191->num_codecs;
marking necessary through total_codecs_365 stmt total_codecs_365 = D.44471_364->num_codecs;
processing: total_codecs_365 = D.44471_364->num_codecs;

marking necessary through D.44471_364 stmt D.44471_364 = smh_186->mparams;
processing: D.44471_364 = smh_186->mparams;

processing: total_codecs_192 = D.44471_191->num_codecs;

marking necessary through D.44471_191 stmt D.44471_191 = smh_186->mparams;
processing: D.44471_191 = smh_186->mparams;

processing: total_codecs_361 = smh_186->num_negotiated_codecs;

processing: m_idx_110 = PHI <m_idx_111(378), m_idx_109(396)>

marking necessary through m_idx_111 stmt m_idx_111 = PHI <0(333), m_idx_110(398)>
marking necessary through m_idx_109 stmt m_idx_109 = PHI <m_idx_110(380), m_idx_110(383), m_idx_110(393), m_idx_110(392), m_idx_1019(394)>
processing: m_idx_109 = PHI <m_idx_110(380), m_idx_110(383), m_idx_110(393), m_idx_110(392), m_idx_1019(394)>

marking necessary through m_idx_1019 stmt m_idx_1019 = m_idx_110 + 1;
Marking useful stmt: if (D.45239_987 != 1)

Marking useful stmt: if (D.45245_991 != 0)

Marking useful stmt: if (vmatch_138 != 0)

Marking useful stmt: if (D.45242_989 == 0)

processing: if (D.45242_989 == 0)

processing: if (vmatch_138 != 0)

marking necessary through vmatch_138 stmt vmatch_138 = PHI <vmatch_1010(390), vmatch_1013(391)>
processing: vmatch_138 = PHI <vmatch_1010(390), vmatch_1013(391)>

marking necessary through vmatch_1010 stmt vmatch_1010 = D.45249_1007 == D.45252_1009;
marking necessary through vmatch_1013 stmt vmatch_1013 = D.45260_1012 == 0;
Marking useful stmt: if (D.45249_1005 <= 95)

Marking useful stmt: if (D.44938_1002 != 0)

processing: if (D.44938_1002 != 0)

Marking useful stmt: if (D.47957_1505 != 0)

marking necessary through D.44938_1002 stmt D.44938_1002 = D.44937_1001 & 1;
processing: D.44938_1002 = D.44937_1001 & 1;

marking necessary through D.44937_1001 stmt D.44937_1001 = (int) D.44821_1000;
processing: D.44937_1001 = (int) D.44821_1000;

marking necessary through D.44821_1000 stmt D.44821_1000 = D.44471_999->ndlb;
processing: D.44821_1000 = D.44471_999->ndlb;

marking necessary through D.44471_999 stmt D.44471_999 = smh_186->mparams;
processing: D.44471_999 = smh_186->mparams;

processing: if (D.47957_1505 != 0)

marking necessary through D.47957_1505 stmt D.47957_1505 = PHI <1(384), 1(385), 0(386)>
processing: D.47957_1505 = PHI <1(384), 1(385), 0(386)>

Marking useful stmt: if (D.45256_997 == 0B)

Marking useful stmt: if (D.47958_1504 == 0)

processing: if (D.47958_1504 == 0)

marking necessary through D.47958_1504 stmt D.47958_1504 = *D.45256_997;
processing: D.47958_1504 = *D.45256_997;

marking necessary through D.45256_997 stmt D.45256_997 = map_136->rm_encoding;
processing: D.45256_997 = map_136->rm_encoding;

marking necessary through map_136 stmt map_136 = PHI <map_884(333), map_1022(398)>
processing: map_136 = PHI <map_884(333), map_1022(398)>

Marking useful stmt: if (connection_125 == 0B)

marking necessary through map_884 stmt map_884 = m_28->m_rtpmaps;
marking necessary through map_1022 stmt map_1022 = map_136->rm_next;
processing: map_1022 = map_136->rm_next;

processing: map_884 = m_28->m_rtpmaps;

marking necessary through m_28 stmt m_28 = PHI <m_370(88), m_1094(423)>
processing: m_28 = PHI <m_370(88), m_1094(423)>

marking necessary through m_370 stmt m_370 = sdp_198->sdp_media;
marking necessary through m_1094 stmt m_1094 = m_28->m_next;
processing: m_1094 = m_28->m_next;

processing: m_370 = sdp_198->sdp_media;

processing: if (connection_125 == 0B)

marking necessary through connection_125 stmt connection_125 = PHI <connection_880(329), connection_882(330)>
processing: connection_125 = PHI <connection_880(329), connection_882(330)>

marking necessary through connection_880 stmt connection_880 = sdp_198->sdp_connection;
marking necessary through connection_882 stmt connection_882 = m_28->m_connections;
Marking useful stmt: if (D.44546_881 != 0B)

processing: if (D.44546_881 != 0B)

marking necessary through D.44546_881 stmt D.44546_881 = m_28->m_connections;
processing: D.44546_881 = m_28->m_connections;

processing: connection_882 = m_28->m_connections;

processing: connection_880 = sdp_198->sdp_connection;

processing: if (D.45256_997 == 0B)

processing: if (D.45249_1005 <= 95)

marking necessary through D.45249_1005 stmt D.45249_1005 = (int) D.45248_1004;
processing: D.45249_1005 = (int) D.45248_1004;

marking necessary through D.45248_1004 stmt D.45248_1004 = map_136->rm_pt;
processing: D.45248_1004 = map_136->rm_pt;

processing: vmatch_1013 = D.45260_1012 == 0;

marking necessary through D.45260_1012 stmt D.45260_1012 = strcasecmp (rm_encoding_137, D.45250_1011);
processing: D.45260_1012 = strcasecmp (rm_encoding_137, D.45250_1011);

marking necessary through rm_encoding_137 stmt rm_encoding_137 = PHI <rm_encoding_980(376), ""(377)>
marking necessary through D.45250_1011 stmt D.45250_1011 = imp_986->iananame;
processing: D.45250_1011 = imp_986->iananame;

processing: rm_encoding_137 = PHI <rm_encoding_980(376), ""(377)>

marking necessary through rm_encoding_980 stmt rm_encoding_980 = map_136->rm_encoding;
Marking useful stmt: if (rm_encoding_980 == 0B)

processing: if (rm_encoding_980 == 0B)

processing: rm_encoding_980 = map_136->rm_encoding;

processing: vmatch_1010 = D.45249_1007 == D.45252_1009;

marking necessary through D.45249_1007 stmt D.45249_1007 = (int) D.45248_1006;
marking necessary through D.45252_1009 stmt D.45252_1009 = (int) D.45251_1008;
processing: D.45252_1009 = (int) D.45251_1008;

marking necessary through D.45251_1008 stmt D.45251_1008 = imp_986->ianacode;
processing: D.45251_1008 = imp_986->ianacode;

processing: D.45249_1007 = (int) D.45248_1006;

marking necessary through D.45248_1006 stmt D.45248_1006 = map_136->rm_pt;
processing: D.45248_1006 = map_136->rm_pt;

processing: if (D.45245_991 != 0)

processing: if (D.45239_987 != 1)

marking necessary through D.45239_987 stmt D.45239_987 = imp_986->codec_type;
processing: D.45239_987 = imp_986->codec_type;

processing: m_idx_1019 = m_idx_110 + 1;

processing: m_idx_111 = PHI <0(333), m_idx_110(398)>

processing: if (D.45263_1014 == D.45264_1015)

marking necessary through D.45263_1014 stmt D.45263_1014 = map_136->rm_rate;
marking necessary through D.45264_1015 stmt D.45264_1015 = imp_986->samples_per_second;
processing: D.45264_1015 = imp_986->samples_per_second;

processing: D.45263_1014 = map_136->rm_rate;

processing: matches[m_idx_110].map = map_136;

processing: prefs[0] = &tmp;

Marking useful stmt: if (j_133 < nm_idx_120)

processing: if (j_133 < nm_idx_120)

Marking useful stmt: if (D.45010_722 != 0)

Marking useful stmt: if (D.45026_736 <= maxptime_39)

marking necessary through j_133 stmt j_133 = PHI <j_1118(277), j_737(276)>
marking necessary through nm_idx_120 stmt nm_idx_120 = PHI <nm_idx_119(264), 0(265)>
processing: nm_idx_120 = PHI <nm_idx_119(264), 0(265)>

marking necessary through nm_idx_119 stmt nm_idx_119 = PHI <nm_idx_116(261), nm_idx_118(263)>
Marking useful stmt: if (D.45005_716 != 0)

processing: if (D.45005_716 != 0)

marking necessary through D.45005_716 stmt D.45005_716 = D.45003_714 && D.45004_715;
processing: D.45005_716 = D.45003_714 && D.45004_715;

marking necessary through D.45003_714 stmt D.45003_714 = D.45002_713 == 1;
marking necessary through D.45004_715 stmt D.45004_715 = got_crypto_54 <= 0;
processing: D.45004_715 = got_crypto_54 <= 0;

marking necessary through got_crypto_54 stmt got_crypto_54 = PHI <got_crypto_52(152), got_crypto_53(174)>
processing: got_crypto_54 = PHI <got_crypto_52(152), got_crypto_53(174)>

Marking useful stmt: if (D.44779_497 != 0)

marking necessary through got_crypto_52 stmt got_crypto_52 = PHI <got_crypto_56(141), got_crypto_56(142), got_crypto_51(151)>
marking necessary through got_crypto_53 stmt got_crypto_53 = PHI <got_crypto_54(156), got_crypto_54(159), got_crypto_54(162), got_crypto_54(163), got_crypto_54(164), got_crypto_54(168), got_crypto_547(173), got_crypto_54(155)>
processing: got_crypto_53 = PHI <got_crypto_54(156), got_crypto_54(159), got_crypto_54(162), got_crypto_54(163), got_crypto_54(164), got_crypto_54(168), got_crypto_547(173), got_crypto_54(155)>

Marking useful stmt: if (D.44800_517 == 0B)

processing: if (D.44800_517 == 0B)

marking necessary through D.44800_517 stmt D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
processing: D.44800_517 = D.44471_516->rtcp_audio_interval_msec;

marking necessary through D.44471_516 stmt D.44471_516 = smh_186->mparams;
processing: D.44471_516 = smh_186->mparams;

processing: got_crypto_52 = PHI <got_crypto_56(141), got_crypto_56(142), got_crypto_51(151)>

marking necessary through got_crypto_56 stmt got_crypto_56 = PHI <0(88), got_crypto_55(423)>
marking necessary through got_crypto_51 stmt got_crypto_51 = PHI <got_crypto_56(143), got_crypto_50(150)>
Marking useful stmt: if (D.44781_498 != 0)

Marking useful stmt: if (D.44784_499 != 0)

processing: if (D.44784_499 != 0)

processing: if (D.44781_498 != 0)

processing: got_crypto_51 = PHI <got_crypto_56(143), got_crypto_50(150)>

marking necessary through got_crypto_50 stmt got_crypto_50 = PHI <got_crypto_51(144), got_crypto_51(148), 1(149)>
processing: got_crypto_50 = PHI <got_crypto_51(144), got_crypto_51(148), 1(149)>

Marking useful stmt: if (D.44787_502 == 0)

Marking useful stmt: if (D.47887_1471 == 0)

processing: if (D.47887_1471 == 0)

marking necessary through D.47887_1471 stmt D.47887_1471 = PHI <1(145), 1(146), 0(147)>
processing: D.47887_1471 = PHI <1(145), 1(146), 0(147)>

Marking useful stmt: if (D.44619_503 == 0B)

Marking useful stmt: if (D.47888_1470 == 0)

processing: if (D.47888_1470 == 0)

marking necessary through D.47888_1470 stmt D.47888_1470 = *D.44619_503;
processing: D.47888_1470 = *D.44619_503;

marking necessary through D.44619_503 stmt D.44619_503 = attr_30->a_value;
processing: D.44619_503 = attr_30->a_value;

marking necessary through attr_30 stmt attr_30 = PHI <attr_500(143), attr_506(150)>
processing: attr_30 = PHI <attr_500(143), attr_506(150)>

marking necessary through attr_500 stmt attr_500 = m_28->m_attributes;
marking necessary through attr_506 stmt attr_506 = attr_30->a_next;
processing: attr_506 = attr_30->a_next;

processing: attr_500 = m_28->m_attributes;

processing: if (D.44619_503 == 0B)

processing: if (D.44787_502 == 0)

marking necessary through D.44787_502 stmt D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
processing: D.44787_502 = strcasecmp (D.44590_501, "fingerprint");

marking necessary through D.44590_501 stmt D.44590_501 = attr_30->a_name;
processing: D.44590_501 = attr_30->a_name;

processing: got_crypto_56 = PHI <0(88), got_crypto_55(423)>

marking necessary through got_crypto_55 stmt got_crypto_55 = PHI <got_crypto_54(325), got_crypto_56(327), got_crypto_56(328), got_crypto_56(402), got_crypto_56(421), got_crypto_56(422), got_crypto_54(322), got_crypto_54(323), got_crypto_54(320), got_crypto_54(321), got_crypto_54(326)>
processing: got_crypto_55 = PHI <got_crypto_54(325), got_crypto_56(327), got_crypto_56(328), got_crypto_56(402), got_crypto_56(421), got_crypto_56(422), got_crypto_54(322), got_crypto_54(323), got_crypto_54(320), got_crypto_54(321), got_crypto_54(326)>

Marking useful stmt: if (D.45126_860 == 0)

Marking useful stmt: if (m_idx_112 != 0)

Marking useful stmt: if (D.45317_1093 == 0)

Marking useful stmt: if (D.45115_835 == 1)

Marking useful stmt: if (D.44605_852 != 0B)

Marking useful stmt: if (D.44605_841 != 0B)

processing: if (D.44605_841 != 0B)

marking necessary through D.44605_841 stmt D.44605_841 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_841 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: if (D.44605_852 != 0B)

marking necessary through D.44605_852 stmt D.44605_852 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_852 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: if (D.45115_835 == 1)

Marking useful stmt: if (best_te_21 != 0)

processing: if (best_te_21 != 0)

marking necessary through best_te_21 stmt best_te_21 = PHI <best_te_20(314), best_te_20(316), best_te_834(317)>
processing: best_te_21 = PHI <best_te_20(314), best_te_20(316), best_te_834(317)>

marking necessary through best_te_20 stmt best_te_20 = PHI <best_te_23(183), best_te_19(262)>
marking necessary through best_te_834 stmt best_te_834 = D.44471_833->te;
Marking useful stmt: if (D.45108_827 != 0)

Marking useful stmt: if (D.45110_829 != 0)

processing: if (D.45110_829 != 0)

processing: if (D.45108_827 != 0)

Marking useful stmt: if (best_te_20 == 0)

processing: if (best_te_20 == 0)

processing: best_te_834 = D.44471_833->te;

marking necessary through D.44471_833 stmt D.44471_833 = smh_186->mparams;
processing: D.44471_833 = smh_186->mparams;

processing: best_te_20 = PHI <best_te_23(183), best_te_19(262)>

marking necessary through best_te_23 stmt best_te_23 = PHI <0(88), best_te_22(423)>
marking necessary through best_te_19 stmt best_te_19 = PHI <best_te_18(190), best_te_20(196), best_te_20(198), best_te_20(200), best_te_20(261)>
processing: best_te_19 = PHI <best_te_18(190), best_te_20(196), best_te_20(198), best_te_20(200), best_te_20(261)>

marking necessary through best_te_18 stmt best_te_18 = PHI <best_te_20(188), best_te_568(189)>
processing: best_te_18 = PHI <best_te_20(188), best_te_568(189)>

marking necessary through best_te_568 stmt best_te_568 = (switch_payload_t) D.44856_567;
Marking useful stmt: if (best_te_20 == 0)

Marking useful stmt: if (D.44854_564 == D.44855_566)

processing: if (D.44854_564 == D.44855_566)

marking necessary through D.44854_564 stmt D.44854_564 = map_128->rm_rate;
marking necessary through D.44855_566 stmt D.44855_566 = D.44750_565->rm_rate;
processing: D.44855_566 = D.44750_565->rm_rate;

marking necessary through D.44750_565 stmt D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44854_564 = map_128->rm_rate;

marking necessary through map_128 stmt map_128 = PHI <map_559(183), map_712(262)>
processing: map_128 = PHI <map_559(183), map_712(262)>

marking necessary through map_559 stmt map_559 = m_28->m_rtpmaps;
marking necessary through map_712 stmt map_712 = map_128->rm_next;
processing: map_712 = map_128->rm_next;

processing: map_559 = m_28->m_rtpmaps;

processing: if (best_te_20 == 0)

processing: best_te_568 = (switch_payload_t) D.44856_567;

marking necessary through D.44856_567 stmt D.44856_567 = map_128->rm_pt;
processing: D.44856_567 = map_128->rm_pt;

processing: best_te_23 = PHI <0(88), best_te_22(423)>

marking necessary through best_te_22 stmt best_te_22 = PHI <best_te_21(325), best_te_23(327), best_te_23(328), best_te_23(402), best_te_23(421), best_te_23(422), best_te_21(322), best_te_21(323), best_te_21(320), best_te_21(321), best_te_21(326)>
processing: best_te_22 = PHI <best_te_21(325), best_te_23(327), best_te_23(328), best_te_23(402), best_te_23(421), best_te_23(422), best_te_21(322), best_te_21(323), best_te_21(320), best_te_21(321), best_te_21(326)>

processing: if (D.45317_1093 == 0)

processing: if (m_idx_112 != 0)

marking necessary through m_idx_112 stmt m_idx_112 = PHI <m_idx_111(400), 0(401)>
processing: m_idx_112 = PHI <m_idx_111(400), 0(401)>

Marking useful stmt: if (D.45268_1026 != 0)

processing: if (D.45268_1026 != 0)

marking necessary through D.45268_1026 stmt D.45268_1026 = D.45003_1024 && D.45267_1025;
processing: D.45268_1026 = D.45003_1024 && D.45267_1025;

marking necessary through D.45003_1024 stmt D.45003_1024 = D.45002_1023 == 1;
marking necessary through D.45267_1025 stmt D.45267_1025 = got_video_crypto_62 <= 0;
processing: D.45267_1025 = got_video_crypto_62 <= 0;

marking necessary through got_video_crypto_62 stmt got_video_crypto_62 = PHI <got_video_crypto_64(333), got_video_crypto_61(398)>
processing: got_video_crypto_62 = PHI <got_video_crypto_64(333), got_video_crypto_61(398)>

marking necessary through got_video_crypto_64 stmt got_video_crypto_64 = PHI <0(88), got_video_crypto_63(423)>
marking necessary through got_video_crypto_61 stmt got_video_crypto_61 = PHI <got_video_crypto_59(345), got_video_crypto_60(374)>
processing: got_video_crypto_61 = PHI <got_video_crypto_59(345), got_video_crypto_60(374)>

marking necessary through got_video_crypto_59 stmt got_video_crypto_59 = PHI <got_video_crypto_62(334), got_video_crypto_62(335), got_video_crypto_58(344)>
marking necessary through got_video_crypto_60 stmt got_video_crypto_60 = PHI <got_video_crypto_61(347), got_video_crypto_61(355), got_video_crypto_61(362), got_video_crypto_61(363), got_video_crypto_61(364), got_video_crypto_61(368), got_video_crypto_978(373), got_video_crypto_61(352), got_video_crypto_61(361)>
processing: got_video_crypto_60 = PHI <got_video_crypto_61(347), got_video_crypto_61(355), got_video_crypto_61(362), got_video_crypto_61(363), got_video_crypto_61(364), got_video_crypto_61(368), got_video_crypto_978(373), got_video_crypto_61(352), got_video_crypto_61(361)>

Marking useful stmt: if (D.47943_1499 == 0)

Marking useful stmt: if (D.45215_959 == 0B)

processing: if (D.45215_959 == 0B)

marking necessary through D.45215_959 stmt D.45215_959 = D.44471_958->rtcp_video_interval_msec;
processing: D.45215_959 = D.44471_958->rtcp_video_interval_msec;

marking necessary through D.44471_958 stmt D.44471_958 = smh_186->mparams;
processing: D.44471_958 = smh_186->mparams;

processing: if (D.47943_1499 == 0)

marking necessary through D.47943_1499 stmt D.47943_1499 = PHI <1(349), 1(350), 0(351)>
processing: D.47943_1499 = PHI <1(349), 1(350), 0(351)>

Marking useful stmt: if (D.44619_900 == 0B)

Marking useful stmt: if (D.47944_1498 == 0)

processing: if (D.47944_1498 == 0)

marking necessary through D.47944_1498 stmt D.47944_1498 = *D.44619_900;
processing: D.47944_1498 = *D.44619_900;

marking necessary through D.44619_900 stmt D.44619_900 = attr_33->a_value;
processing: D.44619_900 = attr_33->a_value;

marking necessary through attr_33 stmt attr_33 = PHI <attr_894(345), attr_979(374)>
processing: attr_33 = PHI <attr_894(345), attr_979(374)>

marking necessary through attr_894 stmt attr_894 = m_28->m_attributes;
marking necessary through attr_979 stmt attr_979 = attr_33->a_next;
processing: attr_979 = attr_33->a_next;

processing: attr_894 = m_28->m_attributes;

processing: if (D.44619_900 == 0B)

processing: got_video_crypto_59 = PHI <got_video_crypto_62(334), got_video_crypto_62(335), got_video_crypto_58(344)>

marking necessary through got_video_crypto_58 stmt got_video_crypto_58 = PHI <got_video_crypto_62(336), got_video_crypto_57(343)>
Marking useful stmt: if (D.45138_885 != 0)

processing: if (D.45138_885 != 0)

processing: got_video_crypto_58 = PHI <got_video_crypto_62(336), got_video_crypto_57(343)>

marking necessary through got_video_crypto_57 stmt got_video_crypto_57 = PHI <got_video_crypto_58(337), got_video_crypto_58(341), 1(342)>
processing: got_video_crypto_57 = PHI <got_video_crypto_58(337), got_video_crypto_58(341), 1(342)>

Marking useful stmt: if (D.45144_889 == 0)

Marking useful stmt: if (D.47939_1497 == 0)

processing: if (D.47939_1497 == 0)

marking necessary through D.47939_1497 stmt D.47939_1497 = PHI <1(338), 1(339), 0(340)>
processing: D.47939_1497 = PHI <1(338), 1(339), 0(340)>

Marking useful stmt: if (D.44619_890 == 0B)

Marking useful stmt: if (D.47940_1496 == 0)

processing: if (D.47940_1496 == 0)

marking necessary through D.47940_1496 stmt D.47940_1496 = *D.44619_890;
processing: D.47940_1496 = *D.44619_890;

marking necessary through D.44619_890 stmt D.44619_890 = attr_32->a_value;
processing: D.44619_890 = attr_32->a_value;

processing: if (D.44619_890 == 0B)

processing: if (D.45144_889 == 0)

marking necessary through D.45144_889 stmt D.45144_889 = strcasecmp (D.44590_888, "fingerprint");
processing: D.45144_889 = strcasecmp (D.44590_888, "fingerprint");

marking necessary through D.44590_888 stmt D.44590_888 = attr_32->a_name;
processing: D.44590_888 = attr_32->a_name;

processing: got_video_crypto_64 = PHI <0(88), got_video_crypto_63(423)>

marking necessary through got_video_crypto_63 stmt got_video_crypto_63 = PHI <got_video_crypto_64(325), got_video_crypto_64(327), got_video_crypto_64(328), got_video_crypto_62(402), got_video_crypto_62(421), got_video_crypto_62(422), got_video_crypto_64(322), got_video_crypto_64(323), got_video_crypto_64(320), got_video_crypto_64(321), got_video_crypto_64(326)>
processing: got_video_crypto_63 = PHI <got_video_crypto_64(325), got_video_crypto_64(327), got_video_crypto_64(328), got_video_crypto_62(402), got_video_crypto_62(421), got_video_crypto_62(422), got_video_crypto_64(322), got_video_crypto_64(323), got_video_crypto_64(320), got_video_crypto_64(321), got_video_crypto_64(326)>

processing: D.45003_1024 = D.45002_1023 == 1;

marking necessary through D.45002_1023 stmt D.45002_1023 = smh_186->crypto_mode;
processing: D.45002_1023 = smh_186->crypto_mode;

processing: if (D.45126_860 == 0)

processing: if (D.44779_497 != 0)

Marking useful stmt: if (D.44681_493 == 2)

marking necessary through D.44779_497 stmt D.44779_497 = D.44777_495 && D.44778_496;
processing: D.44779_497 = D.44777_495 && D.44778_496;

marking necessary through D.44777_495 stmt D.44777_495 = D.44697_494 != 0;
marking necessary through D.44778_496 stmt D.44778_496 = got_audio_67 == 0;
processing: D.44778_496 = got_audio_67 == 0;

marking necessary through got_audio_67 stmt got_audio_67 = PHI <0(88), got_audio_66(423)>
processing: got_audio_67 = PHI <0(88), got_audio_66(423)>

marking necessary through got_audio_66 stmt got_audio_66 = PHI <got_audio_65(325), got_audio_67(327), got_audio_67(328), got_audio_67(402), got_audio_67(421), got_audio_67(422), got_audio_65(322), got_audio_65(323), got_audio_65(320), got_audio_65(321), got_audio_65(326)>
processing: got_audio_66 = PHI <got_audio_65(325), got_audio_67(327), got_audio_67(328), got_audio_67(402), got_audio_67(421), got_audio_67(422), got_audio_65(322), got_audio_65(323), got_audio_65(320), got_audio_65(321), got_audio_65(326)>

marking necessary through got_audio_65 stmt got_audio_65 = PHI <got_audio_67(303), 1(313), got_audio_67(312)>
processing: got_audio_65 = PHI <got_audio_67(303), 1(313), got_audio_67(312)>

Marking useful stmt: if (D.45100_824 == 0)

Marking useful stmt: if (match_12 != 0)

processing: if (match_12 != 0)

marking necessary through match_12 stmt match_12 = PHI <match_11(278), 1(302)>
processing: match_12 = PHI <match_11(278), 1(302)>

marking necessary through match_11 stmt match_11 = PHI <match_10(266), 1(275), match_10(430)>
Marking useful stmt: if (m_idx_107 != 0)

processing: if (m_idx_107 != 0)

marking necessary through m_idx_107 stmt m_idx_107 = PHI <m_idx_106(266), m_idx_745(275), m_idx_106(430)>
processing: m_idx_107 = PHI <m_idx_106(266), m_idx_745(275), m_idx_106(430)>

marking necessary through m_idx_106 stmt m_idx_106 = PHI <m_idx_105(264), 0(265)>
marking necessary through m_idx_745 stmt m_idx_745 = m_idx_106 + 1;
Marking useful stmt: if (maxptime_39 == 0)

processing: if (maxptime_39 == 0)

marking necessary through maxptime_39 stmt maxptime_39 = PHI <dmaxptime_41(152), maxptime_38(174)>
processing: maxptime_39 = PHI <dmaxptime_41(152), maxptime_38(174)>

marking necessary through dmaxptime_41 stmt dmaxptime_41 = PHI <0(43), dmaxptime_40(63)>
marking necessary through maxptime_38 stmt maxptime_38 = PHI <maxptime_39(156), maxptime_39(159), maxptime_1474(162), maxptime_39(163), maxptime_39(164), maxptime_39(168), maxptime_39(173), maxptime_39(155)>
processing: maxptime_38 = PHI <maxptime_39(156), maxptime_39(159), maxptime_1474(162), maxptime_39(163), maxptime_39(164), maxptime_39(168), maxptime_39(173), maxptime_39(155)>

processing: dmaxptime_41 = PHI <0(43), dmaxptime_40(63)>

marking necessary through dmaxptime_40 stmt dmaxptime_40 = PHI <dmaxptime_41(48), dmaxptime_41(50), dmaxptime_41(52), dmaxptime_41(56), dmaxptime_41(58), dmaxptime_41(60), dmaxptime_41(61), dmaxptime_1469(62), dmaxptime_41(55)>
processing: dmaxptime_40 = PHI <dmaxptime_41(48), dmaxptime_41(50), dmaxptime_41(52), dmaxptime_41(56), dmaxptime_41(58), dmaxptime_41(60), dmaxptime_41(61), dmaxptime_1469(62), dmaxptime_41(55)>

Marking useful stmt: if (D.47877_1467 != 0)

Marking useful stmt: if (D.44594_307 == 0)

Marking useful stmt: if (D.44598_311 == 0)

Marking useful stmt: if (D.44606_319 != 0)

Marking useful stmt: if (sendonly_44 <= 1)

Marking useful stmt: if (D.44616_327 == 0)

Marking useful stmt: if (D.44621_331 == 0)

processing: if (D.44621_331 == 0)

marking necessary through D.44621_331 stmt D.44621_331 = strcasecmp (D.44590_330, "maxptime");
processing: D.44621_331 = strcasecmp (D.44590_330, "maxptime");

marking necessary through D.44590_330 stmt D.44590_330 = attr_29->a_name;
processing: D.44590_330 = attr_29->a_name;

processing: if (D.44616_327 == 0)

Marking useful stmt: if (D.44614_324 == 0)

marking necessary through D.44616_327 stmt D.44616_327 = strcasecmp (D.44590_326, "ptime");
processing: D.44616_327 = strcasecmp (D.44590_326, "ptime");

marking necessary through D.44590_326 stmt D.44590_326 = attr_29->a_name;
processing: D.44590_326 = attr_29->a_name;

processing: if (D.44614_324 == 0)

marking necessary through D.44614_324 stmt D.44614_324 = strcasecmp (D.44590_323, "sendrecv");
processing: D.44614_324 = strcasecmp (D.44590_323, "sendrecv");

marking necessary through D.44590_323 stmt D.44590_323 = attr_29->a_name;
processing: D.44590_323 = attr_29->a_name;

processing: if (sendonly_44 <= 1)

Marking useful stmt: if (D.44602_315 == 0)

marking necessary through sendonly_44 stmt sendonly_44 = PHI <sendonly_42(43), sendonly_43(63)>
processing: sendonly_44 = PHI <sendonly_42(43), sendonly_43(63)>

marking necessary through sendonly_42 stmt sendonly_42 = PHI <0(37), 0(39), 0(40), 0(41), 2(42)>
marking necessary through sendonly_43 stmt sendonly_43 = PHI <sendonly_44(48), 1(50), 1(52), sendonly_44(56), 0(58), sendonly_44(60), sendonly_44(61), sendonly_44(62), sendonly_44(55)>
processing: sendonly_43 = PHI <sendonly_44(48), 1(50), 1(52), sendonly_44(56), 0(58), sendonly_44(60), sendonly_44(61), sendonly_44(62), sendonly_44(55)>

processing: sendonly_42 = PHI <0(37), 0(39), 0(40), 0(41), 2(42)>

Marking useful stmt: if (D.44544_253 != 0)

Marking useful stmt: if (D.44546_254 != 0B)

Marking useful stmt: if (D.44548_256 != 0B)

Marking useful stmt: if (__result_300 == 0)

processing: if (__result_300 == 0)

marking necessary through __result_300 stmt __result_300 = __builtin_strcmp (D.44548_299, "0.0.0.0");
processing: __result_300 = __builtin_strcmp (D.44548_299, "0.0.0.0");

marking necessary through D.44548_299 stmt D.44548_299 = D.44546_298->c_address;
processing: D.44548_299 = D.44546_298->c_address;

marking necessary through D.44546_298 stmt D.44546_298 = m_248->m_connections;
processing: D.44546_298 = m_248->m_connections;

marking necessary through m_248 stmt m_248 = sdp_198->sdp_media;
processing: m_248 = sdp_198->sdp_media;

processing: if (D.44548_256 != 0B)

marking necessary through D.44548_256 stmt D.44548_256 = D.44546_255->c_address;
processing: D.44548_256 = D.44546_255->c_address;

marking necessary through D.44546_255 stmt D.44546_255 = m_248->m_connections;
processing: D.44546_255 = m_248->m_connections;

processing: if (D.44546_254 != 0B)

marking necessary through D.44546_254 stmt D.44546_254 = m_248->m_connections;
processing: D.44546_254 = m_248->m_connections;

processing: if (D.44544_253 != 0)

Marking useful stmt: if (m_248 != 0B)

marking necessary through D.44544_253 stmt D.44544_253 = D.44542_251 || D.44543_252;
processing: D.44544_253 = D.44542_251 || D.44543_252;

marking necessary through D.44542_251 stmt D.44542_251 = D.44541_250 == 2;
marking necessary through D.44543_252 stmt D.44543_252 = D.44541_250 == 0;
processing: D.44543_252 = D.44541_250 == 0;

marking necessary through D.44541_250 stmt D.44541_250 = D.44540_249 & 6;
processing: D.44541_250 = D.44540_249 & 6;

marking necessary through D.44540_249 stmt D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
processing: D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;

processing: D.44542_251 = D.44541_250 == 2;

processing: if (m_248 != 0B)

processing: if (D.44602_315 == 0)

marking necessary through D.44602_315 stmt D.44602_315 = strcasecmp (D.44590_314, "recvonly");
processing: D.44602_315 = strcasecmp (D.44590_314, "recvonly");

marking necessary through D.44590_314 stmt D.44590_314 = attr_29->a_name;
processing: D.44590_314 = attr_29->a_name;

processing: if (D.44606_319 != 0)

processing: if (D.44598_311 == 0)

marking necessary through D.44598_311 stmt D.44598_311 = strcasecmp (D.44590_310, "inactive");
processing: D.44598_311 = strcasecmp (D.44590_310, "inactive");

marking necessary through D.44590_310 stmt D.44590_310 = attr_29->a_name;
processing: D.44590_310 = attr_29->a_name;

processing: if (D.44594_307 == 0)

marking necessary through D.44594_307 stmt D.44594_307 = strcasecmp (D.44590_306, "sendonly");
processing: D.44594_307 = strcasecmp (D.44590_306, "sendonly");

marking necessary through D.44590_306 stmt D.44590_306 = attr_29->a_name;
processing: D.44590_306 = attr_29->a_name;

processing: if (D.47877_1467 != 0)

marking necessary through D.47877_1467 stmt D.47877_1467 = PHI <1(44), 1(45), 0(46)>
processing: D.47877_1467 = PHI <1(44), 1(45), 0(46)>

Marking useful stmt: if (D.44590_304 == 0B)

Marking useful stmt: if (D.47878_1466 == 0)

processing: if (D.47878_1466 == 0)

marking necessary through D.47878_1466 stmt D.47878_1466 = *D.44590_304;
processing: D.47878_1466 = *D.44590_304;

marking necessary through D.44590_304 stmt D.44590_304 = attr_29->a_name;
processing: D.44590_304 = attr_29->a_name;

processing: if (D.44590_304 == 0B)

processing: m_idx_745 = m_idx_106 + 1;

processing: m_idx_106 = PHI <m_idx_105(264), 0(265)>

marking necessary through m_idx_105 stmt m_idx_105 = PHI <m_idx_102(261), m_idx_104(263)>
processing: m_idx_105 = PHI <m_idx_102(261), m_idx_104(263)>

marking necessary through m_idx_102 stmt m_idx_102 = PHI <m_idx_704(258), m_idx_101(260)>
marking necessary through m_idx_104 stmt m_idx_104 = PHI <m_idx_114(183), m_idx_103(262)>
processing: m_idx_104 = PHI <m_idx_114(183), m_idx_103(262)>

marking necessary through m_idx_114 stmt m_idx_114 = PHI <0(88), m_idx_113(423)>
marking necessary through m_idx_103 stmt m_idx_103 = PHI <m_idx_104(190), m_idx_104(196), m_idx_104(198), m_idx_104(200), m_idx_102(261)>
processing: m_idx_103 = PHI <m_idx_104(190), m_idx_104(196), m_idx_104(198), m_idx_104(200), m_idx_102(261)>

processing: m_idx_114 = PHI <0(88), m_idx_113(423)>

marking necessary through m_idx_113 stmt m_idx_113 = PHI <m_idx_107(325), m_idx_114(327), m_idx_114(328), m_idx_112(402), m_idx_112(421), m_idx_112(422), m_idx_107(322), m_idx_107(323), m_idx_107(320), m_idx_107(321), m_idx_107(326)>
processing: m_idx_113 = PHI <m_idx_107(325), m_idx_114(327), m_idx_114(328), m_idx_112(402), m_idx_112(421), m_idx_112(422), m_idx_107(322), m_idx_107(323), m_idx_107(320), m_idx_107(321), m_idx_107(326)>

processing: m_idx_102 = PHI <m_idx_704(258), m_idx_101(260)>

marking necessary through m_idx_704 stmt m_idx_704 = m_idx_101 + 1;
marking necessary through m_idx_101 stmt m_idx_101 = PHI <m_idx_104(225), m_idx_100(259)>
Marking useful stmt: if (scrooge_80 != 0)

processing: if (scrooge_80 != 0)

marking necessary through scrooge_80 stmt scrooge_80 = PHI <scrooge_213(22), 0(23), 0(24), 1(25), scrooge_213(26)>
processing: scrooge_80 = PHI <scrooge_213(22), 0(23), 0(24), 1(25), scrooge_213(26)>

marking necessary through scrooge_213 stmt scrooge_213 = D.44491_212 != 0;
Marking useful stmt: if (val_214 != 0B)

Marking useful stmt: if (D.44494_215 == 0)

Marking useful stmt: if (D.44498_218 == 0)

Marking useful stmt: if (D.44502_221 == 0)

processing: if (D.44502_221 == 0)

marking necessary through D.44502_221 stmt D.44502_221 = strcasecmp (val_214, "scrooge");
processing: D.44502_221 = strcasecmp (val_214, "scrooge");

processing: if (D.44498_218 == 0)

marking necessary through D.44498_218 stmt D.44498_218 = strcasecmp (val_214, "greedy");
processing: D.44498_218 = strcasecmp (val_214, "greedy");

processing: if (D.44494_215 == 0)

marking necessary through D.44494_215 stmt D.44494_215 = strcasecmp (val_214, "generous");
processing: D.44494_215 = strcasecmp (val_214, "generous");

processing: if (val_214 != 0B)

processing: scrooge_213 = D.44491_212 != 0;

processing: m_idx_101 = PHI <m_idx_104(225), m_idx_100(259)>

marking necessary through m_idx_100 stmt m_idx_100 = PHI <m_idx_101(227), m_idx_101(251), m_idx_101(257), m_idx_704(258)>
processing: m_idx_100 = PHI <m_idx_101(227), m_idx_101(251), m_idx_101(257), m_idx_704(258)>

processing: m_idx_704 = m_idx_101 + 1;

processing: match_11 = PHI <match_10(266), 1(275), match_10(430)>

marking necessary through match_10 stmt match_10 = PHI <match_9(264), 0(265)>
processing: match_10 = PHI <match_9(264), 0(265)>

marking necessary through match_9 stmt match_9 = PHI <match_6(261), match_8(263)>
processing: match_9 = PHI <match_6(261), match_8(263)>

marking necessary through match_6 stmt match_6 = PHI <match_3(258), match_5(260)>
marking necessary through match_8 stmt match_8 = PHI <match_16(183), match_7(262)>
processing: match_8 = PHI <match_16(183), match_7(262)>

marking necessary through match_16 stmt match_16 = PHI <0(88), match_15(423)>
marking necessary through match_7 stmt match_7 = PHI <match_8(190), match_8(196), match_8(198), match_8(200), match_6(261)>
processing: match_7 = PHI <match_8(190), match_8(196), match_8(198), match_8(200), match_6(261)>

processing: match_16 = PHI <0(88), match_15(423)>

marking necessary through match_15 stmt match_15 = PHI <match_13(325), match_16(327), match_16(328), match_16(402), match_14(421), match_14(422), match_13(322), match_13(323), match_13(320), match_13(321), match_13(326)>
processing: match_15 = PHI <match_13(325), match_16(327), match_16(328), match_16(402), match_14(421), match_14(422), match_13(322), match_13(323), match_13(320), match_13(321), match_13(326)>

marking necessary through match_13 stmt match_13 = PHI <match_12(303), match_12(313), 0(312)>
marking necessary through match_14 stmt match_14 = PHI <match_16(411), 1(412)>
processing: match_14 = PHI <match_16(411), 1(412)>

Marking useful stmt: if (match_16 == 0)

processing: if (match_16 == 0)

processing: match_13 = PHI <match_12(303), match_12(313), 0(312)>

processing: match_6 = PHI <match_3(258), match_5(260)>

marking necessary through match_3 stmt match_3 = PHI <match_2(246), match_2(247), match_2(249), 0(250)>
marking necessary through match_5 stmt match_5 = PHI <match_8(225), match_4(259)>
processing: match_5 = PHI <match_8(225), match_4(259)>

marking necessary through match_4 stmt match_4 = PHI <match_5(227), match_3(251), 0(257), 0(258)>
processing: match_4 = PHI <match_5(227), match_3(251), 0(257), 0(258)>

processing: match_3 = PHI <match_2(246), match_2(247), match_2(249), 0(250)>

marking necessary through match_2 stmt match_2 = PHI <match_1(241), match_1(242), match_1(243), match_1(244), 0(245)>
Marking useful stmt: if (D.44970_677 != 0)

Marking useful stmt: if (D.44978_682 == 0)

Marking useful stmt: if (D.44980_684 == 0)

processing: if (D.44980_684 == 0)

marking necessary through D.44980_684 stmt D.44980_684 = strcasecmp (D.44889_683, "pcmu");
processing: D.44980_684 = strcasecmp (D.44889_683, "pcmu");

marking necessary through D.44889_683 stmt D.44889_683 = map_128->rm_encoding;
processing: D.44889_683 = map_128->rm_encoding;

processing: if (D.44978_682 == 0)

Marking useful stmt: if (D.44975_680 != 0)

marking necessary through D.44978_682 stmt D.44978_682 = strcasecmp (D.44889_681, "pcma");
processing: D.44978_682 = strcasecmp (D.44889_681, "pcma");

marking necessary through D.44889_681 stmt D.44889_681 = map_128->rm_encoding;
processing: D.44889_681 = map_128->rm_encoding;

processing: if (D.44975_680 != 0)

marking necessary through D.44975_680 stmt D.44975_680 = D.44973_678 && D.44974_679;
processing: D.44975_680 = D.44973_678 && D.44974_679;

marking necessary through D.44973_678 stmt D.44973_678 = codec_rate_633 != 0;
marking necessary through D.44974_679 stmt D.44974_679 = remote_codec_rate_96 != codec_rate_633;
processing: D.44974_679 = remote_codec_rate_96 != codec_rate_633;

marking necessary through remote_codec_rate_96 stmt remote_codec_rate_96 = PHI <remote_codec_rate_98(234), remote_codec_rate_98(239), fmtp_remote_codec_rate_99(240)>
marking necessary through codec_rate_633 stmt codec_rate_633 = imp_630->samples_per_second;
processing: codec_rate_633 = imp_630->samples_per_second;

Marking useful stmt: if (D.45000_626 != 0)

marking necessary through imp_630 stmt imp_630 = *D.44920_629;
processing: imp_630 = *D.44920_629;

marking necessary through D.44920_629 stmt D.44920_629 = codec_array_84 + D.44919_628;
processing: D.44920_629 = codec_array_84 + D.44919_628;

marking necessary through D.44919_628 stmt D.44919_628 = i.91_627 * 4;
processing: D.44919_628 = i.91_627 * 4;

marking necessary through i.91_627 stmt i.91_627 = (unsigned int) i_129;
processing: i.91_627 = (unsigned int) i_129;

marking necessary through i_129 stmt i_129 = PHI <0(225), i_711(259)>
processing: i_129 = PHI <0(225), i_711(259)>

marking necessary through i_711 stmt i_711 = i_129 + 1;
processing: i_711 = i_129 + 1;

processing: if (D.45000_626 != 0)

marking necessary through D.45000_626 stmt D.45000_626 = D.44998_624 && D.44999_625;
processing: D.45000_626 = D.44998_624 && D.44999_625;

marking necessary through D.44998_624 stmt D.44998_624 = D.44997_623 > i_129;
marking necessary through D.44999_625 stmt D.44999_625 = i_129 < total_codecs_85;
processing: D.44999_625 = i_129 < total_codecs_85;

processing: D.44998_624 = D.44997_623 > i_129;

marking necessary through D.44997_623 stmt D.44997_623 = D.44471_622->num_codecs;
processing: D.44997_623 = D.44471_622->num_codecs;

marking necessary through D.44471_622 stmt D.44471_622 = smh_186->mparams;
processing: D.44471_622 = smh_186->mparams;

processing: remote_codec_rate_96 = PHI <remote_codec_rate_98(234), remote_codec_rate_98(239), fmtp_remote_codec_rate_99(240)>

marking necessary through remote_codec_rate_98 stmt remote_codec_rate_98 = PHI <remote_codec_rate_596(225), remote_codec_rate_97(259)>
marking necessary through fmtp_remote_codec_rate_99 stmt fmtp_remote_codec_rate_99 = PHI <0(216), 0(218), 0(223), fmtp_remote_codec_rate_620(224), 0(215), 0(217)>
Marking useful stmt: if (D.44925_651 <= 95)

Marking useful stmt: if (D.44938_648 != 0)

Marking useful stmt: if (fmtp_remote_codec_rate_99 != 0)

processing: if (fmtp_remote_codec_rate_99 != 0)

processing: if (D.44938_648 != 0)

Marking useful stmt: if (D.47919_1485 != 0)

marking necessary through D.44938_648 stmt D.44938_648 = D.44937_647 & 1;
processing: D.44938_648 = D.44937_647 & 1;

marking necessary through D.44937_647 stmt D.44937_647 = (int) D.44821_646;
processing: D.44937_647 = (int) D.44821_646;

marking necessary through D.44821_646 stmt D.44821_646 = D.44471_645->ndlb;
processing: D.44821_646 = D.44471_645->ndlb;

marking necessary through D.44471_645 stmt D.44471_645 = smh_186->mparams;
processing: D.44471_645 = smh_186->mparams;

processing: if (D.47919_1485 != 0)

marking necessary through D.47919_1485 stmt D.47919_1485 = PHI <1(228), 1(229), 0(230)>
processing: D.47919_1485 = PHI <1(228), 1(229), 0(230)>

Marking useful stmt: if (D.44889_643 == 0B)

Marking useful stmt: if (D.47920_1484 == 0)

processing: if (D.47920_1484 == 0)

marking necessary through D.47920_1484 stmt D.47920_1484 = *D.44889_643;
processing: D.47920_1484 = *D.44889_643;

marking necessary through D.44889_643 stmt D.44889_643 = map_128->rm_encoding;
processing: D.44889_643 = map_128->rm_encoding;

processing: if (D.44889_643 == 0B)

processing: if (D.44925_651 <= 95)

marking necessary through D.44925_651 stmt D.44925_651 = (int) D.44856_650;
processing: D.44925_651 = (int) D.44856_650;

marking necessary through D.44856_650 stmt D.44856_650 = map_128->rm_pt;
processing: D.44856_650 = map_128->rm_pt;

processing: fmtp_remote_codec_rate_99 = PHI <0(216), 0(218), 0(223), fmtp_remote_codec_rate_620(224), 0(215), 0(217)>

marking necessary through fmtp_remote_codec_rate_620 stmt fmtp_remote_codec_rate_620 = codec_fmtp.actual_samples_per_second;
Marking useful stmt: if (D.44897_601 == 0)

Marking useful stmt: if (D.47915_1483 != 0)

Marking useful stmt: if (D.44906_612 == 0)

Marking useful stmt: if (D.44915_619 != 0)

Marking useful stmt: if (D.44901_605 == 0)

processing: if (D.44901_605 == 0)

marking necessary through D.44901_605 stmt D.44901_605 = strcasecmp (D.44889_604, "isac");
processing: D.44901_605 = strcasecmp (D.44889_604, "isac");

marking necessary through D.44889_604 stmt D.44889_604 = map_128->rm_encoding;
processing: D.44889_604 = map_128->rm_encoding;

processing: if (D.44915_619 != 0)

marking necessary through D.44915_619 stmt D.44915_619 = codec_fmtp.actual_samples_per_second;
processing: D.44915_619 = codec_fmtp.actual_samples_per_second;

processing: if (D.44906_612 == 0)

processing: if (D.47915_1483 != 0)

marking necessary through D.47915_1483 stmt D.47915_1483 = PHI <1(211), 1(212), 0(213)>
processing: D.47915_1483 = PHI <1(211), 1(212), 0(213)>

Marking useful stmt: if (D.44893_598 == 0B)

Marking useful stmt: if (D.47916_1482 == 0)

processing: if (D.47916_1482 == 0)

marking necessary through D.47916_1482 stmt D.47916_1482 = *D.44893_598;
processing: D.47916_1482 = *D.44893_598;

marking necessary through D.44893_598 stmt D.44893_598 = map_128->rm_fmtp;
processing: D.44893_598 = map_128->rm_fmtp;

processing: if (D.44893_598 == 0B)

processing: if (D.44897_601 == 0)

marking necessary through D.44897_601 stmt D.44897_601 = strcasecmp (D.44889_600, "ilbc");
processing: D.44897_601 = strcasecmp (D.44889_600, "ilbc");

marking necessary through D.44889_600 stmt D.44889_600 = map_128->rm_encoding;
processing: D.44889_600 = map_128->rm_encoding;

processing: fmtp_remote_codec_rate_620 = codec_fmtp.actual_samples_per_second;

processing: remote_codec_rate_98 = PHI <remote_codec_rate_596(225), remote_codec_rate_97(259)>

marking necessary through remote_codec_rate_596 stmt remote_codec_rate_596 = map_128->rm_rate;
marking necessary through remote_codec_rate_97 stmt remote_codec_rate_97 = PHI <remote_codec_rate_98(227), remote_codec_rate_96(251), remote_codec_rate_96(257), remote_codec_rate_96(258)>
processing: remote_codec_rate_97 = PHI <remote_codec_rate_98(227), remote_codec_rate_96(251), remote_codec_rate_96(257), remote_codec_rate_96(258)>

processing: remote_codec_rate_596 = map_128->rm_rate;

processing: D.44973_678 = codec_rate_633 != 0;

processing: if (D.44970_677 != 0)

marking necessary through D.44970_677 stmt D.44970_677 = D.44951_675 && D.44969_676;
processing: D.44970_677 = D.44951_675 && D.44969_676;

marking necessary through D.44951_675 stmt D.44951_675 = match_2 != 0;
marking necessary through D.44969_676 stmt D.44969_676 = remote_codec_rate_96 != 0;
processing: D.44969_676 = remote_codec_rate_96 != 0;

processing: D.44951_675 = match_2 != 0;

processing: match_2 = PHI <match_1(241), match_1(242), match_1(243), match_1(244), 0(245)>

marking necessary through match_1 stmt match_1 = PHI <match_656(234), match_662(239), match_662(240)>
Marking useful stmt: if (D.44953_666 != 0)

Marking useful stmt: if (D.44958_669 != 0)

Marking useful stmt: if (D.44961_671 != 0)

Marking useful stmt: if (D.44964_673 != 0)

processing: if (D.44964_673 != 0)

marking necessary through D.44964_673 stmt D.44964_673 = strcasecmp (D.44889_672, "isac");
processing: D.44964_673 = strcasecmp (D.44889_672, "isac");

marking necessary through D.44889_672 stmt D.44889_672 = map_128->rm_encoding;
processing: D.44889_672 = map_128->rm_encoding;

processing: if (D.44961_671 != 0)

marking necessary through D.44961_671 stmt D.44961_671 = strcasecmp (D.44889_670, "ilbc");
processing: D.44961_671 = strcasecmp (D.44889_670, "ilbc");

marking necessary through D.44889_670 stmt D.44889_670 = map_128->rm_encoding;
processing: D.44889_670 = map_128->rm_encoding;

processing: if (D.44958_669 != 0)

marking necessary through D.44958_669 stmt D.44958_669 = D.44956_667 && D.44957_668;
processing: D.44958_669 = D.44956_667 && D.44957_668;

marking necessary through D.44956_667 stmt D.44956_667 = map_bit_rate_132 != 0;
marking necessary through D.44957_668 stmt D.44957_668 = map_bit_rate_132 != bit_rate_632;
processing: D.44957_668 = map_bit_rate_132 != bit_rate_632;

marking necessary through map_bit_rate_132 stmt map_bit_rate_132 = PHI <32001(216), map_bit_rate_1481(218), map_bit_rate_131(223), map_bit_rate_131(224), 13332(215), 32099(217)>
marking necessary through bit_rate_632 stmt bit_rate_632 = (uint32_t) D.44921_631;
processing: bit_rate_632 = (uint32_t) D.44921_631;

marking necessary through D.44921_631 stmt D.44921_631 = imp_630->bits_per_second;
processing: D.44921_631 = imp_630->bits_per_second;

processing: map_bit_rate_132 = PHI <32001(216), map_bit_rate_1481(218), map_bit_rate_131(223), map_bit_rate_131(224), 13332(215), 32099(217)>

marking necessary through map_bit_rate_1481 stmt map_bit_rate_1481 = PHI <0(206), map_bit_rate_1480(207)>
marking necessary through map_bit_rate_131 stmt map_bit_rate_131 = PHI <map_bit_rate_1481(219), map_bit_rate_615(220)>
processing: map_bit_rate_131 = PHI <map_bit_rate_1481(219), map_bit_rate_615(220)>

marking necessary through map_bit_rate_615 stmt map_bit_rate_615 = (uint32_t) D.44909_614;
Marking useful stmt: if (D.44909_613 != 0)

processing: if (D.44909_613 != 0)

marking necessary through D.44909_613 stmt D.44909_613 = codec_fmtp.bits_per_second;
processing: D.44909_613 = codec_fmtp.bits_per_second;

processing: map_bit_rate_615 = (uint32_t) D.44909_614;

marking necessary through D.44909_614 stmt D.44909_614 = codec_fmtp.bits_per_second;
processing: D.44909_614 = codec_fmtp.bits_per_second;

processing: map_bit_rate_1481 = PHI <0(206), map_bit_rate_1480(207)>

marking necessary through map_bit_rate_1480 stmt map_bit_rate_1480 = CSWTCH.174[csui.173_591];
Marking useful stmt: if (csui.173_591 <= 18)

processing: if (csui.173_591 <= 18)

marking necessary through csui.173_591 stmt csui.173_591 = (unsigned char) D.44856_590;
processing: csui.173_591 = (unsigned char) D.44856_590;

marking necessary through D.44856_590 stmt D.44856_590 = map_128->rm_pt;
processing: D.44856_590 = map_128->rm_pt;

processing: map_bit_rate_1480 = CSWTCH.174[csui.173_591];

processing: D.44956_667 = map_bit_rate_132 != 0;

processing: if (D.44953_666 != 0)

marking necessary through D.44953_666 stmt D.44953_666 = D.44951_664 && D.44952_665;
processing: D.44953_666 = D.44951_664 && D.44952_665;

marking necessary through D.44951_664 stmt D.44951_664 = match_1 != 0;
marking necessary through D.44952_665 stmt D.44952_665 = bit_rate_632 != 0;
processing: D.44952_665 = bit_rate_632 != 0;

processing: D.44951_664 = match_1 != 0;

processing: match_1 = PHI <match_656(234), match_662(239), match_662(240)>

marking necessary through match_656 stmt match_656 = D.44925_653 == D.44929_655;
marking necessary through match_662 stmt match_662 = (uint8_t) iftmp.93_144;
processing: match_662 = (uint8_t) iftmp.93_144;

marking necessary through iftmp.93_144 stmt iftmp.93_144 = PHI <1(237), 0(238), 1(236)>
processing: iftmp.93_144 = PHI <1(237), 0(238), 1(236)>

Marking useful stmt: if (remote_codec_rate_98 == codec_rate_633)

Marking useful stmt: if (D.44945_658 == 0)

Marking useful stmt: if (D.44948_659 == fmtp_remote_codec_rate_99)

processing: if (D.44948_659 == fmtp_remote_codec_rate_99)

marking necessary through D.44948_659 stmt D.44948_659 = imp_630->actual_samples_per_second;
processing: D.44948_659 = imp_630->actual_samples_per_second;

processing: if (D.44945_658 == 0)

marking necessary through D.44945_658 stmt D.44945_658 = strcasecmp (rm_encoding_130, D.44927_657);
processing: D.44945_658 = strcasecmp (rm_encoding_130, D.44927_657);

marking necessary through rm_encoding_130 stmt rm_encoding_130 = PHI <rm_encoding_561(184), ""(185)>
marking necessary through D.44927_657 stmt D.44927_657 = imp_630->iananame;
processing: D.44927_657 = imp_630->iananame;

processing: rm_encoding_130 = PHI <rm_encoding_561(184), ""(185)>

Marking useful stmt: if (map_128 != 0B)

marking necessary through rm_encoding_561 stmt rm_encoding_561 = map_128->rm_encoding;
Marking useful stmt: if (rm_encoding_561 == 0B)

processing: if (rm_encoding_561 == 0B)

processing: rm_encoding_561 = map_128->rm_encoding;

processing: if (map_128 != 0B)

processing: if (remote_codec_rate_98 == codec_rate_633)

processing: match_656 = D.44925_653 == D.44929_655;

marking necessary through D.44925_653 stmt D.44925_653 = (int) D.44856_652;
marking necessary through D.44929_655 stmt D.44929_655 = (int) D.44928_654;
processing: D.44929_655 = (int) D.44928_654;

marking necessary through D.44928_654 stmt D.44928_654 = imp_630->ianacode;
processing: D.44928_654 = imp_630->ianacode;

processing: D.44925_653 = (int) D.44856_652;

marking necessary through D.44856_652 stmt D.44856_652 = map_128->rm_pt;
processing: D.44856_652 = map_128->rm_pt;

processing: if (D.45100_824 == 0)

processing: D.44777_495 = D.44697_494 != 0;

marking necessary through D.44697_494 stmt D.44697_494 = m_28->m_port;
processing: D.44697_494 = m_28->m_port;

processing: if (D.44681_493 == 2)

Marking useful stmt: if (got_udptl_76 != 0)

Marking useful stmt: if (D.44681_392 == 8)

Marking useful stmt: if (D.44697_393 != 0)

marking necessary through D.44681_493 stmt D.44681_493 = m_28->m_type;
processing: D.44681_493 = m_28->m_type;

processing: if (D.44697_393 != 0)

marking necessary through D.44697_393 stmt D.44697_393 = m_28->m_port;
processing: D.44697_393 = m_28->m_port;

processing: if (D.44681_392 == 8)

marking necessary through D.44681_392 stmt D.44681_392 = m_28->m_type;
processing: D.44681_392 = m_28->m_type;

processing: if (got_udptl_76 != 0)

Marking useful stmt: if (m_28 != 0B)

marking necessary through got_udptl_76 stmt got_udptl_76 = PHI <got_udptl_77(97), got_udptl_77(101), got_udptl_77(102), got_udptl_391(103), got_udptl_77(96), got_udptl_77(100)>
processing: got_udptl_76 = PHI <got_udptl_77(97), got_udptl_77(101), got_udptl_77(102), got_udptl_391(103), got_udptl_77(96), got_udptl_77(100)>

marking necessary through got_udptl_77 stmt got_udptl_77 = PHI <0(88), got_udptl_76(423)>
marking necessary through got_udptl_391 stmt got_udptl_391 = got_udptl_77 + 1;
Marking useful stmt: if (D.44681_383 == 2)

Marking useful stmt: if (D.44681_387 == 2)

Marking useful stmt: if (D.44666_386 == 256)

Marking useful stmt: if (D.44666_390 == 258)

processing: if (D.44666_390 == 258)

marking necessary through D.44666_390 stmt D.44666_390 = m_28->m_proto;
processing: D.44666_390 = m_28->m_proto;

processing: if (D.44666_386 == 256)

Marking useful stmt: if (D.44678_382 != 0)

marking necessary through D.44666_386 stmt D.44666_386 = m_28->m_proto;
processing: D.44666_386 = m_28->m_proto;

processing: if (D.44678_382 != 0)

marking necessary through D.44678_382 stmt D.44678_382 = D.44676_380 || D.44677_381;
processing: D.44678_382 = D.44676_380 || D.44677_381;

marking necessary through D.44676_380 stmt D.44676_380 = D.44675_379 == 257;
marking necessary through D.44677_381 stmt D.44677_381 = D.44675_379 == 261;
processing: D.44677_381 = D.44675_379 == 261;

marking necessary through D.44675_379 stmt D.44675_379 = m_28->m_proto;
processing: D.44675_379 = m_28->m_proto;

processing: D.44676_380 = D.44675_379 == 257;

processing: if (D.44681_387 == 2)

marking necessary through D.44681_387 stmt D.44681_387 = m_28->m_type;
processing: D.44681_387 = m_28->m_type;

processing: if (D.44681_383 == 2)

marking necessary through D.44681_383 stmt D.44681_383 = m_28->m_type;
processing: D.44681_383 = m_28->m_type;

processing: got_udptl_391 = got_udptl_77 + 1;

processing: got_udptl_77 = PHI <0(88), got_udptl_76(423)>

processing: if (m_28 != 0B)

processing: D.45003_714 = D.45002_713 == 1;

marking necessary through D.45002_713 stmt D.45002_713 = smh_186->crypto_mode;
processing: D.45002_713 = smh_186->crypto_mode;

processing: nm_idx_119 = PHI <nm_idx_116(261), nm_idx_118(263)>

marking necessary through nm_idx_116 stmt nm_idx_116 = PHI <nm_idx_118(225), nm_idx_115(259)>
marking necessary through nm_idx_118 stmt nm_idx_118 = PHI <nm_idx_122(183), nm_idx_117(262)>
processing: nm_idx_118 = PHI <nm_idx_122(183), nm_idx_117(262)>

marking necessary through nm_idx_122 stmt nm_idx_122 = PHI <0(88), nm_idx_121(423)>
marking necessary through nm_idx_117 stmt nm_idx_117 = PHI <nm_idx_118(190), nm_idx_118(196), nm_idx_118(198), nm_idx_118(200), nm_idx_116(261)>
processing: nm_idx_117 = PHI <nm_idx_118(190), nm_idx_118(196), nm_idx_118(198), nm_idx_118(200), nm_idx_116(261)>

processing: nm_idx_122 = PHI <0(88), nm_idx_121(423)>

marking necessary through nm_idx_121 stmt nm_idx_121 = PHI <nm_idx_120(325), nm_idx_122(327), nm_idx_122(328), 0(402), 0(421), 0(422), nm_idx_120(322), nm_idx_120(323), nm_idx_120(320), nm_idx_120(321), nm_idx_120(326)>
processing: nm_idx_121 = PHI <nm_idx_120(325), nm_idx_122(327), nm_idx_122(328), 0(402), 0(421), 0(422), nm_idx_120(322), nm_idx_120(323), nm_idx_120(320), nm_idx_120(321), nm_idx_120(326)>

processing: nm_idx_116 = PHI <nm_idx_118(225), nm_idx_115(259)>

marking necessary through nm_idx_115 stmt nm_idx_115 = PHI <nm_idx_116(227), nm_idx_116(251), nm_idx_702(257), nm_idx_116(258)>
processing: nm_idx_115 = PHI <nm_idx_116(227), nm_idx_116(251), nm_idx_702(257), nm_idx_116(258)>

marking necessary through nm_idx_702 stmt nm_idx_702 = nm_idx_116 + 1;
processing: nm_idx_702 = nm_idx_116 + 1;

processing: j_133 = PHI <j_1118(277), j_737(276)>

marking necessary through j_1118 stmt j_1118 = PHI <0(266)>
marking necessary through j_737 stmt j_737 = j_133 + 1;
processing: j_737 = j_133 + 1;

processing: j_1118 = PHI <0(266)>

processing: if (D.45026_736 <= maxptime_39)

marking necessary through D.45026_736 stmt D.45026_736 = D.45025_735 / 1000;
processing: D.45026_736 = D.45025_735 / 1000;

marking necessary through D.45025_735 stmt D.45025_735 = timp_134->microseconds_per_packet;
processing: D.45025_735 = timp_134->microseconds_per_packet;

marking necessary through timp_134 stmt timp_134 = PHI <timp_733(271), near_match_727(272)>
processing: timp_134 = PHI <timp_733(271), near_match_727(272)>

marking necessary through timp_733 stmt timp_733 = search[0];
marking necessary through near_match_727 stmt near_match_727 = near_matches[j_133].imp;
Marking useful stmt: if (num_732 != 0)

processing: if (num_732 != 0)

processing: near_match_727 = near_matches[j_133].imp;

processing: timp_733 = search[0];

processing: if (D.45010_722 != 0)

marking necessary through D.45010_722 stmt D.45010_722 = D.45008_720 && D.45009_721;
processing: D.45010_722 = D.45008_720 && D.45009_721;

marking necessary through D.45008_720 stmt D.45008_720 = m_idx_106 == 0;
marking necessary through D.45009_721 stmt D.45009_721 = nm_idx_120 != 0;
processing: D.45009_721 = nm_idx_120 != 0;

processing: D.45008_720 = m_idx_106 == 0;

processing: matches[m_idx_106].codec_idx = D.45029_743;

marking necessary through D.45029_743 stmt D.45029_743 = near_matches[j_133].codec_idx;
processing: D.45029_743 = near_matches[j_133].codec_idx;

processing: matches[m_idx_106].rate = near_rate.96_744;

marking necessary through near_rate.96_744 stmt near_rate.96_744 = (int) near_rate_726;
processing: near_rate.96_744 = (int) near_rate_726;

marking necessary through near_rate_726 stmt near_rate_726 = (uint32_t) D.45013_725;
processing: near_rate_726 = (uint32_t) D.45013_725;

marking necessary through D.45013_725 stmt D.45013_725 = near_matches[j_133].rate;
processing: D.45013_725 = near_matches[j_133].rate;

processing: matches[m_idx_106].imp = timp_134;

processing: matches[m_idx_106].map = near_map_728;

marking necessary through near_map_728 stmt near_map_728 = near_matches[j_133].map;
processing: near_map_728 = near_matches[j_133].map;

processing: near_matches[nm_idx_116].codec_idx = i_129;

processing: near_matches[nm_idx_116].rate = remote_codec_rate.92_701;

marking necessary through remote_codec_rate.92_701 stmt remote_codec_rate.92_701 = (int) remote_codec_rate_96;
processing: remote_codec_rate.92_701 = (int) remote_codec_rate_96;

processing: near_matches[nm_idx_116].imp = imp_630;

processing: near_matches[nm_idx_116].map = map_128;

processing: codec_fmtp = {};

processing: matches[m_idx_101].codec_idx = i_129;

processing: matches[m_idx_101].rate = codec_rate.94_703;

marking necessary through codec_rate.94_703 stmt codec_rate.94_703 = (int) codec_rate_633;
processing: codec_rate.94_703 = (int) codec_rate_633;

processing: matches[m_idx_101].imp = imp_630;

processing: matches[m_idx_101].map = map_128;

processing: attr_887 = m_28->m_attributes;

processing: if (D.45141_886 != 0)

processing: if (D.44831_974 != 0)

marking necessary through D.44831_974 stmt D.44831_974 = D.44829_972 && D.44830_973;
processing: D.44831_974 = D.44829_972 && D.44830_973;

marking necessary through D.44829_972 stmt D.44829_972 = D.44666_971 != 257;
marking necessary through D.44830_973 stmt D.44830_973 = got_webrtc_78 == 0;
processing: D.44830_973 = got_webrtc_78 == 0;

marking necessary through got_webrtc_78 stmt got_webrtc_78 = PHI <got_webrtc_79(89), got_webrtc_374(90)>
processing: got_webrtc_78 = PHI <got_webrtc_79(89), got_webrtc_374(90)>

marking necessary through got_webrtc_79 stmt got_webrtc_79 = PHI <0(88), got_webrtc_78(423)>
marking necessary through got_webrtc_374 stmt got_webrtc_374 = got_webrtc_79 + 1;
Marking useful stmt: if (D.44666_373 == 261)

processing: if (D.44666_373 == 261)

marking necessary through D.44666_373 stmt D.44666_373 = m_28->m_proto;
processing: D.44666_373 = m_28->m_proto;

processing: got_webrtc_374 = got_webrtc_79 + 1;

processing: got_webrtc_79 = PHI <0(88), got_webrtc_78(423)>

processing: D.44829_972 = D.44666_971 != 257;

marking necessary through D.44666_971 stmt D.44666_971 = m_28->m_proto;
processing: D.44666_971 = m_28->m_proto;

processing: if (D.45229_970 == 0)

processing: if (D.44822_967 == 0)

marking necessary through D.44822_967 stmt D.44822_967 = D.44821_966 & 4;
processing: D.44822_967 = D.44821_966 & 4;

marking necessary through D.44821_966 stmt D.44821_966 = D.44471_965->ndlb;
processing: D.44821_966 = D.44471_965->ndlb;

marking necessary through D.44471_965 stmt D.44471_965 = smh_186->mparams;
processing: D.44471_965 = smh_186->mparams;

processing: if (D.47950_1502 == 0)

marking necessary through D.47950_1502 stmt D.47950_1502 = PHI <1(365), 1(366), 0(367)>
processing: D.47950_1502 = PHI <1(365), 1(366), 0(367)>

Marking useful stmt: if (D.44619_963 == 0B)

Marking useful stmt: if (D.47951_1501 == 0)

processing: if (D.47951_1501 == 0)

marking necessary through D.47951_1501 stmt D.47951_1501 = *D.44619_963;
processing: D.47951_1501 = *D.44619_963;

marking necessary through D.44619_963 stmt D.44619_963 = attr_33->a_value;
processing: D.44619_963 = attr_33->a_value;

processing: if (D.44619_963 == 0B)

processing: if (D.45220_962 == 0)

marking necessary through D.45220_962 stmt D.45220_962 = strcasecmp (D.44590_961, "crypto");
processing: D.45220_962 = strcasecmp (D.44590_961, "crypto");

marking necessary through D.44590_961 stmt D.44590_961 = attr_33->a_name;
processing: D.44590_961 = attr_33->a_name;

processing: if (got_video_crypto_61 == 0)

Marking useful stmt: if (D.45169_908 == 0)

Marking useful stmt: if (D.44619_909 != 0B)

processing: if (D.44619_909 != 0B)

marking necessary through D.44619_909 stmt D.44619_909 = attr_33->a_value;
processing: D.44619_909 = attr_33->a_value;

processing: if (D.45169_908 == 0)

marking necessary through D.45169_908 stmt D.45169_908 = strcasecmp (D.44590_907, "rtcp");
processing: D.45169_908 = strcasecmp (D.44590_907, "rtcp");

marking necessary through D.44590_907 stmt D.44590_907 = attr_33->a_name;
processing: D.44590_907 = attr_33->a_name;

processing: if (__result_140 == 0)

marking necessary through __result_140 stmt __result_140 = PHI <__result_917(358), D.45187_923(359)>
processing: __result_140 = PHI <__result_917(358), D.45187_923(359)>

marking necessary through __result_917 stmt __result_917 = D.45176_913 + -49;
marking necessary through D.45187_923 stmt D.45187_923 = (int) D.45186_922;
Marking useful stmt: if (__result_917 == 0)

processing: if (__result_917 == 0)

processing: D.45187_923 = (int) D.45186_922;

marking necessary through D.45186_922 stmt D.45186_922 = MEM[(const unsigned char *)__s1_911 + 1B];
processing: D.45186_922 = MEM[(const unsigned char *)__s1_911 + 1B];

marking necessary through __s1_911 stmt __s1_911 = attr_33->a_value;
processing: __s1_911 = attr_33->a_value;

processing: __result_917 = D.45176_913 + -49;

marking necessary through D.45176_913 stmt D.45176_913 = (int) D.45175_912;
processing: D.45176_913 = (int) D.45175_912;

marking necessary through D.45175_912 stmt D.45175_912 = *__s1_911;
processing: D.45175_912 = *__s1_911;

processing: if (D.45155_899 == 0)

Marking useful stmt: if (D.45152_896 == 0)

marking necessary through D.45155_899 stmt D.45155_899 = strcasecmp (D.44590_898, "rtcp-fb");
processing: D.45155_899 = strcasecmp (D.44590_898, "rtcp-fb");

marking necessary through D.44590_898 stmt D.44590_898 = attr_33->a_name;
processing: D.44590_898 = attr_33->a_name;

processing: if (D.45152_896 == 0)

marking necessary through D.45152_896 stmt D.45152_896 = strcasecmp (D.44590_895, "framerate");
processing: D.45152_896 = strcasecmp (D.44590_895, "framerate");

marking necessary through D.44590_895 stmt D.44590_895 = attr_33->a_name;
processing: D.44590_895 = attr_33->a_name;

processing: if (D.44619_897 != 0B)

marking necessary through D.44619_897 stmt D.44619_897 = attr_33->a_value;
processing: D.44619_897 = attr_33->a_value;

processing: if (attr_33 != 0B)

processing: if (attr_30 != 0B)

processing: if (D.44831_542 != 0)

marking necessary through D.44831_542 stmt D.44831_542 = D.44829_540 && D.44830_541;
processing: D.44831_542 = D.44829_540 && D.44830_541;

marking necessary through D.44829_540 stmt D.44829_540 = D.44666_539 != 257;
marking necessary through D.44830_541 stmt D.44830_541 = got_webrtc_78 == 0;
processing: D.44830_541 = got_webrtc_78 == 0;

processing: D.44829_540 = D.44666_539 != 257;

marking necessary through D.44666_539 stmt D.44666_539 = m_28->m_proto;
processing: D.44666_539 = m_28->m_proto;

processing: if (D.44826_538 == 0)

processing: if (D.44822_535 == 0)

marking necessary through D.44822_535 stmt D.44822_535 = D.44821_534 & 4;
processing: D.44822_535 = D.44821_534 & 4;

marking necessary through D.44821_534 stmt D.44821_534 = D.44471_533->ndlb;
processing: D.44821_534 = D.44471_533->ndlb;

marking necessary through D.44471_533 stmt D.44471_533 = smh_186->mparams;
processing: D.44471_533 = smh_186->mparams;

processing: if (D.47900_1476 == 0)

marking necessary through D.47900_1476 stmt D.47900_1476 = PHI <1(165), 1(166), 0(167)>
processing: D.47900_1476 = PHI <1(165), 1(166), 0(167)>

Marking useful stmt: if (D.44619_531 == 0B)

Marking useful stmt: if (D.47901_1475 == 0)

processing: if (D.47901_1475 == 0)

marking necessary through D.47901_1475 stmt D.47901_1475 = *D.44619_531;
processing: D.47901_1475 = *D.44619_531;

marking necessary through D.44619_531 stmt D.44619_531 = attr_31->a_value;
processing: D.44619_531 = attr_31->a_value;

marking necessary through attr_31 stmt attr_31 = PHI <attr_507(152), attr_548(174)>
processing: attr_31 = PHI <attr_507(152), attr_548(174)>

marking necessary through attr_507 stmt attr_507 = m_28->m_attributes;
marking necessary through attr_548 stmt attr_548 = attr_31->a_next;
processing: attr_548 = attr_31->a_next;

processing: attr_507 = m_28->m_attributes;

processing: if (D.44619_531 == 0B)

processing: if (D.44815_530 == 0)

marking necessary through D.44815_530 stmt D.44815_530 = strcasecmp (D.44590_529, "crypto");
processing: D.44815_530 = strcasecmp (D.44590_529, "crypto");

marking necessary through D.44590_529 stmt D.44590_529 = attr_31->a_name;
processing: D.44590_529 = attr_31->a_name;

processing: if (got_crypto_54 <= 0)

Marking useful stmt: if (D.44810_525 == 0)

processing: if (D.44810_525 == 0)

Marking useful stmt: if (D.44805_520 == 0)

marking necessary through D.44810_525 stmt D.44810_525 = strcasecmp (D.44590_524, "maxptime");
processing: D.44810_525 = strcasecmp (D.44590_524, "maxptime");

marking necessary through D.44590_524 stmt D.44590_524 = attr_31->a_name;
processing: D.44590_524 = attr_31->a_name;

processing: if (D.44805_520 == 0)

Marking useful stmt: if (D.44795_509 == 0)

marking necessary through D.44805_520 stmt D.44805_520 = strcasecmp (D.44590_519, "ptime");
processing: D.44805_520 = strcasecmp (D.44590_519, "ptime");

marking necessary through D.44590_519 stmt D.44590_519 = attr_31->a_name;
processing: D.44590_519 = attr_31->a_name;

processing: if (D.44795_509 == 0)

Marking useful stmt: if (attr_31 != 0B)

marking necessary through D.44795_509 stmt D.44795_509 = strcasecmp (D.44590_508, "rtcp");
processing: D.44795_509 = strcasecmp (D.44590_508, "rtcp");

marking necessary through D.44590_508 stmt D.44590_508 = attr_31->a_name;
processing: D.44590_508 = attr_31->a_name;

processing: if (attr_31 != 0B)

processing: if (D.44619_526 != 0B)

marking necessary through D.44619_526 stmt D.44619_526 = attr_31->a_value;
processing: D.44619_526 = attr_31->a_value;

processing: if (D.44619_521 != 0B)

marking necessary through D.44619_521 stmt D.44619_521 = attr_31->a_value;
processing: D.44619_521 = attr_31->a_value;

processing: if (D.44619_510 != 0B)

marking necessary through D.44619_510 stmt D.44619_510 = attr_31->a_value;
processing: D.44619_510 = attr_31->a_value;

processing: if (m_idx_704 > 29)

processing: if (remote_codec_rate_96 != codec_rate_633)

Marking useful stmt: if (D.44992_692 != 0)

processing: if (D.44992_692 != 0)

marking necessary through D.44992_692 stmt D.44992_692 = D.44990_690 && D.44991_691;
processing: D.44992_692 = D.44990_690 && D.44991_691;

marking necessary through D.44990_690 stmt D.44990_690 = ptime_35 != 0;
marking necessary through D.44991_691 stmt D.44991_691 = codec_ms_90 != 0;
processing: D.44991_691 = codec_ms_90 != 0;

marking necessary through codec_ms_90 stmt codec_ms_90 = PHI <39(216), codec_ms_88(218), codec_ms_89(223), codec_ms_89(224), 32(215), codec_ms_88(217)>
processing: codec_ms_90 = PHI <39(216), codec_ms_88(218), codec_ms_89(223), codec_ms_89(224), 32(215), codec_ms_88(217)>

marking necessary through codec_ms_88 stmt codec_ms_88 = PHI <codec_ms_87(208), codec_ms_87(209), 33(210)>
marking necessary through codec_ms_89 stmt codec_ms_89 = PHI <codec_ms_88(221), codec_ms_618(222)>
processing: codec_ms_89 = PHI <codec_ms_88(221), codec_ms_618(222)>

marking necessary through codec_ms_618 stmt codec_ms_618 = D.44912_617 / 1000;
Marking useful stmt: if (D.44912_616 != 0)

processing: if (D.44912_616 != 0)

marking necessary through D.44912_616 stmt D.44912_616 = codec_fmtp.microseconds_per_packet;
processing: D.44912_616 = codec_fmtp.microseconds_per_packet;

processing: codec_ms_618 = D.44912_617 / 1000;

marking necessary through D.44912_617 stmt D.44912_617 = codec_fmtp.microseconds_per_packet;
processing: D.44912_617 = codec_fmtp.microseconds_per_packet;

processing: codec_ms_88 = PHI <codec_ms_87(208), codec_ms_87(209), 33(210)>

marking necessary through codec_ms_87 stmt codec_ms_87 = PHI <codec_ms_86(204), codec_ms_589(205)>
Marking useful stmt: if (ptime_35 == 0)

Marking useful stmt: if (D.44890_594 == 0)

processing: if (D.44890_594 == 0)

marking necessary through D.44890_594 stmt D.44890_594 = strcasecmp (D.44889_593, "g723");
processing: D.44890_594 = strcasecmp (D.44889_593, "g723");

marking necessary through D.44889_593 stmt D.44889_593 = map_128->rm_encoding;
processing: D.44889_593 = map_128->rm_encoding;

processing: if (ptime_35 == 0)

marking necessary through ptime_35 stmt ptime_35 = PHI <dptime_37(152), ptime_34(174)>
processing: ptime_35 = PHI <dptime_37(152), ptime_34(174)>

marking necessary through dptime_37 stmt dptime_37 = PHI <0(43), dptime_36(63)>
marking necessary through ptime_34 stmt ptime_34 = PHI <ptime_35(156), ptime_1473(159), ptime_35(162), ptime_35(163), ptime_35(164), ptime_35(168), ptime_35(173), ptime_35(155)>
processing: ptime_34 = PHI <ptime_35(156), ptime_1473(159), ptime_35(162), ptime_35(163), ptime_35(164), ptime_35(168), ptime_35(173), ptime_35(155)>

processing: dptime_37 = PHI <0(43), dptime_36(63)>

marking necessary through dptime_36 stmt dptime_36 = PHI <dptime_37(48), dptime_37(50), dptime_37(52), dptime_37(56), dptime_37(58), dptime_1468(60), dptime_37(61), dptime_37(62), dptime_37(55)>
processing: dptime_36 = PHI <dptime_37(48), dptime_37(50), dptime_37(52), dptime_37(56), dptime_37(58), dptime_1468(60), dptime_37(61), dptime_37(62), dptime_37(55)>

processing: codec_ms_87 = PHI <codec_ms_86(204), codec_ms_589(205)>

marking necessary through codec_ms_86 stmt codec_ms_86 = PHI <ptime_35(201), ptime_35(202), maxptime_39(203)>
marking necessary through codec_ms_589 stmt codec_ms_589 = (int) D.44885_588;
Marking useful stmt: if (codec_ms_86 == 0)

processing: if (codec_ms_86 == 0)

processing: codec_ms_589 = (int) D.44885_588;

processing: codec_ms_86 = PHI <ptime_35(201), ptime_35(202), maxptime_39(203)>

Marking useful stmt: if (maxptime_39 != 0)

Marking useful stmt: if (D.44879_584 != 0)

processing: if (D.44879_584 != 0)

marking necessary through D.44879_584 stmt D.44879_584 = D.44877_582 || D.44878_583;
processing: D.44879_584 = D.44877_582 || D.44878_583;

marking necessary through D.44877_582 stmt D.44877_582 = ptime_35 == 0;
marking necessary through D.44878_583 stmt D.44878_583 = ptime_35 > maxptime_39;
processing: D.44878_583 = ptime_35 > maxptime_39;

processing: D.44877_582 = ptime_35 == 0;

processing: if (maxptime_39 != 0)

processing: D.44990_690 = ptime_35 != 0;

processing: if (D.44994_693 != D.44930_694)

marking necessary through D.44994_693 stmt D.44994_693 = codec_ms_90 * 1000;
marking necessary through D.44930_694 stmt D.44930_694 = imp_630->microseconds_per_packet;
processing: D.44930_694 = imp_630->microseconds_per_packet;

processing: D.44994_693 = codec_ms_90 * 1000;

processing: if (match_3 != 0)

processing: if (D.44922_634 != 0)

marking necessary through D.44922_634 stmt D.44922_634 = imp_630->codec_type;
processing: D.44922_634 = imp_630->codec_type;

processing: if (m_idx_102 > 29)

processing: if (match_8 != 0)

processing: if (x_49 < 0)

Marking useful stmt: if (D.44858_570 == 0)

Marking useful stmt: if (cng_pt_25 == 0)

marking necessary through x_49 stmt x_49 = PHI <0(183), x_48(262)>
processing: x_49 = PHI <0(183), x_48(262)>

marking necessary through x_48 stmt x_48 = PHI <x_49(190), x_49(196), x_580(198), x_580(200), x_580(261)>
processing: x_48 = PHI <x_49(190), x_49(196), x_580(198), x_580(200), x_580(261)>

marking necessary through x_580 stmt x_580 = x_49 + 1;
processing: x_580 = x_49 + 1;

processing: if (cng_pt_25 == 0)

marking necessary through cng_pt_25 stmt cng_pt_25 = PHI <cng_pt_27(183), cng_pt_24(262)>
processing: cng_pt_25 = PHI <cng_pt_27(183), cng_pt_24(262)>

marking necessary through cng_pt_27 stmt cng_pt_27 = PHI <0(88), cng_pt_26(423)>
marking necessary through cng_pt_24 stmt cng_pt_24 = PHI <cng_pt_25(190), cng_pt_573(196), cng_pt_25(198), cng_pt_25(200), cng_pt_25(261)>
processing: cng_pt_24 = PHI <cng_pt_25(190), cng_pt_573(196), cng_pt_25(198), cng_pt_25(200), cng_pt_25(261)>

marking necessary through cng_pt_573 stmt cng_pt_573 = (switch_payload_t) D.44856_572;
processing: cng_pt_573 = (switch_payload_t) D.44856_572;

marking necessary through D.44856_572 stmt D.44856_572 = map_128->rm_pt;
processing: D.44856_572 = map_128->rm_pt;

processing: cng_pt_27 = PHI <0(88), cng_pt_26(423)>

marking necessary through cng_pt_26 stmt cng_pt_26 = PHI <cng_pt_25(325), cng_pt_27(327), cng_pt_27(328), cng_pt_27(402), cng_pt_27(421), cng_pt_27(422), cng_pt_25(322), cng_pt_25(323), cng_pt_25(320), cng_pt_25(321), cng_pt_25(326)>
processing: cng_pt_26 = PHI <cng_pt_25(325), cng_pt_27(327), cng_pt_27(328), cng_pt_27(402), cng_pt_27(421), cng_pt_27(422), cng_pt_25(322), cng_pt_25(323), cng_pt_25(320), cng_pt_25(321), cng_pt_25(326)>

processing: if (D.44858_570 == 0)

processing: if (D.44863_571 == 0)

marking necessary through D.44863_571 stmt D.44863_571 = strcasecmp (rm_encoding_130, "CN");
processing: D.44863_571 = strcasecmp (rm_encoding_130, "CN");

processing: if (D.44848_563 == 0)

marking necessary through D.44848_563 stmt D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
processing: D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");

processing: if (map_136 != 0B)

processing: if (D.44697_874 != 0)

marking necessary through D.44697_874 stmt D.44697_874 = m_28->m_port;
processing: D.44697_874 = m_28->m_port;

processing: if (D.44681_873 == 3)

marking necessary through D.44681_873 stmt D.44681_873 = m_28->m_type;
processing: D.44681_873 = m_28->m_type;

processing: if (connection_124 == 0B)

Marking useful stmt: if (D.44836_551 != 0)

Marking useful stmt: if (D.44839_552 == 0)

marking necessary through connection_124 stmt connection_124 = PHI <connection_554(179), connection_556(180)>
processing: connection_124 = PHI <connection_554(179), connection_556(180)>

marking necessary through connection_554 stmt connection_554 = sdp_198->sdp_connection;
marking necessary through connection_556 stmt connection_556 = m_28->m_connections;
Marking useful stmt: if (D.44546_555 != 0B)

processing: if (D.44546_555 != 0B)

marking necessary through D.44546_555 stmt D.44546_555 = m_28->m_connections;
processing: D.44546_555 = m_28->m_connections;

processing: connection_556 = m_28->m_connections;

processing: connection_554 = sdp_198->sdp_connection;

processing: if (D.44839_552 == 0)

marking necessary through D.44839_552 stmt D.44839_552 = got_avp_68 | got_webrtc_78;
processing: D.44839_552 = got_avp_68 | got_webrtc_78;

marking necessary through got_avp_68 stmt got_avp_68 = PHI <got_avp_69(97), got_avp_69(101), got_avp_69(102), got_avp_69(103), got_avp_69(96), got_avp_388(100)>
processing: got_avp_68 = PHI <got_avp_69(97), got_avp_69(101), got_avp_69(102), got_avp_69(103), got_avp_69(96), got_avp_388(100)>

marking necessary through got_avp_69 stmt got_avp_69 = PHI <0(88), got_avp_68(423)>
marking necessary through got_avp_388 stmt got_avp_388 = got_avp_69 + 1;
processing: got_avp_388 = got_avp_69 + 1;

processing: got_avp_69 = PHI <0(88), got_avp_68(423)>

processing: if (D.44836_551 != 0)

marking necessary through D.44836_551 stmt D.44836_551 = D.44834_549 && D.44835_550;
processing: D.44836_551 = D.44834_549 && D.44835_550;

marking necessary through D.44834_549 stmt D.44834_549 = got_crypto_54 == -1;
marking necessary through D.44835_550 stmt D.44835_550 = got_savp_74 != 0;
processing: D.44835_550 = got_savp_74 != 0;

marking necessary through got_savp_74 stmt got_savp_74 = PHI <got_savp_75(97), got_savp_75(101), got_savp_75(102), got_savp_75(103), got_savp_384(96), got_savp_75(100)>
processing: got_savp_74 = PHI <got_savp_75(97), got_savp_75(101), got_savp_75(102), got_savp_75(103), got_savp_384(96), got_savp_75(100)>

marking necessary through got_savp_75 stmt got_savp_75 = PHI <0(88), got_savp_74(423)>
marking necessary through got_savp_384 stmt got_savp_384 = got_savp_75 + 1;
processing: got_savp_384 = got_savp_75 + 1;

processing: got_savp_75 = PHI <0(88), got_savp_74(423)>

processing: D.44834_549 = got_crypto_54 == -1;

processing: return match_142;

marking necessary through match_142 stmt match_142 = PHI <0(4), 0(5), 0(7), match_17(427)>
processing: match_142 = PHI <0(4), 0(5), 0(7), match_17(427)>

marking necessary through match_17 stmt match_17 = PHI <1(107), 0(109), 0(127), 1(125), 0(172), 0(178), 0(182), 0(332), 0(372), match_16(424), 1(124), 1(137)>
processing: match_17 = PHI <1(107), 0(109), 0(127), 1(125), 0(172), 0(178), 0(182), 0(332), 0(372), match_16(424), 1(124), 1(137)>

Marking useful stmt: if (D.44703_399 != 0)

Marking useful stmt: if (D.44737_431 == 0)

Marking useful stmt: if (pass_127 != 0)

processing: if (pass_127 != 0)

marking necessary through pass_127 stmt pass_127 = PHI <pass_126(122), 0(119), 0(118), 0(429), 0(121), 0(120)>
processing: pass_127 = PHI <pass_126(122), 0(119), 0(118), 0(429), 0(121), 0(120)>

marking necessary through pass_126 stmt pass_126 = PHI <pass_406(113), pass_409(114), pass_409(115), 2(116)>
Marking useful stmt: if (D.44728_420 != 0)

Marking useful stmt: if (pass_126 == 2)

Marking useful stmt: if (D.44723_414 != 0)

Marking useful stmt: if (D.44730_422 == 0)

Marking useful stmt: if (D.44726_418 != 0)

Marking useful stmt: if (D.44724_416 == 0)

processing: if (D.44724_416 == 0)

processing: if (D.44726_418 != 0)

processing: if (D.44730_422 == 0)

processing: if (D.44723_414 != 0)

processing: if (pass_126 == 2)

processing: if (D.44728_420 != 0)

processing: pass_126 = PHI <pass_406(113), pass_409(114), pass_409(115), 2(116)>

marking necessary through pass_406 stmt pass_406 = (int) D.44706_405;
Marking useful stmt: if (var_402 != 0B)

Marking useful stmt: if (pass_409 == 0)

Marking useful stmt: if (D.44716_410 == 0)

processing: if (D.44716_410 == 0)

marking necessary through D.44716_410 stmt D.44716_410 = strcasecmp (var_402, "once");
processing: D.44716_410 = strcasecmp (var_402, "once");

processing: if (pass_409 == 0)

processing: if (var_402 != 0B)

processing: pass_406 = (int) D.44706_405;

processing: if (D.44737_431 == 0)

Marking useful stmt: if (D.44733_424 == 0)

processing: if (D.44733_424 == 0)

processing: if (D.44703_399 != 0)

Marking useful stmt: if (D.44699_396 != 0)

processing: if (D.44699_396 != 0)

processing: D.44471_1095->cng_pt = cng_pt_27;

marking necessary through D.44471_1095 stmt D.44471_1095 = smh_186->mparams;
processing: D.44471_1095 = smh_186->mparams;

marking necessary through .MEM_1255 stmt tmp = "";
marking necessary through .MEM_1271 stmt err = 0B;
processing: err = 0B;

Marking useful stmt: if (D.44758_451 != 0)

Marking useful stmt: if (D.39032_454 == 0)

Marking useful stmt: if (D.44762_456 == remote_port_430)

processing: if (D.44762_456 == remote_port_430)

marking necessary through D.44762_456 stmt D.44762_456 = D.44750_455->remote_sdp_port;
processing: D.44762_456 = D.44750_455->remote_sdp_port;

marking necessary through D.44750_455 stmt D.44750_455 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_455 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: if (D.39032_454 == 0)

marking necessary through D.39032_454 stmt D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
processing: D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);

marking necessary through D.44760_453 stmt D.44760_453 = D.44750_452->remote_sdp_ip;
processing: D.44760_453 = D.44750_452->remote_sdp_ip;

marking necessary through D.44750_452 stmt D.44750_452 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_452 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: if (D.44758_451 != 0)

marking necessary through D.44758_451 stmt D.44758_451 = D.44756_449 && D.44757_450;
processing: D.44758_451 = D.44756_449 && D.44757_450;

marking necessary through D.44756_449 stmt D.44756_449 = remote_host_428 != 0B;
marking necessary through D.44757_450 stmt D.44757_450 = remote_port_430 != 0;
processing: D.44757_450 = remote_port_430 != 0;

processing: D.44756_449 = remote_host_428 != 0B;

processing: tmp = "";

processing: sdp_parser_free (parser_196);

Marking useful stmt: if (parser_196 != 0B)

processing: if (parser_196 != 0B)

processing: check_ice (smh_186, 1, sdp_198, m_28);

processing: D.45317_1093 = switch_core_media_set_video_codec (session_161(D), 0);

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;

Marking useful stmt: if (iftmp.104_1511 != 0)

processing: if (iftmp.104_1511 != 0)

marking necessary through iftmp.104_1511 stmt iftmp.104_1511 = PHI <1(417), 0(418)>
processing: iftmp.104_1511 = PHI <1(417), 0(418)>

Marking useful stmt: if (D.47963_1509 != 0B)

Marking useful stmt: if (D.45313_1091 != 0B)

Marking useful stmt: if (D.47965_1507 != 0)

Marking useful stmt: if (D.47964_1508 != 0B)

Marking useful stmt: if (D.47962_1510 != 0B)

processing: if (D.47962_1510 != 0B)

marking necessary through D.47962_1510 stmt D.47962_1510 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;
processing: D.47962_1510 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;

processing: if (D.47964_1508 != 0B)

marking necessary through D.47964_1508 stmt D.47964_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;
processing: D.47964_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;

processing: if (D.47965_1507 != 0)

marking necessary through D.47965_1507 stmt D.47965_1507 = D.47966_1506 & 256;
processing: D.47965_1507 = D.47966_1506 & 256;

marking necessary through D.47966_1506 stmt D.47966_1506 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;
processing: D.47966_1506 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;

processing: if (D.45313_1091 != 0B)

marking necessary through D.45313_1091 stmt D.45313_1091 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec;
processing: D.45313_1091 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec;

processing: if (D.47963_1509 != 0B)

marking necessary through D.47963_1509 stmt D.47963_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;
processing: D.47963_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;

processing: switch_channel_set_variable_var_check (D.44530_1086, "rtp_video_recv_pt", &tmp, 1);

marking necessary through D.44530_1086 stmt D.44530_1086 = session_161(D)->channel;
processing: D.44530_1086 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.45307_1085);

marking necessary through D.45307_1085 stmt D.45307_1085 = (int) D.45306_1084;
processing: D.45307_1085 = (int) D.45306_1084;

marking necessary through D.45306_1084 stmt D.45306_1084 = D.45287_1083->recv_pt;
processing: D.45306_1084 = D.45287_1083->recv_pt;

marking necessary through D.45287_1083 stmt D.45287_1083 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1083 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: switch_core_media_check_video_codecs (session_161(D));

processing: switch_channel_set_variable_var_check (D.44530_1082, "rtp_video_pt", &tmp, 1);

marking necessary through D.44530_1082 stmt D.44530_1082 = session_161(D)->channel;
processing: D.44530_1082 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.45305_1081);

marking necessary through D.45305_1081 stmt D.45305_1081 = (int) D.45304_1080;
processing: D.45305_1081 = (int) D.45304_1080;

marking necessary through D.45304_1080 stmt D.45304_1080 = D.45287_1079->agreed_pt;
processing: D.45304_1080 = D.45287_1079->agreed_pt;

marking necessary through D.45287_1079 stmt D.45287_1079 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1079 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: switch_channel_set_variable_var_check (D.44530_1076, "rtp_video_fmtp", D.45303_1078, 1);

marking necessary through D.44530_1076 stmt D.44530_1076 = session_161(D)->channel;
marking necessary through D.45303_1078 stmt D.45303_1078 = D.45287_1077->rm_fmtp;
processing: D.45303_1078 = D.45287_1077->rm_fmtp;

marking necessary through D.45287_1077 stmt D.45287_1077 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1077 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: D.44530_1076 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_1075, "remote_video_port", &tmp, 1);

marking necessary through D.44530_1075 stmt D.44530_1075 = session_161(D)->channel;
processing: D.44530_1075 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_1072, "remote_video_ip", D.45302_1074, 1);

marking necessary through D.44530_1072 stmt D.44530_1072 = session_161(D)->channel;
marking necessary through D.45302_1074 stmt D.45302_1074 = D.45287_1073->remote_sdp_ip;
processing: D.45302_1074 = D.45287_1073->remote_sdp_ip;

marking necessary through D.45287_1073 stmt D.45287_1073 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1073 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: D.44530_1072 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.45301_1071);

marking necessary through D.45301_1071 stmt D.45301_1071 = (int) D.45300_1070;
processing: D.45301_1071 = (int) D.45300_1070;

marking necessary through D.45300_1070 stmt D.45300_1070 = D.45287_1069->remote_sdp_port;
processing: D.45300_1070 = D.45287_1069->remote_sdp_port;

marking necessary through D.45287_1069 stmt D.45287_1069 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1069 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: pmap_1045->agreed_pt = D.45293_1067;

Marking useful stmt: if (j_141 < m_idx_112)

marking necessary through D.45293_1067 stmt D.45293_1067 = (unsigned char) D.45248_1066;
processing: D.45293_1067 = (unsigned char) D.45248_1066;

marking necessary through D.45248_1066 stmt D.45248_1066 = map_1051->rm_pt;
processing: D.45248_1066 = map_1051->rm_pt;

marking necessary through map_1051 stmt map_1051 = matches[j_141].map;
processing: map_1051 = matches[j_141].map;

marking necessary through j_141 stmt j_141 = PHI <0(405), j_1068(409)>
processing: j_141 = PHI <0(405), j_1068(409)>

marking necessary through j_1068 stmt j_1068 = j_141 + 1;
processing: j_1068 = j_141 + 1;

processing: if (j_141 < m_idx_112)

processing: pmap_1045->rm_fmtp = D.45299_1065;

processing: D.45299_1065 = switch_core_perform_session_strdup (session_161(D), D.45298_1064, "src/switch_core_media.c", &__func__, 3813);

marking necessary through D.45298_1064 stmt D.45298_1064 = map_1051->rm_fmtp;
processing: D.45298_1064 = map_1051->rm_fmtp;

processing: pmap_1045->remote_sdp_port = D.45088_1063;

marking necessary through D.45088_1063 stmt D.45088_1063 = (short unsigned int) D.44697_1062;
processing: D.45088_1063 = (short unsigned int) D.44697_1062;

marking necessary through D.44697_1062 stmt D.44697_1062 = m_28->m_port;
processing: D.44697_1062 = m_28->m_port;

processing: pmap_1045->remote_sdp_ip = D.45297_1061;

processing: D.45297_1061 = switch_core_perform_session_strdup (session_161(D), D.45086_1060, "src/switch_core_media.c", &__func__, 3810);

marking necessary through D.45086_1060 stmt D.45086_1060 = connection_125->c_address;
processing: D.45086_1060 = connection_125->c_address;

processing: pmap_1045->codec_ms = D.45296_1059;

marking necessary through D.45296_1059 stmt D.45296_1059 = (uint32_t) D.45295_1058;
processing: D.45296_1059 = (uint32_t) D.45295_1058;

marking necessary through D.45295_1058 stmt D.45295_1058 = D.45294_1057 / 1000;
processing: D.45295_1058 = D.45294_1057 / 1000;

marking necessary through D.45294_1057 stmt D.45294_1057 = mimp_1050->microseconds_per_packet;
processing: D.45294_1057 = mimp_1050->microseconds_per_packet;

marking necessary through mimp_1050 stmt mimp_1050 = matches[j_141].imp;
processing: mimp_1050 = matches[j_141].imp;

processing: pmap_1045->rm_rate = D.45263_1056;

marking necessary through D.45263_1056 stmt D.45263_1056 = map_1051->rm_rate;
processing: D.45263_1056 = map_1051->rm_rate;

processing: pmap_1045->recv_pt = D.45293_1055;

marking necessary through D.45293_1055 stmt D.45293_1055 = (unsigned char) D.45248_1054;
processing: D.45293_1055 = (unsigned char) D.45248_1054;

marking necessary through D.45248_1054 stmt D.45248_1054 = map_1051->rm_pt;
processing: D.45248_1054 = map_1051->rm_pt;

processing: pmap_1045->rm_encoding = D.45292_1053;

processing: D.45292_1053 = switch_core_perform_session_strdup (session_161(D), D.45256_1052, "src/switch_core_media.c", &__func__, 3804);

marking necessary through D.45256_1052 stmt D.45256_1052 = map_1051->rm_encoding;
processing: D.45256_1052 = map_1051->rm_encoding;

processing: switch_rtp_set_default_payload (D.45288_1048, D.45291_1049);

Marking useful stmt: if (D.45288_1047 != 0B)

marking necessary through D.45288_1048 stmt D.45288_1048 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
marking necessary through D.45291_1049 stmt D.45291_1049 = pmap_1045->pt;
processing: D.45291_1049 = pmap_1045->pt;

processing: D.45288_1048 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;

processing: if (D.45288_1047 != 0B)

Marking useful stmt: if (j_141 == 0)

marking necessary through D.45288_1047 stmt D.45288_1047 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
processing: D.45288_1047 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;

processing: if (j_141 == 0)

processing: D.45287_1046->current = 1;

marking necessary through D.45287_1046 stmt D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
processing: D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1045;

processing: pmap_1045 = switch_core_media_add_payload_map (session_161(D), 1, D.45276_1033, D.45277_1035, sdp_type_546(D), D.45279_1038, D.45281_1040, D.45284_1044, 1);

marking necessary through D.45276_1033 stmt D.45276_1033 = D.45275_1032->rm_encoding;
marking necessary through D.45277_1035 stmt D.45277_1035 = D.45275_1034->rm_fmtp;
marking necessary through D.45279_1038 stmt D.45279_1038 = (uint32_t) D.45278_1037;
marking necessary through D.45281_1040 stmt D.45281_1040 = D.45280_1039->samples_per_second;
marking necessary through D.45284_1044 stmt D.45284_1044 = (uint32_t) D.45283_1043;
processing: D.45284_1044 = (uint32_t) D.45283_1043;

marking necessary through D.45283_1043 stmt D.45283_1043 = D.45282_1042 / 1000;
processing: D.45283_1043 = D.45282_1042 / 1000;

marking necessary through D.45282_1042 stmt D.45282_1042 = D.45280_1041->microseconds_per_packet;
processing: D.45282_1042 = D.45280_1041->microseconds_per_packet;

marking necessary through D.45280_1041 stmt D.45280_1041 = matches[j_141].imp;
processing: D.45280_1041 = matches[j_141].imp;

processing: D.45281_1040 = D.45280_1039->samples_per_second;

marking necessary through D.45280_1039 stmt D.45280_1039 = matches[j_141].imp;
processing: D.45280_1039 = matches[j_141].imp;

processing: D.45279_1038 = (uint32_t) D.45278_1037;

marking necessary through D.45278_1037 stmt D.45278_1037 = D.45275_1036->rm_pt;
processing: D.45278_1037 = D.45275_1036->rm_pt;

marking necessary through D.45275_1036 stmt D.45275_1036 = matches[j_141].map;
processing: D.45275_1036 = matches[j_141].map;

processing: D.45277_1035 = D.45275_1034->rm_fmtp;

marking necessary through D.45275_1034 stmt D.45275_1034 = matches[j_141].map;
processing: D.45275_1034 = matches[j_141].map;

processing: D.45276_1033 = D.45275_1032->rm_encoding;

marking necessary through D.45275_1032 stmt D.45275_1032 = matches[j_141].map;
processing: D.45275_1032 = matches[j_141].map;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;

processing: greedy_sort (smh_186, &matches, m_idx_112, codec_array_84, total_codecs_85);

Marking useful stmt: if (greedy_47 != 0)

processing: if (greedy_47 != 0)

marking necessary through greedy_47 stmt greedy_47 = PHI <greedy_211(22), 0(23), 1(24), 1(25), greedy_211(26)>
processing: greedy_47 = PHI <greedy_211(22), 0(23), 1(24), 1(25), greedy_211(26)>

marking necessary through greedy_211 stmt greedy_211 = D.44490_210 != 0;
processing: greedy_211 = D.44490_210 != 0;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45250_1016, D.45252_1018);

marking necessary through D.45250_1016 stmt D.45250_1016 = imp_986->iananame;
marking necessary through D.45252_1018 stmt D.45252_1018 = (int) D.45251_1017;
processing: D.45252_1018 = (int) D.45251_1017;

marking necessary through D.45251_1017 stmt D.45251_1017 = imp_986->ianacode;
processing: D.45251_1017 = imp_986->ianacode;

processing: D.45250_1016 = imp_986->iananame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45249_993, D.45250_994, D.45252_996);

marking necessary through D.45249_993 stmt D.45249_993 = (int) D.45248_992;
marking necessary through D.45250_994 stmt D.45250_994 = imp_986->iananame;
marking necessary through D.45252_996 stmt D.45252_996 = (int) D.45251_995;
processing: D.45252_996 = (int) D.45251_995;

marking necessary through D.45251_995 stmt D.45251_995 = imp_986->ianacode;
processing: D.45251_995 = imp_986->ianacode;

processing: D.45250_994 = imp_986->iananame;

processing: D.45249_993 = (int) D.45248_992;

marking necessary through D.45248_992 stmt D.45248_992 = map_136->rm_pt;
processing: D.45248_992 = map_136->rm_pt;

processing: D.45245_991 = switch_channel_test_flag (D.44530_990, 114);

marking necessary through D.44530_990 stmt D.44530_990 = session_161(D)->channel;
processing: D.44530_990 = session_161(D)->channel;

processing: D.45242_989 = switch_channel_direction (D.44530_988);

marking necessary through D.44530_988 stmt D.44530_988 = session_161(D)->channel;
processing: D.44530_988 = session_161(D)->channel;

processing: got_video_crypto_978 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, crypto_976, crypto_tag_1503, sdp_type_546(D));

marking necessary through crypto_976 stmt crypto_976 = attr_33->a_value;
processing: crypto_976 = attr_33->a_value;

processing: crypto_tag_1503 = strtol (crypto_976, 0B, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

processing: D.45229_970 = switch_true (D.45228_969);

processing: D.45228_969 = switch_channel_get_variable_dup (D.44530_968, "rtp_allow_crypto_in_avp", 1, -1);

marking necessary through D.44530_968 stmt D.44530_968 = session_161(D)->channel;
processing: D.44530_968 = session_161(D)->channel;

processing: D.44471_960->rtcp_video_interval_msec = "5000";

marking necessary through D.44471_960 stmt D.44471_960 = smh_186->mparams;
processing: D.44471_960 = smh_186->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45214_957;

marking necessary through D.45214_957 stmt D.45214_957 = (short unsigned int) D.47947_1500;
processing: D.45214_957 = (short unsigned int) D.47947_1500;

processing: D.47947_1500 = strtol (D.44619_955, 0B, 10);

marking necessary through D.44619_955 stmt D.44619_955 = attr_33->a_value;
processing: D.44619_955 = attr_33->a_value;

processing: switch_channel_set_variable_var_check (D.44530_953, "rtp_remote_video_rtcp_port", D.44619_954, 1);

marking necessary through D.44530_953 stmt D.44530_953 = session_161(D)->channel;
marking necessary through D.44619_954 stmt D.44619_954 = attr_33->a_value;
processing: D.44619_954 = attr_33->a_value;

processing: D.44530_953 = session_161(D)->channel;

processing: D.44471_906->rtcp_video_interval_msec = "10000";

marking necessary through D.44471_906 stmt D.44471_906 = smh_186->mparams;
processing: D.44471_906 = smh_186->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45165_905;

Marking useful stmt: if (D.45161_903 != 0B)

marking necessary through D.45165_905 stmt D.45165_905 = D.45164_904 + 1;
processing: D.45165_905 = D.45164_904 + 1;

marking necessary through D.45164_904 stmt D.45164_904 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;
processing: D.45164_904 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;

processing: if (D.45161_903 != 0B)

processing: D.45161_903 = switch_stristr ("fir", D.44619_902);

marking necessary through D.44619_902 stmt D.44619_902 = attr_33->a_value;
processing: D.44619_902 = attr_33->a_value;

processing: D.45141_886 = dtls_ok (session_161(D));

processing: D.45138_885 = switch_rtp_has_dtls ();

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

processing: switch_channel_set_variable_var_check (D.44530_879, "video_possible", "true", 1);

marking necessary through D.44530_879 stmt D.44530_879 = session_161(D)->channel;
processing: D.44530_879 = session_161(D)->channel;

processing: memset (&near_matches, 0, 480);

processing: memset (&matches, 0, 480);

processing: D.44471_870->recv_te = D.45111_871;

marking necessary through D.44471_870 stmt D.44471_870 = smh_186->mparams;
marking necessary through D.45111_871 stmt D.45111_871 = D.44471_870->te;
processing: D.45111_871 = D.44471_870->te;

processing: D.44471_870 = smh_186->mparams;

processing: D.44471_870->te = 0;

processing: D.44471_868->dtmf_type = 2;

marking necessary through D.44471_868 stmt D.44471_868 = smh_186->mparams;
processing: D.44471_868 = smh_186->mparams;

processing: switch_channel_set_variable_var_check (D.44530_867, "dtmf_type", "none", 1);

marking necessary through D.44530_867 stmt D.44530_867 = session_161(D)->channel;
processing: D.44530_867 = session_161(D)->channel;

processing: D.44471_864->recv_te = D.45111_865;

marking necessary through D.44471_864 stmt D.44471_864 = smh_186->mparams;
marking necessary through D.45111_865 stmt D.45111_865 = D.44471_864->te;
processing: D.45111_865 = D.44471_864->te;

processing: D.44471_864 = smh_186->mparams;

processing: D.44471_864->te = 0;

processing: D.44471_862->dtmf_type = 1;

marking necessary through D.44471_862 stmt D.44471_862 = smh_186->mparams;
processing: D.44471_862 = smh_186->mparams;

processing: switch_channel_set_variable_var_check (D.44530_861, "dtmf_type", "info", 1);

marking necessary through D.44530_861 stmt D.44530_861 = session_161(D)->channel;
processing: D.44530_861 = session_161(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");

processing: D.45126_860 = switch_false (D.45125_859);

processing: D.45125_859 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);

processing: switch_channel_set_variable_printf (D.44530_857, "rtp_2833_recv_payload", "%d", D.45121_858);

marking necessary through D.44530_857 stmt D.44530_857 = session_161(D)->channel;
marking necessary through D.45121_858 stmt D.45121_858 = (int) te_848;
processing: D.45121_858 = (int) te_848;

marking necessary through te_848 stmt te_848 = D.44471_846->recv_te;
processing: te_848 = D.44471_846->recv_te;

marking necessary through D.44471_846 stmt D.44471_846 = smh_186->mparams;
processing: D.44471_846 = smh_186->mparams;

processing: D.44530_857 = session_161(D)->channel;

processing: switch_rtp_set_telephony_recv_event (D.44605_856, te_848);

marking necessary through D.44605_856 stmt D.44605_856 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_856 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: switch_channel_set_variable_printf (D.44530_854, "rtp_2833_send_payload", "%d", D.45121_855);

marking necessary through D.44530_854 stmt D.44530_854 = session_161(D)->channel;
marking necessary through D.45121_855 stmt D.45121_855 = (int) te_848;
processing: D.45121_855 = (int) te_848;

processing: D.44530_854 = session_161(D)->channel;

processing: switch_rtp_set_telephony_event (D.44605_853, te_848);

marking necessary through D.44605_853 stmt D.44605_853 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_853 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: D.44471_851->dtmf_type = 0;

marking necessary through D.44471_851 stmt D.44471_851 = smh_186->mparams;
processing: D.44471_851 = smh_186->mparams;

processing: switch_channel_set_variable_var_check (D.44530_850, "dtmf_type", "rfc2833", 1);

marking necessary through D.44530_850 stmt D.44530_850 = session_161(D)->channel;
processing: D.44530_850 = session_161(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45121_849);

marking necessary through D.45121_849 stmt D.45121_849 = (int) te_848;
processing: D.45121_849 = (int) te_848;

processing: D.44471_846->recv_te = D.45111_847;

marking necessary through D.45111_847 stmt D.45111_847 = D.44471_846->te;
processing: D.45111_847 = D.44471_846->te;

processing: D.44471_846->te = best_te_21;

processing: switch_channel_set_variable_printf (D.44530_843, "rtp_2833_send_payload", "%d", D.44857_844);

marking necessary through D.44530_843 stmt D.44530_843 = session_161(D)->channel;
marking necessary through D.44857_844 stmt D.44857_844 = (int) best_te_21;
processing: D.44857_844 = (int) best_te_21;

processing: D.44530_843 = session_161(D)->channel;

processing: switch_rtp_set_telephony_event (D.44605_842, best_te_21);

marking necessary through D.44605_842 stmt D.44605_842 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_842 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: D.44471_840->dtmf_type = 0;

marking necessary through D.44471_840 stmt D.44471_840 = smh_186->mparams;
processing: D.44471_840 = smh_186->mparams;

processing: switch_channel_set_variable_var_check (D.44530_839, "dtmf_type", "rfc2833", 1);

marking necessary through D.44530_839 stmt D.44530_839 = session_161(D)->channel;
processing: D.44530_839 = session_161(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_838);

marking necessary through D.44857_838 stmt D.44857_838 = (int) best_te_21;
processing: D.44857_838 = (int) best_te_21;

processing: D.44471_836->te = best_te_21;

marking necessary through D.44471_836 stmt D.44471_836 = smh_186->mparams;
processing: D.44471_836 = smh_186->mparams;

processing: D.45115_835 = switch_channel_direction (channel_162);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45112_832);

marking necessary through D.45112_832 stmt D.45112_832 = (int) D.45111_831;
processing: D.45112_832 = (int) D.45111_831;

marking necessary through D.45111_831 stmt D.45111_831 = D.44471_830->te;
processing: D.45111_831 = D.44471_830->te;

marking necessary through D.44471_830 stmt D.44471_830 = smh_186->mparams;
processing: D.44471_830 = smh_186->mparams;

processing: D.45110_829 = switch_channel_test_flag (D.44530_828, 93);

marking necessary through D.44530_828 stmt D.44530_828 = session_161(D)->channel;
processing: D.44530_828 = session_161(D)->channel;

processing: D.45108_827 = switch_media_handle_test_media_flag (smh_186, 8);

processing: check_ice (smh_186, 0, sdp_198, m_28);

processing: D.45100_824 = switch_core_media_set_codec (session_161(D), 0, D.45099_823);

marking necessary through D.45099_823 stmt D.45099_823 = D.44471_822->codec_flags;
processing: D.45099_823 = D.44471_822->codec_flags;

marking necessary through D.44471_822 stmt D.44471_822 = smh_186->mparams;
processing: D.44471_822 = smh_186->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;

Marking useful stmt: if (iftmp.104_1494 != 0)

processing: if (iftmp.104_1494 != 0)

marking necessary through iftmp.104_1494 stmt iftmp.104_1494 = PHI <1(308), 0(309)>
processing: iftmp.104_1494 = PHI <1(308), 0(309)>

Marking useful stmt: if (D.47932_1492 != 0B)

Marking useful stmt: if (D.45095_820 != 0B)

Marking useful stmt: if (D.47934_1490 != 0)

Marking useful stmt: if (D.47933_1491 != 0B)

Marking useful stmt: if (D.47931_1493 != 0B)

processing: if (D.47931_1493 != 0B)

marking necessary through D.47931_1493 stmt D.47931_1493 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;
processing: D.47931_1493 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;

processing: if (D.47933_1491 != 0B)

marking necessary through D.47933_1491 stmt D.47933_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;
processing: D.47933_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;

processing: if (D.47934_1490 != 0)

marking necessary through D.47934_1490 stmt D.47934_1490 = D.47935_1489 & 256;
processing: D.47934_1490 = D.47935_1489 & 256;

marking necessary through D.47935_1489 stmt D.47935_1489 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;
processing: D.47935_1489 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;

processing: if (D.45095_820 != 0B)

marking necessary through D.45095_820 stmt D.45095_820 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec;
processing: D.45095_820 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec;

processing: if (D.47932_1492 != 0B)

marking necessary through D.47932_1492 stmt D.47932_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;
processing: D.47932_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;

processing: switch_channel_set_variable_var_check (D.44530_819, "rtp_audio_recv_pt", &tmp, 1);

marking necessary through D.44530_819 stmt D.44530_819 = session_161(D)->channel;
processing: D.44530_819 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.45094_818);

marking necessary through D.45094_818 stmt D.45094_818 = (int) D.45093_817;
processing: D.45094_818 = (int) D.45093_817;

marking necessary through D.45093_817 stmt D.45093_817 = D.44750_816->recv_pt;
processing: D.45093_817 = D.44750_816->recv_pt;

marking necessary through D.44750_816 stmt D.44750_816 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_816 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: switch_channel_set_variable_var_check (D.44530_815, "remote_media_port", &tmp, 1);

marking necessary through D.44530_815 stmt D.44530_815 = session_161(D)->channel;
processing: D.44530_815 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_812, "remote_media_ip", D.44760_814, 1);

marking necessary through D.44530_812 stmt D.44530_812 = session_161(D)->channel;
marking necessary through D.44760_814 stmt D.44760_814 = D.44750_813->remote_sdp_ip;
processing: D.44760_814 = D.44750_813->remote_sdp_ip;

marking necessary through D.44750_813 stmt D.44750_813 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_813 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44530_812 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.44767_811);

marking necessary through D.44767_811 stmt D.44767_811 = (int) D.44762_810;
processing: D.44767_811 = (int) D.44762_810;

marking necessary through D.44762_810 stmt D.44762_810 = D.44750_809->remote_sdp_port;
processing: D.44762_810 = D.44750_809->remote_sdp_port;

marking necessary through D.44750_809 stmt D.44750_809 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_809 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: pmap_761->recv_pt = D.45055_807;

Marking useful stmt: if (j_135 < m_idx_107)

marking necessary through D.45055_807 stmt D.45055_807 = (unsigned char) D.45054_806;
processing: D.45055_807 = (unsigned char) D.45054_806;

marking necessary through D.45054_806 stmt D.45054_806 = mmap_763->rm_pt;
processing: D.45054_806 = mmap_763->rm_pt;

marking necessary through mmap_763 stmt mmap_763 = matches[j_135].map;
processing: mmap_763 = matches[j_135].map;

marking necessary through j_135 stmt j_135 = PHI <0(281), j_808(301)>
processing: j_135 = PHI <0(281), j_808(301)>

marking necessary through j_808 stmt j_808 = j_135 + 1;
processing: j_808 = j_135 + 1;

processing: if (j_135 < m_idx_107)

processing: smh_186->num_negotiated_codecs = D.45090_805;

marking necessary through D.45090_805 stmt D.45090_805 = D.44655_804 + 1;
processing: D.45090_805 = D.44655_804 + 1;

marking necessary through D.44655_804 stmt D.44655_804 = smh_186->num_negotiated_codecs;
processing: D.44655_804 = smh_186->num_negotiated_codecs;

processing: smh_186->negotiated_codecs[D.44655_804] = mimp_762;

marking necessary through mimp_762 stmt mimp_762 = matches[j_135].imp;
processing: mimp_762 = matches[j_135].imp;

processing: pmap_761->agreed_pt = D.45055_803;

marking necessary through D.45055_803 stmt D.45055_803 = (unsigned char) D.45054_802;
processing: D.45055_803 = (unsigned char) D.45054_802;

marking necessary through D.45054_802 stmt D.45054_802 = mmap_763->rm_pt;
processing: D.45054_802 = mmap_763->rm_pt;

processing: pmap_761->rm_fmtp = D.45089_801;

processing: D.45089_801 = switch_core_perform_session_strdup (session_161(D), D.45080_800, "src/switch_core_media.c", &__func__, 3565);

marking necessary through D.45080_800 stmt D.45080_800 = mmap_763->rm_fmtp;
processing: D.45080_800 = mmap_763->rm_fmtp;

processing: pmap_761->remote_sdp_port = D.45088_799;

marking necessary through D.45088_799 stmt D.45088_799 = (short unsigned int) D.44697_798;
processing: D.45088_799 = (short unsigned int) D.44697_798;

marking necessary through D.44697_798 stmt D.44697_798 = m_28->m_port;
processing: D.44697_798 = m_28->m_port;

processing: pmap_761->remote_sdp_ip = D.45087_797;

processing: D.45087_797 = switch_core_perform_session_strdup (session_161(D), D.45086_796, "src/switch_core_media.c", &__func__, 3563);

marking necessary through D.45086_796 stmt D.45086_796 = connection_124->c_address;
processing: D.45086_796 = connection_124->c_address;

processing: pmap_761->adv_channels = D.45074_795;

Marking useful stmt: if (D.45071_789 == 0)

marking necessary through D.45074_795 stmt D.45074_795 = pmap_761->channels;
processing: D.45074_795 = pmap_761->channels;

processing: if (D.45071_789 == 0)

marking necessary through D.45071_789 stmt D.45071_789 = strcasecmp (D.45050_788, "opus");
processing: D.45071_789 = strcasecmp (D.45050_788, "opus");

marking necessary through D.45050_788 stmt D.45050_788 = mmap_763->rm_encoding;
processing: D.45050_788 = mmap_763->rm_encoding;

processing: pmap_761->channels = 1;

Marking useful stmt: if (D.47926_1488 == 0)

Marking useful stmt: if (D.45083_794 != 0B)

processing: if (D.45083_794 != 0B)

processing: if (D.47926_1488 == 0)

marking necessary through D.47926_1488 stmt D.47926_1488 = PHI <1(293), 1(294), 0(295)>
processing: D.47926_1488 = PHI <1(293), 1(294), 0(295)>

Marking useful stmt: if (D.45080_791 == 0B)

Marking useful stmt: if (D.47927_1487 == 0)

processing: if (D.47927_1487 == 0)

marking necessary through D.47927_1487 stmt D.47927_1487 = *D.45080_791;
processing: D.47927_1487 = *D.45080_791;

marking necessary through D.45080_791 stmt D.45080_791 = mmap_763->rm_fmtp;
processing: D.45080_791 = mmap_763->rm_fmtp;

processing: if (D.45080_791 == 0B)

processing: pmap_761->channels = 2;

processing: D.45083_794 = switch_stristr ("stereo=1", D.45080_793);

marking necessary through D.45080_793 stmt D.45080_793 = mmap_763->rm_fmtp;
processing: D.45080_793 = mmap_763->rm_fmtp;

processing: pmap_761->adv_channels = 2;

Marking useful stmt: if (D.45074_790 == 1)

processing: if (D.45074_790 == 1)

marking necessary through D.45074_790 stmt D.45074_790 = pmap_761->channels;
processing: D.45074_790 = pmap_761->channels;

processing: pmap_761->adv_channels = 1;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");

processing: pmap_761->channels = D.47923_146;

marking necessary through D.47923_146 stmt D.47923_146 = PHI <D.47923_1486(288), 1(287)>
processing: D.47923_146 = PHI <D.47923_1486(288), 1(287)>

Marking useful stmt: if (D.45067_784 != 0B)

processing: if (D.45067_784 != 0B)

marking necessary through D.45067_784 stmt D.45067_784 = mmap_763->rm_params;
processing: D.45067_784 = mmap_763->rm_params;

processing: D.47923_1486 = strtol (D.45067_785, 0B, 10);

marking necessary through D.45067_785 stmt D.45067_785 = mmap_763->rm_params;
processing: D.45067_785 = mmap_763->rm_params;

processing: pmap_761->bitrate = D.45065_783;

marking necessary through D.45065_783 stmt D.45065_783 = (uint32_t) D.45064_782;
processing: D.45065_783 = (uint32_t) D.45064_782;

marking necessary through D.45064_782 stmt D.45064_782 = mimp_762->bits_per_second;
processing: D.45064_782 = mimp_762->bits_per_second;

processing: pmap_761->codec_ms = D.45063_781;

marking necessary through D.45063_781 stmt D.45063_781 = (uint32_t) D.45062_780;
processing: D.45063_781 = (uint32_t) D.45062_780;

marking necessary through D.45062_780 stmt D.45062_780 = D.45061_779 / 1000;
processing: D.45062_780 = D.45061_779 / 1000;

marking necessary through D.45061_779 stmt D.45061_779 = mimp_762->microseconds_per_packet;
processing: D.45061_779 = mimp_762->microseconds_per_packet;

processing: pmap_761->rm_rate = D.45060_778;

Marking useful stmt: if (D.45057_777 != 0)

marking necessary through D.45060_778 stmt D.45060_778 = mimp_762->actual_samples_per_second;
processing: D.45060_778 = mimp_762->actual_samples_per_second;

processing: if (D.45057_777 != 0)

marking necessary through D.45057_777 stmt D.45057_777 = strcasecmp (D.45052_776, "g722");
processing: D.45057_777 = strcasecmp (D.45052_776, "g722");

marking necessary through D.45052_776 stmt D.45052_776 = mimp_762->iananame;
processing: D.45052_776 = mimp_762->iananame;

processing: pmap_761->adv_rm_rate = D.45056_775;

marking necessary through D.45056_775 stmt D.45056_775 = mimp_762->samples_per_second;
processing: D.45056_775 = mimp_762->samples_per_second;

processing: pmap_761->rm_rate = D.45056_774;

marking necessary through D.45056_774 stmt D.45056_774 = mimp_762->samples_per_second;
processing: D.45056_774 = mimp_762->samples_per_second;

processing: pmap_761->recv_pt = D.45055_773;

marking necessary through D.45055_773 stmt D.45055_773 = (unsigned char) D.45054_772;
processing: D.45055_773 = (unsigned char) D.45054_772;

marking necessary through D.45054_772 stmt D.45054_772 = mmap_763->rm_pt;
processing: D.45054_772 = mmap_763->rm_pt;

processing: pmap_761->iananame = D.45053_771;

processing: D.45053_771 = switch_core_perform_session_strdup (session_161(D), D.45052_770, "src/switch_core_media.c", &__func__, 3536);

marking necessary through D.45052_770 stmt D.45052_770 = mimp_762->iananame;
processing: D.45052_770 = mimp_762->iananame;

processing: pmap_761->rm_encoding = D.45051_769;

processing: D.45051_769 = switch_core_perform_session_strdup (session_161(D), D.45050_768, "src/switch_core_media.c", &__func__, 3535);

marking necessary through D.45050_768 stmt D.45050_768 = mmap_763->rm_encoding;
processing: D.45050_768 = mmap_763->rm_encoding;

processing: switch_rtp_set_default_payload (D.44605_766, D.45049_767);

Marking useful stmt: if (D.44605_765 != 0B)

marking necessary through D.44605_766 stmt D.44605_766 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
marking necessary through D.45049_767 stmt D.45049_767 = pmap_761->pt;
processing: D.45049_767 = pmap_761->pt;

processing: D.44605_766 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: if (D.44605_765 != 0B)

Marking useful stmt: if (j_135 == 0)

marking necessary through D.44605_765 stmt D.44605_765 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_765 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: if (j_135 == 0)

processing: D.44750_764->current = 1;

marking necessary through D.44750_764 stmt D.44750_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_761;

processing: pmap_761 = switch_core_media_add_payload_map (session_161(D), 0, D.45036_749, D.45037_751, sdp_type_546(D), D.45039_754, D.45041_756, D.45044_760, 1);

marking necessary through D.45036_749 stmt D.45036_749 = D.45035_748->rm_encoding;
marking necessary through D.45037_751 stmt D.45037_751 = D.45035_750->rm_fmtp;
marking necessary through D.45039_754 stmt D.45039_754 = (uint32_t) D.45038_753;
marking necessary through D.45041_756 stmt D.45041_756 = D.45040_755->samples_per_second;
marking necessary through D.45044_760 stmt D.45044_760 = (uint32_t) D.45043_759;
processing: D.45044_760 = (uint32_t) D.45043_759;

marking necessary through D.45043_759 stmt D.45043_759 = D.45042_758 / 1000;
processing: D.45043_759 = D.45042_758 / 1000;

marking necessary through D.45042_758 stmt D.45042_758 = D.45040_757->microseconds_per_packet;
processing: D.45042_758 = D.45040_757->microseconds_per_packet;

marking necessary through D.45040_757 stmt D.45040_757 = matches[j_135].imp;
processing: D.45040_757 = matches[j_135].imp;

processing: D.45041_756 = D.45040_755->samples_per_second;

marking necessary through D.45040_755 stmt D.45040_755 = matches[j_135].imp;
processing: D.45040_755 = matches[j_135].imp;

processing: D.45039_754 = (uint32_t) D.45038_753;

marking necessary through D.45038_753 stmt D.45038_753 = D.45035_752->rm_pt;
processing: D.45038_753 = D.45035_752->rm_pt;

marking necessary through D.45035_752 stmt D.45035_752 = matches[j_135].map;
processing: D.45035_752 = matches[j_135].map;

processing: D.45037_751 = D.45035_750->rm_fmtp;

marking necessary through D.45035_750 stmt D.45035_750 = matches[j_135].map;
processing: D.45035_750 = matches[j_135].map;

processing: D.45036_749 = D.45035_748->rm_encoding;

marking necessary through D.45035_748 stmt D.45035_748 = matches[j_135].map;
processing: D.45035_748 = matches[j_135].map;

processing: smh_186->num_negotiated_codecs = 0;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;

processing: greedy_sort (smh_186, &matches, m_idx_107, codec_array_84, total_codecs_85);

Marking useful stmt: if (greedy_47 != 0)

processing: if (greedy_47 != 0)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45027_738, D.45026_740, D.45028_741);

marking necessary through D.45027_738 stmt D.45027_738 = timp_134->iananame;
marking necessary through D.45026_740 stmt D.45026_740 = D.45025_739 / 1000;
marking necessary through D.45028_741 stmt D.45028_741 = timp_134->actual_samples_per_second;
processing: D.45028_741 = timp_134->actual_samples_per_second;

processing: D.45026_740 = D.45025_739 / 1000;

marking necessary through D.45025_739 stmt D.45025_739 = timp_134->microseconds_per_packet;
processing: D.45025_739 = timp_134->microseconds_per_packet;

processing: D.45027_738 = timp_134->iananame;

processing: num_732 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);

processing: switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45014_729, near_rate_145, codec_ms_93);

marking necessary through D.45014_729 stmt D.45014_729 = near_match_727->iananame;
marking necessary through near_rate_145 stmt near_rate_145 = PHI <near_rate_730(268), near_rate_726(269)>
marking necessary through codec_ms_93 stmt codec_ms_93 = PHI <codec_ms_90(261), codec_ms_92(263)>
processing: codec_ms_93 = PHI <codec_ms_90(261), codec_ms_92(263)>

marking necessary through codec_ms_92 stmt codec_ms_92 = PHI <codec_ms_95(183), codec_ms_91(262)>
processing: codec_ms_92 = PHI <codec_ms_95(183), codec_ms_91(262)>

marking necessary through codec_ms_95 stmt codec_ms_95 = PHI <0(88), codec_ms_94(423)>
marking necessary through codec_ms_91 stmt codec_ms_91 = PHI <codec_ms_92(190), codec_ms_92(196), codec_ms_92(198), codec_ms_92(200), codec_ms_90(261)>
processing: codec_ms_91 = PHI <codec_ms_92(190), codec_ms_92(196), codec_ms_92(198), codec_ms_92(200), codec_ms_90(261)>

processing: codec_ms_95 = PHI <0(88), codec_ms_94(423)>

marking necessary through codec_ms_94 stmt codec_ms_94 = PHI <codec_ms_93(325), codec_ms_95(327), codec_ms_95(328), codec_ms_95(402), codec_ms_95(421), codec_ms_95(422), codec_ms_93(322), codec_ms_93(323), codec_ms_93(320), codec_ms_93(321), codec_ms_93(326)>
processing: codec_ms_94 = PHI <codec_ms_93(325), codec_ms_95(327), codec_ms_95(328), codec_ms_95(402), codec_ms_95(421), codec_ms_95(422), codec_ms_93(322), codec_ms_93(323), codec_ms_93(320), codec_ms_93(321), codec_ms_93(326)>

processing: near_rate_145 = PHI <near_rate_730(268), near_rate_726(269)>

marking necessary through near_rate_730 stmt near_rate_730 = near_match_727->samples_per_second;
Marking useful stmt: if (near_rate_726 == 0)

processing: if (near_rate_726 == 0)

processing: near_rate_730 = near_match_727->samples_per_second;

processing: D.45014_729 = near_match_727->iananame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44927_705, D.44929_707, codec_rate_633, D.44931_709, bit_rate_632);

marking necessary through D.44927_705 stmt D.44927_705 = imp_630->iananame;
marking necessary through D.44929_707 stmt D.44929_707 = (int) D.44928_706;
marking necessary through D.44931_709 stmt D.44931_709 = D.44930_708 / 1000;
processing: D.44931_709 = D.44930_708 / 1000;

marking necessary through D.44930_708 stmt D.44930_708 = imp_630->microseconds_per_packet;
processing: D.44930_708 = imp_630->microseconds_per_packet;

processing: D.44929_707 = (int) D.44928_706;

marking necessary through D.44928_706 stmt D.44928_706 = imp_630->ianacode;
processing: D.44928_706 = imp_630->ianacode;

processing: D.44927_705 = imp_630->iananame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44927_696, D.44929_698, codec_rate_633, D.44931_700, bit_rate_632);

marking necessary through D.44927_696 stmt D.44927_696 = imp_630->iananame;
marking necessary through D.44929_698 stmt D.44929_698 = (int) D.44928_697;
marking necessary through D.44931_700 stmt D.44931_700 = D.44930_699 / 1000;
processing: D.44931_700 = D.44930_699 / 1000;

marking necessary through D.44930_699 stmt D.44930_699 = imp_630->microseconds_per_packet;
processing: D.44930_699 = imp_630->microseconds_per_packet;

processing: D.44929_698 = (int) D.44928_697;

marking necessary through D.44928_697 stmt D.44928_697 = imp_630->ianacode;
processing: D.44928_697 = imp_630->ianacode;

processing: D.44927_696 = imp_630->iananame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44927_686, D.44985_687, D.44931_689);

marking necessary through D.44927_686 stmt D.44927_686 = imp_630->iananame;
marking necessary through D.44985_687 stmt D.44985_687 = imp_630->samples_per_second;
marking necessary through D.44931_689 stmt D.44931_689 = D.44930_688 / 1000;
processing: D.44931_689 = D.44930_688 / 1000;

marking necessary through D.44930_688 stmt D.44930_688 = imp_630->microseconds_per_packet;
processing: D.44930_688 = imp_630->microseconds_per_packet;

processing: D.44985_687 = imp_630->samples_per_second;

processing: D.44927_686 = imp_630->iananame;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44925_636, remote_codec_rate.92_637, codec_ms_90, map_bit_rate_132, D.44927_638, D.44929_640, codec_rate_633, D.44931_642, bit_rate_632);

marking necessary through D.44925_636 stmt D.44925_636 = (int) D.44856_635;
marking necessary through remote_codec_rate.92_637 stmt remote_codec_rate.92_637 = (int) remote_codec_rate_98;
marking necessary through D.44927_638 stmt D.44927_638 = imp_630->iananame;
marking necessary through D.44929_640 stmt D.44929_640 = (int) D.44928_639;
marking necessary through D.44931_642 stmt D.44931_642 = D.44930_641 / 1000;
processing: D.44931_642 = D.44930_641 / 1000;

marking necessary through D.44930_641 stmt D.44930_641 = imp_630->microseconds_per_packet;
processing: D.44930_641 = imp_630->microseconds_per_packet;

processing: D.44929_640 = (int) D.44928_639;

marking necessary through D.44928_639 stmt D.44928_639 = imp_630->ianacode;
processing: D.44928_639 = imp_630->ianacode;

processing: D.44927_638 = imp_630->iananame;

processing: remote_codec_rate.92_637 = (int) remote_codec_rate_98;

processing: D.44925_636 = (int) D.44856_635;

marking necessary through D.44856_635 stmt D.44856_635 = map_128->rm_pt;
processing: D.44856_635 = map_128->rm_pt;

processing: D.44906_612 = switch_core_codec_parse_fmtp (D.44889_609, D.44893_610, D.44854_611, &codec_fmtp);

marking necessary through D.44889_609 stmt D.44889_609 = map_128->rm_encoding;
marking necessary through D.44893_610 stmt D.44893_610 = map_128->rm_fmtp;
marking necessary through D.44854_611 stmt D.44854_611 = map_128->rm_rate;
processing: D.44854_611 = map_128->rm_rate;

processing: D.44893_610 = map_128->rm_fmtp;

processing: D.44889_609 = map_128->rm_encoding;

processing: memset (&codec_fmtp, 0, 16);

processing: D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);

marking necessary through D.44884_587 stmt D.44884_587 = (uint32_t) D.44856_586;
processing: D.44884_587 = (uint32_t) D.44856_586;

marking necessary through D.44856_586 stmt D.44856_586 = map_128->rm_pt;
processing: D.44856_586 = map_128->rm_pt;

processing: switch_rtp_set_cng_pt (D.44605_576, D.44869_578);

Marking useful stmt: if (D.44605_574 != 0B)

marking necessary through D.44605_576 stmt D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
marking necessary through D.44869_578 stmt D.44869_578 = D.44471_577->cng_pt;
processing: D.44869_578 = D.44471_577->cng_pt;

marking necessary through D.44471_577 stmt D.44471_577 = smh_186->mparams;
processing: D.44471_577 = smh_186->mparams;

processing: D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: if (D.44605_574 != 0B)

marking necessary through D.44605_574 stmt D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);

marking necessary through D.44868_575 stmt D.44868_575 = (int) cng_pt_573;
processing: D.44868_575 = (int) cng_pt_573;

processing: D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);

marking necessary through D.44857_569 stmt D.44857_569 = (int) best_te_568;
processing: D.44857_569 = (int) best_te_568;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");

processing: got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, crypto_544, crypto_tag_1477, sdp_type_546(D));

marking necessary through crypto_544 stmt crypto_544 = attr_31->a_value;
processing: crypto_544 = attr_31->a_value;

processing: crypto_tag_1477 = strtol (crypto_544, 0B, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");

processing: D.44826_538 = switch_true (D.44825_537);

processing: D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);

marking necessary through D.44530_536 stmt D.44530_536 = session_161(D)->channel;
processing: D.44530_536 = session_161(D)->channel;

processing: maxptime_1474 = strtol (D.44619_527, 0B, 10);

marking necessary through D.44619_527 stmt D.44619_527 = attr_31->a_value;
processing: D.44619_527 = attr_31->a_value;

processing: ptime_1473 = strtol (D.44619_522, 0B, 10);

marking necessary through D.44619_522 stmt D.44619_522 = attr_31->a_value;
processing: D.44619_522 = attr_31->a_value;

processing: D.44471_518->rtcp_audio_interval_msec = "5000";

marking necessary through D.44471_518 stmt D.44471_518 = smh_186->mparams;
processing: D.44471_518 = smh_186->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;

marking necessary through D.44799_515 stmt D.44799_515 = (short unsigned int) D.47891_1472;
processing: D.44799_515 = (short unsigned int) D.47891_1472;

processing: D.47891_1472 = strtol (D.44619_513, 0B, 10);

marking necessary through D.44619_513 stmt D.44619_513 = attr_31->a_value;
processing: D.44619_513 = attr_31->a_value;

processing: switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_512, 1);

marking necessary through D.44530_511 stmt D.44530_511 = session_161(D)->channel;
marking necessary through D.44619_512 stmt D.44619_512 = attr_31->a_value;
processing: D.44619_512 = attr_31->a_value;

processing: D.44530_511 = session_161(D)->channel;

processing: D.44784_499 = dtls_ok (session_161(D));

processing: D.44781_498 = switch_rtp_has_dtls ();

processing: switch_core_session_rwunlock (other_session.89_491);

marking necessary through other_session.89_491 stmt other_session.89_491 = other_session;
processing: other_session.89_491 = other_session;

processing: switch_core_session_queue_message (other_session.89_490, msg_487);

marking necessary through other_session.89_490 stmt other_session.89_490 = other_session;
processing: other_session.89_490 = other_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));

processing: msg_487->string_arg = D.44773_489;

processing: D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);

marking necessary through other_session.89_488 stmt other_session.89_488 = other_session;
processing: other_session.89_488 = other_session;

processing: msg_487->from = "src/switch_core_media.c";

processing: msg_487->message_id = 21;

processing: msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);

marking necessary through other_session.89_486 stmt other_session.89_486 = other_session;
processing: other_session.89_486 = other_session;

processing: switch_channel_set_flag_value (D.44772_485, 101, 1);

marking necessary through D.44772_485 stmt D.44772_485 = other_session.89_484->channel;
processing: D.44772_485 = other_session.89_484->channel;

marking necessary through other_session.89_484 stmt other_session.89_484 = other_session;
processing: other_session.89_484 = other_session;

processing: switch_channel_set_flag_value (D.44482_483, 101, 1);

marking necessary through D.44482_483 stmt D.44482_483 = D.44481_482->channel;
processing: D.44482_483 = D.44481_482->channel;

marking necessary through D.44481_482 stmt D.44481_482 = smh_186->session;
processing: D.44481_482 = smh_186->session;

processing: switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);

marking necessary through other_session.89_481 stmt other_session.89_481 = other_session;
processing: other_session.89_481 = other_session;

processing: switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);

Marking useful stmt: if (D.44768_479 != 0)

processing: if (D.44768_479 != 0)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);

marking necessary through err.90_480 stmt err.90_480 = err;
processing: err.90_480 = err;

processing: D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);

marking necessary through D.44605_474 stmt D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
marking necessary through D.44760_476 stmt D.44760_476 = D.44750_475->remote_sdp_ip;
marking necessary through D.44762_478 stmt D.44762_478 = D.44750_477->remote_sdp_port;
processing: D.44762_478 = D.44750_477->remote_sdp_port;

marking necessary through D.44750_477 stmt D.44750_477 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_477 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44760_476 = D.44750_475->remote_sdp_ip;

marking necessary through D.44750_475 stmt D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);

marking necessary through D.44530_473 stmt D.44530_473 = session_161(D)->channel;
processing: D.44530_473 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);

marking necessary through D.44530_470 stmt D.44530_470 = session_161(D)->channel;
marking necessary through D.44760_472 stmt D.44760_472 = D.44750_471->remote_sdp_ip;
processing: D.44760_472 = D.44750_471->remote_sdp_ip;

marking necessary through D.44750_471 stmt D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44530_470 = session_161(D)->channel;

processing: switch_snprintf (&tmp, 32, "%d", D.44767_469);

marking necessary through D.44767_469 stmt D.44767_469 = (int) D.44762_468;
processing: D.44767_469 = (int) D.44762_468;

marking necessary through D.44762_468 stmt D.44762_468 = D.44750_467->remote_sdp_port;
processing: D.44762_468 = D.44750_467->remote_sdp_port;

marking necessary through D.44750_467 stmt D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);

marking necessary through D.44766_461 stmt D.44766_461 = (int) remote_port_430;
marking necessary through D.44760_463 stmt D.44760_463 = D.44750_462->remote_sdp_ip;
marking necessary through D.44767_466 stmt D.44767_466 = (int) D.44762_465;
processing: D.44767_466 = (int) D.44762_465;

marking necessary through D.44762_465 stmt D.44762_465 = D.44750_464->remote_sdp_port;
processing: D.44762_465 = D.44750_464->remote_sdp_port;

marking necessary through D.44750_464 stmt D.44750_464 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_464 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44760_463 = D.44750_462->remote_sdp_ip;

marking necessary through D.44750_462 stmt D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44766_461 = (int) remote_port_430;

processing: D.44765_460 = switch_channel_get_name (D.44530_459);

marking necessary through D.44530_459 stmt D.44530_459 = session_161(D)->channel;
processing: D.44530_459 = session_161(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);

processing: D.44764_458 = switch_channel_get_name (D.44530_457);

marking necessary through D.44530_457 stmt D.44530_457 = session_161(D)->channel;
processing: D.44530_457 = session_161(D)->channel;

processing: D.44750_447->remote_sdp_port = D.44753_448;

marking necessary through D.44750_447 stmt D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
marking necessary through D.44753_448 stmt D.44753_448 = t38_options_394->remote_port;
processing: D.44753_448 = t38_options_394->remote_port;

processing: D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44750_444->remote_sdp_ip = D.44752_446;

marking necessary through D.44750_444 stmt D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
processing: D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;

processing: D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);

marking necessary through D.44751_445 stmt D.44751_445 = t38_options_394->remote_ip;
processing: D.44751_445 = t38_options_394->remote_ip;

processing: switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);

Marking useful stmt: if (D.44747_443 != 0)

processing: if (D.44747_443 != 0)

Marking useful stmt: if (D.44743_440 != 0)

processing: if (D.44743_440 != 0)

processing: D.44747_443 = switch_true (D.44746_442);

processing: D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);

marking necessary through D.44530_441 stmt D.44530_441 = session_161(D)->channel;
processing: D.44530_441 = session_161(D)->channel;

processing: D.44743_440 = switch_true (D.44742_439);

processing: D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);

marking necessary through D.44530_438 stmt D.44530_438 = session_161(D)->channel;
processing: D.44530_438 = session_161(D)->channel;

processing: switch_core_session_rwunlock (other_session.89_435);

marking necessary through other_session.89_435 stmt other_session.89_435 = other_session;
processing: other_session.89_435 = other_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);

processing: D.44741_434 = switch_channel_get_name (other_channel_426);

processing: D.44740_433 = switch_channel_get_name (D.44530_432);

marking necessary through D.44530_432 stmt D.44530_432 = session_161(D)->channel;
processing: D.44530_432 = session_161(D)->channel;

processing: D.44737_431 = switch_channel_test_flag (other_channel_426, 1);

processing: remote_port_430 = switch_rtp_get_remote_port (D.44605_429);

marking necessary through D.44605_429 stmt D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: remote_host_428 = switch_rtp_get_remote_host (D.44605_427);

marking necessary through D.44605_427 stmt D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: other_channel_426 = switch_core_session_get_channel (other_session.89_425);

marking necessary through other_session.89_425 stmt other_session.89_425 = other_session;
processing: other_session.89_425 = other_session;

processing: D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);

processing: D.44730_422 = switch_rtp_ready (D.44605_421);

marking necessary through D.44605_421 stmt D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: D.44728_420 = switch_channel_test_flag (D.44530_419, 29);

marking necessary through D.44530_419 stmt D.44530_419 = session_161(D)->channel;
processing: D.44530_419 = session_161(D)->channel;

processing: D.44726_418 = switch_channel_test_flag (D.44530_417, 15);

marking necessary through D.44530_417 stmt D.44530_417 = session_161(D)->channel;
processing: D.44530_417 = session_161(D)->channel;

processing: D.44724_416 = switch_channel_test_flag (D.44530_415, 103);

marking necessary through D.44530_415 stmt D.44530_415 = session_161(D)->channel;
processing: D.44530_415 = session_161(D)->channel;

processing: D.44723_414 = switch_channel_test_flag (D.44482_413, 101);

marking necessary through D.44482_413 stmt D.44482_413 = D.44481_412->channel;
processing: D.44482_413 = D.44481_412->channel;

marking necessary through D.44481_412 stmt D.44481_412 = smh_186->session;
processing: D.44481_412 = smh_186->session;

processing: pass_409 = switch_true (var_402);

processing: *proceed_209(D) = 0;

Marking useful stmt: if (proceed_209(D) != 0B)

processing: if (proceed_209(D) != 0B)

Marking useful stmt: if (D.44707_408 != 0)

processing: if (D.44707_408 != 0)

processing: D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);

marking necessary through D.44530_407 stmt D.44530_407 = session_161(D)->channel;
processing: D.44530_407 = session_161(D)->channel;

processing: D.44706_405 = switch_channel_test_flag (D.44482_404, 101);

marking necessary through D.44482_404 stmt D.44482_404 = D.44481_403->channel;
processing: D.44482_404 = D.44481_403->channel;

marking necessary through D.44481_403 stmt D.44481_403 = smh_186->session;
processing: D.44481_403 = smh_186->session;

processing: var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);

processing: switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);

marking necessary through D.44530_400 stmt D.44530_400 = session_161(D)->channel;
processing: D.44530_400 = session_161(D)->channel;

processing: D.44703_399 = switch_true (D.44702_398);

processing: D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);

processing: D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);

marking necessary through D.44530_395 stmt D.44530_395 = session_161(D)->channel;
processing: D.44530_395 = session_161(D)->channel;

processing: t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_28);

processing: switch_channel_set_flag_value (D.44530_378, 107, 1);

Marking useful stmt: if (D.44672_377 == 0)

marking necessary through D.44530_378 stmt D.44530_378 = session_161(D)->channel;
processing: D.44530_378 = session_161(D)->channel;

processing: if (D.44672_377 == 0)

Marking useful stmt: if (D.44669_375 != 0B)

marking necessary through D.44672_377 stmt D.44672_377 = strcasecmp (D.44669_376, "UDP/TLS/RTP/SAVPF");
processing: D.44672_377 = strcasecmp (D.44669_376, "UDP/TLS/RTP/SAVPF");

marking necessary through D.44669_376 stmt D.44669_376 = m_28->m_proto_name;
processing: D.44669_376 = m_28->m_proto_name;

processing: if (D.44669_375 != 0B)

marking necessary through D.44669_375 stmt D.44669_375 = m_28->m_proto_name;
processing: D.44669_375 = m_28->m_proto_name;

processing: switch_core_session_set_ice (session_161(D));

processing: check_ice (smh_186, 1, sdp_198, 0B);

processing: check_ice (smh_186, 0, sdp_198, 0B);

processing: switch_core_media_pass_zrtp_hash (session_161(D));

processing: switch_core_media_find_zrtp_hash (session_161(D), sdp_198);

processing: switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);

Marking useful stmt: if (D.44661_366 != 0B)

Marking useful stmt: if (D.44663_367 != 0B)

Marking useful stmt: if (D.44665_368 != 0B)

marking necessary through D.44530_369 stmt D.44530_369 = session_161(D)->channel;
processing: D.44530_369 = session_161(D)->channel;

processing: if (D.44665_368 != 0B)

processing: if (D.44663_367 != 0B)

processing: if (D.44661_366 != 0B)

processing: D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));

processing: D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));

processing: D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));

processing: switch_core_media_prepare_codecs (session_161(D), 0);

processing: D.44471_362->num_codecs = 0;

marking necessary through D.44471_362 stmt D.44471_362 = smh_186->mparams;
processing: D.44471_362 = smh_186->mparams;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");

processing: reneg_356 = switch_true (val_355);

processing: val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);

marking necessary through D.44530_354 stmt D.44530_354 = session_161(D)->channel;
processing: D.44530_354 = session_161(D)->channel;

processing: reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);

processing: reneg_352 = switch_true (val_351);

processing: val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);

marking necessary through D.44530_350 stmt D.44530_350 = session_161(D)->channel;
processing: D.44530_350 = session_161(D)->channel;

processing: reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);

processing: D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_44);

processing: D.44471_345->hold_laps = D.44639_347;

marking necessary through D.44471_345 stmt D.44471_345 = smh_186->mparams;
marking necessary through D.44639_347 stmt D.44639_347 = D.44636_346 + 1;
processing: D.44639_347 = D.44636_346 + 1;

marking necessary through D.44636_346 stmt D.44636_346 = D.44471_345->hold_laps;
processing: D.44636_346 = D.44471_345->hold_laps;

processing: D.44471_345 = smh_186->mparams;

processing: D.44635_342 = switch_true (val_341);

processing: val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);

marking necessary through D.44530_340 stmt D.44530_340 = session_161(D)->channel;
processing: D.44530_340 = session_161(D)->channel;

processing: D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);

processing: switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);

Marking useful stmt: if (D.44626_337 != 0)

marking necessary through D.44530_338 stmt D.44530_338 = session_161(D)->channel;
processing: D.44530_338 = session_161(D)->channel;

processing: if (D.44626_337 != 0)

marking necessary through D.44626_337 stmt D.44626_337 = D.44624_335 && D.44625_336;
processing: D.44626_337 = D.44624_335 && D.44625_336;

marking necessary through D.44624_335 stmt D.44624_335 = sendonly_44 != 1;
marking necessary through D.44625_336 stmt D.44625_336 = recvonly_46 != 1;
processing: D.44625_336 = recvonly_46 != 1;

marking necessary through recvonly_46 stmt recvonly_46 = PHI <0(43), recvonly_45(63)>
processing: recvonly_46 = PHI <0(43), recvonly_45(63)>

marking necessary through recvonly_45 stmt recvonly_45 = PHI <recvonly_46(48), recvonly_46(50), recvonly_46(52), 1(56), recvonly_46(58), recvonly_46(60), recvonly_46(61), recvonly_46(62), 1(55)>
processing: recvonly_45 = PHI <recvonly_46(48), recvonly_46(50), recvonly_46(52), 1(56), recvonly_46(58), recvonly_46(60), recvonly_46(61), recvonly_46(62), 1(55)>

processing: D.44624_335 = sendonly_44 != 1;

processing: dmaxptime_1469 = strtol (D.44619_332, 0B, 10);

marking necessary through D.44619_332 stmt D.44619_332 = attr_29->a_value;
processing: D.44619_332 = attr_29->a_value;

processing: dptime_1468 = strtol (D.44619_328, 0B, 10);

marking necessary through D.44619_328 stmt D.44619_328 = attr_29->a_value;
processing: D.44619_328 = attr_29->a_value;

processing: switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);

marking necessary through D.44530_322 stmt D.44530_322 = session_161(D)->channel;
processing: D.44530_322 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);

marking necessary through D.44530_321 stmt D.44530_321 = session_161(D)->channel;
processing: D.44530_321 = session_161(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;

processing: switch_rtp_set_max_missed_packets (D.44605_320, 0);

marking necessary through D.44605_320 stmt D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: D.44606_319 = switch_rtp_ready (D.44605_318);

marking necessary through D.44605_318 stmt D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
processing: D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;

processing: switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);

marking necessary through D.44530_316 stmt D.44530_316 = session_161(D)->channel;
processing: D.44530_316 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);

marking necessary through D.44530_313 stmt D.44530_313 = session_161(D)->channel;
processing: D.44530_313 = session_161(D)->channel;

processing: switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);

marking necessary through D.44530_309 stmt D.44530_309 = session_161(D)->channel;
processing: D.44530_309 = session_161(D)->channel;

processing: switch_channel_set_flag_value (D.44530_247, 93, 1);

Marking useful stmt: if (D.44533_246 != 0)

marking necessary through D.44530_247 stmt D.44530_247 = session_161(D)->channel;
processing: D.44530_247 = session_161(D)->channel;

processing: if (D.44533_246 != 0)

Marking useful stmt: if (val_245 != 0B)

processing: if (val_245 != 0B)

processing: D.44533_246 = switch_true (val_245);

processing: val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);

marking necessary through D.44530_244 stmt D.44530_244 = session_161(D)->channel;
processing: D.44530_244 = session_161(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");

Marking useful stmt: if (D.44526_241 != 0B)

processing: if (D.44526_241 != 0B)

Marking useful stmt: if (D.44523_239 != 0)

marking necessary through D.44526_241 stmt D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
processing: D.44526_241 = strstr (D.44509_240, "Sonus_UAC");

marking necessary through D.44509_240 stmt D.44509_240 = smh_186->origin;
processing: D.44509_240 = smh_186->origin;

processing: if (D.44523_239 != 0)

Marking useful stmt: if (D.44509_227 != 0B)

marking necessary through D.44523_239 stmt D.44523_239 = D.44512_238 & 2;
processing: D.44523_239 = D.44512_238 & 2;

marking necessary through D.44512_238 stmt D.44512_238 = D.44471_237->auto_rtp_bugs;
processing: D.44512_238 = D.44471_237->auto_rtp_bugs;

marking necessary through D.44471_237 stmt D.44471_237 = smh_186->mparams;
processing: D.44471_237 = smh_186->mparams;

processing: if (D.44509_227 != 0B)

marking necessary through D.44509_227 stmt D.44509_227 = smh_186->origin;
processing: D.44509_227 = smh_186->origin;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;

marking necessary through D.44529_243 stmt D.44529_243 = D.44521_242 | 2;
processing: D.44529_243 = D.44521_242 | 2;

marking necessary through D.44521_242 stmt D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
processing: D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");

Marking useful stmt: if (D.44518_234 != 0B)

processing: if (D.44518_234 != 0B)

Marking useful stmt: if (D.44514_231 != 0)

marking necessary through D.44518_234 stmt D.44518_234 = strstr (D.44509_233, "CiscoSystemsSIP-GW-UserAgent");
processing: D.44518_234 = strstr (D.44509_233, "CiscoSystemsSIP-GW-UserAgent");

marking necessary through D.44509_233 stmt D.44509_233 = smh_186->origin;
processing: D.44509_233 = smh_186->origin;

processing: if (D.44514_231 != 0)

marking necessary through D.44514_231 stmt D.44514_231 = D.44513_230 & 1;
processing: D.44514_231 = D.44513_230 & 1;

marking necessary through D.44513_230 stmt D.44513_230 = (int) D.44512_229;
processing: D.44513_230 = (int) D.44512_229;

marking necessary through D.44512_229 stmt D.44512_229 = D.44471_228->auto_rtp_bugs;
processing: D.44512_229 = D.44471_228->auto_rtp_bugs;

marking necessary through D.44471_228 stmt D.44471_228 = smh_186->mparams;
processing: D.44471_228 = smh_186->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;

marking necessary through D.44522_236 stmt D.44522_236 = D.44521_235 | 1;
processing: D.44522_236 = D.44521_235 | 1;

marking necessary through D.44521_235 stmt D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
processing: D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;

processing: smh_186->origin = D.44508_226;

processing: D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);

marking necessary through D.44507_225 stmt D.44507_225 = D.44506_224->o_username;
processing: D.44507_225 = D.44506_224->o_username;

marking necessary through D.44506_224 stmt D.44506_224 = sdp_198->sdp_origin;
processing: D.44506_224 = sdp_198->sdp_origin;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);

processing: val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);

processing: D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);

processing: D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);

processing: *proceed_209(D) = 1;

Marking useful stmt: if (proceed_209(D) != 0B)

processing: if (proceed_209(D) != 0B)

processing: pmap_1463->current = 0;

processing: pmap_1463->negotiated = 0;

processing: pmap_1459->current = 0;

processing: pmap_1459->negotiated = 0;

processing: switch_core_session_parse_crypto_prefs (session_161(D));

processing: switch_channel_clear_flag (D.44482_208, 109);

Marking useful stmt: if (D.44485_204 != 0)

marking necessary through D.44482_208 stmt D.44482_208 = D.44481_207->channel;
processing: D.44482_208 = D.44481_207->channel;

marking necessary through D.44481_207 stmt D.44481_207 = smh_186->session;
processing: D.44481_207 = smh_186->session;

processing: if (D.44485_204 != 0)

Marking useful stmt: if (tmp_203 != 0B)

processing: if (tmp_203 != 0B)

Marking useful stmt: if (D.44478_200 != 0)

processing: if (D.44478_200 != 0)

processing: switch_channel_clear_flag (D.44482_206, 111);

marking necessary through D.44482_206 stmt D.44482_206 = D.44481_205->channel;
processing: D.44482_206 = D.44481_205->channel;

marking necessary through D.44481_205 stmt D.44481_205 = smh_186->session;
processing: D.44481_205 = smh_186->session;

processing: D.44485_204 = switch_false (tmp_203);

processing: tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);

marking necessary through D.44482_202 stmt D.44482_202 = D.44481_201->channel;
processing: D.44482_202 = D.44481_201->channel;

marking necessary through D.44481_201 stmt D.44481_201 = smh_186->session;
processing: D.44481_201 = smh_186->session;

processing: D.44478_200 = dtls_ok (session_161(D));

processing: sdp_parser_free (parser_196);

processing: sdp_198 = sdp_session (parser_196);

processing: parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);

marking necessary through D.44473_195 stmt D.44473_195 = (int) D.44472_194;
processing: D.44473_195 = (int) D.44472_194;

marking necessary through D.44472_194 stmt D.44472_194 = strlen (r_sdp_193(D));
processing: D.44472_194 = strlen (r_sdp_193(D));

processing: __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);

processing: channel_162 = switch_core_session_get_channel (session_161(D));


Eliminating unnecessary statements:
Deleting : remote_codec_rate_663 = fmtp_remote_codec_rate_99;

Deleting : D.47923_786 = D.47923_1486;

Deleting : map_bit_rate_592 = map_bit_rate_1481;

Deleting : codec_ms_585 = maxptime_39;

Deleting : csui.173_1478 = csui.173_591;

Deleting : timp_734 = near_match_727;

Deleting : codec_ms_581 = ptime_35;

Deleting : near_rate_731 = near_rate_726;

Deleting : __result_927 = D.45187_923;

Deleting : maxptime_528 = maxptime_1474;

Deleting : ptime_523 = ptime_1473;

Deleting : got_video_avp_389 = got_video_avp_71 + 1;

Deleting : got_video_savp_385 = got_video_savp_73 + 1;

Deleting : match_1096 = match_17;

Deleting : dmaxptime_333 = dmaxptime_1469;

Deleting : maxptime_372 = dmaxptime_41;

Deleting : ptime_371 = dptime_37;

Deleting : dptime_329 = dptime_1468;

Deleting : got_video_avp_70 = PHI <got_video_avp_71(97), got_video_avp_389(101), got_video_avp_71(102), got_video_avp_71(103), got_video_avp_71(96), got_video_avp_71(100)>

Deleting : got_video_savp_72 = PHI <got_video_savp_385(97), got_video_savp_73(101), got_video_savp_73(102), got_video_savp_73(103), got_video_savp_73(96), got_video_savp_73(100)>

Deleting : .MEM_1122 = PHI <.MEM_1139(266)>

Deleting : got_video_avp_71 = PHI <0(88), got_video_avp_70(423)>

Deleting : got_video_savp_73 = PHI <0(88), got_video_savp_72(423)>

Removed 18 of 1625 statements (1%)
Removed 5 of 236 PHI nodes (2%)
Removing basic block 97
;; basic block 97, loop depth 1, count 0
;; prev block 96, next block 98
;; pred:      
;; succ:       104 (fallthru,exec)
<bb 97>:
# DEBUG got_video_savp => NULL
goto <bb 104>;


Removing basic block 101
;; basic block 101, loop depth 1, count 0
;; prev block 100, next block 102
;; pred:      
;; succ:       104 (fallthru,exec)
<bb 101>:
# DEBUG got_video_avp => NULL
goto <bb 104>;


Removing basic block 269
;; basic block 269, loop depth 2, count 0
;; prev block 268, next block 270
;; pred:      
;; succ:       270 (fallthru,exec)
<bb 269>:


Removing basic block 272
;; basic block 272, loop depth 2, count 0
;; prev block 271, next block 273
;; pred:      
;; succ:       273 (fallthru,exec)
<bb 272>:
# DEBUG timp => near_match_727


Scope blocks after cleanups:

{ Scope block #0 
  uint8_t match;
  switch_payload_t best_te;
  switch_payload_t te;
  switch_payload_t cng_pt;
  struct sdp_media_t * m;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  int maxptime;
  int dmaxptime;
  int sendonly;
  int recvonly;
  int greedy;
  int x;
  int skip; (unused)
  struct switch_channel_t * channel;
  const char * val;
  const char * crypto;
  int got_crypto;
  int got_video_crypto;
  int got_audio;
  int got_avp;
  int got_video_avp; (unused)
  int got_video_savp; (unused)
  int got_savp;
  int got_udptl;
  int got_webrtc;
  int scrooge;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  int reneg;
  const struct switch_codec_implementation_t * * codec_array;
  int total_codecs;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  struct switch_media_handle_t * smh;
  uint32_t near_rate;
  const struct switch_codec_implementation_t * mimp;
  const struct switch_codec_implementation_t * near_match;
  struct sdp_rtpmap_t * mmap;
  struct sdp_rtpmap_t * near_map;
  struct matches matches[30];
  struct matches near_matches[30];
  int codec_ms;
  uint32_t remote_codec_rate;
  uint32_t fmtp_remote_codec_rate;
  const char * tmp;
  int m_idx;
  int nm_idx;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  void done = <<< error >>>; (unused)

  { Scope block #206 src/switch_core_media.c:3033 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #207 Originating from :#0 

    }

  }

  { Scope block #208 src/switch_core_media.c:3031 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #209 Originating from :#0 

    }

  }

  { Scope block #210 src/switch_core_media.c:3006 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #211 Originating from :#0 

    }

  }

  { Scope block #212 src/switch_core_media.c:2951 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
    struct switch_rtp_engine_t * engine; (unused)

    { Scope block #213 Originating from :#0 
      struct payload_map_t * pmap;

    }

  }

  { Scope block #214 src/switch_core_media.c:2950 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
    struct switch_rtp_engine_t * engine; (unused)

    { Scope block #215 Originating from :#0 
      struct payload_map_t * pmap;

    }

  }

  { Scope block #216 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

    { Scope block #217 
      const unsigned char * __s1; (unused)
      register int __result;

    }

  }

  { Scope block #218 
    struct sdp_connection_t * connection;
    struct switch_core_session_t * other_session;

    { Scope block #219 
      struct switch_t38_options_t * t38_options;

      { Scope block #220 
        const char * var;
        int pass;

        { Scope block #221 
          struct switch_channel_t * other_channel;
          struct switch_core_session_message_t * msg;
          char * remote_host;
          switch_port_t remote_port;
          char tmp[32];

          { Scope block #222 
            size_t __s1_len; (unused)
            size_t __s2_len; (unused)

          }

          { Scope block #223 
            const char * err;

          }

        }

      }

    }

    { Scope block #224 
      struct sdp_rtpmap_t * map;

      { Scope block #225 src/switch_core_media.c:3256 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #226 Originating from :#0 

        }

      }

      { Scope block #227 src/switch_core_media.c:3255 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #228 Originating from :#0 

        }

      }

      { Scope block #229 src/switch_core_media.c:3253 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #230 Originating from :#0 

        }

      }

      { Scope block #231 src/switch_core_media.c:3248 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #232 Originating from :#0 

        }

      }

      { Scope block #233 src/switch_core_media.c:3238 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #234 Originating from :#0 

        }

      }

      { Scope block #235 
        int crypto_tag;

        { Scope block #236 src/switch_core_media.c:3269 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #237 Originating from :#0 

          }

        }

      }

      { Scope block #238 
        int32_t i;
        const char * rm_encoding;
        uint32_t map_bit_rate;
        struct switch_codec_fmtp_t codec_fmtp;

        { Scope block #239 src/switch_core_media.c:3352 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #240 Originating from :#0 

          }

        }

        { Scope block #241 src/switch_core_media.c:3342 Originating from :  static uint32_t switch_known_bitrate (switch_payload_t); 
          switch_payload_t payload; (unused)

        }

        { Scope block #243 
          const struct switch_codec_implementation_t * imp;
          uint32_t bit_rate;
          uint32_t codec_rate;

          { Scope block #244 src/switch_core_media.c:3386 Originating from :  static int _zstr (const char *); 
            const char * s; (unused)

            { Scope block #245 Originating from :#0 

            }

          }

        }

      }

      { Scope block #246 
        int j;

        { Scope block #247 
          const struct switch_codec_implementation_t * search[1];
          char * prefs[1];
          char tmp[80];
          int num;
          const struct switch_codec_implementation_t * timp;

        }

      }

      { Scope block #248 
        int j;

        { Scope block #249 
          struct payload_map_t * pmap;

          { Scope block #250 src/switch_core_media.c:3554 Originating from :  static int _zstr (const char *); 
            const char * s; (unused)

            { Scope block #251 Originating from :#0 

            }

          }

          { Scope block #252 src/switch_core_media.c:3545 Originating from :  extern int atoi (const char *); 
            const char * __nptr; (unused)

            { Scope block #253 Originating from :#0 

            }

          }

        }

      }

      { Scope block #254 
        char tmp[50];

        { Scope block #255 src/switch_core_media.c:3595 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
          struct switch_codec_t * codec; (unused)

          { Scope block #256 Originating from :#0 

          }

        }

      }

    }

    { Scope block #257 
      struct sdp_rtpmap_t * map;
      const char * rm_encoding;
      const struct switch_codec_implementation_t * mimp;
      int vmatch;
      int i;

      { Scope block #258 src/switch_core_media.c:3705 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #259 Originating from :#0 

        }

      }

      { Scope block #260 src/switch_core_media.c:3701 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #261 Originating from :#0 

        }

      }

      { Scope block #262 src/switch_core_media.c:3688 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #263 Originating from :#0 

        }

      }

      { Scope block #264 src/switch_core_media.c:3678 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #265 Originating from :#0 

        }

      }

      { Scope block #266 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

        { Scope block #267 
          const unsigned char * __s1;
          register int __result;

        }

      }

      { Scope block #268 
        int crypto_tag;

        { Scope block #269 src/switch_core_media.c:3718 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #270 Originating from :#0 

          }

        }

      }

      { Scope block #271 
        const struct switch_codec_implementation_t * imp;

        { Scope block #272 src/switch_core_media.c:3745 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #273 Originating from :#0 

          }

        }

      }

      { Scope block #274 
        char tmp[50];
        int j;

        { Scope block #275 src/switch_core_media.c:3838 Originating from :  static switch_bool_t switch_core_codec_ready (struct switch_codec_t *); 
          struct switch_codec_t * codec; (unused)

          { Scope block #276 Originating from :#0 

          }

        }

        { Scope block #277 
          struct payload_map_t * pmap;

        }

      }

    }

  }

}
switch_core_media_negotiate_sdp (struct switch_core_session_t * session, const char * r_sdp, uint8_t * proceed, switch_sdp_type_t sdp_type)
{
  int iftmp.104;
  uint32_t D.47966;
  uint32_t D.47965;
  struct switch_mutex_t * D.47964;
  struct switch_codec_interface_t * D.47963;
  const struct switch_codec_implementation_t * D.47962;
  const char D.47958;
  int D.47957;
  const char D.47951;
  int D.47950;
  int D.47947;
  const char D.47944;
  int D.47943;
  const char D.47940;
  int D.47939;
  int iftmp.104;
  uint32_t D.47935;
  uint32_t D.47934;
  struct switch_mutex_t * D.47933;
  struct switch_codec_interface_t * D.47932;
  const struct switch_codec_implementation_t * D.47931;
  const char D.47927;
  int D.47926;
  int D.47923;
  const char D.47920;
  int D.47919;
  const char D.47916;
  int D.47915;
  unsigned char csui.173;
  const char D.47901;
  int D.47900;
  int D.47891;
  const char D.47888;
  int D.47887;
  const char D.47878;
  int D.47877;
  uint8_t D.47875;
  struct payload_map_t * pmap;
  uint8_t D.47872;
  struct payload_map_t * pmap;
  struct payload_map_t * pmap;
  int j;
  char tmp[50];
  const struct switch_codec_implementation_t * imp;
  int crypto_tag;
  register int __result;
  const unsigned char * __s1;
  int i;
  int vmatch;
  const struct switch_codec_implementation_t * mimp;
  const char * rm_encoding;
  struct sdp_rtpmap_t * map;
  char tmp[50];
  struct payload_map_t * pmap;
  int j;
  const struct switch_codec_implementation_t * timp;
  int num;
  char tmp[80];
  char * prefs[1];
  const struct switch_codec_implementation_t * search[1];
  int j;
  uint32_t codec_rate;
  uint32_t bit_rate;
  const struct switch_codec_implementation_t * imp;
  struct switch_codec_fmtp_t codec_fmtp;
  uint32_t map_bit_rate;
  const char * rm_encoding;
  int32_t i;
  int crypto_tag;
  struct sdp_rtpmap_t * map;
  const char * err;
  char tmp[32];
  switch_port_t remote_port;
  char * remote_host;
  struct switch_core_session_message_t * msg;
  struct switch_channel_t * other_channel;
  int pass;
  const char * var;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * other_session;
  struct sdp_connection_t * connection;
  register int __result;
  static const char __func__[32] = "switch_core_media_negotiate_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_negotiate_sdp";
  int nm_idx;
  int m_idx;
  const char * tmp;
  uint32_t fmtp_remote_codec_rate;
  uint32_t remote_codec_rate;
  int codec_ms;
  struct matches near_matches[30];
  struct matches matches[30];
  struct sdp_rtpmap_t * near_map;
  struct sdp_rtpmap_t * mmap;
  const struct switch_codec_implementation_t * near_match;
  const struct switch_codec_implementation_t * mimp;
  uint32_t near_rate;
  struct switch_media_handle_t * smh;
  int total_codecs;
  const struct switch_codec_implementation_t * * codec_array;
  int reneg;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  int scrooge;
  int got_webrtc;
  int got_udptl;
  int got_savp;
  int got_avp;
  int got_audio;
  int got_video_crypto;
  int got_crypto;
  const char * crypto;
  const char * val;
  struct switch_channel_t * channel;
  int x;
  int greedy;
  int recvonly;
  int sendonly;
  int dmaxptime;
  int maxptime;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  switch_payload_t cng_pt;
  switch_payload_t te;
  switch_payload_t best_te;
  uint8_t match;
  switch_status_t D.45317;
  struct switch_codec_t * D.45313;
  int D.45307;
  switch_payload_t D.45306;
  int D.45305;
  switch_payload_t D.45304;
  char * D.45303;
  char * D.45302;
  int D.45301;
  switch_port_t D.45300;
  char * D.45299;
  const char * D.45298;
  char * D.45297;
  uint32_t D.45296;
  int D.45295;
  const int D.45294;
  unsigned char D.45293;
  char * D.45292;
  switch_payload_t D.45291;
  struct switch_rtp_t * D.45288;
  struct payload_map_t * D.45287;
  uint32_t D.45284;
  int D.45283;
  const int D.45282;
  const uint32_t D.45281;
  const struct switch_codec_implementation_t * D.45280;
  uint32_t D.45279;
  <unnamed-unsigned:7> D.45278;
  const char * D.45277;
  const char * D.45276;
  struct sdp_rtpmap_t * D.45275;
  _Bool D.45268;
  _Bool D.45267;
  const uint32_t D.45264;
  long unsigned int D.45263;
  int D.45260;
  const char * D.45256;
  int D.45252;
  const switch_payload_t D.45251;
  char * const D.45250;
  int D.45249;
  <unnamed-unsigned:7> D.45248;
  uint32_t D.45245;
  switch_call_direction_t D.45242;
  const switch_codec_type_t D.45239;
  const struct switch_codec_implementation_t * * D.45238;
  unsigned int D.45237;
  unsigned int i.99;
  int D.45229;
  const char * D.45228;
  int D.45220;
  char * D.45215;
  short unsigned int D.45214;
  int D.45187;
  const unsigned char D.45186;
  int D.45176;
  const unsigned char D.45175;
  int D.45169;
  uint8_t D.45165;
  uint8_t D.45164;
  const char * D.45161;
  int D.45155;
  int D.45152;
  int D.45144;
  int D.45141;
  int D.45138;
  int D.45126;
  const char * D.45125;
  int D.45121;
  switch_call_direction_t D.45115;
  int D.45112;
  switch_payload_t D.45111;
  uint32_t D.45110;
  int32_t D.45108;
  switch_status_t D.45100;
  uint32_t D.45099;
  struct switch_codec_t * D.45095;
  int D.45094;
  switch_payload_t D.45093;
  int D.45090;
  char * D.45089;
  short unsigned int D.45088;
  char * D.45087;
  const char * D.45086;
  const char * D.45083;
  const char * D.45080;
  int D.45074;
  int D.45071;
  const char * D.45067;
  uint32_t D.45065;
  const int D.45064;
  uint32_t D.45063;
  int D.45062;
  const int D.45061;
  const uint32_t D.45060;
  int D.45057;
  const uint32_t D.45056;
  unsigned char D.45055;
  <unnamed-unsigned:7> D.45054;
  char * D.45053;
  char * const D.45052;
  char * D.45051;
  const char * D.45050;
  switch_payload_t D.45049;
  uint32_t D.45044;
  int D.45043;
  const int D.45042;
  const uint32_t D.45041;
  const struct switch_codec_implementation_t * D.45040;
  uint32_t D.45039;
  <unnamed-unsigned:7> D.45038;
  const char * D.45037;
  const char * D.45036;
  struct sdp_rtpmap_t * D.45035;
  int near_rate.96;
  int D.45029;
  const uint32_t D.45028;
  char * const D.45027;
  int D.45026;
  const int D.45025;
  char * const D.45014;
  int D.45013;
  _Bool D.45010;
  _Bool D.45009;
  _Bool D.45008;
  _Bool D.45005;
  _Bool D.45004;
  _Bool D.45003;
  switch_rtp_crypto_mode_t D.45002;
  _Bool D.45000;
  _Bool D.44999;
  _Bool D.44998;
  int D.44997;
  int codec_rate.94;
  int D.44994;
  _Bool D.44992;
  _Bool D.44991;
  _Bool D.44990;
  const uint32_t D.44985;
  int D.44980;
  int D.44978;
  _Bool D.44975;
  _Bool D.44974;
  _Bool D.44973;
  _Bool D.44970;
  _Bool D.44969;
  int D.44964;
  int D.44961;
  _Bool D.44958;
  _Bool D.44957;
  _Bool D.44956;
  _Bool D.44953;
  _Bool D.44952;
  _Bool D.44951;
  const uint32_t D.44948;
  int D.44945;
  int iftmp.93;
  int D.44938;
  int D.44937;
  int D.44931;
  const int D.44930;
  int D.44929;
  const switch_payload_t D.44928;
  char * const D.44927;
  int remote_codec_rate.92;
  int D.44925;
  const switch_codec_type_t D.44922;
  const int D.44921;
  const struct switch_codec_implementation_t * * D.44920;
  unsigned int D.44919;
  unsigned int i.91;
  uint32_t D.44915;
  int D.44912;
  int D.44909;
  switch_status_t D.44906;
  int D.44901;
  int D.44897;
  const char * D.44893;
  int D.44890;
  const char * D.44889;
  uint32_t D.44885;
  uint32_t D.44884;
  _Bool D.44879;
  _Bool D.44878;
  _Bool D.44877;
  switch_payload_t D.44869;
  int D.44868;
  int D.44863;
  int32_t D.44858;
  int D.44857;
  <unnamed-unsigned:7> D.44856;
  long unsigned int D.44855;
  long unsigned int D.44854;
  int D.44848;
  int D.44839;
  _Bool D.44836;
  _Bool D.44835;
  _Bool D.44834;
  _Bool D.44831;
  _Bool D.44830;
  _Bool D.44829;
  int D.44826;
  const char * D.44825;
  unsigned int D.44822;
  switch_core_media_NDLB_t D.44821;
  int D.44815;
  int D.44810;
  int D.44805;
  char * D.44800;
  short unsigned int D.44799;
  int D.44795;
  int D.44787;
  int D.44784;
  int D.44781;
  _Bool D.44779;
  _Bool D.44778;
  _Bool D.44777;
  char * D.44773;
  struct switch_channel_t * D.44772;
  const char * err.90;
  switch_status_t D.44768;
  int D.44767;
  int D.44766;
  char * D.44765;
  char * D.44764;
  switch_port_t D.44762;
  char * D.44760;
  int D.39032;
  _Bool D.44758;
  _Bool D.44757;
  _Bool D.44756;
  uint16_t D.44753;
  char * D.44752;
  const char * D.44751;
  struct payload_map_t * D.44750;
  int D.44747;
  const char * D.44746;
  int D.44743;
  const char * D.44742;
  char * D.44741;
  char * D.44740;
  uint32_t D.44737;
  struct switch_core_session_t * other_session.89;
  switch_status_t D.44733;
  uint8_t D.44730;
  uint32_t D.44728;
  uint32_t D.44726;
  uint32_t D.44724;
  uint32_t D.44723;
  int D.44716;
  int D.44707;
  uint32_t D.44706;
  int D.44703;
  const char * D.44702;
  int D.44699;
  long unsigned int D.44697;
  sdp_media_e D.44681;
  _Bool D.44678;
  _Bool D.44677;
  _Bool D.44676;
  sdp_proto_e D.44675;
  int D.44672;
  const char * D.44669;
  sdp_proto_e D.44666;
  const char * D.44665;
  const char * D.44663;
  const char * D.44661;
  int D.44655;
  struct switch_media_bug_t * D.44649;
  int D.44640;
  int D.44639;
  int D.44636;
  int D.44635;
  int32_t D.44631;
  _Bool D.44626;
  _Bool D.44625;
  _Bool D.44624;
  int D.44621;
  const char * D.44619;
  int D.44616;
  int D.44614;
  uint8_t D.44606;
  struct switch_rtp_t * D.44605;
  int D.44602;
  int D.44598;
  int D.44594;
  const char * D.44590;
  const char * D.44548;
  struct sdp_connection_t * D.44546;
  _Bool D.44544;
  _Bool D.44543;
  _Bool D.44542;
  unsigned char D.44541;
  unsigned char D.44540;
  int D.44533;
  struct switch_channel_t * D.44530;
  unsigned int D.44529;
  char * D.44526;
  unsigned int D.44523;
  unsigned int D.44522;
  switch_rtp_bug_flag_t D.44521;
  char * D.44518;
  int D.44514;
  int D.44513;
  switch_rtp_bug_flag_t D.44512;
  char * D.44509;
  char * D.44508;
  const char * D.44507;
  struct sdp_origin_t * D.44506;
  int D.44502;
  int D.44498;
  int D.44494;
  int32_t D.44491;
  int32_t D.44490;
  int D.44485;
  struct switch_channel_t * D.44482;
  struct switch_core_session_t * D.44481;
  int D.44478;
  int D.44473;
  size_t D.44472;
  struct switch_core_media_params_t * D.44471;

<bb 2>:
  # DEBUG match => 0
  # DEBUG best_te => 0
  # DEBUG te => 0
  # DEBUG cng_pt => 0
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG maxptime => 0
  # DEBUG dmaxptime => 0
  # DEBUG sendonly => 0
  # DEBUG recvonly => 0
  # DEBUG greedy => 0
  # DEBUG x => 0
  # DEBUG skip => 0
  channel_162 = switch_core_session_get_channel (session_161(D));
  # DEBUG channel => channel_162
  # DEBUG crypto => 0B
  # DEBUG got_crypto => 0
  # DEBUG got_video_crypto => 0
  # DEBUG got_audio => 0
  # DEBUG got_avp => 0
  # DEBUG got_video_avp => 0
  # DEBUG got_video_savp => 0
  # DEBUG got_savp => 0
  # DEBUG got_udptl => 0
  # DEBUG got_webrtc => 0
  # DEBUG scrooge => 0
  # DEBUG parser => 0B
  # DEBUG reneg => 1
  # DEBUG near_rate => 0
  # DEBUG mimp => 0B
  # DEBUG near_match => 0B
  # DEBUG mmap => 0B
  # DEBUG near_map => 0B
  matches = {};
  near_matches = {};
  # DEBUG codec_ms => 0
  # DEBUG remote_codec_rate => 0
  # DEBUG fmtp_remote_codec_rate => 0
  # DEBUG m_idx => 0
  # DEBUG nm_idx => 0
  if (session_161(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 2922, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_186 = session_161(D)->media_handle;
  # DEBUG smh => smh_186
  if (smh_186 == 0B)
    goto <bb 423>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#15 => &smh_186->engines
  # DEBUG a_engine => D#15
  # DEBUG D#14 => &smh_186->engines[1]
  # DEBUG v_engine => D#14
  codec_array_190 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_190
  D.44471_191 = smh_186->mparams;
  total_codecs_192 = D.44471_191->num_codecs;
  # DEBUG total_codecs => total_codecs_192
  D.44472_194 = strlen (r_sdp_193(D));
  D.44473_195 = (int) D.44472_194;
  parser_196 = sdp_parse (0B, r_sdp_193(D), D.44473_195, 0);
  # DEBUG parser => parser_196
  if (parser_196 == 0B)
    goto <bb 423>;
  else
    goto <bb 6>;

<bb 6>:
  sdp_198 = sdp_session (parser_196);
  # DEBUG sdp => sdp_198
  if (sdp_198 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  sdp_parser_free (parser_196);
  goto <bb 423>;

<bb 8>:
  D.44478_200 = dtls_ok (session_161(D));
  if (D.44478_200 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.44481_201 = smh_186->session;
  D.44482_202 = D.44481_201->channel;
  tmp_203 = switch_channel_get_variable_dup (D.44482_202, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_203
  if (tmp_203 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.44485_204 = switch_false (tmp_203);
  if (D.44485_204 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.44481_205 = smh_186->session;
  D.44482_206 = D.44481_205->channel;
  switch_channel_clear_flag (D.44482_206, 111);
  D.44481_207 = smh_186->session;
  D.44482_208 = D.44481_207->channel;
  switch_channel_clear_flag (D.44482_208, 109);

<bb 12>:
  switch_core_session_parse_crypto_prefs (session_161(D));
  # DEBUG engine => D#15
  pmap_1458 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].payload_map;
  # DEBUG pmap => pmap_1458
  goto <bb 14>;

<bb 13>:
  pmap_1459->negotiated = 0;
  pmap_1459->current = 0;
  pmap_1460 = pmap_1459->next;
  # DEBUG pmap => pmap_1460

<bb 14>:
  # pmap_1459 = PHI <pmap_1458(12), pmap_1460(13)>
  # DEBUG pmap => pmap_1459
  if (pmap_1459 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.47872_1461 = pmap_1459->allocated;
  if (D.47872_1461 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 16>:
  # DEBUG engine => D#14
  pmap_1462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].payload_map;
  # DEBUG pmap => pmap_1462
  goto <bb 18>;

<bb 17>:
  pmap_1463->negotiated = 0;
  pmap_1463->current = 0;
  pmap_1464 = pmap_1463->next;
  # DEBUG pmap => pmap_1464

<bb 18>:
  # pmap_1463 = PHI <pmap_1462(16), pmap_1464(17)>
  # DEBUG pmap => pmap_1463
  if (pmap_1463 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.47875_1465 = pmap_1463->allocated;
  if (D.47875_1465 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

<bb 20>:
  if (proceed_209(D) != 0B)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  *proceed_209(D) = 1;

<bb 22>:
  D.44490_210 = switch_media_handle_test_media_flag (smh_186, 3);
  greedy_211 = D.44490_210 != 0;
  # DEBUG greedy => greedy_211
  D.44491_212 = switch_media_handle_test_media_flag (smh_186, 4);
  scrooge_213 = D.44491_212 != 0;
  # DEBUG scrooge => scrooge_213
  val_214 = switch_channel_get_variable_dup (channel_162, "rtp_codec_negotiation", 1, -1);
  # DEBUG val => val_214
  if (val_214 != 0B)
    goto <bb 23>;
  else
    goto <bb 27>;

<bb 23>:
  D.44494_215 = strcasecmp (val_214, "generous");
  if (D.44494_215 == 0)
    goto <bb 27>;
  else
    goto <bb 24>;

<bb 24>:
  D.44498_218 = strcasecmp (val_214, "greedy");
  if (D.44498_218 == 0)
    goto <bb 27>;
  else
    goto <bb 25>;

<bb 25>:
  D.44502_221 = strcasecmp (val_214, "scrooge");
  if (D.44502_221 == 0)
    goto <bb 27>;
  else
    goto <bb 26>;

<bb 26>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2969, session_161(D), 7, "rtp_codec_negotiation ignored invalid value : \'%s\' \n", val_214);

<bb 27>:
  # greedy_47 = PHI <greedy_211(22), 0(23), 1(24), 1(25), greedy_211(26)>
  # scrooge_80 = PHI <scrooge_213(22), 0(23), 0(24), 1(25), scrooge_213(26)>
  # DEBUG scrooge => scrooge_80
  # DEBUG greedy => greedy_47
  D.44506_224 = sdp_198->sdp_origin;
  D.44507_225 = D.44506_224->o_username;
  D.44508_226 = switch_core_perform_session_strdup (session_161(D), D.44507_225, "src/switch_core_media.c", &__func__, 2973);
  smh_186->origin = D.44508_226;
  D.44509_227 = smh_186->origin;
  if (D.44509_227 != 0B)
    goto <bb 28>;
  else
    goto <bb 34>;

<bb 28>:
  D.44471_228 = smh_186->mparams;
  D.44512_229 = D.44471_228->auto_rtp_bugs;
  D.44513_230 = (int) D.44512_229;
  D.44514_231 = D.44513_230 & 1;
  if (D.44514_231 != 0)
    goto <bb 29>;
  else
    goto <bb 31>;

<bb 29>:
  D.44509_233 = smh_186->origin;
  D.44518_234 = strstr (D.44509_233, "CiscoSystemsSIP-GW-UserAgent");
  if (D.44518_234 != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:
  D.44521_235 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44522_236 = D.44521_235 | 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44522_236;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2979, session_161(D), 7, "Activate Buggy RFC2833 Mode!\n");

<bb 31>:
  D.44471_237 = smh_186->mparams;
  D.44512_238 = D.44471_237->auto_rtp_bugs;
  D.44523_239 = D.44512_238 & 2;
  if (D.44523_239 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.44509_240 = smh_186->origin;
  D.44526_241 = strstr (D.44509_240, "Sonus_UAC");
  if (D.44526_241 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.44521_242 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs;
  D.44529_243 = D.44521_242 | 2;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_bugs = D.44529_243;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2986, session_161(D), 4, "Hello,\nI see you have a Sonus!\nFYI, Sonus cannot follow the RFC on the proper way to send DTMF.\nSadly, my creator had to spend several hours figuring this out so I thought you\'d like to know that!\nDon\'t worry, DTMF will work but you may want to ask them to fix it......\n");

<bb 34>:
  D.44530_244 = session_161(D)->channel;
  val_245 = switch_channel_get_variable_dup (D.44530_244, "rtp_liberal_dtmf", 1, -1);
  # DEBUG val => val_245
  if (val_245 != 0B)
    goto <bb 35>;
  else
    goto <bb 37>;

<bb 35>:
  D.44533_246 = switch_true (val_245);
  if (D.44533_246 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.44530_247 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_247, 93, 1);

<bb 37>:
  m_248 = sdp_198->sdp_media;
  # DEBUG m => m_248
  if (m_248 != 0B)
    goto <bb 38>;
  else
    goto <bb 43>;

<bb 38>:
  D.44540_249 = BIT_FIELD_REF <*m_248, 8, 544>;
  D.44541_250 = D.44540_249 & 6;
  D.44542_251 = D.44541_250 == 2;
  D.44543_252 = D.44541_250 == 0;
  D.44544_253 = D.44542_251 || D.44543_252;
  if (D.44544_253 != 0)
    goto <bb 42>;
  else
    goto <bb 39>;

<bb 39>:
  D.44546_254 = m_248->m_connections;
  if (D.44546_254 != 0B)
    goto <bb 40>;
  else
    goto <bb 43>;

<bb 40>:
  D.44546_255 = m_248->m_connections;
  D.44548_256 = D.44546_255->c_address;
  if (D.44548_256 != 0B)
    goto <bb 41>;
  else
    goto <bb 43>;

<bb 41>:
  # DEBUG __s2_len => 7
  D.44546_298 = m_248->m_connections;
  D.44548_299 = D.44546_298->c_address;
  __result_300 = __builtin_strcmp (D.44548_299, "0.0.0.0");
  if (__result_300 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  # DEBUG sendonly => 2

<bb 43>:
  # sendonly_42 = PHI <0(37), 0(39), 0(40), 0(41), 2(42)>
  # DEBUG sendonly => sendonly_42
  attr_303 = sdp_198->sdp_attributes;
  # DEBUG attr => attr_303
  goto <bb 64>;

<bb 44>:
  D.44590_304 = attr_29->a_name;
  # DEBUG s => D.44590_304
  if (D.44590_304 == 0B)
    goto <bb 47>;
  else
    goto <bb 45>;

<bb 45>:
  D.47878_1466 = *D.44590_304;
  if (D.47878_1466 == 0)
    goto <bb 47>;
  else
    goto <bb 46>;

<bb 46>:

<bb 47>:
  # D.47877_1467 = PHI <1(44), 1(45), 0(46)>
  if (D.47877_1467 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  // predicted unlikely by continue predictor.
  goto <bb 63>;

<bb 49>:
  D.44590_306 = attr_29->a_name;
  D.44594_307 = strcasecmp (D.44590_306, "sendonly");
  if (D.44594_307 == 0)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  # DEBUG sendonly => 1
  D.44530_309 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_309, "media_audio_mode", "recvonly", 1);
  goto <bb 63>;

<bb 51>:
  D.44590_310 = attr_29->a_name;
  D.44598_311 = strcasecmp (D.44590_310, "inactive");
  if (D.44598_311 == 0)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  # DEBUG sendonly => 1
  D.44530_313 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_313, "media_audio_mode", "inactive", 1);
  goto <bb 63>;

<bb 53>:
  D.44590_314 = attr_29->a_name;
  D.44602_315 = strcasecmp (D.44590_314, "recvonly");
  if (D.44602_315 == 0)
    goto <bb 54>;
  else
    goto <bb 57>;

<bb 54>:
  D.44530_316 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_316, "media_audio_mode", "sendonly", 1);
  # DEBUG recvonly => 1
  D.44605_318 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44606_319 = switch_rtp_ready (D.44605_318);
  if (D.44606_319 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  D.44605_320 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_max_missed_packets (D.44605_320, 0);
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_hold_packets = 0;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].max_missed_packets = 0;
  goto <bb 63>;

<bb 56>:
  D.44530_321 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_321, "rtp_timeout_sec", "0", 1);
  D.44530_322 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_322, "rtp_hold_timeout_sec", "0", 1);
  goto <bb 63>;

<bb 57>:
  if (sendonly_44 <= 1)
    goto <bb 58>;
  else
    goto <bb 59>;

<bb 58>:
  D.44590_323 = attr_29->a_name;
  D.44614_324 = strcasecmp (D.44590_323, "sendrecv");
  if (D.44614_324 == 0)
    goto <bb 63>;
  else
    goto <bb 59>;

<bb 59>:
  D.44590_326 = attr_29->a_name;
  D.44616_327 = strcasecmp (D.44590_326, "ptime");
  if (D.44616_327 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;

<bb 60>:
  D.44619_328 = attr_29->a_value;
  # DEBUG __nptr => D.44619_328
  dptime_1468 = strtol (D.44619_328, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 63>;

<bb 61>:
  D.44590_330 = attr_29->a_name;
  D.44621_331 = strcasecmp (D.44590_330, "maxptime");
  if (D.44621_331 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  D.44619_332 = attr_29->a_value;
  # DEBUG __nptr => D.44619_332
  dmaxptime_1469 = strtol (D.44619_332, 0B, 10);
  # DEBUG dmaxptime => NULL

<bb 63>:
  # dptime_36 = PHI <dptime_37(48), dptime_37(50), dptime_37(52), dptime_37(56), dptime_37(58), dptime_1468(60), dptime_37(61), dptime_37(62), dptime_37(55)>
  # dmaxptime_40 = PHI <dmaxptime_41(48), dmaxptime_41(50), dmaxptime_41(52), dmaxptime_41(56), dmaxptime_41(58), dmaxptime_41(60), dmaxptime_41(61), dmaxptime_1469(62), dmaxptime_41(55)>
  # sendonly_43 = PHI <sendonly_44(48), 1(50), 1(52), sendonly_44(56), 0(58), sendonly_44(60), sendonly_44(61), sendonly_44(62), sendonly_44(55)>
  # recvonly_45 = PHI <recvonly_46(48), recvonly_46(50), recvonly_46(52), 1(56), recvonly_46(58), recvonly_46(60), recvonly_46(61), recvonly_46(62), 1(55)>
  # DEBUG recvonly => recvonly_45
  # DEBUG sendonly => sendonly_43
  # DEBUG dmaxptime => dmaxptime_40
  # DEBUG dptime => dptime_36
  attr_334 = attr_29->a_next;
  # DEBUG attr => attr_334

<bb 64>:
  # attr_29 = PHI <attr_303(43), attr_334(63)>
  # dptime_37 = PHI <0(43), dptime_36(63)>
  # dmaxptime_41 = PHI <0(43), dmaxptime_40(63)>
  # sendonly_44 = PHI <sendonly_42(43), sendonly_43(63)>
  # recvonly_46 = PHI <0(43), recvonly_45(63)>
  # DEBUG recvonly => recvonly_46
  # DEBUG sendonly => sendonly_44
  # DEBUG dmaxptime => dmaxptime_41
  # DEBUG dptime => dptime_37
  # DEBUG attr => attr_29
  if (attr_29 != 0B)
    goto <bb 44>;
  else
    goto <bb 65>;

<bb 65>:
  D.44624_335 = sendonly_44 != 1;
  D.44625_336 = recvonly_46 != 1;
  D.44626_337 = D.44624_335 && D.44625_336;
  if (D.44626_337 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.44530_338 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_338, "media_audio_mode", 0B, 1);

<bb 67>:
  D.44631_339 = switch_media_handle_test_media_flag (smh_186, 5);
  if (D.44631_339 == 0)
    goto <bb 68>;
  else
    goto <bb 74>;

<bb 68>:
  D.44530_340 = session_161(D)->channel;
  val_341 = switch_channel_get_variable_dup (D.44530_340, "rtp_disable_hold", 1, -1);
  # DEBUG val => val_341
  if (val_341 == 0B)
    goto <bb 70>;
  else
    goto <bb 69>;

<bb 69>:
  D.44635_342 = switch_true (val_341);
  if (D.44635_342 == 0)
    goto <bb 70>;
  else
    goto <bb 74>;

<bb 70>:
  D.44471_343 = smh_186->mparams;
  D.44636_344 = D.44471_343->hold_laps;
  if (D.44636_344 == 0)
    goto <bb 71>;
  else
    goto <bb 74>;

<bb 71>:
  D.44471_345 = smh_186->mparams;
  D.44636_346 = D.44471_345->hold_laps;
  D.44639_347 = D.44636_346 + 1;
  D.44471_345->hold_laps = D.44639_347;
  D.44640_348 = switch_core_media_toggle_hold (session_161(D), sendonly_44);
  if (D.44640_348 != 0)
    goto <bb 72>;
  else
    goto <bb 74>;

<bb 72>:
  reneg_349 = switch_media_handle_test_media_flag (smh_186, 6);
  # DEBUG reneg => reneg_349
  D.44530_350 = session_161(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.44530_350, "rtp_renegotiate_codec_on_hold", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 73>;
  else
    goto <bb 74>;

<bb 73>:
  reneg_352 = switch_true (val_351);
  # DEBUG reneg => reneg_352

<bb 74>:
  # reneg_81 = PHI <1(67), 1(69), 1(70), 1(71), reneg_349(72), reneg_352(73)>
  # DEBUG reneg => reneg_81
  if (reneg_81 != 0)
    goto <bb 75>;
  else
    goto <bb 77>;

<bb 75>:
  reneg_353 = switch_media_handle_test_media_flag (smh_186, 7);
  # DEBUG reneg => reneg_353
  D.44530_354 = session_161(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.44530_354, "rtp_renegotiate_codec_on_reinvite", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

<bb 76>:
  reneg_356 = switch_true (val_355);
  # DEBUG reneg => reneg_356

<bb 77>:
  # reneg_82 = PHI <reneg_81(74), reneg_353(75), reneg_356(76)>
  # DEBUG reneg => reneg_82
  D.44649_357 = session_161(D)->bugs;
  if (D.44649_357 != 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3063, session_161(D), 7, "Session is connected to a media bug. Re-Negotiation implicitly disabled.\n");
  # DEBUG reneg => 0

<bb 79>:
  # reneg_83 = PHI <reneg_82(77), 0(78)>
  # DEBUG reneg => reneg_83
  if (reneg_83 == 0)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.44655_359 = smh_186->num_negotiated_codecs;
  if (D.44655_359 != 0)
    goto <bb 81>;
  else
    goto <bb 82>;

<bb 81>:
  codec_array_360 = &smh_186->negotiated_codecs;
  # DEBUG codec_array => codec_array_360
  total_codecs_361 = smh_186->num_negotiated_codecs;
  # DEBUG total_codecs => total_codecs_361
  goto <bb 84>;

<bb 82>:
  if (reneg_83 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  D.44471_362 = smh_186->mparams;
  D.44471_362->num_codecs = 0;
  switch_core_media_prepare_codecs (session_161(D), 0);
  codec_array_363 = &smh_186->codecs;
  # DEBUG codec_array => codec_array_363
  D.44471_364 = smh_186->mparams;
  total_codecs_365 = D.44471_364->num_codecs;
  # DEBUG total_codecs => total_codecs_365

<bb 84>:
  # codec_array_84 = PHI <codec_array_360(81), codec_array_190(82), codec_array_363(83)>
  # total_codecs_85 = PHI <total_codecs_361(81), total_codecs_192(82), total_codecs_365(83)>
  # DEBUG total_codecs => total_codecs_85
  # DEBUG codec_array => codec_array_84
  D.44661_366 = switch_stristr ("T38FaxFillBitRemoval:", r_sdp_193(D));
  if (D.44661_366 != 0B)
    goto <bb 87>;
  else
    goto <bb 85>;

<bb 85>:
  D.44663_367 = switch_stristr ("T38FaxTranscodingMMR:", r_sdp_193(D));
  if (D.44663_367 != 0B)
    goto <bb 87>;
  else
    goto <bb 86>;

<bb 86>:
  D.44665_368 = switch_stristr ("T38FaxTranscodingJBIG:", r_sdp_193(D));
  if (D.44665_368 != 0B)
    goto <bb 87>;
  else
    goto <bb 88>;

<bb 87>:
  D.44530_369 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_369, "t38_broken_boolean", "true", 1);

<bb 88>:
  switch_core_media_find_zrtp_hash (session_161(D), sdp_198);
  switch_core_media_pass_zrtp_hash (session_161(D));
  check_ice (smh_186, 0, sdp_198, 0B);
  check_ice (smh_186, 1, sdp_198, 0B);
  m_370 = sdp_198->sdp_media;
  # DEBUG m => m_370
  goto <bb 419>;

<bb 89>:
  # DEBUG ptime => dptime_37
  # DEBUG maxptime => dmaxptime_41
  D.44666_373 = m_28->m_proto;
  if (D.44666_373 == 261)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  got_webrtc_374 = got_webrtc_79 + 1;
  # DEBUG got_webrtc => got_webrtc_374
  switch_core_session_set_ice (session_161(D));

<bb 91>:
  # got_webrtc_78 = PHI <got_webrtc_79(89), got_webrtc_374(90)>
  # DEBUG got_webrtc => got_webrtc_78
  D.44669_375 = m_28->m_proto_name;
  if (D.44669_375 != 0B)
    goto <bb 92>;
  else
    goto <bb 94>;

<bb 92>:
  D.44669_376 = m_28->m_proto_name;
  D.44672_377 = strcasecmp (D.44669_376, "UDP/TLS/RTP/SAVPF");
  if (D.44672_377 == 0)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  D.44530_378 = session_161(D)->channel;
  switch_channel_set_flag_value (D.44530_378, 107, 1);

<bb 94>:
  D.44675_379 = m_28->m_proto;
  D.44676_380 = D.44675_379 == 257;
  D.44677_381 = D.44675_379 == 261;
  D.44678_382 = D.44676_380 || D.44677_381;
  if (D.44678_382 != 0)
    goto <bb 95>;
  else
    goto <bb 97>;

<bb 95>:
  D.44681_383 = m_28->m_type;
  if (D.44681_383 == 2)
    goto <bb 96>;
  else
    goto <bb 102>;

<bb 96>:
  got_savp_384 = got_savp_75 + 1;
  # DEBUG got_savp => got_savp_384
  goto <bb 102>;

<bb 97>:
  D.44666_386 = m_28->m_proto;
  if (D.44666_386 == 256)
    goto <bb 98>;
  else
    goto <bb 100>;

<bb 98>:
  D.44681_387 = m_28->m_type;
  if (D.44681_387 == 2)
    goto <bb 99>;
  else
    goto <bb 102>;

<bb 99>:
  got_avp_388 = got_avp_69 + 1;
  # DEBUG got_avp => got_avp_388
  goto <bb 102>;

<bb 100>:
  D.44666_390 = m_28->m_proto;
  if (D.44666_390 == 258)
    goto <bb 101>;
  else
    goto <bb 102>;

<bb 101>:
  got_udptl_391 = got_udptl_77 + 1;
  # DEBUG got_udptl => got_udptl_391

<bb 102>:
  # got_avp_68 = PHI <got_avp_69(95), got_avp_69(98), got_avp_69(100), got_avp_69(101), got_avp_69(96), got_avp_388(99)>
  # got_savp_74 = PHI <got_savp_75(95), got_savp_75(98), got_savp_75(100), got_savp_75(101), got_savp_384(96), got_savp_75(99)>
  # got_udptl_76 = PHI <got_udptl_77(95), got_udptl_77(98), got_udptl_77(100), got_udptl_391(101), got_udptl_77(96), got_udptl_77(99)>
  # DEBUG got_udptl => got_udptl_76
  # DEBUG got_savp => got_savp_74
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_68
  if (got_udptl_76 != 0)
    goto <bb 103>;
  else
    goto <bb 136>;

<bb 103>:
  D.44681_392 = m_28->m_type;
  if (D.44681_392 == 8)
    goto <bb 104>;
  else
    goto <bb 136>;

<bb 104>:
  D.44697_393 = m_28->m_port;
  if (D.44697_393 != 0)
    goto <bb 105>;
  else
    goto <bb 136>;

<bb 105>:
  t38_options_394 = switch_core_media_process_udptl (session_161(D), sdp_198, m_28);
  # DEBUG t38_options => t38_options_394
  D.44530_395 = session_161(D)->channel;
  D.44699_396 = switch_channel_test_app_flag_key ("T38", D.44530_395, 16);
  if (D.44699_396 != 0)
    goto <bb 420> (done);
  else
    goto <bb 106>;

<bb 106>:
  D.44702_398 = switch_channel_get_variable_dup (channel_162, "refuse_t38", 1, -1);
  D.44703_399 = switch_true (D.44702_398);
  if (D.44703_399 != 0)
    goto <bb 107>;
  else
    goto <bb 108>;

<bb 107>:
  D.44530_400 = session_161(D)->channel;
  switch_channel_clear_app_flag_key ("T38", D.44530_400, 2);
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 108>:
  var_402 = switch_channel_get_variable_dup (channel_162, "t38_passthru", 1, -1);
  # DEBUG var => var_402
  D.44481_403 = smh_186->session;
  D.44482_404 = D.44481_403->channel;
  D.44706_405 = switch_channel_test_flag (D.44482_404, 101);
  pass_406 = (int) D.44706_405;
  # DEBUG pass => pass_406
  D.44530_407 = session_161(D)->channel;
  D.44707_408 = switch_channel_test_app_flag_key ("T38", D.44530_407, 2);
  if (D.44707_408 != 0)
    goto <bb 109>;
  else
    goto <bb 111>;

<bb 109>:
  if (proceed_209(D) != 0B)
    goto <bb 110>;
  else
    goto <bb 111>;

<bb 110>:
  *proceed_209(D) = 0;

<bb 111>:
  if (var_402 != 0B)
    goto <bb 112>;
  else
    goto <bb 115>;

<bb 112>:
  pass_409 = switch_true (var_402);
  # DEBUG pass => pass_409
  if (pass_409 == 0)
    goto <bb 113>;
  else
    goto <bb 115>;

<bb 113>:
  D.44716_410 = strcasecmp (var_402, "once");
  if (D.44716_410 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;

<bb 114>:
  # DEBUG pass => 2

<bb 115>:
  # pass_126 = PHI <pass_406(111), pass_409(112), pass_409(113), 2(114)>
  # DEBUG pass => pass_126
  if (pass_126 == 2)
    goto <bb 116>;
  else
    goto <bb 117>;

<bb 116>:
  D.44481_412 = smh_186->session;
  D.44482_413 = D.44481_412->channel;
  D.44723_414 = switch_channel_test_flag (D.44482_413, 101);
  if (D.44723_414 != 0)
    goto <bb 122>;
  else
    goto <bb 117>;

<bb 117>:
  D.44530_415 = session_161(D)->channel;
  D.44724_416 = switch_channel_test_flag (D.44530_415, 103);
  if (D.44724_416 == 0)
    goto <bb 122>;
  else
    goto <bb 118>;

<bb 118>:
  D.44530_417 = session_161(D)->channel;
  D.44726_418 = switch_channel_test_flag (D.44530_417, 15);
  if (D.44726_418 != 0)
    goto <bb 122>;
  else
    goto <bb 119>;

<bb 119>:
  D.44530_419 = session_161(D)->channel;
  D.44728_420 = switch_channel_test_flag (D.44530_419, 29);
  if (D.44728_420 != 0)
    goto <bb 122>;
  else
    goto <bb 120>;

<bb 120>:
  D.44605_421 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44730_422 = switch_rtp_ready (D.44605_421);
  if (D.44730_422 == 0)
    goto <bb 121>;
  else
    goto <bb 122>;

<bb 121>:

<bb 122>:
  # pass_127 = PHI <pass_126(120), 0(117), 0(116), 0(121), 0(119), 0(118)>
  # DEBUG pass => pass_127
  if (pass_127 != 0)
    goto <bb 123>;
  else
    goto <bb 420> (done);

<bb 123>:
  D.44733_424 = switch_core_session_perform_get_partner (session_161(D), &other_session, "src/switch_core_media.c", &__func__, 3161);
  if (D.44733_424 == 0)
    goto <bb 124>;
  else
    goto <bb 420> (done);

<bb 124>:
  other_session.89_425 = other_session;
  other_channel_426 = switch_core_session_get_channel (other_session.89_425);
  # DEBUG other_channel => other_channel_426
  D.44605_427 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_host_428 = switch_rtp_get_remote_host (D.44605_427);
  # DEBUG remote_host => remote_host_428
  D.44605_429 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  remote_port_430 = switch_rtp_get_remote_port (D.44605_429);
  # DEBUG remote_port => remote_port_430
  tmp = "";
  D.44737_431 = switch_channel_test_flag (other_channel_426, 1);
  if (D.44737_431 == 0)
    goto <bb 125>;
  else
    goto <bb 126>;

<bb 125>:
  D.44530_432 = session_161(D)->channel;
  D.44740_433 = switch_channel_get_name (D.44530_432);
  D.44741_434 = switch_channel_get_name (other_channel_426);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3170, session_161(D), 4, "%s Error Passing T.38 to unanswered channel %s\n", D.44740_433, D.44741_434);
  other_session.89_435 = other_session;
  switch_core_session_rwunlock (other_session.89_435);
  # DEBUG pass => 0
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 126>:
  D.44530_438 = session_161(D)->channel;
  D.44742_439 = switch_channel_get_variable_dup (D.44530_438, "t38_broken_boolean", 1, -1);
  D.44743_440 = switch_true (D.44742_439);
  if (D.44743_440 != 0)
    goto <bb 127>;
  else
    goto <bb 129>;

<bb 127>:
  D.44530_441 = session_161(D)->channel;
  D.44746_442 = switch_channel_get_variable_dup (D.44530_441, "t38_pass_broken_boolean", 1, -1);
  D.44747_443 = switch_true (D.44746_442);
  if (D.44747_443 != 0)
    goto <bb 128>;
  else
    goto <bb 129>;

<bb 128>:
  switch_channel_set_variable_var_check (other_channel_426, "t38_broken_boolean", "true", 1);

<bb 129>:
  D.44750_444 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44751_445 = t38_options_394->remote_ip;
  D.44752_446 = switch_core_perform_session_strdup (session_161(D), D.44751_445, "src/switch_core_media.c", &__func__, 3186);
  D.44750_444->remote_sdp_ip = D.44752_446;
  D.44750_447 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44753_448 = t38_options_394->remote_port;
  D.44750_447->remote_sdp_port = D.44753_448;
  D.44756_449 = remote_host_428 != 0B;
  D.44757_450 = remote_port_430 != 0;
  D.44758_451 = D.44756_449 && D.44757_450;
  if (D.44758_451 != 0)
    goto <bb 130>;
  else
    goto <bb 133>;

<bb 130>:
  D.44750_452 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_453 = D.44750_452->remote_sdp_ip;
  D.39032_454 = __builtin_strcmp (remote_host_428, D.44760_453);
  if (D.39032_454 == 0)
    goto <bb 131>;
  else
    goto <bb 133>;

<bb 131>:
  D.44750_455 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_456 = D.44750_455->remote_sdp_port;
  if (D.44762_456 == remote_port_430)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  D.44530_457 = session_161(D)->channel;
  D.44764_458 = switch_channel_get_name (D.44530_457);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3190, session_161(D), 7, "Audio params are unchanged for %s.\n", D.44764_458);
  goto <bb 135>;

<bb 133>:
  err = 0B;
  D.44530_459 = session_161(D)->channel;
  D.44765_460 = switch_channel_get_name (D.44530_459);
  D.44766_461 = (int) remote_port_430;
  D.44750_462 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_463 = D.44750_462->remote_sdp_ip;
  D.44750_464 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_465 = D.44750_464->remote_sdp_port;
  D.44767_466 = (int) D.44762_465;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3195, session_161(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.44765_460, remote_host_428, D.44766_461, D.44760_463, D.44767_466);
  D.44750_467 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_468 = D.44750_467->remote_sdp_port;
  D.44767_469 = (int) D.44762_468;
  switch_snprintf (&tmp, 32, "%d", D.44767_469);
  D.44530_470 = session_161(D)->channel;
  D.44750_471 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_472 = D.44750_471->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_470, "remote_media_ip", D.44760_472, 1);
  D.44530_473 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_473, "remote_media_port", &tmp, 1);
  D.44605_474 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44750_475 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_476 = D.44750_475->remote_sdp_ip;
  D.44750_477 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_478 = D.44750_477->remote_sdp_port;
  D.44768_479 = switch_rtp_set_remote_address (D.44605_474, D.44760_476, D.44762_478, 0, 1, &err);
  if (D.44768_479 != 0)
    goto <bb 134>;
  else
    goto <bb 135>;

<bb 134>:
  err.90_480 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3205, session_161(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.90_480);
  switch_channel_perform_hangup (channel_162, "src/switch_core_media.c", &__func__, 3206, 88);

<bb 135>:
  other_session.89_481 = other_session;
  switch_core_media_copy_t38_options (t38_options_394, other_session.89_481);
  D.44481_482 = smh_186->session;
  D.44482_483 = D.44481_482->channel;
  switch_channel_set_flag_value (D.44482_483, 101, 1);
  other_session.89_484 = other_session;
  D.44772_485 = other_session.89_484->channel;
  switch_channel_set_flag_value (D.44772_485, 101, 1);
  other_session.89_486 = other_session;
  msg_487 = switch_core_perform_session_alloc (other_session.89_486, 108, "src/switch_core_media.c", &__func__, 3218);
  # DEBUG msg => msg_487
  msg_487->message_id = 21;
  msg_487->from = "src/switch_core_media.c";
  other_session.89_488 = other_session;
  D.44773_489 = switch_core_perform_session_strdup (other_session.89_488, r_sdp_193(D), "src/switch_core_media.c", &__func__, 3221);
  msg_487->string_arg = D.44773_489;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3222, session_161(D), 7, "Passing T38 req to other leg.\n%s\n", r_sdp_193(D));
  other_session.89_490 = other_session;
  switch_core_session_queue_message (other_session.89_490, msg_487);
  other_session.89_491 = other_session;
  switch_core_session_rwunlock (other_session.89_491);
  goto <bb 420> (done);

<bb 136>:
  D.44681_493 = m_28->m_type;
  if (D.44681_493 == 2)
    goto <bb 137>;
  else
    goto <bb 323>;

<bb 137>:
  D.44697_494 = m_28->m_port;
  D.44777_495 = D.44697_494 != 0;
  D.44778_496 = got_audio_67 == 0;
  D.44779_497 = D.44777_495 && D.44778_496;
  if (D.44779_497 != 0)
    goto <bb 138>;
  else
    goto <bb 323>;

<bb 138>:
  D.44781_498 = switch_rtp_has_dtls ();
  if (D.44781_498 != 0)
    goto <bb 139>;
  else
    goto <bb 149>;

<bb 139>:
  D.44784_499 = dtls_ok (session_161(D));
  if (D.44784_499 != 0)
    goto <bb 140>;
  else
    goto <bb 149>;

<bb 140>:
  attr_500 = m_28->m_attributes;
  # DEBUG attr => attr_500
  goto <bb 148>;

<bb 141>:
  D.44590_501 = attr_30->a_name;
  D.44787_502 = strcasecmp (D.44590_501, "fingerprint");
  if (D.44787_502 == 0)
    goto <bb 142>;
  else
    goto <bb 147>;

<bb 142>:
  D.44619_503 = attr_30->a_value;
  # DEBUG s => D.44619_503
  if (D.44619_503 == 0B)
    goto <bb 145>;
  else
    goto <bb 143>;

<bb 143>:
  D.47888_1470 = *D.44619_503;
  if (D.47888_1470 == 0)
    goto <bb 145>;
  else
    goto <bb 144>;

<bb 144>:

<bb 145>:
  # D.47887_1471 = PHI <1(142), 1(143), 0(144)>
  if (D.47887_1471 == 0)
    goto <bb 146>;
  else
    goto <bb 147>;

<bb 146>:
  # DEBUG got_crypto => 1

<bb 147>:
  # got_crypto_50 = PHI <got_crypto_51(141), got_crypto_51(145), 1(146)>
  # DEBUG got_crypto => got_crypto_50
  attr_506 = attr_30->a_next;
  # DEBUG attr => attr_506

<bb 148>:
  # attr_30 = PHI <attr_500(140), attr_506(147)>
  # got_crypto_51 = PHI <got_crypto_56(140), got_crypto_50(147)>
  # DEBUG got_crypto => got_crypto_51
  # DEBUG attr => attr_30
  if (attr_30 != 0B)
    goto <bb 141>;
  else
    goto <bb 149>;

<bb 149>:
  # got_crypto_52 = PHI <got_crypto_56(138), got_crypto_56(139), got_crypto_51(148)>
  # DEBUG got_crypto => got_crypto_52
  attr_507 = m_28->m_attributes;
  # DEBUG attr => attr_507
  goto <bb 172>;

<bb 150>:
  D.44590_508 = attr_31->a_name;
  D.44795_509 = strcasecmp (D.44590_508, "rtcp");
  if (D.44795_509 == 0)
    goto <bb 151>;
  else
    goto <bb 154>;

<bb 151>:
  D.44619_510 = attr_31->a_value;
  if (D.44619_510 != 0B)
    goto <bb 152>;
  else
    goto <bb 154>;

<bb 152>:
  D.44530_511 = session_161(D)->channel;
  D.44619_512 = attr_31->a_value;
  switch_channel_set_variable_var_check (D.44530_511, "rtp_remote_audio_rtcp_port", D.44619_512, 1);
  D.44619_513 = attr_31->a_value;
  # DEBUG __nptr => D.44619_513
  D.47891_1472 = strtol (D.44619_513, 0B, 10);
  D.44799_515 = (short unsigned int) D.47891_1472;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].remote_rtcp_port = D.44799_515;
  D.44471_516 = smh_186->mparams;
  D.44800_517 = D.44471_516->rtcp_audio_interval_msec;
  if (D.44800_517 == 0B)
    goto <bb 153>;
  else
    goto <bb 171>;

<bb 153>:
  D.44471_518 = smh_186->mparams;
  D.44471_518->rtcp_audio_interval_msec = "5000";
  goto <bb 171>;

<bb 154>:
  D.44590_519 = attr_31->a_name;
  D.44805_520 = strcasecmp (D.44590_519, "ptime");
  if (D.44805_520 == 0)
    goto <bb 155>;
  else
    goto <bb 157>;

<bb 155>:
  D.44619_521 = attr_31->a_value;
  if (D.44619_521 != 0B)
    goto <bb 156>;
  else
    goto <bb 157>;

<bb 156>:
  D.44619_522 = attr_31->a_value;
  # DEBUG __nptr => D.44619_522
  ptime_1473 = strtol (D.44619_522, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 171>;

<bb 157>:
  D.44590_524 = attr_31->a_name;
  D.44810_525 = strcasecmp (D.44590_524, "maxptime");
  if (D.44810_525 == 0)
    goto <bb 158>;
  else
    goto <bb 160>;

<bb 158>:
  D.44619_526 = attr_31->a_value;
  if (D.44619_526 != 0B)
    goto <bb 159>;
  else
    goto <bb 160>;

<bb 159>:
  D.44619_527 = attr_31->a_value;
  # DEBUG __nptr => D.44619_527
  maxptime_1474 = strtol (D.44619_527, 0B, 10);
  # DEBUG maxptime => NULL
  goto <bb 171>;

<bb 160>:
  if (got_crypto_54 <= 0)
    goto <bb 161>;
  else
    goto <bb 171>;

<bb 161>:
  D.44590_529 = attr_31->a_name;
  D.44815_530 = strcasecmp (D.44590_529, "crypto");
  if (D.44815_530 == 0)
    goto <bb 162>;
  else
    goto <bb 171>;

<bb 162>:
  D.44619_531 = attr_31->a_value;
  # DEBUG s => D.44619_531
  if (D.44619_531 == 0B)
    goto <bb 165>;
  else
    goto <bb 163>;

<bb 163>:
  D.47901_1475 = *D.44619_531;
  if (D.47901_1475 == 0)
    goto <bb 165>;
  else
    goto <bb 164>;

<bb 164>:

<bb 165>:
  # D.47900_1476 = PHI <1(162), 1(163), 0(164)>
  if (D.47900_1476 == 0)
    goto <bb 166>;
  else
    goto <bb 171>;

<bb 166>:
  D.44471_533 = smh_186->mparams;
  D.44821_534 = D.44471_533->ndlb;
  D.44822_535 = D.44821_534 & 4;
  if (D.44822_535 == 0)
    goto <bb 167>;
  else
    goto <bb 170>;

<bb 167>:
  D.44530_536 = session_161(D)->channel;
  D.44825_537 = switch_channel_get_variable_dup (D.44530_536, "rtp_allow_crypto_in_avp", 1, -1);
  D.44826_538 = switch_true (D.44825_537);
  if (D.44826_538 == 0)
    goto <bb 168>;
  else
    goto <bb 170>;

<bb 168>:
  D.44666_539 = m_28->m_proto;
  D.44829_540 = D.44666_539 != 257;
  D.44830_541 = got_webrtc_78 == 0;
  D.44831_542 = D.44829_540 && D.44830_541;
  if (D.44831_542 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;

<bb 169>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3262, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 170>:
  crypto_544 = attr_31->a_value;
  # DEBUG crypto => crypto_544
  # DEBUG __nptr => crypto_544
  crypto_tag_1477 = strtol (crypto_544, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_crypto_547 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_crypto", 0, crypto_544, crypto_tag_1477, sdp_type_546(D));
  # DEBUG got_crypto => got_crypto_547

<bb 171>:
  # ptime_34 = PHI <ptime_35(153), ptime_1473(156), ptime_35(159), ptime_35(160), ptime_35(161), ptime_35(165), ptime_35(170), ptime_35(152)>
  # maxptime_38 = PHI <maxptime_39(153), maxptime_39(156), maxptime_1474(159), maxptime_39(160), maxptime_39(161), maxptime_39(165), maxptime_39(170), maxptime_39(152)>
  # got_crypto_53 = PHI <got_crypto_54(153), got_crypto_54(156), got_crypto_54(159), got_crypto_54(160), got_crypto_54(161), got_crypto_54(165), got_crypto_547(170), got_crypto_54(152)>
  # DEBUG got_crypto => got_crypto_53
  # DEBUG maxptime => maxptime_38
  # DEBUG ptime => ptime_34
  attr_548 = attr_31->a_next;
  # DEBUG attr => attr_548

<bb 172>:
  # attr_31 = PHI <attr_507(149), attr_548(171)>
  # ptime_35 = PHI <dptime_37(149), ptime_34(171)>
  # maxptime_39 = PHI <dmaxptime_41(149), maxptime_38(171)>
  # got_crypto_54 = PHI <got_crypto_52(149), got_crypto_53(171)>
  # DEBUG got_crypto => got_crypto_54
  # DEBUG maxptime => maxptime_39
  # DEBUG ptime => ptime_35
  # DEBUG attr => attr_31
  if (attr_31 != 0B)
    goto <bb 150>;
  else
    goto <bb 173>;

<bb 173>:
  D.44834_549 = got_crypto_54 == -1;
  D.44835_550 = got_savp_74 != 0;
  D.44836_551 = D.44834_549 && D.44835_550;
  if (D.44836_551 != 0)
    goto <bb 174>;
  else
    goto <bb 176>;

<bb 174>:
  D.44839_552 = got_avp_68 | got_webrtc_78;
  if (D.44839_552 == 0)
    goto <bb 175>;
  else
    goto <bb 176>;

<bb 175>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3277, session_161(D), 4, "Declining invite with only SAVP because secure media is administratively disabled\n");
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 176>:
  connection_554 = sdp_198->sdp_connection;
  # DEBUG connection => connection_554
  D.44546_555 = m_28->m_connections;
  if (D.44546_555 != 0B)
    goto <bb 177>;
  else
    goto <bb 178>;

<bb 177>:
  connection_556 = m_28->m_connections;
  # DEBUG connection => connection_556

<bb 178>:
  # connection_124 = PHI <connection_554(176), connection_556(177)>
  # DEBUG connection => connection_124
  if (connection_124 == 0B)
    goto <bb 179>;
  else
    goto <bb 180>;

<bb 179>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3288, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 180>:
  # DEBUG x => 0
  map_559 = m_28->m_rtpmaps;
  # DEBUG map => map_559
  goto <bb 260>;

<bb 181>:
  # DEBUG map_bit_rate => 0
  codec_fmtp = {};
  rm_encoding_561 = map_128->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_561
  if (rm_encoding_561 == 0B)
    goto <bb 182>;
  else
    goto <bb 183>;

<bb 182>:
  # DEBUG rm_encoding => ""

<bb 183>:
  # rm_encoding_130 = PHI <rm_encoding_561(181), ""(182)>
  # DEBUG rm_encoding => rm_encoding_130
  D.44848_563 = strcasecmp (rm_encoding_130, "telephone-event");
  if (D.44848_563 == 0)
    goto <bb 184>;
  else
    goto <bb 188>;

<bb 184>:
  if (best_te_20 == 0)
    goto <bb 186>;
  else
    goto <bb 185>;

<bb 185>:
  D.44854_564 = map_128->rm_rate;
  D.44750_565 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44855_566 = D.44750_565->rm_rate;
  if (D.44854_564 == D.44855_566)
    goto <bb 186>;
  else
    goto <bb 187>;

<bb 186>:
  D.44856_567 = map_128->rm_pt;
  best_te_568 = (switch_payload_t) D.44856_567;
  # DEBUG best_te => best_te_568
  D.44857_569 = (int) best_te_568;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3309, session_161(D), 7, "Set telephone-event payload to %u\n", D.44857_569);

<bb 187>:
  # best_te_18 = PHI <best_te_20(185), best_te_568(186)>
  # DEBUG best_te => best_te_18
  // predicted unlikely by continue predictor.
  goto <bb 259>;

<bb 188>:
  D.44858_570 = switch_media_handle_test_media_flag (smh_186, 9);
  if (D.44858_570 == 0)
    goto <bb 189>;
  else
    goto <bb 194>;

<bb 189>:
  if (cng_pt_25 == 0)
    goto <bb 190>;
  else
    goto <bb 194>;

<bb 190>:
  D.44863_571 = strcasecmp (rm_encoding_130, "CN");
  if (D.44863_571 == 0)
    goto <bb 191>;
  else
    goto <bb 194>;

<bb 191>:
  D.44856_572 = map_128->rm_pt;
  cng_pt_573 = (switch_payload_t) D.44856_572;
  # DEBUG cng_pt => cng_pt_573
  D.44605_574 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_574 != 0B)
    goto <bb 192>;
  else
    goto <bb 193>;

<bb 192>:
  D.44868_575 = (int) cng_pt_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3317, session_161(D), 7, "Set comfort noise payload to %u\n", D.44868_575);
  D.44605_576 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.44471_577 = smh_186->mparams;
  D.44869_578 = D.44471_577->cng_pt;
  switch_rtp_set_cng_pt (D.44605_576, D.44869_578);

<bb 193>:
  // predicted unlikely by continue predictor.
  goto <bb 259>;

<bb 194>:
  x_580 = x_49 + 1;
  # DEBUG x => x_580
  if (x_49 < 0)
    goto <bb 195>;
  else
    goto <bb 196>;

<bb 195>:
  // predicted unlikely by continue predictor.
  goto <bb 259>;

<bb 196>:
  if (match_8 != 0)
    goto <bb 197>;
  else
    goto <bb 198>;

<bb 197>:
  // predicted unlikely by continue predictor.
  goto <bb 259>;

<bb 198>:
  # DEBUG codec_ms => ptime_35
  if (maxptime_39 != 0)
    goto <bb 199>;
  else
    goto <bb 201>;

<bb 199>:
  D.44877_582 = ptime_35 == 0;
  D.44878_583 = ptime_35 > maxptime_39;
  D.44879_584 = D.44877_582 || D.44878_583;
  if (D.44879_584 != 0)
    goto <bb 200>;
  else
    goto <bb 201>;

<bb 200>:
  # DEBUG codec_ms => maxptime_39

<bb 201>:
  # codec_ms_86 = PHI <ptime_35(198), ptime_35(199), maxptime_39(200)>
  # DEBUG codec_ms => codec_ms_86
  if (codec_ms_86 == 0)
    goto <bb 202>;
  else
    goto <bb 203>;

<bb 202>:
  D.44856_586 = map_128->rm_pt;
  D.44884_587 = (uint32_t) D.44856_586;
  D.44885_588 = switch_default_ptime (rm_encoding_130, D.44884_587);
  codec_ms_589 = (int) D.44885_588;
  # DEBUG codec_ms => codec_ms_589

<bb 203>:
  # codec_ms_87 = PHI <codec_ms_86(201), codec_ms_589(202)>
  # DEBUG codec_ms => codec_ms_87
  D.44856_590 = map_128->rm_pt;
  csui.173_591 = (unsigned char) D.44856_590;
  # DEBUG payload => csui.173_591
  if (csui.173_591 <= 18)
    goto <bb 204> (<L500>);
  else
    goto <bb 205> (<L501>);

<L500>:
  map_bit_rate_1480 = CSWTCH.174[csui.173_591];

  # map_bit_rate_1481 = PHI <0(203), map_bit_rate_1480(204)>
<L501>:
<L502>:
  # DEBUG map_bit_rate => NULL
  if (ptime_35 == 0)
    goto <bb 206>;
  else
    goto <bb 208>;

<bb 206>:
  D.44889_593 = map_128->rm_encoding;
  D.44890_594 = strcasecmp (D.44889_593, "g723");
  if (D.44890_594 == 0)
    goto <bb 207>;
  else
    goto <bb 208>;

<bb 207>:
  # DEBUG codec_ms => 33

<bb 208>:
  # codec_ms_88 = PHI <codec_ms_87(205), codec_ms_87(206), 33(207)>
  # DEBUG codec_ms => codec_ms_88
  remote_codec_rate_596 = map_128->rm_rate;
  # DEBUG remote_codec_rate => remote_codec_rate_596
  # DEBUG fmtp_remote_codec_rate => 0
  memset (&codec_fmtp, 0, 16);
  D.44893_598 = map_128->rm_fmtp;
  # DEBUG s => D.44893_598
  if (D.44893_598 == 0B)
    goto <bb 211>;
  else
    goto <bb 209>;

<bb 209>:
  D.47916_1482 = *D.44893_598;
  if (D.47916_1482 == 0)
    goto <bb 211>;
  else
    goto <bb 210>;

<bb 210>:

<bb 211>:
  # D.47915_1483 = PHI <1(208), 1(209), 0(210)>
  if (D.47915_1483 != 0)
    goto <bb 212>;
  else
    goto <bb 215>;

<bb 212>:
  D.44889_600 = map_128->rm_encoding;
  D.44897_601 = strcasecmp (D.44889_600, "ilbc");
  if (D.44897_601 == 0)
    goto <bb 222>;
  else
    goto <bb 213>;

<bb 213>:
  D.44889_604 = map_128->rm_encoding;
  D.44901_605 = strcasecmp (D.44889_604, "isac");
  if (D.44901_605 == 0)
    goto <bb 222>;
  else
    goto <bb 214>;

<bb 214>:
  # DEBUG map_bit_rate => 32099
  goto <bb 222>;

<bb 215>:
  D.44889_609 = map_128->rm_encoding;
  D.44893_610 = map_128->rm_fmtp;
  D.44854_611 = map_128->rm_rate;
  D.44906_612 = switch_core_codec_parse_fmtp (D.44889_609, D.44893_610, D.44854_611, &codec_fmtp);
  if (D.44906_612 == 0)
    goto <bb 216>;
  else
    goto <bb 222>;

<bb 216>:
  D.44909_613 = codec_fmtp.bits_per_second;
  if (D.44909_613 != 0)
    goto <bb 217>;
  else
    goto <bb 218>;

<bb 217>:
  D.44909_614 = codec_fmtp.bits_per_second;
  map_bit_rate_615 = (uint32_t) D.44909_614;
  # DEBUG map_bit_rate => map_bit_rate_615

<bb 218>:
  # map_bit_rate_131 = PHI <map_bit_rate_1481(216), map_bit_rate_615(217)>
  # DEBUG map_bit_rate => map_bit_rate_131
  D.44912_616 = codec_fmtp.microseconds_per_packet;
  if (D.44912_616 != 0)
    goto <bb 219>;
  else
    goto <bb 220>;

<bb 219>:
  D.44912_617 = codec_fmtp.microseconds_per_packet;
  codec_ms_618 = D.44912_617 / 1000;
  # DEBUG codec_ms => codec_ms_618

<bb 220>:
  # codec_ms_89 = PHI <codec_ms_88(218), codec_ms_618(219)>
  # DEBUG codec_ms => codec_ms_89
  D.44915_619 = codec_fmtp.actual_samples_per_second;
  if (D.44915_619 != 0)
    goto <bb 221>;
  else
    goto <bb 222>;

<bb 221>:
  fmtp_remote_codec_rate_620 = codec_fmtp.actual_samples_per_second;
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_620

<bb 222>:
  # codec_ms_90 = PHI <39(213), codec_ms_88(215), codec_ms_89(220), codec_ms_89(221), 32(212), codec_ms_88(214)>
  # fmtp_remote_codec_rate_99 = PHI <0(213), 0(215), 0(220), fmtp_remote_codec_rate_620(221), 0(212), 0(214)>
  # map_bit_rate_132 = PHI <32001(213), map_bit_rate_1481(215), map_bit_rate_131(220), map_bit_rate_131(221), 13332(212), 32099(214)>
  # DEBUG map_bit_rate => map_bit_rate_132
  # DEBUG fmtp_remote_codec_rate => fmtp_remote_codec_rate_99
  # DEBUG codec_ms => codec_ms_90
  # DEBUG i => 0
  goto <bb 257>;

<bb 223>:
  i.91_627 = (unsigned int) i_129;
  D.44919_628 = i.91_627 * 4;
  D.44920_629 = codec_array_84 + D.44919_628;
  imp_630 = *D.44920_629;
  # DEBUG imp => imp_630
  D.44921_631 = imp_630->bits_per_second;
  bit_rate_632 = (uint32_t) D.44921_631;
  # DEBUG bit_rate => bit_rate_632
  codec_rate_633 = imp_630->samples_per_second;
  # DEBUG codec_rate => codec_rate_633
  D.44922_634 = imp_630->codec_type;
  if (D.44922_634 != 0)
    goto <bb 224>;
  else
    goto <bb 225>;

<bb 224>:
  // predicted unlikely by continue predictor.
  goto <bb 256>;

<bb 225>:
  D.44856_635 = map_128->rm_pt;
  D.44925_636 = (int) D.44856_635;
  remote_codec_rate.92_637 = (int) remote_codec_rate_98;
  D.44927_638 = imp_630->iananame;
  D.44928_639 = imp_630->ianacode;
  D.44929_640 = (int) D.44928_639;
  D.44930_641 = imp_630->microseconds_per_packet;
  D.44931_642 = D.44930_641 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3383, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u]/[%s:%d:%u:%d:%u]\n", rm_encoding_130, D.44925_636, remote_codec_rate.92_637, codec_ms_90, map_bit_rate_132, D.44927_638, D.44929_640, codec_rate_633, D.44931_642, bit_rate_632);
  D.44889_643 = map_128->rm_encoding;
  # DEBUG s => D.44889_643
  if (D.44889_643 == 0B)
    goto <bb 228>;
  else
    goto <bb 226>;

<bb 226>:
  D.47920_1484 = *D.44889_643;
  if (D.47920_1484 == 0)
    goto <bb 228>;
  else
    goto <bb 227>;

<bb 227>:

<bb 228>:
  # D.47919_1485 = PHI <1(225), 1(226), 0(227)>
  if (D.47919_1485 != 0)
    goto <bb 230>;
  else
    goto <bb 229>;

<bb 229>:
  D.44471_645 = smh_186->mparams;
  D.44821_646 = D.44471_645->ndlb;
  D.44937_647 = (int) D.44821_646;
  D.44938_648 = D.44937_647 & 1;
  if (D.44938_648 != 0)
    goto <bb 230>;
  else
    goto <bb 232>;

<bb 230>:
  D.44856_650 = map_128->rm_pt;
  D.44925_651 = (int) D.44856_650;
  if (D.44925_651 <= 95)
    goto <bb 231>;
  else
    goto <bb 232>;

<bb 231>:
  D.44856_652 = map_128->rm_pt;
  D.44925_653 = (int) D.44856_652;
  D.44928_654 = imp_630->ianacode;
  D.44929_655 = (int) D.44928_654;
  match_656 = D.44925_653 == D.44929_655;
  # DEBUG match => match_656
  goto <bb 238>;

<bb 232>:
  D.44927_657 = imp_630->iananame;
  D.44945_658 = strcasecmp (rm_encoding_130, D.44927_657);
  if (D.44945_658 == 0)
    goto <bb 233>;
  else
    goto <bb 235>;

<bb 233>:
  if (remote_codec_rate_98 == codec_rate_633)
    goto <bb 236>;
  else
    goto <bb 234>;

<bb 234>:
  D.44948_659 = imp_630->actual_samples_per_second;
  if (D.44948_659 == fmtp_remote_codec_rate_99)
    goto <bb 236>;
  else
    goto <bb 235>;

<bb 235>:

<bb 236>:
  # iftmp.93_144 = PHI <1(234), 0(235), 1(233)>
  match_662 = (uint8_t) iftmp.93_144;
  # DEBUG match => match_662
  if (fmtp_remote_codec_rate_99 != 0)
    goto <bb 237>;
  else
    goto <bb 238>;

<bb 237>:
  # DEBUG remote_codec_rate => fmtp_remote_codec_rate_99

<bb 238>:
  # match_1 = PHI <match_656(231), match_662(236), match_662(237)>
  # remote_codec_rate_96 = PHI <remote_codec_rate_98(231), remote_codec_rate_98(236), fmtp_remote_codec_rate_99(237)>
  # DEBUG remote_codec_rate => remote_codec_rate_96
  # DEBUG match => match_1
  D.44951_664 = match_1 != 0;
  D.44952_665 = bit_rate_632 != 0;
  D.44953_666 = D.44951_664 && D.44952_665;
  if (D.44953_666 != 0)
    goto <bb 239>;
  else
    goto <bb 243>;

<bb 239>:
  D.44956_667 = map_bit_rate_132 != 0;
  D.44957_668 = map_bit_rate_132 != bit_rate_632;
  D.44958_669 = D.44956_667 && D.44957_668;
  if (D.44958_669 != 0)
    goto <bb 240>;
  else
    goto <bb 243>;

<bb 240>:
  D.44889_670 = map_128->rm_encoding;
  D.44961_671 = strcasecmp (D.44889_670, "ilbc");
  if (D.44961_671 != 0)
    goto <bb 241>;
  else
    goto <bb 243>;

<bb 241>:
  D.44889_672 = map_128->rm_encoding;
  D.44964_673 = strcasecmp (D.44889_672, "isac");
  if (D.44964_673 != 0)
    goto <bb 242>;
  else
    goto <bb 243>;

<bb 242>:
  # DEBUG match => 0

<bb 243>:
  # match_2 = PHI <match_1(238), match_1(239), match_1(240), match_1(241), 0(242)>
  # DEBUG match => match_2
  D.44951_675 = match_2 != 0;
  D.44969_676 = remote_codec_rate_96 != 0;
  D.44970_677 = D.44951_675 && D.44969_676;
  if (D.44970_677 != 0)
    goto <bb 244>;
  else
    goto <bb 248>;

<bb 244>:
  D.44973_678 = codec_rate_633 != 0;
  D.44974_679 = remote_codec_rate_96 != codec_rate_633;
  D.44975_680 = D.44973_678 && D.44974_679;
  if (D.44975_680 != 0)
    goto <bb 245>;
  else
    goto <bb 248>;

<bb 245>:
  D.44889_681 = map_128->rm_encoding;
  D.44978_682 = strcasecmp (D.44889_681, "pcma");
  if (D.44978_682 == 0)
    goto <bb 247>;
  else
    goto <bb 246>;

<bb 246>:
  D.44889_683 = map_128->rm_encoding;
  D.44980_684 = strcasecmp (D.44889_683, "pcmu");
  if (D.44980_684 == 0)
    goto <bb 247>;
  else
    goto <bb 248>;

<bb 247>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3405, session_161(D), 7, "sampling rates have to match for G.711\n");
  # DEBUG match => 0

<bb 248>:
  # match_3 = PHI <match_2(243), match_2(244), match_2(246), 0(247)>
  # DEBUG match => match_3
  if (match_3 != 0)
    goto <bb 249>;
  else
    goto <bb 256>;

<bb 249>:
  if (scrooge_80 != 0)
    goto <bb 250>;
  else
    goto <bb 251>;

<bb 250>:
  D.44927_686 = imp_630->iananame;
  D.44985_687 = imp_630->samples_per_second;
  D.44930_688 = imp_630->microseconds_per_packet;
  D.44931_689 = D.44930_688 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3411, session_161(D), 7, "Bah HUMBUG! Sticking with %s@%uh@%ui\n", D.44927_686, D.44985_687, D.44931_689);
  goto <bb 255>;

<bb 251>:
  D.44990_690 = ptime_35 != 0;
  D.44991_691 = codec_ms_90 != 0;
  D.44992_692 = D.44990_690 && D.44991_691;
  if (D.44992_692 != 0)
    goto <bb 252>;
  else
    goto <bb 253>;

<bb 252>:
  D.44994_693 = codec_ms_90 * 1000;
  D.44930_694 = imp_630->microseconds_per_packet;
  if (D.44994_693 != D.44930_694)
    goto <bb 254>;
  else
    goto <bb 253>;

<bb 253>:
  if (remote_codec_rate_96 != codec_rate_633)
    goto <bb 254>;
  else
    goto <bb 255>;

<bb 254>:
  # DEBUG match => 0
  D.44927_696 = imp_630->iananame;
  D.44928_697 = imp_630->ianacode;
  D.44929_698 = (int) D.44928_697;
  D.44930_699 = imp_630->microseconds_per_packet;
  D.44931_700 = D.44930_699 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3418, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] is saved as a near-match\n", D.44927_696, D.44929_698, codec_rate_633, D.44931_700, bit_rate_632);
  near_matches[nm_idx_116].codec_idx = i_129;
  remote_codec_rate.92_701 = (int) remote_codec_rate_96;
  near_matches[nm_idx_116].rate = remote_codec_rate.92_701;
  near_matches[nm_idx_116].imp = imp_630;
  near_matches[nm_idx_116].map = map_128;
  nm_idx_702 = nm_idx_116 + 1;
  # DEBUG nm_idx => nm_idx_702
  // predicted unlikely by continue predictor.
  goto <bb 256>;

<bb 255>:
  matches[m_idx_101].codec_idx = i_129;
  codec_rate.94_703 = (int) codec_rate_633;
  matches[m_idx_101].rate = codec_rate.94_703;
  matches[m_idx_101].imp = imp_630;
  matches[m_idx_101].map = map_128;
  m_idx_704 = m_idx_101 + 1;
  # DEBUG m_idx => m_idx_704
  D.44927_705 = imp_630->iananame;
  D.44928_706 = imp_630->ianacode;
  D.44929_707 = (int) D.44928_706;
  D.44930_708 = imp_630->microseconds_per_packet;
  D.44931_709 = D.44930_708 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3437, session_161(D), 7, "Audio Codec Compare [%s:%d:%u:%d:%u] ++++ is saved as a match\n", D.44927_705, D.44929_707, codec_rate_633, D.44931_709, bit_rate_632);
  if (m_idx_704 > 29)
    goto <bb 258>;
  else
    goto <bb 256>;

<bb 256>:
  # match_4 = PHI <match_5(224), match_3(248), 0(254), 0(255)>
  # remote_codec_rate_97 = PHI <remote_codec_rate_98(224), remote_codec_rate_96(248), remote_codec_rate_96(254), remote_codec_rate_96(255)>
  # m_idx_100 = PHI <m_idx_101(224), m_idx_101(248), m_idx_101(254), m_idx_704(255)>
  # nm_idx_115 = PHI <nm_idx_116(224), nm_idx_116(248), nm_idx_702(254), nm_idx_116(255)>
  # DEBUG nm_idx => nm_idx_115
  # DEBUG m_idx => m_idx_100
  # DEBUG remote_codec_rate => remote_codec_rate_97
  # DEBUG match => match_4
  i_711 = i_129 + 1;
  # DEBUG i => i_711

<bb 257>:
  # match_5 = PHI <match_8(222), match_4(256)>
  # remote_codec_rate_98 = PHI <remote_codec_rate_596(222), remote_codec_rate_97(256)>
  # m_idx_101 = PHI <m_idx_104(222), m_idx_100(256)>
  # nm_idx_116 = PHI <nm_idx_118(222), nm_idx_115(256)>
  # i_129 = PHI <0(222), i_711(256)>
  # DEBUG i => i_129
  # DEBUG nm_idx => nm_idx_116
  # DEBUG m_idx => m_idx_101
  # DEBUG remote_codec_rate => remote_codec_rate_98
  # DEBUG match => match_5
  D.44471_622 = smh_186->mparams;
  D.44997_623 = D.44471_622->num_codecs;
  D.44998_624 = D.44997_623 > i_129;
  D.44999_625 = i_129 < total_codecs_85;
  D.45000_626 = D.44998_624 && D.44999_625;
  if (D.45000_626 != 0)
    goto <bb 223>;
  else
    goto <bb 258>;

<bb 258>:
  # match_6 = PHI <match_3(255), match_5(257)>
  # m_idx_102 = PHI <m_idx_704(255), m_idx_101(257)>
  # DEBUG m_idx => m_idx_102
  # DEBUG match => match_6
  if (m_idx_102 > 29)
    goto <bb 261>;
  else
    goto <bb 259>;

<bb 259>:
  # match_7 = PHI <match_8(187), match_8(193), match_8(195), match_8(197), match_6(258)>
  # best_te_19 = PHI <best_te_18(187), best_te_20(193), best_te_20(195), best_te_20(197), best_te_20(258)>
  # cng_pt_24 = PHI <cng_pt_25(187), cng_pt_573(193), cng_pt_25(195), cng_pt_25(197), cng_pt_25(258)>
  # x_48 = PHI <x_49(187), x_49(193), x_580(195), x_580(197), x_580(258)>
  # codec_ms_91 = PHI <codec_ms_92(187), codec_ms_92(193), codec_ms_92(195), codec_ms_92(197), codec_ms_90(258)>
  # m_idx_103 = PHI <m_idx_104(187), m_idx_104(193), m_idx_104(195), m_idx_104(197), m_idx_102(258)>
  # nm_idx_117 = PHI <nm_idx_118(187), nm_idx_118(193), nm_idx_118(195), nm_idx_118(197), nm_idx_116(258)>
  # DEBUG nm_idx => nm_idx_117
  # DEBUG m_idx => m_idx_103
  # DEBUG codec_ms => codec_ms_91
  # DEBUG x => x_48
  # DEBUG cng_pt => cng_pt_24
  # DEBUG best_te => best_te_19
  # DEBUG match => match_7
  map_712 = map_128->rm_next;
  # DEBUG map => map_712

<bb 260>:
  # match_8 = PHI <match_16(180), match_7(259)>
  # best_te_20 = PHI <best_te_23(180), best_te_19(259)>
  # cng_pt_25 = PHI <cng_pt_27(180), cng_pt_24(259)>
  # x_49 = PHI <0(180), x_48(259)>
  # codec_ms_92 = PHI <codec_ms_95(180), codec_ms_91(259)>
  # m_idx_104 = PHI <m_idx_114(180), m_idx_103(259)>
  # nm_idx_118 = PHI <nm_idx_122(180), nm_idx_117(259)>
  # map_128 = PHI <map_559(180), map_712(259)>
  # DEBUG map => map_128
  # DEBUG nm_idx => nm_idx_118
  # DEBUG m_idx => m_idx_104
  # DEBUG codec_ms => codec_ms_92
  # DEBUG x => x_49
  # DEBUG cng_pt => cng_pt_25
  # DEBUG best_te => best_te_20
  # DEBUG match => match_8
  if (map_128 != 0B)
    goto <bb 181>;
  else
    goto <bb 261>;

<bb 261>:
  # match_9 = PHI <match_6(258), match_8(260)>
  # codec_ms_93 = PHI <codec_ms_90(258), codec_ms_92(260)>
  # m_idx_105 = PHI <m_idx_102(258), m_idx_104(260)>
  # nm_idx_119 = PHI <nm_idx_116(258), nm_idx_118(260)>
  # DEBUG nm_idx => nm_idx_119
  # DEBUG m_idx => m_idx_105
  # DEBUG codec_ms => codec_ms_93
  # DEBUG match => match_9
  D.45002_713 = smh_186->crypto_mode;
  D.45003_714 = D.45002_713 == 1;
  D.45004_715 = got_crypto_54 <= 0;
  D.45005_716 = D.45003_714 && D.45004_715;
  if (D.45005_716 != 0)
    goto <bb 262>;
  else
    goto <bb 263>;

<bb 262>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3455, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG match => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0

<bb 263>:
  # match_10 = PHI <match_9(261), 0(262)>
  # m_idx_106 = PHI <m_idx_105(261), 0(262)>
  # nm_idx_120 = PHI <nm_idx_119(261), 0(262)>
  # DEBUG nm_idx => nm_idx_120
  # DEBUG m_idx => m_idx_106
  # DEBUG match => match_10
  D.45008_720 = m_idx_106 == 0;
  D.45009_721 = nm_idx_120 != 0;
  D.45010_722 = D.45008_720 && D.45009_721;
  if (D.45010_722 != 0)
    goto <bb 264>;
  else
    goto <bb 274>;

<bb 264>:
  # j_1118 = PHI <0(263)>
  goto <bb 273>;

<bb 265>:
  # DEBUG timp => 0B
  D.45013_725 = near_matches[j_133].rate;
  near_rate_726 = (uint32_t) D.45013_725;
  # DEBUG near_rate => near_rate_726
  near_match_727 = near_matches[j_133].imp;
  # DEBUG near_match => near_match_727
  near_map_728 = near_matches[j_133].map;
  # DEBUG near_map => near_map_728
  D.45014_729 = near_match_727->iananame;
  if (near_rate_726 == 0)
    goto <bb 266>;
  else
    goto <bb 267>;

<bb 266>:
  near_rate_730 = near_match_727->samples_per_second;

<bb 267>:
  # near_rate_145 = PHI <near_rate_730(266), near_rate_726(265)>
  switch_snprintf (&tmp, 80, "%s@%uh@%ui", D.45014_729, near_rate_145, codec_ms_93);
  prefs[0] = &tmp;
  num_732 = switch_loadable_module_get_codecs_sorted (&search, 1, &prefs, 1);
  # DEBUG num => num_732
  if (num_732 != 0)
    goto <bb 268>;
  else
    goto <bb 269>;

<bb 268>:
  timp_733 = search[0];
  # DEBUG timp => timp_733

<bb 269>:
  # timp_134 = PHI <timp_733(268), near_match_727(267)>
  # DEBUG timp => timp_134
  if (maxptime_39 == 0)
    goto <bb 271>;
  else
    goto <bb 270>;

<bb 270>:
  D.45025_735 = timp_134->microseconds_per_packet;
  D.45026_736 = D.45025_735 / 1000;
  if (D.45026_736 <= maxptime_39)
    goto <bb 271>;
  else
    goto <bb 272>;

<bb 271>:
  D.45027_738 = timp_134->iananame;
  D.45025_739 = timp_134->microseconds_per_packet;
  D.45026_740 = D.45025_739 / 1000;
  D.45028_741 = timp_134->actual_samples_per_second;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3488, session_161(D), 7, "Substituting codec %s@%ui@%uh\n", D.45027_738, D.45026_740, D.45028_741);
  # DEBUG match => 1
  D.45029_743 = near_matches[j_133].codec_idx;
  matches[m_idx_106].codec_idx = D.45029_743;
  near_rate.96_744 = (int) near_rate_726;
  matches[m_idx_106].rate = near_rate.96_744;
  matches[m_idx_106].imp = timp_134;
  matches[m_idx_106].map = near_map_728;
  m_idx_745 = m_idx_106 + 1;
  # DEBUG m_idx => m_idx_745
  goto <bb 274>;

<bb 272>:
  j_737 = j_133 + 1;
  # DEBUG j => j_737

<bb 273>:
  # j_133 = PHI <j_1118(264), j_737(272)>
  # DEBUG j => j_133
  if (j_133 < nm_idx_120)
    goto <bb 265>;
  else
    goto <bb 274>;

<bb 274>:
  # match_11 = PHI <match_10(263), 1(271), match_10(273)>
  # m_idx_107 = PHI <m_idx_106(263), m_idx_745(271), m_idx_106(273)>
  # DEBUG m_idx => m_idx_107
  # DEBUG match => match_11
  if (m_idx_107 != 0)
    goto <bb 275>;
  else
    goto <bb 299>;

<bb 275>:
  if (greedy_47 != 0)
    goto <bb 276>;
  else
    goto <bb 277>;

<bb 276>:
  greedy_sort (smh_186, &matches, m_idx_107, codec_array_84, total_codecs_85);

<bb 277>:
  # DEBUG match => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].codec_negotiated = 1;
  smh_186->num_negotiated_codecs = 0;
  # DEBUG j => 0
  goto <bb 298>;

<bb 278>:
  D.45035_748 = matches[j_135].map;
  D.45036_749 = D.45035_748->rm_encoding;
  D.45035_750 = matches[j_135].map;
  D.45037_751 = D.45035_750->rm_fmtp;
  D.45035_752 = matches[j_135].map;
  D.45038_753 = D.45035_752->rm_pt;
  D.45039_754 = (uint32_t) D.45038_753;
  D.45040_755 = matches[j_135].imp;
  D.45041_756 = D.45040_755->samples_per_second;
  D.45040_757 = matches[j_135].imp;
  D.45042_758 = D.45040_757->microseconds_per_packet;
  D.45043_759 = D.45042_758 / 1000;
  D.45044_760 = (uint32_t) D.45043_759;
  pmap_761 = switch_core_media_add_payload_map (session_161(D), 0, D.45036_749, D.45037_751, sdp_type_546(D), D.45039_754, D.45041_756, D.45044_760, 1);
  # DEBUG pmap => pmap_761
  mimp_762 = matches[j_135].imp;
  # DEBUG mimp => mimp_762
  mmap_763 = matches[j_135].map;
  # DEBUG mmap => mmap_763
  if (j_135 == 0)
    goto <bb 279>;
  else
    goto <bb 281>;

<bb 279>:
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map = pmap_761;
  D.44750_764 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44750_764->current = 1;
  D.44605_765 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_765 != 0B)
    goto <bb 280>;
  else
    goto <bb 281>;

<bb 280>:
  D.44605_766 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  D.45049_767 = pmap_761->pt;
  switch_rtp_set_default_payload (D.44605_766, D.45049_767);

<bb 281>:
  D.45050_768 = mmap_763->rm_encoding;
  D.45051_769 = switch_core_perform_session_strdup (session_161(D), D.45050_768, "src/switch_core_media.c", &__func__, 3535);
  pmap_761->rm_encoding = D.45051_769;
  D.45052_770 = mimp_762->iananame;
  D.45053_771 = switch_core_perform_session_strdup (session_161(D), D.45052_770, "src/switch_core_media.c", &__func__, 3536);
  pmap_761->iananame = D.45053_771;
  D.45054_772 = mmap_763->rm_pt;
  D.45055_773 = (unsigned char) D.45054_772;
  pmap_761->recv_pt = D.45055_773;
  D.45056_774 = mimp_762->samples_per_second;
  pmap_761->rm_rate = D.45056_774;
  D.45056_775 = mimp_762->samples_per_second;
  pmap_761->adv_rm_rate = D.45056_775;
  D.45052_776 = mimp_762->iananame;
  D.45057_777 = strcasecmp (D.45052_776, "g722");
  if (D.45057_777 != 0)
    goto <bb 282>;
  else
    goto <bb 283>;

<bb 282>:
  D.45060_778 = mimp_762->actual_samples_per_second;
  pmap_761->rm_rate = D.45060_778;

<bb 283>:
  D.45061_779 = mimp_762->microseconds_per_packet;
  D.45062_780 = D.45061_779 / 1000;
  D.45063_781 = (uint32_t) D.45062_780;
  pmap_761->codec_ms = D.45063_781;
  D.45064_782 = mimp_762->bits_per_second;
  D.45065_783 = (uint32_t) D.45064_782;
  pmap_761->bitrate = D.45065_783;
  D.45067_784 = mmap_763->rm_params;
  if (D.45067_784 != 0B)
    goto <bb 284>;
  else
    goto <bb 285>;

<bb 284>:
  D.45067_785 = mmap_763->rm_params;
  # DEBUG __nptr => D.45067_785
  D.47923_1486 = strtol (D.45067_785, 0B, 10);

<bb 285>:
  # D.47923_146 = PHI <D.47923_1486(284), 1(283)>
  pmap_761->channels = D.47923_146;
  D.45050_788 = mmap_763->rm_encoding;
  D.45071_789 = strcasecmp (D.45050_788, "opus");
  if (D.45071_789 == 0)
    goto <bb 286>;
  else
    goto <bb 296>;

<bb 286>:
  D.45074_790 = pmap_761->channels;
  if (D.45074_790 == 1)
    goto <bb 287>;
  else
    goto <bb 288>;

<bb 287>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3549, session_161(D), 4, "Invalid SDP for opus.  Don\'t ask.. but it needs a /2\n");
  pmap_761->adv_channels = 1;
  goto <bb 289>;

<bb 288>:
  pmap_761->adv_channels = 2;

<bb 289>:
  D.45080_791 = mmap_763->rm_fmtp;
  # DEBUG s => D.45080_791
  if (D.45080_791 == 0B)
    goto <bb 292>;
  else
    goto <bb 290>;

<bb 290>:
  D.47927_1487 = *D.45080_791;
  if (D.47927_1487 == 0)
    goto <bb 292>;
  else
    goto <bb 291>;

<bb 291>:

<bb 292>:
  # D.47926_1488 = PHI <1(289), 1(290), 0(291)>
  if (D.47926_1488 == 0)
    goto <bb 293>;
  else
    goto <bb 295>;

<bb 293>:
  D.45080_793 = mmap_763->rm_fmtp;
  D.45083_794 = switch_stristr ("stereo=1", D.45080_793);
  if (D.45083_794 != 0B)
    goto <bb 294>;
  else
    goto <bb 295>;

<bb 294>:
  pmap_761->channels = 2;
  goto <bb 297>;

<bb 295>:
  pmap_761->channels = 1;
  goto <bb 297>;

<bb 296>:
  D.45074_795 = pmap_761->channels;
  pmap_761->adv_channels = D.45074_795;

<bb 297>:
  D.45086_796 = connection_124->c_address;
  D.45087_797 = switch_core_perform_session_strdup (session_161(D), D.45086_796, "src/switch_core_media.c", &__func__, 3563);
  pmap_761->remote_sdp_ip = D.45087_797;
  D.44697_798 = m_28->m_port;
  D.45088_799 = (short unsigned int) D.44697_798;
  pmap_761->remote_sdp_port = D.45088_799;
  D.45080_800 = mmap_763->rm_fmtp;
  D.45089_801 = switch_core_perform_session_strdup (session_161(D), D.45080_800, "src/switch_core_media.c", &__func__, 3565);
  pmap_761->rm_fmtp = D.45089_801;
  D.45054_802 = mmap_763->rm_pt;
  D.45055_803 = (unsigned char) D.45054_802;
  pmap_761->agreed_pt = D.45055_803;
  D.44655_804 = smh_186->num_negotiated_codecs;
  smh_186->negotiated_codecs[D.44655_804] = mimp_762;
  D.45090_805 = D.44655_804 + 1;
  smh_186->num_negotiated_codecs = D.45090_805;
  D.45054_806 = mmap_763->rm_pt;
  D.45055_807 = (unsigned char) D.45054_806;
  pmap_761->recv_pt = D.45055_807;
  j_808 = j_135 + 1;
  # DEBUG j => j_808

<bb 298>:
  # j_135 = PHI <0(277), j_808(297)>
  # DEBUG j => j_135
  if (j_135 < m_idx_107)
    goto <bb 278>;
  else
    goto <bb 299>;

<bb 299>:
  # match_12 = PHI <match_11(274), 1(298)>
  # DEBUG match => match_12
  if (match_12 != 0)
    goto <bb 300>;
  else
    goto <bb 310>;

<bb 300>:
  D.44750_809 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44762_810 = D.44750_809->remote_sdp_port;
  D.44767_811 = (int) D.44762_810;
  switch_snprintf (&tmp, 50, "%d", D.44767_811);
  D.44530_812 = session_161(D)->channel;
  D.44750_813 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.44760_814 = D.44750_813->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_812, "remote_media_ip", D.44760_814, 1);
  D.44530_815 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_815, "remote_media_port", &tmp, 1);
  D.44750_816 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].cur_payload_map;
  D.45093_817 = D.44750_816->recv_pt;
  D.45094_818 = (int) D.45093_817;
  switch_snprintf (&tmp, 50, "%d", D.45094_818);
  D.44530_819 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_819, "rtp_audio_recv_pt", &tmp, 1);
  D.45095_820 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].read_codec;
  # DEBUG codec => D.45095_820
  if (D.45095_820 != 0B)
    goto <bb 301>;
  else
    goto <bb 305>;

<bb 301>:
  D.47935_1489 = MEM[(struct switch_codec_t *)smh_186 + 1604B].flags;
  D.47934_1490 = D.47935_1489 & 256;
  if (D.47934_1490 != 0)
    goto <bb 302>;
  else
    goto <bb 305>;

<bb 302>:
  D.47933_1491 = MEM[(struct switch_codec_t *)smh_186 + 1604B].mutex;
  if (D.47933_1491 != 0B)
    goto <bb 303>;
  else
    goto <bb 305>;

<bb 303>:
  D.47932_1492 = MEM[(struct switch_codec_t *)smh_186 + 1604B].codec_interface;
  if (D.47932_1492 != 0B)
    goto <bb 304>;
  else
    goto <bb 305>;

<bb 304>:
  D.47931_1493 = MEM[(struct switch_codec_t *)smh_186 + 1604B].implementation;
  if (D.47931_1493 != 0B)
    goto <bb 306>;
  else
    goto <bb 305>;

<bb 305>:

<bb 306>:
  # iftmp.104_1494 = PHI <1(304), 0(305)>
  if (iftmp.104_1494 != 0)
    goto <bb 307>;
  else
    goto <bb 308>;

<bb 307>:
  MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].reset_codec = 1;

<bb 308>:
  D.44471_822 = smh_186->mparams;
  D.45099_823 = D.44471_822->codec_flags;
  D.45100_824 = switch_core_media_set_codec (session_161(D), 0, D.45099_823);
  if (D.45100_824 == 0)
    goto <bb 309>;
  else
    goto <bb 310>;

<bb 309>:
  # DEBUG got_audio => 1
  check_ice (smh_186, 0, sdp_198, m_28);

<bb 310>:
  # match_13 = PHI <match_12(299), match_12(309), 0(308)>
  # got_audio_65 = PHI <got_audio_67(299), 1(309), got_audio_67(308)>
  # DEBUG got_audio => got_audio_65
  # DEBUG match => match_13
  if (best_te_20 == 0)
    goto <bb 311>;
  else
    goto <bb 314>;

<bb 311>:
  D.45108_827 = switch_media_handle_test_media_flag (smh_186, 8);
  if (D.45108_827 != 0)
    goto <bb 313>;
  else
    goto <bb 312>;

<bb 312>:
  D.44530_828 = session_161(D)->channel;
  D.45110_829 = switch_channel_test_flag (D.44530_828, 93);
  if (D.45110_829 != 0)
    goto <bb 313>;
  else
    goto <bb 314>;

<bb 313>:
  D.44471_830 = smh_186->mparams;
  D.45111_831 = D.44471_830->te;
  D.45112_832 = (int) D.45111_831;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3609, session_161(D), 7, "No 2833 in SDP. Liberal DTMF mode adding %d as telephone-event.\n", D.45112_832);
  D.44471_833 = smh_186->mparams;
  best_te_834 = D.44471_833->te;
  # DEBUG best_te => best_te_834

<bb 314>:
  # best_te_21 = PHI <best_te_20(310), best_te_20(312), best_te_834(313)>
  # DEBUG best_te => best_te_21
  if (best_te_21 != 0)
    goto <bb 315>;
  else
    goto <bb 320>;

<bb 315>:
  D.45115_835 = switch_channel_direction (channel_162);
  if (D.45115_835 == 1)
    goto <bb 316>;
  else
    goto <bb 318>;

<bb 316>:
  D.44471_836 = smh_186->mparams;
  D.44471_836->te = best_te_21;
  # DEBUG D#11 => D.44471_836->te
  # DEBUG te => D#11
  D.44857_838 = (int) best_te_21;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3617, session_161(D), 7, "Set 2833 dtmf send payload to %u\n", D.44857_838);
  D.44530_839 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_839, "dtmf_type", "rfc2833", 1);
  D.44471_840 = smh_186->mparams;
  D.44471_840->dtmf_type = 0;
  D.44605_841 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_841 != 0B)
    goto <bb 317>;
  else
    goto <bb 418>;

<bb 317>:
  D.44605_842 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_event (D.44605_842, best_te_21);
  D.44530_843 = session_161(D)->channel;
  D.44857_844 = (int) best_te_21;
  switch_channel_set_variable_printf (D.44530_843, "rtp_2833_send_payload", "%d", D.44857_844);
  goto <bb 418>;

<bb 318>:
  D.44471_846 = smh_186->mparams;
  D.44471_846->te = best_te_21;
  D.45111_847 = D.44471_846->te;
  D.44471_846->recv_te = D.45111_847;
  te_848 = D.44471_846->recv_te;
  # DEBUG te => te_848
  D.45121_849 = (int) te_848;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3626, session_161(D), 7, "Set 2833 dtmf send/recv payload to %u\n", D.45121_849);
  D.44530_850 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_850, "dtmf_type", "rfc2833", 1);
  D.44471_851 = smh_186->mparams;
  D.44471_851->dtmf_type = 0;
  D.44605_852 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  if (D.44605_852 != 0B)
    goto <bb 319>;
  else
    goto <bb 418>;

<bb 319>:
  D.44605_853 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_event (D.44605_853, te_848);
  D.44530_854 = session_161(D)->channel;
  D.45121_855 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_854, "rtp_2833_send_payload", "%d", D.45121_855);
  D.44605_856 = MEM[(struct switch_rtp_engine_t *)smh_186 + 80B].rtp_session;
  switch_rtp_set_telephony_recv_event (D.44605_856, te_848);
  D.44530_857 = session_161(D)->channel;
  D.45121_858 = (int) te_848;
  switch_channel_set_variable_printf (D.44530_857, "rtp_2833_recv_payload", "%d", D.45121_858);
  goto <bb 418>;

<bb 320>:
  D.45125_859 = switch_channel_get_variable_dup (channel_162, "rtp_info_when_no_2833", 1, -1);
  D.45126_860 = switch_false (D.45125_859);
  if (D.45126_860 == 0)
    goto <bb 321>;
  else
    goto <bb 322>;

<bb 321>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3639, session_161(D), 7, "No 2833 in SDP.  Disable 2833 dtmf and switch to INFO\n");
  D.44530_861 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_861, "dtmf_type", "info", 1);
  D.44471_862 = smh_186->mparams;
  D.44471_862->dtmf_type = 1;
  D.44471_864 = smh_186->mparams;
  D.44471_864->te = 0;
  D.45111_865 = D.44471_864->te;
  D.44471_864->recv_te = D.45111_865;
  # DEBUG D#12 => D.44471_864->recv_te
  # DEBUG te => D#12
  goto <bb 418>;

<bb 322>:
  D.44530_867 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_867, "dtmf_type", "none", 1);
  D.44471_868 = smh_186->mparams;
  D.44471_868->dtmf_type = 2;
  D.44471_870 = smh_186->mparams;
  D.44471_870->te = 0;
  D.45111_871 = D.44471_870->te;
  D.44471_870->recv_te = D.45111_871;
  # DEBUG D#13 => D.44471_870->recv_te
  # DEBUG te => D#13
  goto <bb 418>;

<bb 323>:
  D.44681_873 = m_28->m_type;
  if (D.44681_873 == 3)
    goto <bb 324>;
  else
    goto <bb 418>;

<bb 324>:
  D.44697_874 = m_28->m_port;
  if (D.44697_874 != 0)
    goto <bb 325>;
  else
    goto <bb 418>;

<bb 325>:
  # DEBUG mimp => 0B
  # DEBUG vmatch => 0
  # DEBUG nm_idx => 0
  # DEBUG m_idx => 0
  memset (&matches, 0, 480);
  memset (&near_matches, 0, 480);
  D.44530_879 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_879, "video_possible", "true", 1);
  connection_880 = sdp_198->sdp_connection;
  # DEBUG connection => connection_880
  D.44546_881 = m_28->m_connections;
  if (D.44546_881 != 0B)
    goto <bb 326>;
  else
    goto <bb 327>;

<bb 326>:
  connection_882 = m_28->m_connections;
  # DEBUG connection => connection_882

<bb 327>:
  # connection_125 = PHI <connection_880(325), connection_882(326)>
  # DEBUG connection => connection_125
  if (connection_125 == 0B)
    goto <bb 328>;
  else
    goto <bb 329>;

<bb 328>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3669, session_161(D), 3, "Cannot find a c= line in the sdp at media or session level!\n");
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 329>:
  map_884 = m_28->m_rtpmaps;
  # DEBUG map => map_884
  goto <bb 394>;

<bb 330>:
  D.45138_885 = switch_rtp_has_dtls ();
  if (D.45138_885 != 0)
    goto <bb 331>;
  else
    goto <bb 341>;

<bb 331>:
  D.45141_886 = dtls_ok (session_161(D));
  if (D.45141_886 != 0)
    goto <bb 332>;
  else
    goto <bb 341>;

<bb 332>:
  attr_887 = m_28->m_attributes;
  # DEBUG attr => attr_887
  goto <bb 340>;

<bb 333>:
  D.44590_888 = attr_32->a_name;
  D.45144_889 = strcasecmp (D.44590_888, "fingerprint");
  if (D.45144_889 == 0)
    goto <bb 334>;
  else
    goto <bb 339>;

<bb 334>:
  D.44619_890 = attr_32->a_value;
  # DEBUG s => D.44619_890
  if (D.44619_890 == 0B)
    goto <bb 337>;
  else
    goto <bb 335>;

<bb 335>:
  D.47940_1496 = *D.44619_890;
  if (D.47940_1496 == 0)
    goto <bb 337>;
  else
    goto <bb 336>;

<bb 336>:

<bb 337>:
  # D.47939_1497 = PHI <1(334), 1(335), 0(336)>
  if (D.47939_1497 == 0)
    goto <bb 338>;
  else
    goto <bb 339>;

<bb 338>:
  # DEBUG got_video_crypto => 1

<bb 339>:
  # got_video_crypto_57 = PHI <got_video_crypto_58(333), got_video_crypto_58(337), 1(338)>
  # DEBUG got_video_crypto => got_video_crypto_57
  attr_893 = attr_32->a_next;
  # DEBUG attr => attr_893

<bb 340>:
  # attr_32 = PHI <attr_887(332), attr_893(339)>
  # got_video_crypto_58 = PHI <got_video_crypto_62(332), got_video_crypto_57(339)>
  # DEBUG got_video_crypto => got_video_crypto_58
  # DEBUG attr => attr_32
  if (attr_32 != 0B)
    goto <bb 333>;
  else
    goto <bb 341>;

<bb 341>:
  # got_video_crypto_59 = PHI <got_video_crypto_62(330), got_video_crypto_62(331), got_video_crypto_58(340)>
  # DEBUG got_video_crypto => got_video_crypto_59
  attr_894 = m_28->m_attributes;
  # DEBUG attr => attr_894
  goto <bb 371>;

<bb 342>:
  D.44590_895 = attr_33->a_name;
  D.45152_896 = strcasecmp (D.44590_895, "framerate");
  if (D.45152_896 == 0)
    goto <bb 343>;
  else
    goto <bb 344>;

<bb 343>:
  D.44619_897 = attr_33->a_value;
  if (D.44619_897 != 0B)
    goto <bb 370>;
  else
    goto <bb 344>;

<bb 344>:
  D.44590_898 = attr_33->a_name;
  D.45155_899 = strcasecmp (D.44590_898, "rtcp-fb");
  if (D.45155_899 == 0)
    goto <bb 345>;
  else
    goto <bb 352>;

<bb 345>:
  D.44619_900 = attr_33->a_value;
  # DEBUG s => D.44619_900
  if (D.44619_900 == 0B)
    goto <bb 348>;
  else
    goto <bb 346>;

<bb 346>:
  D.47944_1498 = *D.44619_900;
  if (D.47944_1498 == 0)
    goto <bb 348>;
  else
    goto <bb 347>;

<bb 347>:

<bb 348>:
  # D.47943_1499 = PHI <1(345), 1(346), 0(347)>
  if (D.47943_1499 == 0)
    goto <bb 349>;
  else
    goto <bb 370>;

<bb 349>:
  D.44619_902 = attr_33->a_value;
  D.45161_903 = switch_stristr ("fir", D.44619_902);
  if (D.45161_903 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;

<bb 350>:
  D.45164_904 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir;
  D.45165_905 = D.45164_904 + 1;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].fir = D.45165_905;

<bb 351>:
  D.44471_906 = smh_186->mparams;
  D.44471_906->rtcp_video_interval_msec = "10000";
  goto <bb 370>;

<bb 352>:
  D.44590_907 = attr_33->a_name;
  D.45169_908 = strcasecmp (D.44590_907, "rtcp");
  if (D.45169_908 == 0)
    goto <bb 353>;
  else
    goto <bb 359>;

<bb 353>:
  D.44619_909 = attr_33->a_value;
  if (D.44619_909 != 0B)
    goto <bb 354>;
  else
    goto <bb 359>;

<bb 354>:
  # DEBUG __s2_len => 1
  __s1_911 = attr_33->a_value;
  # DEBUG __s1 => __s1_911
  D.45175_912 = *__s1_911;
  D.45176_913 = (int) D.45175_912;
  __result_917 = D.45176_913 + -49;
  # DEBUG __result => __result_917
  if (__result_917 == 0)
    goto <bb 355>;
  else
    goto <bb 356>;

<bb 355>:
  D.45186_922 = MEM[(const unsigned char *)__s1_911 + 1B];
  D.45187_923 = (int) D.45186_922;
  # DEBUG __result => D.45187_923

<bb 356>:
  # __result_140 = PHI <__result_917(354), D.45187_923(355)>
  # DEBUG __result => __result_140
  if (__result_140 == 0)
    goto <bb 357>;
  else
    goto <bb 359>;

<bb 357>:
  D.44530_953 = session_161(D)->channel;
  D.44619_954 = attr_33->a_value;
  switch_channel_set_variable_var_check (D.44530_953, "rtp_remote_video_rtcp_port", D.44619_954, 1);
  D.44619_955 = attr_33->a_value;
  # DEBUG __nptr => D.44619_955
  D.47947_1500 = strtol (D.44619_955, 0B, 10);
  D.45214_957 = (short unsigned int) D.47947_1500;
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].remote_rtcp_port = D.45214_957;
  D.44471_958 = smh_186->mparams;
  D.45215_959 = D.44471_958->rtcp_video_interval_msec;
  if (D.45215_959 == 0B)
    goto <bb 358>;
  else
    goto <bb 370>;

<bb 358>:
  D.44471_960 = smh_186->mparams;
  D.44471_960->rtcp_video_interval_msec = "5000";
  goto <bb 370>;

<bb 359>:
  if (got_video_crypto_61 == 0)
    goto <bb 360>;
  else
    goto <bb 370>;

<bb 360>:
  D.44590_961 = attr_33->a_name;
  D.45220_962 = strcasecmp (D.44590_961, "crypto");
  if (D.45220_962 == 0)
    goto <bb 361>;
  else
    goto <bb 370>;

<bb 361>:
  D.44619_963 = attr_33->a_value;
  # DEBUG s => D.44619_963
  if (D.44619_963 == 0B)
    goto <bb 364>;
  else
    goto <bb 362>;

<bb 362>:
  D.47951_1501 = *D.44619_963;
  if (D.47951_1501 == 0)
    goto <bb 364>;
  else
    goto <bb 363>;

<bb 363>:

<bb 364>:
  # D.47950_1502 = PHI <1(361), 1(362), 0(363)>
  if (D.47950_1502 == 0)
    goto <bb 365>;
  else
    goto <bb 370>;

<bb 365>:
  D.44471_965 = smh_186->mparams;
  D.44821_966 = D.44471_965->ndlb;
  D.44822_967 = D.44821_966 & 4;
  if (D.44822_967 == 0)
    goto <bb 366>;
  else
    goto <bb 369>;

<bb 366>:
  D.44530_968 = session_161(D)->channel;
  D.45228_969 = switch_channel_get_variable_dup (D.44530_968, "rtp_allow_crypto_in_avp", 1, -1);
  D.45229_970 = switch_true (D.45228_969);
  if (D.45229_970 == 0)
    goto <bb 367>;
  else
    goto <bb 369>;

<bb 367>:
  D.44666_971 = m_28->m_proto;
  D.44829_972 = D.44666_971 != 257;
  D.44830_973 = got_webrtc_78 == 0;
  D.44831_974 = D.44829_972 && D.44830_973;
  if (D.44831_974 != 0)
    goto <bb 368>;
  else
    goto <bb 369>;

<bb 368>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3711, session_161(D), 3, "a=crypto in RTP/AVP, refer to rfc3711\n");
  # DEBUG match => 0
  goto <bb 420> (done);

<bb 369>:
  crypto_976 = attr_33->a_value;
  # DEBUG crypto => crypto_976
  # DEBUG __nptr => crypto_976
  crypto_tag_1503 = strtol (crypto_976, 0B, 10);
  # DEBUG crypto_tag => NULL
  got_video_crypto_978 = switch_core_session_check_incoming_crypto (session_161(D), "rtp_has_video_crypto", 1, crypto_976, crypto_tag_1503, sdp_type_546(D));
  # DEBUG got_video_crypto => got_video_crypto_978

<bb 370>:
  # got_video_crypto_60 = PHI <got_video_crypto_61(343), got_video_crypto_61(351), got_video_crypto_61(358), got_video_crypto_61(359), got_video_crypto_61(360), got_video_crypto_61(364), got_video_crypto_978(369), got_video_crypto_61(348), got_video_crypto_61(357)>
  # DEBUG got_video_crypto => got_video_crypto_60
  attr_979 = attr_33->a_next;
  # DEBUG attr => attr_979

<bb 371>:
  # attr_33 = PHI <attr_894(341), attr_979(370)>
  # got_video_crypto_61 = PHI <got_video_crypto_59(341), got_video_crypto_60(370)>
  # DEBUG got_video_crypto => got_video_crypto_61
  # DEBUG attr => attr_33
  if (attr_33 != 0B)
    goto <bb 342>;
  else
    goto <bb 372>;

<bb 372>:
  rm_encoding_980 = map_136->rm_encoding;
  # DEBUG rm_encoding => rm_encoding_980
  if (rm_encoding_980 == 0B)
    goto <bb 373>;
  else
    goto <bb 374>;

<bb 373>:
  # DEBUG rm_encoding => ""

<bb 374>:
  # rm_encoding_137 = PHI <rm_encoding_980(372), ""(373)>
  # DEBUG rm_encoding => rm_encoding_137
  # DEBUG i => 0
  goto <bb 392>;

<bb 375>:
  i.99_983 = (unsigned int) i_139;
  D.45237_984 = i.99_983 * 4;
  D.45238_985 = codec_array_84 + D.45237_984;
  imp_986 = *D.45238_985;
  # DEBUG imp => imp_986
  D.45239_987 = imp_986->codec_type;
  if (D.45239_987 != 1)
    goto <bb 376>;
  else
    goto <bb 377>;

<bb 376>:
  // predicted unlikely by continue predictor.
  goto <bb 391>;

<bb 377>:
  D.44530_988 = session_161(D)->channel;
  D.45242_989 = switch_channel_direction (D.44530_988);
  if (D.45242_989 == 0)
    goto <bb 378>;
  else
    goto <bb 380>;

<bb 378>:
  D.44530_990 = session_161(D)->channel;
  D.45245_991 = switch_channel_test_flag (D.44530_990, 114);
  if (D.45245_991 != 0)
    goto <bb 379>;
  else
    goto <bb 380>;

<bb 379>:
  // predicted unlikely by continue predictor.
  goto <bb 391>;

<bb 380>:
  D.45248_992 = map_136->rm_pt;
  D.45249_993 = (int) D.45248_992;
  D.45250_994 = imp_986->iananame;
  D.45251_995 = imp_986->ianacode;
  D.45252_996 = (int) D.45251_995;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3743, session_161(D), 7, "Video Codec Compare [%s:%d]/[%s:%d]\n", rm_encoding_137, D.45249_993, D.45250_994, D.45252_996);
  D.45256_997 = map_136->rm_encoding;
  # DEBUG s => D.45256_997
  if (D.45256_997 == 0B)
    goto <bb 383>;
  else
    goto <bb 381>;

<bb 381>:
  D.47958_1504 = *D.45256_997;
  if (D.47958_1504 == 0)
    goto <bb 383>;
  else
    goto <bb 382>;

<bb 382>:

<bb 383>:
  # D.47957_1505 = PHI <1(380), 1(381), 0(382)>
  if (D.47957_1505 != 0)
    goto <bb 385>;
  else
    goto <bb 384>;

<bb 384>:
  D.44471_999 = smh_186->mparams;
  D.44821_1000 = D.44471_999->ndlb;
  D.44937_1001 = (int) D.44821_1000;
  D.44938_1002 = D.44937_1001 & 1;
  if (D.44938_1002 != 0)
    goto <bb 385>;
  else
    goto <bb 387>;

<bb 385>:
  D.45248_1004 = map_136->rm_pt;
  D.45249_1005 = (int) D.45248_1004;
  if (D.45249_1005 <= 95)
    goto <bb 386>;
  else
    goto <bb 387>;

<bb 386>:
  D.45248_1006 = map_136->rm_pt;
  D.45249_1007 = (int) D.45248_1006;
  D.45251_1008 = imp_986->ianacode;
  D.45252_1009 = (int) D.45251_1008;
  vmatch_1010 = D.45249_1007 == D.45252_1009;
  # DEBUG vmatch => vmatch_1010
  goto <bb 388>;

<bb 387>:
  D.45250_1011 = imp_986->iananame;
  D.45260_1012 = strcasecmp (rm_encoding_137, D.45250_1011);
  vmatch_1013 = D.45260_1012 == 0;
  # DEBUG vmatch => vmatch_1013

<bb 388>:
  # vmatch_138 = PHI <vmatch_1010(386), vmatch_1013(387)>
  # DEBUG vmatch => vmatch_138
  if (vmatch_138 != 0)
    goto <bb 389>;
  else
    goto <bb 391>;

<bb 389>:
  D.45263_1014 = map_136->rm_rate;
  D.45264_1015 = imp_986->samples_per_second;
  if (D.45263_1014 == D.45264_1015)
    goto <bb 390>;
  else
    goto <bb 391>;

<bb 390>:
  matches[m_idx_110].imp = imp_986;
  matches[m_idx_110].map = map_136;
  D.45250_1016 = imp_986->iananame;
  D.45251_1017 = imp_986->ianacode;
  D.45252_1018 = (int) D.45251_1017;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3756, session_161(D), 7, "Video Codec Compare [%s:%d] +++ is saved as a match\n", D.45250_1016, D.45252_1018);
  m_idx_1019 = m_idx_110 + 1;
  # DEBUG m_idx => m_idx_1019

<bb 391>:
  # m_idx_109 = PHI <m_idx_110(376), m_idx_110(379), m_idx_110(389), m_idx_110(388), m_idx_1019(390)>
  # DEBUG m_idx => m_idx_109
  i_1021 = i_139 + 1;
  # DEBUG i => i_1021

<bb 392>:
  # m_idx_110 = PHI <m_idx_111(374), m_idx_109(391)>
  # i_139 = PHI <0(374), i_1021(391)>
  # DEBUG i => i_139
  # DEBUG m_idx => m_idx_110
  if (i_139 < total_codecs_85)
    goto <bb 375>;
  else
    goto <bb 393>;

<bb 393>:
  map_1022 = map_136->rm_next;
  # DEBUG map => map_1022

<bb 394>:
  # got_video_crypto_62 = PHI <got_video_crypto_64(329), got_video_crypto_61(393)>
  # m_idx_111 = PHI <0(329), m_idx_110(393)>
  # map_136 = PHI <map_884(329), map_1022(393)>
  # DEBUG map => map_136
  # DEBUG m_idx => m_idx_111
  # DEBUG got_video_crypto => got_video_crypto_62
  if (map_136 != 0B)
    goto <bb 330>;
  else
    goto <bb 395>;

<bb 395>:
  D.45002_1023 = smh_186->crypto_mode;
  D.45003_1024 = D.45002_1023 == 1;
  D.45267_1025 = got_video_crypto_62 <= 0;
  D.45268_1026 = D.45003_1024 && D.45267_1025;
  if (D.45268_1026 != 0)
    goto <bb 396>;
  else
    goto <bb 397>;

<bb 396>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 3766, session_161(D), 4, "Crypto not negotiated but required.\n");
  # DEBUG vmatch => 0
  # DEBUG m_idx => 0

<bb 397>:
  # m_idx_112 = PHI <m_idx_111(395), 0(396)>
  # DEBUG m_idx => m_idx_112
  if (m_idx_112 != 0)
    goto <bb 398>;
  else
    goto <bb 418>;

<bb 398>:
  # DEBUG j => 0
  if (greedy_47 != 0)
    goto <bb 399>;
  else
    goto <bb 400>;

<bb 399>:
  greedy_sort (smh_186, &matches, m_idx_112, codec_array_84, total_codecs_85);

<bb 400>:
  # DEBUG vmatch => 1
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].codec_negotiated = 1;
  # DEBUG j => 0
  goto <bb 405>;

<bb 401>:
  D.45275_1032 = matches[j_141].map;
  D.45276_1033 = D.45275_1032->rm_encoding;
  D.45275_1034 = matches[j_141].map;
  D.45277_1035 = D.45275_1034->rm_fmtp;
  D.45275_1036 = matches[j_141].map;
  D.45278_1037 = D.45275_1036->rm_pt;
  D.45279_1038 = (uint32_t) D.45278_1037;
  D.45280_1039 = matches[j_141].imp;
  D.45281_1040 = D.45280_1039->samples_per_second;
  D.45280_1041 = matches[j_141].imp;
  D.45282_1042 = D.45280_1041->microseconds_per_packet;
  D.45283_1043 = D.45282_1042 / 1000;
  D.45284_1044 = (uint32_t) D.45283_1043;
  pmap_1045 = switch_core_media_add_payload_map (session_161(D), 1, D.45276_1033, D.45277_1035, sdp_type_546(D), D.45279_1038, D.45281_1040, D.45284_1044, 1);
  # DEBUG pmap => pmap_1045
  if (j_141 == 0)
    goto <bb 402>;
  else
    goto <bb 404>;

<bb 402>:
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map = pmap_1045;
  D.45287_1046 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45287_1046->current = 1;
  D.45288_1047 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  if (D.45288_1047 != 0B)
    goto <bb 403>;
  else
    goto <bb 404>;

<bb 403>:
  D.45288_1048 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].rtp_session;
  D.45291_1049 = pmap_1045->pt;
  switch_rtp_set_default_payload (D.45288_1048, D.45291_1049);

<bb 404>:
  mimp_1050 = matches[j_141].imp;
  # DEBUG mimp => mimp_1050
  map_1051 = matches[j_141].map;
  # DEBUG map => map_1051
  D.45256_1052 = map_1051->rm_encoding;
  D.45292_1053 = switch_core_perform_session_strdup (session_161(D), D.45256_1052, "src/switch_core_media.c", &__func__, 3804);
  pmap_1045->rm_encoding = D.45292_1053;
  D.45248_1054 = map_1051->rm_pt;
  D.45293_1055 = (unsigned char) D.45248_1054;
  pmap_1045->recv_pt = D.45293_1055;
  D.45263_1056 = map_1051->rm_rate;
  pmap_1045->rm_rate = D.45263_1056;
  D.45294_1057 = mimp_1050->microseconds_per_packet;
  D.45295_1058 = D.45294_1057 / 1000;
  D.45296_1059 = (uint32_t) D.45295_1058;
  pmap_1045->codec_ms = D.45296_1059;
  D.45086_1060 = connection_125->c_address;
  D.45297_1061 = switch_core_perform_session_strdup (session_161(D), D.45086_1060, "src/switch_core_media.c", &__func__, 3810);
  pmap_1045->remote_sdp_ip = D.45297_1061;
  D.44697_1062 = m_28->m_port;
  D.45088_1063 = (short unsigned int) D.44697_1062;
  pmap_1045->remote_sdp_port = D.45088_1063;
  D.45298_1064 = map_1051->rm_fmtp;
  D.45299_1065 = switch_core_perform_session_strdup (session_161(D), D.45298_1064, "src/switch_core_media.c", &__func__, 3813);
  pmap_1045->rm_fmtp = D.45299_1065;
  D.45248_1066 = map_1051->rm_pt;
  D.45293_1067 = (unsigned char) D.45248_1066;
  pmap_1045->agreed_pt = D.45293_1067;
  j_1068 = j_141 + 1;
  # DEBUG j => j_1068

<bb 405>:
  # j_141 = PHI <0(400), j_1068(404)>
  # DEBUG j => j_141
  if (j_141 < m_idx_112)
    goto <bb 401>;
  else
    goto <bb 406>;

<bb 406>:
  D.45287_1069 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45300_1070 = D.45287_1069->remote_sdp_port;
  D.45301_1071 = (int) D.45300_1070;
  switch_snprintf (&tmp, 50, "%d", D.45301_1071);
  D.44530_1072 = session_161(D)->channel;
  D.45287_1073 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45302_1074 = D.45287_1073->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.44530_1072, "remote_video_ip", D.45302_1074, 1);
  D.44530_1075 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1075, "remote_video_port", &tmp, 1);
  D.44530_1076 = session_161(D)->channel;
  D.45287_1077 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45303_1078 = D.45287_1077->rm_fmtp;
  switch_channel_set_variable_var_check (D.44530_1076, "rtp_video_fmtp", D.45303_1078, 1);
  D.45287_1079 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45304_1080 = D.45287_1079->agreed_pt;
  D.45305_1081 = (int) D.45304_1080;
  switch_snprintf (&tmp, 50, "%d", D.45305_1081);
  D.44530_1082 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1082, "rtp_video_pt", &tmp, 1);
  switch_core_media_check_video_codecs (session_161(D));
  D.45287_1083 = MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].cur_payload_map;
  D.45306_1084 = D.45287_1083->recv_pt;
  D.45307_1085 = (int) D.45306_1084;
  switch_snprintf (&tmp, 50, "%d", D.45307_1085);
  D.44530_1086 = session_161(D)->channel;
  switch_channel_set_variable_var_check (D.44530_1086, "rtp_video_recv_pt", &tmp, 1);
  if (match_16 == 0)
    goto <bb 407>;
  else
    goto <bb 408>;

<bb 407>:
  # DEBUG match => 1

<bb 408>:
  # match_14 = PHI <match_16(406), 1(407)>
  # DEBUG match => match_14
  D.45313_1091 = &MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].read_codec;
  # DEBUG codec => D.45313_1091
  if (D.45313_1091 != 0B)
    goto <bb 409>;
  else
    goto <bb 413>;

<bb 409>:
  D.47966_1506 = MEM[(struct switch_codec_t *)smh_186 + 13020B].flags;
  D.47965_1507 = D.47966_1506 & 256;
  if (D.47965_1507 != 0)
    goto <bb 410>;
  else
    goto <bb 413>;

<bb 410>:
  D.47964_1508 = MEM[(struct switch_codec_t *)smh_186 + 13020B].mutex;
  if (D.47964_1508 != 0B)
    goto <bb 411>;
  else
    goto <bb 413>;

<bb 411>:
  D.47963_1509 = MEM[(struct switch_codec_t *)smh_186 + 13020B].codec_interface;
  if (D.47963_1509 != 0B)
    goto <bb 412>;
  else
    goto <bb 413>;

<bb 412>:
  D.47962_1510 = MEM[(struct switch_codec_t *)smh_186 + 13020B].implementation;
  if (D.47962_1510 != 0B)
    goto <bb 414>;
  else
    goto <bb 413>;

<bb 413>:

<bb 414>:
  # iftmp.104_1511 = PHI <1(412), 0(413)>
  if (iftmp.104_1511 != 0)
    goto <bb 415>;
  else
    goto <bb 416>;

<bb 415>:
  MEM[(struct switch_rtp_engine_t *)smh_186 + 11496B].reset_codec = 1;

<bb 416>:
  D.45317_1093 = switch_core_media_set_video_codec (session_161(D), 0);
  if (D.45317_1093 == 0)
    goto <bb 417>;
  else
    goto <bb 418>;

<bb 417>:
  check_ice (smh_186, 1, sdp_198, m_28);

<bb 418>:
  # match_15 = PHI <match_13(321), match_16(323), match_16(324), match_16(397), match_14(416), match_14(417), match_13(318), match_13(319), match_13(316), match_13(317), match_13(322)>
  # best_te_22 = PHI <best_te_21(321), best_te_23(323), best_te_23(324), best_te_23(397), best_te_23(416), best_te_23(417), best_te_21(318), best_te_21(319), best_te_21(316), best_te_21(317), best_te_21(322)>
  # cng_pt_26 = PHI <cng_pt_25(321), cng_pt_27(323), cng_pt_27(324), cng_pt_27(397), cng_pt_27(416), cng_pt_27(417), cng_pt_25(318), cng_pt_25(319), cng_pt_25(316), cng_pt_25(317), cng_pt_25(322)>
  # got_crypto_55 = PHI <got_crypto_54(321), got_crypto_56(323), got_crypto_56(324), got_crypto_56(397), got_crypto_56(416), got_crypto_56(417), got_crypto_54(318), got_crypto_54(319), got_crypto_54(316), got_crypto_54(317), got_crypto_54(322)>
  # got_video_crypto_63 = PHI <got_video_crypto_64(321), got_video_crypto_64(323), got_video_crypto_64(324), got_video_crypto_62(397), got_video_crypto_62(416), got_video_crypto_62(417), got_video_crypto_64(318), got_video_crypto_64(319), got_video_crypto_64(316), got_video_crypto_64(317), got_video_crypto_64(322)>
  # got_audio_66 = PHI <got_audio_65(321), got_audio_67(323), got_audio_67(324), got_audio_67(397), got_audio_67(416), got_audio_67(417), got_audio_65(318), got_audio_65(319), got_audio_65(316), got_audio_65(317), got_audio_65(322)>
  # codec_ms_94 = PHI <codec_ms_93(321), codec_ms_95(323), codec_ms_95(324), codec_ms_95(397), codec_ms_95(416), codec_ms_95(417), codec_ms_93(318), codec_ms_93(319), codec_ms_93(316), codec_ms_93(317), codec_ms_93(322)>
  # m_idx_113 = PHI <m_idx_107(321), m_idx_114(323), m_idx_114(324), m_idx_112(397), m_idx_112(416), m_idx_112(417), m_idx_107(318), m_idx_107(319), m_idx_107(316), m_idx_107(317), m_idx_107(322)>
  # nm_idx_121 = PHI <nm_idx_120(321), nm_idx_122(323), nm_idx_122(324), 0(397), 0(416), 0(417), nm_idx_120(318), nm_idx_120(319), nm_idx_120(316), nm_idx_120(317), nm_idx_120(322)>
  # DEBUG nm_idx => nm_idx_121
  # DEBUG m_idx => m_idx_113
  # DEBUG codec_ms => codec_ms_94
  # DEBUG got_audio => got_audio_66
  # DEBUG got_video_crypto => got_video_crypto_63
  # DEBUG got_crypto => got_crypto_55
  # DEBUG cng_pt => cng_pt_26
  # DEBUG best_te => best_te_22
  # DEBUG match => match_15
  m_1094 = m_28->m_next;
  # DEBUG m => m_1094

<bb 419>:
  # match_16 = PHI <0(88), match_15(418)>
  # best_te_23 = PHI <0(88), best_te_22(418)>
  # cng_pt_27 = PHI <0(88), cng_pt_26(418)>
  # m_28 = PHI <m_370(88), m_1094(418)>
  # got_crypto_56 = PHI <0(88), got_crypto_55(418)>
  # got_video_crypto_64 = PHI <0(88), got_video_crypto_63(418)>
  # got_audio_67 = PHI <0(88), got_audio_66(418)>
  # got_avp_69 = PHI <0(88), got_avp_68(418)>
  # got_savp_75 = PHI <0(88), got_savp_74(418)>
  # got_udptl_77 = PHI <0(88), got_udptl_76(418)>
  # got_webrtc_79 = PHI <0(88), got_webrtc_78(418)>
  # codec_ms_95 = PHI <0(88), codec_ms_94(418)>
  # m_idx_114 = PHI <0(88), m_idx_113(418)>
  # nm_idx_122 = PHI <0(88), nm_idx_121(418)>
  # DEBUG nm_idx => nm_idx_122
  # DEBUG m_idx => m_idx_114
  # DEBUG codec_ms => codec_ms_95
  # DEBUG got_webrtc => got_webrtc_79
  # DEBUG got_udptl => got_udptl_77
  # DEBUG got_savp => got_savp_75
  # DEBUG got_video_savp => NULL
  # DEBUG got_video_avp => NULL
  # DEBUG got_avp => got_avp_69
  # DEBUG got_audio => got_audio_67
  # DEBUG got_video_crypto => got_video_crypto_64
  # DEBUG got_crypto => got_crypto_56
  # DEBUG m => m_28
  # DEBUG cng_pt => cng_pt_27
  # DEBUG best_te => best_te_23
  # DEBUG match => match_16
  if (m_28 != 0B)
    goto <bb 89>;
  else
    goto <bb 420> (done);

  # match_17 = PHI <1(105), 0(107), 0(125), 1(123), 0(169), 0(175), 0(179), 0(328), 0(368), match_16(419), 1(122), 1(135)>
done:
  # DEBUG match => match_17
  if (parser_196 != 0B)
    goto <bb 421>;
  else
    goto <bb 422>;

<bb 421>:
  sdp_parser_free (parser_196);

<bb 422>:
  D.44471_1095 = smh_186->mparams;
  D.44471_1095->cng_pt = cng_pt_27;

<bb 423>:
  # match_142 = PHI <0(4), 0(5), 0(7), match_17(422)>
  return match_142;

}



;; Function switch_core_media_proxy_remote_addr (switch_core_media_proxy_remote_addr)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 92 28 29 30 31 32 33 34 35 91 36 37 38 39 40 90 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
;;
;; Loop 3
;;  header 41, latch 90
;;  depth 1, outer 0
;;  nodes: 41 90 40 43 42
;;
;; Loop 2
;;  header 36, latch 91
;;  depth 1, outer 0
;;  nodes: 36 91 35 38 37
;;
;; Loop 1
;;  header 28, latch 92
;;  depth 1, outer 0
;;  nodes: 28 92 27 30 31 32 33 29
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 89 5 }
;; 5 succs { 8 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 }
;; 13 succs { 88 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 23 }
;; 20 succs { 21 23 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 88 26 }
;; 26 succs { 28 }
;; 27 succs { 88 92 }
;; 92 succs { 28 }
;; 28 succs { 29 34 }
;; 29 succs { 30 34 }
;; 30 succs { 27 31 }
;; 31 succs { 27 32 }
;; 32 succs { 27 33 }
;; 33 succs { 27 34 }
;; 34 succs { 36 }
;; 35 succs { 88 91 }
;; 91 succs { 36 }
;; 36 succs { 37 39 }
;; 37 succs { 38 39 }
;; 38 succs { 35 39 }
;; 39 succs { 41 }
;; 40 succs { 88 90 }
;; 90 succs { 41 }
;; 41 succs { 42 44 }
;; 42 succs { 43 44 }
;; 43 succs { 40 44 }
;; 44 succs { 46 45 }
;; 45 succs { 46 47 }
;; 46 succs { 88 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 68 }
;; 50 succs { 51 68 }
;; 51 succs { 52 54 }
;; 52 succs { 53 54 }
;; 53 succs { 68 }
;; 54 succs { 55 68 }
;; 55 succs { 56 58 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 59 60 }
;; 59 succs { 68 }
;; 60 succs { 61 66 }
;; 61 succs { 62 66 }
;; 62 succs { 64 63 }
;; 63 succs { 64 66 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 68 }
;; 67 succs { 68 }
;; 68 succs { 69 88 }
;; 69 succs { 70 73 }
;; 70 succs { 71 73 }
;; 71 succs { 72 73 }
;; 72 succs { 88 }
;; 73 succs { 74 77 }
;; 74 succs { 76 75 }
;; 75 succs { 76 77 }
;; 76 succs { 88 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 81 }
;; 80 succs { 88 }
;; 81 succs { 82 86 }
;; 82 succs { 84 83 }
;; 83 succs { 84 86 }
;; 84 succs { 85 86 }
;; 85 succs { 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 89 }
;; 89 succs { 1 }
Marking useful stmt: # DEBUG ip_ptr => 0B

Marking useful stmt: # DEBUG port_ptr => 0B

Marking useful stmt: # DEBUG vid_port_ptr => 0B

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4152, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_26

Marking useful stmt: # DEBUG D#17 => &smh_26->engines

Marking useful stmt: # DEBUG a_engine => D#17

Marking useful stmt: # DEBUG D#16 => &smh_26->engines[1]

Marking useful stmt: # DEBUG v_engine => D#16

Marking useful stmt: # DEBUG s => sdp_str_30(D)

Marking useful stmt: # DEBUG sdp_str => sdp_str_33

Marking useful stmt: # DEBUG sdp_str => sdp_str_1

Marking useful stmt: # DEBUG s => sdp_str_1

Marking useful stmt: p_35 = switch_stristr ("c=IN IP4 ", sdp_str_1);

Marking useful stmt: # DEBUG p => p_35

Marking useful stmt: p_36 = switch_stristr ("c=IN IP6 ", sdp_str_1);

Marking useful stmt: # DEBUG p => p_36

Marking useful stmt: # DEBUG p => p_2

Marking useful stmt: # DEBUG ip_ptr => ip_ptr_37

Marking useful stmt: # DEBUG ip_ptr => ip_ptr_6

Marking useful stmt: p_38 = switch_stristr ("m=audio ", sdp_str_1);

Marking useful stmt: # DEBUG p => p_38

Marking useful stmt: # DEBUG port_ptr => port_ptr_39

Marking useful stmt: # DEBUG port_ptr => port_ptr_7

Marking useful stmt: p_40 = switch_stristr ("m=image ", sdp_str_1);

Marking useful stmt: # DEBUG p => p_40

Marking useful stmt: # DEBUG tmp => tmp_41

Marking useful stmt: # DEBUG __nptr => tmp_41

Marking useful stmt: D.47979_367 = strtol (tmp_41, 0B, 10);

Marking useful stmt: # DEBUG port_ptr => tmp_41

Marking useful stmt: # DEBUG port_ptr => port_ptr_8

Marking useful stmt: p_44 = switch_stristr ("m=video ", sdp_str_1);

Marking useful stmt: # DEBUG p => p_44

Marking useful stmt: # DEBUG vid_port_ptr => vid_port_ptr_45

Marking useful stmt: # DEBUG vid_port_ptr => vid_port_ptr_9

Marking useful stmt: # DEBUG p => ip_ptr_6

Marking useful stmt: # DEBUG pe => pe_51

Marking useful stmt: # DEBUG x => 0

Marking useful stmt: # DEBUG x => x_69

Marking useful stmt: # DEBUG p => p_70

Marking useful stmt: # DEBUG x => x_10

Marking useful stmt: # DEBUG p => p_3

Marking useful stmt: # DEBUG p => port_ptr_8

Marking useful stmt: # DEBUG x => 0

Marking useful stmt: # DEBUG x => x_81

Marking useful stmt: # DEBUG p => p_82

Marking useful stmt: # DEBUG x => x_11

Marking useful stmt: # DEBUG p => p_4

Marking useful stmt: # DEBUG p => vid_port_ptr_9

Marking useful stmt: # DEBUG x => 0

Marking useful stmt: # DEBUG x => x_93

Marking useful stmt: # DEBUG p => p_94

Marking useful stmt: # DEBUG x => x_12

Marking useful stmt: # DEBUG p => p_5

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4225, session_25(D), 3, "invalid SDP\n");

Marking useful stmt: D.44194_98 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4229);

Marking useful stmt: D.44193_97->remote_sdp_ip = D.44194_98;

Marking useful stmt: # DEBUG __nptr => &rp

Marking useful stmt: D.47982_368 = strtol (&rp, 0B, 10);

Marking useful stmt: D.44193_99->remote_sdp_port = D.44196_101;

Marking useful stmt: D.44201_104 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4233);

Marking useful stmt: D.44200_103->remote_sdp_ip = D.44201_104;

Marking useful stmt: # DEBUG __nptr => &rvp

Marking useful stmt: D.47985_369 = strtol (&rvp, 0B, 10);

Marking useful stmt: D.44200_105->remote_sdp_port = D.44203_107;

Marking useful stmt: switch_channel_set_flag_value (D.44204_108, 98, 1);

Marking useful stmt: switch_channel_set_flag_value (D.44204_109, 23, 1);

Marking useful stmt: # DEBUG __nptr => &rvp

Marking useful stmt: D.47988_370 = strtol (&rvp, 0B, 10);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4241, session_25(D), 7, "Remote video address:port [%s:%d] has not changed.\n", D.44205_122, D.44215_125);

Marking useful stmt: switch_channel_set_flag_value (D.44204_126, 98, 1);

Marking useful stmt: switch_channel_set_flag_value (D.44204_127, 23, 1);

Marking useful stmt: D.44218_129 = switch_rtp_ready (D.44217_128);

Marking useful stmt: # DEBUG rport => 0B

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_131

Marking useful stmt: rport_133 = switch_channel_get_variable_dup (D.44204_132, "rtp_remote_video_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_133

Marking useful stmt: # DEBUG __nptr => rport_133

Marking useful stmt: D.47991_371 = strtol (rport_133, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_135

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_14

Marking useful stmt: D.44226_141 = switch_rtp_set_remote_address (D.44217_136, D.44205_138, D.44208_140, remote_rtcp_port_14, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4259, session_25(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.83_142);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4261, session_25(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.44205_144, D.44215_147);

Marking useful stmt: D.44233_148 = switch_media_handle_test_media_flag (smh_26, 10);

Marking useful stmt: D.44236_150 = switch_channel_test_flag (D.44204_149, 15);

Marking useful stmt: val_152 = switch_channel_get_variable_dup (D.44204_151, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_152

Marking useful stmt: D.44240_153 = switch_true (val_152);

Marking useful stmt: D.44241_155 = switch_channel_test_flag (D.44204_154, 106);

Marking useful stmt: switch_rtp_set_flag (D.44217_156, 7);

Marking useful stmt: start_video_thread (session_25(D));

Marking useful stmt: D.44244_157 = switch_media_handle_test_media_flag (smh_26, 2);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].check_frames = 0;

Marking useful stmt: D.44248_159 = switch_rtp_ready (D.44247_158);

Marking useful stmt: remote_host_161 = switch_rtp_get_remote_host (D.44247_160);

Marking useful stmt: # DEBUG remote_host => remote_host_161

Marking useful stmt: remote_port_163 = switch_rtp_get_remote_port (D.44247_162);

Marking useful stmt: # DEBUG remote_port => remote_port_163

Marking useful stmt: # DEBUG rport => 0B

Marking useful stmt: # DEBUG remote_rtcp_port => 0

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4286, session_25(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.44256_175, D.44260_178);

Marking useful stmt: # DEBUG status => 11

Marking useful stmt: # DEBUG __s2_len => 7

Marking useful stmt: # DEBUG __s2_len => 7

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4292, session_25(D), 7, "Remote address changed from [%s] to [%s]. Ignoring...\n", D.44256_268, remote_host_161);

Marking useful stmt: # DEBUG status => 11

Marking useful stmt: rport_271 = switch_channel_get_variable_dup (D.44204_270, "rtp_remote_audio_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_271

Marking useful stmt: # DEBUG __nptr => rport_271

Marking useful stmt: D.47994_372 = strtol (rport_271, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_273

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_15

Marking useful stmt: D.44337_279 = switch_rtp_set_remote_address (D.44247_274, D.44256_276, D.44258_278, remote_rtcp_port_15, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4305, session_25(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.83_280);

Marking useful stmt: # DEBUG status => 9

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4308, session_25(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.44256_283, D.44260_286);

Marking useful stmt: D.44343_287 = switch_media_handle_test_media_flag (smh_26, 10);

Marking useful stmt: val_289 = switch_channel_get_variable_dup (D.44204_288, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_289

Marking useful stmt: D.44347_290 = switch_true (val_289);

Marking useful stmt: D.44348_292 = switch_channel_test_flag (D.44204_291, 106);

Marking useful stmt: switch_rtp_set_flag (D.44247_293, 7);

Marking useful stmt: D.44351_294 = switch_media_handle_test_media_flag (smh_26, 2);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].check_frames = 0;

Marking useful stmt: end:

Marking useful stmt: # DEBUG status => status_13

Marking useful stmt: return status_18;

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44184_91)
(get_scalar_evolution 
  (scalar = D.44184_91)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_90)
(get_scalar_evolution 
  (scalar = D.44163_90)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44184_91)
  (scalar_evolution = D.44163_90 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_90)
(get_scalar_evolution 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_90)
  (scalar_evolution = D.44163_90))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_89)
(get_scalar_evolution 
  (scalar = D.44163_89)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.44163_89)
(get_scalar_evolution 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = D.44163_89)
  (scalar_evolution = D.44163_89))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_94)
(get_scalar_evolution 
  (scalar = p_94)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_5 = PHI <vid_port_ptr_9(39), p_94(90)>
)
  (init_cond = vid_port_ptr_9))
(analyze_evolution_in_loop 
  (loop_phi_node = p_5 = PHI <vid_port_ptr_9(39), p_94(90)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = vid_port_ptr_9)
  (to_add = 1)
  (res = {vid_port_ptr_9, +, 1}_3))
  (evolution_function = {vid_port_ptr_9, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = p_5)
  (scalar_evolution = {vid_port_ptr_9, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 39 
  (scalar = p_94)
  (scalar_evolution = {vid_port_ptr_9 + 1, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 3
  exit condition [vid_port_ptr_9 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if vid_port_ptr_9 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (vid_port_ptr_9 + 1), bounded by 4294967294
Found loop 3 to be finite: iterating (unsigned int) pe_51 - (unsigned int) (vid_port_ptr_9 + 1) times
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44184_79)
(get_scalar_evolution 
  (scalar = D.44184_79)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_78)
(get_scalar_evolution 
  (scalar = D.44163_78)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = D.44184_79)
  (scalar_evolution = D.44163_78 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_78)
(get_scalar_evolution 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = D.44163_78)
  (scalar_evolution = D.44163_78))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_77)
(get_scalar_evolution 
  (scalar = D.44163_77)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.44163_77)
(get_scalar_evolution 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = D.44163_77)
  (scalar_evolution = D.44163_77))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_82)
(get_scalar_evolution 
  (scalar = p_82)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <port_ptr_8(34), p_82(91)>
)
  (init_cond = port_ptr_8))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <port_ptr_8(34), p_82(91)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = port_ptr_8)
  (to_add = 1)
  (res = {port_ptr_8, +, 1}_2))
  (evolution_function = {port_ptr_8, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = p_4)
  (scalar_evolution = {port_ptr_8, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 34 
  (scalar = p_82)
  (scalar_evolution = {port_ptr_8 + 1, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 2
  exit condition [port_ptr_8 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if port_ptr_8 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (port_ptr_8 + 1), bounded by 4294967294
Found loop 2 to be finite: iterating (unsigned int) pe_51 - (unsigned int) (port_ptr_8 + 1) times
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.44163_57)
(get_scalar_evolution 
  (scalar = D.44163_57)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.44163_57)
(get_scalar_evolution 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = D.44163_57)
  (scalar_evolution = D.44163_57))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_70)
(get_scalar_evolution 
  (scalar = p_70)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <ip_ptr_6(26), p_70(92)>
)
  (init_cond = ip_ptr_6))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <ip_ptr_6(26), p_70(92)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = ip_ptr_6)
  (to_add = 1)
  (res = {ip_ptr_6, +, 1}_1))
  (evolution_function = {ip_ptr_6, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = p_3)
  (scalar_evolution = {ip_ptr_6, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
(set_scalar_evolution 
  instantiated_below = 26 
  (scalar = p_70)
  (scalar_evolution = {ip_ptr_6 + 1, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pe_51)
(get_scalar_evolution 
  (scalar = pe_51)
  (scalar_evolution = ))
)
Analyzing # of iterations of loop 1
  exit condition [ip_ptr_6 + 1, + , 1](no_overflow) < pe_51
  bounds on difference of bases: -4294967295 ... 4294967294
  result:
    zero if ip_ptr_6 + 1 > pe_51
    # of iterations (unsigned int) pe_51 - (unsigned int) (ip_ptr_6 + 1), bounded by 4294967294
Found loop 1 to be finite: iterating (unsigned int) pe_51 - (unsigned int) (ip_ptr_6 + 1) times

Processing worklist:
processing: return status_18;

Marking useful stmt: if (session_25(D) == 0B)

marking necessary through status_18 stmt status_18 = PHI <1(4), status_13(88)>
processing: status_18 = PHI <1(4), status_13(88)>

marking necessary through status_13 stmt status_13 = PHI <1(13), 1(25), 1(27), 1(35), 1(40), 1(46), 1(68), 11(72), 11(76), 9(80), 0(87), 0(86)>
Marking useful stmt: if (smh_26 == 0B)

processing: if (smh_26 == 0B)

marking necessary through smh_26 stmt smh_26 = session_25(D)->media_handle;
processing: smh_26 = session_25(D)->media_handle;

marking necessary through .MEM_312 stmt rvp = "";
marking necessary through .MEM_311 stmt rp = "";
marking necessary through .MEM_310 stmt rip = "";
processing: rip = "";

processing: rp = "";

processing: rvp = "";

processing: status_13 = PHI <1(13), 1(25), 1(27), 1(35), 1(40), 1(46), 1(68), 11(72), 11(76), 9(80), 0(87), 0(86)>

Marking useful stmt: if (D.47975_366 != 0)

Marking useful stmt: if (D.44175_62 != 0)

Marking useful stmt: if (D.44163_63 == 58)

Marking useful stmt: if (D.44178_65 <= 5)

Marking useful stmt: if (D.44180_67 <= 5)

Marking useful stmt: if (D.44184_79 <= 9)

Marking useful stmt: if (D.44184_91 <= 9)

Marking useful stmt: if (D.44190_95 == 0)

Marking useful stmt: if (D.44192_96 == 0)

Marking useful stmt: if (D.44258_173 == remote_port_163)

Marking useful stmt: if (__result_220 == 0)

Marking useful stmt: if (__result_265 == 0)

Marking useful stmt: if (D.44337_279 != 0)

Marking useful stmt: if (D.44351_294 != 0)

processing: if (D.44351_294 != 0)

processing: if (D.44337_279 != 0)

Marking useful stmt: if (remote_host_161 != 0B)

processing: if (remote_host_161 != 0B)

Marking useful stmt: if (D.44254_168 != 0)

Marking useful stmt: if (D.39206_171 == 0)

processing: if (D.39206_171 == 0)

marking necessary through D.39206_171 stmt D.39206_171 = __builtin_strcmp (remote_host_161, D.44256_170);
processing: D.39206_171 = __builtin_strcmp (remote_host_161, D.44256_170);

marking necessary through D.44256_170 stmt D.44256_170 = D.44193_169->remote_sdp_ip;
marking necessary through .MEM_318 stmt rip[x_10] = D.44163_68;
marking necessary through .MEM_319 stmt rp[x_11] = D.44163_80;
marking necessary through .MEM_320 stmt rvp[x_12] = D.44163_92;
processing: rvp[x_12] = D.44163_92;

marking necessary through x_12 stmt x_12 = PHI <0(39), x_93(90)>
marking necessary through D.44163_92 stmt D.44163_92 = *p_5;
processing: D.44163_92 = *p_5;

marking necessary through p_5 stmt p_5 = PHI <vid_port_ptr_9(39), p_94(90)>
processing: p_5 = PHI <vid_port_ptr_9(39), p_94(90)>

Marking useful stmt: if (D.44168_76 != 0)

Marking useful stmt: if (D.44163_77 != 0)

Marking useful stmt: if (p_94 >= pe_51)

marking necessary through vid_port_ptr_9 stmt vid_port_ptr_9 = PHI <0B(23), vid_port_ptr_45(24)>
marking necessary through p_94 stmt p_94 = p_5 + 1;
processing: p_94 = p_5 + 1;

processing: vid_port_ptr_9 = PHI <0B(23), vid_port_ptr_45(24)>

marking necessary through vid_port_ptr_45 stmt vid_port_ptr_45 = p_44 + 8;
Marking useful stmt: if (p_44 != 0B)

processing: if (p_44 != 0B)

processing: vid_port_ptr_45 = p_44 + 8;

processing: if (p_94 >= pe_51)

marking necessary through pe_51 stmt pe_51 = ip_ptr_6 + D.44162_50;
processing: pe_51 = ip_ptr_6 + D.44162_50;

Marking useful stmt: if (D.44160_48 != 0)

marking necessary through ip_ptr_6 stmt ip_ptr_6 = PHI <0B(15), ip_ptr_37(16)>
marking necessary through D.44162_50 stmt D.44162_50 = strlen (ip_ptr_6);
processing: D.44162_50 = strlen (ip_ptr_6);

processing: ip_ptr_6 = PHI <0B(15), ip_ptr_37(16)>

marking necessary through ip_ptr_37 stmt ip_ptr_37 = p_2 + 9;
Marking useful stmt: if (p_35 != 0B)

Marking useful stmt: if (p_36 != 0B)

processing: if (p_36 != 0B)

processing: if (p_35 != 0B)

processing: ip_ptr_37 = p_2 + 9;

marking necessary through p_2 stmt p_2 = PHI <p_35(14), p_36(15)>
processing: p_2 = PHI <p_35(14), p_36(15)>

processing: if (D.44160_48 != 0)

marking necessary through D.44160_48 stmt D.44160_48 = D.44158_46 || D.44159_47;
processing: D.44160_48 = D.44158_46 || D.44159_47;

marking necessary through D.44158_46 stmt D.44158_46 = ip_ptr_6 == 0B;
marking necessary through D.44159_47 stmt D.44159_47 = port_ptr_8 == 0B;
processing: D.44159_47 = port_ptr_8 == 0B;

marking necessary through port_ptr_8 stmt port_ptr_8 = PHI <port_ptr_7(19), port_ptr_7(20), port_ptr_7(21), tmp_41(22)>
processing: port_ptr_8 = PHI <port_ptr_7(19), port_ptr_7(20), port_ptr_7(21), tmp_41(22)>

marking necessary through port_ptr_7 stmt port_ptr_7 = PHI <0B(17), port_ptr_39(18)>
marking necessary through tmp_41 stmt tmp_41 = p_40 + 8;
Marking useful stmt: if (p_40 != 0B)

Marking useful stmt: if (tmp_41 != 0B)

Marking useful stmt: if (D.47979_367 != 0)

processing: if (D.47979_367 != 0)

processing: if (tmp_41 != 0B)

processing: if (p_40 != 0B)

processing: tmp_41 = p_40 + 8;

processing: port_ptr_7 = PHI <0B(17), port_ptr_39(18)>

marking necessary through port_ptr_39 stmt port_ptr_39 = p_38 + 8;
Marking useful stmt: if (p_38 != 0B)

processing: if (p_38 != 0B)

processing: port_ptr_39 = p_38 + 8;

processing: D.44158_46 = ip_ptr_6 == 0B;

processing: if (D.44163_77 != 0)

marking necessary through D.44163_77 stmt D.44163_77 = *p_4;
processing: D.44163_77 = *p_4;

marking necessary through p_4 stmt p_4 = PHI <port_ptr_8(34), p_82(91)>
processing: p_4 = PHI <port_ptr_8(34), p_82(91)>

Marking useful stmt: if (D.44168_56 != 0)

Marking useful stmt: if (D.44163_57 != 0)

Marking useful stmt: if (p_82 >= pe_51)

marking necessary through p_82 stmt p_82 = p_4 + 1;
processing: p_82 = p_4 + 1;

processing: if (p_82 >= pe_51)

processing: if (D.44163_57 != 0)

marking necessary through D.44163_57 stmt D.44163_57 = *p_3;
processing: D.44163_57 = *p_3;

marking necessary through p_3 stmt p_3 = PHI <ip_ptr_6(26), p_70(92)>
processing: p_3 = PHI <ip_ptr_6(26), p_70(92)>

Marking useful stmt: if (p_70 >= pe_51)

marking necessary through p_70 stmt p_70 = p_3 + 1;
processing: p_70 = p_3 + 1;

processing: if (p_70 >= pe_51)

processing: if (D.44168_56 != 0)

marking necessary through D.44168_56 stmt D.44168_56 = D.44166_54 && D.44167_55;
processing: D.44168_56 = D.44166_54 && D.44167_55;

marking necessary through D.44166_54 stmt D.44166_54 = x.82_53 <= 510;
marking necessary through D.44167_55 stmt D.44167_55 = p_3 != 0B;
processing: D.44167_55 = p_3 != 0B;

processing: D.44166_54 = x.82_53 <= 510;

marking necessary through x.82_53 stmt x.82_53 = (unsigned int) x_10;
processing: x.82_53 = (unsigned int) x_10;

marking necessary through x_10 stmt x_10 = PHI <0(26), x_69(92)>
processing: x_10 = PHI <0(26), x_69(92)>

marking necessary through x_69 stmt x_69 = x_10 + 1;
processing: x_69 = x_10 + 1;

processing: if (D.44168_76 != 0)

marking necessary through D.44168_76 stmt D.44168_76 = D.44166_74 && D.44167_75;
processing: D.44168_76 = D.44166_74 && D.44167_75;

marking necessary through D.44166_74 stmt D.44166_74 = x.82_73 <= 510;
marking necessary through D.44167_75 stmt D.44167_75 = p_4 != 0B;
processing: D.44167_75 = p_4 != 0B;

processing: D.44166_74 = x.82_73 <= 510;

marking necessary through x.82_73 stmt x.82_73 = (unsigned int) x_11;
processing: x.82_73 = (unsigned int) x_11;

marking necessary through x_11 stmt x_11 = PHI <0(34), x_81(91)>
processing: x_11 = PHI <0(34), x_81(91)>

marking necessary through x_81 stmt x_81 = x_11 + 1;
processing: x_81 = x_11 + 1;

processing: x_12 = PHI <0(39), x_93(90)>

marking necessary through x_93 stmt x_93 = x_12 + 1;
processing: x_93 = x_12 + 1;

processing: rp[x_11] = D.44163_80;

marking necessary through D.44163_80 stmt D.44163_80 = *p_4;
processing: D.44163_80 = *p_4;

processing: rip[x_10] = D.44163_68;

marking necessary through D.44163_68 stmt D.44163_68 = *p_3;
processing: D.44163_68 = *p_3;

processing: D.44256_170 = D.44193_169->remote_sdp_ip;

marking necessary through D.44193_169 stmt D.44193_169 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_169 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: if (D.44254_168 != 0)

Marking useful stmt: if (D.44248_159 != 0)

marking necessary through D.44254_168 stmt D.44254_168 = D.44252_166 && D.44253_167;
processing: D.44254_168 = D.44252_166 && D.44253_167;

marking necessary through D.44252_166 stmt D.44252_166 = remote_host_161 != 0B;
marking necessary through D.44253_167 stmt D.44253_167 = remote_port_163 != 0;
processing: D.44253_167 = remote_port_163 != 0;

processing: D.44252_166 = remote_host_161 != 0B;

processing: if (D.44248_159 != 0)

processing: if (__result_265 == 0)

marking necessary through __result_265 stmt __result_265 = __builtin_strcmp (D.44256_264, "0.0.0.0");
processing: __result_265 = __builtin_strcmp (D.44256_264, "0.0.0.0");

marking necessary through D.44256_264 stmt D.44256_264 = D.44193_263->remote_sdp_ip;
processing: D.44256_264 = D.44193_263->remote_sdp_ip;

marking necessary through D.44193_263 stmt D.44193_263 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_263 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: if (__result_220 == 0)

marking necessary through __result_220 stmt __result_220 = __builtin_strcmp (remote_host_161, "0.0.0.0");
processing: __result_220 = __builtin_strcmp (remote_host_161, "0.0.0.0");

processing: if (D.44258_173 == remote_port_163)

marking necessary through D.44258_173 stmt D.44258_173 = D.44193_172->remote_sdp_port;
processing: D.44258_173 = D.44193_172->remote_sdp_port;

marking necessary through D.44193_172 stmt D.44193_172 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_172 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: if (D.44192_96 == 0)

marking necessary through D.44192_96 stmt D.44192_96 = rp[0];
processing: D.44192_96 = rp[0];

processing: if (D.44190_95 == 0)

Marking useful stmt: if (D.44168_88 != 0)

Marking useful stmt: if (D.44163_89 != 0)

marking necessary through D.44190_95 stmt D.44190_95 = rip[0];
processing: D.44190_95 = rip[0];

processing: if (D.44163_89 != 0)

marking necessary through D.44163_89 stmt D.44163_89 = *p_5;
processing: D.44163_89 = *p_5;

processing: if (D.44168_88 != 0)

marking necessary through D.44168_88 stmt D.44168_88 = D.44166_86 && D.44167_87;
processing: D.44168_88 = D.44166_86 && D.44167_87;

marking necessary through D.44166_86 stmt D.44166_86 = x.82_85 <= 510;
marking necessary through D.44167_87 stmt D.44167_87 = p_5 != 0B;
processing: D.44167_87 = p_5 != 0B;

processing: D.44166_86 = x.82_85 <= 510;

marking necessary through x.82_85 stmt x.82_85 = (unsigned int) x_12;
processing: x.82_85 = (unsigned int) x_12;

processing: if (D.44184_91 <= 9)

marking necessary through D.44184_91 stmt D.44184_91 = D.44163_90 + 208;
processing: D.44184_91 = D.44163_90 + 208;

marking necessary through D.44163_90 stmt D.44163_90 = *p_5;
processing: D.44163_90 = *p_5;

processing: if (D.44184_79 <= 9)

marking necessary through D.44184_79 stmt D.44184_79 = D.44163_78 + 208;
processing: D.44184_79 = D.44163_78 + 208;

marking necessary through D.44163_78 stmt D.44163_78 = *p_4;
processing: D.44163_78 = *p_4;

processing: if (D.44180_67 <= 5)

marking necessary through D.44180_67 stmt D.44180_67 = D.44163_66 + 191;
processing: D.44180_67 = D.44163_66 + 191;

marking necessary through D.44163_66 stmt D.44163_66 = *p_3;
processing: D.44163_66 = *p_3;

processing: if (D.44178_65 <= 5)

marking necessary through D.44178_65 stmt D.44178_65 = D.44163_64 + 159;
processing: D.44178_65 = D.44163_64 + 159;

marking necessary through D.44163_64 stmt D.44163_64 = *p_3;
processing: D.44163_64 = *p_3;

processing: if (D.44163_63 == 58)

marking necessary through D.44163_63 stmt D.44163_63 = *p_3;
processing: D.44163_63 = *p_3;

processing: if (D.44175_62 != 0)

marking necessary through D.44175_62 stmt D.44175_62 = D.44173_60 || D.44174_61;
processing: D.44175_62 = D.44173_60 || D.44174_61;

marking necessary through D.44173_60 stmt D.44173_60 = D.44172_59 <= 9;
marking necessary through D.44174_61 stmt D.44174_61 = D.44171_58 == 46;
processing: D.44174_61 = D.44171_58 == 46;

marking necessary through D.44171_58 stmt D.44171_58 = *p_3;
processing: D.44171_58 = *p_3;

processing: D.44173_60 = D.44172_59 <= 9;

marking necessary through D.44172_59 stmt D.44172_59 = D.44171_58 + 208;
processing: D.44172_59 = D.44171_58 + 208;

processing: if (D.47975_366 != 0)

marking necessary through D.47975_366 stmt D.47975_366 = PHI <1(10), 1(11), 0(12)>
processing: D.47975_366 = PHI <1(10), 1(11), 0(12)>

Marking useful stmt: if (sdp_str_1 == 0B)

Marking useful stmt: if (D.47976_365 == 0)

processing: if (D.47976_365 == 0)

marking necessary through D.47976_365 stmt D.47976_365 = *sdp_str_1;
processing: D.47976_365 = *sdp_str_1;

marking necessary through sdp_str_1 stmt sdp_str_1 = PHI <sdp_str_30(D)(8), sdp_str_33(9)>
processing: sdp_str_1 = PHI <sdp_str_30(D)(8), sdp_str_33(9)>

marking necessary through sdp_str_33 stmt sdp_str_33 = D.44141_32->remote_sdp_str;
Marking useful stmt: if (D.47971_364 != 0)

processing: if (D.47971_364 != 0)

marking necessary through D.47971_364 stmt D.47971_364 = PHI <1(5), 1(6), 0(7)>
processing: D.47971_364 = PHI <1(5), 1(6), 0(7)>

Marking useful stmt: if (sdp_str_30(D) == 0B)

Marking useful stmt: if (D.47972_363 == 0)

processing: if (D.47972_363 == 0)

marking necessary through D.47972_363 stmt D.47972_363 = *sdp_str_30(D);
processing: D.47972_363 = *sdp_str_30(D);

processing: if (sdp_str_30(D) == 0B)

processing: sdp_str_33 = D.44141_32->remote_sdp_str;

marking necessary through D.44141_32 stmt D.44141_32 = smh_26->mparams;
processing: D.44141_32 = smh_26->mparams;

processing: if (sdp_str_1 == 0B)

processing: if (session_25(D) == 0B)

processing: MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].check_frames = 0;

processing: D.44351_294 = switch_media_handle_test_media_flag (smh_26, 2);

processing: switch_rtp_set_flag (D.44247_293, 7);

Marking useful stmt: if (D.44348_292 == 0)

marking necessary through D.44247_293 stmt D.44247_293 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
processing: D.44247_293 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;

processing: if (D.44348_292 == 0)

Marking useful stmt: if (val_289 == 0B)

Marking useful stmt: if (D.44347_290 == 0)

processing: if (D.44347_290 == 0)

processing: if (val_289 == 0B)

Marking useful stmt: if (D.44343_287 == 0)

processing: if (D.44343_287 == 0)

processing: D.44348_292 = switch_channel_test_flag (D.44204_291, 106);

marking necessary through D.44204_291 stmt D.44204_291 = session_25(D)->channel;
processing: D.44204_291 = session_25(D)->channel;

processing: D.44347_290 = switch_true (val_289);

processing: val_289 = switch_channel_get_variable_dup (D.44204_288, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.44204_288 stmt D.44204_288 = session_25(D)->channel;
processing: D.44204_288 = session_25(D)->channel;

processing: D.44343_287 = switch_media_handle_test_media_flag (smh_26, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4308, session_25(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.44256_283, D.44260_286);

marking necessary through D.44256_283 stmt D.44256_283 = D.44193_282->remote_sdp_ip;
marking necessary through D.44260_286 stmt D.44260_286 = (int) D.44258_285;
processing: D.44260_286 = (int) D.44258_285;

marking necessary through D.44258_285 stmt D.44258_285 = D.44193_284->remote_sdp_port;
processing: D.44258_285 = D.44193_284->remote_sdp_port;

marking necessary through D.44193_284 stmt D.44193_284 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_284 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.44256_283 = D.44193_282->remote_sdp_ip;

marking necessary through D.44193_282 stmt D.44193_282 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_282 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4305, session_25(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.83_280);

marking necessary through err.83_280 stmt err.83_280 = err;
processing: err.83_280 = err;

processing: D.44337_279 = switch_rtp_set_remote_address (D.44247_274, D.44256_276, D.44258_278, remote_rtcp_port_15, 1, &err);

marking necessary through D.44247_274 stmt D.44247_274 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
marking necessary through D.44256_276 stmt D.44256_276 = D.44193_275->remote_sdp_ip;
marking necessary through D.44258_278 stmt D.44258_278 = D.44193_277->remote_sdp_port;
marking necessary through remote_rtcp_port_15 stmt remote_rtcp_port_15 = PHI <0(77), remote_rtcp_port_273(78)>
processing: remote_rtcp_port_15 = PHI <0(77), remote_rtcp_port_273(78)>

marking necessary through remote_rtcp_port_273 stmt remote_rtcp_port_273 = (switch_port_t) D.47994_372;
Marking useful stmt: if (rport_271 != 0B)

processing: if (rport_271 != 0B)

processing: remote_rtcp_port_273 = (switch_port_t) D.47994_372;

processing: D.44258_278 = D.44193_277->remote_sdp_port;

marking necessary through D.44193_277 stmt D.44193_277 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_277 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.44256_276 = D.44193_275->remote_sdp_ip;

marking necessary through D.44193_275 stmt D.44193_275 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_275 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.44247_274 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;

processing: D.47994_372 = strtol (rport_271, 0B, 10);

processing: rport_271 = switch_channel_get_variable_dup (D.44204_270, "rtp_remote_audio_rtcp_port", 1, -1);

marking necessary through D.44204_270 stmt D.44204_270 = session_25(D)->channel;
processing: D.44204_270 = session_25(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4292, session_25(D), 7, "Remote address changed from [%s] to [%s]. Ignoring...\n", D.44256_268, remote_host_161);

marking necessary through D.44256_268 stmt D.44256_268 = D.44193_267->remote_sdp_ip;
processing: D.44256_268 = D.44193_267->remote_sdp_ip;

marking necessary through D.44193_267 stmt D.44193_267 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_267 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4286, session_25(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.44256_175, D.44260_178);

marking necessary through D.44256_175 stmt D.44256_175 = D.44193_174->remote_sdp_ip;
marking necessary through D.44260_178 stmt D.44260_178 = (int) D.44258_177;
processing: D.44260_178 = (int) D.44258_177;

marking necessary through D.44258_177 stmt D.44258_177 = D.44193_176->remote_sdp_port;
processing: D.44258_177 = D.44193_176->remote_sdp_port;

marking necessary through D.44193_176 stmt D.44193_176 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_176 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.44256_175 = D.44193_174->remote_sdp_ip;

marking necessary through D.44193_174 stmt D.44193_174 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_174 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: remote_port_163 = switch_rtp_get_remote_port (D.44247_162);

marking necessary through D.44247_162 stmt D.44247_162 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
processing: D.44247_162 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;

processing: remote_host_161 = switch_rtp_get_remote_host (D.44247_160);

marking necessary through D.44247_160 stmt D.44247_160 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
processing: D.44247_160 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;

processing: D.44248_159 = switch_rtp_ready (D.44247_158);

marking necessary through D.44247_158 stmt D.44247_158 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
processing: D.44247_158 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;

processing: MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].check_frames = 0;

Marking useful stmt: if (D.44244_157 != 0)

processing: if (D.44244_157 != 0)

Marking useful stmt: if (D.44226_141 != 0)

processing: if (D.44226_141 != 0)

Marking useful stmt: if (D.44218_129 != 0)

processing: if (D.44218_129 != 0)

Marking useful stmt: if (D.39191_116 == 0)

Marking useful stmt: if (D.44215_120 == D.47988_370)

processing: if (D.44215_120 == D.47988_370)

marking necessary through D.44215_120 stmt D.44215_120 = (int) D.44208_119;
processing: D.44215_120 = (int) D.44208_119;

marking necessary through D.44208_119 stmt D.44208_119 = D.44200_118->remote_sdp_port;
processing: D.44208_119 = D.44200_118->remote_sdp_port;

marking necessary through D.44200_118 stmt D.44200_118 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_118 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: if (D.39191_116 == 0)

Marking useful stmt: if (D.44208_113 != 0)

marking necessary through D.39191_116 stmt D.39191_116 = __builtin_strcmp (D.44205_115, &rip);
processing: D.39191_116 = __builtin_strcmp (D.44205_115, &rip);

marking necessary through D.44205_115 stmt D.44205_115 = D.44200_114->remote_sdp_ip;
processing: D.44205_115 = D.44200_114->remote_sdp_ip;

marking necessary through D.44200_114 stmt D.44200_114 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_114 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: if (D.44208_113 != 0)

Marking useful stmt: if (D.44205_111 != 0B)

marking necessary through D.44208_113 stmt D.44208_113 = D.44200_112->remote_sdp_port;
processing: D.44208_113 = D.44200_112->remote_sdp_port;

marking necessary through D.44200_112 stmt D.44200_112 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_112 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: if (D.44205_111 != 0B)

marking necessary through D.44205_111 stmt D.44205_111 = D.44200_110->remote_sdp_ip;
processing: D.44205_111 = D.44200_110->remote_sdp_ip;

marking necessary through D.44200_110 stmt D.44200_110 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_110 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44244_157 = switch_media_handle_test_media_flag (smh_26, 2);

processing: start_video_thread (session_25(D));

Marking useful stmt: if (D.44241_155 == 0)

processing: if (D.44241_155 == 0)

Marking useful stmt: if (val_152 == 0B)

Marking useful stmt: if (D.44240_153 == 0)

processing: if (D.44240_153 == 0)

processing: if (val_152 == 0B)

Marking useful stmt: if (D.44236_150 == 0)

processing: if (D.44236_150 == 0)

Marking useful stmt: if (D.44233_148 == 0)

processing: if (D.44233_148 == 0)

processing: switch_rtp_set_flag (D.44217_156, 7);

marking necessary through D.44217_156 stmt D.44217_156 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
processing: D.44217_156 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;

processing: D.44241_155 = switch_channel_test_flag (D.44204_154, 106);

marking necessary through D.44204_154 stmt D.44204_154 = session_25(D)->channel;
processing: D.44204_154 = session_25(D)->channel;

processing: D.44240_153 = switch_true (val_152);

processing: val_152 = switch_channel_get_variable_dup (D.44204_151, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.44204_151 stmt D.44204_151 = session_25(D)->channel;
processing: D.44204_151 = session_25(D)->channel;

processing: D.44236_150 = switch_channel_test_flag (D.44204_149, 15);

marking necessary through D.44204_149 stmt D.44204_149 = session_25(D)->channel;
processing: D.44204_149 = session_25(D)->channel;

processing: D.44233_148 = switch_media_handle_test_media_flag (smh_26, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4261, session_25(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.44205_144, D.44215_147);

marking necessary through D.44205_144 stmt D.44205_144 = D.44200_143->remote_sdp_ip;
marking necessary through D.44215_147 stmt D.44215_147 = (int) D.44208_146;
processing: D.44215_147 = (int) D.44208_146;

marking necessary through D.44208_146 stmt D.44208_146 = D.44200_145->remote_sdp_port;
processing: D.44208_146 = D.44200_145->remote_sdp_port;

marking necessary through D.44200_145 stmt D.44200_145 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_145 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44205_144 = D.44200_143->remote_sdp_ip;

marking necessary through D.44200_143 stmt D.44200_143 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_143 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4259, session_25(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.83_142);

marking necessary through err.83_142 stmt err.83_142 = err;
processing: err.83_142 = err;

processing: D.44226_141 = switch_rtp_set_remote_address (D.44217_136, D.44205_138, D.44208_140, remote_rtcp_port_14, 1, &err);

marking necessary through D.44217_136 stmt D.44217_136 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
marking necessary through D.44205_138 stmt D.44205_138 = D.44200_137->remote_sdp_ip;
marking necessary through D.44208_140 stmt D.44208_140 = D.44200_139->remote_sdp_port;
marking necessary through remote_rtcp_port_14 stmt remote_rtcp_port_14 = PHI <remote_rtcp_port_131(55), remote_rtcp_port_131(56), remote_rtcp_port_135(57)>
processing: remote_rtcp_port_14 = PHI <remote_rtcp_port_131(55), remote_rtcp_port_131(56), remote_rtcp_port_135(57)>

marking necessary through remote_rtcp_port_131 stmt remote_rtcp_port_131 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].remote_rtcp_port;
marking necessary through remote_rtcp_port_135 stmt remote_rtcp_port_135 = (switch_port_t) D.47991_371;
Marking useful stmt: if (remote_rtcp_port_131 == 0)

Marking useful stmt: if (rport_133 != 0B)

processing: if (rport_133 != 0B)

processing: if (remote_rtcp_port_131 == 0)

processing: remote_rtcp_port_135 = (switch_port_t) D.47991_371;

processing: remote_rtcp_port_131 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].remote_rtcp_port;

processing: D.44208_140 = D.44200_139->remote_sdp_port;

marking necessary through D.44200_139 stmt D.44200_139 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_139 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44205_138 = D.44200_137->remote_sdp_ip;

marking necessary through D.44200_137 stmt D.44200_137 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_137 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44217_136 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;

processing: D.47991_371 = strtol (rport_133, 0B, 10);

processing: rport_133 = switch_channel_get_variable_dup (D.44204_132, "rtp_remote_video_rtcp_port", 1, -1);

marking necessary through D.44204_132 stmt D.44204_132 = session_25(D)->channel;
processing: D.44204_132 = session_25(D)->channel;

processing: D.44218_129 = switch_rtp_ready (D.44217_128);

marking necessary through D.44217_128 stmt D.44217_128 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
processing: D.44217_128 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;

processing: switch_channel_set_flag_value (D.44204_127, 23, 1);

marking necessary through D.44204_127 stmt D.44204_127 = session_25(D)->channel;
processing: D.44204_127 = session_25(D)->channel;

processing: switch_channel_set_flag_value (D.44204_126, 98, 1);

marking necessary through D.44204_126 stmt D.44204_126 = session_25(D)->channel;
processing: D.44204_126 = session_25(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4241, session_25(D), 7, "Remote video address:port [%s:%d] has not changed.\n", D.44205_122, D.44215_125);

marking necessary through D.44205_122 stmt D.44205_122 = D.44200_121->remote_sdp_ip;
marking necessary through D.44215_125 stmt D.44215_125 = (int) D.44208_124;
processing: D.44215_125 = (int) D.44208_124;

marking necessary through D.44208_124 stmt D.44208_124 = D.44200_123->remote_sdp_port;
processing: D.44208_124 = D.44200_123->remote_sdp_port;

marking necessary through D.44200_123 stmt D.44200_123 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_123 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44205_122 = D.44200_121->remote_sdp_ip;

marking necessary through D.44200_121 stmt D.44200_121 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_121 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.47988_370 = strtol (&rvp, 0B, 10);

processing: switch_channel_set_flag_value (D.44204_109, 23, 1);

Marking useful stmt: if (D.44197_102 != 0)

marking necessary through D.44204_109 stmt D.44204_109 = session_25(D)->channel;
processing: D.44204_109 = session_25(D)->channel;

processing: if (D.44197_102 != 0)

marking necessary through D.44197_102 stmt D.44197_102 = rvp[0];
processing: D.44197_102 = rvp[0];

processing: switch_channel_set_flag_value (D.44204_108, 98, 1);

marking necessary through D.44204_108 stmt D.44204_108 = session_25(D)->channel;
processing: D.44204_108 = session_25(D)->channel;

processing: D.44200_105->remote_sdp_port = D.44203_107;

marking necessary through D.44200_105 stmt D.44200_105 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
marking necessary through D.44203_107 stmt D.44203_107 = (short unsigned int) D.47985_369;
processing: D.44203_107 = (short unsigned int) D.47985_369;

processing: D.44200_105 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.47985_369 = strtol (&rvp, 0B, 10);

processing: D.44200_103->remote_sdp_ip = D.44201_104;

marking necessary through D.44200_103 stmt D.44200_103 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
processing: D.44200_103 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;

processing: D.44201_104 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4233);

processing: D.44193_99->remote_sdp_port = D.44196_101;

marking necessary through D.44193_99 stmt D.44193_99 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
marking necessary through D.44196_101 stmt D.44196_101 = (short unsigned int) D.47982_368;
processing: D.44196_101 = (short unsigned int) D.47982_368;

processing: D.44193_99 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.47982_368 = strtol (&rp, 0B, 10);

processing: D.44193_97->remote_sdp_ip = D.44194_98;

marking necessary through D.44193_97 stmt D.44193_97 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
processing: D.44193_97 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;

processing: D.44194_98 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4229);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4225, session_25(D), 3, "invalid SDP\n");

processing: p_44 = switch_stristr ("m=video ", sdp_str_1);

processing: D.47979_367 = strtol (tmp_41, 0B, 10);

processing: p_40 = switch_stristr ("m=image ", sdp_str_1);

processing: p_38 = switch_stristr ("m=audio ", sdp_str_1);

processing: p_36 = switch_stristr ("c=IN IP6 ", sdp_str_1);

processing: p_35 = switch_stristr ("c=IN IP4 ", sdp_str_1);

processing: __assert_fail ("session", "src/switch_core_media.c", 4152, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : p_83 = vid_port_ptr_9;

Deleting : p_71 = port_ptr_8;

Deleting : port_ptr_43 = tmp_41;

Deleting : p_49 = ip_ptr_6;

Deleting : status_296 = status_13;

Removed 5 of 339 statements (1%)
Removed 0 of 33 PHI nodes (0%)
Removing basic block 34
;; basic block 34, loop depth 0, count 0
;; prev block 33, next block 35
;; pred:      
;; succ:       36 (fallthru,exec)
<bb 34>:
# DEBUG p => port_ptr_8
# DEBUG x => 0
goto <bb 36>;


Removing basic block 39
;; basic block 39, loop depth 0, count 0
;; prev block 38, next block 40
;; pred:      
;; succ:       41 (fallthru,exec)
<bb 39>:
# DEBUG p => vid_port_ptr_9
# DEBUG x => 0
goto <bb 41>;


Removing basic block 90
;; basic block 90, loop depth 1, count 0
;; prev block 40, next block 41
;; pred:      
;; succ:       41 [100.0%]  (fallthru,dfs_back)
<bb 90>:


Removing basic block 91
;; basic block 91, loop depth 1, count 0
;; prev block 35, next block 36
;; pred:      
;; succ:       36 [100.0%]  (fallthru,dfs_back)
<bb 91>:


Removing basic block 92
;; basic block 92, loop depth 1, count 0
;; prev block 27, next block 28
;; pred:      
;; succ:       28 [100.0%]  (fallthru,dfs_back)
<bb 92>:


Scope blocks after cleanups:

{ Scope block #0 
  const char * err;
  char rip[512];
  char rp[512];
  char rvp[512];
  char * p;
  char * ip_ptr;
  char * port_ptr;
  char * vid_port_ptr;
  char * pe;
  int x;
  const char * val;
  switch_status_t status;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[36] = "switch_core_media_proxy_remote_addr";
  void end = <<< error >>>; (unused)
  static const char __func__[36] = "switch_core_media_proxy_remote_addr";

  { Scope block #278 src/switch_core_media.c:4240 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #279 Originating from :#0 

    }

  }

  { Scope block #280 src/switch_core_media.c:4234 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #281 Originating from :#0 

    }

  }

  { Scope block #282 src/switch_core_media.c:4230 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #283 Originating from :#0 

    }

  }

  { Scope block #284 src/switch_core_media.c:4165 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #285 Originating from :#0 

    }

  }

  { Scope block #286 src/switch_core_media.c:4161 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #287 Originating from :#0 

    }

  }

  { Scope block #288 
    char * tmp;

    { Scope block #289 src/switch_core_media.c:4180 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #290 Originating from :#0 

      }

    }

  }

  { Scope block #291 
    size_t __s1_len; (unused)
    size_t __s2_len; (unused)

  }

  { Scope block #292 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #293 src/switch_core_media.c:4252 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #294 Originating from :#0 

      }

    }

  }

  { Scope block #295 
    char * remote_host;
    switch_port_t remote_port;
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #296 src/switch_core_media.c:4299 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #297 Originating from :#0 

      }

    }

    { Scope block #298 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #299 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

      { Scope block #300 
        const unsigned char * __s1; (unused)
        register int __result;

      }

    }

    { Scope block #301 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

      { Scope block #302 
        const unsigned char * __s1; (unused)
        register int __result;

      }

    }

  }

}
switch_core_media_proxy_remote_addr (struct switch_core_session_t * session, const char * sdp_str)
{
  int D.47994;
  int D.47991;
  int D.47988;
  int D.47985;
  int D.47982;
  int D.47979;
  const char D.47976;
  int D.47975;
  const char D.47972;
  int D.47971;
  register int __result;
  register int __result;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char * tmp;
  static const char __func__[36] = "switch_core_media_proxy_remote_addr";
  static const char __PRETTY_FUNCTION__[36] = "switch_core_media_proxy_remote_addr";
  struct switch_media_handle_t * smh;
  switch_status_t status;
  const char * val;
  int x;
  char * pe;
  char * vid_port_ptr;
  char * port_ptr;
  char * ip_ptr;
  char * p;
  char rvp[512];
  char rp[512];
  char rip[512];
  const char * err;
  int32_t D.44351;
  uint32_t D.44348;
  int D.44347;
  int32_t D.44343;
  switch_status_t D.44337;
  int D.44260;
  switch_port_t D.44258;
  char * D.44256;
  int D.39206;
  _Bool D.44254;
  _Bool D.44253;
  _Bool D.44252;
  uint8_t D.44248;
  struct switch_rtp_t * D.44247;
  int32_t D.44244;
  uint32_t D.44241;
  int D.44240;
  uint32_t D.44236;
  int32_t D.44233;
  const char * err.83;
  switch_status_t D.44226;
  uint8_t D.44218;
  struct switch_rtp_t * D.44217;
  int D.44215;
  int D.39191;
  switch_port_t D.44208;
  char * D.44205;
  struct switch_channel_t * D.44204;
  short unsigned int D.44203;
  char * D.44201;
  struct payload_map_t * D.44200;
  char D.44197;
  short unsigned int D.44196;
  char * D.44194;
  struct payload_map_t * D.44193;
  char D.44192;
  char D.44190;
  char D.44184;
  char D.44180;
  char D.44178;
  _Bool D.44175;
  _Bool D.44174;
  _Bool D.44173;
  char D.44172;
  char D.44171;
  _Bool D.44168;
  _Bool D.44167;
  _Bool D.44166;
  unsigned int x.82;
  char D.44163;
  size_t D.44162;
  _Bool D.44160;
  _Bool D.44159;
  _Bool D.44158;
  struct switch_core_media_params_t * D.44141;

<bb 2>:
  rip = "";
  rp = "";
  rvp = "";
  # DEBUG ip_ptr => 0B
  # DEBUG port_ptr => 0B
  # DEBUG vid_port_ptr => 0B
  # DEBUG status => 1
  if (session_25(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4152, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_26 = session_25(D)->media_handle;
  # DEBUG smh => smh_26
  if (smh_26 == 0B)
    goto <bb 87>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#17 => &smh_26->engines
  # DEBUG a_engine => D#17
  # DEBUG D#16 => &smh_26->engines[1]
  # DEBUG v_engine => D#16
  # DEBUG s => sdp_str_30(D)
  if (sdp_str_30(D) == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

<bb 6>:
  D.47972_363 = *sdp_str_30(D);
  if (D.47972_363 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:

<bb 8>:
  # D.47971_364 = PHI <1(5), 1(6), 0(7)>
  if (D.47971_364 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.44141_32 = smh_26->mparams;
  sdp_str_33 = D.44141_32->remote_sdp_str;
  # DEBUG sdp_str => sdp_str_33

<bb 10>:
  # sdp_str_1 = PHI <sdp_str_30(D)(8), sdp_str_33(9)>
  # DEBUG sdp_str => sdp_str_1
  # DEBUG s => sdp_str_1
  if (sdp_str_1 == 0B)
    goto <bb 13>;
  else
    goto <bb 11>;

<bb 11>:
  D.47976_365 = *sdp_str_1;
  if (D.47976_365 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:

<bb 13>:
  # D.47975_366 = PHI <1(10), 1(11), 0(12)>
  if (D.47975_366 != 0)
    goto <bb 86> (end);
  else
    goto <bb 14>;

<bb 14>:
  p_35 = switch_stristr ("c=IN IP4 ", sdp_str_1);
  # DEBUG p => p_35
  if (p_35 != 0B)
    goto <bb 16>;
  else
    goto <bb 15>;

<bb 15>:
  p_36 = switch_stristr ("c=IN IP6 ", sdp_str_1);
  # DEBUG p => p_36
  if (p_36 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  # p_2 = PHI <p_35(14), p_36(15)>
  # DEBUG p => p_2
  ip_ptr_37 = p_2 + 9;
  # DEBUG ip_ptr => ip_ptr_37

<bb 17>:
  # ip_ptr_6 = PHI <0B(15), ip_ptr_37(16)>
  # DEBUG ip_ptr => ip_ptr_6
  p_38 = switch_stristr ("m=audio ", sdp_str_1);
  # DEBUG p => p_38
  if (p_38 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  port_ptr_39 = p_38 + 8;
  # DEBUG port_ptr => port_ptr_39

<bb 19>:
  # port_ptr_7 = PHI <0B(17), port_ptr_39(18)>
  # DEBUG port_ptr => port_ptr_7
  p_40 = switch_stristr ("m=image ", sdp_str_1);
  # DEBUG p => p_40
  if (p_40 != 0B)
    goto <bb 20>;
  else
    goto <bb 23>;

<bb 20>:
  tmp_41 = p_40 + 8;
  # DEBUG tmp => tmp_41
  if (tmp_41 != 0B)
    goto <bb 21>;
  else
    goto <bb 23>;

<bb 21>:
  # DEBUG __nptr => tmp_41
  D.47979_367 = strtol (tmp_41, 0B, 10);
  if (D.47979_367 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  # DEBUG port_ptr => tmp_41

<bb 23>:
  # port_ptr_8 = PHI <port_ptr_7(19), port_ptr_7(20), port_ptr_7(21), tmp_41(22)>
  # DEBUG port_ptr => port_ptr_8
  p_44 = switch_stristr ("m=video ", sdp_str_1);
  # DEBUG p => p_44
  if (p_44 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  vid_port_ptr_45 = p_44 + 8;
  # DEBUG vid_port_ptr => vid_port_ptr_45

<bb 25>:
  # vid_port_ptr_9 = PHI <0B(23), vid_port_ptr_45(24)>
  # DEBUG vid_port_ptr => vid_port_ptr_9
  D.44158_46 = ip_ptr_6 == 0B;
  D.44159_47 = port_ptr_8 == 0B;
  D.44160_48 = D.44158_46 || D.44159_47;
  if (D.44160_48 != 0)
    goto <bb 86> (end);
  else
    goto <bb 26>;

<bb 26>:
  # DEBUG p => ip_ptr_6
  D.44162_50 = strlen (ip_ptr_6);
  pe_51 = ip_ptr_6 + D.44162_50;
  # DEBUG pe => pe_51
  # DEBUG x => 0
  goto <bb 28>;

<bb 27>:
  D.44163_68 = *p_3;
  rip[x_10] = D.44163_68;
  x_69 = x_10 + 1;
  # DEBUG x => x_69
  p_70 = p_3 + 1;
  # DEBUG p => p_70
  if (p_70 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 28>;

<bb 28>:
  # p_3 = PHI <ip_ptr_6(26), p_70(27)>
  # x_10 = PHI <0(26), x_69(27)>
  # DEBUG x => x_10
  # DEBUG p => p_3
  x.82_53 = (unsigned int) x_10;
  D.44166_54 = x.82_53 <= 510;
  D.44167_55 = p_3 != 0B;
  D.44168_56 = D.44166_54 && D.44167_55;
  if (D.44168_56 != 0)
    goto <bb 29>;
  else
    goto <bb 35>;

<bb 29>:
  D.44163_57 = *p_3;
  if (D.44163_57 != 0)
    goto <bb 30>;
  else
    goto <bb 35>;

<bb 30>:
  D.44171_58 = *p_3;
  D.44172_59 = D.44171_58 + 208;
  D.44173_60 = D.44172_59 <= 9;
  D.44174_61 = D.44171_58 == 46;
  D.44175_62 = D.44173_60 || D.44174_61;
  if (D.44175_62 != 0)
    goto <bb 27>;
  else
    goto <bb 31>;

<bb 31>:
  D.44163_63 = *p_3;
  if (D.44163_63 == 58)
    goto <bb 27>;
  else
    goto <bb 32>;

<bb 32>:
  D.44163_64 = *p_3;
  D.44178_65 = D.44163_64 + 159;
  if (D.44178_65 <= 5)
    goto <bb 27>;
  else
    goto <bb 33>;

<bb 33>:
  D.44163_66 = *p_3;
  D.44180_67 = D.44163_66 + 191;
  if (D.44180_67 <= 5)
    goto <bb 27>;
  else
    goto <bb 35>;

<bb 34>:
  D.44163_80 = *p_4;
  rp[x_11] = D.44163_80;
  x_81 = x_11 + 1;
  # DEBUG x => x_81
  p_82 = p_4 + 1;
  # DEBUG p => p_82
  if (p_82 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 35>;

<bb 35>:
  # p_4 = PHI <port_ptr_8(29), p_82(34), port_ptr_8(28), port_ptr_8(33)>
  # x_11 = PHI <0(29), x_81(34), 0(28), 0(33)>
  # DEBUG x => x_11
  # DEBUG p => p_4
  x.82_73 = (unsigned int) x_11;
  D.44166_74 = x.82_73 <= 510;
  D.44167_75 = p_4 != 0B;
  D.44168_76 = D.44166_74 && D.44167_75;
  if (D.44168_76 != 0)
    goto <bb 36>;
  else
    goto <bb 39>;

<bb 36>:
  D.44163_77 = *p_4;
  if (D.44163_77 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  D.44163_78 = *p_4;
  D.44184_79 = D.44163_78 + 208;
  if (D.44184_79 <= 9)
    goto <bb 34>;
  else
    goto <bb 39>;

<bb 38>:
  D.44163_92 = *p_5;
  rvp[x_12] = D.44163_92;
  x_93 = x_12 + 1;
  # DEBUG x => x_93
  p_94 = p_5 + 1;
  # DEBUG p => p_94
  if (p_94 >= pe_51)
    goto <bb 86> (end);
  else
    goto <bb 39>;

<bb 39>:
  # p_5 = PHI <vid_port_ptr_9(36), p_94(38), vid_port_ptr_9(35), vid_port_ptr_9(37)>
  # x_12 = PHI <0(36), x_93(38), 0(35), 0(37)>
  # DEBUG x => x_12
  # DEBUG p => p_5
  x.82_85 = (unsigned int) x_12;
  D.44166_86 = x.82_85 <= 510;
  D.44167_87 = p_5 != 0B;
  D.44168_88 = D.44166_86 && D.44167_87;
  if (D.44168_88 != 0)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 40>:
  D.44163_89 = *p_5;
  if (D.44163_89 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

<bb 41>:
  D.44163_90 = *p_5;
  D.44184_91 = D.44163_90 + 208;
  if (D.44184_91 <= 9)
    goto <bb 38>;
  else
    goto <bb 42>;

<bb 42>:
  D.44190_95 = rip[0];
  if (D.44190_95 == 0)
    goto <bb 44>;
  else
    goto <bb 43>;

<bb 43>:
  D.44192_96 = rp[0];
  if (D.44192_96 == 0)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4225, session_25(D), 3, "invalid SDP\n");
  goto <bb 86> (end);

<bb 45>:
  D.44193_97 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44194_98 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4229);
  D.44193_97->remote_sdp_ip = D.44194_98;
  D.44193_99 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  # DEBUG __nptr => &rp
  D.47982_368 = strtol (&rp, 0B, 10);
  D.44196_101 = (short unsigned int) D.47982_368;
  D.44193_99->remote_sdp_port = D.44196_101;
  D.44197_102 = rvp[0];
  if (D.44197_102 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:
  D.44200_103 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44201_104 = switch_core_perform_session_strdup (session_25(D), &rip, "src/switch_core_media.c", &__func__, 4233);
  D.44200_103->remote_sdp_ip = D.44201_104;
  D.44200_105 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  # DEBUG __nptr => &rvp
  D.47985_369 = strtol (&rvp, 0B, 10);
  D.44203_107 = (short unsigned int) D.47985_369;
  D.44200_105->remote_sdp_port = D.44203_107;
  D.44204_108 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_108, 98, 1);
  D.44204_109 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_109, 23, 1);

<bb 47>:
  D.44200_110 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_111 = D.44200_110->remote_sdp_ip;
  if (D.44205_111 != 0B)
    goto <bb 48>;
  else
    goto <bb 66>;

<bb 48>:
  D.44200_112 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_113 = D.44200_112->remote_sdp_port;
  if (D.44208_113 != 0)
    goto <bb 49>;
  else
    goto <bb 66>;

<bb 49>:
  D.44200_114 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_115 = D.44200_114->remote_sdp_ip;
  D.39191_116 = __builtin_strcmp (D.44205_115, &rip);
  if (D.39191_116 == 0)
    goto <bb 50>;
  else
    goto <bb 52>;

<bb 50>:
  # DEBUG __nptr => &rvp
  D.47988_370 = strtol (&rvp, 0B, 10);
  D.44200_118 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_119 = D.44200_118->remote_sdp_port;
  D.44215_120 = (int) D.44208_119;
  if (D.44215_120 == D.47988_370)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.44200_121 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_122 = D.44200_121->remote_sdp_ip;
  D.44200_123 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_124 = D.44200_123->remote_sdp_port;
  D.44215_125 = (int) D.44208_124;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4241, session_25(D), 7, "Remote video address:port [%s:%d] has not changed.\n", D.44205_122, D.44215_125);
  goto <bb 66>;

<bb 52>:
  D.44204_126 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_126, 98, 1);
  D.44204_127 = session_25(D)->channel;
  switch_channel_set_flag_value (D.44204_127, 23, 1);
  D.44217_128 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  D.44218_129 = switch_rtp_ready (D.44217_128);
  if (D.44218_129 != 0)
    goto <bb 53>;
  else
    goto <bb 66>;

<bb 53>:
  # DEBUG rport => 0B
  remote_rtcp_port_131 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_131
  if (remote_rtcp_port_131 == 0)
    goto <bb 54>;
  else
    goto <bb 56>;

<bb 54>:
  D.44204_132 = session_25(D)->channel;
  rport_133 = switch_channel_get_variable_dup (D.44204_132, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_133
  if (rport_133 != 0B)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  # DEBUG __nptr => rport_133
  D.47991_371 = strtol (rport_133, 0B, 10);
  remote_rtcp_port_135 = (switch_port_t) D.47991_371;
  # DEBUG remote_rtcp_port => remote_rtcp_port_135

<bb 56>:
  # remote_rtcp_port_14 = PHI <remote_rtcp_port_131(53), remote_rtcp_port_131(54), remote_rtcp_port_135(55)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_14
  D.44217_136 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  D.44200_137 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_138 = D.44200_137->remote_sdp_ip;
  D.44200_139 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_140 = D.44200_139->remote_sdp_port;
  D.44226_141 = switch_rtp_set_remote_address (D.44217_136, D.44205_138, D.44208_140, remote_rtcp_port_14, 1, &err);
  if (D.44226_141 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  err.83_142 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4259, session_25(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.83_142);
  goto <bb 66>;

<bb 58>:
  D.44200_143 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44205_144 = D.44200_143->remote_sdp_ip;
  D.44200_145 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].cur_payload_map;
  D.44208_146 = D.44200_145->remote_sdp_port;
  D.44215_147 = (int) D.44208_146;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4261, session_25(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.44205_144, D.44215_147);
  D.44233_148 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44233_148 == 0)
    goto <bb 59>;
  else
    goto <bb 64>;

<bb 59>:
  D.44204_149 = session_25(D)->channel;
  D.44236_150 = switch_channel_test_flag (D.44204_149, 15);
  if (D.44236_150 == 0)
    goto <bb 60>;
  else
    goto <bb 64>;

<bb 60>:
  D.44204_151 = session_25(D)->channel;
  val_152 = switch_channel_get_variable_dup (D.44204_151, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_152
  if (val_152 == 0B)
    goto <bb 62>;
  else
    goto <bb 61>;

<bb 61>:
  D.44240_153 = switch_true (val_152);
  if (D.44240_153 == 0)
    goto <bb 62>;
  else
    goto <bb 64>;

<bb 62>:
  D.44204_154 = session_25(D)->channel;
  D.44241_155 = switch_channel_test_flag (D.44204_154, 106);
  if (D.44241_155 == 0)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  D.44217_156 = MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].rtp_session;
  switch_rtp_set_flag (D.44217_156, 7);
  start_video_thread (session_25(D));

<bb 64>:
  D.44244_157 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44244_157 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  MEM[(struct switch_rtp_engine_t *)smh_26 + 11496B].check_frames = 0;

<bb 66>:
  D.44247_158 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  D.44248_159 = switch_rtp_ready (D.44247_158);
  if (D.44248_159 != 0)
    goto <bb 67>;
  else
    goto <bb 86> (end);

<bb 67>:
  D.44247_160 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  remote_host_161 = switch_rtp_get_remote_host (D.44247_160);
  # DEBUG remote_host => remote_host_161
  D.44247_162 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  remote_port_163 = switch_rtp_get_remote_port (D.44247_162);
  # DEBUG remote_port => remote_port_163
  # DEBUG rport => 0B
  # DEBUG remote_rtcp_port => 0
  D.44252_166 = remote_host_161 != 0B;
  D.44253_167 = remote_port_163 != 0;
  D.44254_168 = D.44252_166 && D.44253_167;
  if (D.44254_168 != 0)
    goto <bb 68>;
  else
    goto <bb 71>;

<bb 68>:
  D.44193_169 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_170 = D.44193_169->remote_sdp_ip;
  D.39206_171 = __builtin_strcmp (remote_host_161, D.44256_170);
  if (D.39206_171 == 0)
    goto <bb 69>;
  else
    goto <bb 71>;

<bb 69>:
  D.44193_172 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_173 = D.44193_172->remote_sdp_port;
  if (D.44258_173 == remote_port_163)
    goto <bb 70>;
  else
    goto <bb 71>;

<bb 70>:
  D.44193_174 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_175 = D.44193_174->remote_sdp_ip;
  D.44193_176 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_177 = D.44193_176->remote_sdp_port;
  D.44260_178 = (int) D.44258_177;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4286, session_25(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.44256_175, D.44260_178);
  # DEBUG status => 11
  goto <bb 86> (end);

<bb 71>:
  if (remote_host_161 != 0B)
    goto <bb 72>;
  else
    goto <bb 75>;

<bb 72>:
  # DEBUG __s2_len => 7
  __result_220 = __builtin_strcmp (remote_host_161, "0.0.0.0");
  if (__result_220 == 0)
    goto <bb 74>;
  else
    goto <bb 73>;

<bb 73>:
  # DEBUG __s2_len => 7
  D.44193_263 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_264 = D.44193_263->remote_sdp_ip;
  __result_265 = __builtin_strcmp (D.44256_264, "0.0.0.0");
  if (__result_265 == 0)
    goto <bb 74>;
  else
    goto <bb 75>;

<bb 74>:
  D.44193_267 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_268 = D.44193_267->remote_sdp_ip;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4292, session_25(D), 7, "Remote address changed from [%s] to [%s]. Ignoring...\n", D.44256_268, remote_host_161);
  # DEBUG status => 11
  goto <bb 86> (end);

<bb 75>:
  D.44204_270 = session_25(D)->channel;
  rport_271 = switch_channel_get_variable_dup (D.44204_270, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_271
  if (rport_271 != 0B)
    goto <bb 76>;
  else
    goto <bb 77>;

<bb 76>:
  # DEBUG __nptr => rport_271
  D.47994_372 = strtol (rport_271, 0B, 10);
  remote_rtcp_port_273 = (switch_port_t) D.47994_372;
  # DEBUG remote_rtcp_port => remote_rtcp_port_273

<bb 77>:
  # remote_rtcp_port_15 = PHI <0(75), remote_rtcp_port_273(76)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_15
  D.44247_274 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  D.44193_275 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_276 = D.44193_275->remote_sdp_ip;
  D.44193_277 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_278 = D.44193_277->remote_sdp_port;
  D.44337_279 = switch_rtp_set_remote_address (D.44247_274, D.44256_276, D.44258_278, remote_rtcp_port_15, 1, &err);
  if (D.44337_279 != 0)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  err.83_280 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4305, session_25(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.83_280);
  # DEBUG status => 9
  goto <bb 86> (end);

<bb 79>:
  D.44193_282 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44256_283 = D.44193_282->remote_sdp_ip;
  D.44193_284 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].cur_payload_map;
  D.44258_285 = D.44193_284->remote_sdp_port;
  D.44260_286 = (int) D.44258_285;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4308, session_25(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.44256_283, D.44260_286);
  D.44343_287 = switch_media_handle_test_media_flag (smh_26, 10);
  if (D.44343_287 == 0)
    goto <bb 80>;
  else
    goto <bb 84>;

<bb 80>:
  D.44204_288 = session_25(D)->channel;
  val_289 = switch_channel_get_variable_dup (D.44204_288, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_289
  if (val_289 == 0B)
    goto <bb 82>;
  else
    goto <bb 81>;

<bb 81>:
  D.44347_290 = switch_true (val_289);
  if (D.44347_290 == 0)
    goto <bb 82>;
  else
    goto <bb 84>;

<bb 82>:
  D.44204_291 = session_25(D)->channel;
  D.44348_292 = switch_channel_test_flag (D.44204_291, 106);
  if (D.44348_292 == 0)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  D.44247_293 = MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].rtp_session;
  switch_rtp_set_flag (D.44247_293, 7);

<bb 84>:
  D.44351_294 = switch_media_handle_test_media_flag (smh_26, 2);
  if (D.44351_294 != 0)
    goto <bb 85>;
  else
    goto <bb 86> (end);

<bb 85>:
  MEM[(struct switch_rtp_engine_t *)smh_26 + 80B].check_frames = 0;

  # status_13 = PHI <1(13), 1(25), 1(27), 1(34), 1(38), 1(44), 1(66), 11(70), 11(74), 9(78), 0(85), 0(84)>
end:
  # DEBUG status => status_13

<bb 87>:
  # status_18 = PHI <1(4), status_13(86)>
  return status_18;

}



;; Function switch_core_media_check_nat (switch_core_media_check_nat)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Marking useful stmt: __assert_fail ("network_ip", "src/switch_core_media.c", 4331, &__PRETTY_FUNCTION__);

Marking useful stmt: D.44127_6 = switch_check_network_list_ip_token (network_ip_2(D), "loopback.auto", 0B);

Marking useful stmt: D.44130_9 = switch_check_network_list_ip_token (network_ip_2(D), D.44129_8, 0B);

Marking useful stmt: return D.44120_1;


Processing worklist:
processing: return D.44120_1;

Marking useful stmt: if (network_ip_2(D) == 0B)

marking necessary through D.44120_1 stmt D.44120_1 = PHI <1(6), 0(7)>
processing: D.44120_1 = PHI <1(6), 0(7)>

Marking useful stmt: if (D.44127_6 == 0)

Marking useful stmt: if (D.44125_5 != 0B)

Marking useful stmt: if (D.44130_9 == 0)

processing: if (D.44130_9 == 0)

processing: if (D.44125_5 != 0B)

marking necessary through D.44125_5 stmt D.44125_5 = D.44124_4->extsipip;
processing: D.44125_5 = D.44124_4->extsipip;

marking necessary through D.44124_4 stmt D.44124_4 = smh_3(D)->mparams;
processing: D.44124_4 = smh_3(D)->mparams;

processing: if (D.44127_6 == 0)

processing: if (network_ip_2(D) == 0B)

processing: D.44130_9 = switch_check_network_list_ip_token (network_ip_2(D), D.44129_8, 0B);

marking necessary through D.44129_8 stmt D.44129_8 = D.44124_7->local_network;
processing: D.44129_8 = D.44124_7->local_network;

marking necessary through D.44124_7 stmt D.44124_7 = smh_3(D)->mparams;
processing: D.44124_7 = smh_3(D)->mparams;

processing: D.44127_6 = switch_check_network_list_ip_token (network_ip_2(D), "loopback.auto", 0B);

processing: __assert_fail ("network_ip", "src/switch_core_media.c", 4331, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 12 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_check_nat (struct switch_media_handle_t * smh, const char * network_ip)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_check_nat";
  switch_bool_t D.44130;
  char * D.44129;
  switch_bool_t D.44127;
  char * D.44125;
  struct switch_core_media_params_t * D.44124;
  int D.44120;

<bb 2>:
  if (network_ip_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("network_ip", "src/switch_core_media.c", 4331, &__PRETTY_FUNCTION__);

<bb 4>:
  D.44124_4 = smh_3(D)->mparams;
  D.44125_5 = D.44124_4->extsipip;
  if (D.44125_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  D.44127_6 = switch_check_network_list_ip_token (network_ip_2(D), "loopback.auto", 0B);
  if (D.44127_6 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.44124_7 = smh_3(D)->mparams;
  D.44129_8 = D.44124_7->local_network;
  D.44130_9 = switch_check_network_list_ip_token (network_ip_2(D), D.44129_8, 0B);
  if (D.44130_9 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:

<bb 8>:
  # D.44120_1 = PHI <1(6), 0(7)>
  return D.44120_1;

}



;; Function switch_core_media_ext_address_lookup (switch_core_media_ext_address_lookup)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 19 16 17 18 33 20 21 22 23 24 25 26 27 28 29 30 31 32
;;
;; Loop 1
;;  header 33, latch 18
;;  depth 1, outer 0
;;  nodes: 33 18 17
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 32 5 }
;; 5 succs { 32 6 }
;; 6 succs { 7 8 }
;; 7 succs { 29 }
;; 8 succs { 9 28 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 16 19 }
;; 19 succs { 33 }
;; 16 succs { 29 }
;; 17 succs { 18 20 }
;; 18 succs { 33 }
;; 33 succs { 17 20 }
;; 20 succs { 21 22 }
;; 21 succs { 29 }
;; 22 succs { 23 24 }
;; 23 succs { 29 }
;; 24 succs { 25 27 }
;; 25 succs { 26 27 }
;; 26 succs { 29 }
;; 27 succs { 29 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 1 }
Marking useful stmt: # DEBUG status => 1

Marking useful stmt: # DEBUG myport => myport_10

Marking useful stmt: # DEBUG stun_port => 3478

Marking useful stmt: # DEBUG stun_ip => 0B

Marking useful stmt: pool_14 = switch_core_session_get_pool (session_13(D));

Marking useful stmt: # DEBUG pool => pool_14

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4351, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_15

Marking useful stmt: D.44081_21 = switch_stun_host_lookup (D.44080_20, pool_14);

Marking useful stmt: *ip_22(D) = D.44081_21;

Marking useful stmt: # DEBUG status => status_24

Marking useful stmt: stun_ip_27 = __strdup (D.44080_26);

Marking useful stmt: # DEBUG stun_ip => stun_ip_27

Marking useful stmt: # DEBUG p => p_28

Marking useful stmt: *p_28 = 0;

Marking useful stmt: # DEBUG p => p_29

Marking useful stmt: # DEBUG __nptr => p_29

Marking useful stmt: iport_87 = strtol (p_29, 0B, 10);

Marking useful stmt: # DEBUG iport => NULL

Marking useful stmt: # DEBUG stun_port => stun_port_33

Marking useful stmt: # DEBUG stun_port => stun_port_5

Marking useful stmt: # DEBUG s => stun_ip_27

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4378, 0B, 3, "STUN Failed! NO STUN SERVER\n");

Marking useful stmt: status_36 = switch_stun_lookup (ip_22(D), port_9(D), stun_ip_27, stun_port_5, &error, pool_14);

Marking useful stmt: # DEBUG status => status_36

Marking useful stmt: switch_sleep (100000);

Marking useful stmt: # DEBUG x => x_37

Marking useful stmt: # DEBUG x => x_4

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: # DEBUG status => status_2

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4390, 0B, 3, "STUN Failed! %s:%d [%s]\n", stun_ip_27, D.44099_38, error.80_39);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4394, 0B, 3, "STUN Failed! No IP returned\n");

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4397, 0B, 7, "STUN Success [%s]:[%d]\n", D.44082_41, D.44104_43);

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4401, 0B, 7, "STUN Not Required ip and port match. [%s]:[%d]\n", D.44082_50, D.44104_52);

Marking useful stmt: D.44111_54 = switch_core_perform_session_strdup (session_13(D), stun_ip_27, "src/switch_core_media.c", &__func__, 4403);

Marking useful stmt: D.44108_53->stun_ip = D.44111_54;

Marking useful stmt: D.44108_55->stun_port = stun_port_5;

Marking useful stmt: D.44108_57->stun_flags = D.44113_59;

Marking useful stmt: *ip_22(D) = sourceip_17(D);

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: out:

Marking useful stmt: # DEBUG stun_ip => stun_ip_6

Marking useful stmt: # DEBUG status => status_3

Marking useful stmt: free (stun_ip_6);

Marking useful stmt: # DEBUG stun_ip => 0B

Marking useful stmt: return status_7;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = x_4)
(get_scalar_evolution 
  (scalar = x_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
x_4 = PHI <x_44(19), x_37(18)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = x_4 = PHI <x_44(19), x_37(18)>
)
(add_to_evolution 
  (loop_nb = 1)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_1))
  (evolution_function = {0, +, 1}_1))
(set_scalar_evolution 
  instantiated_below = 19 
  (scalar = x_4)
  (scalar_evolution = {0, +, 1}_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = 4)
(get_scalar_evolution 
  (scalar = 4)
  (scalar_evolution = 4))
)
Analyzing # of iterations of loop 1
  exit condition [0, + , 1](no_overflow) <= 4
  bounds on difference of bases: 4 ... 4
  result:
    # of iterations 5, bounded by 5
Found loop 1 to be finite: iterating 5 times

Processing worklist:
processing: return status_7;

Marking useful stmt: if (session_13(D) == 0B)

marking necessary through status_7 stmt status_7 = PHI <1(4), 1(5), status_3(31)>
processing: status_7 = PHI <1(4), 1(5), status_3(31)>

marking necessary through status_3 stmt status_3 = PHI <status_24(7), 1(16), status_2(21), status_2(23), 0(27), 0(28), 0(26)>
Marking useful stmt: if (smh_15 == 0B)

Marking useful stmt: if (sourceip_17(D) == 0B)

processing: if (sourceip_17(D) == 0B)

processing: if (smh_15 == 0B)

marking necessary through smh_15 stmt smh_15 = session_13(D)->media_handle;
processing: smh_15 = session_13(D)->media_handle;

marking necessary through .MEM_68 stmt error = "";
processing: error = "";

processing: status_3 = PHI <status_24(7), 1(16), status_2(21), status_2(23), 0(27), 0(28), 0(26)>

marking necessary through status_24 stmt status_24 = D.44082_23 == 0B;
marking necessary through status_2 stmt status_2 = PHI <status_36(17), status_1(33)>
Marking useful stmt: if (D.44077_19 == 0)

Marking useful stmt: if (D.48013_89 != 0)

Marking useful stmt: if (status_2 != 0)

Marking useful stmt: if (D.44082_40 == 0B)

Marking useful stmt: if (D.44103_45 == myport_10)

Marking useful stmt: if (D.39263_49 == 0)

Marking useful stmt: if (D.44084_25 == 0)

processing: if (D.44084_25 == 0)

marking necessary through D.44084_25 stmt D.44084_25 = strncasecmp (sourceip_17(D), "stun:", 5);
processing: D.44084_25 = strncasecmp (sourceip_17(D), "stun:", 5);

processing: if (D.39263_49 == 0)

marking necessary through D.39263_49 stmt D.39263_49 = __builtin_strcmp (D.44082_46, D.44109_48);
processing: D.39263_49 = __builtin_strcmp (D.44082_46, D.44109_48);

marking necessary through D.44082_46 stmt D.44082_46 = *ip_22(D);
marking necessary through D.44109_48 stmt D.44109_48 = D.44108_47->rtpip;
processing: D.44109_48 = D.44108_47->rtpip;

marking necessary through D.44108_47 stmt D.44108_47 = smh_15->mparams;
processing: D.44108_47 = smh_15->mparams;

processing: D.44082_46 = *ip_22(D);

processing: if (D.44103_45 == myport_10)

marking necessary through D.44103_45 stmt D.44103_45 = *port_9(D);
marking necessary through myport_10 stmt myport_10 = *port_9(D);
processing: myport_10 = *port_9(D);

processing: D.44103_45 = *port_9(D);

processing: if (D.44082_40 == 0B)

marking necessary through D.44082_40 stmt D.44082_40 = *ip_22(D);
processing: D.44082_40 = *ip_22(D);

processing: if (status_2 != 0)

processing: if (D.48013_89 != 0)

marking necessary through D.48013_89 stmt D.48013_89 = PHI <1(12), 1(13), 0(14)>
processing: D.48013_89 = PHI <1(12), 1(13), 0(14)>

Marking useful stmt: if (stun_ip_27 == 0B)

Marking useful stmt: if (D.48014_88 == 0)

processing: if (D.48014_88 == 0)

marking necessary through D.48014_88 stmt D.48014_88 = MEM[(const char *)stun_ip_27];
processing: D.48014_88 = MEM[(const char *)stun_ip_27];

processing: if (stun_ip_27 == 0B)

processing: if (D.44077_19 == 0)

marking necessary through D.44077_19 stmt D.44077_19 = strncasecmp (sourceip_17(D), "host:", 5);
processing: D.44077_19 = strncasecmp (sourceip_17(D), "host:", 5);

processing: status_2 = PHI <status_36(17), status_1(33)>

marking necessary through status_1 stmt status_1 = PHI <status_60(19), status_36(18)>
Marking useful stmt: if (x_4 <= 4)

Marking useful stmt: if (status_36 != 0)

processing: if (status_36 != 0)

processing: if (x_4 <= 4)

marking necessary through x_4 stmt x_4 = PHI <x_44(19), x_37(18)>
processing: x_4 = PHI <x_44(19), x_37(18)>

marking necessary through x_44 stmt x_44 = PHI <0(15)>
marking necessary through x_37 stmt x_37 = x_4 + 1;
processing: x_37 = x_4 + 1;

processing: x_44 = PHI <0(15)>

processing: status_1 = PHI <status_60(19), status_36(18)>

marking necessary through status_60 stmt status_60 = PHI <1(15)>
processing: status_60 = PHI <1(15)>

processing: status_24 = D.44082_23 == 0B;

marking necessary through D.44082_23 stmt D.44082_23 = *ip_22(D);
processing: D.44082_23 = *ip_22(D);

processing: if (session_13(D) == 0B)

processing: free (stun_ip_6);

Marking useful stmt: if (stun_ip_6 != 0B)

marking necessary through stun_ip_6 stmt stun_ip_6 = PHI <0B(7), stun_ip_27(16), stun_ip_27(21), stun_ip_27(23), stun_ip_27(27), 0B(28), stun_ip_27(26)>
processing: stun_ip_6 = PHI <0B(7), stun_ip_27(16), stun_ip_27(21), stun_ip_27(23), stun_ip_27(27), 0B(28), stun_ip_27(26)>

processing: if (stun_ip_6 != 0B)

processing: *ip_22(D) = sourceip_17(D);

processing: D.44108_57->stun_flags = D.44113_59;

marking necessary through D.44108_57 stmt D.44108_57 = smh_15->mparams;
marking necessary through D.44113_59 stmt D.44113_59 = D.44112_58 | 1;
processing: D.44113_59 = D.44112_58 | 1;

marking necessary through D.44112_58 stmt D.44112_58 = D.44108_57->stun_flags;
processing: D.44112_58 = D.44108_57->stun_flags;

processing: D.44108_57 = smh_15->mparams;

processing: D.44108_55->stun_port = stun_port_5;

marking necessary through D.44108_55 stmt D.44108_55 = smh_15->mparams;
marking necessary through stun_port_5 stmt stun_port_5 = PHI <3478(9), 3478(10), stun_port_33(11)>
processing: stun_port_5 = PHI <3478(9), 3478(10), stun_port_33(11)>

marking necessary through stun_port_33 stmt stun_port_33 = (switch_port_t) iport_87;
Marking useful stmt: if (p_28 != 0B)

Marking useful stmt: if (D.44090_32 <= 65533)

processing: if (D.44090_32 <= 65533)

marking necessary through D.44090_32 stmt D.44090_32 = iport.79_31 + 4294967295;
processing: D.44090_32 = iport.79_31 + 4294967295;

marking necessary through iport.79_31 stmt iport.79_31 = (unsigned int) iport_87;
processing: iport.79_31 = (unsigned int) iport_87;

processing: if (p_28 != 0B)

marking necessary through p_28 stmt p_28 = __builtin_strchr (stun_ip_27, 58);
processing: p_28 = __builtin_strchr (stun_ip_27, 58);

processing: stun_port_33 = (switch_port_t) iport_87;

processing: D.44108_55 = smh_15->mparams;

processing: D.44108_53->stun_ip = D.44111_54;

marking necessary through D.44108_53 stmt D.44108_53 = smh_15->mparams;
processing: D.44108_53 = smh_15->mparams;

processing: D.44111_54 = switch_core_perform_session_strdup (session_13(D), stun_ip_27, "src/switch_core_media.c", &__func__, 4403);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4401, 0B, 7, "STUN Not Required ip and port match. [%s]:[%d]\n", D.44082_50, D.44104_52);

marking necessary through D.44082_50 stmt D.44082_50 = *ip_22(D);
marking necessary through D.44104_52 stmt D.44104_52 = (int) D.44103_51;
processing: D.44104_52 = (int) D.44103_51;

marking necessary through D.44103_51 stmt D.44103_51 = *port_9(D);
processing: D.44103_51 = *port_9(D);

processing: D.44082_50 = *ip_22(D);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4397, 0B, 7, "STUN Success [%s]:[%d]\n", D.44082_41, D.44104_43);

marking necessary through D.44082_41 stmt D.44082_41 = *ip_22(D);
marking necessary through D.44104_43 stmt D.44104_43 = (int) D.44103_42;
processing: D.44104_43 = (int) D.44103_42;

marking necessary through D.44103_42 stmt D.44103_42 = *port_9(D);
processing: D.44103_42 = *port_9(D);

processing: D.44082_41 = *ip_22(D);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4394, 0B, 3, "STUN Failed! No IP returned\n");

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4390, 0B, 3, "STUN Failed! %s:%d [%s]\n", stun_ip_27, D.44099_38, error.80_39);

marking necessary through D.44099_38 stmt D.44099_38 = (int) stun_port_5;
marking necessary through error.80_39 stmt error.80_39 = error;
processing: error.80_39 = error;

processing: D.44099_38 = (int) stun_port_5;

processing: switch_sleep (100000);

processing: status_36 = switch_stun_lookup (ip_22(D), port_9(D), stun_ip_27, stun_port_5, &error, pool_14);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4378, 0B, 3, "STUN Failed! NO STUN SERVER\n");

processing: iport_87 = strtol (p_29, 0B, 10);

marking necessary through p_29 stmt p_29 = p_28 + 1;
processing: p_29 = p_28 + 1;

processing: *p_28 = 0;

processing: stun_ip_27 = __strdup (D.44080_26);

marking necessary through D.44080_26 stmt D.44080_26 = sourceip_17(D) + 5;
processing: D.44080_26 = sourceip_17(D) + 5;

processing: *ip_22(D) = D.44081_21;

processing: D.44081_21 = switch_stun_host_lookup (D.44080_20, pool_14);

marking necessary through D.44080_20 stmt D.44080_20 = sourceip_17(D) + 5;
processing: D.44080_20 = sourceip_17(D) + 5;

processing: __assert_fail ("session", "src/switch_core_media.c", 4351, &__PRETTY_FUNCTION__);

processing: pool_14 = switch_core_session_get_pool (session_13(D));


Eliminating unnecessary statements:
Deleting : iport_30 = iport_87;

Deleting : status_62 = status_3;

Deleting : .MEM_35 = PHI <.MEM_63(15)>

Removed 2 of 101 statements (1%)
Removed 1 of 15 PHI nodes (6%)
Removing basic block 31
;; basic block 31, loop depth 0, count 0
;; prev block 30, next block 32
;; pred:      
;; succ:       32 (fallthru,exec)
<bb 31>:


Scope blocks after cleanups:

{ Scope block #0 
  char * error;
  switch_status_t status;
  int x;
  switch_port_t myport;
  switch_port_t stun_port;
  char * stun_ip;
  struct switch_media_handle_t * smh;
  struct switch_memory_pool_t * pool;
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_ext_address_lookup";
  static const char __func__[37] = "switch_core_media_ext_address_lookup";
  void out = <<< error >>>; (unused)

  { Scope block #303 
    char * p;

    { Scope block #304 src/switch_core_media.c:4377 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #305 Originating from :#0 

      }

    }

    { Scope block #306 
      int iport;

      { Scope block #307 src/switch_core_media.c:4371 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #308 Originating from :#0 

        }

      }

    }

    { Scope block #309 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

}
switch_core_media_ext_address_lookup (struct switch_core_session_t * session, char * * ip, switch_port_t * port, const char * sourceip)
{
  const char D.48014;
  int D.48013;
  int iport;
  char * p;
  static const char __func__[37] = "switch_core_media_ext_address_lookup";
  static const char __PRETTY_FUNCTION__[37] = "switch_core_media_ext_address_lookup";
  struct switch_memory_pool_t * pool;
  struct switch_media_handle_t * smh;
  char * stun_ip;
  switch_port_t stun_port;
  switch_port_t myport;
  int x;
  switch_status_t status;
  char * error;
  uint32_t D.44113;
  uint32_t D.44112;
  char * D.44111;
  char * D.44109;
  struct switch_core_media_params_t * D.44108;
  int D.39263;
  int D.44104;
  switch_port_t D.44103;
  char * error.80;
  int D.44099;
  unsigned int D.44090;
  unsigned int iport.79;
  int D.44084;
  char * D.44082;
  char * D.44081;
  const char * D.44080;
  int D.44077;

<bb 2>:
  error = "";
  # DEBUG status => 1
  myport_10 = *port_9(D);
  # DEBUG myport => myport_10
  # DEBUG stun_port => 3478
  # DEBUG stun_ip => 0B
  pool_14 = switch_core_session_get_pool (session_13(D));
  # DEBUG pool => pool_14
  if (session_13(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4351, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_15 = session_13(D)->media_handle;
  # DEBUG smh => smh_15
  if (smh_15 == 0B)
    goto <bb 32>;
  else
    goto <bb 5>;

<bb 5>:
  if (sourceip_17(D) == 0B)
    goto <bb 32>;
  else
    goto <bb 6>;

<bb 6>:
  D.44077_19 = strncasecmp (sourceip_17(D), "host:", 5);
  if (D.44077_19 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.44080_20 = sourceip_17(D) + 5;
  D.44081_21 = switch_stun_host_lookup (D.44080_20, pool_14);
  *ip_22(D) = D.44081_21;
  D.44082_23 = *ip_22(D);
  status_24 = D.44082_23 == 0B;
  # DEBUG status => status_24
  goto <bb 30> (out);

<bb 8>:
  D.44084_25 = strncasecmp (sourceip_17(D), "stun:", 5);
  if (D.44084_25 == 0)
    goto <bb 9>;
  else
    goto <bb 29>;

<bb 9>:
  D.44080_26 = sourceip_17(D) + 5;
  stun_ip_27 = __strdup (D.44080_26);
  # DEBUG stun_ip => stun_ip_27
  p_28 = __builtin_strchr (stun_ip_27, 58);
  # DEBUG p => p_28
  if (p_28 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  *p_28 = 0;
  p_29 = p_28 + 1;
  # DEBUG p => p_29
  # DEBUG __nptr => p_29
  iport_87 = strtol (p_29, 0B, 10);
  # DEBUG iport => NULL
  iport.79_31 = (unsigned int) iport_87;
  D.44090_32 = iport.79_31 + 4294967295;
  if (D.44090_32 <= 65533)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  stun_port_33 = (switch_port_t) iport_87;
  # DEBUG stun_port => stun_port_33

<bb 12>:
  # stun_port_5 = PHI <3478(9), 3478(10), stun_port_33(11)>
  # DEBUG stun_port => stun_port_5
  # DEBUG s => stun_ip_27
  if (stun_ip_27 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;

<bb 13>:
  D.48014_88 = MEM[(const char *)stun_ip_27];
  if (D.48014_88 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # D.48013_89 = PHI <1(12), 1(13), 0(14)>
  if (D.48013_89 != 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:
  # status_60 = PHI <1(15)>
  # x_44 = PHI <0(15)>
  goto <bb 20>;

<bb 17>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4378, 0B, 3, "STUN Failed! NO STUN SERVER\n");
  goto <bb 30> (out);

<bb 18>:
  status_36 = switch_stun_lookup (ip_22(D), port_9(D), stun_ip_27, stun_port_5, &error, pool_14);
  # DEBUG status => status_36
  if (status_36 != 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  switch_sleep (100000);
  x_37 = x_4 + 1;
  # DEBUG x => x_37

<bb 20>:
  # status_1 = PHI <status_60(16), status_36(19)>
  # x_4 = PHI <x_44(16), x_37(19)>
  # DEBUG x => x_4
  # DEBUG status => status_1
  if (x_4 <= 4)
    goto <bb 18>;
  else
    goto <bb 21>;

<bb 21>:
  # status_2 = PHI <status_36(18), status_1(20)>
  # DEBUG status => status_2
  if (status_2 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.44099_38 = (int) stun_port_5;
  error.80_39 = error;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4390, 0B, 3, "STUN Failed! %s:%d [%s]\n", stun_ip_27, D.44099_38, error.80_39);
  goto <bb 30> (out);

<bb 23>:
  D.44082_40 = *ip_22(D);
  if (D.44082_40 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4394, 0B, 3, "STUN Failed! No IP returned\n");
  goto <bb 30> (out);

<bb 25>:
  D.44082_41 = *ip_22(D);
  D.44103_42 = *port_9(D);
  D.44104_43 = (int) D.44103_42;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4397, 0B, 7, "STUN Success [%s]:[%d]\n", D.44082_41, D.44104_43);
  # DEBUG status => 0
  D.44103_45 = *port_9(D);
  if (D.44103_45 == myport_10)
    goto <bb 26>;
  else
    goto <bb 28>;

<bb 26>:
  D.44082_46 = *ip_22(D);
  D.44108_47 = smh_15->mparams;
  D.44109_48 = D.44108_47->rtpip;
  D.39263_49 = __builtin_strcmp (D.44082_46, D.44109_48);
  if (D.39263_49 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.44082_50 = *ip_22(D);
  D.44103_51 = *port_9(D);
  D.44104_52 = (int) D.44103_51;
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4401, 0B, 7, "STUN Not Required ip and port match. [%s]:[%d]\n", D.44082_50, D.44104_52);
  goto <bb 30> (out);

<bb 28>:
  D.44108_53 = smh_15->mparams;
  D.44111_54 = switch_core_perform_session_strdup (session_13(D), stun_ip_27, "src/switch_core_media.c", &__func__, 4403);
  D.44108_53->stun_ip = D.44111_54;
  D.44108_55 = smh_15->mparams;
  D.44108_55->stun_port = stun_port_5;
  D.44108_57 = smh_15->mparams;
  D.44112_58 = D.44108_57->stun_flags;
  D.44113_59 = D.44112_58 | 1;
  D.44108_57->stun_flags = D.44113_59;
  goto <bb 30> (out);

<bb 29>:
  *ip_22(D) = sourceip_17(D);
  # DEBUG status => 0

  # status_3 = PHI <status_24(7), 1(17), status_2(22), status_2(24), 0(28), 0(29), 0(27)>
  # stun_ip_6 = PHI <0B(7), stun_ip_27(17), stun_ip_27(22), stun_ip_27(24), stun_ip_27(28), 0B(29), stun_ip_27(27)>
out:
  # DEBUG stun_ip => stun_ip_6
  # DEBUG status => status_3
  if (stun_ip_6 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  free (stun_ip_6);
  # DEBUG stun_ip => 0B

<bb 32>:
  # status_7 = PHI <1(4), 1(5), status_3(31), status_3(30)>
  return status_7;

}



;; Function switch_core_media_reset_autofix (switch_core_media_reset_autofix)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4425, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: # DEBUG engine => engine_6

Marking useful stmt: engine_6->check_frames = 0;

Marking useful stmt: engine_6->last_ts = 0;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: engine_6->last_ts = 0;

Marking useful stmt: if (smh_2 == 0B)

marking necessary through engine_6 stmt engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
processing: engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (smh_2 == 0B)

processing: engine_6->check_frames = 0;

processing: __assert_fail ("session", "src/switch_core_media.c", 4425, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 10 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_reset_autofix (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_reset_autofix";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  unsigned int D.44068;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4425, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_6
  engine_6->check_frames = 0;
  engine_6->last_ts = 0;

<bb 6>:
  return;

}



;; Function switch_core_media_choose_port (switch_core_media_choose_port)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
;; 2 succs { 4 5 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 35 8 }
;; 8 succs { 9 12 }
;; 9 succs { 35 10 }
;; 10 succs { 35 11 }
;; 11 succs { 35 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 35 }
;; 16 succs { 19 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 31 }
;; 20 succs { 21 31 }
;; 21 succs { 22 27 }
;; 22 succs { 25 23 }
;; 23 succs { 25 24 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 30 }
;; 28 succs { 35 29 }
;; 29 succs { 32 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 1 }
Marking useful stmt: # DEBUG use_ip => 0B

Marking useful stmt: # DEBUG type => type_5(D)

Marking useful stmt: <L31>:

Marking useful stmt: <L32>:

Marking useful stmt: <L33>:

Marking useful stmt: # DEBUG tstr => NULL

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4450, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_8

Marking useful stmt: # DEBUG engine => engine_12

Marking useful stmt: D.44021_17 = switch_channel_test_flag (D.44020_16, 15);

Marking useful stmt: D.44023_19 = switch_channel_test_flag (D.44020_18, 29);

Marking useful stmt: switch_rtp_release_port (lookup_rtpip.76_24, sdp_port.77_25);

Marking useful stmt: D.44029_28 = switch_rtp_request_port (lookup_rtpip.76_27);

Marking useful stmt: engine_12->local_sdp_port = D.44029_28;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4475, session_7(D), 2, "No %s RTP ports available!\n", tstr_104);

Marking useful stmt: engine_12->local_sdp_ip = lookup_rtpip.76_32;

Marking useful stmt: # DEBUG s => D.44034_35

Marking useful stmt: D.44037_39 = switch_core_media_check_nat (smh_8, D.44034_38);

Marking useful stmt: switch_nat_add_mapping (sdp_port.77_40, 0, &sdp_port, 0);

Marking useful stmt: switch_snprintf (&vname, 128, "rtp_adv_%s_ip", tstr_104);

Marking useful stmt: use_ip_42 = switch_channel_get_variable_dup (D.44020_41, &vname, 1, -1);

Marking useful stmt: # DEBUG use_ip => use_ip_42

Marking useful stmt: # DEBUG s => D.44041_44

Marking useful stmt: # DEBUG use_ip => use_ip_47

Marking useful stmt: # DEBUG use_ip => use_ip_1

Marking useful stmt: D.44047_48 = switch_core_media_ext_address_lookup (session_7(D), &lookup_rtpip, &sdp_port, use_ip_1);

Marking useful stmt: # DEBUG use_ip => use_ip_50

Marking useful stmt: # DEBUG use_ip => use_ip_52

Marking useful stmt: # DEBUG use_ip => use_ip_54

Marking useful stmt: # DEBUG use_ip => use_ip_2

Marking useful stmt: engine_12->adv_sdp_port = sdp_port.78_55;

Marking useful stmt: D.44052_58 = switch_core_perform_session_strdup (session_7(D), use_ip_2, "src/switch_core_media.c", &__func__, 4515);

Marking useful stmt: D.44014_57->extrtpip = D.44052_58;

Marking useful stmt: D.44014_57->adv_sdp_audio_ip = D.44041_59;

Marking useful stmt: engine_12->adv_sdp_ip = D.44053_60;

Marking useful stmt: switch_channel_set_variable_var_check (D.44020_61, "local_media_ip", D.44056_62, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.44020_63, "local_media_port", "%d", D.44057_65);

Marking useful stmt: switch_channel_set_variable_var_check (D.44020_66, "advertised_media_ip", D.44058_67, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.44020_68, "local_video_ip", D.44058_69, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.44020_70, "local_video_port", "%d", D.44057_72);

Marking useful stmt: return D.44011_3;


Processing worklist:
processing: return D.44011_3;

Marking useful stmt: if (session_7(D) == 0B)

marking necessary through D.44011_3 stmt D.44011_3 = PHI <1(7), 0(10), 1(15), 1(28), 0(34), 0(9), 0(11), 0(33)>
processing: D.44011_3 = PHI <1(7), 0(10), 1(15), 1(28), 0(34), 0(9), 0(11), 0(33)>

Marking useful stmt: if (D.44021_17 != 0)

Marking useful stmt: if (sdp_port.77_29 == 0)

Marking useful stmt: if (use_ip_1 != 0B)

Marking useful stmt: if (type_5(D) == 0)

Marking useful stmt: if (force_15(D) == 0)

Marking useful stmt: if (D.44023_19 != 0)

processing: if (D.44023_19 != 0)

processing: if (force_15(D) == 0)

Marking useful stmt: if (smh_8 == 0B)

processing: if (smh_8 == 0B)

marking necessary through smh_8 stmt smh_8 = session_7(D)->media_handle;
processing: smh_8 = session_7(D)->media_handle;

marking necessary through .MEM_79 stmt vname = "";
processing: vname = "";

processing: if (type_5(D) == 0)

Marking useful stmt: if (D.48026_106 == 0)

Marking useful stmt: if (D.44037_39 != 0)

Marking useful stmt: if (D.44047_48 != 0)

processing: if (D.44047_48 != 0)

processing: if (D.44037_39 != 0)

processing: if (D.48026_106 == 0)

marking necessary through D.48026_106 stmt D.48026_106 = PHI <1(16), 1(17), 0(18)>
processing: D.48026_106 = PHI <1(16), 1(17), 0(18)>

Marking useful stmt: if (D.44034_35 == 0B)

Marking useful stmt: if (D.48027_105 == 0)

processing: if (D.48027_105 == 0)

marking necessary through D.48027_105 stmt D.48027_105 = MEM[(const char *)D.44034_35];
processing: D.48027_105 = MEM[(const char *)D.44034_35];

marking necessary through D.44034_35 stmt D.44034_35 = D.44014_34->remote_ip;
marking necessary through .MEM_88 stmt sdp_port = sdp_port.77_33;
marking necessary through .MEM_80 stmt lookup_rtpip = lookup_rtpip.76_14;
processing: lookup_rtpip = lookup_rtpip.76_14;

marking necessary through lookup_rtpip.76_14 stmt lookup_rtpip.76_14 = D.44014_13->rtpip;
processing: lookup_rtpip.76_14 = D.44014_13->rtpip;

marking necessary through D.44014_13 stmt D.44014_13 = smh_8->mparams;
processing: D.44014_13 = smh_8->mparams;

processing: sdp_port = sdp_port.77_33;

marking necessary through sdp_port.77_33 stmt sdp_port.77_33 = engine_12->local_sdp_port;
processing: sdp_port.77_33 = engine_12->local_sdp_port;

marking necessary through engine_12 stmt engine_12 = &smh_8->engines[type_5(D)]{lb: 0 sz: 11416};
processing: engine_12 = &smh_8->engines[type_5(D)]{lb: 0 sz: 11416};

processing: D.44034_35 = D.44014_34->remote_ip;

marking necessary through D.44014_34 stmt D.44014_34 = smh_8->mparams;
processing: D.44014_34 = smh_8->mparams;

processing: if (D.44034_35 == 0B)

processing: if (use_ip_1 != 0B)

marking necessary through use_ip_1 stmt use_ip_1 = PHI <use_ip_42(21), use_ip_42(25), use_ip_47(26)>
processing: use_ip_1 = PHI <use_ip_42(21), use_ip_42(25), use_ip_47(26)>

marking necessary through use_ip_47 stmt use_ip_47 = D.44014_46->extrtpip;
Marking useful stmt: if (use_ip_42 == 0B)

Marking useful stmt: if (D.48030_108 == 0)

processing: if (D.48030_108 == 0)

marking necessary through D.48030_108 stmt D.48030_108 = PHI <1(22), 1(23), 0(24)>
processing: D.48030_108 = PHI <1(22), 1(23), 0(24)>

Marking useful stmt: if (D.44041_44 == 0B)

Marking useful stmt: if (D.48031_107 == 0)

processing: if (D.48031_107 == 0)

marking necessary through D.48031_107 stmt D.48031_107 = MEM[(const char *)D.44041_44];
processing: D.48031_107 = MEM[(const char *)D.44041_44];

marking necessary through D.44041_44 stmt D.44041_44 = D.44014_43->extrtpip;
processing: D.44041_44 = D.44014_43->extrtpip;

marking necessary through D.44014_43 stmt D.44014_43 = smh_8->mparams;
processing: D.44014_43 = smh_8->mparams;

processing: if (D.44041_44 == 0B)

processing: if (use_ip_42 == 0B)

processing: use_ip_47 = D.44014_46->extrtpip;

marking necessary through D.44014_46 stmt D.44014_46 = smh_8->mparams;
processing: D.44014_46 = smh_8->mparams;

processing: if (sdp_port.77_29 == 0)

Marking useful stmt: if (D.44025_20 != 0)

marking necessary through sdp_port.77_29 stmt sdp_port.77_29 = engine_12->local_sdp_port;
processing: sdp_port.77_29 = engine_12->local_sdp_port;

processing: if (D.44025_20 != 0)

marking necessary through D.44025_20 stmt D.44025_20 = engine_12->adv_sdp_port;
processing: D.44025_20 = engine_12->adv_sdp_port;

processing: if (D.44021_17 != 0)

processing: if (session_7(D) == 0B)

processing: switch_channel_set_variable_printf (D.44020_70, "local_video_port", "%d", D.44057_72);

marking necessary through D.44020_70 stmt D.44020_70 = session_7(D)->channel;
marking necessary through D.44057_72 stmt D.44057_72 = (int) sdp_port.78_71;
processing: D.44057_72 = (int) sdp_port.78_71;

marking necessary through sdp_port.78_71 stmt sdp_port.78_71 = sdp_port;
processing: sdp_port.78_71 = sdp_port;

processing: D.44020_70 = session_7(D)->channel;

processing: switch_channel_set_variable_var_check (D.44020_68, "local_video_ip", D.44058_69, 1);

marking necessary through D.44020_68 stmt D.44020_68 = session_7(D)->channel;
marking necessary through D.44058_69 stmt D.44058_69 = engine_12->adv_sdp_ip;
processing: D.44058_69 = engine_12->adv_sdp_ip;

processing: D.44020_68 = session_7(D)->channel;

processing: switch_channel_set_variable_var_check (D.44020_66, "advertised_media_ip", D.44058_67, 1);

marking necessary through D.44020_66 stmt D.44020_66 = session_7(D)->channel;
marking necessary through D.44058_67 stmt D.44058_67 = engine_12->adv_sdp_ip;
processing: D.44058_67 = engine_12->adv_sdp_ip;

processing: D.44020_66 = session_7(D)->channel;

processing: switch_channel_set_variable_printf (D.44020_63, "local_media_port", "%d", D.44057_65);

marking necessary through D.44020_63 stmt D.44020_63 = session_7(D)->channel;
marking necessary through D.44057_65 stmt D.44057_65 = (int) sdp_port.78_64;
processing: D.44057_65 = (int) sdp_port.78_64;

marking necessary through sdp_port.78_64 stmt sdp_port.78_64 = sdp_port;
processing: sdp_port.78_64 = sdp_port;

processing: D.44020_63 = session_7(D)->channel;

processing: switch_channel_set_variable_var_check (D.44020_61, "local_media_ip", D.44056_62, 1);

marking necessary through D.44020_61 stmt D.44020_61 = session_7(D)->channel;
marking necessary through D.44056_62 stmt D.44056_62 = engine_12->local_sdp_ip;
processing: D.44056_62 = engine_12->local_sdp_ip;

processing: D.44020_61 = session_7(D)->channel;

processing: engine_12->adv_sdp_ip = D.44053_60;

marking necessary through D.44053_60 stmt D.44053_60 = D.44014_57->adv_sdp_audio_ip;
processing: D.44053_60 = D.44014_57->adv_sdp_audio_ip;

marking necessary through D.44014_57 stmt D.44014_57 = smh_8->mparams;
processing: D.44014_57 = smh_8->mparams;

processing: D.44014_57->adv_sdp_audio_ip = D.44041_59;

marking necessary through D.44041_59 stmt D.44041_59 = D.44014_57->extrtpip;
processing: D.44041_59 = D.44014_57->extrtpip;

processing: D.44014_57->extrtpip = D.44052_58;

processing: D.44052_58 = switch_core_perform_session_strdup (session_7(D), use_ip_2, "src/switch_core_media.c", &__func__, 4515);

marking necessary through use_ip_2 stmt use_ip_2 = PHI <use_ip_52(30), use_ip_54(31), use_ip_50(29)>
processing: use_ip_2 = PHI <use_ip_52(30), use_ip_54(31), use_ip_50(29)>

marking necessary through use_ip_52 stmt use_ip_52 = D.44014_51->rtpip;
marking necessary through use_ip_54 stmt use_ip_54 = D.44014_53->rtpip;
marking necessary through use_ip_50 stmt use_ip_50 = lookup_rtpip;
processing: use_ip_50 = lookup_rtpip;

processing: use_ip_54 = D.44014_53->rtpip;

marking necessary through D.44014_53 stmt D.44014_53 = smh_8->mparams;
processing: D.44014_53 = smh_8->mparams;

processing: use_ip_52 = D.44014_51->rtpip;

marking necessary through D.44014_51 stmt D.44014_51 = smh_8->mparams;
processing: D.44014_51 = smh_8->mparams;

processing: engine_12->adv_sdp_port = sdp_port.78_55;

marking necessary through sdp_port.78_55 stmt sdp_port.78_55 = sdp_port;
processing: sdp_port.78_55 = sdp_port;

processing: D.44047_48 = switch_core_media_ext_address_lookup (session_7(D), &lookup_rtpip, &sdp_port, use_ip_1);

processing: use_ip_42 = switch_channel_get_variable_dup (D.44020_41, &vname, 1, -1);

marking necessary through D.44020_41 stmt D.44020_41 = session_7(D)->channel;
processing: D.44020_41 = session_7(D)->channel;

processing: switch_snprintf (&vname, 128, "rtp_adv_%s_ip", tstr_104);

marking necessary through tstr_104 stmt tstr_104 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
processing: tstr_104 = PHI <"audio"(2), "video"(3), "!ERR"(4)>

Marking useful stmt: switch (type_5(D)) <default: <L32>, case 0: <L33>, case 1: <L31>>

processing: switch (type_5(D)) <default: <L32>, case 0: <L33>, case 1: <L31>>

processing: switch_nat_add_mapping (sdp_port.77_40, 0, &sdp_port, 0);

marking necessary through sdp_port.77_40 stmt sdp_port.77_40 = engine_12->local_sdp_port;
processing: sdp_port.77_40 = engine_12->local_sdp_port;

processing: D.44037_39 = switch_core_media_check_nat (smh_8, D.44034_38);

marking necessary through D.44034_38 stmt D.44034_38 = D.44014_37->remote_ip;
processing: D.44034_38 = D.44014_37->remote_ip;

marking necessary through D.44014_37 stmt D.44014_37 = smh_8->mparams;
processing: D.44014_37 = smh_8->mparams;

processing: engine_12->local_sdp_ip = lookup_rtpip.76_32;

marking necessary through lookup_rtpip.76_32 stmt lookup_rtpip.76_32 = D.44014_31->rtpip;
processing: lookup_rtpip.76_32 = D.44014_31->rtpip;

marking necessary through D.44014_31 stmt D.44014_31 = smh_8->mparams;
processing: D.44014_31 = smh_8->mparams;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4475, session_7(D), 2, "No %s RTP ports available!\n", tstr_104);

processing: engine_12->local_sdp_port = D.44029_28;

processing: D.44029_28 = switch_rtp_request_port (lookup_rtpip.76_27);

marking necessary through lookup_rtpip.76_27 stmt lookup_rtpip.76_27 = D.44014_26->rtpip;
processing: lookup_rtpip.76_27 = D.44014_26->rtpip;

marking necessary through D.44014_26 stmt D.44014_26 = smh_8->mparams;
processing: D.44014_26 = smh_8->mparams;

processing: switch_rtp_release_port (lookup_rtpip.76_24, sdp_port.77_25);

Marking useful stmt: if (sdp_port.77_22 != 0)

marking necessary through lookup_rtpip.76_24 stmt lookup_rtpip.76_24 = D.44014_23->rtpip;
marking necessary through sdp_port.77_25 stmt sdp_port.77_25 = engine_12->local_sdp_port;
processing: sdp_port.77_25 = engine_12->local_sdp_port;

processing: lookup_rtpip.76_24 = D.44014_23->rtpip;

marking necessary through D.44014_23 stmt D.44014_23 = smh_8->mparams;
processing: D.44014_23 = smh_8->mparams;

processing: if (sdp_port.77_22 != 0)

marking necessary through sdp_port.77_22 stmt sdp_port.77_22 = engine_12->local_sdp_port;
processing: sdp_port.77_22 = engine_12->local_sdp_port;

processing: D.44023_19 = switch_channel_test_flag (D.44020_18, 29);

marking necessary through D.44020_18 stmt D.44020_18 = session_7(D)->channel;
processing: D.44020_18 = session_7(D)->channel;

processing: D.44021_17 = switch_channel_test_flag (D.44020_16, 15);

marking necessary through D.44020_16 stmt D.44020_16 = session_7(D)->channel;
processing: D.44020_16 = session_7(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 4450, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : tstr_6 = tstr_104;

Removed 1 of 115 statements (0%)
Removed 0 of 10 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  char * lookup_rtpip;
  switch_port_t sdp_port;
  const char * use_ip;
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  const char * tstr;
  char vname[128];
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_choose_port";
  static const char __func__[30] = "switch_core_media_choose_port";

  { Scope block #310 src/switch_core_media.c:4493 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #311 Originating from :#0 

    }

  }

  { Scope block #312 src/switch_core_media.c:4485 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #313 Originating from :#0 

    }

  }

  { Scope block #314 src/switch_core_media.c:4447 Originating from :  static const char * switch_media_type2str (switch_media_type_t); 
    switch_media_type_t type; (unused)

    { Scope block #315 Originating from :#0 

    }

  }

}
switch_core_media_choose_port (struct switch_core_session_t * session, switch_media_type_t type, int force)
{
  const char D.48031;
  int D.48030;
  const char D.48027;
  int D.48026;
  static const char __func__[30] = "switch_core_media_choose_port";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_choose_port";
  char vname[128];
  const char * tstr;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  const char * use_ip;
  switch_port_t sdp_port;
  char * lookup_rtpip;
  char * D.44058;
  int D.44057;
  char * D.44056;
  char * D.44053;
  char * D.44052;
  switch_port_t sdp_port.78;
  switch_status_t D.44047;
  char * D.44041;
  int D.44037;
  char * D.44034;
  switch_port_t D.44029;
  switch_port_t sdp_port.77;
  switch_port_t D.44025;
  uint32_t D.44023;
  uint32_t D.44021;
  struct switch_channel_t * D.44020;
  char * lookup_rtpip.76;
  struct switch_core_media_params_t * D.44014;
  switch_status_t D.44011;

<bb 2>:
  # DEBUG use_ip => 0B
  # DEBUG type => type_5(D)
  switch (type_5(D)) <default: <L32>, case 0: <L33>, case 1: <L31>>

<L31>:
  goto <bb 5> (<L33>);

<L32>:

  # tstr_104 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L33>:
  # DEBUG tstr => NULL
  vname = "";
  if (session_7(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  __assert_fail ("session", "src/switch_core_media.c", 4450, &__PRETTY_FUNCTION__);

<bb 7>:
  smh_8 = session_7(D)->media_handle;
  # DEBUG smh => smh_8
  if (smh_8 == 0B)
    goto <bb 35>;
  else
    goto <bb 8>;

<bb 8>:
  engine_12 = &smh_8->engines[type_5(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_12
  D.44014_13 = smh_8->mparams;
  lookup_rtpip.76_14 = D.44014_13->rtpip;
  lookup_rtpip = lookup_rtpip.76_14;
  if (force_15(D) == 0)
    goto <bb 9>;
  else
    goto <bb 12>;

<bb 9>:
  D.44020_16 = session_7(D)->channel;
  D.44021_17 = switch_channel_test_flag (D.44020_16, 15);
  if (D.44021_17 != 0)
    goto <bb 35>;
  else
    goto <bb 10>;

<bb 10>:
  D.44020_18 = session_7(D)->channel;
  D.44023_19 = switch_channel_test_flag (D.44020_18, 29);
  if (D.44023_19 != 0)
    goto <bb 35>;
  else
    goto <bb 11>;

<bb 11>:
  D.44025_20 = engine_12->adv_sdp_port;
  if (D.44025_20 != 0)
    goto <bb 35>;
  else
    goto <bb 12>;

<bb 12>:
  sdp_port.77_22 = engine_12->local_sdp_port;
  if (sdp_port.77_22 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.44014_23 = smh_8->mparams;
  lookup_rtpip.76_24 = D.44014_23->rtpip;
  sdp_port.77_25 = engine_12->local_sdp_port;
  switch_rtp_release_port (lookup_rtpip.76_24, sdp_port.77_25);

<bb 14>:
  D.44014_26 = smh_8->mparams;
  lookup_rtpip.76_27 = D.44014_26->rtpip;
  D.44029_28 = switch_rtp_request_port (lookup_rtpip.76_27);
  engine_12->local_sdp_port = D.44029_28;
  sdp_port.77_29 = engine_12->local_sdp_port;
  if (sdp_port.77_29 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4475, session_7(D), 2, "No %s RTP ports available!\n", tstr_104);
  goto <bb 35>;

<bb 16>:
  D.44014_31 = smh_8->mparams;
  lookup_rtpip.76_32 = D.44014_31->rtpip;
  engine_12->local_sdp_ip = lookup_rtpip.76_32;
  sdp_port.77_33 = engine_12->local_sdp_port;
  sdp_port = sdp_port.77_33;
  D.44014_34 = smh_8->mparams;
  D.44034_35 = D.44014_34->remote_ip;
  # DEBUG s => D.44034_35
  if (D.44034_35 == 0B)
    goto <bb 19>;
  else
    goto <bb 17>;

<bb 17>:
  D.48027_105 = MEM[(const char *)D.44034_35];
  if (D.48027_105 == 0)
    goto <bb 19>;
  else
    goto <bb 18>;

<bb 18>:

<bb 19>:
  # D.48026_106 = PHI <1(16), 1(17), 0(18)>
  if (D.48026_106 == 0)
    goto <bb 20>;
  else
    goto <bb 31>;

<bb 20>:
  D.44014_37 = smh_8->mparams;
  D.44034_38 = D.44014_37->remote_ip;
  D.44037_39 = switch_core_media_check_nat (smh_8, D.44034_38);
  if (D.44037_39 != 0)
    goto <bb 21>;
  else
    goto <bb 31>;

<bb 21>:
  sdp_port.77_40 = engine_12->local_sdp_port;
  switch_nat_add_mapping (sdp_port.77_40, 0, &sdp_port, 0);
  switch_snprintf (&vname, 128, "rtp_adv_%s_ip", tstr_104);
  D.44020_41 = session_7(D)->channel;
  use_ip_42 = switch_channel_get_variable_dup (D.44020_41, &vname, 1, -1);
  # DEBUG use_ip => use_ip_42
  if (use_ip_42 == 0B)
    goto <bb 22>;
  else
    goto <bb 27>;

<bb 22>:
  D.44014_43 = smh_8->mparams;
  D.44041_44 = D.44014_43->extrtpip;
  # DEBUG s => D.44041_44
  if (D.44041_44 == 0B)
    goto <bb 25>;
  else
    goto <bb 23>;

<bb 23>:
  D.48031_107 = MEM[(const char *)D.44041_44];
  if (D.48031_107 == 0)
    goto <bb 25>;
  else
    goto <bb 24>;

<bb 24>:

<bb 25>:
  # D.48030_108 = PHI <1(22), 1(23), 0(24)>
  if (D.48030_108 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  D.44014_46 = smh_8->mparams;
  use_ip_47 = D.44014_46->extrtpip;
  # DEBUG use_ip => use_ip_47

<bb 27>:
  # use_ip_1 = PHI <use_ip_42(21), use_ip_42(25), use_ip_47(26)>
  # DEBUG use_ip => use_ip_1
  if (use_ip_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.44047_48 = switch_core_media_ext_address_lookup (session_7(D), &lookup_rtpip, &sdp_port, use_ip_1);
  if (D.44047_48 != 0)
    goto <bb 35>;
  else
    goto <bb 29>;

<bb 29>:
  use_ip_50 = lookup_rtpip;
  # DEBUG use_ip => use_ip_50
  goto <bb 32>;

<bb 30>:
  D.44014_51 = smh_8->mparams;
  use_ip_52 = D.44014_51->rtpip;
  # DEBUG use_ip => use_ip_52
  goto <bb 32>;

<bb 31>:
  D.44014_53 = smh_8->mparams;
  use_ip_54 = D.44014_53->rtpip;
  # DEBUG use_ip => use_ip_54

<bb 32>:
  # use_ip_2 = PHI <use_ip_52(30), use_ip_54(31), use_ip_50(29)>
  # DEBUG use_ip => use_ip_2
  sdp_port.78_55 = sdp_port;
  engine_12->adv_sdp_port = sdp_port.78_55;
  D.44014_57 = smh_8->mparams;
  D.44052_58 = switch_core_perform_session_strdup (session_7(D), use_ip_2, "src/switch_core_media.c", &__func__, 4515);
  D.44014_57->extrtpip = D.44052_58;
  D.44041_59 = D.44014_57->extrtpip;
  D.44014_57->adv_sdp_audio_ip = D.44041_59;
  D.44053_60 = D.44014_57->adv_sdp_audio_ip;
  engine_12->adv_sdp_ip = D.44053_60;
  if (type_5(D) == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.44020_61 = session_7(D)->channel;
  D.44056_62 = engine_12->local_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_61, "local_media_ip", D.44056_62, 1);
  D.44020_63 = session_7(D)->channel;
  sdp_port.78_64 = sdp_port;
  D.44057_65 = (int) sdp_port.78_64;
  switch_channel_set_variable_printf (D.44020_63, "local_media_port", "%d", D.44057_65);
  D.44020_66 = session_7(D)->channel;
  D.44058_67 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_66, "advertised_media_ip", D.44058_67, 1);
  goto <bb 35>;

<bb 34>:
  D.44020_68 = session_7(D)->channel;
  D.44058_69 = engine_12->adv_sdp_ip;
  switch_channel_set_variable_var_check (D.44020_68, "local_video_ip", D.44058_69, 1);
  D.44020_70 = session_7(D)->channel;
  sdp_port.78_71 = sdp_port;
  D.44057_72 = (int) sdp_port.78_71;
  switch_channel_set_variable_printf (D.44020_70, "local_video_port", "%d", D.44057_72);

<bb 35>:
  # D.44011_3 = PHI <1(7), 0(10), 1(15), 1(28), 0(34), 0(9), 0(11), 0(33)>
  return D.44011_3;

}



;; Function switch_core_media_choose_ports (switch_core_media_choose_ports)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 7 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: # DEBUG status => 0

Marking useful stmt: status_5 = switch_core_media_choose_port (session_4(D), 0, 0);

Marking useful stmt: # DEBUG status => status_5

Marking useful stmt: switch_core_media_check_video_codecs (session_4(D));

Marking useful stmt: D.44002_8 = switch_channel_test_flag (D.44001_7, 98);

Marking useful stmt: switch_core_media_choose_port (session_4(D), 1, 0);

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: return status_1;


Processing worklist:
processing: return status_1;

marking necessary through status_1 stmt status_1 = PHI <0(2), status_5(3), status_5(4), status_5(5), status_5(6)>
processing: status_1 = PHI <0(2), status_5(3), status_5(4), status_5(5), status_5(6)>

Marking useful stmt: if (audio_3(D) != 0)

Marking useful stmt: if (status_5 == 0)

Marking useful stmt: if (video_6(D) != 0)

Marking useful stmt: if (D.44002_8 != 0)

processing: if (D.44002_8 != 0)

processing: if (video_6(D) != 0)

processing: if (status_5 == 0)

processing: if (audio_3(D) != 0)

processing: switch_core_media_choose_port (session_4(D), 1, 0);

processing: D.44002_8 = switch_channel_test_flag (D.44001_7, 98);

marking necessary through D.44001_7 stmt D.44001_7 = session_4(D)->channel;
processing: D.44001_7 = session_4(D)->channel;

processing: switch_core_media_check_video_codecs (session_4(D));

processing: status_5 = switch_core_media_choose_port (session_4(D), 0, 0);


Eliminating unnecessary statements:
Removed 0 of 13 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_choose_ports (struct switch_core_session_t * session, switch_bool_t audio, switch_bool_t video)
{
  switch_status_t status;
  uint32_t D.44002;
  struct switch_channel_t * D.44001;

<bb 2>:
  # DEBUG status => 0
  if (audio_3(D) != 0)
    goto <bb 3>;
  else
    goto <bb 7>;

<bb 3>:
  status_5 = switch_core_media_choose_port (session_4(D), 0, 0);
  # DEBUG status => status_5
  if (status_5 == 0)
    goto <bb 4>;
  else
    goto <bb 7>;

<bb 4>:
  if (video_6(D) != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

<bb 5>:
  switch_core_media_check_video_codecs (session_4(D));
  D.44001_7 = session_4(D)->channel;
  D.44002_8 = switch_channel_test_flag (D.44001_7, 98);
  if (D.44002_8 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  switch_core_media_choose_port (session_4(D), 1, 0);

<bb 7>:
  # status_1 = PHI <0(2), status_5(3), status_5(4), status_5(5), status_5(6)>
  # DEBUG status => status_1
  return status_1;

}



;; Function switch_core_media_deactivate_rtp (switch_core_media_deactivate_rtp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 29 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 18 }
;; 12 succs { 15 13 }
;; 13 succs { 15 14 }
;; 14 succs { 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 29 }
;; 23 succs { 26 24 }
;; 24 succs { 26 25 }
;; 25 succs { 26 }
;; 26 succs { 27 29 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4554, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: # DEBUG D#18 => &smh_2->engines

Marking useful stmt: # DEBUG a_engine => D#18

Marking useful stmt: # DEBUG D#19 => &smh_2->engines[1]

Marking useful stmt: # DEBUG v_engine => D#19

Marking useful stmt: switch_channel_clear_flag (D.43956_6, 113);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.up = 0;

Marking useful stmt: switch_thread_join (&st, D.43953_7);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread = 0B;

Marking useful stmt: switch_rtp_destroy (D.43960_9);

Marking useful stmt: switch_rtp_release_port (D.43966_12, D.43962_13);

Marking useful stmt: # DEBUG s => D.43969_16

Marking useful stmt: D.43973_20 = switch_core_media_check_nat (smh_2, D.43969_19);

Marking useful stmt: switch_nat_del_mapping (D.43962_21, 0);

Marking useful stmt: switch_nat_del_mapping (D.43976_23, 0);

Marking useful stmt: switch_rtp_destroy (D.43980_25);

Marking useful stmt: switch_rtp_release_port (D.43966_28, D.43982_29);

Marking useful stmt: # DEBUG s => D.43969_32

Marking useful stmt: D.43990_36 = switch_core_media_check_nat (smh_2, D.43969_35);

Marking useful stmt: switch_nat_del_mapping (D.43982_37, 0);

Marking useful stmt: switch_nat_del_mapping (D.43993_39, 0);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_nat_del_mapping (D.43993_39, 0);

Marking useful stmt: if (D.43990_36 != 0)

marking necessary through D.43993_39 stmt D.43993_39 = D.43982_38 + 1;
processing: D.43993_39 = D.43982_38 + 1;

marking necessary through D.43982_38 stmt D.43982_38 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
processing: D.43982_38 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.43990_36 != 0)

Marking useful stmt: if (D.48040_62 == 0)

processing: if (D.48040_62 == 0)

Marking useful stmt: if (D.43982_30 != 0)

marking necessary through D.48040_62 stmt D.48040_62 = PHI <1(23), 1(24), 0(25)>
processing: D.48040_62 = PHI <1(23), 1(24), 0(25)>

Marking useful stmt: if (D.43969_32 == 0B)

Marking useful stmt: if (D.48041_61 == 0)

processing: if (D.48041_61 == 0)

marking necessary through D.48041_61 stmt D.48041_61 = MEM[(const char *)D.43969_32];
processing: D.48041_61 = MEM[(const char *)D.43969_32];

marking necessary through D.43969_32 stmt D.43969_32 = D.43965_31->remote_ip;
processing: D.43969_32 = D.43965_31->remote_ip;

marking necessary through D.43965_31 stmt D.43965_31 = smh_2->mparams;
processing: D.43965_31 = smh_2->mparams;

processing: if (D.43969_32 == 0B)

processing: if (D.43982_30 != 0)

Marking useful stmt: if (smh_2 == 0B)

marking necessary through D.43982_30 stmt D.43982_30 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
processing: D.43982_30 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;

processing: if (smh_2 == 0B)

processing: switch_nat_del_mapping (D.43982_37, 0);

marking necessary through D.43982_37 stmt D.43982_37 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
processing: D.43982_37 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;

processing: D.43990_36 = switch_core_media_check_nat (smh_2, D.43969_35);

marking necessary through D.43969_35 stmt D.43969_35 = D.43965_34->remote_ip;
processing: D.43969_35 = D.43965_34->remote_ip;

marking necessary through D.43965_34 stmt D.43965_34 = smh_2->mparams;
processing: D.43965_34 = smh_2->mparams;

processing: switch_rtp_release_port (D.43966_28, D.43982_29);

Marking useful stmt: if (D.43982_26 != 0)

marking necessary through D.43966_28 stmt D.43966_28 = D.43965_27->rtpip;
marking necessary through D.43982_29 stmt D.43982_29 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
processing: D.43982_29 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;

processing: D.43966_28 = D.43965_27->rtpip;

marking necessary through D.43965_27 stmt D.43965_27 = smh_2->mparams;
processing: D.43965_27 = smh_2->mparams;

processing: if (D.43982_26 != 0)

Marking useful stmt: if (D.43977_24 != 0B)

marking necessary through D.43982_26 stmt D.43982_26 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
processing: D.43982_26 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;

processing: if (D.43977_24 != 0B)

marking necessary through D.43977_24 stmt D.43977_24 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.43977_24 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: switch_rtp_destroy (D.43980_25);

marking necessary through D.43980_25 stmt D.43980_25 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.43980_25 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: switch_nat_del_mapping (D.43976_23, 0);

Marking useful stmt: if (D.43973_20 != 0)

marking necessary through D.43976_23 stmt D.43976_23 = D.43962_22 + 1;
processing: D.43976_23 = D.43962_22 + 1;

marking necessary through D.43962_22 stmt D.43962_22 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
processing: D.43962_22 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;

processing: if (D.43973_20 != 0)

Marking useful stmt: if (D.48036_60 == 0)

processing: if (D.48036_60 == 0)

Marking useful stmt: if (D.43962_14 != 0)

marking necessary through D.48036_60 stmt D.48036_60 = PHI <1(12), 1(13), 0(14)>
processing: D.48036_60 = PHI <1(12), 1(13), 0(14)>

Marking useful stmt: if (D.43969_16 == 0B)

Marking useful stmt: if (D.48037_59 == 0)

processing: if (D.48037_59 == 0)

marking necessary through D.48037_59 stmt D.48037_59 = MEM[(const char *)D.43969_16];
processing: D.48037_59 = MEM[(const char *)D.43969_16];

marking necessary through D.43969_16 stmt D.43969_16 = D.43965_15->remote_ip;
processing: D.43969_16 = D.43965_15->remote_ip;

marking necessary through D.43965_15 stmt D.43965_15 = smh_2->mparams;
processing: D.43965_15 = smh_2->mparams;

processing: if (D.43969_16 == 0B)

processing: if (D.43962_14 != 0)

marking necessary through D.43962_14 stmt D.43962_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
processing: D.43962_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;

processing: switch_nat_del_mapping (D.43962_21, 0);

marking necessary through D.43962_21 stmt D.43962_21 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
processing: D.43962_21 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;

processing: D.43973_20 = switch_core_media_check_nat (smh_2, D.43969_19);

marking necessary through D.43969_19 stmt D.43969_19 = D.43965_18->remote_ip;
processing: D.43969_19 = D.43965_18->remote_ip;

marking necessary through D.43965_18 stmt D.43965_18 = smh_2->mparams;
processing: D.43965_18 = smh_2->mparams;

processing: switch_rtp_release_port (D.43966_12, D.43962_13);

Marking useful stmt: if (D.43962_10 != 0)

marking necessary through D.43966_12 stmt D.43966_12 = D.43965_11->rtpip;
marking necessary through D.43962_13 stmt D.43962_13 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
processing: D.43962_13 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;

processing: D.43966_12 = D.43965_11->rtpip;

marking necessary through D.43965_11 stmt D.43965_11 = smh_2->mparams;
processing: D.43965_11 = smh_2->mparams;

processing: if (D.43962_10 != 0)

Marking useful stmt: if (D.43957_8 != 0B)

marking necessary through D.43962_10 stmt D.43962_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
processing: D.43962_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;

processing: if (D.43957_8 != 0B)

marking necessary through D.43957_8 stmt D.43957_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
processing: D.43957_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;

processing: switch_rtp_destroy (D.43960_9);

marking necessary through D.43960_9 stmt D.43960_9 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
processing: D.43960_9 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;

processing: MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread = 0B;

Marking useful stmt: if (D.43953_5 != 0B)

processing: if (D.43953_5 != 0B)

marking necessary through D.43953_5 stmt D.43953_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
processing: D.43953_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;

processing: switch_thread_join (&st, D.43953_7);

marking necessary through D.43953_7 stmt D.43953_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
processing: D.43953_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;

processing: MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.up = 0;

processing: switch_channel_clear_flag (D.43956_6, 113);

marking necessary through D.43956_6 stmt D.43956_6 = session_1(D)->channel;
processing: D.43956_6 = session_1(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 4554, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 74 statements (0%)
Removed 0 of 6 PHI nodes (0%)
switch_core_media_deactivate_rtp (struct switch_core_session_t * session)
{
  const char D.48041;
  int D.48040;
  const char D.48037;
  int D.48036;
  switch_status_t st;
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_deactivate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  switch_port_t D.43993;
  int D.43990;
  switch_port_t D.43982;
  struct switch_rtp_t * * D.43980;
  struct switch_rtp_t * D.43977;
  switch_port_t D.43976;
  int D.43973;
  char * D.43969;
  char * D.43966;
  struct switch_core_media_params_t * D.43965;
  switch_port_t D.43962;
  struct switch_rtp_t * * D.43960;
  struct switch_rtp_t * D.43957;
  struct switch_channel_t * D.43956;
  struct switch_thread_t * D.43953;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4554, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 29>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#18 => &smh_2->engines
  # DEBUG a_engine => D#18
  # DEBUG D#19 => &smh_2->engines[1]
  # DEBUG v_engine => D#19
  D.43953_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
  if (D.43953_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.43956_6 = session_1(D)->channel;
  switch_channel_clear_flag (D.43956_6, 113);
  MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.up = 0;
  D.43953_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread;
  switch_thread_join (&st, D.43953_7);
  MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].media_thread = 0B;

<bb 7>:
  D.43957_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  if (D.43957_8 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.43960_9 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  switch_rtp_destroy (D.43960_9);
  goto <bb 11>;

<bb 9>:
  D.43962_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  if (D.43962_10 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.43965_11 = smh_2->mparams;
  D.43966_12 = D.43965_11->rtpip;
  D.43962_13 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  switch_rtp_release_port (D.43966_12, D.43962_13);

<bb 11>:
  D.43962_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  if (D.43962_14 != 0)
    goto <bb 12>;
  else
    goto <bb 18>;

<bb 12>:
  D.43965_15 = smh_2->mparams;
  D.43969_16 = D.43965_15->remote_ip;
  # DEBUG s => D.43969_16
  if (D.43969_16 == 0B)
    goto <bb 15>;
  else
    goto <bb 13>;

<bb 13>:
  D.48037_59 = MEM[(const char *)D.43969_16];
  if (D.48037_59 == 0)
    goto <bb 15>;
  else
    goto <bb 14>;

<bb 14>:

<bb 15>:
  # D.48036_60 = PHI <1(12), 1(13), 0(14)>
  if (D.48036_60 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.43965_18 = smh_2->mparams;
  D.43969_19 = D.43965_18->remote_ip;
  D.43973_20 = switch_core_media_check_nat (smh_2, D.43969_19);
  if (D.43973_20 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.43962_21 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  switch_nat_del_mapping (D.43962_21, 0);
  D.43962_22 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].local_sdp_port;
  D.43976_23 = D.43962_22 + 1;
  switch_nat_del_mapping (D.43976_23, 0);

<bb 18>:
  D.43977_24 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  if (D.43977_24 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.43980_25 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_destroy (D.43980_25);
  goto <bb 22>;

<bb 20>:
  D.43982_26 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  if (D.43982_26 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.43965_27 = smh_2->mparams;
  D.43966_28 = D.43965_27->rtpip;
  D.43982_29 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  switch_rtp_release_port (D.43966_28, D.43982_29);

<bb 22>:
  D.43982_30 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  if (D.43982_30 != 0)
    goto <bb 23>;
  else
    goto <bb 29>;

<bb 23>:
  D.43965_31 = smh_2->mparams;
  D.43969_32 = D.43965_31->remote_ip;
  # DEBUG s => D.43969_32
  if (D.43969_32 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;

<bb 24>:
  D.48041_61 = MEM[(const char *)D.43969_32];
  if (D.48041_61 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;

<bb 25>:

<bb 26>:
  # D.48040_62 = PHI <1(23), 1(24), 0(25)>
  if (D.48040_62 == 0)
    goto <bb 27>;
  else
    goto <bb 29>;

<bb 27>:
  D.43965_34 = smh_2->mparams;
  D.43969_35 = D.43965_34->remote_ip;
  D.43990_36 = switch_core_media_check_nat (smh_2, D.43969_35);
  if (D.43990_36 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.43982_37 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  switch_nat_del_mapping (D.43982_37, 0);
  D.43982_38 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.43993_39 = D.43982_38 + 1;
  switch_nat_del_mapping (D.43993_39, 0);

<bb 29>:
  return;

}



;; Function switch_media_handle_destroy (switch_media_handle_destroy)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 38 5 }
;; 5 succs { 6 10 }
;; 6 succs { 7 10 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 11 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 18 }
;; 14 succs { 15 18 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 26 }
;; 22 succs { 23 26 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 27 26 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 34 }
;; 30 succs { 31 34 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 35 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 1378, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: # DEBUG D#20 => &smh_2->engines

Marking useful stmt: # DEBUG a_engine => D#20

Marking useful stmt: # DEBUG D#21 => &smh_2->engines[1]

Marking useful stmt: # DEBUG v_engine => D#21

Marking useful stmt: # DEBUG codec => D.46503_5

Marking useful stmt: switch_core_codec_destroy (D.46503_7);

Marking useful stmt: # DEBUG codec => D.46507_8

Marking useful stmt: switch_core_codec_destroy (D.46507_10);

Marking useful stmt: # DEBUG codec => D.46511_11

Marking useful stmt: switch_core_codec_destroy (D.46511_13);

Marking useful stmt: # DEBUG codec => D.46515_14

Marking useful stmt: switch_core_codec_destroy (D.46515_16);

Marking useful stmt: switch_core_session_unset_read_codec (session_1(D));

Marking useful stmt: switch_core_session_unset_write_codec (session_1(D));

Marking useful stmt: switch_core_media_deactivate_rtp (session_1(D));

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_core_media_deactivate_rtp (session_1(D));

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: switch_core_session_unset_write_codec (session_1(D));

processing: switch_core_session_unset_read_codec (session_1(D));

processing: switch_core_codec_destroy (D.46515_16);

Marking useful stmt: if (iftmp.104_55 != 0)

marking necessary through D.46515_16 stmt D.46515_16 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
processing: D.46515_16 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;

processing: if (iftmp.104_55 != 0)

marking necessary through iftmp.104_55 stmt iftmp.104_55 = PHI <1(33), 0(34)>
processing: iftmp.104_55 = PHI <1(33), 0(34)>

Marking useful stmt: if (D.48074_53 != 0B)

Marking useful stmt: if (D.46515_14 != 0B)

Marking useful stmt: if (D.48076_51 != 0)

Marking useful stmt: if (D.48075_52 != 0B)

Marking useful stmt: if (D.48073_54 != 0B)

processing: if (D.48073_54 != 0B)

marking necessary through D.48073_54 stmt D.48073_54 = MEM[(struct switch_codec_t *)smh_2 + 13068B].implementation;
processing: D.48073_54 = MEM[(struct switch_codec_t *)smh_2 + 13068B].implementation;

processing: if (D.48075_52 != 0B)

marking necessary through D.48075_52 stmt D.48075_52 = MEM[(struct switch_codec_t *)smh_2 + 13068B].mutex;
processing: D.48075_52 = MEM[(struct switch_codec_t *)smh_2 + 13068B].mutex;

processing: if (D.48076_51 != 0)

marking necessary through D.48076_51 stmt D.48076_51 = D.48077_50 & 256;
processing: D.48076_51 = D.48077_50 & 256;

marking necessary through D.48077_50 stmt D.48077_50 = MEM[(struct switch_codec_t *)smh_2 + 13068B].flags;
processing: D.48077_50 = MEM[(struct switch_codec_t *)smh_2 + 13068B].flags;

processing: if (D.46515_14 != 0B)

marking necessary through D.46515_14 stmt D.46515_14 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
processing: D.46515_14 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;

processing: if (D.48074_53 != 0B)

marking necessary through D.48074_53 stmt D.48074_53 = MEM[(struct switch_codec_t *)smh_2 + 13068B].codec_interface;
processing: D.48074_53 = MEM[(struct switch_codec_t *)smh_2 + 13068B].codec_interface;

processing: switch_core_codec_destroy (D.46511_13);

Marking useful stmt: if (iftmp.104_48 != 0)

marking necessary through D.46511_13 stmt D.46511_13 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
processing: D.46511_13 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;

processing: if (iftmp.104_48 != 0)

marking necessary through iftmp.104_48 stmt iftmp.104_48 = PHI <1(25), 0(26)>
processing: iftmp.104_48 = PHI <1(25), 0(26)>

Marking useful stmt: if (D.48065_46 != 0B)

Marking useful stmt: if (D.46511_11 != 0B)

Marking useful stmt: if (D.48067_44 != 0)

Marking useful stmt: if (D.48066_45 != 0B)

Marking useful stmt: if (D.48064_47 != 0B)

processing: if (D.48064_47 != 0B)

marking necessary through D.48064_47 stmt D.48064_47 = MEM[(struct switch_codec_t *)smh_2 + 13020B].implementation;
processing: D.48064_47 = MEM[(struct switch_codec_t *)smh_2 + 13020B].implementation;

processing: if (D.48066_45 != 0B)

marking necessary through D.48066_45 stmt D.48066_45 = MEM[(struct switch_codec_t *)smh_2 + 13020B].mutex;
processing: D.48066_45 = MEM[(struct switch_codec_t *)smh_2 + 13020B].mutex;

processing: if (D.48067_44 != 0)

marking necessary through D.48067_44 stmt D.48067_44 = D.48068_43 & 256;
processing: D.48067_44 = D.48068_43 & 256;

marking necessary through D.48068_43 stmt D.48068_43 = MEM[(struct switch_codec_t *)smh_2 + 13020B].flags;
processing: D.48068_43 = MEM[(struct switch_codec_t *)smh_2 + 13020B].flags;

processing: if (D.46511_11 != 0B)

marking necessary through D.46511_11 stmt D.46511_11 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
processing: D.46511_11 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;

processing: if (D.48065_46 != 0B)

marking necessary through D.48065_46 stmt D.48065_46 = MEM[(struct switch_codec_t *)smh_2 + 13020B].codec_interface;
processing: D.48065_46 = MEM[(struct switch_codec_t *)smh_2 + 13020B].codec_interface;

processing: switch_core_codec_destroy (D.46507_10);

Marking useful stmt: if (iftmp.104_41 != 0)

marking necessary through D.46507_10 stmt D.46507_10 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
processing: D.46507_10 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;

processing: if (iftmp.104_41 != 0)

marking necessary through iftmp.104_41 stmt iftmp.104_41 = PHI <1(17), 0(18)>
processing: iftmp.104_41 = PHI <1(17), 0(18)>

Marking useful stmt: if (D.48056_39 != 0B)

Marking useful stmt: if (D.46507_8 != 0B)

Marking useful stmt: if (D.48058_37 != 0)

Marking useful stmt: if (D.48057_38 != 0B)

Marking useful stmt: if (D.48055_40 != 0B)

processing: if (D.48055_40 != 0B)

marking necessary through D.48055_40 stmt D.48055_40 = MEM[(struct switch_codec_t *)smh_2 + 1652B].implementation;
processing: D.48055_40 = MEM[(struct switch_codec_t *)smh_2 + 1652B].implementation;

processing: if (D.48057_38 != 0B)

marking necessary through D.48057_38 stmt D.48057_38 = MEM[(struct switch_codec_t *)smh_2 + 1652B].mutex;
processing: D.48057_38 = MEM[(struct switch_codec_t *)smh_2 + 1652B].mutex;

processing: if (D.48058_37 != 0)

marking necessary through D.48058_37 stmt D.48058_37 = D.48059_36 & 256;
processing: D.48058_37 = D.48059_36 & 256;

marking necessary through D.48059_36 stmt D.48059_36 = MEM[(struct switch_codec_t *)smh_2 + 1652B].flags;
processing: D.48059_36 = MEM[(struct switch_codec_t *)smh_2 + 1652B].flags;

processing: if (D.46507_8 != 0B)

marking necessary through D.46507_8 stmt D.46507_8 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
processing: D.46507_8 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;

processing: if (D.48056_39 != 0B)

marking necessary through D.48056_39 stmt D.48056_39 = MEM[(struct switch_codec_t *)smh_2 + 1652B].codec_interface;
processing: D.48056_39 = MEM[(struct switch_codec_t *)smh_2 + 1652B].codec_interface;

processing: switch_core_codec_destroy (D.46503_7);

Marking useful stmt: if (iftmp.104_34 != 0)

marking necessary through D.46503_7 stmt D.46503_7 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
processing: D.46503_7 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;

processing: if (iftmp.104_34 != 0)

marking necessary through iftmp.104_34 stmt iftmp.104_34 = PHI <1(9), 0(10)>
processing: iftmp.104_34 = PHI <1(9), 0(10)>

Marking useful stmt: if (D.48047_32 != 0B)

Marking useful stmt: if (D.46503_5 != 0B)

Marking useful stmt: if (D.48049_30 != 0)

Marking useful stmt: if (D.48048_31 != 0B)

Marking useful stmt: if (D.48046_33 != 0B)

processing: if (D.48046_33 != 0B)

marking necessary through D.48046_33 stmt D.48046_33 = MEM[(struct switch_codec_t *)smh_2 + 1604B].implementation;
processing: D.48046_33 = MEM[(struct switch_codec_t *)smh_2 + 1604B].implementation;

processing: if (D.48048_31 != 0B)

marking necessary through D.48048_31 stmt D.48048_31 = MEM[(struct switch_codec_t *)smh_2 + 1604B].mutex;
processing: D.48048_31 = MEM[(struct switch_codec_t *)smh_2 + 1604B].mutex;

processing: if (D.48049_30 != 0)

marking necessary through D.48049_30 stmt D.48049_30 = D.48050_29 & 256;
processing: D.48049_30 = D.48050_29 & 256;

marking necessary through D.48050_29 stmt D.48050_29 = MEM[(struct switch_codec_t *)smh_2 + 1604B].flags;
processing: D.48050_29 = MEM[(struct switch_codec_t *)smh_2 + 1604B].flags;

processing: if (D.46503_5 != 0B)

marking necessary through D.46503_5 stmt D.46503_5 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
processing: D.46503_5 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;

processing: if (D.48047_32 != 0B)

marking necessary through D.48047_32 stmt D.48047_32 = MEM[(struct switch_codec_t *)smh_2 + 1604B].codec_interface;
processing: D.48047_32 = MEM[(struct switch_codec_t *)smh_2 + 1604B].codec_interface;

processing: __assert_fail ("session", "src/switch_core_media.c", 1378, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 73 statements (0%)
Removed 0 of 8 PHI nodes (0%)
switch_media_handle_destroy (struct switch_core_session_t * session)
{
  int iftmp.104;
  uint32_t D.48077;
  uint32_t D.48076;
  struct switch_mutex_t * D.48075;
  struct switch_codec_interface_t * D.48074;
  const struct switch_codec_implementation_t * D.48073;
  int iftmp.104;
  uint32_t D.48068;
  uint32_t D.48067;
  struct switch_mutex_t * D.48066;
  struct switch_codec_interface_t * D.48065;
  const struct switch_codec_implementation_t * D.48064;
  int iftmp.104;
  uint32_t D.48059;
  uint32_t D.48058;
  struct switch_mutex_t * D.48057;
  struct switch_codec_interface_t * D.48056;
  const struct switch_codec_implementation_t * D.48055;
  int iftmp.104;
  uint32_t D.48050;
  uint32_t D.48049;
  struct switch_mutex_t * D.48048;
  struct switch_codec_interface_t * D.48047;
  const struct switch_codec_implementation_t * D.48046;
  static const char __PRETTY_FUNCTION__[28] = "switch_media_handle_destroy";
  struct switch_media_handle_t * smh;
  struct switch_codec_t * D.46515;
  struct switch_codec_t * D.46511;
  struct switch_codec_t * D.46507;
  struct switch_codec_t * D.46503;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 1378, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 38>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#20 => &smh_2->engines
  # DEBUG a_engine => D#20
  # DEBUG D#21 => &smh_2->engines[1]
  # DEBUG v_engine => D#21
  D.46503_5 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
  # DEBUG codec => D.46503_5
  if (D.46503_5 != 0B)
    goto <bb 6>;
  else
    goto <bb 10>;

<bb 6>:
  D.48050_29 = MEM[(struct switch_codec_t *)smh_2 + 1604B].flags;
  D.48049_30 = D.48050_29 & 256;
  if (D.48049_30 != 0)
    goto <bb 7>;
  else
    goto <bb 10>;

<bb 7>:
  D.48048_31 = MEM[(struct switch_codec_t *)smh_2 + 1604B].mutex;
  if (D.48048_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  D.48047_32 = MEM[(struct switch_codec_t *)smh_2 + 1604B].codec_interface;
  if (D.48047_32 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.48046_33 = MEM[(struct switch_codec_t *)smh_2 + 1604B].implementation;
  if (D.48046_33 != 0B)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:

<bb 11>:
  # iftmp.104_34 = PHI <1(9), 0(10)>
  if (iftmp.104_34 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:
  D.46503_7 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].read_codec;
  switch_core_codec_destroy (D.46503_7);

<bb 13>:
  D.46507_8 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
  # DEBUG codec => D.46507_8
  if (D.46507_8 != 0B)
    goto <bb 14>;
  else
    goto <bb 18>;

<bb 14>:
  D.48059_36 = MEM[(struct switch_codec_t *)smh_2 + 1652B].flags;
  D.48058_37 = D.48059_36 & 256;
  if (D.48058_37 != 0)
    goto <bb 15>;
  else
    goto <bb 18>;

<bb 15>:
  D.48057_38 = MEM[(struct switch_codec_t *)smh_2 + 1652B].mutex;
  if (D.48057_38 != 0B)
    goto <bb 16>;
  else
    goto <bb 18>;

<bb 16>:
  D.48056_39 = MEM[(struct switch_codec_t *)smh_2 + 1652B].codec_interface;
  if (D.48056_39 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.48055_40 = MEM[(struct switch_codec_t *)smh_2 + 1652B].implementation;
  if (D.48055_40 != 0B)
    goto <bb 19>;
  else
    goto <bb 18>;

<bb 18>:

<bb 19>:
  # iftmp.104_41 = PHI <1(17), 0(18)>
  if (iftmp.104_41 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.46507_10 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].write_codec;
  switch_core_codec_destroy (D.46507_10);

<bb 21>:
  D.46511_11 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
  # DEBUG codec => D.46511_11
  if (D.46511_11 != 0B)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.48068_43 = MEM[(struct switch_codec_t *)smh_2 + 13020B].flags;
  D.48067_44 = D.48068_43 & 256;
  if (D.48067_44 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.48066_45 = MEM[(struct switch_codec_t *)smh_2 + 13020B].mutex;
  if (D.48066_45 != 0B)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 24>:
  D.48065_46 = MEM[(struct switch_codec_t *)smh_2 + 13020B].codec_interface;
  if (D.48065_46 != 0B)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.48064_47 = MEM[(struct switch_codec_t *)smh_2 + 13020B].implementation;
  if (D.48064_47 != 0B)
    goto <bb 27>;
  else
    goto <bb 26>;

<bb 26>:

<bb 27>:
  # iftmp.104_48 = PHI <1(25), 0(26)>
  if (iftmp.104_48 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.46511_13 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].read_codec;
  switch_core_codec_destroy (D.46511_13);

<bb 29>:
  D.46515_14 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
  # DEBUG codec => D.46515_14
  if (D.46515_14 != 0B)
    goto <bb 30>;
  else
    goto <bb 34>;

<bb 30>:
  D.48077_50 = MEM[(struct switch_codec_t *)smh_2 + 13068B].flags;
  D.48076_51 = D.48077_50 & 256;
  if (D.48076_51 != 0)
    goto <bb 31>;
  else
    goto <bb 34>;

<bb 31>:
  D.48075_52 = MEM[(struct switch_codec_t *)smh_2 + 13068B].mutex;
  if (D.48075_52 != 0B)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.48074_53 = MEM[(struct switch_codec_t *)smh_2 + 13068B].codec_interface;
  if (D.48074_53 != 0B)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.48073_54 = MEM[(struct switch_codec_t *)smh_2 + 13068B].implementation;
  if (D.48073_54 != 0B)
    goto <bb 35>;
  else
    goto <bb 34>;

<bb 34>:

<bb 35>:
  # iftmp.104_55 = PHI <1(33), 0(34)>
  if (iftmp.104_55 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.46515_16 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].write_codec;
  switch_core_codec_destroy (D.46515_16);

<bb 37>:
  switch_core_session_unset_read_codec (session_1(D));
  switch_core_session_unset_write_codec (session_1(D));
  switch_core_media_deactivate_rtp (session_1(D));

<bb 38>:
  return;

}



;; Function switch_core_session_wake_video_thread (switch_core_session_wake_video_thread)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 6 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: # DEBUG D#22 => &smh_2->engines[1]

Marking useful stmt: # DEBUG v_engine => D#22

Marking useful stmt: D.43944_6 = switch_mutex_trylock (D.43943_5);

Marking useful stmt: switch_thread_cond_broadcast (D.43947_7);

Marking useful stmt: switch_mutex_unlock (D.43943_8);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_mutex_unlock (D.43943_8);

Marking useful stmt: if (D.43944_6 == 0)

marking necessary through D.43943_8 stmt D.43943_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
processing: D.43943_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.43944_6 == 0)

Marking useful stmt: if (D.43940_4 == 0B)

processing: if (D.43940_4 == 0B)

Marking useful stmt: if (smh_2 == 0B)

marking necessary through D.43940_4 stmt D.43940_4 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
processing: D.43940_4 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;

processing: if (smh_2 == 0B)

processing: switch_thread_cond_broadcast (D.43947_7);

marking necessary through D.43947_7 stmt D.43947_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond;
processing: D.43947_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond;

processing: D.43944_6 = switch_mutex_trylock (D.43943_5);

marking necessary through D.43943_5 stmt D.43943_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
processing: D.43943_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;


Eliminating unnecessary statements:
Removed 0 of 15 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_session_wake_video_thread (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * smh;
  struct switch_thread_cond_t * D.43947;
  switch_status_t D.43944;
  struct switch_mutex_t * D.43943;
  struct switch_rtp_t * D.43940;

<bb 2>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 6>;
  else
    goto <bb 3>;

<bb 3>:
  # DEBUG D#22 => &smh_2->engines[1]
  # DEBUG v_engine => D#22
  D.43940_4 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].rtp_session;
  if (D.43940_4 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;

<bb 4>:
  D.43943_5 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
  D.43944_6 = switch_mutex_trylock (D.43943_5);
  if (D.43944_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

<bb 5>:
  D.43947_7 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond;
  switch_thread_cond_broadcast (D.43947_7);
  D.43943_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 11496B].mh.cond_mutex;
  switch_mutex_unlock (D.43943_8);

<bb 6>:
  return;

}



;; Function switch_core_media_activate_rtp (switch_core_media_activate_rtp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 314 5 }
;; 5 succs { 314 6 }
;; 6 succs { 314 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 313 12 }
;; 12 succs { 13 17 }
;; 13 succs { 14 17 }
;; 14 succs { 15 313 }
;; 15 succs { 204 313 }
;; 17 succs { 313 18 }
;; 18 succs { 19 23 }
;; 19 succs { 20 23 }
;; 20 succs { 22 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 26 24 }
;; 24 succs { 25 27 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 30 28 }
;; 28 succs { 29 31 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 35 }
;; 32 succs { 34 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 39 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 45 }
;; 42 succs { 43 45 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 52 }
;; 46 succs { 47 52 }
;; 47 succs { 48 51 }
;; 48 succs { 49 51 }
;; 49 succs { 50 51 }
;; 50 succs { 204 }
;; 51 succs { 52 }
;; 52 succs { 53 54 }
;; 53 succs { 54 }
;; 54 succs { 55 71 }
;; 55 succs { 56 71 }
;; 56 succs { 57 59 }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 60 61 }
;; 60 succs { 69 }
;; 61 succs { 62 64 }
;; 62 succs { 63 64 }
;; 63 succs { 64 }
;; 64 succs { 65 69 }
;; 65 succs { 67 66 }
;; 66 succs { 67 69 }
;; 67 succs { 68 69 }
;; 68 succs { 69 }
;; 69 succs { 70 204 }
;; 70 succs { 204 }
;; 71 succs { 72 79 }
;; 72 succs { 73 77 }
;; 73 succs { 74 77 }
;; 74 succs { 76 75 }
;; 75 succs { 76 77 }
;; 76 succs { 77 }
;; 77 succs { 78 81 }
;; 78 succs { 81 }
;; 79 succs { 80 81 }
;; 80 succs { 81 }
;; 81 succs { 83 82 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 86 307 }
;; 86 succs { 87 88 }
;; 87 succs { 89 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 94 }
;; 94 succs { 95 97 }
;; 95 succs { 96 97 }
;; 96 succs { 97 }
;; 97 succs { 98 100 }
;; 98 succs { 99 100 }
;; 99 succs { 100 }
;; 100 succs { 101 103 }
;; 101 succs { 102 103 }
;; 102 succs { 103 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 107 }
;; 106 succs { 107 }
;; 107 succs { 109 108 }
;; 108 succs { 109 114 }
;; 109 succs { 111 110 }
;; 110 succs { 111 }
;; 111 succs { 113 112 }
;; 112 succs { 113 }
;; 113 succs { 114 }
;; 114 succs { 115 118 }
;; 115 succs { 117 116 }
;; 116 succs { 117 }
;; 117 succs { 118 }
;; 118 succs { 120 119 }
;; 119 succs { 120 135 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 124 }
;; 123 succs { 127 }
;; 124 succs { 125 126 }
;; 125 succs { 126 }
;; 126 succs { 127 }
;; 127 succs { 128 135 }
;; 128 succs { 129 132 }
;; 129 succs { 130 132 }
;; 130 succs { 131 132 }
;; 131 succs { 135 }
;; 132 succs { 134 133 }
;; 133 succs { 134 }
;; 134 succs { 135 }
;; 135 succs { 138 136 }
;; 136 succs { 138 137 }
;; 137 succs { 138 }
;; 138 succs { 139 153 }
;; 139 succs { 140 153 }
;; 140 succs { 141 153 }
;; 141 succs { 143 142 }
;; 142 succs { 143 }
;; 143 succs { 144 147 }
;; 144 succs { 146 145 }
;; 145 succs { 146 }
;; 146 succs { 147 }
;; 147 succs { 148 150 }
;; 148 succs { 149 150 }
;; 149 succs { 150 }
;; 150 succs { 151 153 }
;; 151 succs { 152 153 }
;; 152 succs { 153 }
;; 153 succs { 155 154 }
;; 154 succs { 155 172 }
;; 155 succs { 156 158 }
;; 156 succs { 157 158 }
;; 157 succs { 158 }
;; 158 succs { 159 160 }
;; 159 succs { 160 }
;; 160 succs { 161 162 }
;; 161 succs { 172 }
;; 162 succs { 163 164 }
;; 163 succs { 164 }
;; 164 succs { 165 166 }
;; 165 succs { 166 }
;; 166 succs { 167 168 }
;; 167 succs { 168 }
;; 168 succs { 169 171 }
;; 169 succs { 170 172 }
;; 170 succs { 172 }
;; 171 succs { 172 }
;; 172 succs { 173 175 }
;; 173 succs { 174 175 }
;; 174 succs { 175 }
;; 175 succs { 176 178 }
;; 176 succs { 177 178 }
;; 177 succs { 178 }
;; 178 succs { 179 181 }
;; 179 succs { 180 181 }
;; 180 succs { 181 }
;; 181 succs { 182 183 }
;; 182 succs { 183 }
;; 183 succs { 184 185 }
;; 184 succs { 185 }
;; 185 succs { 186 187 }
;; 186 succs { 187 }
;; 187 succs { 192 188 }
;; 188 succs { 189 190 }
;; 189 succs { 192 190 }
;; 190 succs { 191 193 }
;; 191 succs { 192 193 }
;; 192 succs { 193 }
;; 193 succs { 194 197 }
;; 194 succs { 195 196 }
;; 195 succs { 196 }
;; 196 succs { 197 }
;; 197 succs { 198 199 }
;; 198 succs { 199 }
;; 199 succs { 200 202 }
;; 200 succs { 201 202 }
;; 201 succs { 202 }
;; 202 succs { 203 204 }
;; 203 succs { 204 }
;; 204 succs { 205 206 }
;; 205 succs { 206 }
;; 206 succs { 207 310 }
;; 207 succs { 208 310 }
;; 208 succs { 209 310 }
;; 209 succs { 210 216 }
;; 210 succs { 211 216 }
;; 211 succs { 212 215 }
;; 212 succs { 213 215 }
;; 213 succs { 214 215 }
;; 214 succs { 310 }
;; 215 succs { 216 }
;; 216 succs { 217 219 }
;; 217 succs { 218 219 }
;; 218 succs { 219 }
;; 219 succs { 220 231 }
;; 220 succs { 221 231 }
;; 221 succs { 222 224 }
;; 222 succs { 223 224 }
;; 223 succs { 224 }
;; 224 succs { 225 226 }
;; 225 succs { 310 }
;; 226 succs { 227 310 }
;; 227 succs { 228 310 }
;; 228 succs { 230 229 }
;; 229 succs { 230 310 }
;; 230 succs { 310 }
;; 231 succs { 232 239 }
;; 232 succs { 233 237 }
;; 233 succs { 234 237 }
;; 234 succs { 236 235 }
;; 235 succs { 236 237 }
;; 236 succs { 237 }
;; 237 succs { 238 240 }
;; 238 succs { 240 }
;; 239 succs { 240 }
;; 240 succs { 310 241 }
;; 241 succs { 242 243 }
;; 242 succs { 243 }
;; 243 succs { 244 249 }
;; 244 succs { 245 249 }
;; 245 succs { 247 246 }
;; 246 succs { 247 249 }
;; 247 succs { 248 249 }
;; 248 succs { 249 }
;; 249 succs { 250 251 }
;; 250 succs { 251 }
;; 251 succs { 253 252 }
;; 252 succs { 253 }
;; 253 succs { 254 255 }
;; 254 succs { 255 }
;; 255 succs { 256 304 }
;; 256 succs { 257 258 }
;; 257 succs { 258 }
;; 258 succs { 259 260 }
;; 259 succs { 260 }
;; 260 succs { 261 262 }
;; 261 succs { 263 }
;; 262 succs { 263 }
;; 263 succs { 264 265 }
;; 264 succs { 265 }
;; 265 succs { 266 269 }
;; 266 succs { 268 267 }
;; 267 succs { 268 }
;; 268 succs { 269 }
;; 269 succs { 271 270 }
;; 270 succs { 271 286 }
;; 271 succs { 272 273 }
;; 272 succs { 273 }
;; 273 succs { 274 275 }
;; 274 succs { 278 }
;; 275 succs { 276 277 }
;; 276 succs { 277 }
;; 277 succs { 278 }
;; 278 succs { 279 286 }
;; 279 succs { 280 283 }
;; 280 succs { 281 283 }
;; 281 succs { 282 283 }
;; 282 succs { 286 }
;; 283 succs { 285 284 }
;; 284 succs { 285 }
;; 285 succs { 286 }
;; 286 succs { 289 287 }
;; 287 succs { 289 288 }
;; 288 succs { 289 }
;; 289 succs { 290 300 }
;; 290 succs { 291 300 }
;; 291 succs { 292 300 }
;; 292 succs { 294 293 }
;; 293 succs { 294 }
;; 294 succs { 295 297 }
;; 295 succs { 296 297 }
;; 296 succs { 297 }
;; 297 succs { 298 300 }
;; 298 succs { 299 300 }
;; 299 succs { 300 }
;; 300 succs { 301 302 }
;; 301 succs { 302 }
;; 302 succs { 303 310 }
;; 303 succs { 310 }
;; 304 succs { 305 306 }
;; 305 succs { 306 }
;; 306 succs { 313 }
;; 307 succs { 308 309 }
;; 308 succs { 309 }
;; 309 succs { 313 }
;; 310 succs { 311 313 }
;; 311 succs { 313 }
;; 313 succs { 314 }
;; 314 succs { 1 }
Marking useful stmt: # DEBUG val => 0B

Marking useful stmt: # DEBUG status => 0

Marking useful stmt: # DEBUG timer_name => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 4731, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_46

Marking useful stmt: # DEBUG a_engine => a_engine_48

Marking useful stmt: # DEBUG v_engine => v_engine_49

Marking useful stmt: D.43074_51 = switch_channel_check_signal (D.43073_50, 1);

Marking useful stmt: D.43076_53 = switch_channel_get_state (D.43073_52);

Marking useful stmt: D.43078_55 = switch_rtp_ready (D.43077_54);

Marking useful stmt: switch_rtp_reset_media_timer (D.43077_56);

Marking useful stmt: switch_channel_set_flag_value (D.43073_58, 92, 1);

Marking useful stmt: D.43084_60 = switch_channel_test_flag (D.43073_59, 15);

Marking useful stmt: D.43087_63 = switch_channel_test_flag (D.43073_62, 103);

Marking useful stmt: D.43090_65 = switch_rtp_ready (D.43077_64);

Marking useful stmt: D.43093_67 = switch_channel_test_flag (D.43073_66, 98);

Marking useful stmt: D.43097_69 = switch_rtp_ready (D.43096_68);

Marking useful stmt: status_73 = switch_core_media_set_codec (session_45(D), 0, D.43100_72);

Marking useful stmt: # DEBUG status => status_73

Marking useful stmt: switch_core_media_set_video_codec (session_45(D), 0);

Marking useful stmt: memset (&flags, 0, 156);

Marking useful stmt: D.43106_76 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: D.43109_78 = switch_channel_test_flag (D.43073_77, 106);

Marking useful stmt: val_80 = switch_channel_get_variable_dup (D.43073_79, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_80

Marking useful stmt: D.43113_81 = switch_true (val_80);

Marking useful stmt: D.43118_84 = switch_media_handle_test_media_flag (smh_46, 11);

Marking useful stmt: val_86 = switch_channel_get_variable_dup (D.43073_85, "pass_rfc2833", 1, -1);

Marking useful stmt: # DEBUG val => val_86

Marking useful stmt: D.43121_87 = switch_true (val_86);

Marking useful stmt: switch_channel_set_flag_value (D.43073_88, 100, 1);

Marking useful stmt: D.43124_89 = switch_media_handle_test_media_flag (smh_46, 12);

Marking useful stmt: val_91 = switch_channel_get_variable_dup (D.43073_90, "rtp_autoflush", 1, -1);

Marking useful stmt: # DEBUG val => val_91

Marking useful stmt: D.43127_92 = switch_true (val_91);

Marking useful stmt: D.43132_95 = switch_media_handle_test_media_flag (smh_46, 13);

Marking useful stmt: val_97 = switch_channel_get_variable_dup (D.43073_96, "rtp_rewrite_timestamps", 1, -1);

Marking useful stmt: # DEBUG val => val_97

Marking useful stmt: D.43136_98 = switch_true (val_97);

Marking useful stmt: D.43139_101 = switch_media_handle_test_media_flag (smh_46, 9);

Marking useful stmt: D.43099_102->cng_pt = 0;

Marking useful stmt: val_113 = switch_channel_get_variable_dup (D.43073_112, "rtp_disable_byteswap", 1, -1);

Marking useful stmt: # DEBUG val => val_113

Marking useful stmt: D.43158_114 = switch_true (val_113);

Marking useful stmt: D.43163_117 = switch_channel_test_flag (D.43073_116, 103);

Marking useful stmt: remote_host_119 = switch_rtp_get_remote_host (D.43077_118);

Marking useful stmt: # DEBUG remote_host => remote_host_119

Marking useful stmt: remote_port_121 = switch_rtp_get_remote_port (D.43077_120);

Marking useful stmt: # DEBUG remote_port => remote_port_121

Marking useful stmt: D.43176_131 = switch_channel_get_name (D.43073_130);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4825, session_45(D), 7, "Audio params are unchanged for %s.\n", D.43176_131);

Marking useful stmt: D.43177_133 = switch_channel_get_name (D.43073_132);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4830, session_45(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.43177_133, remote_host_119, D.43178_134, D.43172_136, D.43179_139);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.43179_142);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_143, "remote_media_ip", D.43172_145, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_146, "remote_media_port", &tmp, 1);

Marking useful stmt: D.43180_148 = switch_channel_test_flag (D.43073_147, 29);

Marking useful stmt: D.43183_150 = switch_channel_get_name (D.43073_149);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4841, session_45(D), 7, "AUDIO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43183_150, D.43184_151, D.43186_153, D.43172_155, D.43179_158, D.43188_161, D.43190_163);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.43186_165);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_166, "local_media_ip", D.43184_167, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_168, "local_media_port", &tmp, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_169, "advertised_media_ip", D.43191_170, 1);

Marking useful stmt: D.43194_173 = switch_channel_test_flag (D.43073_172, 103);

Marking useful stmt: # DEBUG rport => 0B

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_175

Marking useful stmt: rport_177 = switch_channel_get_variable_dup (D.43073_176, "rtp_remote_audio_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_177

Marking useful stmt: # DEBUG __nptr => rport_177

Marking useful stmt: D.48083_1337 = strtol (rport_177, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_179

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_7

Marking useful stmt: D.43202_185 = switch_rtp_set_remote_address (D.43077_180, D.43172_182, D.43174_184, remote_rtcp_port_7, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4868, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.45_186);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4870, session_45(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.43172_188, D.43179_191);

Marking useful stmt: D.43207_193 = switch_channel_test_flag (D.43073_192, 96);

Marking useful stmt: # DEBUG __s2_len => 7

Marking useful stmt: switch_core_media_toggle_hold (session_45(D), 0);

Marking useful stmt: D.43254_239 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: val_241 = switch_channel_get_variable_dup (D.43073_240, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_241

Marking useful stmt: D.43258_242 = switch_true (val_241);

Marking useful stmt: D.43259_244 = switch_channel_test_flag (D.43073_243, 106);

Marking useful stmt: switch_rtp_set_flag (D.43077_245, 7);

Marking useful stmt: check_dtls_reinvite (session_45(D), a_engine_48);

Marking useful stmt: D.43267_250 = switch_channel_test_flag (D.43073_249, 29);

Marking useful stmt: switch_core_media_proxy_remote_addr (session_45(D), 0B);

Marking useful stmt: memset (&flags, 0, 156);

Marking useful stmt: D.43274_255 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: D.43277_257 = switch_channel_test_flag (D.43073_256, 106);

Marking useful stmt: val_259 = switch_channel_get_variable_dup (D.43073_258, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_259

Marking useful stmt: D.43281_260 = switch_true (val_259);

Marking useful stmt: # DEBUG timer_name => 0B

Marking useful stmt: D.43282_265 = switch_channel_get_name (D.43073_264);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4906, session_45(D), 7, "PROXY AUDIO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43282_265, D.43172_272, D.43179_275, D.43172_272, D.43179_275, D.43188_278, D.43190_280);

Marking useful stmt: D.43283_282 = switch_rtp_ready (D.43077_281);

Marking useful stmt: switch_rtp_set_default_payload (D.43077_283, D.43187_285);

Marking useful stmt: # DEBUG timer_name => timer_name_287

Marking useful stmt: var_289 = switch_channel_get_variable_dup (D.43073_288, "rtp_timer_name", 1, -1);

Marking useful stmt: # DEBUG var => var_289

Marking useful stmt: # DEBUG timer_name => var_289

Marking useful stmt: # DEBUG timer_name => timer_name_6

Marking useful stmt: D.43291_292 = switch_channel_check_signal (D.43073_291, 1);

Marking useful stmt: D.43293_294 = switch_channel_get_state (D.43073_293);

Marking useful stmt: D.43297_307 = switch_core_session_get_pool (session_45(D));

Marking useful stmt: D.43298_308 = switch_rtp_new (D.43184_295, D.43185_296, D.43172_298, D.43174_300, D.43187_302, D.43294_303, D.43296_306, &flags, timer_name_6, &err, D.43297_307);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session = D.43298_308;

Marking useful stmt: D.43299_310 = switch_rtp_ready (D.43077_309);

Marking useful stmt: switch_rtp_set_payload_map (D.43077_311, D.43302_312);

Marking useful stmt: D.43303_314 = switch_rtp_ready (D.43077_313);

Marking useful stmt: # DEBUG vad_in => vad_in_318

Marking useful stmt: # DEBUG vad_out => vad_out_322

Marking useful stmt: D.43308_324 = switch_channel_direction (D.43073_323);

Marking useful stmt: # DEBUG inb => inb_325

Marking useful stmt: D.43310_327 = switch_core_session_get_pool (session_45(D));

Marking useful stmt: switch_mutex_init (D.43309_326, 1, D.43310_327);

Marking useful stmt: ssrc_329 = switch_channel_get_variable_dup (D.43073_328, "rtp_use_ssrc", 1, -1);

Marking useful stmt: # DEBUG ssrc => ssrc_329

Marking useful stmt: ssrc_ul_330 = strtoul (ssrc_329, 0B, 10);

Marking useful stmt: # DEBUG ssrc_ul => ssrc_ul_330

Marking useful stmt: switch_rtp_set_ssrc (D.43077_331, ssrc_ul_330);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = ssrc_ul_330;

Marking useful stmt: switch_rtp_set_ssrc (D.43077_332, D.43314_333);

Marking useful stmt: switch_rtp_set_remote_ssrc (D.43077_335, D.43315_336);

Marking useful stmt: switch_channel_set_flag_value (D.43073_337, 36, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.43073_338, "rtp_use_pt", "%d", D.43188_341);

Marking useful stmt: val_343 = switch_channel_get_variable_dup (D.43073_342, "rtp_enable_vad_in", 1, -1);

Marking useful stmt: # DEBUG val => val_343

Marking useful stmt: D.43320_344 = switch_true (val_343);

Marking useful stmt: # DEBUG vad_in => 1

Marking useful stmt: # DEBUG vad_in => vad_in_9

Marking useful stmt: val_347 = switch_channel_get_variable_dup (D.43073_346, "rtp_enable_vad_out", 1, -1);

Marking useful stmt: # DEBUG val => val_347

Marking useful stmt: D.43325_348 = switch_true (val_347);

Marking useful stmt: # DEBUG vad_out => 1

Marking useful stmt: # DEBUG vad_out => vad_out_11

Marking useful stmt: val_351 = switch_channel_get_variable_dup (D.43073_350, "rtp_disable_vad_in", 1, -1);

Marking useful stmt: # DEBUG val => val_351

Marking useful stmt: D.43330_352 = switch_true (val_351);

Marking useful stmt: # DEBUG vad_in => 0

Marking useful stmt: # DEBUG vad_in => vad_in_10

Marking useful stmt: val_355 = switch_channel_get_variable_dup (D.43073_354, "rtp_disable_vad_out", 1, -1);

Marking useful stmt: # DEBUG val => val_355

Marking useful stmt: D.43335_356 = switch_true (val_355);

Marking useful stmt: # DEBUG vad_out => 0

Marking useful stmt: # DEBUG vad_out => vad_out_12

Marking useful stmt: D.43338_359 = switch_rtp_get_ssrc (D.43077_358);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = D.43338_359;

Marking useful stmt: switch_channel_set_variable_printf (D.43073_360, "rtp_use_ssrc", "%u", D.43314_361);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs = D.43344_366;

Marking useful stmt: val_368 = switch_channel_get_variable_dup (D.43073_367, "rtp_manual_rtp_bugs", 1, -1);

Marking useful stmt: # DEBUG val => val_368

Marking useful stmt: switch_core_media_parse_rtp_bugs (D.43347_369, val_368);

Marking useful stmt: switch_rtp_intentional_bugs (D.43077_370, D.43349_374);

Marking useful stmt: switch_rtp_enable_vad (D.43077_381, session_45(D), D.43359_382, 7);

Marking useful stmt: D.43360_383 = switch_core_session_get_channel (session_45(D));

Marking useful stmt: D.43361_384 = switch_channel_get_name (D.43360_383);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5001, session_45(D), 7, "AUDIO RTP Engage VAD for %s ( %s %s )\n", D.43361_384, iftmp.47_29, iftmp.48_30);

Marking useful stmt: gen_ice (session_45(D), 0, 0B, 0);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5010, session_45(D), 6, "Activating Audio ICE\n");

Marking useful stmt: D.43379_396 = switch_ice_direction (session_45(D));

Marking useful stmt: switch_rtp_activate_ice (D.43077_391, D.43374_392, D.43375_393, D.43376_394, D.43377_395, 0, iftmp.49_31, D.43383_399);

Marking useful stmt: val_401 = switch_channel_get_variable_dup (D.43073_400, "rtcp_audio_interval_msec", 1, -1);

Marking useful stmt: # DEBUG val => val_401

Marking useful stmt: # DEBUG val => val_403

Marking useful stmt: # DEBUG val => val_1

Marking useful stmt: rport_405 = switch_channel_get_variable_dup (D.43073_404, "rtp_remote_audio_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_405

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_406

Marking useful stmt: # DEBUG __nptr => rport_405

Marking useful stmt: D.48086_1338 = strtol (rport_405, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_411

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_13

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5043, session_45(D), 6, "Activating RTCP PASSTHRU PORT %d\n", D.43396_413);

Marking useful stmt: switch_rtp_activate_rtcp (D.43077_414, -1, remote_rtcp_port_13, D.43398_416);

Marking useful stmt: # DEBUG __nptr => val_1

Marking useful stmt: interval_1339 = strtol (val_1, 0B, 10);

Marking useful stmt: # DEBUG interval => NULL

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5048, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1339);

Marking useful stmt: # DEBUG interval => 10000

Marking useful stmt: # DEBUG interval => interval_14

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5053, session_45(D), 6, "Activating RTCP PORT %d\n", D.43396_421);

Marking useful stmt: switch_rtp_activate_rtcp (D.43077_422, interval_14, remote_rtcp_port_13, D.43398_424);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5061, session_45(D), 6, "Skipping RTCP ICE (Same as RTP)\n");

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5063, session_45(D), 6, "Activating RTCP ICE\n");

Marking useful stmt: D.43418_442 = switch_ice_direction (session_45(D));

Marking useful stmt: switch_rtp_activate_ice (D.43077_437, D.43374_438, D.43375_439, D.43376_440, D.43377_441, 1, iftmp.51_32, D.43383_445);

Marking useful stmt: # DEBUG s => D.43422_446

Marking useful stmt: D.43426_448 = switch_rtp_has_dtls ();

Marking useful stmt: D.43430_450 = dtls_ok (D.43429_449);

Marking useful stmt: D.43435_453 = switch_channel_direction (D.43434_452);

Marking useful stmt: # DEBUG dtype => dtype_33

Marking useful stmt: D.43439_459 = switch_channel_test_flag (D.43434_458, 112);

Marking useful stmt: # DEBUG dtype => dtype_34

Marking useful stmt: # DEBUG dtype => dtype_16

Marking useful stmt: # DEBUG xtype => 4

Marking useful stmt: # DEBUG xtype => 12

Marking useful stmt: # DEBUG xtype => xtype_15

Marking useful stmt: switch_rtp_add_dtls (D.43077_468, D.43451_469, D.43452_470, D.43453_471);

Marking useful stmt: # DEBUG xtype => 8

Marking useful stmt: switch_rtp_add_dtls (D.43077_476, D.43451_477, D.43452_478, D.43453_479);

Marking useful stmt: val_481 = switch_channel_get_variable_dup (D.43073_480, "jitterbuffer_msec", 1, -1);

Marking useful stmt: # DEBUG val => val_481

Marking useful stmt: # DEBUG val => val_483

Marking useful stmt: # DEBUG val => val_2

Marking useful stmt: # DEBUG __nptr => val_2

Marking useful stmt: jb_msec_1342 = strtol (val_2, 0B, 10);

Marking useful stmt: # DEBUG jb_msec => NULL

Marking useful stmt: # DEBUG maxlen => 0

Marking useful stmt: # DEBUG max_drift => 0

Marking useful stmt: # DEBUG p => p_487

Marking useful stmt: # DEBUG p => p_488

Marking useful stmt: # DEBUG __nptr => p_488

Marking useful stmt: maxlen_1343 = strtol (p_488, 0B, 10);

Marking useful stmt: # DEBUG maxlen => NULL

Marking useful stmt: # DEBUG q => q_490

Marking useful stmt: # DEBUG q => q_491

Marking useful stmt: # DEBUG __nptr => q_491

Marking useful stmt: D.48102_1344 = strtol (q_491, 0B, 10);

Marking useful stmt: # DEBUG max_drift => max_drift_493

Marking useful stmt: # DEBUG max_drift => max_drift_19

Marking useful stmt: # DEBUG maxlen => maxlen_18

Marking useful stmt: # DEBUG jb_msec => jb_msec_500

Marking useful stmt: # DEBUG jb_msec => jb_msec_17

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5125, session_45(D), 3, "Invalid Jitterbuffer spec [%d] must be between 20 and 10000\n", jb_msec_17);

Marking useful stmt: # DEBUG maxqlen => 50

Marking useful stmt: # DEBUG qlen => qlen_506

Marking useful stmt: # DEBUG qlen => 3

Marking useful stmt: # DEBUG qlen => qlen_20

Marking useful stmt: # DEBUG maxqlen => maxqlen_510

Marking useful stmt: # DEBUG maxqlen => maxqlen_21

Marking useful stmt: # DEBUG maxqlen => maxqlen_511

Marking useful stmt: # DEBUG maxqlen => maxqlen_22

Marking useful stmt: D.43488_518 = switch_rtp_activate_jitter_buffer (D.43077_512, qlen.55_513, maxqlen.56_514, D.43294_515, D.43486_516, max_drift.57_517);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5146, session_45(D), 7, "Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

Marking useful stmt: switch_channel_set_flag_value (D.43073_519, 57, 1);

Marking useful stmt: D.43491_521 = switch_channel_get_variable_dup (D.43073_520, "rtp_jitter_buffer_plc", 1, -1);

Marking useful stmt: D.43492_522 = switch_false (D.43491_521);

Marking useful stmt: switch_channel_set_flag_value (D.43073_523, 58, 1);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5153, session_45(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

Marking useful stmt: val_525 = switch_channel_get_variable_dup (D.43073_524, "rtp_timeout_sec", 1, -1);

Marking useful stmt: # DEBUG val => val_525

Marking useful stmt: # DEBUG __nptr => val_525

Marking useful stmt: v_1345 = strtol (val_525, 0B, 10);

Marking useful stmt: # DEBUG v => NULL

Marking useful stmt: D.43099_527->rtp_timeout_sec = v.58_528;

Marking useful stmt: val_530 = switch_channel_get_variable_dup (D.43073_529, "rtp_hold_timeout_sec", 1, -1);

Marking useful stmt: # DEBUG val => val_530

Marking useful stmt: # DEBUG __nptr => val_530

Marking useful stmt: v_1346 = strtol (val_530, 0B, 10);

Marking useful stmt: # DEBUG v => NULL

Marking useful stmt: D.43099_532->rtp_hold_timeout_sec = v.59_533;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets = D.43510_541;

Marking useful stmt: switch_rtp_set_max_missed_packets (D.43077_542, D.43511_543);

Marking useful stmt: D.43099_547->rtp_hold_timeout_sec = D.43515_549;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_hold_packets = D.43519_557;

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5188, session_45(D), 7, "Set 2833 dtmf send payload to %u\n", D.43523_562);

Marking useful stmt: switch_rtp_set_telephony_event (D.43077_563, D.43520_565);

Marking useful stmt: switch_channel_set_variable_printf (D.43073_566, "rtp_2833_send_payload", "%d", D.43523_569);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5194, session_45(D), 7, "Set 2833 dtmf receive payload to %u\n", D.43527_574);

Marking useful stmt: switch_rtp_set_telephony_recv_event (D.43077_575, D.43524_577);

Marking useful stmt: switch_channel_set_variable_printf (D.43073_578, "rtp_2833_recv_payload", "%d", D.43527_581);

Marking useful stmt: D.43531_582 = switch_media_handle_test_media_flag (smh_46, 9);

Marking useful stmt: val_584 = switch_channel_get_variable_dup (D.43073_583, "supress_cng", 1, -1);

Marking useful stmt: # DEBUG val => val_584

Marking useful stmt: D.43534_585 = switch_true (val_584);

Marking useful stmt: val_587 = switch_channel_get_variable_dup (D.43073_586, "suppress_cng", 1, -1);

Marking useful stmt: # DEBUG val => val_587

Marking useful stmt: D.43536_588 = switch_true (val_587);

Marking useful stmt: D.43099_589->cng_pt = 0;

Marking useful stmt: val_591 = switch_channel_get_variable_dup (D.43073_590, "rtp_digit_delay", 1, -1);

Marking useful stmt: # DEBUG val => val_591

Marking useful stmt: # DEBUG __nptr => val_591

Marking useful stmt: delayi_1347 = strtol (val_591, 0B, 10);

Marking useful stmt: # DEBUG delayi => NULL

Marking useful stmt: # DEBUG delayi => 0

Marking useful stmt: # DEBUG delayi => delayi_23

Marking useful stmt: D.43099_594->dtmf_delay = delayi.60_595;

Marking useful stmt: switch_rtp_set_interdigit_delay (D.43077_598, D.43542_600);

Marking useful stmt: D.43545_602 = switch_channel_get_name (D.43073_601);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5216, session_45(D), 7, "%s Set rtp dtmf delay to %u\n", D.43545_602, D.43542_604);

Marking useful stmt: D.43548_607 = switch_media_handle_test_media_flag (smh_46, 9);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5222, session_45(D), 7, "Set comfort noise payload to %u\n", D.43551_610);

Marking useful stmt: switch_rtp_set_cng_pt (D.43077_611, D.43143_613);

Marking useful stmt: switch_core_session_apply_crypto (session_45(D), 0);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.43179_616);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_617, "remote_media_ip", D.43172_619, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_620, "remote_media_port", &tmp, 1);

Marking useful stmt: D.43552_622 = switch_channel_test_flag (D.43073_621, 74);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5234, session_45(D), 6, "Activating ZRTP PROXY MODE\n");

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5235, session_45(D), 7, "Disable NOTIMER_DURING_BRIDGE\n");

Marking useful stmt: switch_channel_clear_flag (D.43073_623, 99);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5237, session_45(D), 7, "Activating audio UDPTL mode\n");

Marking useful stmt: switch_rtp_udptl_mode (D.43077_624);

Marking useful stmt: video:

Marking useful stmt: # DEBUG status => status_4

Marking useful stmt: D.43555_631 = switch_channel_direction (D.43073_630);

Marking useful stmt: switch_core_media_check_video_codecs (session_45(D));

Marking useful stmt: D.43558_633 = switch_channel_test_flag (D.43073_632, 98);

Marking useful stmt: D.43570_640 = switch_channel_test_flag (D.43073_639, 103);

Marking useful stmt: remote_host_642 = switch_rtp_get_remote_host (D.43096_641);

Marking useful stmt: # DEBUG remote_host => remote_host_642

Marking useful stmt: remote_port_644 = switch_rtp_get_remote_port (D.43096_643);

Marking useful stmt: # DEBUG remote_port => remote_port_644

Marking useful stmt: D.43581_654 = switch_channel_get_name (D.43073_653);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5263, session_45(D), 7, "Video params are unchanged for %s.\n", D.43581_654);

Marking useful stmt: D.43582_656 = switch_channel_get_name (D.43073_655);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5267, session_45(D), 7, "Video params changed for %s from %s:%d to %s:%d\n", D.43582_656, remote_host_642, D.43583_657, D.43578_659, D.43584_662);

Marking useful stmt: D.43585_664 = switch_channel_test_flag (D.43073_663, 29);

Marking useful stmt: D.43588_666 = switch_rtp_ready (D.43096_665);

Marking useful stmt: D.43591_668 = switch_channel_get_name (D.43073_667);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5275, session_45(D), 7, "VIDEO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43591_668, D.43172_670, D.43593_672, D.43578_674, D.43584_677, D.43595_680, D.43190_682);

Marking useful stmt: start_video_thread (session_45(D));

Marking useful stmt: switch_rtp_set_default_payload (D.43096_683, D.43594_685);

Marking useful stmt: switch_snprintf (&tmp, 50, "%d", D.43593_687);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_688, "local_video_ip", D.43191_689, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.43073_690, "local_video_port", &tmp, 1);

Marking useful stmt: D.43598_693 = switch_channel_test_flag (D.43073_692, 103);

Marking useful stmt: # DEBUG rport => 0B

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_695

Marking useful stmt: rport_697 = switch_channel_get_variable_dup (D.43073_696, "rtp_remote_video_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_697

Marking useful stmt: # DEBUG __nptr => rport_697

Marking useful stmt: D.48114_1348 = strtol (rport_697, 0B, 10);

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_699

Marking useful stmt: # DEBUG remote_rtcp_port => remote_rtcp_port_24

Marking useful stmt: D.43606_705 = switch_rtp_set_remote_address (D.43096_700, D.43578_702, D.43565_704, remote_rtcp_port_24, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5306, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.45_706);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5308, session_45(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.43578_708, D.43584_711);

Marking useful stmt: D.43612_712 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: D.43615_714 = switch_channel_test_flag (D.43073_713, 106);

Marking useful stmt: val_716 = switch_channel_get_variable_dup (D.43073_715, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_716

Marking useful stmt: D.43619_717 = switch_true (val_716);

Marking useful stmt: switch_rtp_set_flag (D.43096_718, 7);

Marking useful stmt: start_video_thread (session_45(D));

Marking useful stmt: D.43620_720 = switch_channel_test_flag (D.43073_719, 29);

Marking useful stmt: switch_core_media_proxy_remote_addr (session_45(D), 0B);

Marking useful stmt: memset (&flags, 0, 156);

Marking useful stmt: D.43625_725 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: D.43628_727 = switch_channel_test_flag (D.43073_726, 106);

Marking useful stmt: val_729 = switch_channel_get_variable_dup (D.43073_728, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_729

Marking useful stmt: D.43632_730 = switch_true (val_729);

Marking useful stmt: # DEBUG timer_name => 0B

Marking useful stmt: D.43633_735 = switch_channel_get_name (D.43073_734);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5334, session_45(D), 7, "PROXY VIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43633_735, D.43172_737, D.43593_739, D.43578_741, D.43584_744, D.43595_747, D.43635_749);

Marking useful stmt: D.43636_751 = switch_rtp_ready (D.43096_750);

Marking useful stmt: switch_rtp_set_default_payload (D.43096_752, D.43594_754);

Marking useful stmt: # DEBUG D#24 => smh_46->mparams

Marking useful stmt: # DEBUG D#23 => D#24->timer_name

Marking useful stmt: # DEBUG timer_name => D#23

Marking useful stmt: var_758 = switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);

Marking useful stmt: # DEBUG var => var_758

Marking useful stmt: switch_core_media_choose_port (session_45(D), 1, 1);

Marking useful stmt: memset (&flags, 0, 156);

Marking useful stmt: D.43647_766 = switch_media_handle_test_media_flag (smh_46, 10);

Marking useful stmt: D.43650_768 = switch_channel_test_flag (D.43073_767, 15);

Marking useful stmt: val_770 = switch_channel_get_variable_dup (D.43073_769, "disable_rtp_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_770

Marking useful stmt: D.43654_771 = switch_true (val_770);

Marking useful stmt: D.43655_773 = switch_channel_test_flag (D.43073_772, 106);

Marking useful stmt: D.43658_777 = switch_channel_test_flag (D.43073_776, 29);

Marking useful stmt: switch_core_media_set_video_codec (session_45(D), 0);

Marking useful stmt: D.43663_790 = switch_core_session_get_pool (session_45(D));

Marking useful stmt: D.43664_791 = switch_rtp_new (D.43184_782, D.43592_783, D.43578_785, D.43565_787, D.43594_789, 1, 90000, &flags, 0B, &err, D.43663_790);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session = D.43664_791;

Marking useful stmt: D.43666_793 = switch_channel_test_flag (D.43073_792, 29);

Marking useful stmt: D.43670_797 = switch_channel_get_name (D.43073_796);

Marking useful stmt: D.43672_811 = switch_rtp_ready (D.43096_810);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5391, session_45(D), 7, "%sVIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d [%s]\n", iftmp.61_35, D.43670_797, D.43172_799, D.43593_801, D.43578_803, D.43584_806, D.43595_809, 0, iftmp.62_36);

Marking useful stmt: D.43676_815 = switch_rtp_ready (D.43096_814);

Marking useful stmt: switch_rtp_set_flag (D.43096_817, 36);

Marking useful stmt: switch_rtp_set_flag (D.43096_819, 37);

Marking useful stmt: switch_rtp_set_payload_map (D.43096_820, D.43685_821);

Marking useful stmt: start_video_thread (session_45(D));

Marking useful stmt: switch_channel_set_flag_value (D.43073_822, 23, 1);

Marking useful stmt: ssrc_824 = switch_channel_get_variable_dup (D.43073_823, "rtp_use_video_ssrc", 1, -1);

Marking useful stmt: # DEBUG ssrc => ssrc_824

Marking useful stmt: ssrc_ul_825 = strtoul (ssrc_824, 0B, 10);

Marking useful stmt: # DEBUG ssrc_ul => ssrc_ul_825

Marking useful stmt: switch_rtp_set_ssrc (D.43096_826, ssrc_ul_825);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = ssrc_ul_825;

Marking useful stmt: switch_rtp_set_ssrc (D.43096_827, D.43689_828);

Marking useful stmt: switch_rtp_set_remote_ssrc (D.43096_830, D.43690_831);

Marking useful stmt: gen_ice (session_45(D), 1, 0B, 0);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5433, session_45(D), 6, "Activating Video ICE\n");

Marking useful stmt: D.43702_839 = switch_ice_direction (session_45(D));

Marking useful stmt: switch_rtp_activate_ice (D.43096_834, D.43697_835, D.43698_836, D.43699_837, D.43700_838, 0, iftmp.63_37, D.43706_842);

Marking useful stmt: val_844 = switch_channel_get_variable_dup (D.43073_843, "rtcp_video_interval_msec", 1, -1);

Marking useful stmt: # DEBUG val => val_844

Marking useful stmt: # DEBUG val => val_846

Marking useful stmt: # DEBUG val => val_3

Marking useful stmt: rport_848 = switch_channel_get_variable_dup (D.43073_847, "rtp_remote_video_rtcp_port", 1, -1);

Marking useful stmt: # DEBUG rport => rport_848

Marking useful stmt: # DEBUG remote_port => remote_port_849

Marking useful stmt: # DEBUG __nptr => rport_848

Marking useful stmt: D.48117_1349 = strtol (rport_848, 0B, 10);

Marking useful stmt: # DEBUG remote_port => remote_port_851

Marking useful stmt: # DEBUG remote_port => remote_port_25

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5462, session_45(D), 6, "Activating VIDEO RTCP PASSTHRU PORT %d\n", D.43716_853);

Marking useful stmt: switch_rtp_activate_rtcp (D.43096_854, -1, remote_port_25, D.43718_856);

Marking useful stmt: # DEBUG __nptr => val_3

Marking useful stmt: interval_1350 = strtol (val_3, 0B, 10);

Marking useful stmt: # DEBUG interval => NULL

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5467, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1350);

Marking useful stmt: # DEBUG interval => 10000

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5471, session_45(D), 6, "Activating VIDEO RTCP PORT %d mux %d\n", D.43716_861, D.43724_863);

Marking useful stmt: switch_rtp_activate_rtcp (D.43096_864, 10000, remote_port_25, D.43718_866);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5481, session_45(D), 6, "Skipping VIDEO RTCP ICE (Same as VIDEO RTP)\n");

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5484, session_45(D), 6, "Activating VIDEO RTCP ICE\n");

Marking useful stmt: D.43739_884 = switch_ice_direction (session_45(D));

Marking useful stmt: switch_rtp_activate_ice (D.43096_879, D.43697_880, D.43698_881, D.43699_882, D.43700_883, 1, iftmp.65_38, D.43706_887);

Marking useful stmt: # DEBUG s => D.43743_888

Marking useful stmt: D.43747_890 = switch_rtp_has_dtls ();

Marking useful stmt: D.43750_892 = dtls_ok (D.43429_891);

Marking useful stmt: D.43754_895 = switch_channel_direction (D.43434_894);

Marking useful stmt: # DEBUG dtype => dtype_39

Marking useful stmt: # DEBUG xtype => 4

Marking useful stmt: # DEBUG xtype => 12

Marking useful stmt: # DEBUG xtype => xtype_26

Marking useful stmt: switch_rtp_add_dtls (D.43096_904, D.43763_905, D.43764_906, D.43765_907);

Marking useful stmt: # DEBUG xtype => 8

Marking useful stmt: switch_rtp_add_dtls (D.43096_912, D.43763_913, D.43764_914, D.43765_915);

Marking useful stmt: val_917 = switch_channel_get_variable_dup (D.43073_916, "rtp_manual_video_rtp_bugs", 1, -1);

Marking useful stmt: # DEBUG val => val_917

Marking useful stmt: switch_core_media_parse_rtp_bugs (D.43772_918, val_917);

Marking useful stmt: switch_rtp_intentional_bugs (D.43096_919, D.43775_923);

Marking useful stmt: switch_channel_set_variable_printf (D.43073_924, "rtp_use_video_pt", "%d", D.43595_927);

Marking useful stmt: D.43776_929 = switch_rtp_get_ssrc (D.43096_928);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = D.43776_929;

Marking useful stmt: switch_channel_set_variable_printf (D.43073_930, "rtp_use_video_ssrc", "%u", D.43689_931);

Marking useful stmt: switch_core_session_apply_crypto (session_45(D), 1);

Marking useful stmt: D.43777_933 = switch_channel_test_flag (D.43073_932, 74);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5542, session_45(D), 7, "Activating video UDPTL mode\n");

Marking useful stmt: switch_rtp_udptl_mode (D.43096_934);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5547, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", iftmp.67_40);

Marking useful stmt: switch_channel_perform_hangup (D.43073_938, "src/switch_core_media.c", &__func__, 5548, 27);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5554, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", iftmp.68_41);

Marking useful stmt: switch_channel_perform_hangup (D.43073_628, "src/switch_core_media.c", &__func__, 5555, 27);

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: video_up:

Marking useful stmt: check_dtls_reinvite (session_45(D), v_engine_49);

Marking useful stmt: end:

Marking useful stmt: # DEBUG status => status_5

Marking useful stmt: switch_channel_clear_flag (D.43073_943, 103);

Marking useful stmt: switch_core_recovery_track (session_45(D));

Marking useful stmt: return status_27;


Processing worklist:
processing: return status_27;

Marking useful stmt: if (session_45(D) == 0B)

marking necessary through status_27 stmt status_27 = PHI <1(4), 1(6), status_5(313), 1(5)>
processing: status_27 = PHI <1(4), 1(6), status_5(313), 1(5)>

marking necessary through status_5 stmt status_5 = PHI <0(11), 0(15), status_73(17), status_4(306), 1(309), 0(311), 0(310), 0(14)>
Marking useful stmt: if (D.43074_51 != 0)

Marking useful stmt: if (D.43076_53 > 9)

Marking useful stmt: if (smh_46 == 0B)

processing: if (smh_46 == 0B)

marking necessary through smh_46 stmt smh_46 = session_45(D)->media_handle;
processing: smh_46 = session_45(D)->media_handle;

marking necessary through .MEM_1029 stmt flags = {};
marking necessary through .MEM_1028 stmt err = 0B;
processing: err = 0B;

processing: flags = {};

processing: if (D.43076_53 > 9)

processing: if (D.43074_51 != 0)

processing: status_5 = PHI <0(11), 0(15), status_73(17), status_4(306), 1(309), 0(311), 0(310), 0(14)>

marking necessary through status_4 stmt status_4 = PHI <0(15), status_73(50), status_73(70), status_73(202), status_73(203), status_73(69)>
Marking useful stmt: if (D.43093_67 != 0)

Marking useful stmt: if (D.43087_63 == 0)

Marking useful stmt: if (D.43090_65 != 0)

Marking useful stmt: if (D.43676_815 != 0)

Marking useful stmt: if (D.43303_314 != 0)

Marking useful stmt: if (D.43791_941 != 0)

Marking useful stmt: if (D.43558_633 != 0)

Marking useful stmt: if (D.43562_635 != 0B)

Marking useful stmt: if (D.43565_637 != 0)

Marking useful stmt: if (D.43565_652 == remote_port_644)

Marking useful stmt: if (D.43598_693 != 0)

Marking useful stmt: if (D.43096_760 != 0B)

processing: if (D.43096_760 != 0B)

Marking useful stmt: if (D.43096_691 != 0B)

marking necessary through D.43096_760 stmt D.43096_760 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_760 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

marking necessary through .MEM_1255 stmt flags[13] = D.43103_724;
marking necessary through .MEM_1254 stmt flags[19] = D.43271_722;
marking necessary through .MEM_1043 stmt flags[13] = D.43103_75;
marking necessary through .MEM_1048 stmt flags[7] = D.43115_83;
marking necessary through .MEM_1056 stmt flags[22] = D.43129_94;
marking necessary through .MEM_1060 stmt flags[8] = D.43138_100;
marking necessary through .MEM_1063 stmt flags[16] = D.43147_106;
marking necessary through .MEM_1064 stmt flags[14] = D.43153_110;
marking necessary through .MEM_1067 stmt flags[14] = 0;
marking necessary through .MEM_1102 stmt flags[19] = D.43271_254;
marking necessary through .MEM_1101 stmt flags[13] = D.43103_252;
marking necessary through .MEM_1107 stmt flags[7] = D.43115_262;
marking necessary through .MEM_1260 stmt flags[7] = D.43115_732;
processing: flags[7] = D.43115_732;

Marking useful stmt: if (val_729 == 0B)

Marking useful stmt: if (D.43632_730 == 0)

marking necessary through D.43115_732 stmt D.43115_732 = D.43114_731 + 1;
processing: D.43115_732 = D.43114_731 + 1;

marking necessary through D.43114_731 stmt D.43114_731 = flags[7];
processing: D.43114_731 = flags[7];

processing: if (D.43632_730 == 0)

processing: if (val_729 == 0B)

Marking useful stmt: if (D.43628_727 == 0)

processing: if (D.43628_727 == 0)

Marking useful stmt: if (D.43625_725 == 0)

processing: if (D.43625_725 == 0)

Marking useful stmt: if (D.43620_720 != 0)

processing: if (D.43620_720 != 0)

processing: flags[7] = D.43115_262;

Marking useful stmt: if (val_259 == 0B)

Marking useful stmt: if (D.43281_260 == 0)

marking necessary through D.43115_262 stmt D.43115_262 = D.43114_261 + 1;
processing: D.43115_262 = D.43114_261 + 1;

marking necessary through D.43114_261 stmt D.43114_261 = flags[7];
processing: D.43114_261 = flags[7];

processing: if (D.43281_260 == 0)

processing: if (val_259 == 0B)

Marking useful stmt: if (D.43277_257 == 0)

processing: if (D.43277_257 == 0)

Marking useful stmt: if (D.43274_255 == 0)

processing: if (D.43274_255 == 0)

Marking useful stmt: if (D.43267_250 != 0)

processing: if (D.43267_250 != 0)

Marking useful stmt: if (D.43077_171 != 0B)

Marking useful stmt: if (D.43194_173 != 0)

processing: if (D.43194_173 != 0)

processing: if (D.43077_171 != 0B)

Marking useful stmt: if (D.43077_115 != 0B)

Marking useful stmt: if (D.43163_117 != 0)

Marking useful stmt: if (D.43169_124 != 0)

Marking useful stmt: if (D.39348_127 == 0)

Marking useful stmt: if (D.43174_129 == remote_port_121)

marking necessary through D.43077_171 stmt D.43077_171 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_171 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43174_129 == remote_port_121)

marking necessary through D.43174_129 stmt D.43174_129 = D.43171_128->remote_sdp_port;
processing: D.43174_129 = D.43171_128->remote_sdp_port;

marking necessary through D.43171_128 stmt D.43171_128 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_128 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: if (D.39348_127 == 0)

marking necessary through D.39348_127 stmt D.39348_127 = __builtin_strcmp (remote_host_119, D.43172_126);
processing: D.39348_127 = __builtin_strcmp (remote_host_119, D.43172_126);

marking necessary through D.43172_126 stmt D.43172_126 = D.43171_125->remote_sdp_ip;
processing: D.43172_126 = D.43171_125->remote_sdp_ip;

marking necessary through D.43171_125 stmt D.43171_125 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_125 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: if (D.43169_124 != 0)

marking necessary through D.43169_124 stmt D.43169_124 = D.43167_122 && D.43168_123;
processing: D.43169_124 = D.43167_122 && D.43168_123;

marking necessary through D.43167_122 stmt D.43167_122 = remote_host_119 != 0B;
marking necessary through D.43168_123 stmt D.43168_123 = remote_port_121 != 0;
processing: D.43168_123 = remote_port_121 != 0;

processing: D.43167_122 = remote_host_119 != 0B;

processing: if (D.43163_117 != 0)

processing: if (D.43077_115 != 0B)

Marking useful stmt: if (status_73 != 0)

marking necessary through D.43077_115 stmt D.43077_115 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_115 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (status_73 != 0)

processing: flags[13] = D.43103_252;

marking necessary through D.43103_252 stmt D.43103_252 = D.43102_251 + 1;
processing: D.43103_252 = D.43102_251 + 1;

marking necessary through D.43102_251 stmt D.43102_251 = flags[13];
processing: D.43102_251 = flags[13];

processing: flags[19] = D.43271_254;

marking necessary through D.43271_254 stmt D.43271_254 = D.43270_253 + 1;
processing: D.43271_254 = D.43270_253 + 1;

marking necessary through D.43270_253 stmt D.43270_253 = flags[19];
processing: D.43270_253 = flags[19];

processing: flags[14] = 0;

Marking useful stmt: if (D.43158_114 != 0)

processing: if (D.43158_114 != 0)

Marking useful stmt: if (val_113 != 0B)

processing: if (val_113 != 0B)

Marking useful stmt: if (D.43152_111 != 0)

processing: if (D.43152_111 != 0)

marking necessary through D.43152_111 stmt D.43152_111 = flags[14];
processing: D.43152_111 = flags[14];

processing: flags[14] = D.43153_110;

Marking useful stmt: if (D.43149_108 == 0)

marking necessary through D.43153_110 stmt D.43153_110 = D.43152_109 + 1;
processing: D.43153_110 = D.43152_109 + 1;

marking necessary through D.43152_109 stmt D.43152_109 = flags[14];
processing: D.43152_109 = flags[14];

processing: if (D.43149_108 == 0)

marking necessary through D.43149_108 stmt D.43149_108 = strcasecmp (D.43148_107, "L16");
processing: D.43149_108 = strcasecmp (D.43148_107, "L16");

marking necessary through D.43148_107 stmt D.43148_107 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.iananame;
processing: D.43148_107 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.iananame;

processing: flags[16] = D.43147_106;

Marking useful stmt: if (D.43143_104 != 0)

marking necessary through D.43147_106 stmt D.43147_106 = D.43146_105 + 1;
processing: D.43147_106 = D.43146_105 + 1;

marking necessary through D.43146_105 stmt D.43146_105 = flags[16];
processing: D.43146_105 = flags[16];

processing: if (D.43143_104 != 0)

Marking useful stmt: if (D.43139_101 != 0)

marking necessary through D.43143_104 stmt D.43143_104 = D.43099_103->cng_pt;
processing: D.43143_104 = D.43099_103->cng_pt;

marking necessary through D.43099_103 stmt D.43099_103 = smh_46->mparams;
processing: D.43099_103 = smh_46->mparams;

processing: if (D.43139_101 != 0)

processing: flags[8] = D.43138_100;

Marking useful stmt: if (val_97 == 0B)

Marking useful stmt: if (D.43136_98 == 0)

marking necessary through D.43138_100 stmt D.43138_100 = D.43137_99 + 1;
processing: D.43138_100 = D.43137_99 + 1;

marking necessary through D.43137_99 stmt D.43137_99 = flags[8];
processing: D.43137_99 = flags[8];

processing: if (D.43136_98 == 0)

processing: if (val_97 == 0B)

Marking useful stmt: if (D.43132_95 == 0)

processing: if (D.43132_95 == 0)

processing: flags[22] = D.43129_94;

Marking useful stmt: if (D.43124_89 != 0)

Marking useful stmt: if (D.43127_92 != 0)

marking necessary through D.43129_94 stmt D.43129_94 = D.43128_93 + 1;
processing: D.43129_94 = D.43128_93 + 1;

marking necessary through D.43128_93 stmt D.43128_93 = flags[22];
processing: D.43128_93 = flags[22];

processing: if (D.43127_92 != 0)

Marking useful stmt: if (val_91 != 0B)

processing: if (val_91 != 0B)

processing: if (D.43124_89 != 0)

processing: flags[7] = D.43115_83;

Marking useful stmt: if (val_80 == 0B)

Marking useful stmt: if (D.43113_81 == 0)

marking necessary through D.43115_83 stmt D.43115_83 = D.43114_82 + 1;
processing: D.43115_83 = D.43114_82 + 1;

marking necessary through D.43114_82 stmt D.43114_82 = flags[7];
processing: D.43114_82 = flags[7];

processing: if (D.43113_81 == 0)

processing: if (val_80 == 0B)

Marking useful stmt: if (D.43109_78 == 0)

processing: if (D.43109_78 == 0)

Marking useful stmt: if (D.43106_76 == 0)

processing: if (D.43106_76 == 0)

processing: flags[13] = D.43103_75;

marking necessary through D.43103_75 stmt D.43103_75 = D.43102_74 + 1;
processing: D.43103_75 = D.43102_74 + 1;

marking necessary through D.43102_74 stmt D.43102_74 = flags[13];
processing: D.43102_74 = flags[13];

processing: flags[19] = D.43271_722;

marking necessary through D.43271_722 stmt D.43271_722 = D.43270_721 + 1;
processing: D.43271_722 = D.43270_721 + 1;

marking necessary through D.43270_721 stmt D.43270_721 = flags[19];
processing: D.43270_721 = flags[19];

processing: flags[13] = D.43103_724;

marking necessary through D.43103_724 stmt D.43103_724 = D.43102_723 + 1;
processing: D.43103_724 = D.43102_723 + 1;

marking necessary through D.43102_723 stmt D.43102_723 = flags[13];
processing: D.43102_723 = flags[13];

processing: if (D.43096_691 != 0B)

Marking useful stmt: if (D.43096_638 != 0B)

Marking useful stmt: if (D.43570_640 != 0)

Marking useful stmt: if (D.43576_647 != 0)

Marking useful stmt: if (D.39400_650 == 0)

marking necessary through D.43096_691 stmt D.43096_691 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_691 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.39400_650 == 0)

marking necessary through D.39400_650 stmt D.39400_650 = __builtin_strcmp (remote_host_642, D.43578_649);
processing: D.39400_650 = __builtin_strcmp (remote_host_642, D.43578_649);

marking necessary through D.43578_649 stmt D.43578_649 = D.43561_648->remote_sdp_ip;
processing: D.43578_649 = D.43561_648->remote_sdp_ip;

marking necessary through D.43561_648 stmt D.43561_648 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_648 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: if (D.43576_647 != 0)

marking necessary through D.43576_647 stmt D.43576_647 = D.43574_645 && D.43575_646;
processing: D.43576_647 = D.43574_645 && D.43575_646;

marking necessary through D.43574_645 stmt D.43574_645 = remote_host_642 != 0B;
marking necessary through D.43575_646 stmt D.43575_646 = remote_port_644 != 0;
processing: D.43575_646 = remote_port_644 != 0;

processing: D.43574_645 = remote_host_642 != 0B;

processing: if (D.43570_640 != 0)

processing: if (D.43096_638 != 0B)

marking necessary through D.43096_638 stmt D.43096_638 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_638 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43598_693 != 0)

processing: if (D.43565_652 == remote_port_644)

marking necessary through D.43565_652 stmt D.43565_652 = D.43561_651->remote_sdp_port;
processing: D.43565_652 = D.43561_651->remote_sdp_port;

marking necessary through D.43561_651 stmt D.43561_651 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_651 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: if (D.43565_637 != 0)

marking necessary through D.43565_637 stmt D.43565_637 = D.43561_636->remote_sdp_port;
processing: D.43565_637 = D.43561_636->remote_sdp_port;

marking necessary through D.43561_636 stmt D.43561_636 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_636 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: if (D.43562_635 != 0B)

marking necessary through D.43562_635 stmt D.43562_635 = D.43561_634->rm_encoding;
processing: D.43562_635 = D.43561_634->rm_encoding;

marking necessary through D.43561_634 stmt D.43561_634 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_634 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: if (D.43558_633 != 0)

Marking useful stmt: if (D.43097_69 == 0)

processing: if (D.43097_69 == 0)

processing: if (D.43791_941 != 0)

marking necessary through D.43791_941 stmt D.43791_941 = D.43262_939 && D.43790_940;
processing: D.43791_941 = D.43262_939 && D.43790_940;

marking necessary through D.43262_939 stmt D.43262_939 = session_45(D) != 0B;
marking necessary through D.43790_940 stmt D.43790_940 = v_engine_49 != 0B;
processing: D.43790_940 = v_engine_49 != 0B;

marking necessary through v_engine_49 stmt v_engine_49 = &smh_46->engines[1];
processing: v_engine_49 = &smh_46->engines[1];

processing: D.43262_939 = session_45(D) != 0B;

processing: if (D.43303_314 != 0)

processing: if (D.43676_815 != 0)

processing: if (D.43090_65 != 0)

processing: if (D.43087_63 == 0)

Marking useful stmt: if (D.43084_60 != 0)

processing: if (D.43084_60 != 0)

processing: if (D.43093_67 != 0)

processing: status_4 = PHI <0(15), status_73(50), status_73(70), status_73(202), status_73(203), status_73(69)>

Marking useful stmt: if (D.43264_248 != 0)

Marking useful stmt: if (D.43552_622 != 0)

processing: if (D.43552_622 != 0)

processing: if (D.43264_248 != 0)

marking necessary through D.43264_248 stmt D.43264_248 = D.43262_246 && D.43263_247;
processing: D.43264_248 = D.43262_246 && D.43263_247;

marking necessary through D.43262_246 stmt D.43262_246 = session_45(D) != 0B;
marking necessary through D.43263_247 stmt D.43263_247 = a_engine_48 != 0B;
processing: D.43263_247 = a_engine_48 != 0B;

marking necessary through a_engine_48 stmt a_engine_48 = &smh_46->engines;
processing: a_engine_48 = &smh_46->engines;

processing: D.43262_246 = session_45(D) != 0B;

processing: if (session_45(D) == 0B)

processing: switch_core_recovery_track (session_45(D));

marking necessary through .MEM_1281 stmt flags[30] = D.43662_781;
marking necessary through .MEM_1280 stmt flags[0] = 0;
marking necessary through .MEM_1279 stmt flags[3] = 0;
marking necessary through .MEM_1269 stmt flags[8] = D.43138_765;
marking necessary through .MEM_1268 stmt flags[13] = D.43103_763;
marking necessary through .MEM_1275 stmt flags[7] = D.43115_775;
marking necessary through .MEM_1277 stmt flags[19] = D.43271_779;
processing: flags[19] = D.43271_779;

Marking useful stmt: if (D.43658_777 != 0)

marking necessary through D.43271_779 stmt D.43271_779 = D.43270_778 + 1;
processing: D.43271_779 = D.43270_778 + 1;

marking necessary through D.43270_778 stmt D.43270_778 = flags[19];
processing: D.43270_778 = flags[19];

processing: if (D.43658_777 != 0)

processing: flags[7] = D.43115_775;

Marking useful stmt: if (D.43655_773 == 0)

marking necessary through D.43115_775 stmt D.43115_775 = D.43114_774 + 1;
processing: D.43115_775 = D.43114_774 + 1;

marking necessary through D.43114_774 stmt D.43114_774 = flags[7];
processing: D.43114_774 = flags[7];

processing: if (D.43655_773 == 0)

Marking useful stmt: if (val_770 == 0B)

Marking useful stmt: if (D.43654_771 == 0)

processing: if (D.43654_771 == 0)

processing: if (val_770 == 0B)

Marking useful stmt: if (D.43650_768 == 0)

processing: if (D.43650_768 == 0)

Marking useful stmt: if (D.43647_766 == 0)

processing: if (D.43647_766 == 0)

processing: flags[13] = D.43103_763;

marking necessary through D.43103_763 stmt D.43103_763 = D.43102_762 + 1;
processing: D.43103_763 = D.43102_762 + 1;

marking necessary through D.43102_762 stmt D.43102_762 = flags[13];
processing: D.43102_762 = flags[13];

processing: flags[8] = D.43138_765;

marking necessary through D.43138_765 stmt D.43138_765 = D.43137_764 + 1;
processing: D.43138_765 = D.43137_764 + 1;

marking necessary through D.43137_764 stmt D.43137_764 = flags[8];
processing: D.43137_764 = flags[8];

processing: flags[3] = 0;

processing: flags[0] = 0;

processing: flags[30] = D.43662_781;

marking necessary through D.43662_781 stmt D.43662_781 = D.43661_780 + 1;
processing: D.43662_781 = D.43661_780 + 1;

marking necessary through D.43661_780 stmt D.43661_780 = flags[30];
processing: D.43661_780 = flags[30];

processing: switch_channel_clear_flag (D.43073_943, 103);

marking necessary through D.43073_943 stmt D.43073_943 = session_45(D)->channel;
processing: D.43073_943 = session_45(D)->channel;

processing: check_dtls_reinvite (session_45(D), v_engine_49);

processing: switch_channel_perform_hangup (D.43073_628, "src/switch_core_media.c", &__func__, 5555, 27);

marking necessary through D.43073_628 stmt D.43073_628 = session_45(D)->channel;
processing: D.43073_628 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5554, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", iftmp.68_41);

marking necessary through iftmp.68_41 stmt iftmp.68_41 = PHI <iftmp.68_626(308), ""(307)>
processing: iftmp.68_41 = PHI <iftmp.68_626(308), ""(307)>

marking necessary through iftmp.68_626 stmt iftmp.68_626 = err;
Marking useful stmt: if (err.45_625 != 0B)

processing: if (err.45_625 != 0B)

marking necessary through err.45_625 stmt err.45_625 = err;
processing: err.45_625 = err;

processing: iftmp.68_626 = err;

processing: switch_channel_perform_hangup (D.43073_938, "src/switch_core_media.c", &__func__, 5548, 27);

marking necessary through D.43073_938 stmt D.43073_938 = session_45(D)->channel;
processing: D.43073_938 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5547, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", iftmp.67_40);

marking necessary through iftmp.67_40 stmt iftmp.67_40 = PHI <iftmp.67_936(305), ""(304)>
processing: iftmp.67_40 = PHI <iftmp.67_936(305), ""(304)>

marking necessary through iftmp.67_936 stmt iftmp.67_936 = err;
Marking useful stmt: if (err.45_935 != 0B)

processing: if (err.45_935 != 0B)

marking necessary through err.45_935 stmt err.45_935 = err;
processing: err.45_935 = err;

processing: iftmp.67_936 = err;

processing: switch_rtp_udptl_mode (D.43096_934);

Marking useful stmt: if (D.43777_933 != 0)

marking necessary through D.43096_934 stmt D.43096_934 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_934 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43777_933 != 0)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5542, session_45(D), 7, "Activating video UDPTL mode\n");

processing: D.43777_933 = switch_channel_test_flag (D.43073_932, 74);

marking necessary through D.43073_932 stmt D.43073_932 = session_45(D)->channel;
processing: D.43073_932 = session_45(D)->channel;

processing: switch_core_session_apply_crypto (session_45(D), 1);

processing: switch_channel_set_variable_printf (D.43073_930, "rtp_use_video_ssrc", "%u", D.43689_931);

marking necessary through D.43073_930 stmt D.43073_930 = session_45(D)->channel;
marking necessary through D.43689_931 stmt D.43689_931 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
processing: D.43689_931 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;

processing: D.43073_930 = session_45(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = D.43776_929;

processing: D.43776_929 = switch_rtp_get_ssrc (D.43096_928);

marking necessary through D.43096_928 stmt D.43096_928 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_928 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_channel_set_variable_printf (D.43073_924, "rtp_use_video_pt", "%d", D.43595_927);

marking necessary through D.43073_924 stmt D.43073_924 = session_45(D)->channel;
marking necessary through D.43595_927 stmt D.43595_927 = (int) D.43594_926;
processing: D.43595_927 = (int) D.43594_926;

marking necessary through D.43594_926 stmt D.43594_926 = D.43561_925->agreed_pt;
processing: D.43594_926 = D.43561_925->agreed_pt;

marking necessary through D.43561_925 stmt D.43561_925 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_925 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43073_924 = session_45(D)->channel;

processing: switch_rtp_intentional_bugs (D.43096_919, D.43775_923);

marking necessary through D.43096_919 stmt D.43096_919 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43775_923 stmt D.43775_923 = D.43773_920 | D.43774_922;
processing: D.43775_923 = D.43773_920 | D.43774_922;

marking necessary through D.43773_920 stmt D.43773_920 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
marking necessary through D.43774_922 stmt D.43774_922 = D.43099_921->manual_video_rtp_bugs;
processing: D.43774_922 = D.43099_921->manual_video_rtp_bugs;

marking necessary through D.43099_921 stmt D.43099_921 = smh_46->mparams;
processing: D.43099_921 = smh_46->mparams;

processing: D.43773_920 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;

processing: D.43096_919 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_core_media_parse_rtp_bugs (D.43772_918, val_917);

Marking useful stmt: if (val_917 != 0B)

marking necessary through D.43772_918 stmt D.43772_918 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
processing: D.43772_918 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;

processing: if (val_917 != 0B)

processing: val_917 = switch_channel_get_variable_dup (D.43073_916, "rtp_manual_video_rtp_bugs", 1, -1);

marking necessary through D.43073_916 stmt D.43073_916 = session_45(D)->channel;
processing: D.43073_916 = session_45(D)->channel;

processing: switch_rtp_add_dtls (D.43096_912, D.43763_913, D.43764_914, D.43765_915);

Marking useful stmt: if (D.43760_910 != 0B)

marking necessary through D.43096_912 stmt D.43096_912 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43763_913 stmt D.43763_913 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
marking necessary through D.43764_914 stmt D.43764_914 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
marking necessary through D.43765_915 stmt D.43765_915 = dtype_39 | 8;
processing: D.43765_915 = dtype_39 | 8;

marking necessary through dtype_39 stmt dtype_39 = PHI <1(292), 2(293)>
processing: dtype_39 = PHI <1(292), 2(293)>

Marking useful stmt: if (D.43750_892 != 0)

Marking useful stmt: if (D.43754_895 == 0)

processing: if (D.43754_895 == 0)

processing: if (D.43750_892 != 0)

Marking useful stmt: if (D.43747_890 != 0)

processing: if (D.43747_890 != 0)

Marking useful stmt: if (D.48123_1352 == 0)

processing: if (D.48123_1352 == 0)

marking necessary through D.48123_1352 stmt D.48123_1352 = PHI <1(286), 1(287), 0(288)>
processing: D.48123_1352 = PHI <1(286), 1(287), 0(288)>

Marking useful stmt: if (D.43743_888 == 0B)

Marking useful stmt: if (D.48124_1351 == 0)

processing: if (D.48124_1351 == 0)

marking necessary through D.48124_1351 stmt D.48124_1351 = MEM[(const char *)smh_46 + 22400B];
processing: D.48124_1351 = MEM[(const char *)smh_46 + 22400B];

processing: if (D.43743_888 == 0B)

marking necessary through D.43743_888 stmt D.43743_888 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint.str;
processing: D.43743_888 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint.str;

processing: D.43764_914 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;

processing: D.43763_913 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;

processing: D.43096_912 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43760_910 != 0B)

Marking useful stmt: if (D.43717_908 <= 0)

marking necessary through D.43760_910 stmt D.43760_910 = D.43099_909->rtcp_video_interval_msec;
processing: D.43760_910 = D.43099_909->rtcp_video_interval_msec;

marking necessary through D.43099_909 stmt D.43099_909 = smh_46->mparams;
processing: D.43099_909 = smh_46->mparams;

processing: if (D.43717_908 <= 0)

marking necessary through D.43717_908 stmt D.43717_908 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_908 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: switch_rtp_add_dtls (D.43096_904, D.43763_905, D.43764_906, D.43765_907);

marking necessary through D.43096_904 stmt D.43096_904 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43763_905 stmt D.43763_905 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
marking necessary through D.43764_906 stmt D.43764_906 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
marking necessary through D.43765_907 stmt D.43765_907 = xtype_26 | dtype_39;
processing: D.43765_907 = xtype_26 | dtype_39;

marking necessary through xtype_26 stmt xtype_26 = PHI <4(294), 4(295), 12(296)>
processing: xtype_26 = PHI <4(294), 4(295), 12(296)>

Marking useful stmt: if (D.43717_900 > 0)

Marking useful stmt: if (D.43760_902 != 0B)

processing: if (D.43760_902 != 0B)

marking necessary through D.43760_902 stmt D.43760_902 = D.43099_901->rtcp_video_interval_msec;
processing: D.43760_902 = D.43099_901->rtcp_video_interval_msec;

marking necessary through D.43099_901 stmt D.43099_901 = smh_46->mparams;
processing: D.43099_901 = smh_46->mparams;

processing: if (D.43717_900 > 0)

marking necessary through D.43717_900 stmt D.43717_900 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_900 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: D.43764_906 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;

processing: D.43763_905 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;

processing: D.43096_904 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43754_895 = switch_channel_direction (D.43434_894);

marking necessary through D.43434_894 stmt D.43434_894 = D.43429_893->channel;
processing: D.43434_894 = D.43429_893->channel;

marking necessary through D.43429_893 stmt D.43429_893 = smh_46->session;
processing: D.43429_893 = smh_46->session;

processing: D.43750_892 = dtls_ok (D.43429_891);

marking necessary through D.43429_891 stmt D.43429_891 = smh_46->session;
processing: D.43429_891 = smh_46->session;

processing: D.43747_890 = switch_rtp_has_dtls ();

processing: switch_rtp_activate_ice (D.43096_879, D.43697_880, D.43698_881, D.43699_882, D.43700_883, 1, iftmp.65_38, D.43706_887);

Marking useful stmt: if (D.43717_869 > 0)

Marking useful stmt: if (D.39417_874 == 0)

Marking useful stmt: if (D.43735_876 == D.43736_878)

marking necessary through D.43096_879 stmt D.43096_879 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43697_880 stmt D.43697_880 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
marking necessary through D.43698_881 stmt D.43698_881 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
marking necessary through D.43699_882 stmt D.43699_882 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
marking necessary through D.43700_883 stmt D.43700_883 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
marking necessary through iftmp.65_38 stmt iftmp.65_38 = PHI <2(283), 6(284)>
marking necessary through D.43706_887 stmt D.43706_887 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
processing: D.43706_887 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;

processing: iftmp.65_38 = PHI <2(283), 6(284)>

Marking useful stmt: if (D.43739_884 == 1)

processing: if (D.43739_884 == 1)

processing: D.43700_883 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;

processing: D.43699_882 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;

processing: D.43698_881 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;

processing: D.43697_880 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;

processing: D.43096_879 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43735_876 == D.43736_878)

marking necessary through D.43735_876 stmt D.43735_876 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_875][1].con_port;
marking necessary through D.43736_878 stmt D.43736_878 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_877][0].con_port;
processing: D.43736_878 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_877][0].con_port;

marking necessary through D.43693_877 stmt D.43693_877 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
processing: D.43693_877 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];

processing: D.43735_876 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_875][1].con_port;

marking necessary through D.43725_875 stmt D.43725_875 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
processing: D.43725_875 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];

processing: if (D.39417_874 == 0)

marking necessary through D.39417_874 stmt D.39417_874 = __builtin_strcmp (D.43732_871, D.43733_873);
processing: D.39417_874 = __builtin_strcmp (D.43732_871, D.43733_873);

marking necessary through D.43732_871 stmt D.43732_871 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_870][1].con_addr;
marking necessary through D.43733_873 stmt D.43733_873 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_872][0].con_addr;
processing: D.43733_873 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_872][0].con_addr;

marking necessary through D.43693_872 stmt D.43693_872 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
processing: D.43693_872 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];

processing: D.43732_871 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_870][1].con_addr;

marking necessary through D.43725_870 stmt D.43725_870 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
processing: D.43725_870 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];

processing: if (D.43717_869 > 0)

Marking useful stmt: if (D.43726_868 != 0)

marking necessary through D.43717_869 stmt D.43717_869 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_869 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: if (D.43726_868 != 0)

Marking useful stmt: if (val_844 != 0B)

Marking useful stmt: if (val_846 != 0B)

marking necessary through D.43726_868 stmt D.43726_868 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_867][1].ready;
processing: D.43726_868 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_867][1].ready;

marking necessary through D.43725_867 stmt D.43725_867 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
processing: D.43725_867 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];

processing: if (val_846 != 0B)

marking necessary through val_846 stmt val_846 = D.43099_845->rtcp_video_interval_msec;
processing: val_846 = D.43099_845->rtcp_video_interval_msec;

marking necessary through D.43099_845 stmt D.43099_845 = smh_46->mparams;
processing: D.43099_845 = smh_46->mparams;

processing: if (val_844 != 0B)

processing: D.43739_884 = switch_ice_direction (session_45(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5484, session_45(D), 6, "Activating VIDEO RTCP ICE\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5481, session_45(D), 6, "Skipping VIDEO RTCP ICE (Same as VIDEO RTP)\n");

processing: switch_rtp_activate_rtcp (D.43096_864, 10000, remote_port_25, D.43718_866);

Marking useful stmt: if (D.43713_852 == 0)

marking necessary through D.43096_864 stmt D.43096_864 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through remote_port_25 stmt remote_port_25 = PHI <remote_port_849(271), remote_port_851(272)>
marking necessary through D.43718_866 stmt D.43718_866 = D.43717_865 > 0;
processing: D.43718_866 = D.43717_865 > 0;

marking necessary through D.43717_865 stmt D.43717_865 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_865 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: remote_port_25 = PHI <remote_port_849(271), remote_port_851(272)>

marking necessary through remote_port_849 stmt remote_port_849 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
marking necessary through remote_port_851 stmt remote_port_851 = (switch_port_t) D.48117_1349;
Marking useful stmt: if (rport_848 != 0B)

processing: if (rport_848 != 0B)

processing: remote_port_851 = (switch_port_t) D.48117_1349;

processing: remote_port_849 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;

processing: D.43096_864 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43713_852 == 0)

marking necessary through D.43713_852 stmt D.43713_852 = strcasecmp (val_3, "passthru");
processing: D.43713_852 = strcasecmp (val_3, "passthru");

marking necessary through val_3 stmt val_3 = PHI <val_844(269), val_846(270)>
processing: val_3 = PHI <val_844(269), val_846(270)>

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5471, session_45(D), 6, "Activating VIDEO RTCP PORT %d mux %d\n", D.43716_861, D.43724_863);

marking necessary through D.43716_861 stmt D.43716_861 = (int) remote_port_25;
marking necessary through D.43724_863 stmt D.43724_863 = (int) D.43717_862;
processing: D.43724_863 = (int) D.43717_862;

marking necessary through D.43717_862 stmt D.43717_862 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_862 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: D.43716_861 = (int) remote_port_25;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5467, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1350);

Marking useful stmt: if (D.43721_859 > 499900)

processing: if (D.43721_859 > 499900)

marking necessary through D.43721_859 stmt D.43721_859 = interval.64_858 + 4294967196;
processing: D.43721_859 = interval.64_858 + 4294967196;

marking necessary through interval.64_858 stmt interval.64_858 = (unsigned int) interval_1350;
processing: interval.64_858 = (unsigned int) interval_1350;

processing: interval_1350 = strtol (val_3, 0B, 10);

processing: switch_rtp_activate_rtcp (D.43096_854, -1, remote_port_25, D.43718_856);

marking necessary through D.43096_854 stmt D.43096_854 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43718_856 stmt D.43718_856 = D.43717_855 > 0;
processing: D.43718_856 = D.43717_855 > 0;

marking necessary through D.43717_855 stmt D.43717_855 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
processing: D.43717_855 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;

processing: D.43096_854 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5462, session_45(D), 6, "Activating VIDEO RTCP PASSTHRU PORT %d\n", D.43716_853);

marking necessary through D.43716_853 stmt D.43716_853 = (int) remote_port_25;
processing: D.43716_853 = (int) remote_port_25;

processing: D.48117_1349 = strtol (rport_848, 0B, 10);

processing: rport_848 = switch_channel_get_variable_dup (D.43073_847, "rtp_remote_video_rtcp_port", 1, -1);

marking necessary through D.43073_847 stmt D.43073_847 = session_45(D)->channel;
processing: D.43073_847 = session_45(D)->channel;

processing: val_844 = switch_channel_get_variable_dup (D.43073_843, "rtcp_video_interval_msec", 1, -1);

marking necessary through D.43073_843 stmt D.43073_843 = session_45(D)->channel;
processing: D.43073_843 = session_45(D)->channel;

processing: switch_rtp_activate_ice (D.43096_834, D.43697_835, D.43698_836, D.43699_837, D.43700_838, 0, iftmp.63_37, D.43706_842);

Marking useful stmt: if (D.43694_833 != 0)

marking necessary through D.43096_834 stmt D.43096_834 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43697_835 stmt D.43697_835 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
marking necessary through D.43698_836 stmt D.43698_836 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
marking necessary through D.43699_837 stmt D.43699_837 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
marking necessary through D.43700_838 stmt D.43700_838 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
marking necessary through iftmp.63_37 stmt iftmp.63_37 = PHI <2(266), 6(267)>
marking necessary through D.43706_842 stmt D.43706_842 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
processing: D.43706_842 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;

processing: iftmp.63_37 = PHI <2(266), 6(267)>

Marking useful stmt: if (D.43702_839 == 1)

processing: if (D.43702_839 == 1)

processing: D.43700_838 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;

processing: D.43699_837 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;

processing: D.43698_836 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;

processing: D.43697_835 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;

processing: D.43096_834 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43694_833 != 0)

marking necessary through D.43694_833 stmt D.43694_833 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_832][0].ready;
processing: D.43694_833 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_832][0].ready;

marking necessary through D.43693_832 stmt D.43693_832 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
processing: D.43693_832 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];

processing: D.43702_839 = switch_ice_direction (session_45(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5433, session_45(D), 6, "Activating Video ICE\n");

processing: gen_ice (session_45(D), 1, 0B, 0);

processing: switch_rtp_set_remote_ssrc (D.43096_830, D.43690_831);

Marking useful stmt: if (D.43690_829 != 0)

marking necessary through D.43096_830 stmt D.43096_830 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43690_831 stmt D.43690_831 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
processing: D.43690_831 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;

processing: D.43096_830 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43690_829 != 0)

marking necessary through D.43690_829 stmt D.43690_829 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
processing: D.43690_829 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;

processing: switch_rtp_set_ssrc (D.43096_827, D.43689_828);

Marking useful stmt: if (ssrc_824 != 0B)

marking necessary through D.43096_827 stmt D.43096_827 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43689_828 stmt D.43689_828 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
processing: D.43689_828 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;

processing: D.43096_827 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (ssrc_824 != 0B)

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = ssrc_ul_825;

processing: switch_rtp_set_ssrc (D.43096_826, ssrc_ul_825);

marking necessary through D.43096_826 stmt D.43096_826 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_826 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: ssrc_ul_825 = strtoul (ssrc_824, 0B, 10);

processing: ssrc_824 = switch_channel_get_variable_dup (D.43073_823, "rtp_use_video_ssrc", 1, -1);

marking necessary through D.43073_823 stmt D.43073_823 = session_45(D)->channel;
processing: D.43073_823 = session_45(D)->channel;

processing: switch_channel_set_flag_value (D.43073_822, 23, 1);

marking necessary through D.43073_822 stmt D.43073_822 = session_45(D)->channel;
processing: D.43073_822 = session_45(D)->channel;

processing: start_video_thread (session_45(D));

processing: switch_rtp_set_payload_map (D.43096_820, D.43685_821);

marking necessary through D.43096_820 stmt D.43096_820 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43685_821 stmt D.43685_821 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].payload_map;
processing: D.43685_821 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].payload_map;

processing: D.43096_820 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_rtp_set_flag (D.43096_819, 37);

Marking useful stmt: if (D.43682_818 != 0)

marking necessary through D.43096_819 stmt D.43096_819 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_819 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43682_818 != 0)

marking necessary through D.43682_818 stmt D.43682_818 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].pli;
processing: D.43682_818 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].pli;

processing: switch_rtp_set_flag (D.43096_817, 36);

Marking useful stmt: if (D.43679_816 != 0)

marking necessary through D.43096_817 stmt D.43096_817 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_817 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43679_816 != 0)

marking necessary through D.43679_816 stmt D.43679_816 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].fir;
processing: D.43679_816 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].fir;

processing: D.43676_815 = switch_rtp_ready (D.43096_814);

marking necessary through D.43096_814 stmt D.43096_814 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_814 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5391, session_45(D), 7, "%sVIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d [%s]\n", iftmp.61_35, D.43670_797, D.43172_799, D.43593_801, D.43578_803, D.43584_806, D.43595_809, 0, iftmp.62_36);

marking necessary through iftmp.61_35 stmt iftmp.61_35 = PHI <"PROXY "(251), ""(252)>
marking necessary through D.43172_799 stmt D.43172_799 = D.43171_798->remote_sdp_ip;
marking necessary through D.43593_801 stmt D.43593_801 = (int) D.43592_800;
marking necessary through D.43578_803 stmt D.43578_803 = D.43561_802->remote_sdp_ip;
marking necessary through D.43584_806 stmt D.43584_806 = (int) D.43565_805;
marking necessary through D.43595_809 stmt D.43595_809 = (int) D.43594_808;
marking necessary through iftmp.62_36 stmt iftmp.62_36 = PHI <iftmp.62_812(254), "SUCCESS"(253)>
processing: iftmp.62_36 = PHI <iftmp.62_812(254), "SUCCESS"(253)>

marking necessary through iftmp.62_812 stmt iftmp.62_812 = err;
Marking useful stmt: if (D.43672_811 == 0)

processing: if (D.43672_811 == 0)

processing: iftmp.62_812 = err;

processing: D.43595_809 = (int) D.43594_808;

marking necessary through D.43594_808 stmt D.43594_808 = D.43561_807->agreed_pt;
processing: D.43594_808 = D.43561_807->agreed_pt;

marking necessary through D.43561_807 stmt D.43561_807 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_807 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43584_806 = (int) D.43565_805;

marking necessary through D.43565_805 stmt D.43565_805 = D.43561_804->remote_sdp_port;
processing: D.43565_805 = D.43561_804->remote_sdp_port;

marking necessary through D.43561_804 stmt D.43561_804 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_804 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_803 = D.43561_802->remote_sdp_ip;

marking necessary through D.43561_802 stmt D.43561_802 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_802 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43593_801 = (int) D.43592_800;

marking necessary through D.43592_800 stmt D.43592_800 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
processing: D.43592_800 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: D.43172_799 = D.43171_798->remote_sdp_ip;

marking necessary through D.43171_798 stmt D.43171_798 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_798 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: iftmp.61_35 = PHI <"PROXY "(251), ""(252)>

Marking useful stmt: if (D.43666_793 != 0)

processing: if (D.43666_793 != 0)

processing: D.43672_811 = switch_rtp_ready (D.43096_810);

marking necessary through D.43096_810 stmt D.43096_810 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_810 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43670_797 = switch_channel_get_name (D.43073_796);

marking necessary through D.43073_796 stmt D.43073_796 = session_45(D)->channel;
processing: D.43073_796 = session_45(D)->channel;

processing: D.43666_793 = switch_channel_test_flag (D.43073_792, 29);

marking necessary through D.43073_792 stmt D.43073_792 = session_45(D)->channel;
processing: D.43073_792 = session_45(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session = D.43664_791;

processing: D.43664_791 = switch_rtp_new (D.43184_782, D.43592_783, D.43578_785, D.43565_787, D.43594_789, 1, 90000, &flags, 0B, &err, D.43663_790);

marking necessary through D.43184_782 stmt D.43184_782 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
marking necessary through D.43592_783 stmt D.43592_783 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
marking necessary through D.43578_785 stmt D.43578_785 = D.43561_784->remote_sdp_ip;
marking necessary through D.43565_787 stmt D.43565_787 = D.43561_786->remote_sdp_port;
marking necessary through D.43594_789 stmt D.43594_789 = D.43561_788->agreed_pt;
processing: D.43594_789 = D.43561_788->agreed_pt;

marking necessary through D.43561_788 stmt D.43561_788 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_788 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43565_787 = D.43561_786->remote_sdp_port;

marking necessary through D.43561_786 stmt D.43561_786 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_786 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_785 = D.43561_784->remote_sdp_ip;

marking necessary through D.43561_784 stmt D.43561_784 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_784 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43592_783 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: D.43184_782 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;

processing: D.43663_790 = switch_core_session_get_pool (session_45(D));

processing: switch_core_media_set_video_codec (session_45(D), 0);

processing: D.43658_777 = switch_channel_test_flag (D.43073_776, 29);

marking necessary through D.43073_776 stmt D.43073_776 = session_45(D)->channel;
processing: D.43073_776 = session_45(D)->channel;

processing: D.43655_773 = switch_channel_test_flag (D.43073_772, 106);

marking necessary through D.43073_772 stmt D.43073_772 = session_45(D)->channel;
processing: D.43073_772 = session_45(D)->channel;

processing: D.43654_771 = switch_true (val_770);

processing: val_770 = switch_channel_get_variable_dup (D.43073_769, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_769 stmt D.43073_769 = session_45(D)->channel;
processing: D.43073_769 = session_45(D)->channel;

processing: D.43650_768 = switch_channel_test_flag (D.43073_767, 15);

marking necessary through D.43073_767 stmt D.43073_767 = session_45(D)->channel;
processing: D.43073_767 = session_45(D)->channel;

processing: D.43647_766 = switch_media_handle_test_media_flag (smh_46, 10);

processing: memset (&flags, 0, 156);

processing: switch_core_media_choose_port (session_45(D), 1, 1);

Marking useful stmt: if (D.43592_761 == 0)

processing: if (D.43592_761 == 0)

marking necessary through D.43592_761 stmt D.43592_761 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
processing: D.43592_761 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: var_758 = switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);

marking necessary through D.43073_757 stmt D.43073_757 = session_45(D)->channel;
processing: D.43073_757 = session_45(D)->channel;

processing: switch_rtp_set_default_payload (D.43096_752, D.43594_754);

Marking useful stmt: if (D.43636_751 != 0)

marking necessary through D.43096_752 stmt D.43096_752 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43594_754 stmt D.43594_754 = D.43561_753->agreed_pt;
processing: D.43594_754 = D.43561_753->agreed_pt;

marking necessary through D.43561_753 stmt D.43561_753 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_753 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43096_752 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43636_751 != 0)

processing: D.43636_751 = switch_rtp_ready (D.43096_750);

marking necessary through D.43096_750 stmt D.43096_750 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_750 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5334, session_45(D), 7, "PROXY VIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43633_735, D.43172_737, D.43593_739, D.43578_741, D.43584_744, D.43595_747, D.43635_749);

marking necessary through D.43172_737 stmt D.43172_737 = D.43171_736->remote_sdp_ip;
marking necessary through D.43593_739 stmt D.43593_739 = (int) D.43592_738;
marking necessary through D.43578_741 stmt D.43578_741 = D.43561_740->remote_sdp_ip;
marking necessary through D.43584_744 stmt D.43584_744 = (int) D.43565_743;
marking necessary through D.43595_747 stmt D.43595_747 = (int) D.43594_746;
marking necessary through D.43635_749 stmt D.43635_749 = D.43634_748 / 1000;
processing: D.43635_749 = D.43634_748 / 1000;

marking necessary through D.43634_748 stmt D.43634_748 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].read_impl.microseconds_per_packet;
processing: D.43634_748 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].read_impl.microseconds_per_packet;

processing: D.43595_747 = (int) D.43594_746;

marking necessary through D.43594_746 stmt D.43594_746 = D.43561_745->agreed_pt;
processing: D.43594_746 = D.43561_745->agreed_pt;

marking necessary through D.43561_745 stmt D.43561_745 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_745 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43584_744 = (int) D.43565_743;

marking necessary through D.43565_743 stmt D.43565_743 = D.43561_742->remote_sdp_port;
processing: D.43565_743 = D.43561_742->remote_sdp_port;

marking necessary through D.43561_742 stmt D.43561_742 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_742 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_741 = D.43561_740->remote_sdp_ip;

marking necessary through D.43561_740 stmt D.43561_740 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_740 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43593_739 = (int) D.43592_738;

marking necessary through D.43592_738 stmt D.43592_738 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
processing: D.43592_738 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: D.43172_737 = D.43171_736->remote_sdp_ip;

marking necessary through D.43171_736 stmt D.43171_736 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_736 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43633_735 = switch_channel_get_name (D.43073_734);

marking necessary through D.43073_734 stmt D.43073_734 = session_45(D)->channel;
processing: D.43073_734 = session_45(D)->channel;

processing: D.43632_730 = switch_true (val_729);

processing: val_729 = switch_channel_get_variable_dup (D.43073_728, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_728 stmt D.43073_728 = session_45(D)->channel;
processing: D.43073_728 = session_45(D)->channel;

processing: D.43628_727 = switch_channel_test_flag (D.43073_726, 106);

marking necessary through D.43073_726 stmt D.43073_726 = session_45(D)->channel;
processing: D.43073_726 = session_45(D)->channel;

processing: D.43625_725 = switch_media_handle_test_media_flag (smh_46, 10);

processing: memset (&flags, 0, 156);

processing: switch_core_media_proxy_remote_addr (session_45(D), 0B);

processing: D.43620_720 = switch_channel_test_flag (D.43073_719, 29);

marking necessary through D.43073_719 stmt D.43073_719 = session_45(D)->channel;
processing: D.43073_719 = session_45(D)->channel;

processing: start_video_thread (session_45(D));

Marking useful stmt: if (val_716 == 0B)

Marking useful stmt: if (D.43619_717 == 0)

processing: if (D.43619_717 == 0)

processing: if (val_716 == 0B)

Marking useful stmt: if (D.43615_714 == 0)

processing: if (D.43615_714 == 0)

Marking useful stmt: if (D.43612_712 == 0)

processing: if (D.43612_712 == 0)

Marking useful stmt: if (D.43606_705 != 0)

processing: if (D.43606_705 != 0)

processing: switch_rtp_set_flag (D.43096_718, 7);

marking necessary through D.43096_718 stmt D.43096_718 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_718 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43619_717 = switch_true (val_716);

processing: val_716 = switch_channel_get_variable_dup (D.43073_715, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_715 stmt D.43073_715 = session_45(D)->channel;
processing: D.43073_715 = session_45(D)->channel;

processing: D.43615_714 = switch_channel_test_flag (D.43073_713, 106);

marking necessary through D.43073_713 stmt D.43073_713 = session_45(D)->channel;
processing: D.43073_713 = session_45(D)->channel;

processing: D.43612_712 = switch_media_handle_test_media_flag (smh_46, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5308, session_45(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.43578_708, D.43584_711);

marking necessary through D.43578_708 stmt D.43578_708 = D.43561_707->remote_sdp_ip;
marking necessary through D.43584_711 stmt D.43584_711 = (int) D.43565_710;
processing: D.43584_711 = (int) D.43565_710;

marking necessary through D.43565_710 stmt D.43565_710 = D.43561_709->remote_sdp_port;
processing: D.43565_710 = D.43561_709->remote_sdp_port;

marking necessary through D.43561_709 stmt D.43561_709 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_709 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_708 = D.43561_707->remote_sdp_ip;

marking necessary through D.43561_707 stmt D.43561_707 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_707 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5306, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.45_706);

marking necessary through err.45_706 stmt err.45_706 = err;
processing: err.45_706 = err;

processing: D.43606_705 = switch_rtp_set_remote_address (D.43096_700, D.43578_702, D.43565_704, remote_rtcp_port_24, 1, &err);

marking necessary through D.43096_700 stmt D.43096_700 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43578_702 stmt D.43578_702 = D.43561_701->remote_sdp_ip;
marking necessary through D.43565_704 stmt D.43565_704 = D.43561_703->remote_sdp_port;
marking necessary through remote_rtcp_port_24 stmt remote_rtcp_port_24 = PHI <remote_rtcp_port_695(221), remote_rtcp_port_695(222), remote_rtcp_port_699(223)>
processing: remote_rtcp_port_24 = PHI <remote_rtcp_port_695(221), remote_rtcp_port_695(222), remote_rtcp_port_699(223)>

marking necessary through remote_rtcp_port_695 stmt remote_rtcp_port_695 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
marking necessary through remote_rtcp_port_699 stmt remote_rtcp_port_699 = (switch_port_t) D.48114_1348;
Marking useful stmt: if (remote_rtcp_port_695 == 0)

Marking useful stmt: if (rport_697 != 0B)

processing: if (rport_697 != 0B)

processing: if (remote_rtcp_port_695 == 0)

processing: remote_rtcp_port_699 = (switch_port_t) D.48114_1348;

processing: remote_rtcp_port_695 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;

processing: D.43565_704 = D.43561_703->remote_sdp_port;

marking necessary through D.43561_703 stmt D.43561_703 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_703 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_702 = D.43561_701->remote_sdp_ip;

marking necessary through D.43561_701 stmt D.43561_701 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_701 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43096_700 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.48114_1348 = strtol (rport_697, 0B, 10);

processing: rport_697 = switch_channel_get_variable_dup (D.43073_696, "rtp_remote_video_rtcp_port", 1, -1);

marking necessary through D.43073_696 stmt D.43073_696 = session_45(D)->channel;
processing: D.43073_696 = session_45(D)->channel;

processing: D.43598_693 = switch_channel_test_flag (D.43073_692, 103);

marking necessary through D.43073_692 stmt D.43073_692 = session_45(D)->channel;
processing: D.43073_692 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_690, "local_video_port", &tmp, 1);

marking necessary through D.43073_690 stmt D.43073_690 = session_45(D)->channel;
processing: D.43073_690 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_688, "local_video_ip", D.43191_689, 1);

marking necessary through D.43073_688 stmt D.43073_688 = session_45(D)->channel;
marking necessary through D.43191_689 stmt D.43191_689 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
processing: D.43191_689 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;

processing: D.43073_688 = session_45(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.43593_687);

marking necessary through D.43593_687 stmt D.43593_687 = (int) D.43592_686;
processing: D.43593_687 = (int) D.43592_686;

marking necessary through D.43592_686 stmt D.43592_686 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
processing: D.43592_686 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: switch_rtp_set_default_payload (D.43096_683, D.43594_685);

Marking useful stmt: if (D.43588_666 != 0)

marking necessary through D.43096_683 stmt D.43096_683 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
marking necessary through D.43594_685 stmt D.43594_685 = D.43561_684->agreed_pt;
processing: D.43594_685 = D.43561_684->agreed_pt;

marking necessary through D.43561_684 stmt D.43561_684 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_684 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43096_683 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: if (D.43588_666 != 0)

Marking useful stmt: if (D.43585_664 == 0)

processing: if (D.43585_664 == 0)

processing: start_video_thread (session_45(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5275, session_45(D), 7, "VIDEO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43591_668, D.43172_670, D.43593_672, D.43578_674, D.43584_677, D.43595_680, D.43190_682);

marking necessary through D.43172_670 stmt D.43172_670 = D.43171_669->remote_sdp_ip;
marking necessary through D.43593_672 stmt D.43593_672 = (int) D.43592_671;
marking necessary through D.43578_674 stmt D.43578_674 = D.43561_673->remote_sdp_ip;
marking necessary through D.43584_677 stmt D.43584_677 = (int) D.43565_676;
marking necessary through D.43595_680 stmt D.43595_680 = (int) D.43594_679;
marking necessary through D.43190_682 stmt D.43190_682 = D.43189_681 / 1000;
processing: D.43190_682 = D.43189_681 / 1000;

marking necessary through D.43189_681 stmt D.43189_681 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
processing: D.43189_681 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;

processing: D.43595_680 = (int) D.43594_679;

marking necessary through D.43594_679 stmt D.43594_679 = D.43561_678->agreed_pt;
processing: D.43594_679 = D.43561_678->agreed_pt;

marking necessary through D.43561_678 stmt D.43561_678 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_678 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43584_677 = (int) D.43565_676;

marking necessary through D.43565_676 stmt D.43565_676 = D.43561_675->remote_sdp_port;
processing: D.43565_676 = D.43561_675->remote_sdp_port;

marking necessary through D.43561_675 stmt D.43561_675 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_675 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_674 = D.43561_673->remote_sdp_ip;

marking necessary through D.43561_673 stmt D.43561_673 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_673 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43593_672 = (int) D.43592_671;

marking necessary through D.43592_671 stmt D.43592_671 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
processing: D.43592_671 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;

processing: D.43172_670 = D.43171_669->remote_sdp_ip;

marking necessary through D.43171_669 stmt D.43171_669 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_669 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43591_668 = switch_channel_get_name (D.43073_667);

marking necessary through D.43073_667 stmt D.43073_667 = session_45(D)->channel;
processing: D.43073_667 = session_45(D)->channel;

processing: D.43588_666 = switch_rtp_ready (D.43096_665);

marking necessary through D.43096_665 stmt D.43096_665 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_665 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43585_664 = switch_channel_test_flag (D.43073_663, 29);

marking necessary through D.43073_663 stmt D.43073_663 = session_45(D)->channel;
processing: D.43073_663 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5267, session_45(D), 7, "Video params changed for %s from %s:%d to %s:%d\n", D.43582_656, remote_host_642, D.43583_657, D.43578_659, D.43584_662);

marking necessary through D.43583_657 stmt D.43583_657 = (int) remote_port_644;
marking necessary through D.43578_659 stmt D.43578_659 = D.43561_658->remote_sdp_ip;
marking necessary through D.43584_662 stmt D.43584_662 = (int) D.43565_661;
processing: D.43584_662 = (int) D.43565_661;

marking necessary through D.43565_661 stmt D.43565_661 = D.43561_660->remote_sdp_port;
processing: D.43565_661 = D.43561_660->remote_sdp_port;

marking necessary through D.43561_660 stmt D.43561_660 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_660 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43578_659 = D.43561_658->remote_sdp_ip;

marking necessary through D.43561_658 stmt D.43561_658 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
processing: D.43561_658 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;

processing: D.43583_657 = (int) remote_port_644;

processing: D.43582_656 = switch_channel_get_name (D.43073_655);

marking necessary through D.43073_655 stmt D.43073_655 = session_45(D)->channel;
processing: D.43073_655 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5263, session_45(D), 7, "Video params are unchanged for %s.\n", D.43581_654);

processing: D.43581_654 = switch_channel_get_name (D.43073_653);

marking necessary through D.43073_653 stmt D.43073_653 = session_45(D)->channel;
processing: D.43073_653 = session_45(D)->channel;

processing: remote_port_644 = switch_rtp_get_remote_port (D.43096_643);

marking necessary through D.43096_643 stmt D.43096_643 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_643 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: remote_host_642 = switch_rtp_get_remote_host (D.43096_641);

marking necessary through D.43096_641 stmt D.43096_641 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_641 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43570_640 = switch_channel_test_flag (D.43073_639, 103);

marking necessary through D.43073_639 stmt D.43073_639 = session_45(D)->channel;
processing: D.43073_639 = session_45(D)->channel;

processing: D.43558_633 = switch_channel_test_flag (D.43073_632, 98);

marking necessary through D.43073_632 stmt D.43073_632 = session_45(D)->channel;
processing: D.43073_632 = session_45(D)->channel;

processing: switch_core_media_check_video_codecs (session_45(D));

Marking useful stmt: if (D.43555_631 == 1)

processing: if (D.43555_631 == 1)

processing: D.43555_631 = switch_channel_direction (D.43073_630);

marking necessary through D.43073_630 stmt D.43073_630 = session_45(D)->channel;
processing: D.43073_630 = session_45(D)->channel;

processing: switch_rtp_udptl_mode (D.43077_624);

marking necessary through D.43077_624 stmt D.43077_624 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_624 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5237, session_45(D), 7, "Activating audio UDPTL mode\n");

processing: switch_channel_clear_flag (D.43073_623, 99);

marking necessary through D.43073_623 stmt D.43073_623 = session_45(D)->channel;
processing: D.43073_623 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5235, session_45(D), 7, "Disable NOTIMER_DURING_BRIDGE\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5234, session_45(D), 6, "Activating ZRTP PROXY MODE\n");

processing: D.43552_622 = switch_channel_test_flag (D.43073_621, 74);

marking necessary through D.43073_621 stmt D.43073_621 = session_45(D)->channel;
processing: D.43073_621 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_620, "remote_media_port", &tmp, 1);

marking necessary through D.43073_620 stmt D.43073_620 = session_45(D)->channel;
processing: D.43073_620 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_617, "remote_media_ip", D.43172_619, 1);

marking necessary through D.43073_617 stmt D.43073_617 = session_45(D)->channel;
marking necessary through D.43172_619 stmt D.43172_619 = D.43171_618->remote_sdp_ip;
processing: D.43172_619 = D.43171_618->remote_sdp_ip;

marking necessary through D.43171_618 stmt D.43171_618 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_618 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43073_617 = session_45(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.43179_616);

marking necessary through D.43179_616 stmt D.43179_616 = (int) D.43174_615;
processing: D.43179_616 = (int) D.43174_615;

marking necessary through D.43174_615 stmt D.43174_615 = D.43171_614->remote_sdp_port;
processing: D.43174_615 = D.43171_614->remote_sdp_port;

marking necessary through D.43171_614 stmt D.43171_614 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_614 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: switch_core_session_apply_crypto (session_45(D), 0);

processing: switch_rtp_set_cng_pt (D.43077_611, D.43143_613);

Marking useful stmt: if (D.43548_607 == 0)

marking necessary through D.43077_611 stmt D.43077_611 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43143_613 stmt D.43143_613 = D.43099_612->cng_pt;
processing: D.43143_613 = D.43099_612->cng_pt;

marking necessary through D.43099_612 stmt D.43099_612 = smh_46->mparams;
processing: D.43099_612 = smh_46->mparams;

processing: D.43077_611 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43548_607 == 0)

Marking useful stmt: if (D.43143_606 != 0)

processing: if (D.43143_606 != 0)

marking necessary through D.43143_606 stmt D.43143_606 = D.43099_605->cng_pt;
processing: D.43143_606 = D.43099_605->cng_pt;

marking necessary through D.43099_605 stmt D.43099_605 = smh_46->mparams;
processing: D.43099_605 = smh_46->mparams;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5222, session_45(D), 7, "Set comfort noise payload to %u\n", D.43551_610);

marking necessary through D.43551_610 stmt D.43551_610 = (int) D.43143_609;
processing: D.43551_610 = (int) D.43143_609;

marking necessary through D.43143_609 stmt D.43143_609 = D.43099_608->cng_pt;
processing: D.43143_609 = D.43099_608->cng_pt;

marking necessary through D.43099_608 stmt D.43099_608 = smh_46->mparams;
processing: D.43099_608 = smh_46->mparams;

processing: D.43548_607 = switch_media_handle_test_media_flag (smh_46, 9);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5216, session_45(D), 7, "%s Set rtp dtmf delay to %u\n", D.43545_602, D.43542_604);

Marking useful stmt: if (D.43542_597 != 0)

marking necessary through D.43542_604 stmt D.43542_604 = D.43099_603->dtmf_delay;
processing: D.43542_604 = D.43099_603->dtmf_delay;

marking necessary through D.43099_603 stmt D.43099_603 = smh_46->mparams;
processing: D.43099_603 = smh_46->mparams;

processing: if (D.43542_597 != 0)

marking necessary through D.43542_597 stmt D.43542_597 = D.43099_596->dtmf_delay;
processing: D.43542_597 = D.43099_596->dtmf_delay;

marking necessary through D.43099_596 stmt D.43099_596 = smh_46->mparams;
processing: D.43099_596 = smh_46->mparams;

processing: D.43545_602 = switch_channel_get_name (D.43073_601);

marking necessary through D.43073_601 stmt D.43073_601 = session_45(D)->channel;
processing: D.43073_601 = session_45(D)->channel;

processing: switch_rtp_set_interdigit_delay (D.43077_598, D.43542_600);

marking necessary through D.43077_598 stmt D.43077_598 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43542_600 stmt D.43542_600 = D.43099_599->dtmf_delay;
processing: D.43542_600 = D.43099_599->dtmf_delay;

marking necessary through D.43099_599 stmt D.43099_599 = smh_46->mparams;
processing: D.43099_599 = smh_46->mparams;

processing: D.43077_598 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43099_594->dtmf_delay = delayi.60_595;

Marking useful stmt: if (val_591 != 0B)

marking necessary through D.43099_594 stmt D.43099_594 = smh_46->mparams;
marking necessary through delayi.60_595 stmt delayi.60_595 = (unsigned int) delayi_23;
processing: delayi.60_595 = (unsigned int) delayi_23;

marking necessary through delayi_23 stmt delayi_23 = PHI <delayi_1347(194), 0(195)>
processing: delayi_23 = PHI <delayi_1347(194), 0(195)>

Marking useful stmt: if (delayi_1347 < 0)

processing: if (delayi_1347 < 0)

processing: D.43099_594 = smh_46->mparams;

processing: if (val_591 != 0B)

processing: delayi_1347 = strtol (val_591, 0B, 10);

processing: val_591 = switch_channel_get_variable_dup (D.43073_590, "rtp_digit_delay", 1, -1);

marking necessary through D.43073_590 stmt D.43073_590 = session_45(D)->channel;
processing: D.43073_590 = session_45(D)->channel;

processing: D.43099_589->cng_pt = 0;

Marking useful stmt: if (D.43531_582 != 0)

Marking useful stmt: if (D.43534_585 != 0)

Marking useful stmt: if (D.43536_588 != 0)

marking necessary through D.43099_589 stmt D.43099_589 = smh_46->mparams;
processing: D.43099_589 = smh_46->mparams;

processing: if (D.43536_588 != 0)

Marking useful stmt: if (val_587 != 0B)

processing: if (val_587 != 0B)

Marking useful stmt: if (val_584 != 0B)

processing: if (val_584 != 0B)

processing: if (D.43534_585 != 0)

processing: if (D.43531_582 != 0)

processing: D.43536_588 = switch_true (val_587);

processing: val_587 = switch_channel_get_variable_dup (D.43073_586, "suppress_cng", 1, -1);

marking necessary through D.43073_586 stmt D.43073_586 = session_45(D)->channel;
processing: D.43073_586 = session_45(D)->channel;

processing: D.43534_585 = switch_true (val_584);

processing: val_584 = switch_channel_get_variable_dup (D.43073_583, "supress_cng", 1, -1);

marking necessary through D.43073_583 stmt D.43073_583 = session_45(D)->channel;
processing: D.43073_583 = session_45(D)->channel;

processing: D.43531_582 = switch_media_handle_test_media_flag (smh_46, 9);

processing: switch_channel_set_variable_printf (D.43073_578, "rtp_2833_recv_payload", "%d", D.43527_581);

Marking useful stmt: if (D.43524_571 != 0)

marking necessary through D.43073_578 stmt D.43073_578 = session_45(D)->channel;
marking necessary through D.43527_581 stmt D.43527_581 = (int) D.43524_580;
processing: D.43527_581 = (int) D.43524_580;

marking necessary through D.43524_580 stmt D.43524_580 = D.43099_579->recv_te;
processing: D.43524_580 = D.43099_579->recv_te;

marking necessary through D.43099_579 stmt D.43099_579 = smh_46->mparams;
processing: D.43099_579 = smh_46->mparams;

processing: D.43073_578 = session_45(D)->channel;

processing: if (D.43524_571 != 0)

marking necessary through D.43524_571 stmt D.43524_571 = D.43099_570->recv_te;
processing: D.43524_571 = D.43099_570->recv_te;

marking necessary through D.43099_570 stmt D.43099_570 = smh_46->mparams;
processing: D.43099_570 = smh_46->mparams;

processing: switch_rtp_set_telephony_recv_event (D.43077_575, D.43524_577);

marking necessary through D.43077_575 stmt D.43077_575 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43524_577 stmt D.43524_577 = D.43099_576->recv_te;
processing: D.43524_577 = D.43099_576->recv_te;

marking necessary through D.43099_576 stmt D.43099_576 = smh_46->mparams;
processing: D.43099_576 = smh_46->mparams;

processing: D.43077_575 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5194, session_45(D), 7, "Set 2833 dtmf receive payload to %u\n", D.43527_574);

marking necessary through D.43527_574 stmt D.43527_574 = (int) D.43524_573;
processing: D.43527_574 = (int) D.43524_573;

marking necessary through D.43524_573 stmt D.43524_573 = D.43099_572->recv_te;
processing: D.43524_573 = D.43099_572->recv_te;

marking necessary through D.43099_572 stmt D.43099_572 = smh_46->mparams;
processing: D.43099_572 = smh_46->mparams;

processing: switch_channel_set_variable_printf (D.43073_566, "rtp_2833_send_payload", "%d", D.43523_569);

Marking useful stmt: if (D.43520_559 != 0)

marking necessary through D.43073_566 stmt D.43073_566 = session_45(D)->channel;
marking necessary through D.43523_569 stmt D.43523_569 = (int) D.43520_568;
processing: D.43523_569 = (int) D.43520_568;

marking necessary through D.43520_568 stmt D.43520_568 = D.43099_567->te;
processing: D.43520_568 = D.43099_567->te;

marking necessary through D.43099_567 stmt D.43099_567 = smh_46->mparams;
processing: D.43099_567 = smh_46->mparams;

processing: D.43073_566 = session_45(D)->channel;

processing: if (D.43520_559 != 0)

marking necessary through D.43520_559 stmt D.43520_559 = D.43099_558->te;
processing: D.43520_559 = D.43099_558->te;

marking necessary through D.43099_558 stmt D.43099_558 = smh_46->mparams;
processing: D.43099_558 = smh_46->mparams;

processing: switch_rtp_set_telephony_event (D.43077_563, D.43520_565);

marking necessary through D.43077_563 stmt D.43077_563 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43520_565 stmt D.43520_565 = D.43099_564->te;
processing: D.43520_565 = D.43099_564->te;

marking necessary through D.43099_564 stmt D.43099_564 = smh_46->mparams;
processing: D.43099_564 = smh_46->mparams;

processing: D.43077_563 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5188, session_45(D), 7, "Set 2833 dtmf send payload to %u\n", D.43523_562);

marking necessary through D.43523_562 stmt D.43523_562 = (int) D.43520_561;
processing: D.43523_562 = (int) D.43520_561;

marking necessary through D.43520_561 stmt D.43520_561 = D.43099_560->te;
processing: D.43520_561 = D.43099_560->te;

marking necessary through D.43099_560 stmt D.43099_560 = smh_46->mparams;
processing: D.43099_560 = smh_46->mparams;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_hold_packets = D.43519_557;

Marking useful stmt: if (D.43512_551 != 0)

marking necessary through D.43519_557 stmt D.43519_557 = D.43518_555 / D.43294_556;
processing: D.43519_557 = D.43518_555 / D.43294_556;

marking necessary through D.43518_555 stmt D.43518_555 = D.43486_552 * D.43512_554;
marking necessary through D.43294_556 stmt D.43294_556 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
processing: D.43294_556 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;

processing: D.43518_555 = D.43486_552 * D.43512_554;

marking necessary through D.43486_552 stmt D.43486_552 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
marking necessary through D.43512_554 stmt D.43512_554 = D.43099_553->rtp_hold_timeout_sec;
processing: D.43512_554 = D.43099_553->rtp_hold_timeout_sec;

marking necessary through D.43099_553 stmt D.43099_553 = smh_46->mparams;
processing: D.43099_553 = smh_46->mparams;

processing: D.43486_552 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;

processing: if (D.43512_551 != 0)

marking necessary through D.43512_551 stmt D.43512_551 = D.43099_550->rtp_hold_timeout_sec;
processing: D.43512_551 = D.43099_550->rtp_hold_timeout_sec;

marking necessary through D.43099_550 stmt D.43099_550 = smh_46->mparams;
processing: D.43099_550 = smh_46->mparams;

processing: D.43099_547->rtp_hold_timeout_sec = D.43515_549;

Marking useful stmt: if (D.43512_545 == 0)

marking necessary through D.43099_547 stmt D.43099_547 = smh_46->mparams;
marking necessary through D.43515_549 stmt D.43515_549 = D.43506_548 * 10;
processing: D.43515_549 = D.43506_548 * 10;

marking necessary through D.43506_548 stmt D.43506_548 = D.43099_547->rtp_timeout_sec;
processing: D.43506_548 = D.43099_547->rtp_timeout_sec;

processing: D.43099_547 = smh_46->mparams;

processing: if (D.43512_545 == 0)

Marking useful stmt: if (D.43506_535 != 0)

marking necessary through D.43512_545 stmt D.43512_545 = D.43099_544->rtp_hold_timeout_sec;
processing: D.43512_545 = D.43099_544->rtp_hold_timeout_sec;

marking necessary through D.43099_544 stmt D.43099_544 = smh_46->mparams;
processing: D.43099_544 = smh_46->mparams;

processing: if (D.43506_535 != 0)

marking necessary through D.43506_535 stmt D.43506_535 = D.43099_534->rtp_timeout_sec;
processing: D.43506_535 = D.43099_534->rtp_timeout_sec;

marking necessary through D.43099_534 stmt D.43099_534 = smh_46->mparams;
processing: D.43099_534 = smh_46->mparams;

processing: switch_rtp_set_max_missed_packets (D.43077_542, D.43511_543);

marking necessary through D.43077_542 stmt D.43077_542 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43511_543 stmt D.43511_543 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets;
processing: D.43511_543 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets;

processing: D.43077_542 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets = D.43510_541;

marking necessary through D.43510_541 stmt D.43510_541 = D.43509_539 / D.43294_540;
processing: D.43510_541 = D.43509_539 / D.43294_540;

marking necessary through D.43509_539 stmt D.43509_539 = D.43486_536 * D.43506_538;
marking necessary through D.43294_540 stmt D.43294_540 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
processing: D.43294_540 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;

processing: D.43509_539 = D.43486_536 * D.43506_538;

marking necessary through D.43486_536 stmt D.43486_536 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
marking necessary through D.43506_538 stmt D.43506_538 = D.43099_537->rtp_timeout_sec;
processing: D.43506_538 = D.43099_537->rtp_timeout_sec;

marking necessary through D.43099_537 stmt D.43099_537 = smh_46->mparams;
processing: D.43099_537 = smh_46->mparams;

processing: D.43486_536 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;

processing: D.43099_532->rtp_hold_timeout_sec = v.59_533;

Marking useful stmt: if (v_1346 >= 0)

marking necessary through D.43099_532 stmt D.43099_532 = smh_46->mparams;
marking necessary through v.59_533 stmt v.59_533 = (uint32_t) v_1346;
processing: v.59_533 = (uint32_t) v_1346;

processing: D.43099_532 = smh_46->mparams;

processing: if (v_1346 >= 0)

Marking useful stmt: if (val_530 != 0B)

processing: if (val_530 != 0B)

processing: v_1346 = strtol (val_530, 0B, 10);

processing: val_530 = switch_channel_get_variable_dup (D.43073_529, "rtp_hold_timeout_sec", 1, -1);

marking necessary through D.43073_529 stmt D.43073_529 = session_45(D)->channel;
processing: D.43073_529 = session_45(D)->channel;

processing: D.43099_527->rtp_timeout_sec = v.58_528;

Marking useful stmt: if (v_1345 >= 0)

marking necessary through D.43099_527 stmt D.43099_527 = smh_46->mparams;
marking necessary through v.58_528 stmt v.58_528 = (uint32_t) v_1345;
processing: v.58_528 = (uint32_t) v_1345;

processing: D.43099_527 = smh_46->mparams;

processing: if (v_1345 >= 0)

Marking useful stmt: if (val_525 != 0B)

processing: if (val_525 != 0B)

processing: v_1345 = strtol (val_525, 0B, 10);

processing: val_525 = switch_channel_get_variable_dup (D.43073_524, "rtp_timeout_sec", 1, -1);

marking necessary through D.43073_524 stmt D.43073_524 = session_45(D)->channel;
processing: D.43073_524 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5153, session_45(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

Marking useful stmt: if (D.43488_518 == 0)

marking necessary through jb_msec_17 stmt jb_msec_17 = PHI <jb_msec_1342(158), jb_msec_500(159)>
marking necessary through qlen_20 stmt qlen_20 = PHI <qlen_506(162), 3(163)>
processing: qlen_20 = PHI <qlen_506(162), 3(163)>

Marking useful stmt: if (D.43474_502 > 9980)

marking necessary through qlen_506 stmt qlen_506 = jb_msec_17 / D.43190_505;
Marking useful stmt: if (qlen_506 <= 0)

processing: if (qlen_506 <= 0)

processing: qlen_506 = jb_msec_17 / D.43190_505;

marking necessary through D.43190_505 stmt D.43190_505 = D.43189_504 / 1000;
processing: D.43190_505 = D.43189_504 / 1000;

marking necessary through D.43189_504 stmt D.43189_504 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
processing: D.43189_504 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;

processing: if (D.43474_502 > 9980)

Marking useful stmt: if (val_481 != 0B)

Marking useful stmt: if (val_483 != 0B)

marking necessary through D.43474_502 stmt D.43474_502 = jb_msec.54_501 + 4294967276;
processing: D.43474_502 = jb_msec.54_501 + 4294967276;

marking necessary through jb_msec.54_501 stmt jb_msec.54_501 = (unsigned int) jb_msec_17;
processing: jb_msec.54_501 = (unsigned int) jb_msec_17;

processing: if (val_483 != 0B)

marking necessary through val_483 stmt val_483 = D.43099_482->jb_msec;
processing: val_483 = D.43099_482->jb_msec;

marking necessary through D.43099_482 stmt D.43099_482 = smh_46->mparams;
processing: D.43099_482 = smh_46->mparams;

processing: if (val_481 != 0B)

processing: jb_msec_17 = PHI <jb_msec_1342(158), jb_msec_500(159)>

marking necessary through jb_msec_500 stmt jb_msec_500 = D.43472_498 * D.43473_499;
Marking useful stmt: if (D.43467_495 <= 8)

processing: if (D.43467_495 <= 8)

marking necessary through D.43467_495 stmt D.43467_495 = jb_msec.54_494 + 9;
processing: D.43467_495 = jb_msec.54_494 + 9;

marking necessary through jb_msec.54_494 stmt jb_msec.54_494 = (unsigned int) jb_msec_1342;
processing: jb_msec.54_494 = (unsigned int) jb_msec_1342;

processing: jb_msec_500 = D.43472_498 * D.43473_499;

marking necessary through D.43472_498 stmt D.43472_498 = D.43471_497 / 1000;
marking necessary through D.43473_499 stmt D.43473_499 = ABS_EXPR <jb_msec_1342>;
processing: D.43473_499 = ABS_EXPR <jb_msec_1342>;

processing: D.43472_498 = D.43471_497 / 1000;

marking necessary through D.43471_497 stmt D.43471_497 = D.43470_496->microseconds_per_packet;
processing: D.43471_497 = D.43470_496->microseconds_per_packet;

marking necessary through D.43470_496 stmt D.43470_496 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec.implementation;
processing: D.43470_496 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec.implementation;

processing: if (D.43488_518 == 0)

processing: switch_channel_set_flag_value (D.43073_523, 58, 1);

Marking useful stmt: if (D.43492_522 == 0)

marking necessary through D.43073_523 stmt D.43073_523 = session_45(D)->channel;
processing: D.43073_523 = session_45(D)->channel;

processing: if (D.43492_522 == 0)

processing: D.43492_522 = switch_false (D.43491_521);

processing: D.43491_521 = switch_channel_get_variable_dup (D.43073_520, "rtp_jitter_buffer_plc", 1, -1);

marking necessary through D.43073_520 stmt D.43073_520 = session_45(D)->channel;
processing: D.43073_520 = session_45(D)->channel;

processing: switch_channel_set_flag_value (D.43073_519, 57, 1);

marking necessary through D.43073_519 stmt D.43073_519 = session_45(D)->channel;
processing: D.43073_519 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5146, session_45(D), 7, "Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

processing: D.43488_518 = switch_rtp_activate_jitter_buffer (D.43077_512, qlen.55_513, maxqlen.56_514, D.43294_515, D.43486_516, max_drift.57_517);

marking necessary through D.43077_512 stmt D.43077_512 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through qlen.55_513 stmt qlen.55_513 = (uint32_t) qlen_20;
marking necessary through maxqlen.56_514 stmt maxqlen.56_514 = (uint32_t) maxqlen_22;
marking necessary through D.43294_515 stmt D.43294_515 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
marking necessary through D.43486_516 stmt D.43486_516 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
marking necessary through max_drift.57_517 stmt max_drift.57_517 = (uint32_t) max_drift_19;
processing: max_drift.57_517 = (uint32_t) max_drift_19;

marking necessary through max_drift_19 stmt max_drift_19 = PHI <0(155), 0(156), max_drift_493(157)>
processing: max_drift_19 = PHI <0(155), 0(156), max_drift_493(157)>

marking necessary through max_drift_493 stmt max_drift_493 = ABS_EXPR <D.48102_1344>;
Marking useful stmt: if (p_487 != 0B)

Marking useful stmt: if (q_490 != 0B)

processing: if (q_490 != 0B)

marking necessary through q_490 stmt q_490 = __builtin_strchr (p_488, 58);
processing: q_490 = __builtin_strchr (p_488, 58);

marking necessary through p_488 stmt p_488 = p_487 + 1;
processing: p_488 = p_487 + 1;

marking necessary through p_487 stmt p_487 = __builtin_strchr (val_2, 58);
processing: p_487 = __builtin_strchr (val_2, 58);

marking necessary through val_2 stmt val_2 = PHI <val_481(153), val_483(154)>
processing: val_2 = PHI <val_481(153), val_483(154)>

processing: if (p_487 != 0B)

processing: max_drift_493 = ABS_EXPR <D.48102_1344>;

processing: D.43486_516 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;

processing: D.43294_515 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;

processing: maxqlen.56_514 = (uint32_t) maxqlen_22;

marking necessary through maxqlen_22 stmt maxqlen_22 = PHI <maxqlen_21(166), maxqlen_511(167)>
processing: maxqlen_22 = PHI <maxqlen_21(166), maxqlen_511(167)>

marking necessary through maxqlen_21 stmt maxqlen_21 = PHI <50(164), maxqlen_510(165)>
marking necessary through maxqlen_511 stmt maxqlen_511 = qlen_20 * 5;
Marking useful stmt: if (maxqlen_21 < qlen_20)

processing: if (maxqlen_21 < qlen_20)

processing: maxqlen_511 = qlen_20 * 5;

processing: maxqlen_21 = PHI <50(164), maxqlen_510(165)>

marking necessary through maxqlen_510 stmt maxqlen_510 = maxlen_18 / D.43190_509;
Marking useful stmt: if (maxlen_18 != 0)

processing: if (maxlen_18 != 0)

marking necessary through maxlen_18 stmt maxlen_18 = PHI <0(155), maxlen_1343(156), maxlen_1343(157)>
processing: maxlen_18 = PHI <0(155), maxlen_1343(156), maxlen_1343(157)>

processing: maxqlen_510 = maxlen_18 / D.43190_509;

marking necessary through D.43190_509 stmt D.43190_509 = D.43189_508 / 1000;
processing: D.43190_509 = D.43189_508 / 1000;

marking necessary through D.43189_508 stmt D.43189_508 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
processing: D.43189_508 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;

processing: qlen.55_513 = (uint32_t) qlen_20;

processing: D.43077_512 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5125, session_45(D), 3, "Invalid Jitterbuffer spec [%d] must be between 20 and 10000\n", jb_msec_17);

processing: D.48102_1344 = strtol (q_491, 0B, 10);

marking necessary through q_491 stmt q_491 = q_490 + 1;
processing: q_491 = q_490 + 1;

processing: maxlen_1343 = strtol (p_488, 0B, 10);

processing: jb_msec_1342 = strtol (val_2, 0B, 10);

processing: val_481 = switch_channel_get_variable_dup (D.43073_480, "jitterbuffer_msec", 1, -1);

marking necessary through D.43073_480 stmt D.43073_480 = session_45(D)->channel;
processing: D.43073_480 = session_45(D)->channel;

processing: switch_rtp_add_dtls (D.43077_476, D.43451_477, D.43452_478, D.43453_479);

Marking useful stmt: if (D.43448_474 != 0B)

marking necessary through D.43077_476 stmt D.43077_476 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43451_477 stmt D.43451_477 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
marking necessary through D.43452_478 stmt D.43452_478 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
marking necessary through D.43453_479 stmt D.43453_479 = dtype_16 | 8;
processing: D.43453_479 = dtype_16 | 8;

marking necessary through dtype_16 stmt dtype_16 = PHI <dtype_33(143), dtype_34(146)>
processing: dtype_16 = PHI <dtype_33(143), dtype_34(146)>

Marking useful stmt: if (D.43430_450 != 0)

marking necessary through dtype_33 stmt dtype_33 = PHI <1(141), 2(142)>
marking necessary through dtype_34 stmt dtype_34 = PHI <2(144), 1(145)>
Marking useful stmt: if (D.43439_459 != 0)

processing: if (D.43439_459 != 0)

processing: dtype_34 = PHI <2(144), 1(145)>

Marking useful stmt: if (dtype_33 == 1)

processing: if (dtype_33 == 1)

processing: dtype_33 = PHI <1(141), 2(142)>

Marking useful stmt: if (D.43435_453 == 0)

processing: if (D.43435_453 == 0)

processing: if (D.43430_450 != 0)

Marking useful stmt: if (D.43426_448 != 0)

processing: if (D.43426_448 != 0)

Marking useful stmt: if (D.48092_1341 == 0)

processing: if (D.48092_1341 == 0)

marking necessary through D.48092_1341 stmt D.48092_1341 = PHI <1(135), 1(136), 0(137)>
processing: D.48092_1341 = PHI <1(135), 1(136), 0(137)>

Marking useful stmt: if (D.43422_446 == 0B)

Marking useful stmt: if (D.48093_1340 == 0)

processing: if (D.48093_1340 == 0)

marking necessary through D.48093_1340 stmt D.48093_1340 = MEM[(const char *)smh_46 + 10984B];
processing: D.48093_1340 = MEM[(const char *)smh_46 + 10984B];

processing: if (D.43422_446 == 0B)

marking necessary through D.43422_446 stmt D.43422_446 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint.str;
processing: D.43422_446 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint.str;

processing: D.43452_478 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;

processing: D.43451_477 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;

processing: D.43077_476 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43448_474 != 0B)

Marking useful stmt: if (D.43397_472 <= 0)

marking necessary through D.43448_474 stmt D.43448_474 = D.43099_473->rtcp_audio_interval_msec;
processing: D.43448_474 = D.43099_473->rtcp_audio_interval_msec;

marking necessary through D.43099_473 stmt D.43099_473 = smh_46->mparams;
processing: D.43099_473 = smh_46->mparams;

processing: if (D.43397_472 <= 0)

marking necessary through D.43397_472 stmt D.43397_472 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
processing: D.43397_472 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;

processing: switch_rtp_add_dtls (D.43077_468, D.43451_469, D.43452_470, D.43453_471);

marking necessary through D.43077_468 stmt D.43077_468 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43451_469 stmt D.43451_469 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
marking necessary through D.43452_470 stmt D.43452_470 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
marking necessary through D.43453_471 stmt D.43453_471 = dtype_16 | xtype_15;
processing: D.43453_471 = dtype_16 | xtype_15;

marking necessary through xtype_15 stmt xtype_15 = PHI <4(147), 4(148), 12(149)>
processing: xtype_15 = PHI <4(147), 4(148), 12(149)>

Marking useful stmt: if (D.43397_464 > 0)

Marking useful stmt: if (D.43448_466 != 0B)

processing: if (D.43448_466 != 0B)

marking necessary through D.43448_466 stmt D.43448_466 = D.43099_465->rtcp_audio_interval_msec;
processing: D.43448_466 = D.43099_465->rtcp_audio_interval_msec;

marking necessary through D.43099_465 stmt D.43099_465 = smh_46->mparams;
processing: D.43099_465 = smh_46->mparams;

processing: if (D.43397_464 > 0)

marking necessary through D.43397_464 stmt D.43397_464 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
processing: D.43397_464 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;

processing: D.43452_470 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;

processing: D.43451_469 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;

processing: D.43077_468 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43439_459 = switch_channel_test_flag (D.43434_458, 112);

marking necessary through D.43434_458 stmt D.43434_458 = D.43429_457->channel;
processing: D.43434_458 = D.43429_457->channel;

marking necessary through D.43429_457 stmt D.43429_457 = smh_46->session;
processing: D.43429_457 = smh_46->session;

processing: D.43435_453 = switch_channel_direction (D.43434_452);

marking necessary through D.43434_452 stmt D.43434_452 = D.43429_451->channel;
processing: D.43434_452 = D.43429_451->channel;

marking necessary through D.43429_451 stmt D.43429_451 = smh_46->session;
processing: D.43429_451 = smh_46->session;

processing: D.43430_450 = dtls_ok (D.43429_449);

marking necessary through D.43429_449 stmt D.43429_449 = smh_46->session;
processing: D.43429_449 = smh_46->session;

processing: D.43426_448 = switch_rtp_has_dtls ();

processing: switch_rtp_activate_ice (D.43077_437, D.43374_438, D.43375_439, D.43376_440, D.43377_441, 1, iftmp.51_32, D.43383_445);

Marking useful stmt: if (D.43397_427 > 0)

Marking useful stmt: if (D.39377_432 == 0)

Marking useful stmt: if (D.43414_434 == D.43415_436)

marking necessary through D.43077_437 stmt D.43077_437 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43374_438 stmt D.43374_438 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
marking necessary through D.43375_439 stmt D.43375_439 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
marking necessary through D.43376_440 stmt D.43376_440 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
marking necessary through D.43377_441 stmt D.43377_441 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
marking necessary through iftmp.51_32 stmt iftmp.51_32 = PHI <2(132), 6(133)>
marking necessary through D.43383_445 stmt D.43383_445 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
processing: D.43383_445 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;

processing: iftmp.51_32 = PHI <2(132), 6(133)>

Marking useful stmt: if (D.43418_442 == 1)

processing: if (D.43418_442 == 1)

processing: D.43377_441 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;

processing: D.43376_440 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;

processing: D.43375_439 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;

processing: D.43374_438 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;

processing: D.43077_437 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43414_434 == D.43415_436)

marking necessary through D.43414_434 stmt D.43414_434 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_433][1].con_port;
marking necessary through D.43415_436 stmt D.43415_436 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_435][0].con_port;
processing: D.43415_436 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_435][0].con_port;

marking necessary through D.43370_435 stmt D.43370_435 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
processing: D.43370_435 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];

processing: D.43414_434 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_433][1].con_port;

marking necessary through D.43404_433 stmt D.43404_433 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
processing: D.43404_433 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];

processing: if (D.39377_432 == 0)

marking necessary through D.39377_432 stmt D.39377_432 = __builtin_strcmp (D.43411_429, D.43412_431);
processing: D.39377_432 = __builtin_strcmp (D.43411_429, D.43412_431);

marking necessary through D.43411_429 stmt D.43411_429 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_428][1].con_addr;
marking necessary through D.43412_431 stmt D.43412_431 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_430][0].con_addr;
processing: D.43412_431 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_430][0].con_addr;

marking necessary through D.43370_430 stmt D.43370_430 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
processing: D.43370_430 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];

processing: D.43411_429 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_428][1].con_addr;

marking necessary through D.43404_428 stmt D.43404_428 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
processing: D.43404_428 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];

processing: if (D.43397_427 > 0)

Marking useful stmt: if (D.43405_426 != 0)

marking necessary through D.43397_427 stmt D.43397_427 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
processing: D.43397_427 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;

processing: if (D.43405_426 != 0)

Marking useful stmt: if (val_401 != 0B)

Marking useful stmt: if (val_403 != 0B)

marking necessary through D.43405_426 stmt D.43405_426 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_425][1].ready;
processing: D.43405_426 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_425][1].ready;

marking necessary through D.43404_425 stmt D.43404_425 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
processing: D.43404_425 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];

processing: if (val_403 != 0B)

marking necessary through val_403 stmt val_403 = D.43099_402->rtcp_audio_interval_msec;
processing: val_403 = D.43099_402->rtcp_audio_interval_msec;

marking necessary through D.43099_402 stmt D.43099_402 = smh_46->mparams;
processing: D.43099_402 = smh_46->mparams;

processing: if (val_401 != 0B)

processing: D.43418_442 = switch_ice_direction (session_45(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5063, session_45(D), 6, "Activating RTCP ICE\n");

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5061, session_45(D), 6, "Skipping RTCP ICE (Same as RTP)\n");

processing: switch_rtp_activate_rtcp (D.43077_422, interval_14, remote_rtcp_port_13, D.43398_424);

Marking useful stmt: if (D.43393_412 == 0)

marking necessary through D.43077_422 stmt D.43077_422 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through interval_14 stmt interval_14 = PHI <interval_1339(124), 10000(125)>
marking necessary through remote_rtcp_port_13 stmt remote_rtcp_port_13 = PHI <remote_rtcp_port_406(120), remote_rtcp_port_411(121)>
marking necessary through D.43398_424 stmt D.43398_424 = D.43397_423 > 0;
processing: D.43398_424 = D.43397_423 > 0;

marking necessary through D.43397_423 stmt D.43397_423 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
processing: D.43397_423 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;

processing: remote_rtcp_port_13 = PHI <remote_rtcp_port_406(120), remote_rtcp_port_411(121)>

marking necessary through remote_rtcp_port_406 stmt remote_rtcp_port_406 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
marking necessary through remote_rtcp_port_411 stmt remote_rtcp_port_411 = (switch_port_t) D.48086_1338;
Marking useful stmt: if (D.43389_409 != 0)

processing: if (D.43389_409 != 0)

marking necessary through D.43389_409 stmt D.43389_409 = D.43387_407 && D.43388_408;
processing: D.43389_409 = D.43387_407 && D.43388_408;

marking necessary through D.43387_407 stmt D.43387_407 = remote_rtcp_port_406 == 0;
marking necessary through D.43388_408 stmt D.43388_408 = rport_405 != 0B;
processing: D.43388_408 = rport_405 != 0B;

processing: D.43387_407 = remote_rtcp_port_406 == 0;

processing: remote_rtcp_port_411 = (switch_port_t) D.48086_1338;

processing: remote_rtcp_port_406 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;

processing: interval_14 = PHI <interval_1339(124), 10000(125)>

Marking useful stmt: if (D.43401_419 > 499900)

processing: if (D.43401_419 > 499900)

marking necessary through D.43401_419 stmt D.43401_419 = interval.50_418 + 4294967196;
processing: D.43401_419 = interval.50_418 + 4294967196;

marking necessary through interval.50_418 stmt interval.50_418 = (unsigned int) interval_1339;
processing: interval.50_418 = (unsigned int) interval_1339;

processing: D.43077_422 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43393_412 == 0)

marking necessary through D.43393_412 stmt D.43393_412 = strcasecmp (val_1, "passthru");
processing: D.43393_412 = strcasecmp (val_1, "passthru");

marking necessary through val_1 stmt val_1 = PHI <val_401(118), val_403(119)>
processing: val_1 = PHI <val_401(118), val_403(119)>

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5053, session_45(D), 6, "Activating RTCP PORT %d\n", D.43396_421);

marking necessary through D.43396_421 stmt D.43396_421 = (int) remote_rtcp_port_13;
processing: D.43396_421 = (int) remote_rtcp_port_13;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5048, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1339);

processing: interval_1339 = strtol (val_1, 0B, 10);

processing: switch_rtp_activate_rtcp (D.43077_414, -1, remote_rtcp_port_13, D.43398_416);

marking necessary through D.43077_414 stmt D.43077_414 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43398_416 stmt D.43398_416 = D.43397_415 > 0;
processing: D.43398_416 = D.43397_415 > 0;

marking necessary through D.43397_415 stmt D.43397_415 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
processing: D.43397_415 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;

processing: D.43077_414 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5043, session_45(D), 6, "Activating RTCP PASSTHRU PORT %d\n", D.43396_413);

marking necessary through D.43396_413 stmt D.43396_413 = (int) remote_rtcp_port_13;
processing: D.43396_413 = (int) remote_rtcp_port_13;

processing: D.48086_1338 = strtol (rport_405, 0B, 10);

processing: rport_405 = switch_channel_get_variable_dup (D.43073_404, "rtp_remote_audio_rtcp_port", 1, -1);

marking necessary through D.43073_404 stmt D.43073_404 = session_45(D)->channel;
processing: D.43073_404 = session_45(D)->channel;

processing: val_401 = switch_channel_get_variable_dup (D.43073_400, "rtcp_audio_interval_msec", 1, -1);

marking necessary through D.43073_400 stmt D.43073_400 = session_45(D)->channel;
processing: D.43073_400 = session_45(D)->channel;

processing: switch_rtp_activate_ice (D.43077_391, D.43374_392, D.43375_393, D.43376_394, D.43377_395, 0, iftmp.49_31, D.43383_399);

Marking useful stmt: if (D.43371_390 != 0)

marking necessary through D.43077_391 stmt D.43077_391 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43374_392 stmt D.43374_392 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
marking necessary through D.43375_393 stmt D.43375_393 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
marking necessary through D.43376_394 stmt D.43376_394 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
marking necessary through D.43377_395 stmt D.43377_395 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
marking necessary through iftmp.49_31 stmt iftmp.49_31 = PHI <2(115), 6(116)>
marking necessary through D.43383_399 stmt D.43383_399 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
processing: D.43383_399 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;

processing: iftmp.49_31 = PHI <2(115), 6(116)>

Marking useful stmt: if (D.43379_396 == 1)

processing: if (D.43379_396 == 1)

processing: D.43377_395 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;

processing: D.43376_394 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;

processing: D.43375_393 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;

processing: D.43374_392 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;

processing: D.43077_391 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43371_390 != 0)

marking necessary through D.43371_390 stmt D.43371_390 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_389][0].ready;
processing: D.43371_390 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_389][0].ready;

marking necessary through D.43370_389 stmt D.43370_389 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
processing: D.43370_389 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];

processing: D.43379_396 = switch_ice_direction (session_45(D));

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5010, session_45(D), 6, "Activating Audio ICE\n");

processing: gen_ice (session_45(D), 0, 0B, 0);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5001, session_45(D), 7, "AUDIO RTP Engage VAD for %s ( %s %s )\n", D.43361_384, iftmp.47_29, iftmp.48_30);

Marking useful stmt: if (D.43354_377 != 0)

Marking useful stmt: if (D.43358_380 != 0)

marking necessary through iftmp.47_29 stmt iftmp.47_29 = PHI <"in"(109), ""(110)>
marking necessary through iftmp.48_30 stmt iftmp.48_30 = PHI <"out"(111), ""(112)>
processing: iftmp.48_30 = PHI <"out"(111), ""(112)>

Marking useful stmt: if (vad_out_12 != 0)

processing: if (vad_out_12 != 0)

marking necessary through vad_out_12 stmt vad_out_12 = PHI <vad_out_11(100), vad_out_11(101), 0(102)>
processing: vad_out_12 = PHI <vad_out_11(100), vad_out_11(101), 0(102)>

marking necessary through vad_out_11 stmt vad_out_11 = PHI <vad_out_322(94), vad_out_322(95), 1(96)>
Marking useful stmt: if (val_355 != 0B)

Marking useful stmt: if (D.43335_356 != 0)

processing: if (D.43335_356 != 0)

processing: if (val_355 != 0B)

processing: vad_out_11 = PHI <vad_out_322(94), vad_out_322(95), 1(96)>

marking necessary through vad_out_322 stmt vad_out_322 = D.43307_321 & 2;
Marking useful stmt: if (val_347 != 0B)

Marking useful stmt: if (D.43325_348 != 0)

processing: if (D.43325_348 != 0)

processing: if (val_347 != 0B)

processing: vad_out_322 = D.43307_321 & 2;

marking necessary through D.43307_321 stmt D.43307_321 = (uint8_t) D.43306_320;
processing: D.43307_321 = (uint8_t) D.43306_320;

marking necessary through D.43306_320 stmt D.43306_320 = D.43099_319->vflags;
processing: D.43306_320 = D.43099_319->vflags;

marking necessary through D.43099_319 stmt D.43099_319 = smh_46->mparams;
processing: D.43099_319 = smh_46->mparams;

processing: iftmp.47_29 = PHI <"in"(109), ""(110)>

Marking useful stmt: if (vad_in_10 != 0)

processing: if (vad_in_10 != 0)

marking necessary through vad_in_10 stmt vad_in_10 = PHI <vad_in_9(97), vad_in_9(98), 0(99)>
processing: vad_in_10 = PHI <vad_in_9(97), vad_in_9(98), 0(99)>

marking necessary through vad_in_9 stmt vad_in_9 = PHI <vad_in_318(91), vad_in_318(92), 1(93)>
Marking useful stmt: if (val_351 != 0B)

Marking useful stmt: if (D.43330_352 != 0)

processing: if (D.43330_352 != 0)

processing: if (val_351 != 0B)

processing: vad_in_9 = PHI <vad_in_318(91), vad_in_318(92), 1(93)>

marking necessary through vad_in_318 stmt vad_in_318 = D.43307_317 & 1;
Marking useful stmt: if (val_343 != 0B)

Marking useful stmt: if (D.43320_344 != 0)

processing: if (D.43320_344 != 0)

processing: if (val_343 != 0B)

processing: vad_in_318 = D.43307_317 & 1;

marking necessary through D.43307_317 stmt D.43307_317 = (uint8_t) D.43306_316;
processing: D.43307_317 = (uint8_t) D.43306_316;

marking necessary through D.43306_316 stmt D.43306_316 = D.43099_315->vflags;
processing: D.43306_316 = D.43099_315->vflags;

marking necessary through D.43099_315 stmt D.43099_315 = smh_46->mparams;
processing: D.43099_315 = smh_46->mparams;

processing: if (D.43358_380 != 0)

marking necessary through D.43358_380 stmt D.43358_380 = D.43356_378 && D.43357_379;
processing: D.43358_380 = D.43356_378 && D.43357_379;

marking necessary through D.43356_378 stmt D.43356_378 = vad_out_12 != 0;
marking necessary through D.43357_379 stmt D.43357_379 = inb_325 == 0;
processing: D.43357_379 = inb_325 == 0;

marking necessary through inb_325 stmt inb_325 = D.43308_324 == 0;
processing: inb_325 = D.43308_324 == 0;

processing: D.43356_378 = vad_out_12 != 0;

processing: if (D.43354_377 != 0)

marking necessary through D.43354_377 stmt D.43354_377 = D.43352_375 && D.43353_376;
processing: D.43354_377 = D.43352_375 && D.43353_376;

marking necessary through D.43352_375 stmt D.43352_375 = vad_in_10 != 0;
marking necessary through D.43353_376 stmt D.43353_376 = inb_325 != 0;
processing: D.43353_376 = inb_325 != 0;

processing: D.43352_375 = vad_in_10 != 0;

processing: D.43361_384 = switch_channel_get_name (D.43360_383);

processing: D.43360_383 = switch_core_session_get_channel (session_45(D));

processing: switch_rtp_enable_vad (D.43077_381, session_45(D), D.43359_382, 7);

marking necessary through D.43077_381 stmt D.43077_381 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43359_382 stmt D.43359_382 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec;
processing: D.43359_382 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec;

processing: D.43077_381 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_rtp_intentional_bugs (D.43077_370, D.43349_374);

marking necessary through D.43077_370 stmt D.43077_370 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43349_374 stmt D.43349_374 = D.43343_371 | D.43348_373;
processing: D.43349_374 = D.43343_371 | D.43348_373;

marking necessary through D.43343_371 stmt D.43343_371 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
marking necessary through D.43348_373 stmt D.43348_373 = D.43099_372->manual_rtp_bugs;
processing: D.43348_373 = D.43099_372->manual_rtp_bugs;

marking necessary through D.43099_372 stmt D.43099_372 = smh_46->mparams;
processing: D.43099_372 = smh_46->mparams;

processing: D.43343_371 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;

processing: D.43077_370 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_core_media_parse_rtp_bugs (D.43347_369, val_368);

Marking useful stmt: if (val_368 != 0B)

marking necessary through D.43347_369 stmt D.43347_369 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
processing: D.43347_369 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;

processing: if (val_368 != 0B)

processing: val_368 = switch_channel_get_variable_dup (D.43073_367, "rtp_manual_rtp_bugs", 1, -1);

marking necessary through D.43073_367 stmt D.43073_367 = session_45(D)->channel;
processing: D.43073_367 = session_45(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs = D.43344_366;

Marking useful stmt: if (D.43340_364 != 0)

marking necessary through D.43344_366 stmt D.43344_366 = D.43343_365 | 4;
processing: D.43344_366 = D.43343_365 | 4;

marking necessary through D.43343_365 stmt D.43343_365 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
processing: D.43343_365 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;

processing: if (D.43340_364 != 0)

marking necessary through D.43340_364 stmt D.43340_364 = D.43339_363 & 4;
processing: D.43340_364 = D.43339_363 & 4;

marking necessary through D.43339_363 stmt D.43339_363 = D.43099_362->auto_rtp_bugs;
processing: D.43339_363 = D.43099_362->auto_rtp_bugs;

marking necessary through D.43099_362 stmt D.43099_362 = smh_46->mparams;
processing: D.43099_362 = smh_46->mparams;

processing: switch_channel_set_variable_printf (D.43073_360, "rtp_use_ssrc", "%u", D.43314_361);

marking necessary through D.43073_360 stmt D.43073_360 = session_45(D)->channel;
marking necessary through D.43314_361 stmt D.43314_361 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
processing: D.43314_361 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;

processing: D.43073_360 = session_45(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = D.43338_359;

processing: D.43338_359 = switch_rtp_get_ssrc (D.43077_358);

marking necessary through D.43077_358 stmt D.43077_358 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_358 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43335_356 = switch_true (val_355);

processing: val_355 = switch_channel_get_variable_dup (D.43073_354, "rtp_disable_vad_out", 1, -1);

marking necessary through D.43073_354 stmt D.43073_354 = session_45(D)->channel;
processing: D.43073_354 = session_45(D)->channel;

processing: D.43330_352 = switch_true (val_351);

processing: val_351 = switch_channel_get_variable_dup (D.43073_350, "rtp_disable_vad_in", 1, -1);

marking necessary through D.43073_350 stmt D.43073_350 = session_45(D)->channel;
processing: D.43073_350 = session_45(D)->channel;

processing: D.43325_348 = switch_true (val_347);

processing: val_347 = switch_channel_get_variable_dup (D.43073_346, "rtp_enable_vad_out", 1, -1);

marking necessary through D.43073_346 stmt D.43073_346 = session_45(D)->channel;
processing: D.43073_346 = session_45(D)->channel;

processing: D.43320_344 = switch_true (val_343);

processing: val_343 = switch_channel_get_variable_dup (D.43073_342, "rtp_enable_vad_in", 1, -1);

marking necessary through D.43073_342 stmt D.43073_342 = session_45(D)->channel;
processing: D.43073_342 = session_45(D)->channel;

processing: switch_channel_set_variable_printf (D.43073_338, "rtp_use_pt", "%d", D.43188_341);

marking necessary through D.43073_338 stmt D.43073_338 = session_45(D)->channel;
marking necessary through D.43188_341 stmt D.43188_341 = (int) D.43187_340;
processing: D.43188_341 = (int) D.43187_340;

marking necessary through D.43187_340 stmt D.43187_340 = D.43171_339->agreed_pt;
processing: D.43187_340 = D.43171_339->agreed_pt;

marking necessary through D.43171_339 stmt D.43171_339 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_339 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43073_338 = session_45(D)->channel;

processing: switch_channel_set_flag_value (D.43073_337, 36, 1);

marking necessary through D.43073_337 stmt D.43073_337 = session_45(D)->channel;
processing: D.43073_337 = session_45(D)->channel;

processing: switch_rtp_set_remote_ssrc (D.43077_335, D.43315_336);

Marking useful stmt: if (D.43315_334 != 0)

marking necessary through D.43077_335 stmt D.43077_335 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43315_336 stmt D.43315_336 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
processing: D.43315_336 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;

processing: D.43077_335 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43315_334 != 0)

marking necessary through D.43315_334 stmt D.43315_334 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
processing: D.43315_334 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;

processing: switch_rtp_set_ssrc (D.43077_332, D.43314_333);

Marking useful stmt: if (ssrc_329 != 0B)

marking necessary through D.43077_332 stmt D.43077_332 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43314_333 stmt D.43314_333 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
processing: D.43314_333 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;

processing: D.43077_332 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (ssrc_329 != 0B)

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = ssrc_ul_330;

processing: switch_rtp_set_ssrc (D.43077_331, ssrc_ul_330);

marking necessary through D.43077_331 stmt D.43077_331 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_331 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: ssrc_ul_330 = strtoul (ssrc_329, 0B, 10);

processing: ssrc_329 = switch_channel_get_variable_dup (D.43073_328, "rtp_use_ssrc", 1, -1);

marking necessary through D.43073_328 stmt D.43073_328 = session_45(D)->channel;
processing: D.43073_328 = session_45(D)->channel;

processing: switch_mutex_init (D.43309_326, 1, D.43310_327);

marking necessary through D.43309_326 stmt D.43309_326 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_mutex;
processing: D.43309_326 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_mutex;

processing: D.43310_327 = switch_core_session_get_pool (session_45(D));

processing: D.43308_324 = switch_channel_direction (D.43073_323);

marking necessary through D.43073_323 stmt D.43073_323 = session_45(D)->channel;
processing: D.43073_323 = session_45(D)->channel;

processing: D.43303_314 = switch_rtp_ready (D.43077_313);

marking necessary through D.43077_313 stmt D.43077_313 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_313 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_rtp_set_payload_map (D.43077_311, D.43302_312);

Marking useful stmt: if (D.43299_310 != 0)

marking necessary through D.43077_311 stmt D.43077_311 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43302_312 stmt D.43302_312 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].payload_map;
processing: D.43302_312 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].payload_map;

processing: D.43077_311 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43299_310 != 0)

Marking useful stmt: if (D.43291_292 != 0)

Marking useful stmt: if (D.43293_294 <= 9)

processing: if (D.43293_294 <= 9)

processing: if (D.43291_292 != 0)

processing: D.43299_310 = switch_rtp_ready (D.43077_309);

marking necessary through D.43077_309 stmt D.43077_309 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_309 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session = D.43298_308;

processing: D.43298_308 = switch_rtp_new (D.43184_295, D.43185_296, D.43172_298, D.43174_300, D.43187_302, D.43294_303, D.43296_306, &flags, timer_name_6, &err, D.43297_307);

marking necessary through D.43184_295 stmt D.43184_295 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
marking necessary through D.43185_296 stmt D.43185_296 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
marking necessary through D.43172_298 stmt D.43172_298 = D.43171_297->remote_sdp_ip;
marking necessary through D.43174_300 stmt D.43174_300 = D.43171_299->remote_sdp_port;
marking necessary through D.43187_302 stmt D.43187_302 = D.43171_301->agreed_pt;
marking necessary through D.43294_303 stmt D.43294_303 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
marking necessary through D.43296_306 stmt D.43296_306 = D.43295_305 * 1000;
marking necessary through timer_name_6 stmt timer_name_6 = PHI <0B(78), timer_name_287(79), var_289(80), 0B(77)>
processing: timer_name_6 = PHI <0B(78), timer_name_287(79), var_289(80), 0B(77)>

marking necessary through timer_name_287 stmt timer_name_287 = D.43099_286->timer_name;
Marking useful stmt: if (D.43283_282 != 0)

Marking useful stmt: if (var_289 != 0B)

processing: if (var_289 != 0B)

processing: if (D.43283_282 != 0)

processing: timer_name_287 = D.43099_286->timer_name;

marking necessary through D.43099_286 stmt D.43099_286 = smh_46->mparams;
processing: D.43099_286 = smh_46->mparams;

processing: D.43296_306 = D.43295_305 * 1000;

marking necessary through D.43295_305 stmt D.43295_305 = D.43171_304->codec_ms;
processing: D.43295_305 = D.43171_304->codec_ms;

marking necessary through D.43171_304 stmt D.43171_304 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_304 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43294_303 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;

processing: D.43187_302 = D.43171_301->agreed_pt;

marking necessary through D.43171_301 stmt D.43171_301 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_301 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43174_300 = D.43171_299->remote_sdp_port;

marking necessary through D.43171_299 stmt D.43171_299 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_299 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_298 = D.43171_297->remote_sdp_ip;

marking necessary through D.43171_297 stmt D.43171_297 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_297 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43185_296 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;

processing: D.43184_295 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;

processing: D.43297_307 = switch_core_session_get_pool (session_45(D));

processing: D.43293_294 = switch_channel_get_state (D.43073_293);

marking necessary through D.43073_293 stmt D.43073_293 = session_45(D)->channel;
processing: D.43073_293 = session_45(D)->channel;

processing: D.43291_292 = switch_channel_check_signal (D.43073_291, 1);

marking necessary through D.43073_291 stmt D.43073_291 = session_45(D)->channel;
processing: D.43073_291 = session_45(D)->channel;

processing: var_289 = switch_channel_get_variable_dup (D.43073_288, "rtp_timer_name", 1, -1);

marking necessary through D.43073_288 stmt D.43073_288 = session_45(D)->channel;
processing: D.43073_288 = session_45(D)->channel;

processing: switch_rtp_set_default_payload (D.43077_283, D.43187_285);

marking necessary through D.43077_283 stmt D.43077_283 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43187_285 stmt D.43187_285 = D.43171_284->agreed_pt;
processing: D.43187_285 = D.43171_284->agreed_pt;

marking necessary through D.43171_284 stmt D.43171_284 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_284 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43077_283 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43283_282 = switch_rtp_ready (D.43077_281);

marking necessary through D.43077_281 stmt D.43077_281 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_281 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4906, session_45(D), 7, "PROXY AUDIO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43282_265, D.43172_272, D.43179_275, D.43172_272, D.43179_275, D.43188_278, D.43190_280);

marking necessary through D.43172_272 stmt D.43172_272 = D.43171_271->remote_sdp_ip;
marking necessary through D.43179_275 stmt D.43179_275 = (int) D.43174_274;
marking necessary through D.43188_278 stmt D.43188_278 = (int) D.43187_277;
marking necessary through D.43190_280 stmt D.43190_280 = D.43189_279 / 1000;
processing: D.43190_280 = D.43189_279 / 1000;

marking necessary through D.43189_279 stmt D.43189_279 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
processing: D.43189_279 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;

processing: D.43188_278 = (int) D.43187_277;

marking necessary through D.43187_277 stmt D.43187_277 = D.43171_276->agreed_pt;
processing: D.43187_277 = D.43171_276->agreed_pt;

marking necessary through D.43171_276 stmt D.43171_276 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_276 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43179_275 = (int) D.43174_274;

marking necessary through D.43174_274 stmt D.43174_274 = D.43171_273->remote_sdp_port;
processing: D.43174_274 = D.43171_273->remote_sdp_port;

marking necessary through D.43171_273 stmt D.43171_273 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_273 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_272 = D.43171_271->remote_sdp_ip;

marking necessary through D.43171_271 stmt D.43171_271 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_271 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43282_265 = switch_channel_get_name (D.43073_264);

marking necessary through D.43073_264 stmt D.43073_264 = session_45(D)->channel;
processing: D.43073_264 = session_45(D)->channel;

processing: D.43281_260 = switch_true (val_259);

processing: val_259 = switch_channel_get_variable_dup (D.43073_258, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_258 stmt D.43073_258 = session_45(D)->channel;
processing: D.43073_258 = session_45(D)->channel;

processing: D.43277_257 = switch_channel_test_flag (D.43073_256, 106);

marking necessary through D.43073_256 stmt D.43073_256 = session_45(D)->channel;
processing: D.43073_256 = session_45(D)->channel;

processing: D.43274_255 = switch_media_handle_test_media_flag (smh_46, 10);

processing: memset (&flags, 0, 156);

processing: switch_core_media_proxy_remote_addr (session_45(D), 0B);

processing: D.43267_250 = switch_channel_test_flag (D.43073_249, 29);

marking necessary through D.43073_249 stmt D.43073_249 = session_45(D)->channel;
processing: D.43073_249 = session_45(D)->channel;

processing: check_dtls_reinvite (session_45(D), a_engine_48);

processing: switch_rtp_set_flag (D.43077_245, 7);

Marking useful stmt: if (D.43259_244 == 0)

marking necessary through D.43077_245 stmt D.43077_245 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_245 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43259_244 == 0)

Marking useful stmt: if (val_241 == 0B)

Marking useful stmt: if (D.43258_242 == 0)

processing: if (D.43258_242 == 0)

processing: if (val_241 == 0B)

Marking useful stmt: if (D.43254_239 == 0)

processing: if (D.43254_239 == 0)

Marking useful stmt: if (D.43202_185 != 0)

processing: if (D.43202_185 != 0)

processing: D.43259_244 = switch_channel_test_flag (D.43073_243, 106);

marking necessary through D.43073_243 stmt D.43073_243 = session_45(D)->channel;
processing: D.43073_243 = session_45(D)->channel;

processing: D.43258_242 = switch_true (val_241);

processing: val_241 = switch_channel_get_variable_dup (D.43073_240, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_240 stmt D.43073_240 = session_45(D)->channel;
processing: D.43073_240 = session_45(D)->channel;

processing: D.43254_239 = switch_media_handle_test_media_flag (smh_46, 10);

processing: switch_core_media_toggle_hold (session_45(D), 0);

Marking useful stmt: if (__result_237 != 0)

processing: if (__result_237 != 0)

Marking useful stmt: if (D.43207_193 != 0)

marking necessary through __result_237 stmt __result_237 = __builtin_strcmp (D.43172_236, "0.0.0.0");
processing: __result_237 = __builtin_strcmp (D.43172_236, "0.0.0.0");

marking necessary through D.43172_236 stmt D.43172_236 = D.43171_235->remote_sdp_ip;
processing: D.43172_236 = D.43171_235->remote_sdp_ip;

marking necessary through D.43171_235 stmt D.43171_235 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_235 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: if (D.43207_193 != 0)

processing: D.43207_193 = switch_channel_test_flag (D.43073_192, 96);

marking necessary through D.43073_192 stmt D.43073_192 = session_45(D)->channel;
processing: D.43073_192 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4870, session_45(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.43172_188, D.43179_191);

marking necessary through D.43172_188 stmt D.43172_188 = D.43171_187->remote_sdp_ip;
marking necessary through D.43179_191 stmt D.43179_191 = (int) D.43174_190;
processing: D.43179_191 = (int) D.43174_190;

marking necessary through D.43174_190 stmt D.43174_190 = D.43171_189->remote_sdp_port;
processing: D.43174_190 = D.43171_189->remote_sdp_port;

marking necessary through D.43171_189 stmt D.43171_189 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_189 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_188 = D.43171_187->remote_sdp_ip;

marking necessary through D.43171_187 stmt D.43171_187 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_187 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4868, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.45_186);

marking necessary through err.45_186 stmt err.45_186 = err;
processing: err.45_186 = err;

processing: D.43202_185 = switch_rtp_set_remote_address (D.43077_180, D.43172_182, D.43174_184, remote_rtcp_port_7, 1, &err);

marking necessary through D.43077_180 stmt D.43077_180 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
marking necessary through D.43172_182 stmt D.43172_182 = D.43171_181->remote_sdp_ip;
marking necessary through D.43174_184 stmt D.43174_184 = D.43171_183->remote_sdp_port;
marking necessary through remote_rtcp_port_7 stmt remote_rtcp_port_7 = PHI <remote_rtcp_port_175(56), remote_rtcp_port_175(57), remote_rtcp_port_179(58)>
processing: remote_rtcp_port_7 = PHI <remote_rtcp_port_175(56), remote_rtcp_port_175(57), remote_rtcp_port_179(58)>

marking necessary through remote_rtcp_port_175 stmt remote_rtcp_port_175 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
marking necessary through remote_rtcp_port_179 stmt remote_rtcp_port_179 = (switch_port_t) D.48083_1337;
Marking useful stmt: if (remote_rtcp_port_175 == 0)

Marking useful stmt: if (rport_177 != 0B)

processing: if (rport_177 != 0B)

processing: if (remote_rtcp_port_175 == 0)

processing: remote_rtcp_port_179 = (switch_port_t) D.48083_1337;

processing: remote_rtcp_port_175 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;

processing: D.43174_184 = D.43171_183->remote_sdp_port;

marking necessary through D.43171_183 stmt D.43171_183 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_183 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_182 = D.43171_181->remote_sdp_ip;

marking necessary through D.43171_181 stmt D.43171_181 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_181 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43077_180 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.48083_1337 = strtol (rport_177, 0B, 10);

processing: rport_177 = switch_channel_get_variable_dup (D.43073_176, "rtp_remote_audio_rtcp_port", 1, -1);

marking necessary through D.43073_176 stmt D.43073_176 = session_45(D)->channel;
processing: D.43073_176 = session_45(D)->channel;

processing: D.43194_173 = switch_channel_test_flag (D.43073_172, 103);

marking necessary through D.43073_172 stmt D.43073_172 = session_45(D)->channel;
processing: D.43073_172 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_169, "advertised_media_ip", D.43191_170, 1);

marking necessary through D.43073_169 stmt D.43073_169 = session_45(D)->channel;
marking necessary through D.43191_170 stmt D.43191_170 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
processing: D.43191_170 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;

processing: D.43073_169 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_168, "local_media_port", &tmp, 1);

marking necessary through D.43073_168 stmt D.43073_168 = session_45(D)->channel;
processing: D.43073_168 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_166, "local_media_ip", D.43184_167, 1);

marking necessary through D.43073_166 stmt D.43073_166 = session_45(D)->channel;
marking necessary through D.43184_167 stmt D.43184_167 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
processing: D.43184_167 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;

processing: D.43073_166 = session_45(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.43186_165);

marking necessary through D.43186_165 stmt D.43186_165 = (int) D.43185_164;
processing: D.43186_165 = (int) D.43185_164;

marking necessary through D.43185_164 stmt D.43185_164 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
processing: D.43185_164 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4841, session_45(D), 7, "AUDIO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43183_150, D.43184_151, D.43186_153, D.43172_155, D.43179_158, D.43188_161, D.43190_163);

Marking useful stmt: if (D.43180_148 == 0)

marking necessary through D.43184_151 stmt D.43184_151 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
marking necessary through D.43186_153 stmt D.43186_153 = (int) D.43185_152;
marking necessary through D.43172_155 stmt D.43172_155 = D.43171_154->remote_sdp_ip;
marking necessary through D.43179_158 stmt D.43179_158 = (int) D.43174_157;
marking necessary through D.43188_161 stmt D.43188_161 = (int) D.43187_160;
marking necessary through D.43190_163 stmt D.43190_163 = D.43189_162 / 1000;
processing: D.43190_163 = D.43189_162 / 1000;

marking necessary through D.43189_162 stmt D.43189_162 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
processing: D.43189_162 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;

processing: D.43188_161 = (int) D.43187_160;

marking necessary through D.43187_160 stmt D.43187_160 = D.43171_159->agreed_pt;
processing: D.43187_160 = D.43171_159->agreed_pt;

marking necessary through D.43171_159 stmt D.43171_159 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_159 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43179_158 = (int) D.43174_157;

marking necessary through D.43174_157 stmt D.43174_157 = D.43171_156->remote_sdp_port;
processing: D.43174_157 = D.43171_156->remote_sdp_port;

marking necessary through D.43171_156 stmt D.43171_156 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_156 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_155 = D.43171_154->remote_sdp_ip;

marking necessary through D.43171_154 stmt D.43171_154 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_154 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43186_153 = (int) D.43185_152;

marking necessary through D.43185_152 stmt D.43185_152 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
processing: D.43185_152 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;

processing: D.43184_151 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;

processing: if (D.43180_148 == 0)

processing: D.43183_150 = switch_channel_get_name (D.43073_149);

marking necessary through D.43073_149 stmt D.43073_149 = session_45(D)->channel;
processing: D.43073_149 = session_45(D)->channel;

processing: D.43180_148 = switch_channel_test_flag (D.43073_147, 29);

marking necessary through D.43073_147 stmt D.43073_147 = session_45(D)->channel;
processing: D.43073_147 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_146, "remote_media_port", &tmp, 1);

marking necessary through D.43073_146 stmt D.43073_146 = session_45(D)->channel;
processing: D.43073_146 = session_45(D)->channel;

processing: switch_channel_set_variable_var_check (D.43073_143, "remote_media_ip", D.43172_145, 1);

marking necessary through D.43073_143 stmt D.43073_143 = session_45(D)->channel;
marking necessary through D.43172_145 stmt D.43172_145 = D.43171_144->remote_sdp_ip;
processing: D.43172_145 = D.43171_144->remote_sdp_ip;

marking necessary through D.43171_144 stmt D.43171_144 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_144 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43073_143 = session_45(D)->channel;

processing: switch_snprintf (&tmp, 50, "%d", D.43179_142);

marking necessary through D.43179_142 stmt D.43179_142 = (int) D.43174_141;
processing: D.43179_142 = (int) D.43174_141;

marking necessary through D.43174_141 stmt D.43174_141 = D.43171_140->remote_sdp_port;
processing: D.43174_141 = D.43171_140->remote_sdp_port;

marking necessary through D.43171_140 stmt D.43171_140 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_140 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4830, session_45(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.43177_133, remote_host_119, D.43178_134, D.43172_136, D.43179_139);

marking necessary through D.43178_134 stmt D.43178_134 = (int) remote_port_121;
marking necessary through D.43172_136 stmt D.43172_136 = D.43171_135->remote_sdp_ip;
marking necessary through D.43179_139 stmt D.43179_139 = (int) D.43174_138;
processing: D.43179_139 = (int) D.43174_138;

marking necessary through D.43174_138 stmt D.43174_138 = D.43171_137->remote_sdp_port;
processing: D.43174_138 = D.43171_137->remote_sdp_port;

marking necessary through D.43171_137 stmt D.43171_137 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_137 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43172_136 = D.43171_135->remote_sdp_ip;

marking necessary through D.43171_135 stmt D.43171_135 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
processing: D.43171_135 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;

processing: D.43178_134 = (int) remote_port_121;

processing: D.43177_133 = switch_channel_get_name (D.43073_132);

marking necessary through D.43073_132 stmt D.43073_132 = session_45(D)->channel;
processing: D.43073_132 = session_45(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4825, session_45(D), 7, "Audio params are unchanged for %s.\n", D.43176_131);

processing: D.43176_131 = switch_channel_get_name (D.43073_130);

marking necessary through D.43073_130 stmt D.43073_130 = session_45(D)->channel;
processing: D.43073_130 = session_45(D)->channel;

processing: remote_port_121 = switch_rtp_get_remote_port (D.43077_120);

marking necessary through D.43077_120 stmt D.43077_120 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_120 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: remote_host_119 = switch_rtp_get_remote_host (D.43077_118);

marking necessary through D.43077_118 stmt D.43077_118 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_118 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43163_117 = switch_channel_test_flag (D.43073_116, 103);

marking necessary through D.43073_116 stmt D.43073_116 = session_45(D)->channel;
processing: D.43073_116 = session_45(D)->channel;

processing: D.43158_114 = switch_true (val_113);

processing: val_113 = switch_channel_get_variable_dup (D.43073_112, "rtp_disable_byteswap", 1, -1);

marking necessary through D.43073_112 stmt D.43073_112 = session_45(D)->channel;
processing: D.43073_112 = session_45(D)->channel;

processing: D.43099_102->cng_pt = 0;

marking necessary through D.43099_102 stmt D.43099_102 = smh_46->mparams;
processing: D.43099_102 = smh_46->mparams;

processing: D.43139_101 = switch_media_handle_test_media_flag (smh_46, 9);

processing: D.43136_98 = switch_true (val_97);

processing: val_97 = switch_channel_get_variable_dup (D.43073_96, "rtp_rewrite_timestamps", 1, -1);

marking necessary through D.43073_96 stmt D.43073_96 = session_45(D)->channel;
processing: D.43073_96 = session_45(D)->channel;

processing: D.43132_95 = switch_media_handle_test_media_flag (smh_46, 13);

processing: D.43127_92 = switch_true (val_91);

processing: val_91 = switch_channel_get_variable_dup (D.43073_90, "rtp_autoflush", 1, -1);

marking necessary through D.43073_90 stmt D.43073_90 = session_45(D)->channel;
processing: D.43073_90 = session_45(D)->channel;

processing: D.43124_89 = switch_media_handle_test_media_flag (smh_46, 12);

processing: switch_channel_set_flag_value (D.43073_88, 100, 1);

Marking useful stmt: if (D.43118_84 != 0)

Marking useful stmt: if (D.43121_87 != 0)

marking necessary through D.43073_88 stmt D.43073_88 = session_45(D)->channel;
processing: D.43073_88 = session_45(D)->channel;

processing: if (D.43121_87 != 0)

Marking useful stmt: if (val_86 != 0B)

processing: if (val_86 != 0B)

processing: if (D.43118_84 != 0)

processing: D.43121_87 = switch_true (val_86);

processing: val_86 = switch_channel_get_variable_dup (D.43073_85, "pass_rfc2833", 1, -1);

marking necessary through D.43073_85 stmt D.43073_85 = session_45(D)->channel;
processing: D.43073_85 = session_45(D)->channel;

processing: D.43118_84 = switch_media_handle_test_media_flag (smh_46, 11);

processing: D.43113_81 = switch_true (val_80);

processing: val_80 = switch_channel_get_variable_dup (D.43073_79, "disable_rtp_auto_adjust", 1, -1);

marking necessary through D.43073_79 stmt D.43073_79 = session_45(D)->channel;
processing: D.43073_79 = session_45(D)->channel;

processing: D.43109_78 = switch_channel_test_flag (D.43073_77, 106);

marking necessary through D.43073_77 stmt D.43073_77 = session_45(D)->channel;
processing: D.43073_77 = session_45(D)->channel;

processing: D.43106_76 = switch_media_handle_test_media_flag (smh_46, 10);

processing: memset (&flags, 0, 156);

processing: switch_core_media_set_video_codec (session_45(D), 0);

processing: status_73 = switch_core_media_set_codec (session_45(D), 0, D.43100_72);

marking necessary through D.43100_72 stmt D.43100_72 = D.43099_71->codec_flags;
processing: D.43100_72 = D.43099_71->codec_flags;

marking necessary through D.43099_71 stmt D.43099_71 = smh_46->mparams;
processing: D.43099_71 = smh_46->mparams;

processing: D.43097_69 = switch_rtp_ready (D.43096_68);

marking necessary through D.43096_68 stmt D.43096_68 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
processing: D.43096_68 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;

processing: D.43093_67 = switch_channel_test_flag (D.43073_66, 98);

marking necessary through D.43073_66 stmt D.43073_66 = session_45(D)->channel;
processing: D.43073_66 = session_45(D)->channel;

processing: D.43090_65 = switch_rtp_ready (D.43077_64);

marking necessary through D.43077_64 stmt D.43077_64 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_64 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43087_63 = switch_channel_test_flag (D.43073_62, 103);

marking necessary through D.43073_62 stmt D.43073_62 = session_45(D)->channel;
processing: D.43073_62 = session_45(D)->channel;

processing: D.43084_60 = switch_channel_test_flag (D.43073_59, 15);

marking necessary through D.43073_59 stmt D.43073_59 = session_45(D)->channel;
processing: D.43073_59 = session_45(D)->channel;

processing: switch_channel_set_flag_value (D.43073_58, 92, 1);

Marking useful stmt: if (D.43081_57 != 9)

marking necessary through D.43073_58 stmt D.43073_58 = session_45(D)->channel;
processing: D.43073_58 = session_45(D)->channel;

processing: if (D.43081_57 != 9)

marking necessary through D.43081_57 stmt D.43081_57 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].crypto_type;
processing: D.43081_57 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].crypto_type;

processing: switch_rtp_reset_media_timer (D.43077_56);

Marking useful stmt: if (D.43078_55 != 0)

marking necessary through D.43077_56 stmt D.43077_56 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_56 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: if (D.43078_55 != 0)

processing: D.43078_55 = switch_rtp_ready (D.43077_54);

marking necessary through D.43077_54 stmt D.43077_54 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
processing: D.43077_54 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;

processing: D.43076_53 = switch_channel_get_state (D.43073_52);

marking necessary through D.43073_52 stmt D.43073_52 = session_45(D)->channel;
processing: D.43073_52 = session_45(D)->channel;

processing: D.43074_51 = switch_channel_check_signal (D.43073_50, 1);

marking necessary through D.43073_50 stmt D.43073_50 = session_45(D)->channel;
processing: D.43073_50 = session_45(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 4731, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : delayi_592 = delayi_1347;

Deleting : dtype_462 = dtype_34;

Deleting : v_531 = v_1346;

Deleting : dtype_456 = dtype_33;

Deleting : maxlen_489 = maxlen_1343;

Deleting : v_526 = v_1345;

Deleting : jb_msec_484 = jb_msec_1342;

Deleting : interval_417 = interval_1339;

Deleting : dtype_898 = dtype_39;

Deleting : interval_857 = interval_1350;

Deleting : timer_name_290 = var_289;

Deleting LHS of call: var_758 = switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);

Deleting : status_944 = status_5;

Removed 12 of 1322 statements (0%)
Removed 0 of 123 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  const char * err;
  const char * val;
  switch_rtp_flag_t flags[39];
  switch_status_t status;
  char tmp[50];
  char * timer_name;
  const char * var;
  struct switch_rtp_engine_t * a_engine;
  struct switch_rtp_engine_t * v_engine;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_activate_rtp";
  void end = <<< error >>>; (unused)
  void video = <<< error >>>; (unused)
  static const char __func__[31] = "switch_core_media_activate_rtp";
  void video_up = <<< error >>>; (unused)

  { Scope block #329 
    char * remote_host;
    switch_port_t remote_port;

    { Scope block #330 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #331 
    const char * rport;
    switch_port_t remote_rtcp_port;

    { Scope block #332 src/switch_core_media.c:4862 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #333 Originating from :#0 

      }

    }

    { Scope block #334 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

      { Scope block #335 
        const unsigned char * __s1; (unused)
        register int __result;

      }

    }

  }

  { Scope block #336 
    uint8_t vad_in;
    uint8_t vad_out;
    uint8_t inb;
    const char * ssrc;

    { Scope block #337 src/switch_core_media.c:5085 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #338 Originating from :#0 

      }

    }

    { Scope block #339 
      uint32_t ssrc_ul;

    }

    { Scope block #340 
      const char * rport;
      switch_port_t remote_rtcp_port;

      { Scope block #341 src/switch_core_media.c:5039 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #342 Originating from :#0 

        }

      }

      { Scope block #343 
        int interval;

        { Scope block #344 src/switch_core_media.c:5046 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #345 Originating from :#0 

          }

        }

      }

      { Scope block #346 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #347 
      dtls_type_t xtype;
      dtls_type_t dtype;

    }

    { Scope block #348 
      int jb_msec;
      int maxlen;
      int max_drift;
      char * p;
      char * q;

      { Scope block #349 src/switch_core_media.c:5116 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #350 Originating from :#0 

        }

      }

      { Scope block #351 src/switch_core_media.c:5113 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #352 Originating from :#0 

        }

      }

      { Scope block #353 src/switch_core_media.c:5107 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #354 Originating from :#0 

        }

      }

      { Scope block #355 
        int qlen;
        int maxqlen;

      }

    }

    { Scope block #356 
      int v;

      { Scope block #357 src/switch_core_media.c:5161 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #358 Originating from :#0 

        }

      }

    }

    { Scope block #359 
      int v;

      { Scope block #360 src/switch_core_media.c:5168 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #361 Originating from :#0 

        }

      }

    }

    { Scope block #362 
      int delayi;

      { Scope block #363 src/switch_core_media.c:5208 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #364 Originating from :#0 

        }

      }

    }

    { Scope block #365 
      char * remote_host;
      switch_port_t remote_port;

      { Scope block #366 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #367 
      const char * rport;
      switch_port_t remote_rtcp_port;

      { Scope block #368 src/switch_core_media.c:5299 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #369 Originating from :#0 

        }

      }

    }

    { Scope block #370 
      const char * ssrc;

      { Scope block #371 src/switch_core_media.c:5509 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #372 Originating from :#0 

        }

      }

      { Scope block #373 
        uint32_t ssrc_ul;

      }

      { Scope block #374 
        const char * rport;
        switch_port_t remote_port;

        { Scope block #375 src/switch_core_media.c:5459 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #376 Originating from :#0 

          }

        }

        { Scope block #377 
          int interval;

          { Scope block #378 src/switch_core_media.c:5465 Originating from :  extern int atoi (const char *); 
            const char * __nptr; (unused)

            { Scope block #379 Originating from :#0 

            }

          }

        }

        { Scope block #380 
          size_t __s1_len; (unused)
          size_t __s2_len; (unused)

        }

      }

      { Scope block #381 
        dtls_type_t xtype;
        dtls_type_t dtype;

      }

    }

  }

}
switch_core_media_activate_rtp (struct switch_core_session_t * session)
{
  const char D.48124;
  int D.48123;
  int D.48117;
  int D.48114;
  int D.48102;
  const char D.48093;
  int D.48092;
  int D.48086;
  int D.48083;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  int delayi;
  int v;
  int v;
  int maxqlen;
  int qlen;
  char * q;
  char * p;
  int max_drift;
  int maxlen;
  int jb_msec;
  dtls_type_t dtype;
  dtls_type_t xtype;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  uint32_t ssrc_ul;
  const char * ssrc;
  uint8_t inb;
  uint8_t vad_out;
  uint8_t vad_in;
  register int __result;
  switch_port_t remote_rtcp_port;
  const char * rport;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[31] = "switch_core_media_activate_rtp";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_activate_rtp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * v_engine;
  struct switch_rtp_engine_t * a_engine;
  const char * var;
  char * timer_name;
  char tmp[50];
  switch_status_t status;
  switch_rtp_flag_t flags[39];
  const char * val;
  const char * err;
  _Bool D.43791;
  _Bool D.43790;
  const char * iftmp.68;
  const char * iftmp.67;
  uint32_t D.43777;
  uint32_t D.43776;
  unsigned int D.43775;
  switch_rtp_bug_flag_t D.43774;
  switch_rtp_bug_flag_t D.43773;
  switch_rtp_bug_flag_t * D.43772;
  unsigned int D.43765;
  struct dtls_fingerprint_t * D.43764;
  struct dtls_fingerprint_t * D.43763;
  char * D.43760;
  switch_call_direction_t D.43754;
  int D.43750;
  int D.43747;
  char[192] * D.43743;
  switch_call_direction_t D.43739;
  switch_core_media_ice_type_t iftmp.65;
  switch_port_t D.43736;
  switch_port_t D.43735;
  char * D.43733;
  char * D.43732;
  int D.39417;
  uint8_t D.43726;
  int D.43725;
  int D.43724;
  unsigned int D.43721;
  unsigned int interval.64;
  switch_bool_t D.43718;
  int8_t D.43717;
  int D.43716;
  int D.43713;
  struct ice_t * D.43706;
  switch_call_direction_t D.43702;
  switch_core_media_ice_type_t iftmp.63;
  char * D.43700;
  char * D.43699;
  char * D.43698;
  char * D.43697;
  uint8_t D.43694;
  int D.43693;
  uint32_t D.43690;
  uint32_t D.43689;
  struct payload_map_t * * D.43685;
  uint8_t D.43682;
  uint8_t D.43679;
  uint8_t D.43676;
  uint8_t D.43672;
  const char * iftmp.62;
  char * D.43670;
  uint32_t D.43666;
  char * iftmp.61;
  struct switch_rtp_t * D.43664;
  struct switch_memory_pool_t * D.43663;
  switch_rtp_flag_t D.43662;
  switch_rtp_flag_t D.43661;
  uint32_t D.43658;
  uint32_t D.43655;
  int D.43654;
  uint32_t D.43650;
  int32_t D.43647;
  uint8_t D.43636;
  int D.43635;
  int D.43634;
  char * D.43633;
  int D.43632;
  uint32_t D.43628;
  int32_t D.43625;
  uint32_t D.43620;
  int D.43619;
  uint32_t D.43615;
  int32_t D.43612;
  switch_status_t D.43606;
  uint32_t D.43598;
  int D.43595;
  switch_payload_t D.43594;
  int D.43593;
  switch_port_t D.43592;
  char * D.43591;
  uint8_t D.43588;
  uint32_t D.43585;
  int D.43584;
  int D.43583;
  char * D.43582;
  char * D.43581;
  char * D.43578;
  int D.39400;
  _Bool D.43576;
  _Bool D.43575;
  _Bool D.43574;
  uint32_t D.43570;
  switch_port_t D.43565;
  char * D.43562;
  struct payload_map_t * D.43561;
  uint32_t D.43558;
  switch_call_direction_t D.43555;
  uint32_t D.43552;
  int D.43551;
  int32_t D.43548;
  char * D.43545;
  uint32_t D.43542;
  unsigned int delayi.60;
  int D.43536;
  int D.43534;
  int32_t D.43531;
  int D.43527;
  switch_payload_t D.43524;
  int D.43523;
  switch_payload_t D.43520;
  uint32_t D.43519;
  uint32_t D.43518;
  uint32_t D.43515;
  uint32_t D.43512;
  uint32_t D.43511;
  uint32_t D.43510;
  uint32_t D.43509;
  uint32_t D.43506;
  uint32_t v.59;
  uint32_t v.58;
  int D.43492;
  const char * D.43491;
  switch_status_t D.43488;
  uint32_t max_drift.57;
  uint32_t D.43486;
  uint32_t maxqlen.56;
  uint32_t qlen.55;
  unsigned int D.43474;
  int D.43473;
  int D.43472;
  const int D.43471;
  const struct switch_codec_implementation_t * D.43470;
  unsigned int D.43467;
  unsigned int jb_msec.54;
  unsigned int D.43453;
  struct dtls_fingerprint_t * D.43452;
  struct dtls_fingerprint_t * D.43451;
  char * D.43448;
  uint32_t D.43439;
  switch_call_direction_t D.43435;
  struct switch_channel_t * D.43434;
  int D.43430;
  struct switch_core_session_t * D.43429;
  int D.43426;
  char[192] * D.43422;
  switch_call_direction_t D.43418;
  switch_core_media_ice_type_t iftmp.51;
  switch_port_t D.43415;
  switch_port_t D.43414;
  char * D.43412;
  char * D.43411;
  int D.39377;
  uint8_t D.43405;
  int D.43404;
  unsigned int D.43401;
  unsigned int interval.50;
  switch_bool_t D.43398;
  int8_t D.43397;
  int D.43396;
  int D.43393;
  _Bool D.43389;
  _Bool D.43388;
  _Bool D.43387;
  struct ice_t * D.43383;
  switch_call_direction_t D.43379;
  switch_core_media_ice_type_t iftmp.49;
  char * D.43377;
  char * D.43376;
  char * D.43375;
  char * D.43374;
  uint8_t D.43371;
  int D.43370;
  char * iftmp.48;
  char * iftmp.47;
  char * D.43361;
  struct switch_channel_t * D.43360;
  struct switch_codec_t * D.43359;
  _Bool D.43358;
  _Bool D.43357;
  _Bool D.43356;
  _Bool D.43354;
  _Bool D.43353;
  _Bool D.43352;
  unsigned int D.43349;
  switch_rtp_bug_flag_t D.43348;
  switch_rtp_bug_flag_t * D.43347;
  unsigned int D.43344;
  switch_rtp_bug_flag_t D.43343;
  unsigned int D.43340;
  switch_rtp_bug_flag_t D.43339;
  uint32_t D.43338;
  int D.43335;
  int D.43330;
  int D.43325;
  int D.43320;
  uint32_t D.43315;
  uint32_t D.43314;
  struct switch_memory_pool_t * D.43310;
  struct switch_mutex_t *[2] * D.43309;
  switch_call_direction_t D.43308;
  uint8_t D.43307;
  switch_core_media_vflag_t D.43306;
  uint8_t D.43303;
  struct payload_map_t * * D.43302;
  uint8_t D.43299;
  struct switch_rtp_t * D.43298;
  struct switch_memory_pool_t * D.43297;
  uint32_t D.43296;
  uint32_t D.43295;
  uint32_t D.43294;
  switch_channel_state_t D.43293;
  int D.43291;
  uint8_t D.43283;
  char * D.43282;
  int D.43281;
  uint32_t D.43277;
  int32_t D.43274;
  switch_rtp_flag_t D.43271;
  switch_rtp_flag_t D.43270;
  uint32_t D.43267;
  _Bool D.43264;
  _Bool D.43263;
  _Bool D.43262;
  uint32_t D.43259;
  int D.43258;
  int32_t D.43254;
  uint32_t D.43207;
  const char * err.45;
  switch_status_t D.43202;
  uint32_t D.43194;
  char * D.43191;
  int D.43190;
  int D.43189;
  int D.43188;
  switch_payload_t D.43187;
  int D.43186;
  switch_port_t D.43185;
  char * D.43184;
  char * D.43183;
  uint32_t D.43180;
  int D.43179;
  int D.43178;
  char * D.43177;
  char * D.43176;
  switch_port_t D.43174;
  char * D.43172;
  struct payload_map_t * D.43171;
  int D.39348;
  _Bool D.43169;
  _Bool D.43168;
  _Bool D.43167;
  uint32_t D.43163;
  int D.43158;
  switch_rtp_flag_t D.43153;
  switch_rtp_flag_t D.43152;
  int D.43149;
  char * D.43148;
  switch_rtp_flag_t D.43147;
  switch_rtp_flag_t D.43146;
  switch_payload_t D.43143;
  int32_t D.43139;
  switch_rtp_flag_t D.43138;
  switch_rtp_flag_t D.43137;
  int D.43136;
  int32_t D.43132;
  switch_rtp_flag_t D.43129;
  switch_rtp_flag_t D.43128;
  int D.43127;
  int32_t D.43124;
  int D.43121;
  int32_t D.43118;
  switch_rtp_flag_t D.43115;
  switch_rtp_flag_t D.43114;
  int D.43113;
  uint32_t D.43109;
  int32_t D.43106;
  switch_rtp_flag_t D.43103;
  switch_rtp_flag_t D.43102;
  uint32_t D.43100;
  struct switch_core_media_params_t * D.43099;
  uint8_t D.43097;
  struct switch_rtp_t * D.43096;
  uint32_t D.43093;
  uint8_t D.43090;
  uint32_t D.43087;
  uint32_t D.43084;
  switch_rtp_crypto_key_type_t D.43081;
  uint8_t D.43078;
  struct switch_rtp_t * D.43077;
  switch_channel_state_t D.43076;
  int D.43074;
  struct switch_channel_t * D.43073;

<bb 2>:
  err = 0B;
  # DEBUG val => 0B
  flags = {};
  # DEBUG status => 0
  # DEBUG timer_name => 0B
  if (session_45(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 4731, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_46 = session_45(D)->media_handle;
  # DEBUG smh => smh_46
  if (smh_46 == 0B)
    goto <bb 312>;
  else
    goto <bb 5>;

<bb 5>:
  a_engine_48 = &smh_46->engines;
  # DEBUG a_engine => a_engine_48
  v_engine_49 = &smh_46->engines[1];
  # DEBUG v_engine => v_engine_49
  D.43073_50 = session_45(D)->channel;
  D.43074_51 = switch_channel_check_signal (D.43073_50, 1);
  if (D.43074_51 != 0)
    goto <bb 312>;
  else
    goto <bb 6>;

<bb 6>:
  D.43073_52 = session_45(D)->channel;
  D.43076_53 = switch_channel_get_state (D.43073_52);
  if (D.43076_53 > 9)
    goto <bb 312>;
  else
    goto <bb 7>;

<bb 7>:
  D.43077_54 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43078_55 = switch_rtp_ready (D.43077_54);
  if (D.43078_55 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.43077_56 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_reset_media_timer (D.43077_56);

<bb 9>:
  D.43081_57 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].crypto_type;
  if (D.43081_57 != 9)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.43073_58 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_58, 92, 1);

<bb 11>:
  D.43073_59 = session_45(D)->channel;
  D.43084_60 = switch_channel_test_flag (D.43073_59, 15);
  if (D.43084_60 != 0)
    goto <bb 311> (end);
  else
    goto <bb 12>;

<bb 12>:
  D.43073_62 = session_45(D)->channel;
  D.43087_63 = switch_channel_test_flag (D.43073_62, 103);
  if (D.43087_63 == 0)
    goto <bb 13>;
  else
    goto <bb 16>;

<bb 13>:
  D.43077_64 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43090_65 = switch_rtp_ready (D.43077_64);
  if (D.43090_65 != 0)
    goto <bb 14>;
  else
    goto <bb 16>;

<bb 14>:
  D.43073_66 = session_45(D)->channel;
  D.43093_67 = switch_channel_test_flag (D.43073_66, 98);
  if (D.43093_67 != 0)
    goto <bb 15>;
  else
    goto <bb 311> (end);

<bb 15>:
  D.43096_68 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43097_69 = switch_rtp_ready (D.43096_68);
  if (D.43097_69 == 0)
    goto <bb 203> (video);
  else
    goto <bb 311> (end);

<bb 16>:
  D.43099_71 = smh_46->mparams;
  D.43100_72 = D.43099_71->codec_flags;
  status_73 = switch_core_media_set_codec (session_45(D), 0, D.43100_72);
  # DEBUG status => status_73
  if (status_73 != 0)
    goto <bb 311> (end);
  else
    goto <bb 17>;

<bb 17>:
  switch_core_media_set_video_codec (session_45(D), 0);
  memset (&flags, 0, 156);
  D.43102_74 = flags[13];
  D.43103_75 = D.43102_74 + 1;
  flags[13] = D.43103_75;
  D.43106_76 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43106_76 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;

<bb 18>:
  D.43073_77 = session_45(D)->channel;
  D.43109_78 = switch_channel_test_flag (D.43073_77, 106);
  if (D.43109_78 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  D.43073_79 = session_45(D)->channel;
  val_80 = switch_channel_get_variable_dup (D.43073_79, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_80
  if (val_80 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:
  D.43113_81 = switch_true (val_80);
  if (D.43113_81 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.43114_82 = flags[7];
  D.43115_83 = D.43114_82 + 1;
  flags[7] = D.43115_83;

<bb 22>:
  D.43118_84 = switch_media_handle_test_media_flag (smh_46, 11);
  if (D.43118_84 != 0)
    goto <bb 25>;
  else
    goto <bb 23>;

<bb 23>:
  D.43073_85 = session_45(D)->channel;
  val_86 = switch_channel_get_variable_dup (D.43073_85, "pass_rfc2833", 1, -1);
  # DEBUG val => val_86
  if (val_86 != 0B)
    goto <bb 24>;
  else
    goto <bb 26>;

<bb 24>:
  D.43121_87 = switch_true (val_86);
  if (D.43121_87 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.43073_88 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_88, 100, 1);

<bb 26>:
  D.43124_89 = switch_media_handle_test_media_flag (smh_46, 12);
  if (D.43124_89 != 0)
    goto <bb 29>;
  else
    goto <bb 27>;

<bb 27>:
  D.43073_90 = session_45(D)->channel;
  val_91 = switch_channel_get_variable_dup (D.43073_90, "rtp_autoflush", 1, -1);
  # DEBUG val => val_91
  if (val_91 != 0B)
    goto <bb 28>;
  else
    goto <bb 30>;

<bb 28>:
  D.43127_92 = switch_true (val_91);
  if (D.43127_92 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  D.43128_93 = flags[22];
  D.43129_94 = D.43128_93 + 1;
  flags[22] = D.43129_94;

<bb 30>:
  D.43132_95 = switch_media_handle_test_media_flag (smh_46, 13);
  if (D.43132_95 == 0)
    goto <bb 31>;
  else
    goto <bb 34>;

<bb 31>:
  D.43073_96 = session_45(D)->channel;
  val_97 = switch_channel_get_variable_dup (D.43073_96, "rtp_rewrite_timestamps", 1, -1);
  # DEBUG val => val_97
  if (val_97 == 0B)
    goto <bb 33>;
  else
    goto <bb 32>;

<bb 32>:
  D.43136_98 = switch_true (val_97);
  if (D.43136_98 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.43137_99 = flags[8];
  D.43138_100 = D.43137_99 + 1;
  flags[8] = D.43138_100;

<bb 34>:
  D.43139_101 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43139_101 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

<bb 35>:
  D.43099_102 = smh_46->mparams;
  D.43099_102->cng_pt = 0;
  goto <bb 38>;

<bb 36>:
  D.43099_103 = smh_46->mparams;
  D.43143_104 = D.43099_103->cng_pt;
  if (D.43143_104 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  D.43146_105 = flags[16];
  D.43147_106 = D.43146_105 + 1;
  flags[16] = D.43147_106;

<bb 38>:
  D.43148_107 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.iananame;
  D.43149_108 = strcasecmp (D.43148_107, "L16");
  if (D.43149_108 == 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.43152_109 = flags[14];
  D.43153_110 = D.43152_109 + 1;
  flags[14] = D.43153_110;

<bb 40>:
  D.43152_111 = flags[14];
  if (D.43152_111 != 0)
    goto <bb 41>;
  else
    goto <bb 44>;

<bb 41>:
  D.43073_112 = session_45(D)->channel;
  val_113 = switch_channel_get_variable_dup (D.43073_112, "rtp_disable_byteswap", 1, -1);
  # DEBUG val => val_113
  if (val_113 != 0B)
    goto <bb 42>;
  else
    goto <bb 44>;

<bb 42>:
  D.43158_114 = switch_true (val_113);
  if (D.43158_114 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  flags[14] = 0;

<bb 44>:
  D.43077_115 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  if (D.43077_115 != 0B)
    goto <bb 45>;
  else
    goto <bb 51>;

<bb 45>:
  D.43073_116 = session_45(D)->channel;
  D.43163_117 = switch_channel_test_flag (D.43073_116, 103);
  if (D.43163_117 != 0)
    goto <bb 46>;
  else
    goto <bb 51>;

<bb 46>:
  D.43077_118 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  remote_host_119 = switch_rtp_get_remote_host (D.43077_118);
  # DEBUG remote_host => remote_host_119
  D.43077_120 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  remote_port_121 = switch_rtp_get_remote_port (D.43077_120);
  # DEBUG remote_port => remote_port_121
  D.43167_122 = remote_host_119 != 0B;
  D.43168_123 = remote_port_121 != 0;
  D.43169_124 = D.43167_122 && D.43168_123;
  if (D.43169_124 != 0)
    goto <bb 47>;
  else
    goto <bb 50>;

<bb 47>:
  D.43171_125 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_126 = D.43171_125->remote_sdp_ip;
  D.39348_127 = __builtin_strcmp (remote_host_119, D.43172_126);
  if (D.39348_127 == 0)
    goto <bb 48>;
  else
    goto <bb 50>;

<bb 48>:
  D.43171_128 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_129 = D.43171_128->remote_sdp_port;
  if (D.43174_129 == remote_port_121)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.43073_130 = session_45(D)->channel;
  D.43176_131 = switch_channel_get_name (D.43073_130);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4825, session_45(D), 7, "Audio params are unchanged for %s.\n", D.43176_131);
  goto <bb 203> (video);

<bb 50>:
  D.43073_132 = session_45(D)->channel;
  D.43177_133 = switch_channel_get_name (D.43073_132);
  D.43178_134 = (int) remote_port_121;
  D.43171_135 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_136 = D.43171_135->remote_sdp_ip;
  D.43171_137 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_138 = D.43171_137->remote_sdp_port;
  D.43179_139 = (int) D.43174_138;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4830, session_45(D), 7, "Audio params changed for %s from %s:%d to %s:%d\n", D.43177_133, remote_host_119, D.43178_134, D.43172_136, D.43179_139);
  D.43171_140 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_141 = D.43171_140->remote_sdp_port;
  D.43179_142 = (int) D.43174_141;
  switch_snprintf (&tmp, 50, "%d", D.43179_142);
  D.43073_143 = session_45(D)->channel;
  D.43171_144 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_145 = D.43171_144->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_143, "remote_media_ip", D.43172_145, 1);
  D.43073_146 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_146, "remote_media_port", &tmp, 1);

<bb 51>:
  D.43073_147 = session_45(D)->channel;
  D.43180_148 = switch_channel_test_flag (D.43073_147, 29);
  if (D.43180_148 == 0)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  D.43073_149 = session_45(D)->channel;
  D.43183_150 = switch_channel_get_name (D.43073_149);
  D.43184_151 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43185_152 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43186_153 = (int) D.43185_152;
  D.43171_154 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_155 = D.43171_154->remote_sdp_ip;
  D.43171_156 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_157 = D.43171_156->remote_sdp_port;
  D.43179_158 = (int) D.43174_157;
  D.43171_159 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_160 = D.43171_159->agreed_pt;
  D.43188_161 = (int) D.43187_160;
  D.43189_162 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_163 = D.43189_162 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4841, session_45(D), 7, "AUDIO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43183_150, D.43184_151, D.43186_153, D.43172_155, D.43179_158, D.43188_161, D.43190_163);

<bb 53>:
  D.43185_164 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43186_165 = (int) D.43185_164;
  switch_snprintf (&tmp, 50, "%d", D.43186_165);
  D.43073_166 = session_45(D)->channel;
  D.43184_167 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_166, "local_media_ip", D.43184_167, 1);
  D.43073_168 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_168, "local_media_port", &tmp, 1);
  D.43073_169 = session_45(D)->channel;
  D.43191_170 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_169, "advertised_media_ip", D.43191_170, 1);
  D.43077_171 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  if (D.43077_171 != 0B)
    goto <bb 54>;
  else
    goto <bb 70>;

<bb 54>:
  D.43073_172 = session_45(D)->channel;
  D.43194_173 = switch_channel_test_flag (D.43073_172, 103);
  if (D.43194_173 != 0)
    goto <bb 55>;
  else
    goto <bb 70>;

<bb 55>:
  # DEBUG rport => 0B
  remote_rtcp_port_175 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_175
  if (remote_rtcp_port_175 == 0)
    goto <bb 56>;
  else
    goto <bb 58>;

<bb 56>:
  D.43073_176 = session_45(D)->channel;
  rport_177 = switch_channel_get_variable_dup (D.43073_176, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_177
  if (rport_177 != 0B)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  # DEBUG __nptr => rport_177
  D.48083_1337 = strtol (rport_177, 0B, 10);
  remote_rtcp_port_179 = (switch_port_t) D.48083_1337;
  # DEBUG remote_rtcp_port => remote_rtcp_port_179

<bb 58>:
  # remote_rtcp_port_7 = PHI <remote_rtcp_port_175(55), remote_rtcp_port_175(56), remote_rtcp_port_179(57)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_7
  D.43077_180 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43171_181 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_182 = D.43171_181->remote_sdp_ip;
  D.43171_183 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_184 = D.43171_183->remote_sdp_port;
  D.43202_185 = switch_rtp_set_remote_address (D.43077_180, D.43172_182, D.43174_184, remote_rtcp_port_7, 1, &err);
  if (D.43202_185 != 0)
    goto <bb 59>;
  else
    goto <bb 60>;

<bb 59>:
  err.45_186 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4868, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", err.45_186);
  goto <bb 68>;

<bb 60>:
  D.43171_187 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_188 = D.43171_187->remote_sdp_ip;
  D.43171_189 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_190 = D.43171_189->remote_sdp_port;
  D.43179_191 = (int) D.43174_190;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4870, session_45(D), 7, "AUDIO RTP CHANGING DEST TO: [%s:%d]\n", D.43172_188, D.43179_191);
  D.43073_192 = session_45(D)->channel;
  D.43207_193 = switch_channel_test_flag (D.43073_192, 96);
  if (D.43207_193 != 0)
    goto <bb 61>;
  else
    goto <bb 63>;

<bb 61>:
  # DEBUG __s2_len => 7
  D.43171_235 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_236 = D.43171_235->remote_sdp_ip;
  __result_237 = __builtin_strcmp (D.43172_236, "0.0.0.0");
  if (__result_237 != 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  switch_core_media_toggle_hold (session_45(D), 0);

<bb 63>:
  D.43254_239 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43254_239 == 0)
    goto <bb 64>;
  else
    goto <bb 68>;

<bb 64>:
  D.43073_240 = session_45(D)->channel;
  val_241 = switch_channel_get_variable_dup (D.43073_240, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_241
  if (val_241 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

<bb 65>:
  D.43258_242 = switch_true (val_241);
  if (D.43258_242 == 0)
    goto <bb 66>;
  else
    goto <bb 68>;

<bb 66>:
  D.43073_243 = session_45(D)->channel;
  D.43259_244 = switch_channel_test_flag (D.43073_243, 106);
  if (D.43259_244 == 0)
    goto <bb 67>;
  else
    goto <bb 68>;

<bb 67>:
  D.43077_245 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_set_flag (D.43077_245, 7);

<bb 68>:
  D.43262_246 = session_45(D) != 0B;
  D.43263_247 = a_engine_48 != 0B;
  D.43264_248 = D.43262_246 && D.43263_247;
  if (D.43264_248 != 0)
    goto <bb 69>;
  else
    goto <bb 203> (video);

<bb 69>:
  check_dtls_reinvite (session_45(D), a_engine_48);
  goto <bb 203> (video);

<bb 70>:
  D.43073_249 = session_45(D)->channel;
  D.43267_250 = switch_channel_test_flag (D.43073_249, 29);
  if (D.43267_250 != 0)
    goto <bb 71>;
  else
    goto <bb 78>;

<bb 71>:
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43102_251 = flags[13];
  D.43103_252 = D.43102_251 + 1;
  flags[13] = D.43103_252;
  D.43270_253 = flags[19];
  D.43271_254 = D.43270_253 + 1;
  flags[19] = D.43271_254;
  D.43274_255 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43274_255 == 0)
    goto <bb 72>;
  else
    goto <bb 76>;

<bb 72>:
  D.43073_256 = session_45(D)->channel;
  D.43277_257 = switch_channel_test_flag (D.43073_256, 106);
  if (D.43277_257 == 0)
    goto <bb 73>;
  else
    goto <bb 76>;

<bb 73>:
  D.43073_258 = session_45(D)->channel;
  val_259 = switch_channel_get_variable_dup (D.43073_258, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_259
  if (val_259 == 0B)
    goto <bb 75>;
  else
    goto <bb 74>;

<bb 74>:
  D.43281_260 = switch_true (val_259);
  if (D.43281_260 == 0)
    goto <bb 75>;
  else
    goto <bb 76>;

<bb 75>:
  D.43114_261 = flags[7];
  D.43115_262 = D.43114_261 + 1;
  flags[7] = D.43115_262;

<bb 76>:
  # DEBUG timer_name => 0B
  D.43073_264 = session_45(D)->channel;
  D.43282_265 = switch_channel_get_name (D.43073_264);
  D.43171_271 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_272 = D.43171_271->remote_sdp_ip;
  D.43171_273 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_274 = D.43171_273->remote_sdp_port;
  D.43179_275 = (int) D.43174_274;
  D.43171_276 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_277 = D.43171_276->agreed_pt;
  D.43188_278 = (int) D.43187_277;
  D.43189_279 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_280 = D.43189_279 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4906, session_45(D), 7, "PROXY AUDIO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43282_265, D.43172_272, D.43179_275, D.43172_272, D.43179_275, D.43188_278, D.43190_280);
  D.43077_281 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43283_282 = switch_rtp_ready (D.43077_281);
  if (D.43283_282 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;

<bb 77>:
  D.43077_283 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43171_284 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_285 = D.43171_284->agreed_pt;
  switch_rtp_set_default_payload (D.43077_283, D.43187_285);
  goto <bb 80>;

<bb 78>:
  D.43099_286 = smh_46->mparams;
  timer_name_287 = D.43099_286->timer_name;
  # DEBUG timer_name => timer_name_287
  D.43073_288 = session_45(D)->channel;
  var_289 = switch_channel_get_variable_dup (D.43073_288, "rtp_timer_name", 1, -1);
  # DEBUG var => var_289
  if (var_289 != 0B)
    goto <bb 79>;
  else
    goto <bb 80>;

<bb 79>:
  # DEBUG timer_name => var_289

<bb 80>:
  # timer_name_6 = PHI <0B(77), timer_name_287(78), var_289(79), 0B(76)>
  # DEBUG timer_name => timer_name_6
  D.43073_291 = session_45(D)->channel;
  D.43291_292 = switch_channel_check_signal (D.43073_291, 1);
  if (D.43291_292 != 0)
    goto <bb 82>;
  else
    goto <bb 81>;

<bb 81>:
  D.43073_293 = session_45(D)->channel;
  D.43293_294 = switch_channel_get_state (D.43073_293);
  if (D.43293_294 <= 9)
    goto <bb 82>;
  else
    goto <bb 84>;

<bb 82>:
  D.43184_295 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43185_296 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_port;
  D.43171_297 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_298 = D.43171_297->remote_sdp_ip;
  D.43171_299 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_300 = D.43171_299->remote_sdp_port;
  D.43171_301 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_302 = D.43171_301->agreed_pt;
  D.43294_303 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43171_304 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43295_305 = D.43171_304->codec_ms;
  D.43296_306 = D.43295_305 * 1000;
  D.43297_307 = switch_core_session_get_pool (session_45(D));
  D.43298_308 = switch_rtp_new (D.43184_295, D.43185_296, D.43172_298, D.43174_300, D.43187_302, D.43294_303, D.43296_306, &flags, timer_name_6, &err, D.43297_307);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session = D.43298_308;
  D.43077_309 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43299_310 = switch_rtp_ready (D.43077_309);
  if (D.43299_310 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;

<bb 83>:
  D.43077_311 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43302_312 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].payload_map;
  switch_rtp_set_payload_map (D.43077_311, D.43302_312);

<bb 84>:
  D.43077_313 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43303_314 = switch_rtp_ready (D.43077_313);
  if (D.43303_314 != 0)
    goto <bb 85>;
  else
    goto <bb 306>;

<bb 85>:
  D.43099_315 = smh_46->mparams;
  D.43306_316 = D.43099_315->vflags;
  D.43307_317 = (uint8_t) D.43306_316;
  vad_in_318 = D.43307_317 & 1;
  # DEBUG vad_in => vad_in_318
  D.43099_319 = smh_46->mparams;
  D.43306_320 = D.43099_319->vflags;
  D.43307_321 = (uint8_t) D.43306_320;
  vad_out_322 = D.43307_321 & 2;
  # DEBUG vad_out => vad_out_322
  D.43073_323 = session_45(D)->channel;
  D.43308_324 = switch_channel_direction (D.43073_323);
  inb_325 = D.43308_324 == 0;
  # DEBUG inb => inb_325
  D.43309_326 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_mutex;
  D.43310_327 = switch_core_session_get_pool (session_45(D));
  switch_mutex_init (D.43309_326, 1, D.43310_327);
  D.43073_328 = session_45(D)->channel;
  ssrc_329 = switch_channel_get_variable_dup (D.43073_328, "rtp_use_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_329
  if (ssrc_329 != 0B)
    goto <bb 86>;
  else
    goto <bb 87>;

<bb 86>:
  ssrc_ul_330 = strtoul (ssrc_329, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_330
  D.43077_331 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_set_ssrc (D.43077_331, ssrc_ul_330);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = ssrc_ul_330;
  goto <bb 88>;

<bb 87>:
  D.43077_332 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43314_333 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
  switch_rtp_set_ssrc (D.43077_332, D.43314_333);

<bb 88>:
  D.43315_334 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
  if (D.43315_334 != 0)
    goto <bb 89>;
  else
    goto <bb 90>;

<bb 89>:
  D.43077_335 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43315_336 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43077_335, D.43315_336);

<bb 90>:
  D.43073_337 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_337, 36, 1);
  D.43073_338 = session_45(D)->channel;
  D.43171_339 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43187_340 = D.43171_339->agreed_pt;
  D.43188_341 = (int) D.43187_340;
  switch_channel_set_variable_printf (D.43073_338, "rtp_use_pt", "%d", D.43188_341);
  D.43073_342 = session_45(D)->channel;
  val_343 = switch_channel_get_variable_dup (D.43073_342, "rtp_enable_vad_in", 1, -1);
  # DEBUG val => val_343
  if (val_343 != 0B)
    goto <bb 91>;
  else
    goto <bb 93>;

<bb 91>:
  D.43320_344 = switch_true (val_343);
  if (D.43320_344 != 0)
    goto <bb 92>;
  else
    goto <bb 93>;

<bb 92>:
  # DEBUG vad_in => 1

<bb 93>:
  # vad_in_9 = PHI <vad_in_318(90), vad_in_318(91), 1(92)>
  # DEBUG vad_in => vad_in_9
  D.43073_346 = session_45(D)->channel;
  val_347 = switch_channel_get_variable_dup (D.43073_346, "rtp_enable_vad_out", 1, -1);
  # DEBUG val => val_347
  if (val_347 != 0B)
    goto <bb 94>;
  else
    goto <bb 96>;

<bb 94>:
  D.43325_348 = switch_true (val_347);
  if (D.43325_348 != 0)
    goto <bb 95>;
  else
    goto <bb 96>;

<bb 95>:
  # DEBUG vad_out => 1

<bb 96>:
  # vad_out_11 = PHI <vad_out_322(93), vad_out_322(94), 1(95)>
  # DEBUG vad_out => vad_out_11
  D.43073_350 = session_45(D)->channel;
  val_351 = switch_channel_get_variable_dup (D.43073_350, "rtp_disable_vad_in", 1, -1);
  # DEBUG val => val_351
  if (val_351 != 0B)
    goto <bb 97>;
  else
    goto <bb 99>;

<bb 97>:
  D.43330_352 = switch_true (val_351);
  if (D.43330_352 != 0)
    goto <bb 98>;
  else
    goto <bb 99>;

<bb 98>:
  # DEBUG vad_in => 0

<bb 99>:
  # vad_in_10 = PHI <vad_in_9(96), vad_in_9(97), 0(98)>
  # DEBUG vad_in => vad_in_10
  D.43073_354 = session_45(D)->channel;
  val_355 = switch_channel_get_variable_dup (D.43073_354, "rtp_disable_vad_out", 1, -1);
  # DEBUG val => val_355
  if (val_355 != 0B)
    goto <bb 100>;
  else
    goto <bb 102>;

<bb 100>:
  D.43335_356 = switch_true (val_355);
  if (D.43335_356 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;

<bb 101>:
  # DEBUG vad_out => 0

<bb 102>:
  # vad_out_12 = PHI <vad_out_11(99), vad_out_11(100), 0(101)>
  # DEBUG vad_out => vad_out_12
  D.43077_358 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43338_359 = switch_rtp_get_ssrc (D.43077_358);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc = D.43338_359;
  D.43073_360 = session_45(D)->channel;
  D.43314_361 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ssrc;
  switch_channel_set_variable_printf (D.43073_360, "rtp_use_ssrc", "%u", D.43314_361);
  D.43099_362 = smh_46->mparams;
  D.43339_363 = D.43099_362->auto_rtp_bugs;
  D.43340_364 = D.43339_363 & 4;
  if (D.43340_364 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;

<bb 103>:
  D.43343_365 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  D.43344_366 = D.43343_365 | 4;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs = D.43344_366;

<bb 104>:
  D.43073_367 = session_45(D)->channel;
  val_368 = switch_channel_get_variable_dup (D.43073_367, "rtp_manual_rtp_bugs", 1, -1);
  # DEBUG val => val_368
  if (val_368 != 0B)
    goto <bb 105>;
  else
    goto <bb 106>;

<bb 105>:
  D.43347_369 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43347_369, val_368);

<bb 106>:
  D.43077_370 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43343_371 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_bugs;
  D.43099_372 = smh_46->mparams;
  D.43348_373 = D.43099_372->manual_rtp_bugs;
  D.43349_374 = D.43343_371 | D.43348_373;
  switch_rtp_intentional_bugs (D.43077_370, D.43349_374);
  D.43352_375 = vad_in_10 != 0;
  D.43353_376 = inb_325 != 0;
  D.43354_377 = D.43352_375 && D.43353_376;
  if (D.43354_377 != 0)
    goto <bb 108>;
  else
    goto <bb 107>;

<bb 107>:
  D.43356_378 = vad_out_12 != 0;
  D.43357_379 = inb_325 == 0;
  D.43358_380 = D.43356_378 && D.43357_379;
  if (D.43358_380 != 0)
    goto <bb 108>;
  else
    goto <bb 113>;

<bb 108>:
  D.43077_381 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43359_382 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec;
  switch_rtp_enable_vad (D.43077_381, session_45(D), D.43359_382, 7);
  D.43360_383 = switch_core_session_get_channel (session_45(D));
  D.43361_384 = switch_channel_get_name (D.43360_383);
  if (vad_in_10 != 0)
    goto <bb 110>;
  else
    goto <bb 109>;

<bb 109>:

<bb 110>:
  # iftmp.47_29 = PHI <"in"(108), ""(109)>
  if (vad_out_12 != 0)
    goto <bb 112>;
  else
    goto <bb 111>;

<bb 111>:

<bb 112>:
  # iftmp.48_30 = PHI <"out"(110), ""(111)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5001, session_45(D), 7, "AUDIO RTP Engage VAD for %s ( %s %s )\n", D.43361_384, iftmp.47_29, iftmp.48_30);

<bb 113>:
  D.43370_389 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43371_390 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_389][0].ready;
  if (D.43371_390 != 0)
    goto <bb 114>;
  else
    goto <bb 117>;

<bb 114>:
  gen_ice (session_45(D), 0, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5010, session_45(D), 6, "Activating Audio ICE\n");
  D.43077_391 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43374_392 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
  D.43375_393 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
  D.43376_394 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
  D.43377_395 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
  D.43379_396 = switch_ice_direction (session_45(D));
  if (D.43379_396 == 1)
    goto <bb 116>;
  else
    goto <bb 115>;

<bb 115>:

<bb 116>:
  # iftmp.49_31 = PHI <2(114), 6(115)>
  D.43383_399 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
  switch_rtp_activate_ice (D.43077_391, D.43374_392, D.43375_393, D.43376_394, D.43377_395, 0, iftmp.49_31, D.43383_399);

<bb 117>:
  D.43073_400 = session_45(D)->channel;
  val_401 = switch_channel_get_variable_dup (D.43073_400, "rtcp_audio_interval_msec", 1, -1);
  # DEBUG val => val_401
  if (val_401 != 0B)
    goto <bb 119>;
  else
    goto <bb 118>;

<bb 118>:
  D.43099_402 = smh_46->mparams;
  val_403 = D.43099_402->rtcp_audio_interval_msec;
  # DEBUG val => val_403
  if (val_403 != 0B)
    goto <bb 119>;
  else
    goto <bb 134>;

<bb 119>:
  # val_1 = PHI <val_401(117), val_403(118)>
  # DEBUG val => val_1
  D.43073_404 = session_45(D)->channel;
  rport_405 = switch_channel_get_variable_dup (D.43073_404, "rtp_remote_audio_rtcp_port", 1, -1);
  # DEBUG rport => rport_405
  remote_rtcp_port_406 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_406
  D.43387_407 = remote_rtcp_port_406 == 0;
  D.43388_408 = rport_405 != 0B;
  D.43389_409 = D.43387_407 && D.43388_408;
  if (D.43389_409 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

<bb 120>:
  # DEBUG __nptr => rport_405
  D.48086_1338 = strtol (rport_405, 0B, 10);
  remote_rtcp_port_411 = (switch_port_t) D.48086_1338;
  # DEBUG remote_rtcp_port => remote_rtcp_port_411

<bb 121>:
  # remote_rtcp_port_13 = PHI <remote_rtcp_port_406(119), remote_rtcp_port_411(120)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_13
  D.43393_412 = strcasecmp (val_1, "passthru");
  if (D.43393_412 == 0)
    goto <bb 122>;
  else
    goto <bb 123>;

<bb 122>:
  D.43396_413 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5043, session_45(D), 6, "Activating RTCP PASSTHRU PORT %d\n", D.43396_413);
  D.43077_414 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43397_415 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  D.43398_416 = D.43397_415 > 0;
  switch_rtp_activate_rtcp (D.43077_414, -1, remote_rtcp_port_13, D.43398_416);
  goto <bb 126>;

<bb 123>:
  # DEBUG __nptr => val_1
  interval_1339 = strtol (val_1, 0B, 10);
  # DEBUG interval => NULL
  interval.50_418 = (unsigned int) interval_1339;
  D.43401_419 = interval.50_418 + 4294967196;
  if (D.43401_419 > 499900)
    goto <bb 124>;
  else
    goto <bb 125>;

<bb 124>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5048, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1339);
  # DEBUG interval => 10000

<bb 125>:
  # interval_14 = PHI <interval_1339(123), 10000(124)>
  # DEBUG interval => interval_14
  D.43396_421 = (int) remote_rtcp_port_13;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5053, session_45(D), 6, "Activating RTCP PORT %d\n", D.43396_421);
  D.43077_422 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43397_423 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  D.43398_424 = D.43397_423 > 0;
  switch_rtp_activate_rtcp (D.43077_422, interval_14, remote_rtcp_port_13, D.43398_424);

<bb 126>:
  D.43404_425 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43405_426 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_425][1].ready;
  if (D.43405_426 != 0)
    goto <bb 127>;
  else
    goto <bb 134>;

<bb 127>:
  D.43397_427 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_427 > 0)
    goto <bb 128>;
  else
    goto <bb 131>;

<bb 128>:
  D.43404_428 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43411_429 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_428][1].con_addr;
  D.43370_430 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43412_431 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_430][0].con_addr;
  D.39377_432 = __builtin_strcmp (D.43411_429, D.43412_431);
  if (D.39377_432 == 0)
    goto <bb 129>;
  else
    goto <bb 131>;

<bb 129>:
  D.43404_433 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[1];
  D.43414_434 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43404_433][1].con_port;
  D.43370_435 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.chosen[0];
  D.43415_436 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.cands[D.43370_435][0].con_port;
  if (D.43414_434 == D.43415_436)
    goto <bb 130>;
  else
    goto <bb 131>;

<bb 130>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5061, session_45(D), 6, "Skipping RTCP ICE (Same as RTP)\n");
  goto <bb 134>;

<bb 131>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5063, session_45(D), 6, "Activating RTCP ICE\n");
  D.43077_437 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43374_438 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.ufrag;
  D.43375_439 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.ufrag;
  D.43376_440 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_out.pwd;
  D.43377_441 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in.pwd;
  D.43418_442 = switch_ice_direction (session_45(D));
  if (D.43418_442 == 1)
    goto <bb 133>;
  else
    goto <bb 132>;

<bb 132>:

<bb 133>:
  # iftmp.51_32 = PHI <2(131), 6(132)>
  D.43383_445 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].ice_in;
  switch_rtp_activate_ice (D.43077_437, D.43374_438, D.43375_439, D.43376_440, D.43377_441, 1, iftmp.51_32, D.43383_445);

<bb 134>:
  D.43422_446 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint.str;
  # DEBUG s => D.43422_446
  if (D.43422_446 == 0B)
    goto <bb 137>;
  else
    goto <bb 135>;

<bb 135>:
  D.48093_1340 = MEM[(const char *)smh_46 + 10984B];
  if (D.48093_1340 == 0)
    goto <bb 137>;
  else
    goto <bb 136>;

<bb 136>:

<bb 137>:
  # D.48092_1341 = PHI <1(134), 1(135), 0(136)>
  if (D.48092_1341 == 0)
    goto <bb 138>;
  else
    goto <bb 152>;

<bb 138>:
  D.43426_448 = switch_rtp_has_dtls ();
  if (D.43426_448 != 0)
    goto <bb 139>;
  else
    goto <bb 152>;

<bb 139>:
  D.43429_449 = smh_46->session;
  D.43430_450 = dtls_ok (D.43429_449);
  if (D.43430_450 != 0)
    goto <bb 140>;
  else
    goto <bb 152>;

<bb 140>:
  D.43429_451 = smh_46->session;
  D.43434_452 = D.43429_451->channel;
  D.43435_453 = switch_channel_direction (D.43434_452);
  if (D.43435_453 == 0)
    goto <bb 142>;
  else
    goto <bb 141>;

<bb 141>:

<bb 142>:
  # dtype_33 = PHI <1(140), 2(141)>
  # DEBUG dtype => dtype_33
  D.43429_457 = smh_46->session;
  D.43434_458 = D.43429_457->channel;
  D.43439_459 = switch_channel_test_flag (D.43434_458, 112);
  if (D.43439_459 != 0)
    goto <bb 143>;
  else
    goto <bb 146>;

<bb 143>:
  if (dtype_33 == 1)
    goto <bb 145>;
  else
    goto <bb 144>;

<bb 144>:

<bb 145>:
  # dtype_34 = PHI <2(143), 1(144)>
  # DEBUG dtype => dtype_34

<bb 146>:
  # dtype_16 = PHI <dtype_33(142), dtype_34(145)>
  # DEBUG dtype => dtype_16
  # DEBUG xtype => 4
  D.43397_464 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_464 > 0)
    goto <bb 147>;
  else
    goto <bb 149>;

<bb 147>:
  D.43099_465 = smh_46->mparams;
  D.43448_466 = D.43099_465->rtcp_audio_interval_msec;
  if (D.43448_466 != 0B)
    goto <bb 148>;
  else
    goto <bb 149>;

<bb 148>:
  # DEBUG xtype => 12

<bb 149>:
  # xtype_15 = PHI <4(146), 4(147), 12(148)>
  # DEBUG xtype => xtype_15
  D.43077_468 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43451_469 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
  D.43452_470 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
  D.43453_471 = dtype_16 | xtype_15;
  switch_rtp_add_dtls (D.43077_468, D.43451_469, D.43452_470, D.43453_471);
  D.43397_472 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtcp_mux;
  if (D.43397_472 <= 0)
    goto <bb 150>;
  else
    goto <bb 152>;

<bb 150>:
  D.43099_473 = smh_46->mparams;
  D.43448_474 = D.43099_473->rtcp_audio_interval_msec;
  if (D.43448_474 != 0B)
    goto <bb 151>;
  else
    goto <bb 152>;

<bb 151>:
  # DEBUG xtype => 8
  D.43077_476 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43451_477 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_dtls_fingerprint;
  D.43452_478 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].remote_dtls_fingerprint;
  D.43453_479 = dtype_16 | 8;
  switch_rtp_add_dtls (D.43077_476, D.43451_477, D.43452_478, D.43453_479);

<bb 152>:
  D.43073_480 = session_45(D)->channel;
  val_481 = switch_channel_get_variable_dup (D.43073_480, "jitterbuffer_msec", 1, -1);
  # DEBUG val => val_481
  if (val_481 != 0B)
    goto <bb 154>;
  else
    goto <bb 153>;

<bb 153>:
  D.43099_482 = smh_46->mparams;
  val_483 = D.43099_482->jb_msec;
  # DEBUG val => val_483
  if (val_483 != 0B)
    goto <bb 154>;
  else
    goto <bb 171>;

<bb 154>:
  # val_2 = PHI <val_481(152), val_483(153)>
  # DEBUG val => val_2
  # DEBUG __nptr => val_2
  jb_msec_1342 = strtol (val_2, 0B, 10);
  # DEBUG jb_msec => NULL
  # DEBUG maxlen => 0
  # DEBUG max_drift => 0
  p_487 = __builtin_strchr (val_2, 58);
  # DEBUG p => p_487
  if (p_487 != 0B)
    goto <bb 155>;
  else
    goto <bb 157>;

<bb 155>:
  p_488 = p_487 + 1;
  # DEBUG p => p_488
  # DEBUG __nptr => p_488
  maxlen_1343 = strtol (p_488, 0B, 10);
  # DEBUG maxlen => NULL
  q_490 = __builtin_strchr (p_488, 58);
  # DEBUG q => q_490
  if (q_490 != 0B)
    goto <bb 156>;
  else
    goto <bb 157>;

<bb 156>:
  q_491 = q_490 + 1;
  # DEBUG q => q_491
  # DEBUG __nptr => q_491
  D.48102_1344 = strtol (q_491, 0B, 10);
  max_drift_493 = ABS_EXPR <D.48102_1344>;
  # DEBUG max_drift => max_drift_493

<bb 157>:
  # maxlen_18 = PHI <0(154), maxlen_1343(155), maxlen_1343(156)>
  # max_drift_19 = PHI <0(154), 0(155), max_drift_493(156)>
  # DEBUG max_drift => max_drift_19
  # DEBUG maxlen => maxlen_18
  jb_msec.54_494 = (unsigned int) jb_msec_1342;
  D.43467_495 = jb_msec.54_494 + 9;
  if (D.43467_495 <= 8)
    goto <bb 158>;
  else
    goto <bb 159>;

<bb 158>:
  D.43470_496 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_codec.implementation;
  D.43471_497 = D.43470_496->microseconds_per_packet;
  D.43472_498 = D.43471_497 / 1000;
  D.43473_499 = ABS_EXPR <jb_msec_1342>;
  jb_msec_500 = D.43472_498 * D.43473_499;
  # DEBUG jb_msec => jb_msec_500

<bb 159>:
  # jb_msec_17 = PHI <jb_msec_1342(157), jb_msec_500(158)>
  # DEBUG jb_msec => jb_msec_17
  jb_msec.54_501 = (unsigned int) jb_msec_17;
  D.43474_502 = jb_msec.54_501 + 4294967276;
  if (D.43474_502 > 9980)
    goto <bb 160>;
  else
    goto <bb 161>;

<bb 160>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5125, session_45(D), 3, "Invalid Jitterbuffer spec [%d] must be between 20 and 10000\n", jb_msec_17);
  goto <bb 171>;

<bb 161>:
  # DEBUG maxqlen => 50
  D.43189_504 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_505 = D.43189_504 / 1000;
  qlen_506 = jb_msec_17 / D.43190_505;
  # DEBUG qlen => qlen_506
  if (qlen_506 <= 0)
    goto <bb 162>;
  else
    goto <bb 163>;

<bb 162>:
  # DEBUG qlen => 3

<bb 163>:
  # qlen_20 = PHI <qlen_506(161), 3(162)>
  # DEBUG qlen => qlen_20
  if (maxlen_18 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;

<bb 164>:
  D.43189_508 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_509 = D.43189_508 / 1000;
  maxqlen_510 = maxlen_18 / D.43190_509;
  # DEBUG maxqlen => maxqlen_510

<bb 165>:
  # maxqlen_21 = PHI <50(163), maxqlen_510(164)>
  # DEBUG maxqlen => maxqlen_21
  if (maxqlen_21 < qlen_20)
    goto <bb 166>;
  else
    goto <bb 167>;

<bb 166>:
  maxqlen_511 = qlen_20 * 5;
  # DEBUG maxqlen => maxqlen_511

<bb 167>:
  # maxqlen_22 = PHI <maxqlen_21(165), maxqlen_511(166)>
  # DEBUG maxqlen => maxqlen_22
  D.43077_512 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  qlen.55_513 = (uint32_t) qlen_20;
  maxqlen.56_514 = (uint32_t) maxqlen_22;
  D.43294_515 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43486_516 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  max_drift.57_517 = (uint32_t) max_drift_19;
  D.43488_518 = switch_rtp_activate_jitter_buffer (D.43077_512, qlen.55_513, maxqlen.56_514, D.43294_515, D.43486_516, max_drift.57_517);
  if (D.43488_518 == 0)
    goto <bb 168>;
  else
    goto <bb 170>;

<bb 168>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5146, session_45(D), 7, "Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);
  D.43073_519 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_519, 57, 1);
  D.43073_520 = session_45(D)->channel;
  D.43491_521 = switch_channel_get_variable_dup (D.43073_520, "rtp_jitter_buffer_plc", 1, -1);
  D.43492_522 = switch_false (D.43491_521);
  if (D.43492_522 == 0)
    goto <bb 169>;
  else
    goto <bb 171>;

<bb 169>:
  D.43073_523 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_523, 58, 1);
  goto <bb 171>;

<bb 170>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5153, session_45(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", jb_msec_17, qlen_20);

<bb 171>:
  D.43073_524 = session_45(D)->channel;
  val_525 = switch_channel_get_variable_dup (D.43073_524, "rtp_timeout_sec", 1, -1);
  # DEBUG val => val_525
  if (val_525 != 0B)
    goto <bb 172>;
  else
    goto <bb 174>;

<bb 172>:
  # DEBUG __nptr => val_525
  v_1345 = strtol (val_525, 0B, 10);
  # DEBUG v => NULL
  if (v_1345 >= 0)
    goto <bb 173>;
  else
    goto <bb 174>;

<bb 173>:
  D.43099_527 = smh_46->mparams;
  v.58_528 = (uint32_t) v_1345;
  D.43099_527->rtp_timeout_sec = v.58_528;

<bb 174>:
  D.43073_529 = session_45(D)->channel;
  val_530 = switch_channel_get_variable_dup (D.43073_529, "rtp_hold_timeout_sec", 1, -1);
  # DEBUG val => val_530
  if (val_530 != 0B)
    goto <bb 175>;
  else
    goto <bb 177>;

<bb 175>:
  # DEBUG __nptr => val_530
  v_1346 = strtol (val_530, 0B, 10);
  # DEBUG v => NULL
  if (v_1346 >= 0)
    goto <bb 176>;
  else
    goto <bb 177>;

<bb 176>:
  D.43099_532 = smh_46->mparams;
  v.59_533 = (uint32_t) v_1346;
  D.43099_532->rtp_hold_timeout_sec = v.59_533;

<bb 177>:
  D.43099_534 = smh_46->mparams;
  D.43506_535 = D.43099_534->rtp_timeout_sec;
  if (D.43506_535 != 0)
    goto <bb 178>;
  else
    goto <bb 180>;

<bb 178>:
  D.43486_536 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  D.43099_537 = smh_46->mparams;
  D.43506_538 = D.43099_537->rtp_timeout_sec;
  D.43509_539 = D.43486_536 * D.43506_538;
  D.43294_540 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43510_541 = D.43509_539 / D.43294_540;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets = D.43510_541;
  D.43077_542 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43511_543 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_packets;
  switch_rtp_set_max_missed_packets (D.43077_542, D.43511_543);
  D.43099_544 = smh_46->mparams;
  D.43512_545 = D.43099_544->rtp_hold_timeout_sec;
  if (D.43512_545 == 0)
    goto <bb 179>;
  else
    goto <bb 180>;

<bb 179>:
  D.43099_547 = smh_46->mparams;
  D.43506_548 = D.43099_547->rtp_timeout_sec;
  D.43515_549 = D.43506_548 * 10;
  D.43099_547->rtp_hold_timeout_sec = D.43515_549;

<bb 180>:
  D.43099_550 = smh_46->mparams;
  D.43512_551 = D.43099_550->rtp_hold_timeout_sec;
  if (D.43512_551 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;

<bb 181>:
  D.43486_552 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_second;
  D.43099_553 = smh_46->mparams;
  D.43512_554 = D.43099_553->rtp_hold_timeout_sec;
  D.43518_555 = D.43486_552 * D.43512_554;
  D.43294_556 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.samples_per_packet;
  D.43519_557 = D.43518_555 / D.43294_556;
  MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].max_missed_hold_packets = D.43519_557;

<bb 182>:
  D.43099_558 = smh_46->mparams;
  D.43520_559 = D.43099_558->te;
  if (D.43520_559 != 0)
    goto <bb 183>;
  else
    goto <bb 184>;

<bb 183>:
  D.43099_560 = smh_46->mparams;
  D.43520_561 = D.43099_560->te;
  D.43523_562 = (int) D.43520_561;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5188, session_45(D), 7, "Set 2833 dtmf send payload to %u\n", D.43523_562);
  D.43077_563 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_564 = smh_46->mparams;
  D.43520_565 = D.43099_564->te;
  switch_rtp_set_telephony_event (D.43077_563, D.43520_565);
  D.43073_566 = session_45(D)->channel;
  D.43099_567 = smh_46->mparams;
  D.43520_568 = D.43099_567->te;
  D.43523_569 = (int) D.43520_568;
  switch_channel_set_variable_printf (D.43073_566, "rtp_2833_send_payload", "%d", D.43523_569);

<bb 184>:
  D.43099_570 = smh_46->mparams;
  D.43524_571 = D.43099_570->recv_te;
  if (D.43524_571 != 0)
    goto <bb 185>;
  else
    goto <bb 186>;

<bb 185>:
  D.43099_572 = smh_46->mparams;
  D.43524_573 = D.43099_572->recv_te;
  D.43527_574 = (int) D.43524_573;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5194, session_45(D), 7, "Set 2833 dtmf receive payload to %u\n", D.43527_574);
  D.43077_575 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_576 = smh_46->mparams;
  D.43524_577 = D.43099_576->recv_te;
  switch_rtp_set_telephony_recv_event (D.43077_575, D.43524_577);
  D.43073_578 = session_45(D)->channel;
  D.43099_579 = smh_46->mparams;
  D.43524_580 = D.43099_579->recv_te;
  D.43527_581 = (int) D.43524_580;
  switch_channel_set_variable_printf (D.43073_578, "rtp_2833_recv_payload", "%d", D.43527_581);

<bb 186>:
  D.43531_582 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43531_582 != 0)
    goto <bb 191>;
  else
    goto <bb 187>;

<bb 187>:
  D.43073_583 = session_45(D)->channel;
  val_584 = switch_channel_get_variable_dup (D.43073_583, "supress_cng", 1, -1);
  # DEBUG val => val_584
  if (val_584 != 0B)
    goto <bb 188>;
  else
    goto <bb 189>;

<bb 188>:
  D.43534_585 = switch_true (val_584);
  if (D.43534_585 != 0)
    goto <bb 191>;
  else
    goto <bb 189>;

<bb 189>:
  D.43073_586 = session_45(D)->channel;
  val_587 = switch_channel_get_variable_dup (D.43073_586, "suppress_cng", 1, -1);
  # DEBUG val => val_587
  if (val_587 != 0B)
    goto <bb 190>;
  else
    goto <bb 192>;

<bb 190>:
  D.43536_588 = switch_true (val_587);
  if (D.43536_588 != 0)
    goto <bb 191>;
  else
    goto <bb 192>;

<bb 191>:
  D.43099_589 = smh_46->mparams;
  D.43099_589->cng_pt = 0;

<bb 192>:
  D.43073_590 = session_45(D)->channel;
  val_591 = switch_channel_get_variable_dup (D.43073_590, "rtp_digit_delay", 1, -1);
  # DEBUG val => val_591
  if (val_591 != 0B)
    goto <bb 193>;
  else
    goto <bb 196>;

<bb 193>:
  # DEBUG __nptr => val_591
  delayi_1347 = strtol (val_591, 0B, 10);
  # DEBUG delayi => NULL
  if (delayi_1347 < 0)
    goto <bb 194>;
  else
    goto <bb 195>;

<bb 194>:
  # DEBUG delayi => 0

<bb 195>:
  # delayi_23 = PHI <delayi_1347(193), 0(194)>
  # DEBUG delayi => delayi_23
  D.43099_594 = smh_46->mparams;
  delayi.60_595 = (unsigned int) delayi_23;
  D.43099_594->dtmf_delay = delayi.60_595;

<bb 196>:
  D.43099_596 = smh_46->mparams;
  D.43542_597 = D.43099_596->dtmf_delay;
  if (D.43542_597 != 0)
    goto <bb 197>;
  else
    goto <bb 198>;

<bb 197>:
  D.43077_598 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_599 = smh_46->mparams;
  D.43542_600 = D.43099_599->dtmf_delay;
  switch_rtp_set_interdigit_delay (D.43077_598, D.43542_600);
  D.43073_601 = session_45(D)->channel;
  D.43545_602 = switch_channel_get_name (D.43073_601);
  D.43099_603 = smh_46->mparams;
  D.43542_604 = D.43099_603->dtmf_delay;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5216, session_45(D), 7, "%s Set rtp dtmf delay to %u\n", D.43545_602, D.43542_604);

<bb 198>:
  D.43099_605 = smh_46->mparams;
  D.43143_606 = D.43099_605->cng_pt;
  if (D.43143_606 != 0)
    goto <bb 199>;
  else
    goto <bb 201>;

<bb 199>:
  D.43548_607 = switch_media_handle_test_media_flag (smh_46, 9);
  if (D.43548_607 == 0)
    goto <bb 200>;
  else
    goto <bb 201>;

<bb 200>:
  D.43099_608 = smh_46->mparams;
  D.43143_609 = D.43099_608->cng_pt;
  D.43551_610 = (int) D.43143_609;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5222, session_45(D), 7, "Set comfort noise payload to %u\n", D.43551_610);
  D.43077_611 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  D.43099_612 = smh_46->mparams;
  D.43143_613 = D.43099_612->cng_pt;
  switch_rtp_set_cng_pt (D.43077_611, D.43143_613);

<bb 201>:
  switch_core_session_apply_crypto (session_45(D), 0);
  D.43171_614 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43174_615 = D.43171_614->remote_sdp_port;
  D.43179_616 = (int) D.43174_615;
  switch_snprintf (&tmp, 50, "%d", D.43179_616);
  D.43073_617 = session_45(D)->channel;
  D.43171_618 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_619 = D.43171_618->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_617, "remote_media_ip", D.43172_619, 1);
  D.43073_620 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_620, "remote_media_port", &tmp, 1);
  D.43073_621 = session_45(D)->channel;
  D.43552_622 = switch_channel_test_flag (D.43073_621, 74);
  if (D.43552_622 != 0)
    goto <bb 202>;
  else
    goto <bb 203> (video);

<bb 202>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5234, session_45(D), 6, "Activating ZRTP PROXY MODE\n");
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5235, session_45(D), 7, "Disable NOTIMER_DURING_BRIDGE\n");
  D.43073_623 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_623, 99);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5237, session_45(D), 7, "Activating audio UDPTL mode\n");
  D.43077_624 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].rtp_session;
  switch_rtp_udptl_mode (D.43077_624);

  # status_4 = PHI <0(15), status_73(49), status_73(69), status_73(201), status_73(202), status_73(68)>
video:
  # DEBUG status => status_4
  D.43073_630 = session_45(D)->channel;
  D.43555_631 = switch_channel_direction (D.43073_630);
  if (D.43555_631 == 1)
    goto <bb 204>;
  else
    goto <bb 205>;

<bb 204>:
  switch_core_media_check_video_codecs (session_45(D));

<bb 205>:
  D.43073_632 = session_45(D)->channel;
  D.43558_633 = switch_channel_test_flag (D.43073_632, 98);
  if (D.43558_633 != 0)
    goto <bb 206>;
  else
    goto <bb 309> (video_up);

<bb 206>:
  D.43561_634 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43562_635 = D.43561_634->rm_encoding;
  if (D.43562_635 != 0B)
    goto <bb 207>;
  else
    goto <bb 309> (video_up);

<bb 207>:
  D.43561_636 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_637 = D.43561_636->remote_sdp_port;
  if (D.43565_637 != 0)
    goto <bb 208>;
  else
    goto <bb 309> (video_up);

<bb 208>:
  D.43096_638 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_638 != 0B)
    goto <bb 209>;
  else
    goto <bb 215>;

<bb 209>:
  D.43073_639 = session_45(D)->channel;
  D.43570_640 = switch_channel_test_flag (D.43073_639, 103);
  if (D.43570_640 != 0)
    goto <bb 210>;
  else
    goto <bb 215>;

<bb 210>:
  D.43096_641 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  remote_host_642 = switch_rtp_get_remote_host (D.43096_641);
  # DEBUG remote_host => remote_host_642
  D.43096_643 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  remote_port_644 = switch_rtp_get_remote_port (D.43096_643);
  # DEBUG remote_port => remote_port_644
  D.43574_645 = remote_host_642 != 0B;
  D.43575_646 = remote_port_644 != 0;
  D.43576_647 = D.43574_645 && D.43575_646;
  if (D.43576_647 != 0)
    goto <bb 211>;
  else
    goto <bb 214>;

<bb 211>:
  D.43561_648 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_649 = D.43561_648->remote_sdp_ip;
  D.39400_650 = __builtin_strcmp (remote_host_642, D.43578_649);
  if (D.39400_650 == 0)
    goto <bb 212>;
  else
    goto <bb 214>;

<bb 212>:
  D.43561_651 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_652 = D.43561_651->remote_sdp_port;
  if (D.43565_652 == remote_port_644)
    goto <bb 213>;
  else
    goto <bb 214>;

<bb 213>:
  D.43073_653 = session_45(D)->channel;
  D.43581_654 = switch_channel_get_name (D.43073_653);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5263, session_45(D), 7, "Video params are unchanged for %s.\n", D.43581_654);
  goto <bb 309> (video_up);

<bb 214>:
  D.43073_655 = session_45(D)->channel;
  D.43582_656 = switch_channel_get_name (D.43073_655);
  D.43583_657 = (int) remote_port_644;
  D.43561_658 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_659 = D.43561_658->remote_sdp_ip;
  D.43561_660 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_661 = D.43561_660->remote_sdp_port;
  D.43584_662 = (int) D.43565_661;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5267, session_45(D), 7, "Video params changed for %s from %s:%d to %s:%d\n", D.43582_656, remote_host_642, D.43583_657, D.43578_659, D.43584_662);

<bb 215>:
  D.43073_663 = session_45(D)->channel;
  D.43585_664 = switch_channel_test_flag (D.43073_663, 29);
  if (D.43585_664 == 0)
    goto <bb 216>;
  else
    goto <bb 218>;

<bb 216>:
  D.43096_665 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43588_666 = switch_rtp_ready (D.43096_665);
  if (D.43588_666 != 0)
    goto <bb 217>;
  else
    goto <bb 218>;

<bb 217>:
  D.43073_667 = session_45(D)->channel;
  D.43591_668 = switch_channel_get_name (D.43073_667);
  D.43171_669 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_670 = D.43171_669->remote_sdp_ip;
  D.43592_671 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_672 = (int) D.43592_671;
  D.43561_673 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_674 = D.43561_673->remote_sdp_ip;
  D.43561_675 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_676 = D.43561_675->remote_sdp_port;
  D.43584_677 = (int) D.43565_676;
  D.43561_678 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_679 = D.43561_678->agreed_pt;
  D.43595_680 = (int) D.43594_679;
  D.43189_681 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].read_impl.microseconds_per_packet;
  D.43190_682 = D.43189_681 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5275, session_45(D), 7, "VIDEO RTP [%s] %s port %d -> %s port %d codec: %u ms: %d\n", D.43591_668, D.43172_670, D.43593_672, D.43578_674, D.43584_677, D.43595_680, D.43190_682);
  start_video_thread (session_45(D));
  D.43096_683 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_684 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_685 = D.43561_684->agreed_pt;
  switch_rtp_set_default_payload (D.43096_683, D.43594_685);

<bb 218>:
  D.43592_686 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_687 = (int) D.43592_686;
  switch_snprintf (&tmp, 50, "%d", D.43593_687);
  D.43073_688 = session_45(D)->channel;
  D.43191_689 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].adv_sdp_ip;
  switch_channel_set_variable_var_check (D.43073_688, "local_video_ip", D.43191_689, 1);
  D.43073_690 = session_45(D)->channel;
  switch_channel_set_variable_var_check (D.43073_690, "local_video_port", &tmp, 1);
  D.43096_691 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_691 != 0B)
    goto <bb 219>;
  else
    goto <bb 230>;

<bb 219>:
  D.43073_692 = session_45(D)->channel;
  D.43598_693 = switch_channel_test_flag (D.43073_692, 103);
  if (D.43598_693 != 0)
    goto <bb 220>;
  else
    goto <bb 230>;

<bb 220>:
  # DEBUG rport => 0B
  remote_rtcp_port_695 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_695
  if (remote_rtcp_port_695 == 0)
    goto <bb 221>;
  else
    goto <bb 223>;

<bb 221>:
  D.43073_696 = session_45(D)->channel;
  rport_697 = switch_channel_get_variable_dup (D.43073_696, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_697
  if (rport_697 != 0B)
    goto <bb 222>;
  else
    goto <bb 223>;

<bb 222>:
  # DEBUG __nptr => rport_697
  D.48114_1348 = strtol (rport_697, 0B, 10);
  remote_rtcp_port_699 = (switch_port_t) D.48114_1348;
  # DEBUG remote_rtcp_port => remote_rtcp_port_699

<bb 223>:
  # remote_rtcp_port_24 = PHI <remote_rtcp_port_695(220), remote_rtcp_port_695(221), remote_rtcp_port_699(222)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_24
  D.43096_700 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_701 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_702 = D.43561_701->remote_sdp_ip;
  D.43561_703 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_704 = D.43561_703->remote_sdp_port;
  D.43606_705 = switch_rtp_set_remote_address (D.43096_700, D.43578_702, D.43565_704, remote_rtcp_port_24, 1, &err);
  if (D.43606_705 != 0)
    goto <bb 224>;
  else
    goto <bb 225>;

<bb 224>:
  err.45_706 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5306, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", err.45_706);
  goto <bb 309> (video_up);

<bb 225>:
  D.43561_707 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_708 = D.43561_707->remote_sdp_ip;
  D.43561_709 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_710 = D.43561_709->remote_sdp_port;
  D.43584_711 = (int) D.43565_710;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5308, session_45(D), 7, "VIDEO RTP CHANGING DEST TO: [%s:%d]\n", D.43578_708, D.43584_711);
  D.43612_712 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43612_712 == 0)
    goto <bb 226>;
  else
    goto <bb 309> (video_up);

<bb 226>:
  D.43073_713 = session_45(D)->channel;
  D.43615_714 = switch_channel_test_flag (D.43073_713, 106);
  if (D.43615_714 == 0)
    goto <bb 227>;
  else
    goto <bb 309> (video_up);

<bb 227>:
  D.43073_715 = session_45(D)->channel;
  val_716 = switch_channel_get_variable_dup (D.43073_715, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_716
  if (val_716 == 0B)
    goto <bb 229>;
  else
    goto <bb 228>;

<bb 228>:
  D.43619_717 = switch_true (val_716);
  if (D.43619_717 == 0)
    goto <bb 229>;
  else
    goto <bb 309> (video_up);

<bb 229>:
  D.43096_718 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_718, 7);
  start_video_thread (session_45(D));
  goto <bb 309> (video_up);

<bb 230>:
  D.43073_719 = session_45(D)->channel;
  D.43620_720 = switch_channel_test_flag (D.43073_719, 29);
  if (D.43620_720 != 0)
    goto <bb 231>;
  else
    goto <bb 238>;

<bb 231>:
  switch_core_media_proxy_remote_addr (session_45(D), 0B);
  memset (&flags, 0, 156);
  D.43270_721 = flags[19];
  D.43271_722 = D.43270_721 + 1;
  flags[19] = D.43271_722;
  D.43102_723 = flags[13];
  D.43103_724 = D.43102_723 + 1;
  flags[13] = D.43103_724;
  D.43625_725 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43625_725 == 0)
    goto <bb 232>;
  else
    goto <bb 236>;

<bb 232>:
  D.43073_726 = session_45(D)->channel;
  D.43628_727 = switch_channel_test_flag (D.43073_726, 106);
  if (D.43628_727 == 0)
    goto <bb 233>;
  else
    goto <bb 236>;

<bb 233>:
  D.43073_728 = session_45(D)->channel;
  val_729 = switch_channel_get_variable_dup (D.43073_728, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_729
  if (val_729 == 0B)
    goto <bb 235>;
  else
    goto <bb 234>;

<bb 234>:
  D.43632_730 = switch_true (val_729);
  if (D.43632_730 == 0)
    goto <bb 235>;
  else
    goto <bb 236>;

<bb 235>:
  D.43114_731 = flags[7];
  D.43115_732 = D.43114_731 + 1;
  flags[7] = D.43115_732;

<bb 236>:
  # DEBUG timer_name => 0B
  D.43073_734 = session_45(D)->channel;
  D.43633_735 = switch_channel_get_name (D.43073_734);
  D.43171_736 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_737 = D.43171_736->remote_sdp_ip;
  D.43592_738 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_739 = (int) D.43592_738;
  D.43561_740 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_741 = D.43561_740->remote_sdp_ip;
  D.43561_742 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_743 = D.43561_742->remote_sdp_port;
  D.43584_744 = (int) D.43565_743;
  D.43561_745 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_746 = D.43561_745->agreed_pt;
  D.43595_747 = (int) D.43594_746;
  D.43634_748 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].read_impl.microseconds_per_packet;
  D.43635_749 = D.43634_748 / 1000;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5334, session_45(D), 7, "PROXY VIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d\n", D.43633_735, D.43172_737, D.43593_739, D.43578_741, D.43584_744, D.43595_747, D.43635_749);
  D.43096_750 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43636_751 = switch_rtp_ready (D.43096_750);
  if (D.43636_751 != 0)
    goto <bb 237>;
  else
    goto <bb 239>;

<bb 237>:
  D.43096_752 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43561_753 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_754 = D.43561_753->agreed_pt;
  switch_rtp_set_default_payload (D.43096_752, D.43594_754);
  goto <bb 239>;

<bb 238>:
  # DEBUG D#24 => smh_46->mparams
  # DEBUG D#23 => D#24->timer_name
  # DEBUG timer_name => D#23
  D.43073_757 = session_45(D)->channel;
  switch_channel_get_variable_dup (D.43073_757, "rtp_timer_name", 1, -1);
  # DEBUG var => NULL

<bb 239>:
  D.43096_760 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  if (D.43096_760 != 0B)
    goto <bb 309> (video_up);
  else
    goto <bb 240>;

<bb 240>:
  D.43592_761 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  if (D.43592_761 == 0)
    goto <bb 241>;
  else
    goto <bb 242>;

<bb 241>:
  switch_core_media_choose_port (session_45(D), 1, 1);

<bb 242>:
  memset (&flags, 0, 156);
  D.43102_762 = flags[13];
  D.43103_763 = D.43102_762 + 1;
  flags[13] = D.43103_763;
  D.43137_764 = flags[8];
  D.43138_765 = D.43137_764 + 1;
  flags[8] = D.43138_765;
  D.43647_766 = switch_media_handle_test_media_flag (smh_46, 10);
  if (D.43647_766 == 0)
    goto <bb 243>;
  else
    goto <bb 248>;

<bb 243>:
  D.43073_767 = session_45(D)->channel;
  D.43650_768 = switch_channel_test_flag (D.43073_767, 15);
  if (D.43650_768 == 0)
    goto <bb 244>;
  else
    goto <bb 248>;

<bb 244>:
  D.43073_769 = session_45(D)->channel;
  val_770 = switch_channel_get_variable_dup (D.43073_769, "disable_rtp_auto_adjust", 1, -1);
  # DEBUG val => val_770
  if (val_770 == 0B)
    goto <bb 246>;
  else
    goto <bb 245>;

<bb 245>:
  D.43654_771 = switch_true (val_770);
  if (D.43654_771 == 0)
    goto <bb 246>;
  else
    goto <bb 248>;

<bb 246>:
  D.43073_772 = session_45(D)->channel;
  D.43655_773 = switch_channel_test_flag (D.43073_772, 106);
  if (D.43655_773 == 0)
    goto <bb 247>;
  else
    goto <bb 248>;

<bb 247>:
  D.43114_774 = flags[7];
  D.43115_775 = D.43114_774 + 1;
  flags[7] = D.43115_775;

<bb 248>:
  D.43073_776 = session_45(D)->channel;
  D.43658_777 = switch_channel_test_flag (D.43073_776, 29);
  if (D.43658_777 != 0)
    goto <bb 249>;
  else
    goto <bb 250>;

<bb 249>:
  D.43270_778 = flags[19];
  D.43271_779 = D.43270_778 + 1;
  flags[19] = D.43271_779;

<bb 250>:
  switch_core_media_set_video_codec (session_45(D), 0);
  flags[3] = 0;
  flags[0] = 0;
  D.43661_780 = flags[30];
  D.43662_781 = D.43661_780 + 1;
  flags[30] = D.43662_781;
  D.43184_782 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].local_sdp_ip;
  D.43592_783 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43561_784 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_785 = D.43561_784->remote_sdp_ip;
  D.43561_786 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_787 = D.43561_786->remote_sdp_port;
  D.43561_788 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_789 = D.43561_788->agreed_pt;
  D.43663_790 = switch_core_session_get_pool (session_45(D));
  D.43664_791 = switch_rtp_new (D.43184_782, D.43592_783, D.43578_785, D.43565_787, D.43594_789, 1, 90000, &flags, 0B, &err, D.43663_790);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session = D.43664_791;
  D.43073_792 = session_45(D)->channel;
  D.43666_793 = switch_channel_test_flag (D.43073_792, 29);
  if (D.43666_793 != 0)
    goto <bb 252>;
  else
    goto <bb 251>;

<bb 251>:

<bb 252>:
  # iftmp.61_35 = PHI <"PROXY "(250), ""(251)>
  D.43073_796 = session_45(D)->channel;
  D.43670_797 = switch_channel_get_name (D.43073_796);
  D.43171_798 = MEM[(struct switch_rtp_engine_t *)smh_46 + 80B].cur_payload_map;
  D.43172_799 = D.43171_798->remote_sdp_ip;
  D.43592_800 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_sdp_port;
  D.43593_801 = (int) D.43592_800;
  D.43561_802 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43578_803 = D.43561_802->remote_sdp_ip;
  D.43561_804 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43565_805 = D.43561_804->remote_sdp_port;
  D.43584_806 = (int) D.43565_805;
  D.43561_807 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_808 = D.43561_807->agreed_pt;
  D.43595_809 = (int) D.43594_808;
  D.43096_810 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43672_811 = switch_rtp_ready (D.43096_810);
  if (D.43672_811 == 0)
    goto <bb 253>;
  else
    goto <bb 254>;

<bb 253>:
  iftmp.62_812 = err;

<bb 254>:
  # iftmp.62_36 = PHI <iftmp.62_812(253), "SUCCESS"(252)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5391, session_45(D), 7, "%sVIDEO RTP [%s] %s:%d->%s:%d codec: %u ms: %d [%s]\n", iftmp.61_35, D.43670_797, D.43172_799, D.43593_801, D.43578_803, D.43584_806, D.43595_809, 0, iftmp.62_36);
  D.43096_814 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43676_815 = switch_rtp_ready (D.43096_814);
  if (D.43676_815 != 0)
    goto <bb 255>;
  else
    goto <bb 303>;

<bb 255>:
  D.43679_816 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].fir;
  if (D.43679_816 != 0)
    goto <bb 256>;
  else
    goto <bb 257>;

<bb 256>:
  D.43096_817 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_817, 36);

<bb 257>:
  D.43682_818 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].pli;
  if (D.43682_818 != 0)
    goto <bb 258>;
  else
    goto <bb 259>;

<bb 258>:
  D.43096_819 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_flag (D.43096_819, 37);

<bb 259>:
  D.43096_820 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43685_821 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].payload_map;
  switch_rtp_set_payload_map (D.43096_820, D.43685_821);
  start_video_thread (session_45(D));
  D.43073_822 = session_45(D)->channel;
  switch_channel_set_flag_value (D.43073_822, 23, 1);
  D.43073_823 = session_45(D)->channel;
  ssrc_824 = switch_channel_get_variable_dup (D.43073_823, "rtp_use_video_ssrc", 1, -1);
  # DEBUG ssrc => ssrc_824
  if (ssrc_824 != 0B)
    goto <bb 260>;
  else
    goto <bb 261>;

<bb 260>:
  ssrc_ul_825 = strtoul (ssrc_824, 0B, 10);
  # DEBUG ssrc_ul => ssrc_ul_825
  D.43096_826 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_set_ssrc (D.43096_826, ssrc_ul_825);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = ssrc_ul_825;
  goto <bb 262>;

<bb 261>:
  D.43096_827 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43689_828 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
  switch_rtp_set_ssrc (D.43096_827, D.43689_828);

<bb 262>:
  D.43690_829 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
  if (D.43690_829 != 0)
    goto <bb 263>;
  else
    goto <bb 264>;

<bb 263>:
  D.43096_830 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43690_831 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_ssrc;
  switch_rtp_set_remote_ssrc (D.43096_830, D.43690_831);

<bb 264>:
  D.43693_832 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43694_833 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_832][0].ready;
  if (D.43694_833 != 0)
    goto <bb 265>;
  else
    goto <bb 268>;

<bb 265>:
  gen_ice (session_45(D), 1, 0B, 0);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5433, session_45(D), 6, "Activating Video ICE\n");
  D.43096_834 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43697_835 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
  D.43698_836 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
  D.43699_837 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
  D.43700_838 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
  D.43702_839 = switch_ice_direction (session_45(D));
  if (D.43702_839 == 1)
    goto <bb 267>;
  else
    goto <bb 266>;

<bb 266>:

<bb 267>:
  # iftmp.63_37 = PHI <2(265), 6(266)>
  D.43706_842 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
  switch_rtp_activate_ice (D.43096_834, D.43697_835, D.43698_836, D.43699_837, D.43700_838, 0, iftmp.63_37, D.43706_842);

<bb 268>:
  D.43073_843 = session_45(D)->channel;
  val_844 = switch_channel_get_variable_dup (D.43073_843, "rtcp_video_interval_msec", 1, -1);
  # DEBUG val => val_844
  if (val_844 != 0B)
    goto <bb 270>;
  else
    goto <bb 269>;

<bb 269>:
  D.43099_845 = smh_46->mparams;
  val_846 = D.43099_845->rtcp_video_interval_msec;
  # DEBUG val => val_846
  if (val_846 != 0B)
    goto <bb 270>;
  else
    goto <bb 285>;

<bb 270>:
  # val_3 = PHI <val_844(268), val_846(269)>
  # DEBUG val => val_3
  D.43073_847 = session_45(D)->channel;
  rport_848 = switch_channel_get_variable_dup (D.43073_847, "rtp_remote_video_rtcp_port", 1, -1);
  # DEBUG rport => rport_848
  remote_port_849 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_rtcp_port;
  # DEBUG remote_port => remote_port_849
  if (rport_848 != 0B)
    goto <bb 271>;
  else
    goto <bb 272>;

<bb 271>:
  # DEBUG __nptr => rport_848
  D.48117_1349 = strtol (rport_848, 0B, 10);
  remote_port_851 = (switch_port_t) D.48117_1349;
  # DEBUG remote_port => remote_port_851

<bb 272>:
  # remote_port_25 = PHI <remote_port_849(270), remote_port_851(271)>
  # DEBUG remote_port => remote_port_25
  D.43713_852 = strcasecmp (val_3, "passthru");
  if (D.43713_852 == 0)
    goto <bb 273>;
  else
    goto <bb 274>;

<bb 273>:
  D.43716_853 = (int) remote_port_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5462, session_45(D), 6, "Activating VIDEO RTCP PASSTHRU PORT %d\n", D.43716_853);
  D.43096_854 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43717_855 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43718_856 = D.43717_855 > 0;
  switch_rtp_activate_rtcp (D.43096_854, -1, remote_port_25, D.43718_856);
  goto <bb 277>;

<bb 274>:
  # DEBUG __nptr => val_3
  interval_1350 = strtol (val_3, 0B, 10);
  # DEBUG interval => NULL
  interval.64_858 = (unsigned int) interval_1350;
  D.43721_859 = interval.64_858 + 4294967196;
  if (D.43721_859 > 499900)
    goto <bb 275>;
  else
    goto <bb 276>;

<bb 275>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5467, session_45(D), 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_1350);

<bb 276>:
  # DEBUG interval => 10000
  D.43716_861 = (int) remote_port_25;
  D.43717_862 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43724_863 = (int) D.43717_862;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5471, session_45(D), 6, "Activating VIDEO RTCP PORT %d mux %d\n", D.43716_861, D.43724_863);
  D.43096_864 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43717_865 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  D.43718_866 = D.43717_865 > 0;
  switch_rtp_activate_rtcp (D.43096_864, 10000, remote_port_25, D.43718_866);

<bb 277>:
  D.43725_867 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43726_868 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_867][1].ready;
  if (D.43726_868 != 0)
    goto <bb 278>;
  else
    goto <bb 285>;

<bb 278>:
  D.43717_869 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_869 > 0)
    goto <bb 279>;
  else
    goto <bb 282>;

<bb 279>:
  D.43725_870 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43732_871 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_870][1].con_addr;
  D.43693_872 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43733_873 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_872][0].con_addr;
  D.39417_874 = __builtin_strcmp (D.43732_871, D.43733_873);
  if (D.39417_874 == 0)
    goto <bb 280>;
  else
    goto <bb 282>;

<bb 280>:
  D.43725_875 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[1];
  D.43735_876 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43725_875][1].con_port;
  D.43693_877 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.chosen[0];
  D.43736_878 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.cands[D.43693_877][0].con_port;
  if (D.43735_876 == D.43736_878)
    goto <bb 281>;
  else
    goto <bb 282>;

<bb 281>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5481, session_45(D), 6, "Skipping VIDEO RTCP ICE (Same as VIDEO RTP)\n");
  goto <bb 285>;

<bb 282>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5484, session_45(D), 6, "Activating VIDEO RTCP ICE\n");
  D.43096_879 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43697_880 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.ufrag;
  D.43698_881 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.ufrag;
  D.43699_882 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_out.pwd;
  D.43700_883 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in.pwd;
  D.43739_884 = switch_ice_direction (session_45(D));
  if (D.43739_884 == 1)
    goto <bb 284>;
  else
    goto <bb 283>;

<bb 283>:

<bb 284>:
  # iftmp.65_38 = PHI <2(282), 6(283)>
  D.43706_887 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ice_in;
  switch_rtp_activate_ice (D.43096_879, D.43697_880, D.43698_881, D.43699_882, D.43700_883, 1, iftmp.65_38, D.43706_887);

<bb 285>:
  D.43743_888 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint.str;
  # DEBUG s => D.43743_888
  if (D.43743_888 == 0B)
    goto <bb 288>;
  else
    goto <bb 286>;

<bb 286>:
  D.48124_1351 = MEM[(const char *)smh_46 + 22400B];
  if (D.48124_1351 == 0)
    goto <bb 288>;
  else
    goto <bb 287>;

<bb 287>:

<bb 288>:
  # D.48123_1352 = PHI <1(285), 1(286), 0(287)>
  if (D.48123_1352 == 0)
    goto <bb 289>;
  else
    goto <bb 299>;

<bb 289>:
  D.43747_890 = switch_rtp_has_dtls ();
  if (D.43747_890 != 0)
    goto <bb 290>;
  else
    goto <bb 299>;

<bb 290>:
  D.43429_891 = smh_46->session;
  D.43750_892 = dtls_ok (D.43429_891);
  if (D.43750_892 != 0)
    goto <bb 291>;
  else
    goto <bb 299>;

<bb 291>:
  D.43429_893 = smh_46->session;
  D.43434_894 = D.43429_893->channel;
  D.43754_895 = switch_channel_direction (D.43434_894);
  if (D.43754_895 == 0)
    goto <bb 293>;
  else
    goto <bb 292>;

<bb 292>:

<bb 293>:
  # dtype_39 = PHI <1(291), 2(292)>
  # DEBUG dtype => dtype_39
  # DEBUG xtype => 4
  D.43717_900 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_900 > 0)
    goto <bb 294>;
  else
    goto <bb 296>;

<bb 294>:
  D.43099_901 = smh_46->mparams;
  D.43760_902 = D.43099_901->rtcp_video_interval_msec;
  if (D.43760_902 != 0B)
    goto <bb 295>;
  else
    goto <bb 296>;

<bb 295>:
  # DEBUG xtype => 12

<bb 296>:
  # xtype_26 = PHI <4(293), 4(294), 12(295)>
  # DEBUG xtype => xtype_26
  D.43096_904 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43763_905 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
  D.43764_906 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
  D.43765_907 = xtype_26 | dtype_39;
  switch_rtp_add_dtls (D.43096_904, D.43763_905, D.43764_906, D.43765_907);
  D.43717_908 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtcp_mux;
  if (D.43717_908 <= 0)
    goto <bb 297>;
  else
    goto <bb 299>;

<bb 297>:
  D.43099_909 = smh_46->mparams;
  D.43760_910 = D.43099_909->rtcp_video_interval_msec;
  if (D.43760_910 != 0B)
    goto <bb 298>;
  else
    goto <bb 299>;

<bb 298>:
  # DEBUG xtype => 8
  D.43096_912 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43763_913 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].local_dtls_fingerprint;
  D.43764_914 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].remote_dtls_fingerprint;
  D.43765_915 = dtype_39 | 8;
  switch_rtp_add_dtls (D.43096_912, D.43763_913, D.43764_914, D.43765_915);

<bb 299>:
  D.43073_916 = session_45(D)->channel;
  val_917 = switch_channel_get_variable_dup (D.43073_916, "rtp_manual_video_rtp_bugs", 1, -1);
  # DEBUG val => val_917
  if (val_917 != 0B)
    goto <bb 300>;
  else
    goto <bb 301>;

<bb 300>:
  D.43772_918 = &MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
  switch_core_media_parse_rtp_bugs (D.43772_918, val_917);

<bb 301>:
  D.43096_919 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43773_920 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_bugs;
  D.43099_921 = smh_46->mparams;
  D.43774_922 = D.43099_921->manual_video_rtp_bugs;
  D.43775_923 = D.43773_920 | D.43774_922;
  switch_rtp_intentional_bugs (D.43096_919, D.43775_923);
  D.43073_924 = session_45(D)->channel;
  D.43561_925 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].cur_payload_map;
  D.43594_926 = D.43561_925->agreed_pt;
  D.43595_927 = (int) D.43594_926;
  switch_channel_set_variable_printf (D.43073_924, "rtp_use_video_pt", "%d", D.43595_927);
  D.43096_928 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  D.43776_929 = switch_rtp_get_ssrc (D.43096_928);
  MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc = D.43776_929;
  D.43073_930 = session_45(D)->channel;
  D.43689_931 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].ssrc;
  switch_channel_set_variable_printf (D.43073_930, "rtp_use_video_ssrc", "%u", D.43689_931);
  switch_core_session_apply_crypto (session_45(D), 1);
  D.43073_932 = session_45(D)->channel;
  D.43777_933 = switch_channel_test_flag (D.43073_932, 74);
  if (D.43777_933 != 0)
    goto <bb 302>;
  else
    goto <bb 309> (video_up);

<bb 302>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5542, session_45(D), 7, "Activating video UDPTL mode\n");
  D.43096_934 = MEM[(struct switch_rtp_engine_t *)smh_46 + 11496B].rtp_session;
  switch_rtp_udptl_mode (D.43096_934);
  goto <bb 309> (video_up);

<bb 303>:
  err.45_935 = err;
  if (err.45_935 != 0B)
    goto <bb 304>;
  else
    goto <bb 305>;

<bb 304>:
  iftmp.67_936 = err;

<bb 305>:
  # iftmp.67_40 = PHI <iftmp.67_936(304), ""(303)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5547, session_45(D), 3, "VIDEO RTP REPORTS ERROR: [%s]\n", iftmp.67_40);
  D.43073_938 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_938, "src/switch_core_media.c", &__func__, 5548, 27);
  goto <bb 311> (end);

<bb 306>:
  err.45_625 = err;
  if (err.45_625 != 0B)
    goto <bb 307>;
  else
    goto <bb 308>;

<bb 307>:
  iftmp.68_626 = err;

<bb 308>:
  # iftmp.68_41 = PHI <iftmp.68_626(307), ""(306)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5554, session_45(D), 3, "AUDIO RTP REPORTS ERROR: [%s]\n", iftmp.68_41);
  D.43073_628 = session_45(D)->channel;
  switch_channel_perform_hangup (D.43073_628, "src/switch_core_media.c", &__func__, 5555, 27);
  # DEBUG status => 1
  goto <bb 311> (end);

video_up:
  D.43262_939 = session_45(D) != 0B;
  D.43790_940 = v_engine_49 != 0B;
  D.43791_941 = D.43262_939 && D.43790_940;
  if (D.43791_941 != 0)
    goto <bb 310>;
  else
    goto <bb 311> (end);

<bb 310>:
  check_dtls_reinvite (session_45(D), v_engine_49);

  # status_5 = PHI <0(11), 0(15), status_73(16), status_4(305), 1(308), 0(310), 0(309), 0(14)>
end:
  # DEBUG status => status_5
  D.43073_943 = session_45(D)->channel;
  switch_channel_clear_flag (D.43073_943, 103);
  switch_core_recovery_track (session_45(D));

<bb 312>:
  # status_27 = PHI <1(4), 1(6), status_5(311), 1(5)>
  return status_27;

}



;; Function switch_core_media_check_dtmf_type (switch_core_media_check_dtmf_type)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 12 5 }
;; 5 succs { 6 12 }
;; 6 succs { 7 8 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 5897, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: val_4 = switch_channel_get_variable_dup (D.43050_3, "dtmf_type", 1, -1);

Marking useful stmt: # DEBUG val => val_4

Marking useful stmt: D.43056_6->dtmf_type = 0;

Marking useful stmt: D.43056_8->dtmf_type = 1;

Marking useful stmt: D.43056_10->dtmf_type = 2;

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: D.43056_10->dtmf_type = 2;

Marking useful stmt: if (D.43062_9 == 0)

marking necessary through D.43056_10 stmt D.43056_10 = smh_2->mparams;
processing: D.43056_10 = smh_2->mparams;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.43062_9 == 0)

Marking useful stmt: if (D.43058_7 == 0)

marking necessary through D.43062_9 stmt D.43062_9 = strcasecmp (val_4, "none");
processing: D.43062_9 = strcasecmp (val_4, "none");

processing: if (D.43058_7 == 0)

Marking useful stmt: if (D.43053_5 == 0)

marking necessary through D.43058_7 stmt D.43058_7 = strcasecmp (val_4, "info");
processing: D.43058_7 = strcasecmp (val_4, "info");

processing: if (D.43053_5 == 0)

Marking useful stmt: if (val_4 != 0B)

marking necessary through D.43053_5 stmt D.43053_5 = strcasecmp (val_4, "rfc2833");
processing: D.43053_5 = strcasecmp (val_4, "rfc2833");

processing: if (val_4 != 0B)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.43056_8->dtmf_type = 1;

marking necessary through D.43056_8 stmt D.43056_8 = smh_2->mparams;
processing: D.43056_8 = smh_2->mparams;

processing: D.43056_6->dtmf_type = 0;

marking necessary through D.43056_6 stmt D.43056_6 = smh_2->mparams;
processing: D.43056_6 = smh_2->mparams;

processing: val_4 = switch_channel_get_variable_dup (D.43050_3, "dtmf_type", 1, -1);

marking necessary through D.43050_3 stmt D.43050_3 = session_1(D)->channel;
processing: D.43050_3 = session_1(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 5897, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 22 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_check_dtmf_type (struct switch_core_session_t * session)
{
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_check_dtmf_type";
  struct switch_media_handle_t * smh;
  const char * val;
  int D.43062;
  int D.43058;
  struct switch_core_media_params_t * D.43056;
  int D.43053;
  struct switch_channel_t * D.43050;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5897, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 12>;
  else
    goto <bb 5>;

<bb 5>:
  D.43050_3 = session_1(D)->channel;
  val_4 = switch_channel_get_variable_dup (D.43050_3, "dtmf_type", 1, -1);
  # DEBUG val => val_4
  if (val_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;

<bb 6>:
  D.43053_5 = strcasecmp (val_4, "rfc2833");
  if (D.43053_5 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.43056_6 = smh_2->mparams;
  D.43056_6->dtmf_type = 0;
  goto <bb 12>;

<bb 8>:
  D.43058_7 = strcasecmp (val_4, "info");
  if (D.43058_7 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  D.43056_8 = smh_2->mparams;
  D.43056_8->dtmf_type = 1;
  goto <bb 12>;

<bb 10>:
  D.43062_9 = strcasecmp (val_4, "none");
  if (D.43062_9 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.43056_10 = smh_2->mparams;
  D.43056_10->dtmf_type = 2;

<bb 12>:
  return;

}



;; Function switch_core_media_sdp_map (switch_core_media_sdp_map)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 6 18 7 17 8 15 16 13 14 12 9 10 11
;;
;; Loop 2
;;  header 18, latch 17
;;  depth 2, outer 1
;;  nodes: 18 17 8 15 16 13 14 12 9 10 11
;; 2 succs { 22 3 }
;; 3 succs { 4 5 }
;; 4 succs { 22 }
;; 5 succs { 20 }
;; 6 succs { 7 19 }
;; 7 succs { 18 }
;; 8 succs { 9 17 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 8 19 }
;; 19 succs { 20 }
;; 20 succs { 6 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Marking useful stmt: # DEBUG parser => 0B

Marking useful stmt: parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);

Marking useful stmt: # DEBUG parser => parser_9

Marking useful stmt: sdp_11 = sdp_session (parser_9);

Marking useful stmt: # DEBUG sdp => sdp_11

Marking useful stmt: sdp_parser_free (parser_9);

Marking useful stmt: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);

Marking useful stmt: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);

Marking useful stmt: # DEBUG m => m_15

Marking useful stmt: # DEBUG map => map_17

Marking useful stmt: # DEBUG br => 0B

Marking useful stmt: # DEBUG br => br_22

Marking useful stmt: # DEBUG br => br_23

Marking useful stmt: # DEBUG br => br_3

Marking useful stmt: switch_snprintf (&buf, 25, "%d", D.43037_25);

Marking useful stmt: switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);

Marking useful stmt: switch_snprintf (&key, 128, "%s", D.43028_27);

Marking useful stmt: switch_event_add_header_string (D.43041_28, 1, &key, &buf);

Marking useful stmt: switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);

Marking useful stmt: # DEBUG map => map_32

Marking useful stmt: # DEBUG map => map_2

Marking useful stmt: # DEBUG m => m_33

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: sdp_parser_free (parser_9);

Marking useful stmt: return D.43022_4;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_15(5), m_33(19)>
)
  (init_cond = m_15))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_15(5), m_33(19)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 5 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (m_1 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
map_2 = PHI <map_17(7), map_32(17)>
)
  (init_cond = map_17))
(analyze_evolution_in_loop 
  (loop_phi_node = map_2 = PHI <map_17(7), map_32(17)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = map_2)
(get_scalar_evolution 
  (scalar = map_2)
  (scalar_evolution = map_2))
(set_scalar_evolution 
  instantiated_below = 7 
  (scalar = map_2)
  (scalar_evolution = map_2))
)
can not prove finiteness of loop 2
Marking useful stmt: if (map_2 != 0B)


Processing worklist:
processing: if (map_2 != 0B)

Marking useful stmt: if (D.43025_16 == 256)

marking necessary through map_2 stmt map_2 = PHI <map_17(7), map_32(17)>
processing: map_2 = PHI <map_17(7), map_32(17)>

marking necessary through map_17 stmt map_17 = m_1->m_rtpmaps;
marking necessary through map_32 stmt map_32 = map_2->rm_next;
processing: map_32 = map_2->rm_next;

marking necessary through .MEM_47 stmt key = "";
marking necessary through .MEM_46 stmt buf = "";
processing: buf = "";

Marking useful stmt: if (D.43028_18 != 0B)

processing: if (D.43028_18 != 0B)

marking necessary through D.43028_18 stmt D.43028_18 = map_2->rm_encoding;
processing: D.43028_18 = map_2->rm_encoding;

processing: key = "";

processing: map_17 = m_1->m_rtpmaps;

marking necessary through m_1 stmt m_1 = PHI <m_15(5), m_33(19)>
processing: m_1 = PHI <m_15(5), m_33(19)>

Marking useful stmt: if (sdp_11 == 0B)

marking necessary through m_15 stmt m_15 = sdp_11->sdp_media;
marking necessary through m_33 stmt m_33 = m_1->m_next;
processing: m_33 = m_1->m_next;

processing: m_15 = sdp_11->sdp_media;

processing: if (sdp_11 == 0B)

Marking useful stmt: if (parser_9 == 0B)

processing: if (parser_9 == 0B)

processing: if (D.43025_16 == 256)

marking necessary through D.43025_16 stmt D.43025_16 = m_1->m_proto;
processing: D.43025_16 = m_1->m_proto;

processing: if (m_1 != 0B)

processing: return D.43022_4;

marking necessary through D.43022_4 stmt D.43022_4 = PHI <1(2), 1(4), 0(21)>
processing: D.43022_4 = PHI <1(2), 1(4), 0(21)>

processing: sdp_parser_free (parser_9);

processing: switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);

Marking useful stmt: if (D.43031_29 != 0B)

marking necessary through D.43044_30 stmt D.43044_30 = *fmtp_13(D);
marking necessary through D.43031_31 stmt D.43031_31 = map_2->rm_fmtp;
processing: D.43031_31 = map_2->rm_fmtp;

processing: D.43044_30 = *fmtp_13(D);

processing: if (D.43031_29 != 0B)

marking necessary through D.43031_29 stmt D.43031_29 = map_2->rm_fmtp;
processing: D.43031_29 = map_2->rm_fmtp;

processing: switch_event_add_header_string (D.43041_28, 1, &key, &buf);

marking necessary through D.43041_28 stmt D.43041_28 = *pt_14(D);
processing: D.43041_28 = *pt_14(D);

processing: switch_snprintf (&key, 128, "%s", D.43028_27);

Marking useful stmt: if (br_3 != 0B)

marking necessary through D.43028_27 stmt D.43028_27 = map_2->rm_encoding;
processing: D.43028_27 = map_2->rm_encoding;

processing: if (br_3 != 0B)

marking necessary through br_3 stmt br_3 = PHI <0B(9), br_22(10), br_23(11)>
processing: br_3 = PHI <0B(9), br_22(10), br_23(11)>

marking necessary through br_22 stmt br_22 = strstr (D.43031_21, "bitrate=");
marking necessary through br_23 stmt br_23 = br_22 + 8;
Marking useful stmt: if (D.43031_20 != 0B)

Marking useful stmt: if (br_22 != 0B)

processing: if (br_22 != 0B)

processing: if (D.43031_20 != 0B)

marking necessary through D.43031_20 stmt D.43031_20 = map_2->rm_fmtp;
processing: D.43031_20 = map_2->rm_fmtp;

processing: br_23 = br_22 + 8;

processing: br_22 = strstr (D.43031_21, "bitrate=");

marking necessary through D.43031_21 stmt D.43031_21 = map_2->rm_fmtp;
processing: D.43031_21 = map_2->rm_fmtp;

processing: switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);

marking necessary through D.43028_26 stmt D.43028_26 = map_2->rm_encoding;
processing: D.43028_26 = map_2->rm_encoding;

processing: switch_snprintf (&buf, 25, "%d", D.43037_25);

marking necessary through D.43037_25 stmt D.43037_25 = (int) D.43036_24;
processing: D.43037_25 = (int) D.43036_24;

marking necessary through D.43036_24 stmt D.43036_24 = map_2->rm_pt;
processing: D.43036_24 = map_2->rm_pt;

processing: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);

processing: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);

processing: sdp_parser_free (parser_9);

processing: sdp_11 = sdp_session (parser_9);

processing: parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);

marking necessary through D.43019_8 stmt D.43019_8 = (int) D.43018_7;
processing: D.43019_8 = (int) D.43018_7;

marking necessary through D.43018_7 stmt D.43018_7 = strlen (r_sdp_6(D));
processing: D.43018_7 = strlen (r_sdp_6(D));


Eliminating unnecessary statements:
Removed 0 of 57 statements (0%)
Removed 0 of 9 PHI nodes (0%)
switch_core_media_sdp_map (const char * r_sdp, struct switch_event_t * * fmtp, struct switch_event_t * * pt)
{
  char * br;
  char key[128];
  char buf[25];
  struct sdp_rtpmap_t * map;
  static const char __func__[26] = "switch_core_media_sdp_map";
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  struct switch_event_t * D.43044;
  struct switch_event_t * D.43041;
  int D.43037;
  <unnamed-unsigned:7> D.43036;
  const char * D.43031;
  const char * D.43028;
  sdp_proto_e D.43025;
  switch_status_t D.43022;
  int D.43019;
  size_t D.43018;

<bb 2>:
  # DEBUG parser => 0B
  D.43018_7 = strlen (r_sdp_6(D));
  D.43019_8 = (int) D.43018_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 22>;
  else
    goto <bb 3>;

<bb 3>:
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:
  sdp_parser_free (parser_9);
  goto <bb 22>;

<bb 5>:
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);
  m_15 = sdp_11->sdp_media;
  # DEBUG m => m_15
  goto <bb 20>;

<bb 6>:
  D.43025_16 = m_1->m_proto;
  if (D.43025_16 == 256)
    goto <bb 7>;
  else
    goto <bb 19>;

<bb 7>:
  map_17 = m_1->m_rtpmaps;
  # DEBUG map => map_17
  goto <bb 18>;

<bb 8>:
  D.43028_18 = map_2->rm_encoding;
  if (D.43028_18 != 0B)
    goto <bb 9>;
  else
    goto <bb 17>;

<bb 9>:
  buf = "";
  key = "";
  # DEBUG br => 0B
  D.43031_20 = map_2->rm_fmtp;
  if (D.43031_20 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

<bb 10>:
  D.43031_21 = map_2->rm_fmtp;
  br_22 = strstr (D.43031_21, "bitrate=");
  # DEBUG br => br_22
  if (br_22 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  br_23 = br_22 + 8;
  # DEBUG br => br_23

<bb 12>:
  # br_3 = PHI <0B(9), br_22(10), br_23(11)>
  # DEBUG br => br_3
  D.43036_24 = map_2->rm_pt;
  D.43037_25 = (int) D.43036_24;
  switch_snprintf (&buf, 25, "%d", D.43037_25);
  if (br_3 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  D.43028_26 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);
  goto <bb 15>;

<bb 14>:
  D.43028_27 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s", D.43028_27);

<bb 15>:
  D.43041_28 = *pt_14(D);
  switch_event_add_header_string (D.43041_28, 1, &key, &buf);
  D.43031_29 = map_2->rm_fmtp;
  if (D.43031_29 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.43044_30 = *fmtp_13(D);
  D.43031_31 = map_2->rm_fmtp;
  switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);

<bb 17>:
  map_32 = map_2->rm_next;
  # DEBUG map => map_32

<bb 18>:
  # map_2 = PHI <map_17(7), map_32(17)>
  # DEBUG map => map_2
  if (map_2 != 0B)
    goto <bb 8>;
  else
    goto <bb 19>;

<bb 19>:
  m_33 = m_1->m_next;
  # DEBUG m => m_33

<bb 20>:
  # m_1 = PHI <m_15(5), m_33(19)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 21>;

<bb 21>:
  sdp_parser_free (parser_9);

<bb 22>:
  # D.43022_4 = PHI <1(2), 1(4), 0(21)>
  return D.43022_4;

}



;; Function switch_core_media_set_local_sdp (switch_core_media_set_local_sdp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 12 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 5978, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: switch_mutex_lock (D.43005_5);

Marking useful stmt: sdp_str_9 = switch_core_perform_session_strdup (session_2(D), sdp_str_8(D), "src/switch_core_media.c", &__func__, 5985);

Marking useful stmt: D.43008_6->local_sdp_str = sdp_str_1;

Marking useful stmt: switch_channel_set_variable_var_check (D.43013_11, "rtp_local_sdp_str", D.43014_13, 1);

Marking useful stmt: switch_mutex_unlock (D.43005_15);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_2(D) == 0B)

processing: if (session_2(D) == 0B)

processing: switch_mutex_unlock (D.43005_15);

Marking useful stmt: if (D.43005_14 != 0B)

marking necessary through D.43005_15 stmt D.43005_15 = smh_3->sdp_mutex;
processing: D.43005_15 = smh_3->sdp_mutex;

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.43005_14 != 0B)

Marking useful stmt: if (smh_3 == 0B)

marking necessary through D.43005_14 stmt D.43005_14 = smh_3->sdp_mutex;
processing: D.43005_14 = smh_3->sdp_mutex;

processing: if (smh_3 == 0B)

processing: switch_channel_set_variable_var_check (D.43013_11, "rtp_local_sdp_str", D.43014_13, 1);

marking necessary through D.43013_11 stmt D.43013_11 = session_2(D)->channel;
marking necessary through D.43014_13 stmt D.43014_13 = D.43008_12->local_sdp_str;
processing: D.43014_13 = D.43008_12->local_sdp_str;

marking necessary through D.43008_12 stmt D.43008_12 = smh_3->mparams;
processing: D.43008_12 = smh_3->mparams;

processing: D.43013_11 = session_2(D)->channel;

processing: D.43008_6->local_sdp_str = sdp_str_1;

marking necessary through D.43008_6 stmt D.43008_6 = smh_3->mparams;
marking necessary through sdp_str_1 stmt sdp_str_1 = PHI <sdp_str_9(8), sdp_str_8(D)(9)>
processing: sdp_str_1 = PHI <sdp_str_9(8), sdp_str_8(D)(9)>

Marking useful stmt: if (dup_7(D) != 0)

processing: if (dup_7(D) != 0)

processing: D.43008_6 = smh_3->mparams;

processing: sdp_str_9 = switch_core_perform_session_strdup (session_2(D), sdp_str_8(D), "src/switch_core_media.c", &__func__, 5985);

processing: switch_mutex_lock (D.43005_5);

Marking useful stmt: if (D.43005_4 != 0B)

marking necessary through D.43005_5 stmt D.43005_5 = smh_3->sdp_mutex;
processing: D.43005_5 = smh_3->sdp_mutex;

processing: if (D.43005_4 != 0B)

marking necessary through D.43005_4 stmt D.43005_4 = smh_3->sdp_mutex;
processing: D.43005_4 = smh_3->sdp_mutex;

processing: __assert_fail ("session", "src/switch_core_media.c", 5978, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : sdp_str_10 = sdp_str_8(D);

Removed 1 of 23 statements (4%)
Removed 0 of 3 PHI nodes (0%)
Removing basic block 9
;; basic block 9, loop depth 0, count 0
;; prev block 8, next block 10
;; pred:      
;; succ:       10 (fallthru,exec)
<bb 9>:


Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_set_local_sdp";
  static const char __func__[32] = "switch_core_media_set_local_sdp";

}
switch_core_media_set_local_sdp (struct switch_core_session_t * session, const char * sdp_str, switch_bool_t dup)
{
  static const char __func__[32] = "switch_core_media_set_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_set_local_sdp";
  struct switch_media_handle_t * smh;
  char * D.43014;
  struct switch_channel_t * D.43013;
  struct switch_core_media_params_t * D.43008;
  struct switch_mutex_t * D.43005;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 5978, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 11>;
  else
    goto <bb 5>;

<bb 5>:
  D.43005_4 = smh_3->sdp_mutex;
  if (D.43005_4 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.43005_5 = smh_3->sdp_mutex;
  switch_mutex_lock (D.43005_5);

<bb 7>:
  D.43008_6 = smh_3->mparams;
  if (dup_7(D) != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  sdp_str_9 = switch_core_perform_session_strdup (session_2(D), sdp_str_8(D), "src/switch_core_media.c", &__func__, 5985);

<bb 9>:
  # sdp_str_1 = PHI <sdp_str_9(8), sdp_str_8(D)(7)>
  D.43008_6->local_sdp_str = sdp_str_1;
  D.43013_11 = session_2(D)->channel;
  D.43008_12 = smh_3->mparams;
  D.43014_13 = D.43008_12->local_sdp_str;
  switch_channel_set_variable_var_check (D.43013_11, "rtp_local_sdp_str", D.43014_13, 1);
  D.43005_14 = smh_3->sdp_mutex;
  if (D.43005_14 != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.43005_15 = smh_3->sdp_mutex;
  switch_mutex_unlock (D.43005_15);

<bb 11>:
  return;

}



;; Function switch_core_media_gen_local_sdp (switch_core_media_gen_local_sdp)

Created preheader block for loop 6
Created preheader block for loop 11
Created preheader block for loop 3
Created preheader block for loop 1
;; 12 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 6
;;  header 460, latch 447
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 11
;;  header 461, latch 439
;;  depth 2, outer 6
;;  nodes: 461 439 433 437 438 434 435 436 432
;;
;; Loop 10
;;  header 319, latch 318
;;  depth 2, outer 6
;;  nodes: 319 318 315 316 317 320
;;
;; Loop 9
;;  header 375, latch 374
;;  depth 2, outer 6
;;  nodes: 375 374 332 335 338 371 372 373 368 369 370 353 366 367 363 364 365 361 362 358 359 360 356 357 354 355 352 349 350 351 347 348 346 344 345 342 343 340 341 336 339 337 333 334 331
;;
;; Loop 8
;;  header 281, latch 280
;;  depth 2, outer 6
;;  nodes: 281 280 278 279 282
;;
;; Loop 7
;;  header 298, latch 297
;;  depth 2, outer 6
;;  nodes: 298 297 287 290 293 295 296 291 294 292 288 289 286
;;
;; Loop 5
;;  header 146, latch 145
;;  depth 1, outer 0
;;  nodes: 146 145 143 144 147
;;
;; Loop 4
;;  header 123, latch 122
;;  depth 1, outer 0
;;  nodes: 123 122 120 121 124
;;
;; Loop 3
;;  header 462, latch 256
;;  depth 1, outer 0
;;  nodes: 462 256 241 245 254 255 252 457 251 248 249 250 247 246 243 244 242 240
;;
;; Loop 2
;;  header 59, latch 58
;;  depth 1, outer 0
;;  nodes: 59 58 44 56 57 55 54 53 49 50 51 52 45 46 47 48
;;
;; Loop 1
;;  header 463, latch 40
;;  depth 1, outer 0
;;  nodes: 463 40
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 455 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 18 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 27 }
;; 18 succs { 19 21 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 26 }
;; 22 succs { 23 26 }
;; 23 succs { 25 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { }
;; 29 succs { 34 30 }
;; 30 succs { 31 32 }
;; 31 succs { 34 32 }
;; 32 succs { 33 35 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 62 }
;; 36 succs { 37 38 }
;; 37 succs { 41 }
;; 41 succs { 463 }
;; 38 succs { 41 }
;; 40 succs { 463 }
;; 463 succs { 40 42 }
;; 42 succs { 43 62 }
;; 43 succs { 59 }
;; 44 succs { 45 58 }
;; 45 succs { 46 49 }
;; 46 succs { 47 49 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 53 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 57 }
;; 54 succs { 55 57 }
;; 55 succs { 56 58 }
;; 56 succs { 58 }
;; 57 succs { 58 }
;; 58 succs { 59 }
;; 59 succs { 44 60 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 64 }
;; 63 succs { 64 }
;; 64 succs { 66 65 }
;; 65 succs { 66 67 }
;; 66 succs { 67 }
;; 67 succs { 68 76 }
;; 68 succs { 71 69 }
;; 69 succs { 71 70 }
;; 70 succs { 71 }
;; 71 succs { 72 76 }
;; 72 succs { 74 73 }
;; 73 succs { 74 76 }
;; 74 succs { 75 455 }
;; 75 succs { 455 }
;; 76 succs { 77 79 }
;; 77 succs { 78 79 }
;; 78 succs { 79 }
;; 79 succs { 80 82 }
;; 80 succs { 81 455 }
;; 81 succs { 455 }
;; 82 succs { 83 85 }
;; 83 succs { 84 85 }
;; 84 succs { 85 }
;; 85 succs { 86 88 }
;; 86 succs { 87 455 }
;; 87 succs { 455 }
;; 88 succs { 91 89 }
;; 89 succs { 91 90 }
;; 90 succs { 91 }
;; 91 succs { 92 94 }
;; 92 succs { 93 94 }
;; 93 succs { 94 }
;; 94 succs { 95 96 }
;; 95 succs { 96 }
;; 96 succs { 97 98 }
;; 97 succs { 98 }
;; 98 succs { 99 100 }
;; 99 succs { 100 }
;; 100 succs { 103 101 }
;; 101 succs { 102 109 }
;; 102 succs { 103 109 }
;; 103 succs { 106 104 }
;; 104 succs { 106 105 }
;; 105 succs { 106 }
;; 106 succs { 107 109 }
;; 107 succs { 109 }
;; 109 succs { 111 110 }
;; 110 succs { 111 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 221 }
;; 114 succs { 115 118 }
;; 115 succs { 118 116 }
;; 116 succs { 118 459 }
;; 459 succs { 118 }
;; 118 succs { 119 126 }
;; 119 succs { 123 }
;; 120 succs { 121 122 }
;; 121 succs { 122 }
;; 122 succs { 123 }
;; 123 succs { 124 125 }
;; 124 succs { 120 125 }
;; 125 succs { 126 }
;; 126 succs { 129 127 }
;; 127 succs { 129 128 }
;; 128 succs { 129 131 }
;; 129 succs { 130 131 }
;; 130 succs { 131 }
;; 131 succs { 132 134 }
;; 132 succs { 133 134 }
;; 133 succs { 134 }
;; 134 succs { 135 136 }
;; 135 succs { 136 }
;; 136 succs { 137 138 }
;; 137 succs { 139 }
;; 138 succs { 139 }
;; 139 succs { 140 141 }
;; 140 succs { 141 }
;; 141 succs { 142 149 }
;; 142 succs { 146 }
;; 143 succs { 144 145 }
;; 144 succs { 145 }
;; 145 succs { 146 }
;; 146 succs { 147 148 }
;; 147 succs { 143 148 }
;; 148 succs { 149 }
;; 149 succs { 150 151 }
;; 150 succs { 151 }
;; 151 succs { 154 152 }
;; 152 succs { 154 153 }
;; 153 succs { 154 158 }
;; 154 succs { 155 158 }
;; 155 succs { 156 157 }
;; 156 succs { 158 }
;; 157 succs { 158 }
;; 158 succs { 159 160 }
;; 159 succs { 163 }
;; 160 succs { 161 163 }
;; 161 succs { 162 163 }
;; 162 succs { 163 }
;; 163 succs { 164 170 }
;; 164 succs { 165 166 }
;; 165 succs { 167 }
;; 166 succs { 167 }
;; 167 succs { 169 168 }
;; 168 succs { 169 }
;; 169 succs { 170 }
;; 170 succs { 171 172 }
;; 171 succs { 172 }
;; 172 succs { 173 174 }
;; 173 succs { 174 }
;; 174 succs { 177 175 }
;; 175 succs { 177 176 }
;; 176 succs { 177 }
;; 177 succs { 178 179 }
;; 178 succs { 179 }
;; 179 succs { 182 180 }
;; 180 succs { 182 181 }
;; 181 succs { 182 }
;; 182 succs { 183 184 }
;; 183 succs { 184 }
;; 184 succs { 185 188 }
;; 185 succs { 186 187 }
;; 186 succs { 188 }
;; 187 succs { 188 }
;; 188 succs { 189 213 }
;; 189 succs { 192 190 }
;; 190 succs { 192 191 }
;; 191 succs { 192 }
;; 192 succs { 193 200 }
;; 193 succs { 196 194 }
;; 194 succs { 196 195 }
;; 195 succs { 196 }
;; 196 succs { 197 200 }
;; 197 succs { 198 200 }
;; 198 succs { 199 200 }
;; 199 succs { 200 }
;; 200 succs { 202 201 }
;; 201 succs { 202 213 }
;; 202 succs { 205 203 }
;; 203 succs { 205 204 }
;; 204 succs { 205 }
;; 205 succs { 206 213 }
;; 206 succs { 209 207 }
;; 207 succs { 209 208 }
;; 208 succs { 209 }
;; 209 succs { 210 213 }
;; 210 succs { 211 213 }
;; 211 succs { 212 213 }
;; 212 succs { 213 }
;; 213 succs { 214 258 }
;; 214 succs { 215 258 }
;; 215 succs { 218 216 }
;; 216 succs { 218 217 }
;; 217 succs { 218 }
;; 218 succs { 219 258 }
;; 219 succs { 220 258 }
;; 220 succs { 258 }
;; 221 succs { 222 258 }
;; 222 succs { 223 226 }
;; 223 succs { 224 226 }
;; 224 succs { 225 226 }
;; 225 succs { 226 }
;; 226 succs { 229 227 }
;; 227 succs { 228 257 }
;; 228 succs { 229 257 }
;; 257 succs { 462 }
;; 229 succs { 230 232 }
;; 230 succs { 232 458 }
;; 458 succs { 232 }
;; 232 succs { 233 234 }
;; 233 succs { 235 234 }
;; 234 succs { 235 237 }
;; 235 succs { 236 237 }
;; 236 succs { 237 }
;; 237 succs { 238 258 }
;; 238 succs { 258 }
;; 240 succs { 241 242 }
;; 241 succs { 256 }
;; 242 succs { 244 243 }
;; 243 succs { 244 245 }
;; 244 succs { 245 }
;; 245 succs { 246 256 }
;; 246 succs { 247 248 }
;; 247 succs { 249 248 }
;; 248 succs { 249 251 }
;; 249 succs { 250 251 }
;; 250 succs { 251 }
;; 251 succs { 254 252 }
;; 252 succs { 457 254 }
;; 457 succs { 254 }
;; 254 succs { 255 256 }
;; 255 succs { 256 }
;; 256 succs { 462 }
;; 462 succs { 240 258 }
;; 258 succs { 259 449 }
;; 259 succs { 260 262 }
;; 260 succs { 261 262 }
;; 261 succs { 262 }
;; 262 succs { 263 264 }
;; 263 succs { 264 }
;; 264 succs { 265 266 }
;; 265 succs { 266 }
;; 266 succs { 448 449 }
;; 448 succs { 460 }
;; 267 succs { 268 269 }
;; 268 succs { 269 }
;; 269 succs { 270 272 }
;; 270 succs { 271 272 }
;; 271 succs { 275 272 }
;; 272 succs { 275 273 }
;; 273 succs { 456 275 }
;; 456 succs { 275 }
;; 275 succs { 276 284 }
;; 276 succs { 277 299 }
;; 277 succs { 281 }
;; 278 succs { 279 280 }
;; 279 succs { 280 }
;; 280 succs { 281 }
;; 281 succs { 282 283 }
;; 282 succs { 278 283 }
;; 283 succs { 299 }
;; 284 succs { 285 299 }
;; 285 succs { 298 }
;; 286 succs { 287 288 }
;; 287 succs { 297 }
;; 288 succs { 289 291 }
;; 289 succs { 290 291 }
;; 290 succs { 297 }
;; 291 succs { 292 295 }
;; 292 succs { 293 294 }
;; 293 succs { 297 }
;; 294 succs { 295 }
;; 295 succs { 296 297 }
;; 296 succs { 297 }
;; 297 succs { 298 }
;; 298 succs { 286 299 }
;; 299 succs { 300 329 }
;; 300 succs { 301 302 }
;; 301 succs { 302 }
;; 302 succs { 303 304 }
;; 303 succs { 304 }
;; 304 succs { 305 306 }
;; 305 succs { 311 }
;; 306 succs { 307 308 }
;; 307 succs { 308 }
;; 308 succs { 309 310 }
;; 309 succs { 311 }
;; 310 succs { 311 }
;; 311 succs { 312 313 }
;; 312 succs { 313 }
;; 313 succs { 314 322 }
;; 314 succs { 319 }
;; 315 succs { 316 318 }
;; 316 succs { 317 318 }
;; 317 succs { 318 }
;; 318 succs { 319 }
;; 319 succs { 320 321 }
;; 320 succs { 315 321 }
;; 321 succs { 322 }
;; 322 succs { 323 376 }
;; 323 succs { 324 325 }
;; 324 succs { 326 }
;; 325 succs { 326 }
;; 326 succs { 328 327 }
;; 327 succs { 328 }
;; 328 succs { 376 }
;; 329 succs { 330 376 }
;; 330 succs { 375 }
;; 331 succs { 332 333 }
;; 332 succs { 374 }
;; 333 succs { 334 336 }
;; 334 succs { 335 336 }
;; 335 succs { 374 }
;; 336 succs { 337 340 }
;; 337 succs { 338 339 }
;; 338 succs { 374 }
;; 339 succs { 340 }
;; 340 succs { 341 342 }
;; 341 succs { 342 }
;; 342 succs { 343 344 }
;; 343 succs { 344 }
;; 344 succs { 345 346 }
;; 345 succs { 346 }
;; 346 succs { 347 348 }
;; 347 succs { 349 }
;; 348 succs { 349 }
;; 349 succs { 352 350 }
;; 350 succs { 352 351 }
;; 351 succs { 352 }
;; 352 succs { 353 354 }
;; 353 succs { 368 }
;; 354 succs { 355 356 }
;; 355 succs { 356 }
;; 356 succs { 357 358 }
;; 357 succs { 358 }
;; 358 succs { 361 359 }
;; 359 succs { 361 360 }
;; 360 succs { 361 }
;; 361 succs { 362 363 }
;; 362 succs { 363 }
;; 363 succs { 366 364 }
;; 364 succs { 366 365 }
;; 365 succs { 366 }
;; 366 succs { 367 368 }
;; 367 succs { 368 }
;; 368 succs { 371 369 }
;; 369 succs { 371 370 }
;; 370 succs { 371 }
;; 371 succs { 372 374 }
;; 372 succs { 373 374 }
;; 373 succs { 374 }
;; 374 succs { 375 }
;; 375 succs { 331 376 }
;; 376 succs { 378 377 }
;; 377 succs { 378 380 }
;; 378 succs { 379 380 }
;; 379 succs { 380 }
;; 380 succs { 383 381 }
;; 381 succs { 383 382 }
;; 382 succs { 383 }
;; 383 succs { 384 385 }
;; 384 succs { 385 }
;; 385 succs { 386 389 }
;; 386 succs { 387 388 }
;; 387 succs { 389 }
;; 388 succs { 389 }
;; 389 succs { 390 395 }
;; 390 succs { 392 391 }
;; 391 succs { 392 }
;; 392 succs { 394 393 }
;; 393 succs { 394 }
;; 394 succs { 395 }
;; 395 succs { 396 429 }
;; 396 succs { 397 398 }
;; 397 succs { 398 }
;; 398 succs { 399 400 }
;; 399 succs { 400 }
;; 400 succs { 401 403 }
;; 401 succs { 402 403 }
;; 402 succs { 403 }
;; 403 succs { 404 405 }
;; 404 succs { 405 }
;; 405 succs { 408 406 }
;; 406 succs { 408 407 }
;; 407 succs { 408 }
;; 408 succs { 409 416 }
;; 409 succs { 412 410 }
;; 410 succs { 412 411 }
;; 411 succs { 412 }
;; 412 succs { 413 416 }
;; 413 succs { 414 416 }
;; 414 succs { 415 416 }
;; 415 succs { 416 }
;; 416 succs { 418 417 }
;; 417 succs { 418 429 }
;; 418 succs { 421 419 }
;; 419 succs { 421 420 }
;; 420 succs { 421 }
;; 421 succs { 422 429 }
;; 422 succs { 425 423 }
;; 423 succs { 425 424 }
;; 424 succs { 425 }
;; 425 succs { 426 429 }
;; 426 succs { 427 429 }
;; 427 succs { 428 429 }
;; 428 succs { 429 }
;; 429 succs { 430 441 }
;; 430 succs { 431 441 }
;; 431 succs { 440 441 }
;; 440 succs { 461 }
;; 432 succs { 434 433 }
;; 433 succs { 434 439 }
;; 434 succs { 437 435 }
;; 435 succs { 437 436 }
;; 436 succs { 437 }
;; 437 succs { 438 439 }
;; 438 succs { 439 }
;; 439 succs { 461 }
;; 461 succs { 432 441 }
;; 441 succs { 442 443 }
;; 442 succs { 443 }
;; 443 succs { 449 444 }
;; 444 succs { 449 445 }
;; 445 succs { 449 446 }
;; 446 succs { 449 447 }
;; 447 succs { 460 }
;; 460 succs { 267 449 }
;; 449 succs { 450 451 }
;; 450 succs { 451 }
;; 451 succs { 452 453 }
;; 452 succs { 453 }
;; 453 succs { 454 455 }
;; 454 succs { 455 }
;; 455 succs { 1 }
Marking useful stmt: # DEBUG ptime => 0

Marking useful stmt: # DEBUG rate => 0

Marking useful stmt: # DEBUG use_cng => 1

Marking useful stmt: pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_74

Marking useful stmt: ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);

Marking useful stmt: # DEBUG ov_fmtp => ov_fmtp_76

Marking useful stmt: append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);

Marking useful stmt: # DEBUG append_audio => append_audio_78

Marking useful stmt: append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);

Marking useful stmt: # DEBUG append_video => append_video_80

Marking useful stmt: fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);

Marking useful stmt: # DEBUG fmtp_out_var => fmtp_out_var_82

Marking useful stmt: local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);

Marking useful stmt: # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_83

Marking useful stmt: local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);

Marking useful stmt: # DEBUG local_sdp_video_zrtp_hash => local_sdp_video_zrtp_hash_84

Marking useful stmt: # DEBUG vp8 => 0

Marking useful stmt: # DEBUG red => 0

Marking useful stmt: D.41513_88 = switch_channel_direction (D.41512_87);

Marking useful stmt: # DEBUG is_outbound => is_outbound_89

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_90

Marking useful stmt: # DEBUG D#28 => &smh_90->engines

Marking useful stmt: # DEBUG a_engine => D#28

Marking useful stmt: # DEBUG D#27 => &smh_90->engines[1]

Marking useful stmt: # DEBUG v_engine => D#27

Marking useful stmt: D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);

Marking useful stmt: D.41519_95 = switch_true (D.41518_94);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux = 1;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux = 1;

Marking useful stmt: D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);

Marking useful stmt: D.41522_98->rtcp_audio_interval_msec = D.41526_100;

Marking useful stmt: D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);

Marking useful stmt: D.41522_103->rtcp_video_interval_msec = D.41530_105;

Marking useful stmt: D.41531_106 = dtls_ok (session_72(D));

Marking useful stmt: tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_109

Marking useful stmt: D.41538_110 = switch_false (tmp_109);

Marking useful stmt: switch_channel_clear_flag (D.41535_112, 111);

Marking useful stmt: switch_channel_clear_flag (D.41535_114, 109);

Marking useful stmt: D.41544_116 = switch_channel_test_flag (D.41512_115, 84);

Marking useful stmt: D.41546_118 = switch_channel_test_flag (D.41512_117, 112);

Marking useful stmt: D.41547_120 = switch_channel_test_flag (D.41512_119, 106);

Marking useful stmt: D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);

Marking useful stmt: D.41551_123 = switch_true (D.41550_122);

Marking useful stmt: switch_channel_set_flag_value (D.41512_124, 106, 1);

Marking useful stmt: switch_channel_set_flag_value (D.41512_125, 108, 1);

Marking useful stmt: D.41522_126->rtcp_audio_interval_msec = "5000";

Marking useful stmt: D.41522_127->rtcp_video_interval_msec = "5000";

Marking useful stmt: D.41554_128 = switch_rtp_has_dtls ();

Marking useful stmt: D.41557_129 = dtls_ok (session_72(D));

Marking useful stmt: D.41562_131 = switch_channel_test_flag (D.41512_130, 106);

Marking useful stmt: D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);

Marking useful stmt: D.41565_135 = switch_true (D.41564_134);

Marking useful stmt: switch_channel_set_flag_value (D.41535_137, 109, 1);

Marking useful stmt: switch_channel_set_flag_value (D.41535_139, 92, 1);

Marking useful stmt: generate_local_fingerprint (smh_90, 0);

Marking useful stmt: switch_core_session_parse_crypto_prefs (session_72(D));

Marking useful stmt: switch_core_session_check_outgoing_crypto (session_72(D));

Marking useful stmt: # DEBUG fmtp_out => fmtp_out_141

Marking useful stmt: # DEBUG username => username_143

Marking useful stmt: buf_144 = calloc (1, 65536);

Marking useful stmt: # DEBUG buf => buf_144

Marking useful stmt: __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);

Marking useful stmt: switch_core_media_check_dtmf_type (session_72(D));

Marking useful stmt: D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);

Marking useful stmt: val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);

Marking useful stmt: # DEBUG val => val_147

Marking useful stmt: D.41575_148 = switch_true (val_147);

Marking useful stmt: val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);

Marking useful stmt: # DEBUG val => val_150

Marking useful stmt: D.41577_151 = switch_true (val_150);

Marking useful stmt: # DEBUG use_cng => 0

Marking useful stmt: D.41522_153->cng_pt = 0;

Marking useful stmt: # DEBUG use_cng => use_cng_17

Marking useful stmt: D.41581_156 = switch_channel_test_flag (D.41512_155, 106);

Marking useful stmt: smh_90->payload_space = 102;

Marking useful stmt: smh_90->payload_space = 98;

Marking useful stmt: smh_90->ianacodes[i_36] = D.41586_161;

Marking useful stmt: # DEBUG i => i_162

Marking useful stmt: # DEBUG i => i_36

Marking useful stmt: switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_167

Marking useful stmt: smh_90->payload_space = D.41602_178;

Marking useful stmt: D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);

Marking useful stmt: smh_90->payload_space = D.41602_190;

Marking useful stmt: D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);

Marking useful stmt: smh_90->ianacodes[i_37] = orig_pt.26_197;

Marking useful stmt: D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);

Marking useful stmt: smh_90->fmtps[i_37] = D.41628_200;

Marking useful stmt: smh_90->ianacodes[i_37] = D.41629_202;

Marking useful stmt: smh_90->payload_space = D.41602_203;

Marking useful stmt: switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);

Marking useful stmt: # DEBUG i => i_213

Marking useful stmt: # DEBUG i => i_37

Marking useful stmt: switch_core_session_rwunlock (orig_session.25_215);

Marking useful stmt: # DEBUG fmtp_out => fmtp_out_var_82

Marking useful stmt: # DEBUG fmtp_out => fmtp_out_21

Marking useful stmt: val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);

Marking useful stmt: # DEBUG val => val_218

Marking useful stmt: D.41642_219 = switch_true (val_218);

Marking useful stmt: switch_channel_set_flag_value (D.41512_220, 110, 1);

Marking useful stmt: # DEBUG s => sr_226(D)

Marking useful stmt: D.41653_229 = switch_channel_test_flag (D.41512_228, 15);

Marking useful stmt: D.41655_231 = switch_channel_test_flag (D.41512_230, 29);

Marking useful stmt: free (buf_144);

Marking useful stmt: # DEBUG buf => 0B

Marking useful stmt: # DEBUG ip => ip_233

Marking useful stmt: # DEBUG ip => ip_234

Marking useful stmt: # DEBUG ip => ip_1

Marking useful stmt: D.41664_236 = switch_channel_get_name (D.41512_235);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);

Marking useful stmt: free (buf_144);

Marking useful stmt: # DEBUG buf => 0B

Marking useful stmt: # DEBUG port => port_239

Marking useful stmt: # DEBUG port => port_240

Marking useful stmt: # DEBUG port => port_2

Marking useful stmt: D.41673_242 = switch_channel_get_name (D.41512_241);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);

Marking useful stmt: free (buf_144);

Marking useful stmt: # DEBUG buf => 0B

Marking useful stmt: # DEBUG s => sr_226(D)

Marking useful stmt: var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);

Marking useful stmt: # DEBUG var_val => var_val_246

Marking useful stmt: # DEBUG sr => var_val_246

Marking useful stmt: # DEBUG sr => sr_3

Marking useful stmt: D.41685_250 = switch_epoch_time_now (0B);

Marking useful stmt: smh_90->owner_id = D.41688_253;

Marking useful stmt: smh_90->session_id = D.41682_255;

Marking useful stmt: D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);

Marking useful stmt: D.41693_258 = switch_true (D.41692_257);

Marking useful stmt: switch_channel_set_flag_value (D.41512_259, 102, 1);

Marking useful stmt: smh_90->session_id = D.41696_261;

Marking useful stmt: var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);

Marking useful stmt: # DEBUG var_val => var_val_266

Marking useful stmt: D.41703_267 = switch_true (var_val_266);

Marking useful stmt: # DEBUG s => sr_3

Marking useful stmt: switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);

Marking useful stmt: # DEBUG sr => sr_4

Marking useful stmt: # DEBUG family => family_59

Marking useful stmt: switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_59, ip_1, username_143, family_59, ip_1, &srbuf);

Marking useful stmt: D.41712_278 = switch_channel_test_flag (D.41535_277, 108);

Marking useful stmt: gen_ice (session_72(D), 0, ip_1, port_2);

Marking useful stmt: switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);

Marking useful stmt: D.41734_292 = switch_channel_test_flag (D.41512_291, 109);

Marking useful stmt: D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);

Marking useful stmt: switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);

Marking useful stmt: switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);

Marking useful stmt: D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);

Marking useful stmt: switch_mutex_lock (D.41747_305);

Marking useful stmt: # DEBUG pmap => pmap_306

Marking useful stmt: switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);

Marking useful stmt: # DEBUG pmap => pmap_317

Marking useful stmt: # DEBUG pmap => pmap_34

Marking useful stmt: switch_mutex_unlock (D.41747_318);

Marking useful stmt: D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);

Marking useful stmt: D.41763_323 = switch_channel_test_flag (D.41512_322, 93);

Marking useful stmt: switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);

Marking useful stmt: D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);

Marking useful stmt: switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);

Marking useful stmt: switch_snprintf (D.41780_347, D.41782_349, "\n");

Marking useful stmt: # DEBUG rate => rate_351

Marking useful stmt: D.41787_357 = get_channels (D.41786_356, 1);

Marking useful stmt: D.41566_355->adv_channels = D.41787_357;

Marking useful stmt: switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);

Marking useful stmt: switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);

Marking useful stmt: switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);

Marking useful stmt: D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);

Marking useful stmt: switch_mutex_lock (D.41747_388);

Marking useful stmt: # DEBUG pmap => pmap_389

Marking useful stmt: switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);

Marking useful stmt: # DEBUG pmap => pmap_402

Marking useful stmt: # DEBUG pmap => pmap_35

Marking useful stmt: switch_mutex_unlock (D.41747_403);

Marking useful stmt: # DEBUG ptime => ptime_410

Marking useful stmt: # DEBUG ptime => ptime_5

Marking useful stmt: D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);

Marking useful stmt: D.41831_415 = switch_channel_test_flag (D.41512_414, 93);

Marking useful stmt: D.41834_419 = switch_channel_test_flag (D.41512_418, 106);

Marking useful stmt: switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);

Marking useful stmt: switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);

Marking useful stmt: D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);

Marking useful stmt: switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");

Marking useful stmt: switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);

Marking useful stmt: D.41522_455->cng_pt = 0;

Marking useful stmt: switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);

Marking useful stmt: switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

Marking useful stmt: switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

Marking useful stmt: # DEBUG s => sr_4

Marking useful stmt: switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);

Marking useful stmt: # DEBUG s => D.41899_481

Marking useful stmt: switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);

Marking useful stmt: switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");

Marking useful stmt: switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_59, ip_1);

Marking useful stmt: switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_59, ip_1);

Marking useful stmt: # DEBUG c1 => 659136

Marking useful stmt: # DEBUG c2 => 659134

Marking useful stmt: # DEBUG c3 => 659126

Marking useful stmt: # DEBUG c4 => 659124

Marking useful stmt: switch_stun_random_string (&tmp1, 10, "0123456789");

Marking useful stmt: switch_stun_random_string (&tmp2, 10, "0123456789");

Marking useful stmt: # DEBUG D#25 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out

Marking useful stmt: # DEBUG ice_out => D#25

Marking useful stmt: switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);

Marking useful stmt: switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);

Marking useful stmt: switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);

Marking useful stmt: switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);

Marking useful stmt: switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);

Marking useful stmt: switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);

Marking useful stmt: switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, 659136, D.41963_552, D.41965_554);

Marking useful stmt: # DEBUG s => D.41966_555

Marking useful stmt: # DEBUG s => D.41963_557

Marking useful stmt: switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, 659126, D.41963_569, D.41965_571, D.41966_572, D.41982_574);

Marking useful stmt: D.41989_580 = switch_channel_test_flag (D.41512_579, 84);

Marking useful stmt: switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, 659134, D.41963_586, D.41995_591);

Marking useful stmt: # DEBUG s => D.41966_592

Marking useful stmt: # DEBUG s => D.41963_594

Marking useful stmt: switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, 659124, D.41963_606, D.41995_611, D.41966_612, D.42010_617);

Marking useful stmt: D.42013_620 = switch_channel_test_flag (D.41512_619, 109);

Marking useful stmt: # DEBUG s => D.42016_622

Marking useful stmt: D.42020_625 = switch_channel_test_flag (D.41512_624, 92);

Marking useful stmt: switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);

Marking useful stmt: # DEBUG cur_ptime => 0

Marking useful stmt: # DEBUG this_ptime => 0

Marking useful stmt: # DEBUG cng_type => 0

Marking useful stmt: D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);

Marking useful stmt: # DEBUG cng_type => cng_type_645

Marking useful stmt: D.41522_647->cng_pt = 0;

Marking useful stmt: # DEBUG cng_type => cng_type_42

Marking useful stmt: mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);

Marking useful stmt: # DEBUG mult => mult_649

Marking useful stmt: D.42039_651 = switch_channel_test_flag (D.41512_650, 106);

Marking useful stmt: D.42042_652 = switch_false (mult_649);

Marking useful stmt: # DEBUG bp => buf_144

Marking useful stmt: D.42046_691 = switch_channel_test_flag (D.41512_690, 106);

Marking useful stmt: D.42048_693 = switch_channel_test_flag (D.41512_692, 109);

Marking useful stmt: # DEBUG both => both_63

Marking useful stmt: D.42054_699 = switch_channel_test_flag (D.41512_698, 92);

Marking useful stmt: D.42055_701 = switch_channel_test_flag (D.41512_700, 109);

Marking useful stmt: generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);

Marking useful stmt: # DEBUG bp => bp_704

Marking useful stmt: # DEBUG both => 0

Marking useful stmt: # DEBUG both => both_44

Marking useful stmt: # DEBUG bp => bp_43

Marking useful stmt: generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);

Marking useful stmt: # DEBUG imp => imp_656

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG this_ptime => this_ptime_659

Marking useful stmt: # DEBUG this_ptime => 20

Marking useful stmt: # DEBUG this_ptime => this_ptime_41

Marking useful stmt: # DEBUG bp => buf_144

Marking useful stmt: # DEBUG both => 1

Marking useful stmt: # DEBUG cur_ptime => this_ptime_41

Marking useful stmt: D.42081_670 = switch_channel_test_flag (D.41512_669, 92);

Marking useful stmt: D.42082_672 = switch_channel_test_flag (D.41512_671, 109);

Marking useful stmt: generate_m.isra.4 (session_72(D), buf_144, D.42084_674, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);

Marking useful stmt: # DEBUG bp => bp_677

Marking useful stmt: # DEBUG both => 0

Marking useful stmt: # DEBUG both => both_46

Marking useful stmt: # DEBUG bp => bp_45

Marking useful stmt: D.42090_681 = switch_channel_test_flag (D.41512_680, 106);

Marking useful stmt: D.42092_683 = switch_channel_test_flag (D.41512_682, 109);

Marking useful stmt: # DEBUG both => both_47

Marking useful stmt: generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);

Marking useful stmt: # DEBUG cur_ptime => cur_ptime_39

Marking useful stmt: # DEBUG i => i_688

Marking useful stmt: # DEBUG cur_ptime => cur_ptime_40

Marking useful stmt: # DEBUG i => i_38

Marking useful stmt: # DEBUG rate => rate_11

Marking useful stmt: # DEBUG ptime => ptime_6

Marking useful stmt: D.42097_711 = switch_channel_test_flag (D.41512_710, 98);

Marking useful stmt: D.42100_713 = switch_channel_direction (D.41512_712);

Marking useful stmt: D.42103_716 = switch_channel_test_flag (D.41535_715, 109);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].no_crypto = 1;

Marking useful stmt: switch_core_media_choose_port (session_72(D), 1, 0);

Marking useful stmt: D.42109_719 = switch_channel_test_flag (D.41512_718, 106);

Marking useful stmt: switch_media_handle_set_media_flag (smh_90, 16);

Marking useful stmt: # DEBUG v_port => v_port_721

Marking useful stmt: D.42115_725 = switch_channel_test_flag (D.41535_724, 108);

Marking useful stmt: gen_ice (session_72(D), 1, ip_1, D.42118_726);

Marking useful stmt: D.42129_732 = switch_channel_test_flag (D.41512_731, 92);

Marking useful stmt: D.42131_734 = switch_channel_direction (D.41512_733);

Marking useful stmt: D.42133_737 = switch_channel_test_flag (D.41512_736, 109);

Marking useful stmt: D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);

Marking useful stmt: switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);

Marking useful stmt: switch_core_media_set_video_codec (session_72(D), 0);

Marking useful stmt: switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);

Marking useful stmt: D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);

Marking useful stmt: switch_mutex_lock (D.41747_750);

Marking useful stmt: # DEBUG pmap => pmap_751

Marking useful stmt: switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);

Marking useful stmt: # DEBUG pmap => pmap_762

Marking useful stmt: # DEBUG pmap => pmap_49

Marking useful stmt: switch_mutex_unlock (D.41747_763);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_769

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.42165_772 = switch_channel_direction (D.41512_771);

Marking useful stmt: D.42168_774 = switch_channel_test_flag (D.41512_773, 114);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);

Marking useful stmt: # DEBUG ptime => ptime_789

Marking useful stmt: # DEBUG ptime => ptime_7

Marking useful stmt: # DEBUG i => i_790

Marking useful stmt: # DEBUG i => i_50

Marking useful stmt: # DEBUG ptime => ptime_8

Marking useful stmt: # DEBUG ptime => ptime_9

Marking useful stmt: switch_snprintf (D.42187_792, D.42189_794, "\n");

Marking useful stmt: # DEBUG vp8 => vp8_801

Marking useful stmt: # DEBUG vp8 => vp8_22

Marking useful stmt: # DEBUG red => red_807

Marking useful stmt: # DEBUG red => red_28

Marking useful stmt: # DEBUG rate => rate_809

Marking useful stmt: switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);

Marking useful stmt: D.42205_822 = switch_channel_test_flag (D.41512_821, 84);

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_824

Marking useful stmt: # DEBUG pass_fmtp => 0B

Marking useful stmt: D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);

Marking useful stmt: of_829 = switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");

Marking useful stmt: # DEBUG of => of_829

Marking useful stmt: # DEBUG pass_fmtp => ov_fmtp_76

Marking useful stmt: pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_833

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_18

Marking useful stmt: switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);

Marking useful stmt: D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);

Marking useful stmt: switch_mutex_lock (D.41747_842);

Marking useful stmt: # DEBUG pmap => pmap_843

Marking useful stmt: switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);

Marking useful stmt: # DEBUG pmap => pmap_857

Marking useful stmt: # DEBUG pmap => pmap_51

Marking useful stmt: switch_mutex_unlock (D.41747_858);

Marking useful stmt: switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);

Marking useful stmt: # DEBUG i => 0

Marking useful stmt: # DEBUG imp => imp_876

Marking useful stmt: # DEBUG fmtp => 0B

Marking useful stmt: # DEBUG ianacode => ianacode_879

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: D.42266_882 = switch_channel_direction (D.41512_881);

Marking useful stmt: D.42269_884 = switch_channel_test_flag (D.41512_883, 114);

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG rate => rate_886

Marking useful stmt: # DEBUG rate => rate_12

Marking useful stmt: channels_890 = get_channels (D.42279_887, D.42281_889);

Marking useful stmt: # DEBUG channels => channels_890

Marking useful stmt: # DEBUG vp8 => vp8_893

Marking useful stmt: # DEBUG vp8 => vp8_23

Marking useful stmt: # DEBUG red => red_896

Marking useful stmt: # DEBUG red => red_29

Marking useful stmt: switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);

Marking useful stmt: switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);

Marking useful stmt: # DEBUG s => ov_fmtp_76

Marking useful stmt: # DEBUG fmtp => ov_fmtp_76

Marking useful stmt: fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);

Marking useful stmt: # DEBUG fmtp => fmtp_914

Marking useful stmt: # DEBUG fmtp => fmtp_53

Marking useful stmt: # DEBUG fmtp => fmtp_916

Marking useful stmt: # DEBUG fmtp => fmtp_54

Marking useful stmt: # DEBUG s => fmtp_54

Marking useful stmt: # DEBUG fmtp => fmtp_918

Marking useful stmt: # DEBUG fmtp => fmtp_55

Marking useful stmt: # DEBUG s => fmtp_55

Marking useful stmt: # DEBUG fmtp => pass_fmtp_20

Marking useful stmt: # DEBUG fmtp => fmtp_56

Marking useful stmt: # DEBUG s => fmtp_56

Marking useful stmt: switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);

Marking useful stmt: # DEBUG red => red_30

Marking useful stmt: # DEBUG vp8 => vp8_24

Marking useful stmt: # DEBUG rate => rate_13

Marking useful stmt: # DEBUG i => i_927

Marking useful stmt: # DEBUG i => i_52

Marking useful stmt: # DEBUG red => red_31

Marking useful stmt: # DEBUG vp8 => vp8_25

Marking useful stmt: # DEBUG rate => rate_14

Marking useful stmt: # DEBUG red => red_32

Marking useful stmt: # DEBUG vp8 => vp8_26

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_19

Marking useful stmt: # DEBUG rate => rate_15

Marking useful stmt: D.42328_929 = switch_channel_test_flag (D.41512_928, 84);

Marking useful stmt: D.42329_932 = switch_channel_test_flag (D.41535_931, 109);

Marking useful stmt: generate_local_fingerprint (smh_90, 1);

Marking useful stmt: # DEBUG s => D.42332_933

Marking useful stmt: switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);

Marking useful stmt: switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");

Marking useful stmt: switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_59, ip_1);

Marking useful stmt: switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_59, ip_1);

Marking useful stmt: switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);

Marking useful stmt: # DEBUG c1 => 659136

Marking useful stmt: # DEBUG c2 => 659134

Marking useful stmt: # DEBUG c3 => 659126

Marking useful stmt: # DEBUG c4 => 659124

Marking useful stmt: # DEBUG bw => 256

Marking useful stmt: switch_stun_random_string (&tmp1, 10, "0123456789");

Marking useful stmt: switch_stun_random_string (&tmp2, 10, "0123456789");

Marking useful stmt: # DEBUG D#26 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out

Marking useful stmt: # DEBUG ice_out => D#26

Marking useful stmt: vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);

Marking useful stmt: # DEBUG vbw => vbw_978

Marking useful stmt: # DEBUG __nptr => vbw_978

Marking useful stmt: v_1546 = strtol (vbw_978, 0B, 10);

Marking useful stmt: # DEBUG v => NULL

Marking useful stmt: # DEBUG bw => v_1546

Marking useful stmt: # DEBUG bw => bw_57

Marking useful stmt: switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);

Marking useful stmt: D.42391_986 = switch_channel_test_flag (D.41512_985, 106);

Marking useful stmt: switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);

Marking useful stmt: switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);

Marking useful stmt: switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);

Marking useful stmt: switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);

Marking useful stmt: switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);

Marking useful stmt: switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);

Marking useful stmt: switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);

Marking useful stmt: switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);

Marking useful stmt: switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, 659136, D.41963_1034, D.41965_1036);

Marking useful stmt: # DEBUG s => D.42433_1037

Marking useful stmt: # DEBUG s => D.41963_1039

Marking useful stmt: switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, 659126, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);

Marking useful stmt: D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);

Marking useful stmt: switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, 659134, D.41963_1068, D.42460_1073);

Marking useful stmt: # DEBUG s => D.42433_1074

Marking useful stmt: # DEBUG s => D.42464_1076

Marking useful stmt: switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, 659124, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);

Marking useful stmt: D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);

Marking useful stmt: D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);

Marking useful stmt: # DEBUG j => j_1107

Marking useful stmt: # DEBUG s => D.42490_1110

Marking useful stmt: switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);

Marking useful stmt: # DEBUG i => i_1117

Marking useful stmt: # DEBUG i => i_58

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

Marking useful stmt: switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

Marking useful stmt: D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);

Marking useful stmt: D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);

Marking useful stmt: # DEBUG loops => loops_1128

Marking useful stmt: # DEBUG loops => loops_48

Marking useful stmt: # DEBUG red => red_33

Marking useful stmt: # DEBUG vp8 => vp8_27

Marking useful stmt: # DEBUG pass_fmtp => pass_fmtp_20

Marking useful stmt: # DEBUG rate => rate_16

Marking useful stmt: # DEBUG ptime => ptime_10

Marking useful stmt: switch_event_destroy (&map);

Marking useful stmt: switch_event_destroy (&ptmap);

Marking useful stmt: switch_core_media_set_local_sdp (session_72(D), buf_144, 1);

Marking useful stmt: free (buf_144);

Marking useful stmt: # DEBUG buf => 0B

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = loops_48)
(get_scalar_evolution 
  (scalar = loops_48)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
loops_48 = PHI <loops_1201(448), loops_1128(447)>
)
  (init_cond = 0))
(analyze_evolution_in_loop 
  (loop_phi_node = loops_48 = PHI <loops_1201(448), loops_1128(447)>
)
(add_to_evolution 
  (loop_nb = 6)
  (chrec_before = 0)
  (to_add = 1)
  (res = {0, +, 1}_6))
  (evolution_function = {0, +, 1}_6))
(set_scalar_evolution 
  instantiated_below = 448 
  (scalar = loops_48)
  (scalar_evolution = {0, +, 1}_6))
)
(analyze_scalar_evolution 
  (loop_nb = 6)
  (scalar = 1)
(get_scalar_evolution 
  (scalar = 1)
  (scalar_evolution = 1))
)
Analyzing # of iterations of loop 6
  exit condition [0, + , 1](no_overflow) <= 1
  bounds on difference of bases: 1 ... 1
  result:
    # of iterations 2, bounded by 2
Found loop 6 to be finite: iterating 2 times
can not prove finiteness of loop 11
Marking useful stmt: if (D.42486_1105 != 9)

(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = D.42240_844)
(get_scalar_evolution 
  (scalar = D.42240_844)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 314 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = D.42240_844)
(get_scalar_evolution 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
(set_scalar_evolution 
  instantiated_below = 314 
  (scalar = D.42240_844)
  (scalar_evolution = D.42240_844))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = pmap_51)
(get_scalar_evolution 
  (scalar = pmap_51)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_51 = PHI <pmap_843(314), pmap_857(318)>
)
  (init_cond = pmap_843))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_51 = PHI <pmap_843(314), pmap_857(318)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 314 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
)
(analyze_scalar_evolution 
  (loop_nb = 10)
  (scalar = pmap_51)
(get_scalar_evolution 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
(set_scalar_evolution 
  instantiated_below = 314 
  (scalar = pmap_51)
  (scalar_evolution = pmap_51))
)
can not prove finiteness of loop 10
Marking useful stmt: if (D.42240_844 != 0)

(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 330 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
(analyze_scalar_evolution 
  (loop_nb = 9)
  (scalar = D.41587_875)
(get_scalar_evolution 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
(set_scalar_evolution 
  instantiated_below = 330 
  (scalar = D.41587_875)
  (scalar_evolution = D.41587_875))
)
can not prove finiteness of loop 9
Marking useful stmt: if (D.41587_875 > i_52)

(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.42158_752)
(get_scalar_evolution 
  (scalar = D.42158_752)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = D.42158_752)
(get_scalar_evolution 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = D.42158_752)
  (scalar_evolution = D.42158_752))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = pmap_49)
(get_scalar_evolution 
  (scalar = pmap_49)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_49 = PHI <pmap_751(277), pmap_762(280)>
)
  (init_cond = pmap_751))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_49 = PHI <pmap_751(277), pmap_762(280)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
)
(analyze_scalar_evolution 
  (loop_nb = 8)
  (scalar = pmap_49)
(get_scalar_evolution 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
(set_scalar_evolution 
  instantiated_below = 277 
  (scalar = pmap_49)
  (scalar_evolution = pmap_49))
)
can not prove finiteness of loop 8
Marking useful stmt: if (D.42158_752 != 0)

(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 285 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
(analyze_scalar_evolution 
  (loop_nb = 7)
  (scalar = D.41587_768)
(get_scalar_evolution 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
(set_scalar_evolution 
  instantiated_below = 285 
  (scalar = D.41587_768)
  (scalar_evolution = D.41587_768))
)
can not prove finiteness of loop 7
Marking useful stmt: if (D.41587_768 > i_50)

(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41757_390)
(get_scalar_evolution 
  (scalar = D.41757_390)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 142 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41757_390)
(get_scalar_evolution 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
(set_scalar_evolution 
  instantiated_below = 142 
  (scalar = D.41757_390)
  (scalar_evolution = D.41757_390))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = pmap_35)
(get_scalar_evolution 
  (scalar = pmap_35)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_35 = PHI <pmap_389(142), pmap_402(145)>
)
  (init_cond = pmap_389))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_35 = PHI <pmap_389(142), pmap_402(145)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 142 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = pmap_35)
(get_scalar_evolution 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
(set_scalar_evolution 
  instantiated_below = 142 
  (scalar = pmap_35)
  (scalar_evolution = pmap_35))
)
can not prove finiteness of loop 5
Marking useful stmt: if (D.41757_390 != 0)

(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41757_307)
(get_scalar_evolution 
  (scalar = D.41757_307)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 119 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41757_307)
(get_scalar_evolution 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
(set_scalar_evolution 
  instantiated_below = 119 
  (scalar = D.41757_307)
  (scalar_evolution = D.41757_307))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = pmap_34)
(get_scalar_evolution 
  (scalar = pmap_34)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_34 = PHI <pmap_306(119), pmap_317(122)>
)
  (init_cond = pmap_306))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_34 = PHI <pmap_306(119), pmap_317(122)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 119 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = pmap_34)
(get_scalar_evolution 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
(set_scalar_evolution 
  instantiated_below = 119 
  (scalar = pmap_34)
  (scalar_evolution = pmap_34))
)
can not prove finiteness of loop 4
Marking useful stmt: if (D.41757_307 != 0)

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 257 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41587_655)
(get_scalar_evolution 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
(set_scalar_evolution 
  instantiated_below = 257 
  (scalar = D.41587_655)
  (scalar_evolution = D.41587_655))
)
can not prove finiteness of loop 3
Marking useful stmt: if (D.41587_655 > i_38)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41587_166)
(get_scalar_evolution 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
(set_scalar_evolution 
  instantiated_below = 43 
  (scalar = D.41587_166)
  (scalar_evolution = D.41587_166))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.41587_166 > i_37)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 41 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41587_159)
(get_scalar_evolution 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
(set_scalar_evolution 
  instantiated_below = 41 
  (scalar = D.41587_159)
  (scalar_evolution = D.41587_159))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.41587_159 > i_36)


Processing worklist:
processing: if (D.41587_159 > i_36)

Marking useful stmt: if (D.41578_154 == 0)

marking necessary through D.41587_159 stmt D.41587_159 = D.41522_158->num_codecs;
marking necessary through i_36 stmt i_36 = PHI <i_1577(41), i_162(40)>
processing: i_36 = PHI <i_1577(41), i_162(40)>

marking necessary through i_1577 stmt i_1577 = PHI <0(38), 0(37)>
marking necessary through i_162 stmt i_162 = i_36 + 1;
processing: i_162 = i_36 + 1;

processing: i_1577 = PHI <0(38), 0(37)>

processing: D.41587_159 = D.41522_158->num_codecs;

marking necessary through D.41522_158 stmt D.41522_158 = smh_90->mparams;
marking necessary through .MEM_1261 stmt ptmap = 0B;
marking necessary through .MEM_1260 stmt map = 0B;
marking necessary through .MEM_1258 stmt srbuf = "";
processing: srbuf = "";

processing: map = 0B;

processing: ptmap = 0B;

processing: D.41522_158 = smh_90->mparams;

marking necessary through smh_90 stmt smh_90 = session_72(D)->media_handle;
processing: smh_90 = session_72(D)->media_handle;

Marking useful stmt: if (session_72(D) == 0B)

processing: if (session_72(D) == 0B)

processing: if (D.41578_154 == 0)

Marking useful stmt: if (buf_144 == 0B)

marking necessary through D.41578_154 stmt D.41578_154 = smh_90->payload_space;
processing: D.41578_154 = smh_90->payload_space;

processing: if (buf_144 == 0B)

Marking useful stmt: if (smh_90 == 0B)

processing: if (smh_90 == 0B)

processing: if (D.41587_166 > i_37)

Marking useful stmt: if (sdp_type_163(D) == 0)

marking necessary through D.41587_166 stmt D.41587_166 = D.41522_165->num_codecs;
marking necessary through i_37 stmt i_37 = PHI <0(43), i_213(58)>
processing: i_37 = PHI <0(43), i_213(58)>

marking necessary through i_213 stmt i_213 = i_37 + 1;
processing: i_213 = i_37 + 1;

processing: D.41587_166 = D.41522_165->num_codecs;

marking necessary through D.41522_165 stmt D.41522_165 = smh_90->mparams;
marking necessary through .MEM_1309 stmt orig_session = 0B;
marking necessary through .MEM_1312 stmt orig_fmtp = 0B;
marking necessary through .MEM_1311 stmt orig_pt = 0;
processing: orig_pt = 0;

processing: orig_fmtp = 0B;

processing: orig_session = 0B;

processing: D.41522_165 = smh_90->mparams;

processing: if (sdp_type_163(D) == 0)

processing: if (D.41587_655 > i_38)

Marking useful stmt: if (mult_649 != 0B)

Marking useful stmt: if (D.42042_652 != 0)

marking necessary through D.41587_655 stmt D.41587_655 = D.41522_654->num_codecs;
marking necessary through i_38 stmt i_38 = PHI <i_1104(257), i_688(256)>
processing: i_38 = PHI <i_1104(257), i_688(256)>

marking necessary through i_1104 stmt i_1104 = PHI <0(228), 0(227)>
marking necessary through i_688 stmt i_688 = i_38 + 1;
processing: i_688 = i_38 + 1;

processing: i_1104 = PHI <0(228), 0(227)>

processing: D.41587_655 = D.41522_654->num_codecs;

marking necessary through D.41522_654 stmt D.41522_654 = smh_90->mparams;
processing: D.41522_654 = smh_90->mparams;

processing: if (D.42042_652 != 0)

processing: if (mult_649 != 0B)

Marking useful stmt: if (D.42039_651 != 0)

processing: if (D.42039_651 != 0)

Marking useful stmt: if (D.41587_633 != 0)

processing: if (D.41587_633 != 0)

Marking useful stmt: if (D.41720_284 != 0)

marking necessary through D.41587_633 stmt D.41587_633 = D.41522_632->num_codecs;
processing: D.41587_633 = D.41522_632->num_codecs;

marking necessary through D.41522_632 stmt D.41522_632 = smh_90->mparams;
processing: D.41522_632 = smh_90->mparams;

processing: if (D.41720_284 != 0)

Marking useful stmt: if (port_2 == 0)

marking necessary through D.41720_284 stmt D.41720_284 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
processing: D.41720_284 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;

processing: if (port_2 == 0)

Marking useful stmt: if (ip_1 == 0B)

marking necessary through port_2 stmt port_2 = PHI <port_238(D)(82), port_239(83), port_240(84)>
processing: port_2 = PHI <port_238(D)(82), port_239(83), port_240(84)>

marking necessary through port_239 stmt port_239 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_port;
marking necessary through port_240 stmt port_240 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_port;
Marking useful stmt: if (port_238(D) == 0)

Marking useful stmt: if (port_239 == 0)

processing: if (port_239 == 0)

processing: if (port_238(D) == 0)

processing: port_240 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_port;

processing: port_239 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_port;

processing: if (ip_1 == 0B)

Marking useful stmt: if (D.41647_225 != 0)

Marking useful stmt: if (D.48131_1517 != 0)

Marking useful stmt: if (D.41655_231 != 0)

marking necessary through ip_1 stmt ip_1 = PHI <ip_223(D)(76), ip_233(77), ip_234(78)>
processing: ip_1 = PHI <ip_223(D)(76), ip_233(77), ip_234(78)>

marking necessary through ip_233 stmt ip_233 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_ip;
marking necessary through ip_234 stmt ip_234 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_ip;
Marking useful stmt: if (ip_223(D) == 0B)

Marking useful stmt: if (ip_233 == 0B)

processing: if (ip_233 == 0B)

processing: if (ip_223(D) == 0B)

processing: ip_234 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_ip;

processing: ip_233 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_ip;

processing: if (D.41655_231 != 0)

Marking useful stmt: if (D.41653_229 != 0)

processing: if (D.41653_229 != 0)

processing: if (D.48131_1517 != 0)

marking necessary through D.48131_1517 stmt D.48131_1517 = PHI <1(68), 1(69), 0(70)>
processing: D.48131_1517 = PHI <1(68), 1(69), 0(70)>

Marking useful stmt: if (sr_226(D) == 0B)

Marking useful stmt: if (D.48132_1516 == 0)

processing: if (D.48132_1516 == 0)

marking necessary through D.48132_1516 stmt D.48132_1516 = *sr_226(D);
processing: D.48132_1516 = *sr_226(D);

processing: if (sr_226(D) == 0B)

processing: if (D.41647_225 != 0)

marking necessary through D.41647_225 stmt D.41647_225 = D.41645_222 && D.41646_224;
processing: D.41647_225 = D.41645_222 && D.41646_224;

marking necessary through D.41645_222 stmt D.41645_222 = force_221(D) == 0;
marking necessary through D.41646_224 stmt D.41646_224 = ip_223(D) == 0B;
processing: D.41646_224 = ip_223(D) == 0B;

processing: D.41645_222 = force_221(D) == 0;

processing: if (D.41757_307 != 0)

Marking useful stmt: if (pmap_34 != 0B)

marking necessary through D.41757_307 stmt D.41757_307 = pmap_34->allocated;
processing: D.41757_307 = pmap_34->allocated;

marking necessary through pmap_34 stmt pmap_34 = PHI <pmap_306(119), pmap_317(122)>
processing: pmap_34 = PHI <pmap_306(119), pmap_317(122)>

Marking useful stmt: if (D.41744_304 != 0)

marking necessary through pmap_306 stmt pmap_306 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
marking necessary through pmap_317 stmt pmap_317 = pmap_34->next;
processing: pmap_317 = pmap_34->next;

processing: pmap_306 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: if (D.41744_304 != 0)

processing: if (pmap_34 != 0B)

processing: if (D.41757_390 != 0)

Marking useful stmt: if (pmap_35 != 0B)

marking necessary through D.41757_390 stmt D.41757_390 = pmap_35->allocated;
processing: D.41757_390 = pmap_35->allocated;

marking necessary through pmap_35 stmt pmap_35 = PHI <pmap_389(142), pmap_402(145)>
processing: pmap_35 = PHI <pmap_389(142), pmap_402(145)>

Marking useful stmt: if (D.41807_387 != 0)

marking necessary through pmap_389 stmt pmap_389 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
marking necessary through pmap_402 stmt pmap_402 = pmap_35->next;
processing: pmap_402 = pmap_35->next;

processing: pmap_389 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: if (D.41807_387 != 0)

processing: if (pmap_35 != 0B)

processing: if (D.41587_768 > i_50)

Marking useful stmt: if (D.41587_765 != 0)

marking necessary through D.41587_768 stmt D.41587_768 = D.41522_767->num_codecs;
marking necessary through i_50 stmt i_50 = PHI <0(285), i_790(297)>
processing: i_50 = PHI <0(285), i_790(297)>

marking necessary through i_790 stmt i_790 = i_50 + 1;
processing: i_790 = i_50 + 1;

processing: D.41587_768 = D.41522_767->num_codecs;

marking necessary through D.41522_767 stmt D.41522_767 = smh_90->mparams;
marking necessary through .MEM_1395 stmt tmp2[10] = 0;
marking necessary through .MEM_1394 stmt tmp1[10] = 0;
marking necessary through .MEM_1393 stmt tmp2 = "";
marking necessary through .MEM_1392 stmt tmp1 = "";
marking necessary through .MEM_1486 stmt tmp2[10] = 0;
marking necessary through .MEM_1485 stmt tmp1[10] = 0;
marking necessary through .MEM_1484 stmt tmp2 = "";
marking necessary through .MEM_1483 stmt tmp1 = "";
processing: tmp1 = "";

Marking useful stmt: if (D.42378_969 != 0)

processing: if (D.42378_969 != 0)

Marking useful stmt: if (loops_48 <= 1)

marking necessary through D.42378_969 stmt D.42378_969 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out.cands[0][0].ready;
processing: D.42378_969 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out.cands[0][0].ready;

processing: if (loops_48 <= 1)

Marking useful stmt: if (v_port_721 != 0)

Marking useful stmt: if (D.42058_1127 == 2)

marking necessary through loops_48 stmt loops_48 = PHI <loops_1201(448), loops_1128(447)>
processing: loops_48 = PHI <loops_1201(448), loops_1128(447)>

marking necessary through loops_1201 stmt loops_1201 = PHI <0(266)>
marking necessary through loops_1128 stmt loops_1128 = loops_48 + 1;
processing: loops_1128 = loops_48 + 1;

processing: loops_1201 = PHI <0(266)>

processing: if (D.42058_1127 == 2)

Marking useful stmt: if (D.42058_1126 == 1)

marking necessary through D.42058_1127 stmt D.42058_1127 = smh_90->crypto_mode;
processing: D.42058_1127 = smh_90->crypto_mode;

processing: if (D.42058_1126 == 1)

Marking useful stmt: if (D.42507_1125 == 0)

marking necessary through D.42058_1126 stmt D.42058_1126 = smh_90->crypto_mode;
processing: D.42058_1126 = smh_90->crypto_mode;

processing: if (D.42507_1125 == 0)

Marking useful stmt: if (D.42505_1123 != 0)

processing: if (D.42505_1123 != 0)

processing: if (v_port_721 != 0)

Marking useful stmt: if (D.42097_711 != 0)

marking necessary through v_port_721 stmt v_port_721 = (uint32_t) D.42112_720;
processing: v_port_721 = (uint32_t) D.42112_720;

marking necessary through D.42112_720 stmt D.42112_720 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].adv_sdp_port;
processing: D.42112_720 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].adv_sdp_port;

processing: if (D.42097_711 != 0)

processing: tmp2 = "";

processing: tmp1[10] = 0;

processing: tmp2[10] = 0;

processing: tmp1 = "";

Marking useful stmt: if (D.41927_507 != 0)

processing: if (D.41927_507 != 0)

marking necessary through D.41927_507 stmt D.41927_507 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out.cands[0][0].ready;
processing: D.41927_507 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out.cands[0][0].ready;

processing: tmp2 = "";

processing: tmp1[10] = 0;

processing: tmp2[10] = 0;

processing: D.41522_767 = smh_90->mparams;

processing: if (D.41587_765 != 0)

Marking useful stmt: if (D.42135_741 != 0)

marking necessary through D.41587_765 stmt D.41587_765 = D.41522_764->num_codecs;
processing: D.41587_765 = D.41522_764->num_codecs;

marking necessary through D.41522_764 stmt D.41522_764 = smh_90->mparams;
processing: D.41522_764 = smh_90->mparams;

processing: if (D.42135_741 != 0)

marking necessary through D.42135_741 stmt D.42135_741 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
processing: D.42135_741 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;

processing: if (D.42158_752 != 0)

Marking useful stmt: if (pmap_49 != 0B)

marking necessary through D.42158_752 stmt D.42158_752 = pmap_49->allocated;
processing: D.42158_752 = pmap_49->allocated;

marking necessary through pmap_49 stmt pmap_49 = PHI <pmap_751(277), pmap_762(280)>
processing: pmap_49 = PHI <pmap_751(277), pmap_762(280)>

Marking useful stmt: if (D.42145_749 != 0)

marking necessary through pmap_751 stmt pmap_751 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
marking necessary through pmap_762 stmt pmap_762 = pmap_49->next;
processing: pmap_762 = pmap_49->next;

processing: pmap_751 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: if (D.42145_749 != 0)

processing: if (pmap_49 != 0B)

processing: if (D.41587_875 > i_52)

Marking useful stmt: if (D.41587_872 != 0)

marking necessary through D.41587_875 stmt D.41587_875 = D.41522_874->num_codecs;
marking necessary through i_52 stmt i_52 = PHI <0(330), i_927(374)>
processing: i_52 = PHI <0(330), i_927(374)>

marking necessary through i_927 stmt i_927 = i_52 + 1;
processing: i_927 = i_52 + 1;

processing: D.41587_875 = D.41522_874->num_codecs;

marking necessary through D.41522_874 stmt D.41522_874 = smh_90->mparams;
processing: D.41522_874 = smh_90->mparams;

processing: if (D.41587_872 != 0)

Marking useful stmt: if (D.42135_795 != 0)

marking necessary through D.41587_872 stmt D.41587_872 = D.41522_871->num_codecs;
processing: D.41587_872 = D.41522_871->num_codecs;

marking necessary through D.41522_871 stmt D.41522_871 = smh_90->mparams;
processing: D.41522_871 = smh_90->mparams;

processing: if (D.42135_795 != 0)

marking necessary through D.42135_795 stmt D.42135_795 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
processing: D.42135_795 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;

processing: if (D.42240_844 != 0)

Marking useful stmt: if (pmap_51 != 0B)

marking necessary through D.42240_844 stmt D.42240_844 = pmap_51->allocated;
processing: D.42240_844 = pmap_51->allocated;

marking necessary through pmap_51 stmt pmap_51 = PHI <pmap_843(314), pmap_857(318)>
processing: pmap_51 = PHI <pmap_843(314), pmap_857(318)>

Marking useful stmt: if (D.42223_841 != 0)

marking necessary through pmap_843 stmt pmap_843 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
marking necessary through pmap_857 stmt pmap_857 = pmap_51->next;
processing: pmap_857 = pmap_51->next;

processing: pmap_843 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: if (D.42223_841 != 0)

processing: if (pmap_51 != 0B)

processing: if (D.42486_1105 != 9)

Marking useful stmt: if (D.42483_1103 == 0)

marking necessary through D.42486_1105 stmt D.42486_1105 = smh_90->crypto_suite_order[i_58];
processing: D.42486_1105 = smh_90->crypto_suite_order[i_58];

marking necessary through i_58 stmt i_58 = PHI <i_1579(440), i_1117(439)>
processing: i_58 = PHI <i_1579(440), i_1117(439)>

marking necessary through i_1579 stmt i_1579 = PHI <0(431)>
marking necessary through i_1117 stmt i_1117 = i_58 + 1;
processing: i_1117 = i_58 + 1;

processing: i_1579 = PHI <0(431)>

processing: if (D.42483_1103 == 0)

Marking useful stmt: if (D.42480_1101 != 0)

processing: if (D.42480_1101 != 0)

Marking useful stmt: if (loops_48 == 0)

processing: if (loops_48 == 0)

processing: return;

processing: free (buf_144);

Marking useful stmt: if (buf_144 != 0B)

processing: if (buf_144 != 0B)

processing: switch_core_media_set_local_sdp (session_72(D), buf_144, 1);

processing: switch_event_destroy (&ptmap);

Marking useful stmt: if (ptmap.39_1130 != 0B)

processing: if (ptmap.39_1130 != 0B)

marking necessary through ptmap.39_1130 stmt ptmap.39_1130 = ptmap;
processing: ptmap.39_1130 = ptmap;

processing: switch_event_destroy (&map);

Marking useful stmt: if (map.33_1129 != 0B)

processing: if (map.33_1129 != 0B)

marking necessary through map.33_1129 stmt map.33_1129 = map;
processing: map.33_1129 = map;

processing: D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);

marking necessary through D.41512_1124 stmt D.41512_1124 = session_72(D)->channel;
processing: D.41512_1124 = session_72(D)->channel;

processing: D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);

marking necessary through D.41512_1122 stmt D.41512_1122 = session_72(D)->channel;
processing: D.41512_1122 = session_72(D)->channel;

processing: switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

Marking useful stmt: if (local_sdp_video_zrtp_hash_84 != 0B)

marking necessary through D.42502_1119 stmt D.42502_1119 = buf_144 + D.42501_1118;
marking necessary through D.42504_1121 stmt D.42504_1121 = 65536 - D.42503_1120;
processing: D.42504_1121 = 65536 - D.42503_1120;

marking necessary through D.42503_1120 stmt D.42503_1120 = strlen (buf_144);
processing: D.42503_1120 = strlen (buf_144);

processing: D.42502_1119 = buf_144 + D.42501_1118;

marking necessary through D.42501_1118 stmt D.42501_1118 = strlen (buf_144);
processing: D.42501_1118 = strlen (buf_144);

processing: if (local_sdp_video_zrtp_hash_84 != 0B)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

processing: switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);

Marking useful stmt: if (D.48210_1556 == 0)

marking necessary through D.42495_1113 stmt D.42495_1113 = buf_144 + D.42494_1112;
marking necessary through D.42497_1115 stmt D.42497_1115 = 65536 - D.42496_1114;
marking necessary through D.42498_1116 stmt D.42498_1116 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssec[j_1107].local_crypto_key;
processing: D.42498_1116 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssec[j_1107].local_crypto_key;

marking necessary through j_1107 stmt j_1107 = SUITES[D.42486_1106].type;
processing: j_1107 = SUITES[D.42486_1106].type;

marking necessary through D.42486_1106 stmt D.42486_1106 = smh_90->crypto_suite_order[i_58];
processing: D.42486_1106 = smh_90->crypto_suite_order[i_58];

processing: D.42497_1115 = 65536 - D.42496_1114;

marking necessary through D.42496_1114 stmt D.42496_1114 = strlen (buf_144);
processing: D.42496_1114 = strlen (buf_144);

processing: D.42495_1113 = buf_144 + D.42494_1112;

marking necessary through D.42494_1112 stmt D.42494_1112 = strlen (buf_144);
processing: D.42494_1112 = strlen (buf_144);

processing: if (D.48210_1556 == 0)

Marking useful stmt: if (D.41736_1108 == j_1107)

Marking useful stmt: if (D.41736_1109 == 9)

marking necessary through D.48210_1556 stmt D.48210_1556 = PHI <1(434), 1(435), 0(436)>
processing: D.48210_1556 = PHI <1(434), 1(435), 0(436)>

Marking useful stmt: if (D.42490_1110 == 0B)

Marking useful stmt: if (D.48211_1555 == 0)

processing: if (D.48211_1555 == 0)

marking necessary through D.48211_1555 stmt D.48211_1555 = MEM[(const char *)D.42490_1110];
processing: D.48211_1555 = MEM[(const char *)D.42490_1110];

marking necessary through D.42490_1110 stmt D.42490_1110 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[j_1107].local_crypto_key;
processing: D.42490_1110 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[j_1107].local_crypto_key;

processing: if (D.42490_1110 == 0B)

processing: if (D.41736_1109 == 9)

marking necessary through D.41736_1109 stmt D.41736_1109 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_1109 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: if (D.41736_1108 == j_1107)

marking necessary through D.41736_1108 stmt D.41736_1108 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_1108 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);

marking necessary through D.41512_1102 stmt D.41512_1102 = session_72(D)->channel;
processing: D.41512_1102 = session_72(D)->channel;

processing: D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);

marking necessary through D.41512_1100 stmt D.41512_1100 = session_72(D)->channel;
processing: D.41512_1100 = session_72(D)->channel;

processing: switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, 659124, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);

Marking useful stmt: if (D.42106_1081 != D.42470_1082)

marking necessary through D.42474_1084 stmt D.42474_1084 = buf_144 + D.42473_1083;
marking necessary through D.42476_1086 stmt D.42476_1086 = 65536 - D.42475_1085;
marking necessary through D.41962_1087 stmt D.41962_1087 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
marking necessary through D.41963_1088 stmt D.41963_1088 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
marking necessary through D.42460_1093 stmt D.42460_1093 = D.41965_1090 + D.42459_1092;
marking necessary through D.42433_1094 stmt D.42433_1094 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
marking necessary through D.42477_1099 stmt D.42477_1099 = D.42448_1096 + D.42459_1098;
processing: D.42477_1099 = D.42448_1096 + D.42459_1098;

marking necessary through D.42448_1096 stmt D.42448_1096 = (int) D.42106_1095;
marking necessary through D.42459_1098 stmt D.42459_1098 = D.42343_1097 <= 0;
processing: D.42459_1098 = D.42343_1097 <= 0;

marking necessary through D.42343_1097 stmt D.42343_1097 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
processing: D.42343_1097 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

processing: D.42448_1096 = (int) D.42106_1095;

marking necessary through D.42106_1095 stmt D.42106_1095 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
processing: D.42106_1095 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

processing: D.42433_1094 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: D.42460_1093 = D.41965_1090 + D.42459_1092;

marking necessary through D.41965_1090 stmt D.41965_1090 = (int) D.41964_1089;
marking necessary through D.42459_1092 stmt D.42459_1092 = D.42343_1091 <= 0;
processing: D.42459_1092 = D.42343_1091 <= 0;

marking necessary through D.42343_1091 stmt D.42343_1091 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
processing: D.42343_1091 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

processing: D.41965_1090 = (int) D.41964_1089;

marking necessary through D.41964_1089 stmt D.41964_1089 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
processing: D.41964_1089 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

processing: D.41963_1088 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: D.41962_1087 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

processing: D.42476_1086 = 65536 - D.42475_1085;

marking necessary through D.42475_1085 stmt D.42475_1085 = strlen (buf_144);
processing: D.42475_1085 = strlen (buf_144);

processing: D.42474_1084 = buf_144 + D.42473_1083;

marking necessary through D.42473_1083 stmt D.42473_1083 = strlen (buf_144);
processing: D.42473_1083 = strlen (buf_144);

processing: if (D.42106_1081 != D.42470_1082)

Marking useful stmt: if (D.39675_1080 != 0)

marking necessary through D.42106_1081 stmt D.42106_1081 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
marking necessary through D.42470_1082 stmt D.42470_1082 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_port;
processing: D.42470_1082 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_port;

processing: D.42106_1081 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

processing: if (D.39675_1080 != 0)

Marking useful stmt: if (D.48206_1554 == 0)

marking necessary through D.39675_1080 stmt D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);
processing: D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);

marking necessary through D.42433_1078 stmt D.42433_1078 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
marking necessary through D.42464_1079 stmt D.42464_1079 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
processing: D.42464_1079 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;

processing: D.42433_1078 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: if (D.48206_1554 == 0)

Marking useful stmt: if (D.48202_1552 == 0)

marking necessary through D.48206_1554 stmt D.48206_1554 = PHI <1(422), 1(423), 0(424)>
processing: D.48206_1554 = PHI <1(422), 1(423), 0(424)>

Marking useful stmt: if (D.42464_1076 == 0B)

Marking useful stmt: if (D.48207_1553 == 0)

processing: if (D.48207_1553 == 0)

marking necessary through D.48207_1553 stmt D.48207_1553 = MEM[(const char *)D.42464_1076];
processing: D.48207_1553 = MEM[(const char *)D.42464_1076];

marking necessary through D.42464_1076 stmt D.42464_1076 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
processing: D.42464_1076 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;

processing: if (D.42464_1076 == 0B)

processing: if (D.48202_1552 == 0)

Marking useful stmt: if (D.42452_1060 != 0)

Marking useful stmt: if (D.42454_1062 != 0)

marking necessary through D.48202_1552 stmt D.48202_1552 = PHI <1(418), 1(419), 0(420)>
processing: D.48202_1552 = PHI <1(418), 1(419), 0(420)>

Marking useful stmt: if (D.42433_1074 == 0B)

Marking useful stmt: if (D.48203_1551 == 0)

processing: if (D.48203_1551 == 0)

marking necessary through D.48203_1551 stmt D.48203_1551 = MEM[(const char *)D.42433_1074];
processing: D.48203_1551 = MEM[(const char *)D.42433_1074];

marking necessary through D.42433_1074 stmt D.42433_1074 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
processing: D.42433_1074 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: if (D.42433_1074 == 0B)

processing: if (D.42454_1062 != 0)

processing: if (D.42452_1060 != 0)

marking necessary through D.42452_1060 stmt D.42452_1060 = D.42451_1058 || D.41986_1059;
processing: D.42452_1060 = D.42451_1058 || D.41986_1059;

marking necessary through D.42451_1058 stmt D.42451_1058 = D.42343_1057 <= 0;
marking necessary through D.41986_1059 stmt D.41986_1059 = is_outbound_89 != 0;
processing: D.41986_1059 = is_outbound_89 != 0;

marking necessary through is_outbound_89 stmt is_outbound_89 = D.41513_88 == 1;
processing: is_outbound_89 = D.41513_88 == 1;

processing: D.42451_1058 = D.42343_1057 <= 0;

marking necessary through D.42343_1057 stmt D.42343_1057 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
processing: D.42343_1057 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

processing: switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, 659134, D.41963_1068, D.42460_1073);

marking necessary through D.42456_1064 stmt D.42456_1064 = buf_144 + D.42455_1063;
marking necessary through D.42458_1066 stmt D.42458_1066 = 65536 - D.42457_1065;
marking necessary through D.41962_1067 stmt D.41962_1067 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
marking necessary through D.41963_1068 stmt D.41963_1068 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
marking necessary through D.42460_1073 stmt D.42460_1073 = D.41965_1070 + D.42459_1072;
processing: D.42460_1073 = D.41965_1070 + D.42459_1072;

marking necessary through D.41965_1070 stmt D.41965_1070 = (int) D.41964_1069;
marking necessary through D.42459_1072 stmt D.42459_1072 = D.42343_1071 <= 0;
processing: D.42459_1072 = D.42343_1071 <= 0;

marking necessary through D.42343_1071 stmt D.42343_1071 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
processing: D.42343_1071 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

processing: D.41965_1070 = (int) D.41964_1069;

marking necessary through D.41964_1069 stmt D.41964_1069 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
processing: D.41964_1069 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

processing: D.41963_1068 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: D.41962_1067 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

processing: D.42458_1066 = 65536 - D.42457_1065;

marking necessary through D.42457_1065 stmt D.42457_1065 = strlen (buf_144);
processing: D.42457_1065 = strlen (buf_144);

processing: D.42456_1064 = buf_144 + D.42455_1063;

marking necessary through D.42455_1063 stmt D.42455_1063 = strlen (buf_144);
processing: D.42455_1063 = strlen (buf_144);

processing: D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);

marking necessary through D.41512_1061 stmt D.41512_1061 = session_72(D)->channel;
processing: D.41512_1061 = session_72(D)->channel;

processing: switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, 659126, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);

Marking useful stmt: if (D.42106_1044 != D.41964_1045)

marking necessary through D.42445_1047 stmt D.42445_1047 = buf_144 + D.42444_1046;
marking necessary through D.42447_1049 stmt D.42447_1049 = 65536 - D.42446_1048;
marking necessary through D.41962_1050 stmt D.41962_1050 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
marking necessary through D.41963_1051 stmt D.41963_1051 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
marking necessary through D.41965_1053 stmt D.41965_1053 = (int) D.41964_1052;
marking necessary through D.42433_1054 stmt D.42433_1054 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
marking necessary through D.42448_1056 stmt D.42448_1056 = (int) D.42106_1055;
processing: D.42448_1056 = (int) D.42106_1055;

marking necessary through D.42106_1055 stmt D.42106_1055 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
processing: D.42106_1055 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

processing: D.42433_1054 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: D.41965_1053 = (int) D.41964_1052;

marking necessary through D.41964_1052 stmt D.41964_1052 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
processing: D.41964_1052 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

processing: D.41963_1051 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: D.41962_1050 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

processing: D.42447_1049 = 65536 - D.42446_1048;

marking necessary through D.42446_1048 stmt D.42446_1048 = strlen (buf_144);
processing: D.42446_1048 = strlen (buf_144);

processing: D.42445_1047 = buf_144 + D.42444_1046;

marking necessary through D.42444_1046 stmt D.42444_1046 = strlen (buf_144);
processing: D.42444_1046 = strlen (buf_144);

processing: if (D.42106_1044 != D.41964_1045)

Marking useful stmt: if (D.39666_1043 != 0)

marking necessary through D.42106_1044 stmt D.42106_1044 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
marking necessary through D.41964_1045 stmt D.41964_1045 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
processing: D.41964_1045 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

processing: D.42106_1044 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

processing: if (D.39666_1043 != 0)

Marking useful stmt: if (D.48198_1550 == 0)

marking necessary through D.39666_1043 stmt D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);
processing: D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);

marking necessary through D.42433_1041 stmt D.42433_1041 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
marking necessary through D.41963_1042 stmt D.41963_1042 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
processing: D.41963_1042 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: D.42433_1041 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: if (D.48198_1550 == 0)

Marking useful stmt: if (D.48194_1548 == 0)

marking necessary through D.48198_1550 stmt D.48198_1550 = PHI <1(409), 1(410), 0(411)>
processing: D.48198_1550 = PHI <1(409), 1(410), 0(411)>

Marking useful stmt: if (D.41963_1039 == 0B)

Marking useful stmt: if (D.48199_1549 == 0)

processing: if (D.48199_1549 == 0)

marking necessary through D.48199_1549 stmt D.48199_1549 = MEM[(const char *)D.41963_1039];
processing: D.48199_1549 = MEM[(const char *)D.41963_1039];

marking necessary through D.41963_1039 stmt D.41963_1039 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
processing: D.41963_1039 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: if (D.41963_1039 == 0B)

processing: if (D.48194_1548 == 0)

marking necessary through D.48194_1548 stmt D.48194_1548 = PHI <1(405), 1(406), 0(407)>
processing: D.48194_1548 = PHI <1(405), 1(406), 0(407)>

Marking useful stmt: if (D.42433_1037 == 0B)

Marking useful stmt: if (D.48195_1547 == 0)

processing: if (D.48195_1547 == 0)

marking necessary through D.48195_1547 stmt D.48195_1547 = MEM[(const char *)D.42433_1037];
processing: D.48195_1547 = MEM[(const char *)D.42433_1037];

marking necessary through D.42433_1037 stmt D.42433_1037 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
processing: D.42433_1037 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

processing: if (D.42433_1037 == 0B)

processing: switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, 659136, D.41963_1034, D.41965_1036);

marking necessary through D.42430_1030 stmt D.42430_1030 = buf_144 + D.42429_1029;
marking necessary through D.42432_1032 stmt D.42432_1032 = 65536 - D.42431_1031;
marking necessary through D.41962_1033 stmt D.41962_1033 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
marking necessary through D.41963_1034 stmt D.41963_1034 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
marking necessary through D.41965_1036 stmt D.41965_1036 = (int) D.41964_1035;
processing: D.41965_1036 = (int) D.41964_1035;

marking necessary through D.41964_1035 stmt D.41964_1035 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
processing: D.41964_1035 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

processing: D.41963_1034 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

processing: D.41962_1033 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

processing: D.42432_1032 = 65536 - D.42431_1031;

marking necessary through D.42431_1031 stmt D.42431_1031 = strlen (buf_144);
processing: D.42431_1031 = strlen (buf_144);

processing: D.42430_1030 = buf_144 + D.42429_1029;

marking necessary through D.42429_1029 stmt D.42429_1029 = strlen (buf_144);
processing: D.42429_1029 = strlen (buf_144);

processing: switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);

marking necessary through D.42426_1025 stmt D.42426_1025 = buf_144 + D.42425_1024;
marking necessary through D.42428_1027 stmt D.42428_1027 = 65536 - D.42427_1026;
marking necessary through D.41957_1028 stmt D.41957_1028 = MEM[(struct ice_t *)smh_90 + 17896B].pwd;
processing: D.41957_1028 = MEM[(struct ice_t *)smh_90 + 17896B].pwd;

processing: D.42428_1027 = 65536 - D.42427_1026;

marking necessary through D.42427_1026 stmt D.42427_1026 = strlen (buf_144);
processing: D.42427_1026 = strlen (buf_144);

processing: D.42426_1025 = buf_144 + D.42425_1024;

marking necessary through D.42425_1024 stmt D.42425_1024 = strlen (buf_144);
processing: D.42425_1024 = strlen (buf_144);

processing: switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);

marking necessary through D.42422_1020 stmt D.42422_1020 = buf_144 + D.42421_1019;
marking necessary through D.42424_1022 stmt D.42424_1022 = 65536 - D.42423_1021;
marking necessary through D.41952_1023 stmt D.41952_1023 = MEM[(struct ice_t *)smh_90 + 17896B].ufrag;
processing: D.41952_1023 = MEM[(struct ice_t *)smh_90 + 17896B].ufrag;

processing: D.42424_1022 = 65536 - D.42423_1021;

marking necessary through D.42423_1021 stmt D.42423_1021 = strlen (buf_144);
processing: D.42423_1021 = strlen (buf_144);

processing: D.42422_1020 = buf_144 + D.42421_1019;

marking necessary through D.42421_1019 stmt D.42421_1019 = strlen (buf_144);
processing: D.42421_1019 = strlen (buf_144);

processing: switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);

marking necessary through D.42418_1014 stmt D.42418_1014 = buf_144 + D.42417_1013;
marking necessary through D.42420_1016 stmt D.42420_1016 = 65536 - D.42419_1015;
marking necessary through D.42408_1017 stmt D.42408_1017 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
marking necessary through D.41719_1018 stmt D.41719_1018 = smh_90->msid;
processing: D.41719_1018 = smh_90->msid;

processing: D.42408_1017 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

processing: D.42420_1016 = 65536 - D.42419_1015;

marking necessary through D.42419_1015 stmt D.42419_1015 = strlen (buf_144);
processing: D.42419_1015 = strlen (buf_144);

processing: D.42418_1014 = buf_144 + D.42417_1013;

marking necessary through D.42417_1013 stmt D.42417_1013 = strlen (buf_144);
processing: D.42417_1013 = strlen (buf_144);

processing: switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);

marking necessary through D.42414_1008 stmt D.42414_1008 = buf_144 + D.42413_1007;
marking necessary through D.42416_1010 stmt D.42416_1010 = 65536 - D.42415_1009;
marking necessary through D.42408_1011 stmt D.42408_1011 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
marking necessary through D.41719_1012 stmt D.41719_1012 = smh_90->msid;
processing: D.41719_1012 = smh_90->msid;

processing: D.42408_1011 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

processing: D.42416_1010 = 65536 - D.42415_1009;

marking necessary through D.42415_1009 stmt D.42415_1009 = strlen (buf_144);
processing: D.42415_1009 = strlen (buf_144);

processing: D.42414_1008 = buf_144 + D.42413_1007;

marking necessary through D.42413_1007 stmt D.42413_1007 = strlen (buf_144);
processing: D.42413_1007 = strlen (buf_144);

processing: switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);

marking necessary through D.42410_1002 stmt D.42410_1002 = buf_144 + D.42409_1001;
marking necessary through D.42412_1004 stmt D.42412_1004 = 65536 - D.42411_1003;
marking necessary through D.42408_1005 stmt D.42408_1005 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
marking necessary through D.41719_1006 stmt D.41719_1006 = smh_90->msid;
processing: D.41719_1006 = smh_90->msid;

processing: D.42408_1005 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

processing: D.42412_1004 = 65536 - D.42411_1003;

marking necessary through D.42411_1003 stmt D.42411_1003 = strlen (buf_144);
processing: D.42411_1003 = strlen (buf_144);

processing: D.42410_1002 = buf_144 + D.42409_1001;

marking necessary through D.42409_1001 stmt D.42409_1001 = strlen (buf_144);
processing: D.42409_1001 = strlen (buf_144);

processing: switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);

marking necessary through D.42405_996 stmt D.42405_996 = buf_144 + D.42404_995;
marking necessary through D.42407_998 stmt D.42407_998 = 65536 - D.42406_997;
marking necessary through D.42408_999 stmt D.42408_999 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
marking necessary through D.41935_1000 stmt D.41935_1000 = smh_90->cname;
processing: D.41935_1000 = smh_90->cname;

processing: D.42408_999 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

processing: D.42407_998 = 65536 - D.42406_997;

marking necessary through D.42406_997 stmt D.42406_997 = strlen (buf_144);
processing: D.42406_997 = strlen (buf_144);

processing: D.42405_996 = buf_144 + D.42404_995;

marking necessary through D.42404_995 stmt D.42404_995 = strlen (buf_144);
processing: D.42404_995 = strlen (buf_144);

processing: switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);

Marking useful stmt: if (red_32 != 0)

marking necessary through D.42401_992 stmt D.42401_992 = buf_144 + D.42400_991;
marking necessary through D.42403_994 stmt D.42403_994 = 65536 - D.42402_993;
marking necessary through vp8_26 stmt vp8_26 = PHI <vp8_22(328), vp8_27(329), vp8_25(375), vp8_22(322)>
processing: vp8_26 = PHI <vp8_22(328), vp8_27(329), vp8_25(375), vp8_22(322)>

marking necessary through vp8_22 stmt vp8_22 = PHI <vp8_27(300), vp8_801(301)>
marking necessary through vp8_27 stmt vp8_27 = PHI <vp8_1192(448), vp8_26(447)>
marking necessary through vp8_25 stmt vp8_25 = PHI <vp8_27(330), vp8_24(374)>
Marking useful stmt: if (append_video_80 != 0B)

processing: if (append_video_80 != 0B)

processing: vp8_25 = PHI <vp8_27(330), vp8_24(374)>

marking necessary through vp8_24 stmt vp8_24 = PHI <vp8_25(332), vp8_25(335), vp8_25(338), vp8_23(371), vp8_23(372), vp8_23(373)>
processing: vp8_24 = PHI <vp8_25(332), vp8_25(335), vp8_25(338), vp8_23(371), vp8_23(372), vp8_23(373)>

marking necessary through vp8_23 stmt vp8_23 = PHI <vp8_25(342), vp8_893(343)>
Marking useful stmt: if (D.42263_880 != 1)

Marking useful stmt: if (D.42269_884 != 0)

Marking useful stmt: if (D.42274_885 != 0)

Marking useful stmt: if (ianacode_879 <= 127)

Marking useful stmt: if (D.48183_1543 == 0)

Marking useful stmt: if (D.42318_922 != 0)

processing: if (D.42318_922 != 0)

marking necessary through D.42318_922 stmt D.42318_922 = strcasecmp (fmtp_56, "_blank_");
processing: D.42318_922 = strcasecmp (fmtp_56, "_blank_");

marking necessary through fmtp_56 stmt fmtp_56 = PHI <ov_fmtp_76(353), fmtp_55(366), pass_fmtp_20(367)>
processing: fmtp_56 = PHI <ov_fmtp_76(353), fmtp_55(366), pass_fmtp_20(367)>

marking necessary through fmtp_55 stmt fmtp_55 = PHI <fmtp_54(361), fmtp_918(362)>
marking necessary through pass_fmtp_20 stmt pass_fmtp_20 = PHI <pass_fmtp_1164(448), pass_fmtp_19(447)>
Marking useful stmt: if (D.48171_1537 == 0)

Marking useful stmt: if (D.48179_1541 != 0)

processing: if (D.48179_1541 != 0)

marking necessary through D.48179_1541 stmt D.48179_1541 = PHI <1(363), 1(364), 0(365)>
processing: D.48179_1541 = PHI <1(363), 1(364), 0(365)>

Marking useful stmt: if (fmtp_55 == 0B)

Marking useful stmt: if (D.48180_1540 == 0)

processing: if (D.48180_1540 == 0)

marking necessary through D.48180_1540 stmt D.48180_1540 = MEM[(const char *)fmtp_55];
processing: D.48180_1540 = MEM[(const char *)fmtp_55];

processing: if (fmtp_55 == 0B)

processing: if (D.48171_1537 == 0)

marking necessary through D.48171_1537 stmt D.48171_1537 = PHI <1(349), 1(350), 0(351)>
processing: D.48171_1537 = PHI <1(349), 1(350), 0(351)>

Marking useful stmt: if (ov_fmtp_76 == 0B)

Marking useful stmt: if (D.48172_1536 == 0)

processing: if (D.48172_1536 == 0)

marking necessary through D.48172_1536 stmt D.48172_1536 = *ov_fmtp_76;
processing: D.48172_1536 = *ov_fmtp_76;

processing: if (ov_fmtp_76 == 0B)

processing: pass_fmtp_20 = PHI <pass_fmtp_1164(448), pass_fmtp_19(447)>

marking necessary through pass_fmtp_1164 stmt pass_fmtp_1164 = PHI <pass_fmtp_74(266)>
marking necessary through pass_fmtp_19 stmt pass_fmtp_19 = PHI <pass_fmtp_18(328), pass_fmtp_20(329), pass_fmtp_20(375), pass_fmtp_18(322)>
processing: pass_fmtp_19 = PHI <pass_fmtp_18(328), pass_fmtp_20(329), pass_fmtp_20(375), pass_fmtp_18(322)>

marking necessary through pass_fmtp_18 stmt pass_fmtp_18 = PHI <pass_fmtp_824(305), ov_fmtp_76(309), pass_fmtp_833(310)>
processing: pass_fmtp_18 = PHI <pass_fmtp_824(305), ov_fmtp_76(309), pass_fmtp_833(310)>

marking necessary through pass_fmtp_824 stmt pass_fmtp_824 = D.42142_823->rm_fmtp;
Marking useful stmt: if (D.42205_822 != 0)

Marking useful stmt: if (ov_fmtp_76 != 0B)

processing: if (ov_fmtp_76 != 0B)

processing: if (D.42205_822 != 0)

processing: pass_fmtp_824 = D.42142_823->rm_fmtp;

marking necessary through D.42142_823 stmt D.42142_823 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_823 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: pass_fmtp_1164 = PHI <pass_fmtp_74(266)>

processing: fmtp_55 = PHI <fmtp_54(361), fmtp_918(362)>

marking necessary through fmtp_54 stmt fmtp_54 = PHI <fmtp_53(356), fmtp_916(357)>
marking necessary through fmtp_918 stmt fmtp_918 = imp_876->fmtp;
Marking useful stmt: if (D.48175_1539 != 0)

processing: if (D.48175_1539 != 0)

marking necessary through D.48175_1539 stmt D.48175_1539 = PHI <1(358), 1(359), 0(360)>
processing: D.48175_1539 = PHI <1(358), 1(359), 0(360)>

Marking useful stmt: if (fmtp_54 == 0B)

Marking useful stmt: if (D.48176_1538 == 0)

processing: if (D.48176_1538 == 0)

marking necessary through D.48176_1538 stmt D.48176_1538 = MEM[(const char *)fmtp_54];
processing: D.48176_1538 = MEM[(const char *)fmtp_54];

processing: if (fmtp_54 == 0B)

processing: fmtp_918 = imp_876->fmtp;

marking necessary through imp_876 stmt imp_876 = smh_90->codecs[i_52];
processing: imp_876 = smh_90->codecs[i_52];

processing: fmtp_54 = PHI <fmtp_53(356), fmtp_916(357)>

marking necessary through fmtp_53 stmt fmtp_53 = PHI <0B(354), fmtp_914(355)>
marking necessary through fmtp_916 stmt fmtp_916 = smh_90->fmtps[i_52];
Marking useful stmt: if (D.42306_915 != 0B)

processing: if (D.42306_915 != 0B)

marking necessary through D.42306_915 stmt D.42306_915 = smh_90->fmtps[i_52];
processing: D.42306_915 = smh_90->fmtps[i_52];

processing: fmtp_916 = smh_90->fmtps[i_52];

processing: fmtp_53 = PHI <0B(354), fmtp_914(355)>

Marking useful stmt: if (map.33_911 != 0B)

processing: if (map.33_911 != 0B)

marking necessary through map.33_911 stmt map.33_911 = map;
processing: map.33_911 = map;

processing: if (D.48183_1543 == 0)

marking necessary through D.48183_1543 stmt D.48183_1543 = PHI <1(368), 1(369), 0(370)>
processing: D.48183_1543 = PHI <1(368), 1(369), 0(370)>

Marking useful stmt: if (fmtp_56 == 0B)

Marking useful stmt: if (D.48184_1542 == 0)

processing: if (D.48184_1542 == 0)

marking necessary through D.48184_1542 stmt D.48184_1542 = MEM[(const char *)fmtp_56];
processing: D.48184_1542 = MEM[(const char *)fmtp_56];

processing: if (fmtp_56 == 0B)

processing: if (ianacode_879 <= 127)

Marking useful stmt: if (D.42266_882 == 0)

marking necessary through ianacode_879 stmt ianacode_879 = (uint32_t) D.42262_878;
processing: ianacode_879 = (uint32_t) D.42262_878;

marking necessary through D.42262_878 stmt D.42262_878 = smh_90->ianacodes[i_52];
processing: D.42262_878 = smh_90->ianacodes[i_52];

processing: if (D.42266_882 == 0)

processing: if (D.42274_885 != 0)

marking necessary through D.42274_885 stmt D.42274_885 = already_did[ianacode_879];
processing: D.42274_885 = already_did[ianacode_879];

marking necessary through .MEM_1466 stmt already_did = {};
marking necessary through .MEM_1469 stmt already_did[ianacode_879] = 1;
processing: already_did[ianacode_879] = 1;

processing: already_did = {};

processing: if (D.42269_884 != 0)

processing: if (D.42263_880 != 1)

marking necessary through D.42263_880 stmt D.42263_880 = imp_876->codec_type;
processing: D.42263_880 = imp_876->codec_type;

processing: vp8_23 = PHI <vp8_25(342), vp8_893(343)>

marking necessary through vp8_893 stmt vp8_893 = (int) ianacode_879;
Marking useful stmt: if (D.42282_892 == 0)

processing: if (D.42282_892 == 0)

marking necessary through D.42282_892 stmt D.42282_892 = strcasecmp (D.42279_891, "VP8");
processing: D.42282_892 = strcasecmp (D.42279_891, "VP8");

marking necessary through D.42279_891 stmt D.42279_891 = imp_876->iananame;
processing: D.42279_891 = imp_876->iananame;

processing: vp8_893 = (int) ianacode_879;

processing: vp8_27 = PHI <vp8_1192(448), vp8_26(447)>

marking necessary through vp8_1192 stmt vp8_1192 = PHI <0(266)>
processing: vp8_1192 = PHI <0(266)>

processing: vp8_22 = PHI <vp8_27(300), vp8_801(301)>

marking necessary through vp8_801 stmt vp8_801 = (int) D.42149_800;
Marking useful stmt: if (D.42193_798 == 0)

processing: if (D.42193_798 == 0)

marking necessary through D.42193_798 stmt D.42193_798 = strcasecmp (D.42192_797, "VP8");
processing: D.42193_798 = strcasecmp (D.42192_797, "VP8");

marking necessary through D.42192_797 stmt D.42192_797 = D.42142_796->rm_encoding;
processing: D.42192_797 = D.42142_796->rm_encoding;

marking necessary through D.42142_796 stmt D.42142_796 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_796 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: vp8_801 = (int) D.42149_800;

marking necessary through D.42149_800 stmt D.42149_800 = D.42142_799->pt;
processing: D.42149_800 = D.42142_799->pt;

marking necessary through D.42142_799 stmt D.42142_799 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_799 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42403_994 = 65536 - D.42402_993;

marking necessary through D.42402_993 stmt D.42402_993 = strlen (buf_144);
processing: D.42402_993 = strlen (buf_144);

processing: D.42401_992 = buf_144 + D.42400_991;

marking necessary through D.42400_991 stmt D.42400_991 = strlen (buf_144);
processing: D.42400_991 = strlen (buf_144);

processing: if (red_32 != 0)

marking necessary through red_32 stmt red_32 = PHI <red_28(328), red_33(329), red_31(375), red_28(322)>
processing: red_32 = PHI <red_28(328), red_33(329), red_31(375), red_28(322)>

marking necessary through red_28 stmt red_28 = PHI <red_33(302), red_807(303)>
marking necessary through red_33 stmt red_33 = PHI <red_1197(448), red_32(447)>
marking necessary through red_31 stmt red_31 = PHI <red_33(330), red_30(374)>
processing: red_31 = PHI <red_33(330), red_30(374)>

marking necessary through red_30 stmt red_30 = PHI <red_31(332), red_31(335), red_31(338), red_29(371), red_29(372), red_29(373)>
processing: red_30 = PHI <red_31(332), red_31(335), red_31(338), red_29(371), red_29(372), red_29(373)>

marking necessary through red_29 stmt red_29 = PHI <red_31(344), red_896(345)>
processing: red_29 = PHI <red_31(344), red_896(345)>

marking necessary through red_896 stmt red_896 = (int) ianacode_879;
Marking useful stmt: if (D.42285_895 == 0)

processing: if (D.42285_895 == 0)

marking necessary through D.42285_895 stmt D.42285_895 = strcasecmp (D.42279_894, "red");
processing: D.42285_895 = strcasecmp (D.42279_894, "red");

marking necessary through D.42279_894 stmt D.42279_894 = imp_876->iananame;
processing: D.42279_894 = imp_876->iananame;

processing: red_896 = (int) ianacode_879;

processing: red_33 = PHI <red_1197(448), red_32(447)>

marking necessary through red_1197 stmt red_1197 = PHI <0(266)>
processing: red_1197 = PHI <0(266)>

processing: red_28 = PHI <red_33(302), red_807(303)>

marking necessary through red_807 stmt red_807 = (int) D.42149_806;
Marking useful stmt: if (D.42196_804 == 0)

processing: if (D.42196_804 == 0)

marking necessary through D.42196_804 stmt D.42196_804 = strcasecmp (D.42192_803, "red");
processing: D.42196_804 = strcasecmp (D.42192_803, "red");

marking necessary through D.42192_803 stmt D.42192_803 = D.42142_802->rm_encoding;
processing: D.42192_803 = D.42142_802->rm_encoding;

marking necessary through D.42142_802 stmt D.42142_802 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_802 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: red_807 = (int) D.42149_806;

marking necessary through D.42149_806 stmt D.42149_806 = D.42142_805->pt;
processing: D.42149_806 = D.42142_805->pt;

marking necessary through D.42142_805 stmt D.42142_805 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_805 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);

Marking useful stmt: if (D.42391_986 != 0)

marking necessary through D.42395_988 stmt D.42395_988 = buf_144 + D.42394_987;
marking necessary through D.42397_990 stmt D.42397_990 = 65536 - D.42396_989;
processing: D.42397_990 = 65536 - D.42396_989;

marking necessary through D.42396_989 stmt D.42396_989 = strlen (buf_144);
processing: D.42396_989 = strlen (buf_144);

processing: D.42395_988 = buf_144 + D.42394_987;

marking necessary through D.42394_987 stmt D.42394_987 = strlen (buf_144);
processing: D.42394_987 = strlen (buf_144);

processing: if (D.42391_986 != 0)

Marking useful stmt: if (vp8_26 != 0)

processing: if (vp8_26 != 0)

processing: D.42391_986 = switch_channel_test_flag (D.41512_985, 106);

marking necessary through D.41512_985 stmt D.41512_985 = session_72(D)->channel;
processing: D.41512_985 = session_72(D)->channel;

processing: switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);

Marking useful stmt: if (bw_57 > 0)

marking necessary through D.42386_982 stmt D.42386_982 = buf_144 + D.42385_981;
marking necessary through D.42388_984 stmt D.42388_984 = 65536 - D.42387_983;
marking necessary through bw_57 stmt bw_57 = PHI <256(396), v_1546(397)>
processing: bw_57 = PHI <256(396), v_1546(397)>

Marking useful stmt: if (vbw_978 != 0B)

processing: if (vbw_978 != 0B)

processing: D.42388_984 = 65536 - D.42387_983;

marking necessary through D.42387_983 stmt D.42387_983 = strlen (buf_144);
processing: D.42387_983 = strlen (buf_144);

processing: D.42386_982 = buf_144 + D.42385_981;

marking necessary through D.42385_981 stmt D.42385_981 = strlen (buf_144);
processing: D.42385_981 = strlen (buf_144);

processing: if (bw_57 > 0)

processing: v_1546 = strtol (vbw_978, 0B, 10);

processing: vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);

marking necessary through D.41535_977 stmt D.41535_977 = D.41534_976->channel;
processing: D.41535_977 = D.41534_976->channel;

marking necessary through D.41534_976 stmt D.41534_976 = smh_90->session;
processing: D.41534_976 = smh_90->session;

processing: switch_stun_random_string (&tmp2, 10, "0123456789");

processing: switch_stun_random_string (&tmp1, 10, "0123456789");

processing: switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);

Marking useful stmt: if (D.42361_958 != 0)

marking necessary through D.42365_960 stmt D.42365_960 = buf_144 + D.42364_959;
marking necessary through D.42367_962 stmt D.42367_962 = 65536 - D.42366_961;
marking necessary through iftmp.37_67 stmt iftmp.37_67 = PHI <"fir "(390), ""(391)>
marking necessary through iftmp.38_68 stmt iftmp.38_68 = PHI <"pli"(392), ""(393)>
processing: iftmp.38_68 = PHI <"pli"(392), ""(393)>

Marking useful stmt: if (D.42374_966 != 0)

processing: if (D.42374_966 != 0)

marking necessary through D.42374_966 stmt D.42374_966 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].pli;
processing: D.42374_966 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].pli;

processing: iftmp.37_67 = PHI <"fir "(390), ""(391)>

Marking useful stmt: if (D.42369_963 != 0)

processing: if (D.42369_963 != 0)

marking necessary through D.42369_963 stmt D.42369_963 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].fir;
processing: D.42369_963 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].fir;

processing: D.42367_962 = 65536 - D.42366_961;

marking necessary through D.42366_961 stmt D.42366_961 = strlen (buf_144);
processing: D.42366_961 = strlen (buf_144);

processing: D.42365_960 = buf_144 + D.42364_959;

marking necessary through D.42364_959 stmt D.42364_959 = strlen (buf_144);
processing: D.42364_959 = strlen (buf_144);

processing: if (D.42361_958 != 0)

marking necessary through D.42361_958 stmt D.42361_958 = D.42360_957 & 65535;
processing: D.42361_958 = D.42360_957 & 65535;

marking necessary through D.42360_957 stmt D.42360_957 = BIT_FIELD_REF <MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B], 16, 91280>;
processing: D.42360_957 = BIT_FIELD_REF <MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B], 16, 91280>;

processing: switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_59, ip_1);

Marking useful stmt: if (D.42343_943 > 0)

marking necessary through D.42356_953 stmt D.42356_953 = buf_144 + D.42355_952;
marking necessary through D.42358_955 stmt D.42358_955 = 65536 - D.42357_954;
marking necessary through D.42359_956 stmt D.42359_956 = v_port_721 + 1;
marking necessary through family_59 stmt family_59 = PHI <"IP6"(109), "IP4"(110)>
processing: family_59 = PHI <"IP6"(109), "IP4"(110)>

Marking useful stmt: if (D.41708_270 != 0B)

processing: if (D.41708_270 != 0B)

marking necessary through D.41708_270 stmt D.41708_270 = __builtin_strchr (ip_1, 58);
processing: D.41708_270 = __builtin_strchr (ip_1, 58);

processing: D.42359_956 = v_port_721 + 1;

processing: D.42358_955 = 65536 - D.42357_954;

marking necessary through D.42357_954 stmt D.42357_954 = strlen (buf_144);
processing: D.42357_954 = strlen (buf_144);

processing: D.42356_953 = buf_144 + D.42355_952;

marking necessary through D.42355_952 stmt D.42355_952 = strlen (buf_144);
processing: D.42355_952 = strlen (buf_144);

processing: if (D.42343_943 > 0)

Marking useful stmt: if (D.41527_942 != 0B)

marking necessary through D.42343_943 stmt D.42343_943 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
processing: D.42343_943 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

processing: if (D.41527_942 != 0B)

marking necessary through D.41527_942 stmt D.41527_942 = D.41522_941->rtcp_video_interval_msec;
processing: D.41527_942 = D.41522_941->rtcp_video_interval_msec;

marking necessary through D.41522_941 stmt D.41522_941 = smh_90->mparams;
processing: D.41522_941 = smh_90->mparams;

processing: switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_59, ip_1);

marking necessary through D.42351_949 stmt D.42351_949 = buf_144 + D.42350_948;
marking necessary through D.42353_951 stmt D.42353_951 = 65536 - D.42352_950;
processing: D.42353_951 = 65536 - D.42352_950;

marking necessary through D.42352_950 stmt D.42352_950 = strlen (buf_144);
processing: D.42352_950 = strlen (buf_144);

processing: D.42351_949 = buf_144 + D.42350_948;

marking necessary through D.42350_948 stmt D.42350_948 = strlen (buf_144);
processing: D.42350_948 = strlen (buf_144);

processing: switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");

marking necessary through D.42347_945 stmt D.42347_945 = buf_144 + D.42346_944;
marking necessary through D.42349_947 stmt D.42349_947 = 65536 - D.42348_946;
processing: D.42349_947 = 65536 - D.42348_946;

marking necessary through D.42348_946 stmt D.42348_946 = strlen (buf_144);
processing: D.42348_946 = strlen (buf_144);

processing: D.42347_945 = buf_144 + D.42346_944;

marking necessary through D.42346_944 stmt D.42346_944 = strlen (buf_144);
processing: D.42346_944 = strlen (buf_144);

processing: switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);

Marking useful stmt: if (D.48187_1545 == 0)

marking necessary through D.42337_936 stmt D.42337_936 = buf_144 + D.42336_935;
marking necessary through D.42339_938 stmt D.42339_938 = 65536 - D.42338_937;
marking necessary through D.42332_939 stmt D.42332_939 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
marking necessary through D.42340_940 stmt D.42340_940 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.str;
processing: D.42340_940 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.str;

processing: D.42332_939 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;

processing: D.42339_938 = 65536 - D.42338_937;

marking necessary through D.42338_937 stmt D.42338_937 = strlen (buf_144);
processing: D.42338_937 = strlen (buf_144);

processing: D.42337_936 = buf_144 + D.42336_935;

marking necessary through D.42336_935 stmt D.42336_935 = strlen (buf_144);
processing: D.42336_935 = strlen (buf_144);

processing: if (D.48187_1545 == 0)

marking necessary through D.48187_1545 stmt D.48187_1545 = PHI <1(380), 1(381), 0(382)>
processing: D.48187_1545 = PHI <1(380), 1(381), 0(382)>

Marking useful stmt: if (D.42332_933 == 0B)

Marking useful stmt: if (D.48188_1544 == 0)

processing: if (D.48188_1544 == 0)

marking necessary through D.48188_1544 stmt D.48188_1544 = MEM[(const char *)D.42332_933];
processing: D.48188_1544 = MEM[(const char *)D.42332_933];

marking necessary through D.42332_933 stmt D.42332_933 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
processing: D.42332_933 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;

processing: if (D.42332_933 == 0B)

processing: generate_local_fingerprint (smh_90, 1);

Marking useful stmt: if (D.42329_932 != 0)

processing: if (D.42329_932 != 0)

Marking useful stmt: if (is_outbound_89 != 0)

Marking useful stmt: if (D.42328_929 != 0)

processing: if (D.42328_929 != 0)

processing: if (is_outbound_89 != 0)

processing: D.42329_932 = switch_channel_test_flag (D.41535_931, 109);

marking necessary through D.41535_931 stmt D.41535_931 = D.41534_930->channel;
processing: D.41535_931 = D.41534_930->channel;

marking necessary through D.41534_930 stmt D.41534_930 = smh_90->session;
processing: D.41534_930 = smh_90->session;

processing: D.42328_929 = switch_channel_test_flag (D.41512_928, 84);

marking necessary through D.41512_928 stmt D.41512_928 = session_72(D)->channel;
processing: D.41512_928 = session_72(D)->channel;

processing: switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);

marking necessary through D.42322_924 stmt D.42322_924 = buf_144 + D.42321_923;
marking necessary through D.42324_926 stmt D.42324_926 = 65536 - D.42323_925;
processing: D.42324_926 = 65536 - D.42323_925;

marking necessary through D.42323_925 stmt D.42323_925 = strlen (buf_144);
processing: D.42323_925 = strlen (buf_144);

processing: D.42322_924 = buf_144 + D.42321_923;

marking necessary through D.42321_923 stmt D.42321_923 = strlen (buf_144);
processing: D.42321_923 = strlen (buf_144);

processing: fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);

marking necessary through map.33_912 stmt map.33_912 = map;
marking necessary through D.42279_913 stmt D.42279_913 = imp_876->iananame;
processing: D.42279_913 = imp_876->iananame;

processing: map.33_912 = map;

processing: switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);

Marking useful stmt: if (channels_890 > 1)

marking necessary through D.42297_904 stmt D.42297_904 = buf_144 + D.42296_903;
marking necessary through D.42299_906 stmt D.42299_906 = 65536 - D.42298_905;
marking necessary through D.42279_907 stmt D.42279_907 = imp_876->iananame;
marking necessary through D.42294_908 stmt D.42294_908 = imp_876->samples_per_second;
processing: D.42294_908 = imp_876->samples_per_second;

processing: D.42279_907 = imp_876->iananame;

processing: D.42299_906 = 65536 - D.42298_905;

marking necessary through D.42298_905 stmt D.42298_905 = strlen (buf_144);
processing: D.42298_905 = strlen (buf_144);

processing: D.42297_904 = buf_144 + D.42296_903;

marking necessary through D.42296_903 stmt D.42296_903 = strlen (buf_144);
processing: D.42296_903 = strlen (buf_144);

processing: if (channels_890 > 1)

processing: switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);

marking necessary through D.42291_898 stmt D.42291_898 = buf_144 + D.42290_897;
marking necessary through D.42293_900 stmt D.42293_900 = 65536 - D.42292_899;
marking necessary through D.42279_901 stmt D.42279_901 = imp_876->iananame;
marking necessary through D.42294_902 stmt D.42294_902 = imp_876->samples_per_second;
processing: D.42294_902 = imp_876->samples_per_second;

processing: D.42279_901 = imp_876->iananame;

processing: D.42293_900 = 65536 - D.42292_899;

marking necessary through D.42292_899 stmt D.42292_899 = strlen (buf_144);
processing: D.42292_899 = strlen (buf_144);

processing: D.42291_898 = buf_144 + D.42290_897;

marking necessary through D.42290_897 stmt D.42290_897 = strlen (buf_144);
processing: D.42290_897 = strlen (buf_144);

processing: channels_890 = get_channels (D.42279_887, D.42281_889);

marking necessary through D.42279_887 stmt D.42279_887 = imp_876->iananame;
marking necessary through D.42281_889 stmt D.42281_889 = (int) D.42280_888;
processing: D.42281_889 = (int) D.42280_888;

marking necessary through D.42280_888 stmt D.42280_888 = imp_876->number_of_channels;
processing: D.42280_888 = imp_876->number_of_channels;

processing: D.42279_887 = imp_876->iananame;

processing: D.42269_884 = switch_channel_test_flag (D.41512_883, 114);

marking necessary through D.41512_883 stmt D.41512_883 = session_72(D)->channel;
processing: D.41512_883 = session_72(D)->channel;

processing: D.42266_882 = switch_channel_direction (D.41512_881);

marking necessary through D.41512_881 stmt D.41512_881 = session_72(D)->channel;
processing: D.41512_881 = session_72(D)->channel;

processing: switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);

marking necessary through D.42244_860 stmt D.42244_860 = buf_144 + D.42243_859;
marking necessary through D.42246_862 stmt D.42246_862 = 65536 - D.42245_861;
marking necessary through iftmp.35_65 stmt iftmp.35_65 = PHI <""(326), "\n"(327)>
processing: iftmp.35_65 = PHI <""(326), "\n"(327)>

Marking useful stmt: if (D.42255_868 == 10)

processing: if (D.42255_868 == 10)

marking necessary through D.42255_868 stmt D.42255_868 = *append_video_66;
processing: D.42255_868 = *append_video_66;

marking necessary through append_video_66 stmt append_video_66 = PHI <append_video_866(324), append_video_80(325)>
processing: append_video_66 = PHI <append_video_866(324), append_video_80(325)>

marking necessary through append_video_866 stmt append_video_866 = append_video_80 + D.42253_865;
Marking useful stmt: if (D.42249_863 != 0)

processing: if (D.42249_863 != 0)

marking necessary through D.42249_863 stmt D.42249_863 = *append_video_80;
processing: D.42249_863 = *append_video_80;

processing: append_video_866 = append_video_80 + D.42253_865;

marking necessary through D.42253_865 stmt D.42253_865 = D.42252_864 + -1;
processing: D.42253_865 = D.42252_864 + -1;

marking necessary through D.42252_864 stmt D.42252_864 = strlen (append_video_80);
processing: D.42252_864 = strlen (append_video_80);

processing: D.42246_862 = 65536 - D.42245_861;

marking necessary through D.42245_861 stmt D.42245_861 = strlen (buf_144);
processing: D.42245_861 = strlen (buf_144);

processing: D.42244_860 = buf_144 + D.42243_859;

marking necessary through D.42243_859 stmt D.42243_859 = strlen (buf_144);
processing: D.42243_859 = strlen (buf_144);

processing: switch_mutex_unlock (D.41747_858);

marking necessary through D.41747_858 stmt D.41747_858 = smh_90->sdp_mutex;
processing: D.41747_858 = smh_90->sdp_mutex;

processing: switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);

Marking useful stmt: if (D.42229_848 != 0)

marking necessary through D.42233_850 stmt D.42233_850 = buf_144 + D.42232_849;
marking necessary through D.42235_852 stmt D.42235_852 = 65536 - D.42234_851;
marking necessary through D.42236_854 stmt D.42236_854 = (int) D.42226_853;
marking necessary through D.42237_855 stmt D.42237_855 = pmap_51->iananame;
marking necessary through D.42238_856 stmt D.42238_856 = pmap_51->rate;
processing: D.42238_856 = pmap_51->rate;

processing: D.42237_855 = pmap_51->iananame;

processing: D.42236_854 = (int) D.42226_853;

marking necessary through D.42226_853 stmt D.42226_853 = pmap_51->pt;
processing: D.42226_853 = pmap_51->pt;

processing: D.42235_852 = 65536 - D.42234_851;

marking necessary through D.42234_851 stmt D.42234_851 = strlen (buf_144);
processing: D.42234_851 = strlen (buf_144);

processing: D.42233_850 = buf_144 + D.42232_849;

marking necessary through D.42232_849 stmt D.42232_849 = strlen (buf_144);
processing: D.42232_849 = strlen (buf_144);

processing: if (D.42229_848 != 0)

Marking useful stmt: if (D.42226_845 != D.42149_847)

marking necessary through D.42229_848 stmt D.42229_848 = pmap_51->negotiated;
processing: D.42229_848 = pmap_51->negotiated;

processing: if (D.42226_845 != D.42149_847)

marking necessary through D.42226_845 stmt D.42226_845 = pmap_51->pt;
marking necessary through D.42149_847 stmt D.42149_847 = D.42142_846->pt;
processing: D.42149_847 = D.42142_846->pt;

marking necessary through D.42142_846 stmt D.42142_846 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_846 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42226_845 = pmap_51->pt;

processing: switch_mutex_lock (D.41747_842);

marking necessary through D.41747_842 stmt D.41747_842 = smh_90->sdp_mutex;
processing: D.41747_842 = smh_90->sdp_mutex;

processing: D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);

processing: switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);

Marking useful stmt: if (pass_fmtp_18 != 0B)

marking necessary through D.42220_835 stmt D.42220_835 = buf_144 + D.42219_834;
marking necessary through D.42222_837 stmt D.42222_837 = 65536 - D.42221_836;
marking necessary through D.42203_840 stmt D.42203_840 = (int) D.42149_839;
processing: D.42203_840 = (int) D.42149_839;

marking necessary through D.42149_839 stmt D.42149_839 = D.42142_838->pt;
processing: D.42149_839 = D.42142_838->pt;

marking necessary through D.42142_838 stmt D.42142_838 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_838 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42222_837 = 65536 - D.42221_836;

marking necessary through D.42221_836 stmt D.42221_836 = strlen (buf_144);
processing: D.42221_836 = strlen (buf_144);

processing: D.42220_835 = buf_144 + D.42219_834;

marking necessary through D.42219_834 stmt D.42219_834 = strlen (buf_144);
processing: D.42219_834 = strlen (buf_144);

processing: if (pass_fmtp_18 != 0B)

processing: pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);

marking necessary through D.41512_832 stmt D.41512_832 = session_72(D)->channel;
processing: D.41512_832 = session_72(D)->channel;

processing: of_829 = switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");

Marking useful stmt: if (D.42209_827 != 0B)

marking necessary through D.41512_828 stmt D.41512_828 = session_72(D)->channel;
processing: D.41512_828 = session_72(D)->channel;

processing: if (D.42209_827 != 0B)

processing: D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);

marking necessary through D.41512_826 stmt D.41512_826 = session_72(D)->channel;
processing: D.41512_826 = session_72(D)->channel;

processing: D.42205_822 = switch_channel_test_flag (D.41512_821, 84);

marking necessary through D.41512_821 stmt D.41512_821 = session_72(D)->channel;
processing: D.41512_821 = session_72(D)->channel;

processing: switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);

marking necessary through D.42200_811 stmt D.42200_811 = buf_144 + D.42199_810;
marking necessary through D.42202_813 stmt D.42202_813 = 65536 - D.42201_812;
marking necessary through D.42203_816 stmt D.42203_816 = (int) D.42149_815;
marking necessary through D.42192_818 stmt D.42192_818 = D.42142_817->rm_encoding;
marking necessary through D.42204_820 stmt D.42204_820 = D.42142_819->rm_rate;
processing: D.42204_820 = D.42142_819->rm_rate;

marking necessary through D.42142_819 stmt D.42142_819 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_819 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42192_818 = D.42142_817->rm_encoding;

marking necessary through D.42142_817 stmt D.42142_817 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_817 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42203_816 = (int) D.42149_815;

marking necessary through D.42149_815 stmt D.42149_815 = D.42142_814->pt;
processing: D.42149_815 = D.42142_814->pt;

marking necessary through D.42142_814 stmt D.42142_814 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_814 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42202_813 = 65536 - D.42201_812;

marking necessary through D.42201_812 stmt D.42201_812 = strlen (buf_144);
processing: D.42201_812 = strlen (buf_144);

processing: D.42200_811 = buf_144 + D.42199_810;

marking necessary through D.42199_810 stmt D.42199_810 = strlen (buf_144);
processing: D.42199_810 = strlen (buf_144);

processing: switch_snprintf (D.42187_792, D.42189_794, "\n");

marking necessary through D.42187_792 stmt D.42187_792 = buf_144 + D.42186_791;
marking necessary through D.42189_794 stmt D.42189_794 = 65536 - D.42188_793;
processing: D.42189_794 = 65536 - D.42188_793;

marking necessary through D.42188_793 stmt D.42188_793 = strlen (buf_144);
processing: D.42188_793 = strlen (buf_144);

processing: D.42187_792 = buf_144 + D.42186_791;

marking necessary through D.42186_791 stmt D.42186_791 = strlen (buf_144);
processing: D.42186_791 = strlen (buf_144);

processing: switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);

Marking useful stmt: if (D.42172_776 >= 0)

Marking useful stmt: if (D.42176_779 != 0)

marking necessary through D.42180_783 stmt D.42180_783 = buf_144 + D.42179_782;
marking necessary through D.42182_785 stmt D.42182_785 = 65536 - D.42181_784;
marking necessary through D.42175_787 stmt D.42175_787 = (int) D.42171_786;
processing: D.42175_787 = (int) D.42171_786;

marking necessary through D.42171_786 stmt D.42171_786 = smh_90->ianacodes[i_50];
processing: D.42171_786 = smh_90->ianacodes[i_50];

processing: D.42182_785 = 65536 - D.42181_784;

marking necessary through D.42181_784 stmt D.42181_784 = strlen (buf_144);
processing: D.42181_784 = strlen (buf_144);

processing: D.42180_783 = buf_144 + D.42179_782;

marking necessary through D.42179_782 stmt D.42179_782 = strlen (buf_144);
processing: D.42179_782 = strlen (buf_144);

processing: if (D.42176_779 != 0)

marking necessary through D.42176_779 stmt D.42176_779 = already_did[D.42175_778];
processing: D.42176_779 = already_did[D.42175_778];

marking necessary through D.42175_778 stmt D.42175_778 = (int) D.42171_777;
marking necessary through .MEM_1449 stmt already_did = {};
marking necessary through .MEM_1452 stmt already_did[D.42175_781] = 1;
processing: already_did[D.42175_781] = 1;

marking necessary through D.42175_781 stmt D.42175_781 = (int) D.42171_780;
processing: D.42175_781 = (int) D.42171_780;

marking necessary through D.42171_780 stmt D.42171_780 = smh_90->ianacodes[i_50];
processing: D.42171_780 = smh_90->ianacodes[i_50];

processing: already_did = {};

processing: D.42175_778 = (int) D.42171_777;

marking necessary through D.42171_777 stmt D.42171_777 = smh_90->ianacodes[i_50];
processing: D.42171_777 = smh_90->ianacodes[i_50];

processing: if (D.42172_776 >= 0)

Marking useful stmt: if (D.42165_772 == 0)

Marking useful stmt: if (D.42168_774 != 0)

marking necessary through D.42172_776 stmt D.42172_776 = (signed char) D.42171_775;
processing: D.42172_776 = (signed char) D.42171_775;

marking necessary through D.42171_775 stmt D.42171_775 = smh_90->ianacodes[i_50];
processing: D.42171_775 = smh_90->ianacodes[i_50];

processing: if (D.42168_774 != 0)

processing: if (D.42165_772 == 0)

Marking useful stmt: if (D.42162_770 != 1)

processing: if (D.42162_770 != 1)

marking necessary through D.42162_770 stmt D.42162_770 = imp_769->codec_type;
processing: D.42162_770 = imp_769->codec_type;

marking necessary through imp_769 stmt imp_769 = smh_90->codecs[i_50];
processing: imp_769 = smh_90->codecs[i_50];

processing: D.42168_774 = switch_channel_test_flag (D.41512_773, 114);

marking necessary through D.41512_773 stmt D.41512_773 = session_72(D)->channel;
processing: D.41512_773 = session_72(D)->channel;

processing: D.42165_772 = switch_channel_direction (D.41512_771);

marking necessary through D.41512_771 stmt D.41512_771 = session_72(D)->channel;
processing: D.41512_771 = session_72(D)->channel;

processing: switch_mutex_unlock (D.41747_763);

marking necessary through D.41747_763 stmt D.41747_763 = smh_90->sdp_mutex;
processing: D.41747_763 = smh_90->sdp_mutex;

processing: switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);

Marking useful stmt: if (D.42148_753 != D.42149_755)

marking necessary through D.42153_757 stmt D.42153_757 = buf_144 + D.42152_756;
marking necessary through D.42155_759 stmt D.42155_759 = 65536 - D.42154_758;
marking necessary through D.42156_761 stmt D.42156_761 = (int) D.42148_760;
processing: D.42156_761 = (int) D.42148_760;

marking necessary through D.42148_760 stmt D.42148_760 = pmap_49->pt;
processing: D.42148_760 = pmap_49->pt;

processing: D.42155_759 = 65536 - D.42154_758;

marking necessary through D.42154_758 stmt D.42154_758 = strlen (buf_144);
processing: D.42154_758 = strlen (buf_144);

processing: D.42153_757 = buf_144 + D.42152_756;

marking necessary through D.42152_756 stmt D.42152_756 = strlen (buf_144);
processing: D.42152_756 = strlen (buf_144);

processing: if (D.42148_753 != D.42149_755)

marking necessary through D.42148_753 stmt D.42148_753 = pmap_49->pt;
marking necessary through D.42149_755 stmt D.42149_755 = D.42142_754->pt;
processing: D.42149_755 = D.42142_754->pt;

marking necessary through D.42142_754 stmt D.42142_754 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_754 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42148_753 = pmap_49->pt;

processing: switch_mutex_lock (D.41747_750);

marking necessary through D.41747_750 stmt D.41747_750 = smh_90->sdp_mutex;
processing: D.41747_750 = smh_90->sdp_mutex;

processing: D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);

processing: switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);

marking necessary through D.42139_743 stmt D.42139_743 = buf_144 + D.42138_742;
marking necessary through D.42141_745 stmt D.42141_745 = 65536 - D.42140_744;
marking necessary through D.42144_748 stmt D.42144_748 = (int) D.42143_747;
processing: D.42144_748 = (int) D.42143_747;

marking necessary through D.42143_747 stmt D.42143_747 = D.42142_746->agreed_pt;
processing: D.42143_747 = D.42142_746->agreed_pt;

marking necessary through D.42142_746 stmt D.42142_746 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
processing: D.42142_746 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

processing: D.42141_745 = 65536 - D.42140_744;

marking necessary through D.42140_744 stmt D.42140_744 = strlen (buf_144);
processing: D.42140_744 = strlen (buf_144);

processing: D.42139_743 = buf_144 + D.42138_742;

marking necessary through D.42138_742 stmt D.42138_742 = strlen (buf_144);
processing: D.42138_742 = strlen (buf_144);

processing: switch_core_media_set_video_codec (session_72(D), 0);

processing: switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);

marking necessary through D.42120_728 stmt D.42120_728 = buf_144 + D.42119_727;
marking necessary through D.42122_730 stmt D.42122_730 = 65536 - D.42121_729;
processing: D.42122_730 = 65536 - D.42121_729;

marking necessary through D.42121_729 stmt D.42121_729 = strlen (buf_144);
processing: D.42121_729 = strlen (buf_144);

processing: D.42120_728 = buf_144 + D.42119_727;

marking necessary through D.42119_727 stmt D.42119_727 = strlen (buf_144);
processing: D.42119_727 = strlen (buf_144);

processing: D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);

marking necessary through iftmp.34_64 stmt iftmp.34_64 = PHI <1(272), 0(273), 1(271), 1(456)>
processing: iftmp.34_64 = PHI <1(272), 0(273), 1(271), 1(456)>

Marking useful stmt: if (loops_48 == 0)

Marking useful stmt: if (D.42129_732 != 0)

Marking useful stmt: if (D.42131_734 == 1)

Marking useful stmt: if (D.41736_735 != 9)

Marking useful stmt: if (D.42133_737 != 0)

processing: if (D.42133_737 != 0)

processing: if (D.41736_735 != 9)

marking necessary through D.41736_735 stmt D.41736_735 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_735 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: if (D.42131_734 == 1)

processing: if (D.42129_732 != 0)

processing: if (loops_48 == 0)

processing: D.42133_737 = switch_channel_test_flag (D.41512_736, 109);

marking necessary through D.41512_736 stmt D.41512_736 = session_72(D)->channel;
processing: D.41512_736 = session_72(D)->channel;

processing: D.42131_734 = switch_channel_direction (D.41512_733);

marking necessary through D.41512_733 stmt D.41512_733 = session_72(D)->channel;
processing: D.41512_733 = session_72(D)->channel;

processing: D.42129_732 = switch_channel_test_flag (D.41512_731, 92);

marking necessary through D.41512_731 stmt D.41512_731 = session_72(D)->channel;
processing: D.41512_731 = session_72(D)->channel;

processing: gen_ice (session_72(D), 1, ip_1, D.42118_726);

Marking useful stmt: if (D.42115_725 != 0)

marking necessary through D.42118_726 stmt D.42118_726 = (short unsigned int) v_port_721;
processing: D.42118_726 = (short unsigned int) v_port_721;

processing: if (D.42115_725 != 0)

processing: D.42115_725 = switch_channel_test_flag (D.41535_724, 108);

marking necessary through D.41535_724 stmt D.41535_724 = D.41534_723->channel;
processing: D.41535_724 = D.41534_723->channel;

marking necessary through D.41534_723 stmt D.41534_723 = smh_90->session;
processing: D.41534_723 = smh_90->session;

processing: switch_media_handle_set_media_flag (smh_90, 16);

Marking useful stmt: if (D.42109_719 != 0)

processing: if (D.42109_719 != 0)

processing: D.42109_719 = switch_channel_test_flag (D.41512_718, 106);

marking necessary through D.41512_718 stmt D.41512_718 = session_72(D)->channel;
processing: D.41512_718 = session_72(D)->channel;

processing: switch_core_media_choose_port (session_72(D), 1, 0);

Marking useful stmt: if (D.42106_717 == 0)

processing: if (D.42106_717 == 0)

marking necessary through D.42106_717 stmt D.42106_717 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
processing: D.42106_717 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

processing: MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].no_crypto = 1;

Marking useful stmt: if (D.42103_716 != 0)

processing: if (D.42103_716 != 0)

Marking useful stmt: if (D.42100_713 == 0)

processing: if (D.42100_713 == 0)

processing: D.42103_716 = switch_channel_test_flag (D.41535_715, 109);

marking necessary through D.41535_715 stmt D.41535_715 = D.41534_714->channel;
processing: D.41535_715 = D.41534_714->channel;

marking necessary through D.41534_714 stmt D.41534_714 = smh_90->session;
processing: D.41534_714 = smh_90->session;

processing: D.42100_713 = switch_channel_direction (D.41512_712);

marking necessary through D.41512_712 stmt D.41512_712 = session_72(D)->channel;
processing: D.41512_712 = session_72(D)->channel;

processing: D.42097_711 = switch_channel_test_flag (D.41512_710, 98);

marking necessary through D.41512_710 stmt D.41512_710 = session_72(D)->channel;
processing: D.41512_710 = session_72(D)->channel;

processing: generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);

Marking useful stmt: if (both_47 != 0)

marking necessary through bp_45 stmt bp_45 = PHI <buf_144(248), bp_677(249), bp_677(250)>
marking necessary through D.42096_686 stmt D.42096_686 = 65536 - D.42095_685;
marking necessary through this_ptime_41 stmt this_ptime_41 = PHI <this_ptime_659(243), 20(244)>
marking necessary through sr_4 stmt sr_4 = PHI <sr_3(101), sr_3(102), 0B(107), 0B(106)>
marking necessary through use_cng_17 stmt use_cng_17 = PHI <1(32), 1(33), 0(34)>
marking necessary through cng_type_42 stmt cng_type_42 = PHI <0(222), 0(223), cng_type_645(224), cng_type_645(225)>
marking necessary through map.33_687 stmt map.33_687 = map;
processing: map.33_687 = map;

processing: cng_type_42 = PHI <0(222), 0(223), cng_type_645(224), cng_type_645(225)>

marking necessary through cng_type_645 stmt cng_type_645 = (int) D.41606_644;
Marking useful stmt: if (D.42030_637 == 0)

Marking useful stmt: if (D.41609_642 != 0)

Marking useful stmt: if (D.41720_646 == 0)

processing: if (D.41720_646 == 0)

marking necessary through D.41720_646 stmt D.41720_646 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
processing: D.41720_646 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;

processing: if (D.41609_642 != 0)

marking necessary through D.41609_642 stmt D.41609_642 = D.41607_640 && D.41608_641;
processing: D.41609_642 = D.41607_640 && D.41608_641;

marking necessary through D.41607_640 stmt D.41607_640 = D.41606_639 != 0;
marking necessary through D.41608_641 stmt D.41608_641 = use_cng_17 != 0;
processing: D.41608_641 = use_cng_17 != 0;

processing: D.41607_640 = D.41606_639 != 0;

marking necessary through D.41606_639 stmt D.41606_639 = D.41522_638->cng_pt;
processing: D.41606_639 = D.41522_638->cng_pt;

marking necessary through D.41522_638 stmt D.41522_638 = smh_90->mparams;
processing: D.41522_638 = smh_90->mparams;

processing: if (D.42030_637 == 0)

processing: cng_type_645 = (int) D.41606_644;

marking necessary through D.41606_644 stmt D.41606_644 = D.41522_643->cng_pt;
processing: D.41606_644 = D.41522_643->cng_pt;

marking necessary through D.41522_643 stmt D.41522_643 = smh_90->mparams;
processing: D.41522_643 = smh_90->mparams;

processing: use_cng_17 = PHI <1(32), 1(33), 0(34)>

Marking useful stmt: if (val_147 != 0B)

Marking useful stmt: if (D.41575_148 != 0)

Marking useful stmt: if (val_150 != 0B)

Marking useful stmt: if (D.41572_145 != 0)

Marking useful stmt: if (D.41577_151 != 0)

processing: if (D.41577_151 != 0)

processing: if (D.41572_145 != 0)

processing: if (val_150 != 0B)

processing: if (D.41575_148 != 0)

processing: if (val_147 != 0B)

processing: sr_4 = PHI <sr_3(101), sr_3(102), 0B(107), 0B(106)>

marking necessary through sr_3 stmt sr_3 = PHI <sr_226(D)(91), var_val_246(93), "sendrecv"(92)>
Marking useful stmt: if (D.41700_264 != 0)

Marking useful stmt: if (var_val_266 != 0B)

Marking useful stmt: if (D.48139_1521 == 0)

Marking useful stmt: if (D.41703_267 != 0)

processing: if (D.41703_267 != 0)

processing: if (D.48139_1521 == 0)

marking necessary through D.48139_1521 stmt D.48139_1521 = PHI <1(103), 1(104), 0(105)>
processing: D.48139_1521 = PHI <1(103), 1(104), 0(105)>

Marking useful stmt: if (sr_3 == 0B)

Marking useful stmt: if (D.48140_1520 == 0)

processing: if (D.48140_1520 == 0)

marking necessary through D.48140_1520 stmt D.48140_1520 = *sr_3;
processing: D.48140_1520 = *sr_3;

processing: if (sr_3 == 0B)

processing: if (var_val_266 != 0B)

processing: if (D.41700_264 != 0)

marking necessary through D.41700_264 stmt D.41700_264 = D.41699_263 & 16;
processing: D.41700_264 = D.41699_263 & 16;

marking necessary through D.41699_263 stmt D.41699_263 = D.41522_262->ndlb;
processing: D.41699_263 = D.41522_262->ndlb;

marking necessary through D.41522_262 stmt D.41522_262 = smh_90->mparams;
processing: D.41522_262 = smh_90->mparams;

processing: sr_3 = PHI <sr_226(D)(91), var_val_246(93), "sendrecv"(92)>

Marking useful stmt: if (var_val_246 != 0B)

Marking useful stmt: if (D.48135_1519 != 0)

processing: if (D.48135_1519 != 0)

marking necessary through D.48135_1519 stmt D.48135_1519 = PHI <1(88), 1(89), 0(90)>
processing: D.48135_1519 = PHI <1(88), 1(89), 0(90)>

Marking useful stmt: if (sr_226(D) == 0B)

Marking useful stmt: if (D.48136_1518 == 0)

processing: if (D.48136_1518 == 0)

marking necessary through D.48136_1518 stmt D.48136_1518 = *sr_226(D);
processing: D.48136_1518 = *sr_226(D);

processing: if (sr_226(D) == 0B)

processing: if (var_val_246 != 0B)

processing: this_ptime_41 = PHI <this_ptime_659(243), 20(244)>

Marking useful stmt: if (D.42065_657 != 0)

marking necessary through this_ptime_659 stmt this_ptime_659 = D.42068_658 / 1000;
Marking useful stmt: if (D.42072_661 == 0)

Marking useful stmt: if (D.42074_663 == 0)

processing: if (D.42074_663 == 0)

marking necessary through D.42074_663 stmt D.42074_663 = strcasecmp (D.42071_662, "isac");
processing: D.42074_663 = strcasecmp (D.42071_662, "isac");

marking necessary through D.42071_662 stmt D.42071_662 = imp_656->iananame;
processing: D.42071_662 = imp_656->iananame;

marking necessary through imp_656 stmt imp_656 = smh_90->codecs[i_38];
processing: imp_656 = smh_90->codecs[i_38];

processing: if (D.42072_661 == 0)

marking necessary through D.42072_661 stmt D.42072_661 = strcasecmp (D.42071_660, "ilbc");
processing: D.42072_661 = strcasecmp (D.42071_660, "ilbc");

marking necessary through D.42071_660 stmt D.42071_660 = imp_656->iananame;
processing: D.42071_660 = imp_656->iananame;

processing: this_ptime_659 = D.42068_658 / 1000;

marking necessary through D.42068_658 stmt D.42068_658 = imp_656->microseconds_per_packet;
processing: D.42068_658 = imp_656->microseconds_per_packet;

processing: if (D.42065_657 != 0)

marking necessary through D.42065_657 stmt D.42065_657 = imp_656->codec_type;
processing: D.42065_657 = imp_656->codec_type;

processing: D.42096_686 = 65536 - D.42095_685;

marking necessary through D.42095_685 stmt D.42095_685 = strlen (buf_144);
processing: D.42095_685 = strlen (buf_144);

processing: bp_45 = PHI <buf_144(248), bp_677(249), bp_677(250)>

Marking useful stmt: if (cur_ptime_40 != this_ptime_41)

marking necessary through bp_677 stmt bp_677 = buf_144 + D.42085_676;
Marking useful stmt: if (D.41732_668 == 0)

Marking useful stmt: if (D.42081_670 != 0)

Marking useful stmt: if (D.42082_672 != 0)

Marking useful stmt: if (D.42058_678 == 1)

processing: if (D.42058_678 == 1)

marking necessary through D.42058_678 stmt D.42058_678 = smh_90->crypto_mode;
processing: D.42058_678 = smh_90->crypto_mode;

processing: if (D.42082_672 != 0)

processing: if (D.42081_670 != 0)

processing: if (D.41732_668 == 0)

marking necessary through D.41732_668 stmt D.41732_668 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
processing: D.41732_668 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;

processing: bp_677 = buf_144 + D.42085_676;

marking necessary through D.42085_676 stmt D.42085_676 = strlen (buf_144);
processing: D.42085_676 = strlen (buf_144);

processing: if (cur_ptime_40 != this_ptime_41)

marking necessary through cur_ptime_40 stmt cur_ptime_40 = PHI <cur_ptime_1578(257), cur_ptime_39(256)>
processing: cur_ptime_40 = PHI <cur_ptime_1578(257), cur_ptime_39(256)>

marking necessary through cur_ptime_1578 stmt cur_ptime_1578 = PHI <0(228), 0(227)>
marking necessary through cur_ptime_39 stmt cur_ptime_39 = PHI <cur_ptime_40(241), cur_ptime_40(245), this_ptime_41(254), this_ptime_41(255)>
processing: cur_ptime_39 = PHI <cur_ptime_40(241), cur_ptime_40(245), this_ptime_41(254), this_ptime_41(255)>

processing: cur_ptime_1578 = PHI <0(228), 0(227)>

processing: if (both_47 != 0)

marking necessary through both_47 stmt both_47 = PHI <both_46(252), 0(457), 0(251)>
processing: both_47 = PHI <both_46(252), 0(457), 0(251)>

marking necessary through both_46 stmt both_46 = PHI <1(248), 1(249), 0(250)>
Marking useful stmt: if (D.42090_681 != 0)

Marking useful stmt: if (D.42092_683 != 0)

processing: if (D.42092_683 != 0)

processing: if (D.42090_681 != 0)

processing: both_46 = PHI <1(248), 1(249), 0(250)>

processing: D.42092_683 = switch_channel_test_flag (D.41512_682, 109);

marking necessary through D.41512_682 stmt D.41512_682 = session_72(D)->channel;
processing: D.41512_682 = session_72(D)->channel;

processing: D.42090_681 = switch_channel_test_flag (D.41512_680, 106);

marking necessary through D.41512_680 stmt D.41512_680 = session_72(D)->channel;
processing: D.41512_680 = session_72(D)->channel;

processing: generate_m.isra.4 (session_72(D), buf_144, D.42084_674, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);

marking necessary through D.42084_674 stmt D.42084_674 = 65536 - D.42083_673;
marking necessary through map.33_675 stmt map.33_675 = map;
processing: map.33_675 = map;

processing: D.42084_674 = 65536 - D.42083_673;

marking necessary through D.42083_673 stmt D.42083_673 = strlen (buf_144);
processing: D.42083_673 = strlen (buf_144);

processing: D.42082_672 = switch_channel_test_flag (D.41512_671, 109);

marking necessary through D.41512_671 stmt D.41512_671 = session_72(D)->channel;
processing: D.41512_671 = session_72(D)->channel;

processing: D.42081_670 = switch_channel_test_flag (D.41512_669, 92);

marking necessary through D.41512_669 stmt D.41512_669 = session_72(D)->channel;
processing: D.41512_669 = session_72(D)->channel;

processing: generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);

Marking useful stmt: if (both_44 != 0)

marking necessary through bp_43 stmt bp_43 = PHI <buf_144(234), bp_704(235), bp_704(236)>
marking necessary through D.42064_708 stmt D.42064_708 = 65536 - D.42063_707;
marking necessary through map.33_709 stmt map.33_709 = map;
processing: map.33_709 = map;

processing: D.42064_708 = 65536 - D.42063_707;

marking necessary through D.42063_707 stmt D.42063_707 = strlen (buf_144);
processing: D.42063_707 = strlen (buf_144);

processing: bp_43 = PHI <buf_144(234), bp_704(235), bp_704(236)>

marking necessary through bp_704 stmt bp_704 = buf_144 + D.42057_703;
Marking useful stmt: if (D.41732_697 == 0)

Marking useful stmt: if (D.42054_699 != 0)

Marking useful stmt: if (D.42055_701 != 0)

Marking useful stmt: if (D.42058_705 == 1)

processing: if (D.42058_705 == 1)

marking necessary through D.42058_705 stmt D.42058_705 = smh_90->crypto_mode;
processing: D.42058_705 = smh_90->crypto_mode;

processing: if (D.42055_701 != 0)

processing: if (D.42054_699 != 0)

processing: if (D.41732_697 == 0)

marking necessary through D.41732_697 stmt D.41732_697 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
processing: D.41732_697 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;

processing: bp_704 = buf_144 + D.42057_703;

marking necessary through D.42057_703 stmt D.42057_703 = strlen (buf_144);
processing: D.42057_703 = strlen (buf_144);

processing: if (both_44 != 0)

marking necessary through both_44 stmt both_44 = PHI <both_63(234), both_63(235), 0(236)>
processing: both_44 = PHI <both_63(234), both_63(235), 0(236)>

marking necessary through both_63 stmt both_63 = PHI <1(230), 0(458), 0(229)>
processing: both_63 = PHI <1(230), 0(458), 0(229)>

Marking useful stmt: if (D.42046_691 == 0)

Marking useful stmt: if (D.42048_693 == 0)

processing: if (D.42048_693 == 0)

processing: if (D.42046_691 == 0)

processing: generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);

marking necessary through map.33_702 stmt map.33_702 = map;
processing: map.33_702 = map;

processing: D.42055_701 = switch_channel_test_flag (D.41512_700, 109);

marking necessary through D.41512_700 stmt D.41512_700 = session_72(D)->channel;
processing: D.41512_700 = session_72(D)->channel;

processing: D.42054_699 = switch_channel_test_flag (D.41512_698, 92);

marking necessary through D.41512_698 stmt D.41512_698 = session_72(D)->channel;
processing: D.41512_698 = session_72(D)->channel;

processing: D.42048_693 = switch_channel_test_flag (D.41512_692, 109);

marking necessary through D.41512_692 stmt D.41512_692 = session_72(D)->channel;
processing: D.41512_692 = session_72(D)->channel;

processing: D.42046_691 = switch_channel_test_flag (D.41512_690, 106);

marking necessary through D.41512_690 stmt D.41512_690 = session_72(D)->channel;
processing: D.41512_690 = session_72(D)->channel;

processing: D.42042_652 = switch_false (mult_649);

processing: D.42039_651 = switch_channel_test_flag (D.41512_650, 106);

marking necessary through D.41512_650 stmt D.41512_650 = session_72(D)->channel;
processing: D.41512_650 = session_72(D)->channel;

processing: mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);

marking necessary through D.41512_648 stmt D.41512_648 = session_72(D)->channel;
processing: D.41512_648 = session_72(D)->channel;

processing: D.41522_647->cng_pt = 0;

marking necessary through D.41522_647 stmt D.41522_647 = smh_90->mparams;
processing: D.41522_647 = smh_90->mparams;

processing: D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);

processing: switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);

Marking useful stmt: if (D.42020_625 != 0)

marking necessary through D.42024_627 stmt D.42024_627 = buf_144 + D.42023_626;
marking necessary through D.42026_629 stmt D.42026_629 = 65536 - D.42025_628;
marking necessary through D.42016_631 stmt D.42016_631 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_630].local_crypto_key;
processing: D.42016_631 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_630].local_crypto_key;

marking necessary through D.41736_630 stmt D.41736_630 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_630 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: D.42026_629 = 65536 - D.42025_628;

marking necessary through D.42025_628 stmt D.42025_628 = strlen (buf_144);
processing: D.42025_628 = strlen (buf_144);

processing: D.42024_627 = buf_144 + D.42023_626;

marking necessary through D.42023_626 stmt D.42023_626 = strlen (buf_144);
processing: D.42023_626 = strlen (buf_144);

processing: if (D.42020_625 != 0)

Marking useful stmt: if (D.48167_1535 == 0)

processing: if (D.48167_1535 == 0)

Marking useful stmt: if (D.42013_620 == 0)

marking necessary through D.48167_1535 stmt D.48167_1535 = PHI <1(215), 1(216), 0(217)>
processing: D.48167_1535 = PHI <1(215), 1(216), 0(217)>

Marking useful stmt: if (D.42016_622 == 0B)

Marking useful stmt: if (D.48168_1534 == 0)

processing: if (D.48168_1534 == 0)

marking necessary through D.48168_1534 stmt D.48168_1534 = MEM[(const char *)D.42016_622];
processing: D.48168_1534 = MEM[(const char *)D.42016_622];

marking necessary through D.42016_622 stmt D.42016_622 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_621].local_crypto_key;
processing: D.42016_622 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_621].local_crypto_key;

marking necessary through D.41736_621 stmt D.41736_621 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_621 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: if (D.42016_622 == 0B)

processing: if (D.42013_620 == 0)

Marking useful stmt: if (D.41736_618 != 9)

processing: if (D.41736_618 != 9)

marking necessary through D.41736_618 stmt D.41736_618 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_618 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: D.42020_625 = switch_channel_test_flag (D.41512_624, 92);

marking necessary through D.41512_624 stmt D.41512_624 = session_72(D)->channel;
processing: D.41512_624 = session_72(D)->channel;

processing: D.42013_620 = switch_channel_test_flag (D.41512_619, 109);

marking necessary through D.41512_619 stmt D.41512_619 = session_72(D)->channel;
processing: D.41512_619 = session_72(D)->channel;

processing: switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, 659124, D.41963_606, D.41995_611, D.41966_612, D.42010_617);

Marking useful stmt: if (D.41975_599 != D.41964_600)

marking necessary through D.42007_602 stmt D.42007_602 = buf_144 + D.42006_601;
marking necessary through D.42009_604 stmt D.42009_604 = 65536 - D.42008_603;
marking necessary through D.41962_605 stmt D.41962_605 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
marking necessary through D.41963_606 stmt D.41963_606 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
marking necessary through D.41995_611 stmt D.41995_611 = D.41965_608 + D.41994_610;
marking necessary through D.41966_612 stmt D.41966_612 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
marking necessary through D.42010_617 stmt D.42010_617 = D.41982_614 + D.41994_616;
processing: D.42010_617 = D.41982_614 + D.41994_616;

marking necessary through D.41982_614 stmt D.41982_614 = (int) D.41975_613;
marking necessary through D.41994_616 stmt D.41994_616 = D.41910_615 <= 0;
processing: D.41994_616 = D.41910_615 <= 0;

marking necessary through D.41910_615 stmt D.41910_615 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
processing: D.41910_615 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

processing: D.41982_614 = (int) D.41975_613;

marking necessary through D.41975_613 stmt D.41975_613 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
processing: D.41975_613 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

processing: D.41966_612 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: D.41995_611 = D.41965_608 + D.41994_610;

marking necessary through D.41965_608 stmt D.41965_608 = (int) D.41964_607;
marking necessary through D.41994_610 stmt D.41994_610 = D.41910_609 <= 0;
processing: D.41994_610 = D.41910_609 <= 0;

marking necessary through D.41910_609 stmt D.41910_609 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
processing: D.41910_609 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

processing: D.41965_608 = (int) D.41964_607;

marking necessary through D.41964_607 stmt D.41964_607 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_607 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41963_606 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41962_605 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

processing: D.42009_604 = 65536 - D.42008_603;

marking necessary through D.42008_603 stmt D.42008_603 = strlen (buf_144);
processing: D.42008_603 = strlen (buf_144);

processing: D.42007_602 = buf_144 + D.42006_601;

marking necessary through D.42006_601 stmt D.42006_601 = strlen (buf_144);
processing: D.42006_601 = strlen (buf_144);

processing: if (D.41975_599 != D.41964_600)

Marking useful stmt: if (D.39607_598 != 0)

marking necessary through D.41975_599 stmt D.41975_599 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
marking necessary through D.41964_600 stmt D.41964_600 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_600 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41975_599 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

processing: if (D.39607_598 != 0)

Marking useful stmt: if (D.48163_1533 == 0)

marking necessary through D.39607_598 stmt D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);
processing: D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);

marking necessary through D.41966_596 stmt D.41966_596 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
marking necessary through D.41963_597 stmt D.41963_597 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
processing: D.41963_597 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41966_596 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: if (D.48163_1533 == 0)

Marking useful stmt: if (D.48159_1531 == 0)

marking necessary through D.48163_1533 stmt D.48163_1533 = PHI <1(206), 1(207), 0(208)>
processing: D.48163_1533 = PHI <1(206), 1(207), 0(208)>

Marking useful stmt: if (D.41963_594 == 0B)

Marking useful stmt: if (D.48164_1532 == 0)

processing: if (D.48164_1532 == 0)

marking necessary through D.48164_1532 stmt D.48164_1532 = MEM[(const char *)D.41963_594];
processing: D.48164_1532 = MEM[(const char *)D.41963_594];

marking necessary through D.41963_594 stmt D.41963_594 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
processing: D.41963_594 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: if (D.41963_594 == 0B)

processing: if (D.48159_1531 == 0)

Marking useful stmt: if (D.41987_578 != 0)

Marking useful stmt: if (D.41989_580 != 0)

marking necessary through D.48159_1531 stmt D.48159_1531 = PHI <1(202), 1(203), 0(204)>
processing: D.48159_1531 = PHI <1(202), 1(203), 0(204)>

Marking useful stmt: if (D.41966_592 == 0B)

Marking useful stmt: if (D.48160_1530 == 0)

processing: if (D.48160_1530 == 0)

marking necessary through D.48160_1530 stmt D.48160_1530 = MEM[(const char *)D.41966_592];
processing: D.48160_1530 = MEM[(const char *)D.41966_592];

marking necessary through D.41966_592 stmt D.41966_592 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
processing: D.41966_592 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: if (D.41966_592 == 0B)

processing: if (D.41989_580 != 0)

processing: if (D.41987_578 != 0)

marking necessary through D.41987_578 stmt D.41987_578 = D.41985_576 || D.41986_577;
processing: D.41987_578 = D.41985_576 || D.41986_577;

marking necessary through D.41985_576 stmt D.41985_576 = D.41910_575 <= 0;
marking necessary through D.41986_577 stmt D.41986_577 = is_outbound_89 != 0;
processing: D.41986_577 = is_outbound_89 != 0;

processing: D.41985_576 = D.41910_575 <= 0;

marking necessary through D.41910_575 stmt D.41910_575 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
processing: D.41910_575 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

processing: switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, 659134, D.41963_586, D.41995_591);

marking necessary through D.41991_582 stmt D.41991_582 = buf_144 + D.41990_581;
marking necessary through D.41993_584 stmt D.41993_584 = 65536 - D.41992_583;
marking necessary through D.41962_585 stmt D.41962_585 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
marking necessary through D.41963_586 stmt D.41963_586 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
marking necessary through D.41995_591 stmt D.41995_591 = D.41965_588 + D.41994_590;
processing: D.41995_591 = D.41965_588 + D.41994_590;

marking necessary through D.41965_588 stmt D.41965_588 = (int) D.41964_587;
marking necessary through D.41994_590 stmt D.41994_590 = D.41910_589 <= 0;
processing: D.41994_590 = D.41910_589 <= 0;

marking necessary through D.41910_589 stmt D.41910_589 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
processing: D.41910_589 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

processing: D.41965_588 = (int) D.41964_587;

marking necessary through D.41964_587 stmt D.41964_587 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_587 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41963_586 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41962_585 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

processing: D.41993_584 = 65536 - D.41992_583;

marking necessary through D.41992_583 stmt D.41992_583 = strlen (buf_144);
processing: D.41992_583 = strlen (buf_144);

processing: D.41991_582 = buf_144 + D.41990_581;

marking necessary through D.41990_581 stmt D.41990_581 = strlen (buf_144);
processing: D.41990_581 = strlen (buf_144);

processing: D.41989_580 = switch_channel_test_flag (D.41512_579, 84);

marking necessary through D.41512_579 stmt D.41512_579 = session_72(D)->channel;
processing: D.41512_579 = session_72(D)->channel;

processing: switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, 659126, D.41963_569, D.41965_571, D.41966_572, D.41982_574);

Marking useful stmt: if (D.41975_562 != D.41964_563)

marking necessary through D.41979_565 stmt D.41979_565 = buf_144 + D.41978_564;
marking necessary through D.41981_567 stmt D.41981_567 = 65536 - D.41980_566;
marking necessary through D.41962_568 stmt D.41962_568 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
marking necessary through D.41963_569 stmt D.41963_569 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
marking necessary through D.41965_571 stmt D.41965_571 = (int) D.41964_570;
marking necessary through D.41966_572 stmt D.41966_572 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
marking necessary through D.41982_574 stmt D.41982_574 = (int) D.41975_573;
processing: D.41982_574 = (int) D.41975_573;

marking necessary through D.41975_573 stmt D.41975_573 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
processing: D.41975_573 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

processing: D.41966_572 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: D.41965_571 = (int) D.41964_570;

marking necessary through D.41964_570 stmt D.41964_570 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_570 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41963_569 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41962_568 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

processing: D.41981_567 = 65536 - D.41980_566;

marking necessary through D.41980_566 stmt D.41980_566 = strlen (buf_144);
processing: D.41980_566 = strlen (buf_144);

processing: D.41979_565 = buf_144 + D.41978_564;

marking necessary through D.41978_564 stmt D.41978_564 = strlen (buf_144);
processing: D.41978_564 = strlen (buf_144);

processing: if (D.41975_562 != D.41964_563)

Marking useful stmt: if (D.39598_561 != 0)

marking necessary through D.41975_562 stmt D.41975_562 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
marking necessary through D.41964_563 stmt D.41964_563 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_563 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41975_562 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

processing: if (D.39598_561 != 0)

Marking useful stmt: if (D.48155_1529 == 0)

marking necessary through D.39598_561 stmt D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);
processing: D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);

marking necessary through D.41966_559 stmt D.41966_559 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
marking necessary through D.41963_560 stmt D.41963_560 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
processing: D.41963_560 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41966_559 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: if (D.48155_1529 == 0)

Marking useful stmt: if (D.48151_1527 == 0)

marking necessary through D.48155_1529 stmt D.48155_1529 = PHI <1(193), 1(194), 0(195)>
processing: D.48155_1529 = PHI <1(193), 1(194), 0(195)>

Marking useful stmt: if (D.41963_557 == 0B)

Marking useful stmt: if (D.48156_1528 == 0)

processing: if (D.48156_1528 == 0)

marking necessary through D.48156_1528 stmt D.48156_1528 = MEM[(const char *)D.41963_557];
processing: D.48156_1528 = MEM[(const char *)D.41963_557];

marking necessary through D.41963_557 stmt D.41963_557 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
processing: D.41963_557 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: if (D.41963_557 == 0B)

processing: if (D.48151_1527 == 0)

marking necessary through D.48151_1527 stmt D.48151_1527 = PHI <1(189), 1(190), 0(191)>
processing: D.48151_1527 = PHI <1(189), 1(190), 0(191)>

Marking useful stmt: if (D.41966_555 == 0B)

Marking useful stmt: if (D.48152_1526 == 0)

processing: if (D.48152_1526 == 0)

marking necessary through D.48152_1526 stmt D.48152_1526 = MEM[(const char *)D.41966_555];
processing: D.48152_1526 = MEM[(const char *)D.41966_555];

marking necessary through D.41966_555 stmt D.41966_555 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
processing: D.41966_555 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

processing: if (D.41966_555 == 0B)

processing: switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, 659136, D.41963_552, D.41965_554);

marking necessary through D.41959_548 stmt D.41959_548 = buf_144 + D.41958_547;
marking necessary through D.41961_550 stmt D.41961_550 = 65536 - D.41960_549;
marking necessary through D.41962_551 stmt D.41962_551 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
marking necessary through D.41963_552 stmt D.41963_552 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
marking necessary through D.41965_554 stmt D.41965_554 = (int) D.41964_553;
processing: D.41965_554 = (int) D.41964_553;

marking necessary through D.41964_553 stmt D.41964_553 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
processing: D.41964_553 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

processing: D.41963_552 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

processing: D.41962_551 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

processing: D.41961_550 = 65536 - D.41960_549;

marking necessary through D.41960_549 stmt D.41960_549 = strlen (buf_144);
processing: D.41960_549 = strlen (buf_144);

processing: D.41959_548 = buf_144 + D.41958_547;

marking necessary through D.41958_547 stmt D.41958_547 = strlen (buf_144);
processing: D.41958_547 = strlen (buf_144);

processing: switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);

marking necessary through D.41954_543 stmt D.41954_543 = buf_144 + D.41953_542;
marking necessary through D.41956_545 stmt D.41956_545 = 65536 - D.41955_544;
marking necessary through D.41957_546 stmt D.41957_546 = MEM[(struct ice_t *)smh_90 + 6480B].pwd;
processing: D.41957_546 = MEM[(struct ice_t *)smh_90 + 6480B].pwd;

processing: D.41956_545 = 65536 - D.41955_544;

marking necessary through D.41955_544 stmt D.41955_544 = strlen (buf_144);
processing: D.41955_544 = strlen (buf_144);

processing: D.41954_543 = buf_144 + D.41953_542;

marking necessary through D.41953_542 stmt D.41953_542 = strlen (buf_144);
processing: D.41953_542 = strlen (buf_144);

processing: switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);

marking necessary through D.41949_538 stmt D.41949_538 = buf_144 + D.41948_537;
marking necessary through D.41951_540 stmt D.41951_540 = 65536 - D.41950_539;
marking necessary through D.41952_541 stmt D.41952_541 = MEM[(struct ice_t *)smh_90 + 6480B].ufrag;
processing: D.41952_541 = MEM[(struct ice_t *)smh_90 + 6480B].ufrag;

processing: D.41951_540 = 65536 - D.41950_539;

marking necessary through D.41950_539 stmt D.41950_539 = strlen (buf_144);
processing: D.41950_539 = strlen (buf_144);

processing: D.41949_538 = buf_144 + D.41948_537;

marking necessary through D.41948_537 stmt D.41948_537 = strlen (buf_144);
processing: D.41948_537 = strlen (buf_144);

processing: switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);

marking necessary through D.41945_532 stmt D.41945_532 = buf_144 + D.41944_531;
marking necessary through D.41947_534 stmt D.41947_534 = 65536 - D.41946_533;
marking necessary through D.41934_535 stmt D.41934_535 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
marking necessary through D.41719_536 stmt D.41719_536 = smh_90->msid;
processing: D.41719_536 = smh_90->msid;

processing: D.41934_535 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

processing: D.41947_534 = 65536 - D.41946_533;

marking necessary through D.41946_533 stmt D.41946_533 = strlen (buf_144);
processing: D.41946_533 = strlen (buf_144);

processing: D.41945_532 = buf_144 + D.41944_531;

marking necessary through D.41944_531 stmt D.41944_531 = strlen (buf_144);
processing: D.41944_531 = strlen (buf_144);

processing: switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);

marking necessary through D.41941_526 stmt D.41941_526 = buf_144 + D.41940_525;
marking necessary through D.41943_528 stmt D.41943_528 = 65536 - D.41942_527;
marking necessary through D.41934_529 stmt D.41934_529 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
marking necessary through D.41719_530 stmt D.41719_530 = smh_90->msid;
processing: D.41719_530 = smh_90->msid;

processing: D.41934_529 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

processing: D.41943_528 = 65536 - D.41942_527;

marking necessary through D.41942_527 stmt D.41942_527 = strlen (buf_144);
processing: D.41942_527 = strlen (buf_144);

processing: D.41941_526 = buf_144 + D.41940_525;

marking necessary through D.41940_525 stmt D.41940_525 = strlen (buf_144);
processing: D.41940_525 = strlen (buf_144);

processing: switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);

marking necessary through D.41937_520 stmt D.41937_520 = buf_144 + D.41936_519;
marking necessary through D.41939_522 stmt D.41939_522 = 65536 - D.41938_521;
marking necessary through D.41934_523 stmt D.41934_523 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
marking necessary through D.41719_524 stmt D.41719_524 = smh_90->msid;
processing: D.41719_524 = smh_90->msid;

processing: D.41934_523 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

processing: D.41939_522 = 65536 - D.41938_521;

marking necessary through D.41938_521 stmt D.41938_521 = strlen (buf_144);
processing: D.41938_521 = strlen (buf_144);

processing: D.41937_520 = buf_144 + D.41936_519;

marking necessary through D.41936_519 stmt D.41936_519 = strlen (buf_144);
processing: D.41936_519 = strlen (buf_144);

processing: switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);

marking necessary through D.41931_514 stmt D.41931_514 = buf_144 + D.41930_513;
marking necessary through D.41933_516 stmt D.41933_516 = 65536 - D.41932_515;
marking necessary through D.41934_517 stmt D.41934_517 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
marking necessary through D.41935_518 stmt D.41935_518 = smh_90->cname;
processing: D.41935_518 = smh_90->cname;

processing: D.41934_517 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

processing: D.41933_516 = 65536 - D.41932_515;

marking necessary through D.41932_515 stmt D.41932_515 = strlen (buf_144);
processing: D.41932_515 = strlen (buf_144);

processing: D.41931_514 = buf_144 + D.41930_513;

marking necessary through D.41930_513 stmt D.41930_513 = strlen (buf_144);
processing: D.41930_513 = strlen (buf_144);

processing: switch_stun_random_string (&tmp2, 10, "0123456789");

processing: switch_stun_random_string (&tmp1, 10, "0123456789");

processing: switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_59, ip_1);

Marking useful stmt: if (D.41910_491 > 0)

marking necessary through D.41923_502 stmt D.41923_502 = buf_144 + D.41922_501;
marking necessary through D.41925_504 stmt D.41925_504 = 65536 - D.41924_503;
marking necessary through D.41926_506 stmt D.41926_506 = D.41727_505 + 1;
processing: D.41926_506 = D.41727_505 + 1;

marking necessary through D.41727_505 stmt D.41727_505 = (int) port_2;
processing: D.41727_505 = (int) port_2;

processing: D.41925_504 = 65536 - D.41924_503;

marking necessary through D.41924_503 stmt D.41924_503 = strlen (buf_144);
processing: D.41924_503 = strlen (buf_144);

processing: D.41923_502 = buf_144 + D.41922_501;

marking necessary through D.41922_501 stmt D.41922_501 = strlen (buf_144);
processing: D.41922_501 = strlen (buf_144);

processing: if (D.41910_491 > 0)

Marking useful stmt: if (D.41523_490 != 0B)

marking necessary through D.41910_491 stmt D.41910_491 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
processing: D.41910_491 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

processing: if (D.41523_490 != 0B)

marking necessary through D.41523_490 stmt D.41523_490 = D.41522_489->rtcp_audio_interval_msec;
processing: D.41523_490 = D.41522_489->rtcp_audio_interval_msec;

marking necessary through D.41522_489 stmt D.41522_489 = smh_90->mparams;
processing: D.41522_489 = smh_90->mparams;

processing: switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_59, ip_1);

marking necessary through D.41918_497 stmt D.41918_497 = buf_144 + D.41917_496;
marking necessary through D.41920_499 stmt D.41920_499 = 65536 - D.41919_498;
marking necessary through D.41727_500 stmt D.41727_500 = (int) port_2;
processing: D.41727_500 = (int) port_2;

processing: D.41920_499 = 65536 - D.41919_498;

marking necessary through D.41919_498 stmt D.41919_498 = strlen (buf_144);
processing: D.41919_498 = strlen (buf_144);

processing: D.41918_497 = buf_144 + D.41917_496;

marking necessary through D.41917_496 stmt D.41917_496 = strlen (buf_144);
processing: D.41917_496 = strlen (buf_144);

processing: switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");

marking necessary through D.41914_493 stmt D.41914_493 = buf_144 + D.41913_492;
marking necessary through D.41916_495 stmt D.41916_495 = 65536 - D.41915_494;
processing: D.41916_495 = 65536 - D.41915_494;

marking necessary through D.41915_494 stmt D.41915_494 = strlen (buf_144);
processing: D.41915_494 = strlen (buf_144);

processing: D.41914_493 = buf_144 + D.41913_492;

marking necessary through D.41913_492 stmt D.41913_492 = strlen (buf_144);
processing: D.41913_492 = strlen (buf_144);

processing: switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);

Marking useful stmt: if (D.48147_1525 == 0)

marking necessary through D.41904_484 stmt D.41904_484 = buf_144 + D.41903_483;
marking necessary through D.41906_486 stmt D.41906_486 = 65536 - D.41905_485;
marking necessary through D.41899_487 stmt D.41899_487 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
marking necessary through D.41907_488 stmt D.41907_488 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.str;
processing: D.41907_488 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.str;

processing: D.41899_487 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;

processing: D.41906_486 = 65536 - D.41905_485;

marking necessary through D.41905_485 stmt D.41905_485 = strlen (buf_144);
processing: D.41905_485 = strlen (buf_144);

processing: D.41904_484 = buf_144 + D.41903_483;

marking necessary through D.41903_483 stmt D.41903_483 = strlen (buf_144);
processing: D.41903_483 = strlen (buf_144);

processing: if (D.48147_1525 == 0)

marking necessary through D.48147_1525 stmt D.48147_1525 = PHI <1(179), 1(180), 0(181)>
processing: D.48147_1525 = PHI <1(179), 1(180), 0(181)>

Marking useful stmt: if (D.41899_481 == 0B)

Marking useful stmt: if (D.48148_1524 == 0)

processing: if (D.48148_1524 == 0)

marking necessary through D.48148_1524 stmt D.48148_1524 = MEM[(const char *)D.41899_481];
processing: D.48148_1524 = MEM[(const char *)D.41899_481];

marking necessary through D.41899_481 stmt D.41899_481 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
processing: D.41899_481 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;

processing: if (D.41899_481 == 0B)

processing: switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);

Marking useful stmt: if (D.48143_1523 == 0)

marking necessary through D.41896_478 stmt D.41896_478 = buf_144 + D.41895_477;
marking necessary through D.41898_480 stmt D.41898_480 = 65536 - D.41897_479;
processing: D.41898_480 = 65536 - D.41897_479;

marking necessary through D.41897_479 stmt D.41897_479 = strlen (buf_144);
processing: D.41897_479 = strlen (buf_144);

processing: D.41896_478 = buf_144 + D.41895_477;

marking necessary through D.41895_477 stmt D.41895_477 = strlen (buf_144);
processing: D.41895_477 = strlen (buf_144);

processing: if (D.48143_1523 == 0)

marking necessary through D.48143_1523 stmt D.48143_1523 = PHI <1(174), 1(175), 0(176)>
processing: D.48143_1523 = PHI <1(174), 1(175), 0(176)>

Marking useful stmt: if (sr_4 == 0B)

Marking useful stmt: if (D.48144_1522 == 0)

processing: if (D.48144_1522 == 0)

marking necessary through D.48144_1522 stmt D.48144_1522 = *sr_4;
processing: D.48144_1522 = *sr_4;

processing: if (sr_4 == 0B)

processing: switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

Marking useful stmt: if (local_sdp_audio_zrtp_hash_83 != 0B)

marking necessary through D.41889_473 stmt D.41889_473 = buf_144 + D.41888_472;
marking necessary through D.41891_475 stmt D.41891_475 = 65536 - D.41890_474;
processing: D.41891_475 = 65536 - D.41890_474;

marking necessary through D.41890_474 stmt D.41890_474 = strlen (buf_144);
processing: D.41890_474 = strlen (buf_144);

processing: D.41889_473 = buf_144 + D.41888_472;

marking necessary through D.41888_472 stmt D.41888_472 = strlen (buf_144);
processing: D.41888_472 = strlen (buf_144);

processing: if (local_sdp_audio_zrtp_hash_83 != 0B)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

processing: switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);

Marking useful stmt: if (ptime_5 != 0)

marking necessary through D.41883_469 stmt D.41883_469 = buf_144 + D.41882_468;
marking necessary through D.41885_471 stmt D.41885_471 = 65536 - D.41884_470;
marking necessary through ptime_5 stmt ptime_5 = PHI <0(149), ptime_410(150)>
processing: ptime_5 = PHI <0(149), ptime_410(150)>

marking necessary through ptime_410 stmt ptime_410 = D.41825_409 / 1000;
Marking useful stmt: if (D.41819_404 != 0B)

processing: if (D.41819_404 != 0B)

marking necessary through D.41819_404 stmt D.41819_404 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
processing: D.41819_404 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;

processing: ptime_410 = D.41825_409 / 1000;

marking necessary through D.41825_409 stmt D.41825_409 = D.41819_408->microseconds_per_packet;
processing: D.41825_409 = D.41819_408->microseconds_per_packet;

marking necessary through D.41819_408 stmt D.41819_408 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
processing: D.41819_408 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;

processing: D.41885_471 = 65536 - D.41884_470;

marking necessary through D.41884_470 stmt D.41884_470 = strlen (buf_144);
processing: D.41884_470 = strlen (buf_144);

processing: D.41883_469 = buf_144 + D.41882_468;

marking necessary through D.41882_468 stmt D.41882_468 = strlen (buf_144);
processing: D.41882_468 = strlen (buf_144);

processing: if (ptime_5 != 0)

processing: switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);

Marking useful stmt: if (append_audio_78 != 0B)

marking necessary through D.41865_457 stmt D.41865_457 = buf_144 + D.41864_456;
marking necessary through D.41867_459 stmt D.41867_459 = 65536 - D.41866_458;
marking necessary through iftmp.30_61 stmt iftmp.30_61 = PHI <""(167), "\n"(168)>
processing: iftmp.30_61 = PHI <""(167), "\n"(168)>

Marking useful stmt: if (D.41876_465 == 10)

processing: if (D.41876_465 == 10)

marking necessary through D.41876_465 stmt D.41876_465 = *append_audio_62;
processing: D.41876_465 = *append_audio_62;

marking necessary through append_audio_62 stmt append_audio_62 = PHI <append_audio_463(165), append_audio_78(166)>
processing: append_audio_62 = PHI <append_audio_463(165), append_audio_78(166)>

marking necessary through append_audio_463 stmt append_audio_463 = append_audio_78 + D.41874_462;
Marking useful stmt: if (D.41870_460 != 0)

processing: if (D.41870_460 != 0)

marking necessary through D.41870_460 stmt D.41870_460 = *append_audio_78;
processing: D.41870_460 = *append_audio_78;

processing: append_audio_463 = append_audio_78 + D.41874_462;

marking necessary through D.41874_462 stmt D.41874_462 = D.41873_461 + -1;
processing: D.41874_462 = D.41873_461 + -1;

marking necessary through D.41873_461 stmt D.41873_461 = strlen (append_audio_78);
processing: D.41873_461 = strlen (append_audio_78);

processing: D.41867_459 = 65536 - D.41866_458;

marking necessary through D.41866_458 stmt D.41866_458 = strlen (buf_144);
processing: D.41866_458 = strlen (buf_144);

processing: D.41865_457 = buf_144 + D.41864_456;

marking necessary through D.41864_456 stmt D.41864_456 = strlen (buf_144);
processing: D.41864_456 = strlen (buf_144);

processing: if (append_audio_78 != 0B)

processing: D.41522_455->cng_pt = 0;

Marking useful stmt: if (D.41720_454 == 0)

marking necessary through D.41522_455 stmt D.41522_455 = smh_90->mparams;
processing: D.41522_455 = smh_90->mparams;

processing: if (D.41720_454 == 0)

Marking useful stmt: if (D.41609_446 != 0)

marking necessary through D.41720_454 stmt D.41720_454 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
processing: D.41720_454 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;

processing: if (D.41609_446 != 0)

Marking useful stmt: if (D.41846_437 != 0)

marking necessary through D.41609_446 stmt D.41609_446 = D.41607_444 && D.41608_445;
processing: D.41609_446 = D.41607_444 && D.41608_445;

marking necessary through D.41607_444 stmt D.41607_444 = D.41606_443 != 0;
marking necessary through D.41608_445 stmt D.41608_445 = use_cng_17 != 0;
processing: D.41608_445 = use_cng_17 != 0;

processing: D.41607_444 = D.41606_443 != 0;

marking necessary through D.41606_443 stmt D.41606_443 = D.41522_442->cng_pt;
processing: D.41606_443 = D.41522_442->cng_pt;

marking necessary through D.41522_442 stmt D.41522_442 = smh_90->mparams;
processing: D.41522_442 = smh_90->mparams;

processing: if (D.41846_437 != 0)

processing: switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);

marking necessary through D.41857_448 stmt D.41857_448 = buf_144 + D.41856_447;
marking necessary through D.41859_450 stmt D.41859_450 = 65536 - D.41858_449;
marking necessary through D.41612_453 stmt D.41612_453 = (int) D.41606_452;
processing: D.41612_453 = (int) D.41606_452;

marking necessary through D.41606_452 stmt D.41606_452 = D.41522_451->cng_pt;
processing: D.41606_452 = D.41522_451->cng_pt;

marking necessary through D.41522_451 stmt D.41522_451 = smh_90->mparams;
processing: D.41522_451 = smh_90->mparams;

processing: D.41859_450 = 65536 - D.41858_449;

marking necessary through D.41858_449 stmt D.41858_449 = strlen (buf_144);
processing: D.41858_449 = strlen (buf_144);

processing: D.41857_448 = buf_144 + D.41856_447;

marking necessary through D.41856_447 stmt D.41856_447 = strlen (buf_144);
processing: D.41856_447 = strlen (buf_144);

processing: switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");

marking necessary through D.41850_439 stmt D.41850_439 = buf_144 + D.41849_438;
marking necessary through D.41852_441 stmt D.41852_441 = 65536 - D.41851_440;
processing: D.41852_441 = 65536 - D.41851_440;

marking necessary through D.41851_440 stmt D.41851_440 = strlen (buf_144);
processing: D.41851_440 = strlen (buf_144);

processing: D.41850_439 = buf_144 + D.41849_438;

marking necessary through D.41849_438 stmt D.41849_438 = strlen (buf_144);
processing: D.41849_438 = strlen (buf_144);

processing: D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);

processing: switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);

Marking useful stmt: if (D.41834_419 != 0)

marking necessary through D.41843_428 stmt D.41843_428 = buf_144 + D.41842_427;
marking necessary through D.41845_430 stmt D.41845_430 = 65536 - D.41844_429;
marking necessary through D.41599_436 stmt D.41599_436 = (int) D.41596_435;
processing: D.41599_436 = (int) D.41596_435;

marking necessary through D.41596_435 stmt D.41596_435 = D.41522_434->te;
processing: D.41596_435 = D.41522_434->te;

marking necessary through D.41522_434 stmt D.41522_434 = smh_90->mparams;
processing: D.41522_434 = smh_90->mparams;

processing: D.41845_430 = 65536 - D.41844_429;

marking necessary through D.41844_429 stmt D.41844_429 = strlen (buf_144);
processing: D.41844_429 = strlen (buf_144);

processing: D.41843_428 = buf_144 + D.41842_427;

marking necessary through D.41842_427 stmt D.41842_427 = strlen (buf_144);
processing: D.41842_427 = strlen (buf_144);

processing: if (D.41834_419 != 0)

Marking useful stmt: if (D.41596_417 > 95)

processing: if (D.41596_417 > 95)

Marking useful stmt: if (D.41593_412 == 0)

Marking useful stmt: if (D.41829_413 != 0)

Marking useful stmt: if (D.41831_415 != 0)

marking necessary through D.41596_417 stmt D.41596_417 = D.41522_416->te;
processing: D.41596_417 = D.41522_416->te;

marking necessary through D.41522_416 stmt D.41522_416 = smh_90->mparams;
processing: D.41522_416 = smh_90->mparams;

processing: if (D.41831_415 != 0)

processing: if (D.41829_413 != 0)

processing: if (D.41593_412 == 0)

marking necessary through D.41593_412 stmt D.41593_412 = D.41522_411->dtmf_type;
processing: D.41593_412 = D.41522_411->dtmf_type;

marking necessary through D.41522_411 stmt D.41522_411 = smh_90->mparams;
processing: D.41522_411 = smh_90->mparams;

processing: switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);

marking necessary through D.41838_421 stmt D.41838_421 = buf_144 + D.41837_420;
marking necessary through D.41840_423 stmt D.41840_423 = 65536 - D.41839_422;
marking necessary through D.41599_426 stmt D.41599_426 = (int) D.41596_425;
processing: D.41599_426 = (int) D.41596_425;

marking necessary through D.41596_425 stmt D.41596_425 = D.41522_424->te;
processing: D.41596_425 = D.41522_424->te;

marking necessary through D.41522_424 stmt D.41522_424 = smh_90->mparams;
processing: D.41522_424 = smh_90->mparams;

processing: D.41840_423 = 65536 - D.41839_422;

marking necessary through D.41839_422 stmt D.41839_422 = strlen (buf_144);
processing: D.41839_422 = strlen (buf_144);

processing: D.41838_421 = buf_144 + D.41837_420;

marking necessary through D.41837_420 stmt D.41837_420 = strlen (buf_144);
processing: D.41837_420 = strlen (buf_144);

processing: D.41834_419 = switch_channel_test_flag (D.41512_418, 106);

marking necessary through D.41512_418 stmt D.41512_418 = session_72(D)->channel;
processing: D.41512_418 = session_72(D)->channel;

processing: D.41831_415 = switch_channel_test_flag (D.41512_414, 93);

marking necessary through D.41512_414 stmt D.41512_414 = session_72(D)->channel;
processing: D.41512_414 = session_72(D)->channel;

processing: D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);

processing: switch_mutex_unlock (D.41747_403);

marking necessary through D.41747_403 stmt D.41747_403 = smh_90->sdp_mutex;
processing: D.41747_403 = smh_90->sdp_mutex;

processing: switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);

Marking useful stmt: if (D.41748_391 != D.41742_393)

marking necessary through D.41813_395 stmt D.41813_395 = buf_144 + D.41812_394;
marking necessary through D.41815_397 stmt D.41815_397 = 65536 - D.41814_396;
marking necessary through D.41755_399 stmt D.41755_399 = (int) D.41748_398;
marking necessary through D.41816_400 stmt D.41816_400 = pmap_35->iananame;
marking necessary through D.41817_401 stmt D.41817_401 = pmap_35->rate;
processing: D.41817_401 = pmap_35->rate;

processing: D.41816_400 = pmap_35->iananame;

processing: D.41755_399 = (int) D.41748_398;

marking necessary through D.41748_398 stmt D.41748_398 = pmap_35->pt;
processing: D.41748_398 = pmap_35->pt;

processing: D.41815_397 = 65536 - D.41814_396;

marking necessary through D.41814_396 stmt D.41814_396 = strlen (buf_144);
processing: D.41814_396 = strlen (buf_144);

processing: D.41813_395 = buf_144 + D.41812_394;

marking necessary through D.41812_394 stmt D.41812_394 = strlen (buf_144);
processing: D.41812_394 = strlen (buf_144);

processing: if (D.41748_391 != D.41742_393)

marking necessary through D.41748_391 stmt D.41748_391 = pmap_35->pt;
marking necessary through D.41742_393 stmt D.41742_393 = D.41566_392->pt;
processing: D.41742_393 = D.41566_392->pt;

marking necessary through D.41566_392 stmt D.41566_392 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_392 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41748_391 = pmap_35->pt;

processing: switch_mutex_lock (D.41747_388);

marking necessary through D.41747_388 stmt D.41747_388 = smh_90->sdp_mutex;
processing: D.41747_388 = smh_90->sdp_mutex;

processing: D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);

processing: switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);

Marking useful stmt: if (fmtp_out_21 != 0B)

marking necessary through D.41804_381 stmt D.41804_381 = buf_144 + D.41803_380;
marking necessary through D.41806_383 stmt D.41806_383 = 65536 - D.41805_382;
marking necessary through D.41795_386 stmt D.41795_386 = (int) D.41794_385;
marking necessary through fmtp_out_21 stmt fmtp_out_21 = PHI <fmtp_out_141(62), fmtp_out_var_82(63)>
processing: fmtp_out_21 = PHI <fmtp_out_141(62), fmtp_out_var_82(63)>

marking necessary through fmtp_out_141 stmt fmtp_out_141 = D.41566_140->fmtp_out;
Marking useful stmt: if (fmtp_out_var_82 != 0B)

processing: if (fmtp_out_var_82 != 0B)

processing: fmtp_out_141 = D.41566_140->fmtp_out;

marking necessary through D.41566_140 stmt D.41566_140 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_140 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41795_386 = (int) D.41794_385;

marking necessary through D.41794_385 stmt D.41794_385 = D.41566_384->agreed_pt;
processing: D.41794_385 = D.41566_384->agreed_pt;

marking necessary through D.41566_384 stmt D.41566_384 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_384 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41806_383 = 65536 - D.41805_382;

marking necessary through D.41805_382 stmt D.41805_382 = strlen (buf_144);
processing: D.41805_382 = strlen (buf_144);

processing: D.41804_381 = buf_144 + D.41803_380;

marking necessary through D.41803_380 stmt D.41803_380 = strlen (buf_144);
processing: D.41803_380 = strlen (buf_144);

processing: if (fmtp_out_21 != 0B)

processing: switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);

Marking useful stmt: if (D.41783_359 > 1)

marking necessary through D.41798_372 stmt D.41798_372 = buf_144 + D.41797_371;
marking necessary through D.41800_374 stmt D.41800_374 = 65536 - D.41799_373;
marking necessary through D.41795_377 stmt D.41795_377 = (int) D.41794_376;
marking necessary through D.41786_379 stmt D.41786_379 = D.41566_378->rm_encoding;
marking necessary through rate_351 stmt rate_351 = D.41566_350->adv_rm_rate;
processing: rate_351 = D.41566_350->adv_rm_rate;

marking necessary through D.41566_350 stmt D.41566_350 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_350 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41786_379 = D.41566_378->rm_encoding;

marking necessary through D.41566_378 stmt D.41566_378 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_378 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41795_377 = (int) D.41794_376;

marking necessary through D.41794_376 stmt D.41794_376 = D.41566_375->agreed_pt;
processing: D.41794_376 = D.41566_375->agreed_pt;

marking necessary through D.41566_375 stmt D.41566_375 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_375 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41800_374 = 65536 - D.41799_373;

marking necessary through D.41799_373 stmt D.41799_373 = strlen (buf_144);
processing: D.41799_373 = strlen (buf_144);

processing: D.41798_372 = buf_144 + D.41797_371;

marking necessary through D.41797_371 stmt D.41797_371 = strlen (buf_144);
processing: D.41797_371 = strlen (buf_144);

processing: if (D.41783_359 > 1)

marking necessary through D.41783_359 stmt D.41783_359 = D.41566_358->adv_channels;
processing: D.41783_359 = D.41566_358->adv_channels;

marking necessary through D.41566_358 stmt D.41566_358 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_358 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);

marking necessary through D.41791_361 stmt D.41791_361 = buf_144 + D.41790_360;
marking necessary through D.41793_363 stmt D.41793_363 = 65536 - D.41792_362;
marking necessary through D.41795_366 stmt D.41795_366 = (int) D.41794_365;
marking necessary through D.41786_368 stmt D.41786_368 = D.41566_367->rm_encoding;
marking necessary through D.41783_370 stmt D.41783_370 = D.41566_369->adv_channels;
processing: D.41783_370 = D.41566_369->adv_channels;

marking necessary through D.41566_369 stmt D.41566_369 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_369 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41786_368 = D.41566_367->rm_encoding;

marking necessary through D.41566_367 stmt D.41566_367 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_367 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41795_366 = (int) D.41794_365;

marking necessary through D.41794_365 stmt D.41794_365 = D.41566_364->agreed_pt;
processing: D.41794_365 = D.41566_364->agreed_pt;

marking necessary through D.41566_364 stmt D.41566_364 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_364 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41793_363 = 65536 - D.41792_362;

marking necessary through D.41792_362 stmt D.41792_362 = strlen (buf_144);
processing: D.41792_362 = strlen (buf_144);

processing: D.41791_361 = buf_144 + D.41790_360;

marking necessary through D.41790_360 stmt D.41790_360 = strlen (buf_144);
processing: D.41790_360 = strlen (buf_144);

processing: D.41566_355->adv_channels = D.41787_357;

Marking useful stmt: if (D.41783_353 == 0)

marking necessary through D.41566_355 stmt D.41566_355 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_355 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: if (D.41783_353 == 0)

marking necessary through D.41783_353 stmt D.41783_353 = D.41566_352->adv_channels;
processing: D.41783_353 = D.41566_352->adv_channels;

marking necessary through D.41566_352 stmt D.41566_352 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_352 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41787_357 = get_channels (D.41786_356, 1);

marking necessary through D.41786_356 stmt D.41786_356 = D.41566_355->rm_encoding;
processing: D.41786_356 = D.41566_355->rm_encoding;

processing: switch_snprintf (D.41780_347, D.41782_349, "\n");

marking necessary through D.41780_347 stmt D.41780_347 = buf_144 + D.41779_346;
marking necessary through D.41782_349 stmt D.41782_349 = 65536 - D.41781_348;
processing: D.41782_349 = 65536 - D.41781_348;

marking necessary through D.41781_348 stmt D.41781_348 = strlen (buf_144);
processing: D.41781_348 = strlen (buf_144);

processing: D.41780_347 = buf_144 + D.41779_346;

marking necessary through D.41779_346 stmt D.41779_346 = strlen (buf_144);
processing: D.41779_346 = strlen (buf_144);

processing: switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);

Marking useful stmt: if (D.41609_338 != 0)

marking necessary through D.41776_340 stmt D.41776_340 = buf_144 + D.41775_339;
marking necessary through D.41778_342 stmt D.41778_342 = 65536 - D.41777_341;
marking necessary through D.41612_345 stmt D.41612_345 = (int) D.41606_344;
processing: D.41612_345 = (int) D.41606_344;

marking necessary through D.41606_344 stmt D.41606_344 = D.41522_343->cng_pt;
processing: D.41606_344 = D.41522_343->cng_pt;

marking necessary through D.41522_343 stmt D.41522_343 = smh_90->mparams;
processing: D.41522_343 = smh_90->mparams;

processing: D.41778_342 = 65536 - D.41777_341;

marking necessary through D.41777_341 stmt D.41777_341 = strlen (buf_144);
processing: D.41777_341 = strlen (buf_144);

processing: D.41776_340 = buf_144 + D.41775_339;

marking necessary through D.41775_339 stmt D.41775_339 = strlen (buf_144);
processing: D.41775_339 = strlen (buf_144);

processing: if (D.41609_338 != 0)

Marking useful stmt: if (D.41770_333 == 0)

marking necessary through D.41609_338 stmt D.41609_338 = D.41607_336 && D.41608_337;
processing: D.41609_338 = D.41607_336 && D.41608_337;

marking necessary through D.41607_336 stmt D.41607_336 = D.41606_335 != 0;
marking necessary through D.41608_337 stmt D.41608_337 = use_cng_17 != 0;
processing: D.41608_337 = use_cng_17 != 0;

processing: D.41607_336 = D.41606_335 != 0;

marking necessary through D.41606_335 stmt D.41606_335 = D.41522_334->cng_pt;
processing: D.41606_335 = D.41522_334->cng_pt;

marking necessary through D.41522_334 stmt D.41522_334 = smh_90->mparams;
processing: D.41522_334 = smh_90->mparams;

processing: if (D.41770_333 == 0)

processing: D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);

processing: switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);

Marking useful stmt: if (D.41596_325 > 95)

marking necessary through D.41767_327 stmt D.41767_327 = buf_144 + D.41766_326;
marking necessary through D.41769_329 stmt D.41769_329 = 65536 - D.41768_328;
marking necessary through D.41599_332 stmt D.41599_332 = (int) D.41596_331;
processing: D.41599_332 = (int) D.41596_331;

marking necessary through D.41596_331 stmt D.41596_331 = D.41522_330->te;
processing: D.41596_331 = D.41522_330->te;

marking necessary through D.41522_330 stmt D.41522_330 = smh_90->mparams;
processing: D.41522_330 = smh_90->mparams;

processing: D.41769_329 = 65536 - D.41768_328;

marking necessary through D.41768_328 stmt D.41768_328 = strlen (buf_144);
processing: D.41768_328 = strlen (buf_144);

processing: D.41767_327 = buf_144 + D.41766_326;

marking necessary through D.41766_326 stmt D.41766_326 = strlen (buf_144);
processing: D.41766_326 = strlen (buf_144);

processing: if (D.41596_325 > 95)

Marking useful stmt: if (D.41593_320 == 0)

Marking useful stmt: if (D.41761_321 != 0)

Marking useful stmt: if (D.41763_323 != 0)

marking necessary through D.41596_325 stmt D.41596_325 = D.41522_324->te;
processing: D.41596_325 = D.41522_324->te;

marking necessary through D.41522_324 stmt D.41522_324 = smh_90->mparams;
processing: D.41522_324 = smh_90->mparams;

processing: if (D.41763_323 != 0)

processing: if (D.41761_321 != 0)

processing: if (D.41593_320 == 0)

marking necessary through D.41593_320 stmt D.41593_320 = D.41522_319->dtmf_type;
processing: D.41593_320 = D.41522_319->dtmf_type;

marking necessary through D.41522_319 stmt D.41522_319 = smh_90->mparams;
processing: D.41522_319 = smh_90->mparams;

processing: D.41763_323 = switch_channel_test_flag (D.41512_322, 93);

marking necessary through D.41512_322 stmt D.41512_322 = session_72(D)->channel;
processing: D.41512_322 = session_72(D)->channel;

processing: D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);

processing: switch_mutex_unlock (D.41747_318);

marking necessary through D.41747_318 stmt D.41747_318 = smh_90->sdp_mutex;
processing: D.41747_318 = smh_90->sdp_mutex;

processing: switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);

Marking useful stmt: if (D.41748_308 != D.41742_310)

marking necessary through D.41752_312 stmt D.41752_312 = buf_144 + D.41751_311;
marking necessary through D.41754_314 stmt D.41754_314 = 65536 - D.41753_313;
marking necessary through D.41755_316 stmt D.41755_316 = (int) D.41748_315;
processing: D.41755_316 = (int) D.41748_315;

marking necessary through D.41748_315 stmt D.41748_315 = pmap_34->pt;
processing: D.41748_315 = pmap_34->pt;

processing: D.41754_314 = 65536 - D.41753_313;

marking necessary through D.41753_313 stmt D.41753_313 = strlen (buf_144);
processing: D.41753_313 = strlen (buf_144);

processing: D.41752_312 = buf_144 + D.41751_311;

marking necessary through D.41751_311 stmt D.41751_311 = strlen (buf_144);
processing: D.41751_311 = strlen (buf_144);

processing: if (D.41748_308 != D.41742_310)

marking necessary through D.41748_308 stmt D.41748_308 = pmap_34->pt;
marking necessary through D.41742_310 stmt D.41742_310 = D.41566_309->pt;
processing: D.41742_310 = D.41566_309->pt;

marking necessary through D.41566_309 stmt D.41566_309 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_309 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41748_308 = pmap_34->pt;

processing: switch_mutex_lock (D.41747_305);

marking necessary through D.41747_305 stmt D.41747_305 = smh_90->sdp_mutex;
processing: D.41747_305 = smh_90->sdp_mutex;

processing: D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);

processing: switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);

marking necessary through D.41739_298 stmt D.41739_298 = buf_144 + D.41738_297;
marking necessary through D.41741_300 stmt D.41741_300 = 65536 - D.41740_299;
marking necessary through D.41743_303 stmt D.41743_303 = (int) D.41742_302;
processing: D.41743_303 = (int) D.41742_302;

marking necessary through D.41742_302 stmt D.41742_302 = D.41566_301->pt;
processing: D.41742_302 = D.41566_301->pt;

marking necessary through D.41566_301 stmt D.41566_301 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
processing: D.41566_301 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

processing: D.41741_300 = 65536 - D.41740_299;

marking necessary through D.41740_299 stmt D.41740_299 = strlen (buf_144);
processing: D.41740_299 = strlen (buf_144);

processing: D.41739_298 = buf_144 + D.41738_297;

marking necessary through D.41738_297 stmt D.41738_297 = strlen (buf_144);
processing: D.41738_297 = strlen (buf_144);

processing: switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);

marking necessary through D.41724_286 stmt D.41724_286 = buf_144 + D.41723_285;
marking necessary through D.41726_288 stmt D.41726_288 = 65536 - D.41725_287;
marking necessary through D.41727_289 stmt D.41727_289 = (int) port_2;
processing: D.41727_289 = (int) port_2;

processing: D.41726_288 = 65536 - D.41725_287;

marking necessary through D.41725_287 stmt D.41725_287 = strlen (buf_144);
processing: D.41725_287 = strlen (buf_144);

processing: D.41724_286 = buf_144 + D.41723_285;

marking necessary through D.41723_285 stmt D.41723_285 = strlen (buf_144);
processing: D.41723_285 = strlen (buf_144);

processing: D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);

marking necessary through iftmp.29_60 stmt iftmp.29_60 = PHI <1(116), 0(459), 1(115), 0(114)>
processing: iftmp.29_60 = PHI <1(116), 0(459), 1(115), 0(114)>

Marking useful stmt: if (D.41734_292 != 0)

Marking useful stmt: if (D.41736_293 != 9)

Marking useful stmt: if (D.41732_290 == 0)

processing: if (D.41732_290 == 0)

marking necessary through D.41732_290 stmt D.41732_290 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
processing: D.41732_290 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;

processing: if (D.41736_293 != 9)

marking necessary through D.41736_293 stmt D.41736_293 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
processing: D.41736_293 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

processing: if (D.41734_292 != 0)

processing: D.41734_292 = switch_channel_test_flag (D.41512_291, 109);

marking necessary through D.41512_291 stmt D.41512_291 = session_72(D)->channel;
processing: D.41512_291 = session_72(D)->channel;

processing: switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);

Marking useful stmt: if (D.41712_278 != 0)

marking necessary through D.41716_280 stmt D.41716_280 = buf_144 + D.41715_279;
marking necessary through D.41718_282 stmt D.41718_282 = 65536 - D.41717_281;
marking necessary through D.41719_283 stmt D.41719_283 = smh_90->msid;
processing: D.41719_283 = smh_90->msid;

processing: D.41718_282 = 65536 - D.41717_281;

marking necessary through D.41717_281 stmt D.41717_281 = strlen (buf_144);
processing: D.41717_281 = strlen (buf_144);

processing: D.41716_280 = buf_144 + D.41715_279;

marking necessary through D.41715_279 stmt D.41715_279 = strlen (buf_144);
processing: D.41715_279 = strlen (buf_144);

processing: if (D.41712_278 != 0)

processing: gen_ice (session_72(D), 0, ip_1, port_2);

processing: D.41712_278 = switch_channel_test_flag (D.41535_277, 108);

marking necessary through D.41535_277 stmt D.41535_277 = D.41534_276->channel;
processing: D.41535_277 = D.41534_276->channel;

marking necessary through D.41534_276 stmt D.41534_276 = smh_90->session;
processing: D.41534_276 = smh_90->session;

processing: switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_59, ip_1, username_143, family_59, ip_1, &srbuf);

marking necessary through username_143 stmt username_143 = D.41522_142->sdp_username;
marking necessary through D.41682_274 stmt D.41682_274 = smh_90->owner_id;
marking necessary through D.41689_275 stmt D.41689_275 = smh_90->session_id;
processing: D.41689_275 = smh_90->session_id;

processing: D.41682_274 = smh_90->owner_id;

processing: username_143 = D.41522_142->sdp_username;

marking necessary through D.41522_142 stmt D.41522_142 = smh_90->mparams;
processing: D.41522_142 = smh_90->mparams;

processing: switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);

processing: D.41703_267 = switch_true (var_val_266);

processing: var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);

marking necessary through D.41512_265 stmt D.41512_265 = session_72(D)->channel;
processing: D.41512_265 = session_72(D)->channel;

processing: smh_90->session_id = D.41696_261;

marking necessary through D.41696_261 stmt D.41696_261 = D.41689_260 + 1;
processing: D.41696_261 = D.41689_260 + 1;

marking necessary through D.41689_260 stmt D.41689_260 = smh_90->session_id;
processing: D.41689_260 = smh_90->session_id;

processing: switch_channel_set_flag_value (D.41512_259, 102, 1);

Marking useful stmt: if (D.41693_258 != 0)

marking necessary through D.41512_259 stmt D.41512_259 = session_72(D)->channel;
processing: D.41512_259 = session_72(D)->channel;

processing: if (D.41693_258 != 0)

processing: D.41693_258 = switch_true (D.41692_257);

processing: D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);

marking necessary through D.41512_256 stmt D.41512_256 = session_72(D)->channel;
processing: D.41512_256 = session_72(D)->channel;

processing: smh_90->session_id = D.41682_255;

Marking useful stmt: if (D.41689_254 == 0)

marking necessary through D.41682_255 stmt D.41682_255 = smh_90->owner_id;
processing: D.41682_255 = smh_90->owner_id;

processing: if (D.41689_254 == 0)

marking necessary through D.41689_254 stmt D.41689_254 = smh_90->session_id;
processing: D.41689_254 = smh_90->session_id;

processing: smh_90->owner_id = D.41688_253;

Marking useful stmt: if (D.41682_249 == 0)

marking necessary through D.41688_253 stmt D.41688_253 = D.41686_251 - D.41687_252;
processing: D.41688_253 = D.41686_251 - D.41687_252;

marking necessary through D.41686_251 stmt D.41686_251 = (unsigned int) D.41685_250;
marking necessary through D.41687_252 stmt D.41687_252 = (unsigned int) port_2;
processing: D.41687_252 = (unsigned int) port_2;

processing: D.41686_251 = (unsigned int) D.41685_250;

processing: if (D.41682_249 == 0)

marking necessary through D.41682_249 stmt D.41682_249 = smh_90->owner_id;
processing: D.41682_249 = smh_90->owner_id;

processing: D.41685_250 = switch_epoch_time_now (0B);

processing: var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);

marking necessary through D.41512_245 stmt D.41512_245 = session_72(D)->channel;
processing: D.41512_245 = session_72(D)->channel;

processing: free (buf_144);

Marking useful stmt: if (buf_144 != 0B)

processing: if (buf_144 != 0B)

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);

processing: D.41673_242 = switch_channel_get_name (D.41512_241);

marking necessary through D.41512_241 stmt D.41512_241 = session_72(D)->channel;
processing: D.41512_241 = session_72(D)->channel;

processing: free (buf_144);

Marking useful stmt: if (buf_144 != 0B)

processing: if (buf_144 != 0B)

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);

processing: D.41664_236 = switch_channel_get_name (D.41512_235);

marking necessary through D.41512_235 stmt D.41512_235 = session_72(D)->channel;
processing: D.41512_235 = session_72(D)->channel;

processing: free (buf_144);

Marking useful stmt: if (buf_144 != 0B)

processing: if (buf_144 != 0B)

processing: D.41655_231 = switch_channel_test_flag (D.41512_230, 29);

marking necessary through D.41512_230 stmt D.41512_230 = session_72(D)->channel;
processing: D.41512_230 = session_72(D)->channel;

processing: D.41653_229 = switch_channel_test_flag (D.41512_228, 15);

marking necessary through D.41512_228 stmt D.41512_228 = session_72(D)->channel;
processing: D.41512_228 = session_72(D)->channel;

processing: switch_channel_set_flag_value (D.41512_220, 110, 1);

Marking useful stmt: if (val_218 == 0B)

Marking useful stmt: if (D.41642_219 != 0)

marking necessary through D.41512_220 stmt D.41512_220 = session_72(D)->channel;
processing: D.41512_220 = session_72(D)->channel;

processing: if (D.41642_219 != 0)

processing: if (val_218 == 0B)

processing: D.41642_219 = switch_true (val_218);

processing: val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);

marking necessary through D.41512_217 stmt D.41512_217 = session_72(D)->channel;
processing: D.41512_217 = session_72(D)->channel;

processing: switch_core_session_rwunlock (orig_session.25_215);

Marking useful stmt: if (orig_session.25_214 != 0B)

marking necessary through orig_session.25_215 stmt orig_session.25_215 = orig_session;
processing: orig_session.25_215 = orig_session;

processing: if (orig_session.25_214 != 0B)

marking necessary through orig_session.25_214 stmt orig_session.25_214 = orig_session;
processing: orig_session.25_214 = orig_session;

processing: switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);

marking necessary through D.41620_205 stmt D.41620_205 = D.41619_204 != 0;
marking necessary through D.41621_206 stmt D.41621_206 = imp_167->iananame;
marking necessary through D.41630_208 stmt D.41630_208 = (uint32_t) D.41590_207;
marking necessary through D.41631_209 stmt D.41631_209 = imp_167->samples_per_second;
marking necessary through D.41634_212 stmt D.41634_212 = (uint32_t) D.41633_211;
processing: D.41634_212 = (uint32_t) D.41633_211;

marking necessary through D.41633_211 stmt D.41633_211 = D.41632_210 / 1000;
processing: D.41633_211 = D.41632_210 / 1000;

marking necessary through D.41632_210 stmt D.41632_210 = imp_167->microseconds_per_packet;
processing: D.41632_210 = imp_167->microseconds_per_packet;

marking necessary through imp_167 stmt imp_167 = smh_90->codecs[i_37];
processing: imp_167 = smh_90->codecs[i_37];

processing: D.41631_209 = imp_167->samples_per_second;

processing: D.41630_208 = (uint32_t) D.41590_207;

marking necessary through D.41590_207 stmt D.41590_207 = smh_90->ianacodes[i_37];
processing: D.41590_207 = smh_90->ianacodes[i_37];

processing: D.41621_206 = imp_167->iananame;

processing: D.41620_205 = D.41619_204 != 0;

marking necessary through D.41619_204 stmt D.41619_204 = imp_167->codec_type;
processing: D.41619_204 = imp_167->codec_type;

processing: smh_90->payload_space = D.41602_203;

Marking useful stmt: if (orig_session.25_191 != 0B)

Marking useful stmt: if (D.41622_196 == 0)

marking necessary through D.41602_203 stmt D.41602_203 = D.41578_201 + 1;
processing: D.41602_203 = D.41578_201 + 1;

marking necessary through D.41578_201 stmt D.41578_201 = smh_90->payload_space;
processing: D.41578_201 = smh_90->payload_space;

processing: if (D.41622_196 == 0)

processing: if (orig_session.25_191 != 0B)

Marking useful stmt: if (D.41590_168 > 64)

marking necessary through orig_session.25_191 stmt orig_session.25_191 = orig_session;
processing: orig_session.25_191 = orig_session;

processing: if (D.41590_168 > 64)

marking necessary through D.41590_168 stmt D.41590_168 = smh_90->ianacodes[i_37];
processing: D.41590_168 = smh_90->ianacodes[i_37];

processing: smh_90->ianacodes[i_37] = D.41629_202;

marking necessary through D.41629_202 stmt D.41629_202 = (unsigned char) D.41578_201;
processing: D.41629_202 = (unsigned char) D.41578_201;

processing: smh_90->fmtps[i_37] = D.41628_200;

Marking useful stmt: if (orig_fmtp.27_198 != 0B)

processing: if (orig_fmtp.27_198 != 0B)

marking necessary through orig_fmtp.27_198 stmt orig_fmtp.27_198 = orig_fmtp;
processing: orig_fmtp.27_198 = orig_fmtp;

processing: D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);

marking necessary through orig_fmtp.27_199 stmt orig_fmtp.27_199 = orig_fmtp;
processing: orig_fmtp.27_199 = orig_fmtp;

processing: smh_90->ianacodes[i_37] = orig_pt.26_197;

marking necessary through orig_pt.26_197 stmt orig_pt.26_197 = orig_pt;
processing: orig_pt.26_197 = orig_pt;

processing: D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);

marking necessary through orig_session.25_192 stmt orig_session.25_192 = orig_session;
marking necessary through D.41620_194 stmt D.41620_194 = D.41619_193 != 0;
marking necessary through D.41621_195 stmt D.41621_195 = imp_167->iananame;
processing: D.41621_195 = imp_167->iananame;

processing: D.41620_194 = D.41619_193 != 0;

marking necessary through D.41619_193 stmt D.41619_193 = imp_167->codec_type;
processing: D.41619_193 = imp_167->codec_type;

processing: orig_session.25_192 = orig_session;

processing: smh_90->payload_space = D.41602_190;

Marking useful stmt: if (D.41612_187 == D.41578_188)

marking necessary through D.41602_190 stmt D.41602_190 = D.41578_189 + 1;
processing: D.41602_190 = D.41578_189 + 1;

marking necessary through D.41578_189 stmt D.41578_189 = smh_90->payload_space;
processing: D.41578_189 = smh_90->payload_space;

processing: if (D.41612_187 == D.41578_188)

Marking useful stmt: if (D.41609_184 != 0)

marking necessary through D.41612_187 stmt D.41612_187 = (int) D.41606_186;
marking necessary through D.41578_188 stmt D.41578_188 = smh_90->payload_space;
processing: D.41578_188 = smh_90->payload_space;

processing: D.41612_187 = (int) D.41606_186;

marking necessary through D.41606_186 stmt D.41606_186 = D.41522_185->cng_pt;
processing: D.41606_186 = D.41522_185->cng_pt;

marking necessary through D.41522_185 stmt D.41522_185 = smh_90->mparams;
processing: D.41522_185 = smh_90->mparams;

processing: if (D.41609_184 != 0)

Marking useful stmt: if (D.41603_179 == 0)

marking necessary through D.41609_184 stmt D.41609_184 = D.41607_182 && D.41608_183;
processing: D.41609_184 = D.41607_182 && D.41608_183;

marking necessary through D.41607_182 stmt D.41607_182 = D.41606_181 != 0;
marking necessary through D.41608_183 stmt D.41608_183 = use_cng_17 != 0;
processing: D.41608_183 = use_cng_17 != 0;

processing: D.41607_182 = D.41606_181 != 0;

marking necessary through D.41606_181 stmt D.41606_181 = D.41522_180->cng_pt;
processing: D.41606_181 = D.41522_180->cng_pt;

marking necessary through D.41522_180 stmt D.41522_180 = smh_90->mparams;
processing: D.41522_180 = smh_90->mparams;

processing: if (D.41603_179 == 0)

processing: D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);

processing: smh_90->payload_space = D.41602_178;

Marking useful stmt: if (D.41599_175 == D.41578_176)

marking necessary through D.41602_178 stmt D.41602_178 = D.41578_177 + 1;
processing: D.41602_178 = D.41578_177 + 1;

marking necessary through D.41578_177 stmt D.41578_177 = smh_90->payload_space;
processing: D.41578_177 = smh_90->payload_space;

processing: if (D.41599_175 == D.41578_176)

Marking useful stmt: if (D.41596_172 > 95)

marking necessary through D.41599_175 stmt D.41599_175 = (int) D.41596_174;
marking necessary through D.41578_176 stmt D.41578_176 = smh_90->payload_space;
processing: D.41578_176 = smh_90->payload_space;

processing: D.41599_175 = (int) D.41596_174;

marking necessary through D.41596_174 stmt D.41596_174 = D.41522_173->te;
processing: D.41596_174 = D.41522_173->te;

marking necessary through D.41522_173 stmt D.41522_173 = smh_90->mparams;
processing: D.41522_173 = smh_90->mparams;

processing: if (D.41596_172 > 95)

Marking useful stmt: if (D.41593_170 == 0)

marking necessary through D.41596_172 stmt D.41596_172 = D.41522_171->te;
processing: D.41596_172 = D.41522_171->te;

marking necessary through D.41522_171 stmt D.41522_171 = smh_90->mparams;
processing: D.41522_171 = smh_90->mparams;

processing: if (D.41593_170 == 0)

marking necessary through D.41593_170 stmt D.41593_170 = D.41522_169->dtmf_type;
processing: D.41593_170 = D.41522_169->dtmf_type;

marking necessary through D.41522_169 stmt D.41522_169 = smh_90->mparams;
processing: D.41522_169 = smh_90->mparams;

processing: switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);

processing: smh_90->ianacodes[i_36] = D.41586_161;

marking necessary through D.41586_161 stmt D.41586_161 = D.41585_160->ianacode;
processing: D.41586_161 = D.41585_160->ianacode;

marking necessary through D.41585_160 stmt D.41585_160 = smh_90->codecs[i_36];
processing: D.41585_160 = smh_90->codecs[i_36];

processing: smh_90->payload_space = 98;

Marking useful stmt: if (D.41581_156 != 0)

processing: if (D.41581_156 != 0)

processing: smh_90->payload_space = 102;

processing: D.41581_156 = switch_channel_test_flag (D.41512_155, 106);

marking necessary through D.41512_155 stmt D.41512_155 = session_72(D)->channel;
processing: D.41512_155 = session_72(D)->channel;

processing: D.41522_153->cng_pt = 0;

marking necessary through D.41522_153 stmt D.41522_153 = smh_90->mparams;
processing: D.41522_153 = smh_90->mparams;

processing: D.41577_151 = switch_true (val_150);

processing: val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);

marking necessary through D.41512_149 stmt D.41512_149 = session_72(D)->channel;
processing: D.41512_149 = session_72(D)->channel;

processing: D.41575_148 = switch_true (val_147);

processing: val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);

marking necessary through D.41512_146 stmt D.41512_146 = session_72(D)->channel;
processing: D.41512_146 = session_72(D)->channel;

processing: D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);

processing: switch_core_media_check_dtmf_type (session_72(D));

processing: __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);

processing: buf_144 = calloc (1, 65536);

processing: switch_core_session_check_outgoing_crypto (session_72(D));

Marking useful stmt: if (is_outbound_89 != 0)

Marking useful stmt: if (D.41544_116 != 0)

Marking useful stmt: if (D.41546_118 != 0)

processing: if (D.41546_118 != 0)

processing: if (D.41544_116 != 0)

processing: if (is_outbound_89 != 0)

processing: switch_core_session_parse_crypto_prefs (session_72(D));

processing: generate_local_fingerprint (smh_90, 0);

Marking useful stmt: if (D.41562_131 != 0)

Marking useful stmt: if (D.41565_135 != 0)

processing: if (D.41565_135 != 0)

processing: if (D.41562_131 != 0)

Marking useful stmt: if (D.41557_129 != 0)

processing: if (D.41557_129 != 0)

Marking useful stmt: if (D.41554_128 != 0)

processing: if (D.41554_128 != 0)

processing: switch_channel_set_flag_value (D.41535_139, 92, 1);

marking necessary through D.41535_139 stmt D.41535_139 = D.41534_138->channel;
processing: D.41535_139 = D.41534_138->channel;

marking necessary through D.41534_138 stmt D.41534_138 = smh_90->session;
processing: D.41534_138 = smh_90->session;

processing: switch_channel_set_flag_value (D.41535_137, 109, 1);

marking necessary through D.41535_137 stmt D.41535_137 = D.41534_136->channel;
processing: D.41535_137 = D.41534_136->channel;

marking necessary through D.41534_136 stmt D.41534_136 = smh_90->session;
processing: D.41534_136 = smh_90->session;

processing: D.41565_135 = switch_true (D.41564_134);

processing: D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);

marking necessary through D.41535_133 stmt D.41535_133 = D.41534_132->channel;
processing: D.41535_133 = D.41534_132->channel;

marking necessary through D.41534_132 stmt D.41534_132 = smh_90->session;
processing: D.41534_132 = smh_90->session;

processing: D.41562_131 = switch_channel_test_flag (D.41512_130, 106);

marking necessary through D.41512_130 stmt D.41512_130 = session_72(D)->channel;
processing: D.41512_130 = session_72(D)->channel;

processing: D.41557_129 = dtls_ok (session_72(D));

processing: D.41554_128 = switch_rtp_has_dtls ();

processing: D.41522_127->rtcp_video_interval_msec = "5000";

Marking useful stmt: if (D.41551_123 != 0)

marking necessary through D.41522_127 stmt D.41522_127 = smh_90->mparams;
processing: D.41522_127 = smh_90->mparams;

processing: if (D.41551_123 != 0)

Marking useful stmt: if (D.41547_120 == 0)

processing: if (D.41547_120 == 0)

processing: D.41522_126->rtcp_audio_interval_msec = "5000";

marking necessary through D.41522_126 stmt D.41522_126 = smh_90->mparams;
processing: D.41522_126 = smh_90->mparams;

processing: switch_channel_set_flag_value (D.41512_125, 108, 1);

marking necessary through D.41512_125 stmt D.41512_125 = session_72(D)->channel;
processing: D.41512_125 = session_72(D)->channel;

processing: switch_channel_set_flag_value (D.41512_124, 106, 1);

marking necessary through D.41512_124 stmt D.41512_124 = session_72(D)->channel;
processing: D.41512_124 = session_72(D)->channel;

processing: D.41551_123 = switch_true (D.41550_122);

processing: D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);

marking necessary through D.41512_121 stmt D.41512_121 = session_72(D)->channel;
processing: D.41512_121 = session_72(D)->channel;

processing: D.41547_120 = switch_channel_test_flag (D.41512_119, 106);

marking necessary through D.41512_119 stmt D.41512_119 = session_72(D)->channel;
processing: D.41512_119 = session_72(D)->channel;

processing: D.41546_118 = switch_channel_test_flag (D.41512_117, 112);

marking necessary through D.41512_117 stmt D.41512_117 = session_72(D)->channel;
processing: D.41512_117 = session_72(D)->channel;

processing: D.41544_116 = switch_channel_test_flag (D.41512_115, 84);

marking necessary through D.41512_115 stmt D.41512_115 = session_72(D)->channel;
processing: D.41512_115 = session_72(D)->channel;

processing: switch_channel_clear_flag (D.41535_114, 109);

Marking useful stmt: if (D.41538_110 != 0)

marking necessary through D.41535_114 stmt D.41535_114 = D.41534_113->channel;
processing: D.41535_114 = D.41534_113->channel;

marking necessary through D.41534_113 stmt D.41534_113 = smh_90->session;
processing: D.41534_113 = smh_90->session;

processing: if (D.41538_110 != 0)

Marking useful stmt: if (tmp_109 != 0B)

processing: if (tmp_109 != 0B)

Marking useful stmt: if (D.41531_106 != 0)

processing: if (D.41531_106 != 0)

processing: switch_channel_clear_flag (D.41535_112, 111);

marking necessary through D.41535_112 stmt D.41535_112 = D.41534_111->channel;
processing: D.41535_112 = D.41534_111->channel;

marking necessary through D.41534_111 stmt D.41534_111 = smh_90->session;
processing: D.41534_111 = smh_90->session;

processing: D.41538_110 = switch_false (tmp_109);

processing: tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);

marking necessary through D.41535_108 stmt D.41535_108 = D.41534_107->channel;
processing: D.41535_108 = D.41534_107->channel;

marking necessary through D.41534_107 stmt D.41534_107 = smh_90->session;
processing: D.41534_107 = smh_90->session;

processing: D.41531_106 = dtls_ok (session_72(D));

processing: D.41522_103->rtcp_video_interval_msec = D.41530_105;

Marking useful stmt: if (D.41527_102 == 0B)

marking necessary through D.41522_103 stmt D.41522_103 = smh_90->mparams;
processing: D.41522_103 = smh_90->mparams;

processing: if (D.41527_102 == 0B)

marking necessary through D.41527_102 stmt D.41527_102 = D.41522_101->rtcp_video_interval_msec;
processing: D.41527_102 = D.41522_101->rtcp_video_interval_msec;

marking necessary through D.41522_101 stmt D.41522_101 = smh_90->mparams;
processing: D.41522_101 = smh_90->mparams;

processing: D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);

marking necessary through D.41512_104 stmt D.41512_104 = session_72(D)->channel;
processing: D.41512_104 = session_72(D)->channel;

processing: D.41522_98->rtcp_audio_interval_msec = D.41526_100;

Marking useful stmt: if (D.41523_97 == 0B)

marking necessary through D.41522_98 stmt D.41522_98 = smh_90->mparams;
processing: D.41522_98 = smh_90->mparams;

processing: if (D.41523_97 == 0B)

marking necessary through D.41523_97 stmt D.41523_97 = D.41522_96->rtcp_audio_interval_msec;
processing: D.41523_97 = D.41522_96->rtcp_audio_interval_msec;

marking necessary through D.41522_96 stmt D.41522_96 = smh_90->mparams;
processing: D.41522_96 = smh_90->mparams;

processing: D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);

marking necessary through D.41512_99 stmt D.41512_99 = session_72(D)->channel;
processing: D.41512_99 = session_72(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux = 1;

Marking useful stmt: if (D.41519_95 != 0)

processing: if (D.41519_95 != 0)

processing: MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux = 1;

processing: D.41519_95 = switch_true (D.41518_94);

processing: D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);

marking necessary through D.41512_93 stmt D.41512_93 = session_72(D)->channel;
processing: D.41512_93 = session_72(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);

processing: D.41513_88 = switch_channel_direction (D.41512_87);

marking necessary through D.41512_87 stmt D.41512_87 = session_72(D)->channel;
processing: D.41512_87 = session_72(D)->channel;

processing: local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);

processing: local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);

processing: fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);

marking necessary through D.41512_81 stmt D.41512_81 = session_72(D)->channel;
processing: D.41512_81 = session_72(D)->channel;

processing: append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);

marking necessary through D.41512_79 stmt D.41512_79 = session_72(D)->channel;
processing: D.41512_79 = session_72(D)->channel;

processing: append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);

marking necessary through D.41512_77 stmt D.41512_77 = session_72(D)->channel;
processing: D.41512_77 = session_72(D)->channel;

processing: ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);

marking necessary through D.41512_75 stmt D.41512_75 = session_72(D)->channel;
processing: D.41512_75 = session_72(D)->channel;

processing: pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);

marking necessary through D.41512_73 stmt D.41512_73 = session_72(D)->channel;
processing: D.41512_73 = session_72(D)->channel;


Eliminating unnecessary statements:
Deleting : fmtp_920 = pass_fmtp_20;

Deleting : fmtp_910 = ov_fmtp_76;

Deleting : append_video_867 = append_video_80;

Deleting : rate_886 = imp_876->samples_per_second;

Deleting : bw_980 = v_1546;

Deleting : ptime_789 = D.42185_788 / 1000;

Deleting : D.42185_788 = imp_769->microseconds_per_packet;

Deleting : if (rate_14 == 0)

Deleting : if (ptime_8 == 0)

Deleting : pass_fmtp_831 = ov_fmtp_76;

Deleting LHS of call: of_829 = switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");

Deleting : append_audio_464 = append_audio_78;

Deleting : rate_809 = D.42142_808->rm_rate;

Deleting : D.42142_808 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Deleting : cur_ptime_667 = this_ptime_41;

Deleting : bp_665 = buf_144;

Deleting : both_696 = both_63;

Deleting : bp_689 = buf_144;

Deleting : family_273 = family_59;

Deleting : sr_247 = var_val_246;

Deleting : fmtp_out_216 = fmtp_out_var_82;

Removing basic block 341
;; basic block 341, loop depth 2, count 0
;; prev block 340, next block 342
;; pred:      
;; succ:       342 (fallthru,exec)
<bb 341>:
# DEBUG D#29 => imp_876->samples_per_second
# DEBUG rate => D#29


Marking result for renaming : .MEM_1227 = PHI <.MEM_1226(336), .MEM_1469(339)>

Removing basic block 296
;; basic block 296, loop depth 2, count 0
;; prev block 295, next block 297
;; pred:      
;; succ:       297 (fallthru,exec)
<bb 296>:
# DEBUG D#30 => imp_769->microseconds_per_packet
# DEBUG ptime => D#30 / 1000


Deleting : ptime_6 = PHI <ptime_5(214), 0(221), 0(238), 0(462), ptime_5(213), ptime_5(220), ptime_5(219), ptime_5(218), 0(237)>

Deleting : rate_11 = PHI <rate_351(214), 0(221), 0(238), 0(462), rate_351(213), rate_351(220), rate_351(219), rate_351(218), 0(237)>

Deleting : ptime_1144 = PHI <ptime_6(266)>

Deleting : rate_1161 = PHI <rate_11(266)>

Deleting : .MEM_1211 = PHI <.MEM_1208(266)>

Deleting : ptime_7 = PHI <ptime_8(287), ptime_8(290), ptime_8(293), ptime_8(295)>

Deleting : ptime_8 = PHI <ptime_10(285), ptime_7(297)>

Deleting : ptime_9 = PHI <ptime_10(283), ptime_10(284), ptime_8(298), ptime_10(276)>

Deleting : rate_12 = PHI <rate_14(340)>

Deleting : rate_13 = PHI <rate_14(332), rate_14(335), rate_14(338), rate_12(371), rate_12(372), rate_12(373)>

Deleting : rate_14 = PHI <rate_16(330), rate_13(374)>

Deleting : rate_15 = PHI <rate_809(328), rate_16(329), rate_14(375), rate_809(322)>

Deleting : .MEM_1111 = PHI <.MEM_1506(431)>

Deleting : ptime_10 = PHI <ptime_1144(448), ptime_9(447)>

Deleting : rate_16 = PHI <rate_1161(448), rate_15(447)>

Removed 20 of 1639 statements (1%)
Removed 15 of 217 PHI nodes (6%)
Removing basic block 166
;; basic block 166, loop depth 0, count 0
;; prev block 165, next block 167
;; pred:      
;; succ:       167 (fallthru,exec)
<bb 166>:


Removing basic block 309
;; basic block 309, loop depth 1, count 0
;; prev block 308, next block 310
;; pred:      
;; succ:       311 (fallthru,exec)
<bb 309>:
# DEBUG pass_fmtp => ov_fmtp_76
goto <bb 311>;


Removing basic block 325
;; basic block 325, loop depth 1, count 0
;; prev block 324, next block 326
;; pred:      
;; succ:       326 (fallthru,exec)
<bb 325>:


Merging blocks 340 and 342
Removing basic block 353
;; basic block 353, loop depth 2, count 0
;; prev block 352, next block 354
;; pred:      
;; succ:       368 (fallthru,exec)
<bb 353>:
# DEBUG fmtp => ov_fmtp_76
goto <bb 368>;




Registering new PHI nodes in block #0



Registering new PHI nodes in block #2

Updating SSA information for statement D.41512_73 = session_72(D)->channel;

Updating SSA information for statement pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);

Updating SSA information for statement D.41512_75 = session_72(D)->channel;

Updating SSA information for statement ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);

Updating SSA information for statement D.41512_77 = session_72(D)->channel;

Updating SSA information for statement append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);

Updating SSA information for statement D.41512_79 = session_72(D)->channel;

Updating SSA information for statement append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);

Updating SSA information for statement srbuf = "";

Updating SSA information for statement D.41512_81 = session_72(D)->channel;

Updating SSA information for statement fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);

Updating SSA information for statement map = 0B;

Updating SSA information for statement ptmap = 0B;

Updating SSA information for statement local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);

Updating SSA information for statement local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);

Updating SSA information for statement D.41512_87 = session_72(D)->channel;

Updating SSA information for statement D.41513_88 = switch_channel_direction (D.41512_87);



Registering new PHI nodes in block #3

Updating SSA information for statement __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);



Registering new PHI nodes in block #4

Updating SSA information for statement smh_90 = session_72(D)->media_handle;



Registering new PHI nodes in block #5

Updating SSA information for statement D.41512_93 = session_72(D)->channel;

Updating SSA information for statement D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);

Updating SSA information for statement D.41519_95 = switch_true (D.41518_94);



Registering new PHI nodes in block #6

Updating SSA information for statement MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux = 1;

Updating SSA information for statement MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux = 1;



Registering new PHI nodes in block #7

Updating SSA information for statement D.41522_96 = smh_90->mparams;

Updating SSA information for statement D.41523_97 = D.41522_96->rtcp_audio_interval_msec;



Registering new PHI nodes in block #8

Updating SSA information for statement D.41522_98 = smh_90->mparams;

Updating SSA information for statement D.41512_99 = session_72(D)->channel;

Updating SSA information for statement D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);

Updating SSA information for statement D.41522_98->rtcp_audio_interval_msec = D.41526_100;



Registering new PHI nodes in block #9

Updating SSA information for statement D.41522_101 = smh_90->mparams;

Updating SSA information for statement D.41527_102 = D.41522_101->rtcp_video_interval_msec;



Registering new PHI nodes in block #10

Updating SSA information for statement D.41522_103 = smh_90->mparams;

Updating SSA information for statement D.41512_104 = session_72(D)->channel;

Updating SSA information for statement D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);

Updating SSA information for statement D.41522_103->rtcp_video_interval_msec = D.41530_105;



Registering new PHI nodes in block #11

Updating SSA information for statement D.41531_106 = dtls_ok (session_72(D));



Registering new PHI nodes in block #12

Updating SSA information for statement D.41534_107 = smh_90->session;

Updating SSA information for statement D.41535_108 = D.41534_107->channel;

Updating SSA information for statement tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);



Registering new PHI nodes in block #13

Updating SSA information for statement D.41538_110 = switch_false (tmp_109);



Registering new PHI nodes in block #14

Updating SSA information for statement D.41534_111 = smh_90->session;

Updating SSA information for statement D.41535_112 = D.41534_111->channel;

Updating SSA information for statement switch_channel_clear_flag (D.41535_112, 111);

Updating SSA information for statement D.41534_113 = smh_90->session;

Updating SSA information for statement D.41535_114 = D.41534_113->channel;

Updating SSA information for statement switch_channel_clear_flag (D.41535_114, 109);



Registering new PHI nodes in block #15



Registering new PHI nodes in block #16

Updating SSA information for statement D.41512_115 = session_72(D)->channel;

Updating SSA information for statement D.41544_116 = switch_channel_test_flag (D.41512_115, 84);



Registering new PHI nodes in block #17

Updating SSA information for statement D.41512_117 = session_72(D)->channel;

Updating SSA information for statement D.41546_118 = switch_channel_test_flag (D.41512_117, 112);



Registering new PHI nodes in block #18

Updating SSA information for statement D.41512_119 = session_72(D)->channel;

Updating SSA information for statement D.41547_120 = switch_channel_test_flag (D.41512_119, 106);



Registering new PHI nodes in block #19

Updating SSA information for statement D.41512_121 = session_72(D)->channel;

Updating SSA information for statement D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);

Updating SSA information for statement D.41551_123 = switch_true (D.41550_122);



Registering new PHI nodes in block #20

Updating SSA information for statement D.41512_124 = session_72(D)->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41512_124, 106, 1);

Updating SSA information for statement D.41512_125 = session_72(D)->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41512_125, 108, 1);

Updating SSA information for statement D.41522_126 = smh_90->mparams;

Updating SSA information for statement D.41522_126->rtcp_audio_interval_msec = "5000";

Updating SSA information for statement D.41522_127 = smh_90->mparams;

Updating SSA information for statement D.41522_127->rtcp_video_interval_msec = "5000";



Registering new PHI nodes in block #21

Updating SSA information for statement D.41554_128 = switch_rtp_has_dtls ();



Registering new PHI nodes in block #22

Updating SSA information for statement D.41557_129 = dtls_ok (session_72(D));



Registering new PHI nodes in block #23

Updating SSA information for statement D.41512_130 = session_72(D)->channel;

Updating SSA information for statement D.41562_131 = switch_channel_test_flag (D.41512_130, 106);



Registering new PHI nodes in block #24

Updating SSA information for statement D.41534_132 = smh_90->session;

Updating SSA information for statement D.41535_133 = D.41534_132->channel;

Updating SSA information for statement D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);

Updating SSA information for statement D.41565_135 = switch_true (D.41564_134);



Registering new PHI nodes in block #25

Updating SSA information for statement D.41534_136 = smh_90->session;

Updating SSA information for statement D.41535_137 = D.41534_136->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41535_137, 109, 1);

Updating SSA information for statement D.41534_138 = smh_90->session;

Updating SSA information for statement D.41535_139 = D.41534_138->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41535_139, 92, 1);

Updating SSA information for statement generate_local_fingerprint (smh_90, 0);



Registering new PHI nodes in block #26

Updating SSA information for statement switch_core_session_parse_crypto_prefs (session_72(D));

Updating SSA information for statement switch_core_session_check_outgoing_crypto (session_72(D));



Registering new PHI nodes in block #27

Updating SSA information for statement D.41566_140 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement fmtp_out_141 = D.41566_140->fmtp_out;

Updating SSA information for statement D.41522_142 = smh_90->mparams;

Updating SSA information for statement username_143 = D.41522_142->sdp_username;

Updating SSA information for statement buf_144 = calloc (1, 65536);



Registering new PHI nodes in block #28

Updating SSA information for statement __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);



Registering new PHI nodes in block #29

Updating SSA information for statement switch_core_media_check_dtmf_type (session_72(D));

Updating SSA information for statement D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);



Registering new PHI nodes in block #30

Updating SSA information for statement D.41512_146 = session_72(D)->channel;

Updating SSA information for statement val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);



Registering new PHI nodes in block #31

Updating SSA information for statement D.41575_148 = switch_true (val_147);



Registering new PHI nodes in block #32

Updating SSA information for statement D.41512_149 = session_72(D)->channel;

Updating SSA information for statement val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);



Registering new PHI nodes in block #33

Updating SSA information for statement D.41577_151 = switch_true (val_150);



Registering new PHI nodes in block #34

Updating SSA information for statement D.41522_153 = smh_90->mparams;

Updating SSA information for statement D.41522_153->cng_pt = 0;



Registering new PHI nodes in block #35

Updating SSA information for statement D.41578_154 = smh_90->payload_space;



Registering new PHI nodes in block #36

Updating SSA information for statement D.41512_155 = session_72(D)->channel;

Updating SSA information for statement D.41581_156 = switch_channel_test_flag (D.41512_155, 106);



Registering new PHI nodes in block #37

Updating SSA information for statement smh_90->payload_space = 102;



Registering new PHI nodes in block #39

Updating SSA information for statement smh_90->payload_space = 98;



Registering new PHI nodes in block #38



Registering new PHI nodes in block #41

Updating SSA information for statement D.41522_158 = smh_90->mparams;

Updating SSA information for statement D.41587_159 = D.41522_158->num_codecs;



Registering new PHI nodes in block #40

Updating SSA information for statement D.41585_160 = smh_90->codecs[i_36];

Updating SSA information for statement D.41586_161 = D.41585_160->ianacode;

Updating SSA information for statement smh_90->ianacodes[i_36] = D.41586_161;



Registering new PHI nodes in block #42



Registering new PHI nodes in block #43

Updating SSA information for statement orig_session = 0B;

Updating SSA information for statement switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);



Registering new PHI nodes in block #59

Updating SSA information for statement D.41522_165 = smh_90->mparams;

Updating SSA information for statement D.41587_166 = D.41522_165->num_codecs;



Registering new PHI nodes in block #44

Updating SSA information for statement imp_167 = smh_90->codecs[i_37];

Updating SSA information for statement orig_pt = 0;

Updating SSA information for statement orig_fmtp = 0B;

Updating SSA information for statement D.41590_168 = smh_90->ianacodes[i_37];



Registering new PHI nodes in block #45

Updating SSA information for statement D.41522_169 = smh_90->mparams;

Updating SSA information for statement D.41593_170 = D.41522_169->dtmf_type;



Registering new PHI nodes in block #46

Updating SSA information for statement D.41522_171 = smh_90->mparams;

Updating SSA information for statement D.41596_172 = D.41522_171->te;



Registering new PHI nodes in block #47

Updating SSA information for statement D.41522_173 = smh_90->mparams;

Updating SSA information for statement D.41596_174 = D.41522_173->te;

Updating SSA information for statement D.41578_176 = smh_90->payload_space;



Registering new PHI nodes in block #48

Updating SSA information for statement D.41578_177 = smh_90->payload_space;

Updating SSA information for statement smh_90->payload_space = D.41602_178;



Registering new PHI nodes in block #49

Updating SSA information for statement D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);



Registering new PHI nodes in block #50

Updating SSA information for statement D.41522_180 = smh_90->mparams;

Updating SSA information for statement D.41606_181 = D.41522_180->cng_pt;



Registering new PHI nodes in block #51

Updating SSA information for statement D.41522_185 = smh_90->mparams;

Updating SSA information for statement D.41606_186 = D.41522_185->cng_pt;

Updating SSA information for statement D.41578_188 = smh_90->payload_space;



Registering new PHI nodes in block #52

Updating SSA information for statement D.41578_189 = smh_90->payload_space;

Updating SSA information for statement smh_90->payload_space = D.41602_190;



Registering new PHI nodes in block #53

Updating SSA information for statement orig_session.25_191 = orig_session;



Registering new PHI nodes in block #54

Updating SSA information for statement orig_session.25_192 = orig_session;

Updating SSA information for statement D.41619_193 = imp_167->codec_type;

Updating SSA information for statement D.41621_195 = imp_167->iananame;

Updating SSA information for statement D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);



Registering new PHI nodes in block #55

Updating SSA information for statement orig_pt.26_197 = orig_pt;

Updating SSA information for statement smh_90->ianacodes[i_37] = orig_pt.26_197;

Updating SSA information for statement orig_fmtp.27_198 = orig_fmtp;



Registering new PHI nodes in block #56

Updating SSA information for statement orig_fmtp.27_199 = orig_fmtp;

Updating SSA information for statement D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);

Updating SSA information for statement smh_90->fmtps[i_37] = D.41628_200;



Registering new PHI nodes in block #57

Updating SSA information for statement D.41578_201 = smh_90->payload_space;

Updating SSA information for statement smh_90->ianacodes[i_37] = D.41629_202;

Updating SSA information for statement smh_90->payload_space = D.41602_203;



Registering new PHI nodes in block #58

Updating SSA information for statement D.41619_204 = imp_167->codec_type;

Updating SSA information for statement D.41621_206 = imp_167->iananame;

Updating SSA information for statement D.41590_207 = smh_90->ianacodes[i_37];

Updating SSA information for statement D.41631_209 = imp_167->samples_per_second;

Updating SSA information for statement D.41632_210 = imp_167->microseconds_per_packet;

Updating SSA information for statement switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);



Registering new PHI nodes in block #60

Updating SSA information for statement orig_session.25_214 = orig_session;



Registering new PHI nodes in block #61

Updating SSA information for statement orig_session.25_215 = orig_session;

Updating SSA information for statement switch_core_session_rwunlock (orig_session.25_215);



Registering new PHI nodes in block #62



Registering new PHI nodes in block #63



Registering new PHI nodes in block #64

Updating SSA information for statement D.41512_217 = session_72(D)->channel;

Updating SSA information for statement val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);



Registering new PHI nodes in block #65

Updating SSA information for statement D.41642_219 = switch_true (val_218);



Registering new PHI nodes in block #66

Updating SSA information for statement D.41512_220 = session_72(D)->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41512_220, 110, 1);



Registering new PHI nodes in block #67



Registering new PHI nodes in block #68



Registering new PHI nodes in block #69

Updating SSA information for statement D.48132_1516 = *sr_226(D);



Registering new PHI nodes in block #70



Registering new PHI nodes in block #71



Registering new PHI nodes in block #72

Updating SSA information for statement D.41512_228 = session_72(D)->channel;

Updating SSA information for statement D.41653_229 = switch_channel_test_flag (D.41512_228, 15);



Registering new PHI nodes in block #73

Updating SSA information for statement D.41512_230 = session_72(D)->channel;

Updating SSA information for statement D.41655_231 = switch_channel_test_flag (D.41512_230, 29);



Registering new PHI nodes in block #74



Registering new PHI nodes in block #75

Updating SSA information for statement free (buf_144);



Registering new PHI nodes in block #76



Registering new PHI nodes in block #77

Updating SSA information for statement ip_233 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_ip;



Registering new PHI nodes in block #78

Updating SSA information for statement ip_234 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_ip;



Registering new PHI nodes in block #79



Registering new PHI nodes in block #80

Updating SSA information for statement D.41512_235 = session_72(D)->channel;

Updating SSA information for statement D.41664_236 = switch_channel_get_name (D.41512_235);

Updating SSA information for statement switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);



Registering new PHI nodes in block #81

Updating SSA information for statement free (buf_144);



Registering new PHI nodes in block #82



Registering new PHI nodes in block #83

Updating SSA information for statement port_239 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_port;



Registering new PHI nodes in block #84

Updating SSA information for statement port_240 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_port;



Registering new PHI nodes in block #85



Registering new PHI nodes in block #86

Updating SSA information for statement D.41512_241 = session_72(D)->channel;

Updating SSA information for statement D.41673_242 = switch_channel_get_name (D.41512_241);

Updating SSA information for statement switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);



Registering new PHI nodes in block #87

Updating SSA information for statement free (buf_144);



Registering new PHI nodes in block #88



Registering new PHI nodes in block #89

Updating SSA information for statement D.48136_1518 = *sr_226(D);



Registering new PHI nodes in block #90



Registering new PHI nodes in block #91



Registering new PHI nodes in block #92

Updating SSA information for statement D.41512_245 = session_72(D)->channel;

Updating SSA information for statement var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);



Registering new PHI nodes in block #93



Registering new PHI nodes in block #94

Updating SSA information for statement D.41682_249 = smh_90->owner_id;



Registering new PHI nodes in block #95

Updating SSA information for statement D.41685_250 = switch_epoch_time_now (0B);

Updating SSA information for statement smh_90->owner_id = D.41688_253;



Registering new PHI nodes in block #96

Updating SSA information for statement D.41689_254 = smh_90->session_id;



Registering new PHI nodes in block #97

Updating SSA information for statement D.41682_255 = smh_90->owner_id;

Updating SSA information for statement smh_90->session_id = D.41682_255;



Registering new PHI nodes in block #98

Updating SSA information for statement D.41512_256 = session_72(D)->channel;

Updating SSA information for statement D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);

Updating SSA information for statement D.41693_258 = switch_true (D.41692_257);



Registering new PHI nodes in block #99

Updating SSA information for statement D.41512_259 = session_72(D)->channel;

Updating SSA information for statement switch_channel_set_flag_value (D.41512_259, 102, 1);



Registering new PHI nodes in block #100

Updating SSA information for statement D.41689_260 = smh_90->session_id;

Updating SSA information for statement smh_90->session_id = D.41696_261;

Updating SSA information for statement D.41522_262 = smh_90->mparams;

Updating SSA information for statement D.41699_263 = D.41522_262->ndlb;



Registering new PHI nodes in block #101

Updating SSA information for statement D.41512_265 = session_72(D)->channel;

Updating SSA information for statement var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);



Registering new PHI nodes in block #102

Updating SSA information for statement D.41703_267 = switch_true (var_val_266);



Registering new PHI nodes in block #103



Registering new PHI nodes in block #104

Updating SSA information for statement D.48140_1520 = *sr_3;



Registering new PHI nodes in block #105



Registering new PHI nodes in block #106



Registering new PHI nodes in block #107

Updating SSA information for statement switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);



Registering new PHI nodes in block #108

Updating SSA information for statement D.41708_270 = __builtin_strchr (ip_1, 58);



Registering new PHI nodes in block #109



Registering new PHI nodes in block #110

Updating SSA information for statement D.41682_274 = smh_90->owner_id;

Updating SSA information for statement D.41689_275 = smh_90->session_id;

Updating SSA information for statement switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_59, ip_1, username_143, family_59, ip_1, &srbuf);

Updating SSA information for statement D.41534_276 = smh_90->session;

Updating SSA information for statement D.41535_277 = D.41534_276->channel;

Updating SSA information for statement D.41712_278 = switch_channel_test_flag (D.41535_277, 108);



Registering new PHI nodes in block #111

Updating SSA information for statement gen_ice (session_72(D), 0, ip_1, port_2);

Updating SSA information for statement D.41715_279 = strlen (buf_144);

Updating SSA information for statement D.41717_281 = strlen (buf_144);

Updating SSA information for statement D.41719_283 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);



Registering new PHI nodes in block #112

Updating SSA information for statement D.41720_284 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;



Registering new PHI nodes in block #113

Updating SSA information for statement D.41723_285 = strlen (buf_144);

Updating SSA information for statement D.41725_287 = strlen (buf_144);

Updating SSA information for statement D.41732_290 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;



Registering new PHI nodes in block #114

Updating SSA information for statement D.41512_291 = session_72(D)->channel;

Updating SSA information for statement D.41734_292 = switch_channel_test_flag (D.41512_291, 109);



Registering new PHI nodes in block #115

Updating SSA information for statement D.41736_293 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;



Registering new PHI nodes in block #116



Registering new PHI nodes in block #117

Updating SSA information for statement D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);

Updating SSA information for statement switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);

Updating SSA information for statement D.41738_297 = strlen (buf_144);

Updating SSA information for statement D.41740_299 = strlen (buf_144);

Updating SSA information for statement D.41566_301 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41742_302 = D.41566_301->pt;

Updating SSA information for statement switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);

Updating SSA information for statement D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);



Registering new PHI nodes in block #118

Updating SSA information for statement D.41747_305 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_lock (D.41747_305);

Updating SSA information for statement pmap_306 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;



Registering new PHI nodes in block #122



Registering new PHI nodes in block #123

Updating SSA information for statement D.41757_307 = pmap_34->allocated;



Registering new PHI nodes in block #119

Updating SSA information for statement D.41748_308 = pmap_34->pt;

Updating SSA information for statement D.41566_309 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41742_310 = D.41566_309->pt;



Registering new PHI nodes in block #120

Updating SSA information for statement D.41751_311 = strlen (buf_144);

Updating SSA information for statement D.41753_313 = strlen (buf_144);

Updating SSA information for statement D.41748_315 = pmap_34->pt;

Updating SSA information for statement switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);



Registering new PHI nodes in block #121

Updating SSA information for statement pmap_317 = pmap_34->next;



Registering new PHI nodes in block #124

Updating SSA information for statement D.41747_318 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_unlock (D.41747_318);



Registering new PHI nodes in block #125

Updating SSA information for statement D.41522_319 = smh_90->mparams;

Updating SSA information for statement D.41593_320 = D.41522_319->dtmf_type;



Registering new PHI nodes in block #126

Updating SSA information for statement D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);



Registering new PHI nodes in block #127

Updating SSA information for statement D.41512_322 = session_72(D)->channel;

Updating SSA information for statement D.41763_323 = switch_channel_test_flag (D.41512_322, 93);



Registering new PHI nodes in block #128

Updating SSA information for statement D.41522_324 = smh_90->mparams;

Updating SSA information for statement D.41596_325 = D.41522_324->te;



Registering new PHI nodes in block #129

Updating SSA information for statement D.41766_326 = strlen (buf_144);

Updating SSA information for statement D.41768_328 = strlen (buf_144);

Updating SSA information for statement D.41522_330 = smh_90->mparams;

Updating SSA information for statement D.41596_331 = D.41522_330->te;

Updating SSA information for statement switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);



Registering new PHI nodes in block #130

Updating SSA information for statement D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);



Registering new PHI nodes in block #131

Updating SSA information for statement D.41522_334 = smh_90->mparams;

Updating SSA information for statement D.41606_335 = D.41522_334->cng_pt;



Registering new PHI nodes in block #132

Updating SSA information for statement D.41775_339 = strlen (buf_144);

Updating SSA information for statement D.41777_341 = strlen (buf_144);

Updating SSA information for statement D.41522_343 = smh_90->mparams;

Updating SSA information for statement D.41606_344 = D.41522_343->cng_pt;

Updating SSA information for statement switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);



Registering new PHI nodes in block #133

Updating SSA information for statement D.41779_346 = strlen (buf_144);

Updating SSA information for statement D.41781_348 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41780_347, D.41782_349, "\n");

Updating SSA information for statement D.41566_350 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement rate_351 = D.41566_350->adv_rm_rate;

Updating SSA information for statement D.41566_352 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41783_353 = D.41566_352->adv_channels;



Registering new PHI nodes in block #134

Updating SSA information for statement D.41566_355 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41786_356 = D.41566_355->rm_encoding;

Updating SSA information for statement D.41787_357 = get_channels (D.41786_356, 1);

Updating SSA information for statement D.41566_355->adv_channels = D.41787_357;



Registering new PHI nodes in block #135

Updating SSA information for statement D.41566_358 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41783_359 = D.41566_358->adv_channels;



Registering new PHI nodes in block #136

Updating SSA information for statement D.41790_360 = strlen (buf_144);

Updating SSA information for statement D.41792_362 = strlen (buf_144);

Updating SSA information for statement D.41566_364 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41794_365 = D.41566_364->agreed_pt;

Updating SSA information for statement D.41566_367 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41786_368 = D.41566_367->rm_encoding;

Updating SSA information for statement D.41566_369 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41783_370 = D.41566_369->adv_channels;

Updating SSA information for statement switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);



Registering new PHI nodes in block #137

Updating SSA information for statement D.41797_371 = strlen (buf_144);

Updating SSA information for statement D.41799_373 = strlen (buf_144);

Updating SSA information for statement D.41566_375 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41794_376 = D.41566_375->agreed_pt;

Updating SSA information for statement D.41566_378 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41786_379 = D.41566_378->rm_encoding;

Updating SSA information for statement switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);



Registering new PHI nodes in block #138



Registering new PHI nodes in block #139

Updating SSA information for statement D.41803_380 = strlen (buf_144);

Updating SSA information for statement D.41805_382 = strlen (buf_144);

Updating SSA information for statement D.41566_384 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41794_385 = D.41566_384->agreed_pt;

Updating SSA information for statement switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);



Registering new PHI nodes in block #140

Updating SSA information for statement D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);



Registering new PHI nodes in block #141

Updating SSA information for statement D.41747_388 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_lock (D.41747_388);

Updating SSA information for statement pmap_389 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;



Registering new PHI nodes in block #145



Registering new PHI nodes in block #146

Updating SSA information for statement D.41757_390 = pmap_35->allocated;



Registering new PHI nodes in block #142

Updating SSA information for statement D.41748_391 = pmap_35->pt;

Updating SSA information for statement D.41566_392 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;

Updating SSA information for statement D.41742_393 = D.41566_392->pt;



Registering new PHI nodes in block #143

Updating SSA information for statement D.41812_394 = strlen (buf_144);

Updating SSA information for statement D.41814_396 = strlen (buf_144);

Updating SSA information for statement D.41748_398 = pmap_35->pt;

Updating SSA information for statement D.41816_400 = pmap_35->iananame;

Updating SSA information for statement D.41817_401 = pmap_35->rate;

Updating SSA information for statement switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);



Registering new PHI nodes in block #144

Updating SSA information for statement pmap_402 = pmap_35->next;



Registering new PHI nodes in block #147

Updating SSA information for statement D.41747_403 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_unlock (D.41747_403);



Registering new PHI nodes in block #148

Updating SSA information for statement D.41819_404 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;



Registering new PHI nodes in block #149

Updating SSA information for statement D.41819_408 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;

Updating SSA information for statement D.41825_409 = D.41819_408->microseconds_per_packet;



Registering new PHI nodes in block #150

Updating SSA information for statement D.41522_411 = smh_90->mparams;

Updating SSA information for statement D.41593_412 = D.41522_411->dtmf_type;



Registering new PHI nodes in block #151

Updating SSA information for statement D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);



Registering new PHI nodes in block #152

Updating SSA information for statement D.41512_414 = session_72(D)->channel;

Updating SSA information for statement D.41831_415 = switch_channel_test_flag (D.41512_414, 93);



Registering new PHI nodes in block #153

Updating SSA information for statement D.41522_416 = smh_90->mparams;

Updating SSA information for statement D.41596_417 = D.41522_416->te;



Registering new PHI nodes in block #154

Updating SSA information for statement D.41512_418 = session_72(D)->channel;

Updating SSA information for statement D.41834_419 = switch_channel_test_flag (D.41512_418, 106);



Registering new PHI nodes in block #155

Updating SSA information for statement D.41837_420 = strlen (buf_144);

Updating SSA information for statement D.41839_422 = strlen (buf_144);

Updating SSA information for statement D.41522_424 = smh_90->mparams;

Updating SSA information for statement D.41596_425 = D.41522_424->te;

Updating SSA information for statement switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);



Registering new PHI nodes in block #156

Updating SSA information for statement D.41842_427 = strlen (buf_144);

Updating SSA information for statement D.41844_429 = strlen (buf_144);

Updating SSA information for statement D.41522_434 = smh_90->mparams;

Updating SSA information for statement D.41596_435 = D.41522_434->te;

Updating SSA information for statement switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);



Registering new PHI nodes in block #157

Updating SSA information for statement D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);



Registering new PHI nodes in block #158

Updating SSA information for statement D.41849_438 = strlen (buf_144);

Updating SSA information for statement D.41851_440 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");



Registering new PHI nodes in block #159

Updating SSA information for statement D.41522_442 = smh_90->mparams;

Updating SSA information for statement D.41606_443 = D.41522_442->cng_pt;



Registering new PHI nodes in block #160

Updating SSA information for statement D.41856_447 = strlen (buf_144);

Updating SSA information for statement D.41858_449 = strlen (buf_144);

Updating SSA information for statement D.41522_451 = smh_90->mparams;

Updating SSA information for statement D.41606_452 = D.41522_451->cng_pt;

Updating SSA information for statement switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);

Updating SSA information for statement D.41720_454 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;



Registering new PHI nodes in block #161

Updating SSA information for statement D.41522_455 = smh_90->mparams;

Updating SSA information for statement D.41522_455->cng_pt = 0;



Registering new PHI nodes in block #162



Registering new PHI nodes in block #163

Updating SSA information for statement D.41864_456 = strlen (buf_144);

Updating SSA information for statement D.41866_458 = strlen (buf_144);

Updating SSA information for statement D.41870_460 = *append_audio_78;



Registering new PHI nodes in block #164

Updating SSA information for statement D.41873_461 = strlen (append_audio_78);



Registering new PHI nodes in block #165

Updating SSA information for statement D.41876_465 = *append_audio_62;



Registering new PHI nodes in block #166



Registering new PHI nodes in block #167

Updating SSA information for statement switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);



Registering new PHI nodes in block #168



Registering new PHI nodes in block #169

Updating SSA information for statement D.41882_468 = strlen (buf_144);

Updating SSA information for statement D.41884_470 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);



Registering new PHI nodes in block #170



Registering new PHI nodes in block #171

Updating SSA information for statement switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

Updating SSA information for statement D.41888_472 = strlen (buf_144);

Updating SSA information for statement D.41890_474 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);



Registering new PHI nodes in block #172



Registering new PHI nodes in block #173

Updating SSA information for statement D.48144_1522 = *sr_4;



Registering new PHI nodes in block #174



Registering new PHI nodes in block #175



Registering new PHI nodes in block #176

Updating SSA information for statement D.41895_477 = strlen (buf_144);

Updating SSA information for statement D.41897_479 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);



Registering new PHI nodes in block #177

Updating SSA information for statement D.41899_481 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;



Registering new PHI nodes in block #178

Updating SSA information for statement D.48148_1524 = MEM[(const char *)D.41899_481];



Registering new PHI nodes in block #179



Registering new PHI nodes in block #180



Registering new PHI nodes in block #181

Updating SSA information for statement D.41903_483 = strlen (buf_144);

Updating SSA information for statement D.41905_485 = strlen (buf_144);

Updating SSA information for statement D.41899_487 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;

Updating SSA information for statement switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);



Registering new PHI nodes in block #182

Updating SSA information for statement D.41522_489 = smh_90->mparams;

Updating SSA information for statement D.41523_490 = D.41522_489->rtcp_audio_interval_msec;



Registering new PHI nodes in block #183

Updating SSA information for statement D.41910_491 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;



Registering new PHI nodes in block #184

Updating SSA information for statement D.41913_492 = strlen (buf_144);

Updating SSA information for statement D.41915_494 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");

Updating SSA information for statement D.41917_496 = strlen (buf_144);

Updating SSA information for statement D.41919_498 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_59, ip_1);



Registering new PHI nodes in block #185

Updating SSA information for statement D.41922_501 = strlen (buf_144);

Updating SSA information for statement D.41924_503 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_59, ip_1);



Registering new PHI nodes in block #186

Updating SSA information for statement D.41927_507 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out.cands[0][0].ready;



Registering new PHI nodes in block #187

Updating SSA information for statement tmp1 = "";

Updating SSA information for statement tmp2 = "";

Updating SSA information for statement tmp1[10] = 0;

Updating SSA information for statement tmp2[10] = 0;

Updating SSA information for statement switch_stun_random_string (&tmp1, 10, "0123456789");

Updating SSA information for statement switch_stun_random_string (&tmp2, 10, "0123456789");

Updating SSA information for statement D.41930_513 = strlen (buf_144);

Updating SSA information for statement D.41932_515 = strlen (buf_144);

Updating SSA information for statement D.41934_517 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

Updating SSA information for statement D.41935_518 = smh_90->cname;

Updating SSA information for statement switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);

Updating SSA information for statement D.41936_519 = strlen (buf_144);

Updating SSA information for statement D.41938_521 = strlen (buf_144);

Updating SSA information for statement D.41934_523 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

Updating SSA information for statement D.41719_524 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);

Updating SSA information for statement D.41940_525 = strlen (buf_144);

Updating SSA information for statement D.41942_527 = strlen (buf_144);

Updating SSA information for statement D.41934_529 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

Updating SSA information for statement D.41719_530 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);

Updating SSA information for statement D.41944_531 = strlen (buf_144);

Updating SSA information for statement D.41946_533 = strlen (buf_144);

Updating SSA information for statement D.41934_535 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;

Updating SSA information for statement D.41719_536 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);

Updating SSA information for statement D.41948_537 = strlen (buf_144);

Updating SSA information for statement D.41950_539 = strlen (buf_144);

Updating SSA information for statement D.41952_541 = MEM[(struct ice_t *)smh_90 + 6480B].ufrag;

Updating SSA information for statement switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);

Updating SSA information for statement D.41953_542 = strlen (buf_144);

Updating SSA information for statement D.41955_544 = strlen (buf_144);

Updating SSA information for statement D.41957_546 = MEM[(struct ice_t *)smh_90 + 6480B].pwd;

Updating SSA information for statement switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);

Updating SSA information for statement D.41958_547 = strlen (buf_144);

Updating SSA information for statement D.41960_549 = strlen (buf_144);

Updating SSA information for statement D.41962_551 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

Updating SSA information for statement D.41963_552 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_553 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

Updating SSA information for statement switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, 659136, D.41963_552, D.41965_554);

Updating SSA information for statement D.41966_555 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;



Registering new PHI nodes in block #188

Updating SSA information for statement D.48152_1526 = MEM[(const char *)D.41966_555];



Registering new PHI nodes in block #189



Registering new PHI nodes in block #190



Registering new PHI nodes in block #191

Updating SSA information for statement D.41963_557 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;



Registering new PHI nodes in block #192

Updating SSA information for statement D.48156_1528 = MEM[(const char *)D.41963_557];



Registering new PHI nodes in block #193



Registering new PHI nodes in block #194



Registering new PHI nodes in block #195

Updating SSA information for statement D.41966_559 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

Updating SSA information for statement D.41963_560 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);



Registering new PHI nodes in block #196

Updating SSA information for statement D.41975_562 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

Updating SSA information for statement D.41964_563 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;



Registering new PHI nodes in block #197

Updating SSA information for statement D.41978_564 = strlen (buf_144);

Updating SSA information for statement D.41980_566 = strlen (buf_144);

Updating SSA information for statement D.41962_568 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

Updating SSA information for statement D.41963_569 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_570 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

Updating SSA information for statement D.41966_572 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

Updating SSA information for statement D.41975_573 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

Updating SSA information for statement switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, 659126, D.41963_569, D.41965_571, D.41966_572, D.41982_574);



Registering new PHI nodes in block #198

Updating SSA information for statement D.41910_575 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;



Registering new PHI nodes in block #199

Updating SSA information for statement D.41512_579 = session_72(D)->channel;

Updating SSA information for statement D.41989_580 = switch_channel_test_flag (D.41512_579, 84);



Registering new PHI nodes in block #200

Updating SSA information for statement D.41990_581 = strlen (buf_144);

Updating SSA information for statement D.41992_583 = strlen (buf_144);

Updating SSA information for statement D.41962_585 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

Updating SSA information for statement D.41963_586 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_587 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

Updating SSA information for statement D.41910_589 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

Updating SSA information for statement switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, 659134, D.41963_586, D.41995_591);

Updating SSA information for statement D.41966_592 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;



Registering new PHI nodes in block #201

Updating SSA information for statement D.48160_1530 = MEM[(const char *)D.41966_592];



Registering new PHI nodes in block #202



Registering new PHI nodes in block #203



Registering new PHI nodes in block #204

Updating SSA information for statement D.41963_594 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;



Registering new PHI nodes in block #205

Updating SSA information for statement D.48164_1532 = MEM[(const char *)D.41963_594];



Registering new PHI nodes in block #206



Registering new PHI nodes in block #207



Registering new PHI nodes in block #208

Updating SSA information for statement D.41966_596 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

Updating SSA information for statement D.41963_597 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);



Registering new PHI nodes in block #209

Updating SSA information for statement D.41975_599 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

Updating SSA information for statement D.41964_600 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;



Registering new PHI nodes in block #210

Updating SSA information for statement D.42006_601 = strlen (buf_144);

Updating SSA information for statement D.42008_603 = strlen (buf_144);

Updating SSA information for statement D.41962_605 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;

Updating SSA information for statement D.41963_606 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_607 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;

Updating SSA information for statement D.41910_609 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

Updating SSA information for statement D.41966_612 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;

Updating SSA information for statement D.41975_613 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;

Updating SSA information for statement D.41910_615 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;

Updating SSA information for statement switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, 659124, D.41963_606, D.41995_611, D.41966_612, D.42010_617);



Registering new PHI nodes in block #211

Updating SSA information for statement D.41736_618 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;



Registering new PHI nodes in block #212

Updating SSA information for statement D.41512_619 = session_72(D)->channel;

Updating SSA information for statement D.42013_620 = switch_channel_test_flag (D.41512_619, 109);



Registering new PHI nodes in block #213

Updating SSA information for statement D.41736_621 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

Updating SSA information for statement D.42016_622 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_621].local_crypto_key;



Registering new PHI nodes in block #214

Updating SSA information for statement D.48168_1534 = MEM[(const char *)D.42016_622];



Registering new PHI nodes in block #215



Registering new PHI nodes in block #216



Registering new PHI nodes in block #217

Updating SSA information for statement D.41512_624 = session_72(D)->channel;

Updating SSA information for statement D.42020_625 = switch_channel_test_flag (D.41512_624, 92);



Registering new PHI nodes in block #218

Updating SSA information for statement D.42023_626 = strlen (buf_144);

Updating SSA information for statement D.42025_628 = strlen (buf_144);

Updating SSA information for statement D.41736_630 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;

Updating SSA information for statement D.42016_631 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_630].local_crypto_key;

Updating SSA information for statement switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);



Registering new PHI nodes in block #219

Updating SSA information for statement D.41522_632 = smh_90->mparams;

Updating SSA information for statement D.41587_633 = D.41522_632->num_codecs;



Registering new PHI nodes in block #220

Updating SSA information for statement D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);



Registering new PHI nodes in block #221

Updating SSA information for statement D.41522_638 = smh_90->mparams;

Updating SSA information for statement D.41606_639 = D.41522_638->cng_pt;



Registering new PHI nodes in block #222

Updating SSA information for statement D.41522_643 = smh_90->mparams;

Updating SSA information for statement D.41606_644 = D.41522_643->cng_pt;

Updating SSA information for statement D.41720_646 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;



Registering new PHI nodes in block #223

Updating SSA information for statement D.41522_647 = smh_90->mparams;

Updating SSA information for statement D.41522_647->cng_pt = 0;



Registering new PHI nodes in block #224

Updating SSA information for statement D.41512_648 = session_72(D)->channel;

Updating SSA information for statement mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);

Updating SSA information for statement D.41512_650 = session_72(D)->channel;

Updating SSA information for statement D.42039_651 = switch_channel_test_flag (D.41512_650, 106);



Registering new PHI nodes in block #225



Registering new PHI nodes in block #226

Updating SSA information for statement D.42042_652 = switch_false (mult_649);



Registering new PHI nodes in block #227



Registering new PHI nodes in block #255

Updating SSA information for statement D.41522_654 = smh_90->mparams;

Updating SSA information for statement D.41587_655 = D.41522_654->num_codecs;



Registering new PHI nodes in block #238

Updating SSA information for statement imp_656 = smh_90->codecs[i_38];

Updating SSA information for statement D.42065_657 = imp_656->codec_type;



Registering new PHI nodes in block #239



Registering new PHI nodes in block #240

Updating SSA information for statement D.42068_658 = imp_656->microseconds_per_packet;

Updating SSA information for statement D.42071_660 = imp_656->iananame;

Updating SSA information for statement D.42072_661 = strcasecmp (D.42071_660, "ilbc");



Registering new PHI nodes in block #241

Updating SSA information for statement D.42071_662 = imp_656->iananame;

Updating SSA information for statement D.42074_663 = strcasecmp (D.42071_662, "isac");



Registering new PHI nodes in block #242



Registering new PHI nodes in block #243



Registering new PHI nodes in block #244

Updating SSA information for statement D.41732_668 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;



Registering new PHI nodes in block #245

Updating SSA information for statement D.41512_669 = session_72(D)->channel;

Updating SSA information for statement D.42081_670 = switch_channel_test_flag (D.41512_669, 92);



Registering new PHI nodes in block #246

Updating SSA information for statement D.41512_671 = session_72(D)->channel;

Updating SSA information for statement D.42082_672 = switch_channel_test_flag (D.41512_671, 109);



Registering new PHI nodes in block #247

Updating SSA information for statement D.42083_673 = strlen (buf_144);

Updating SSA information for statement map.33_675 = map;

Updating SSA information for statement generate_m.isra.4 (session_72(D), buf_144, D.42084_674, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);

Updating SSA information for statement D.42085_676 = strlen (buf_144);

Updating SSA information for statement D.42058_678 = smh_90->crypto_mode;



Registering new PHI nodes in block #248



Registering new PHI nodes in block #249

Updating SSA information for statement D.41512_680 = session_72(D)->channel;

Updating SSA information for statement D.42090_681 = switch_channel_test_flag (D.41512_680, 106);



Registering new PHI nodes in block #250

Updating SSA information for statement D.41512_682 = session_72(D)->channel;

Updating SSA information for statement D.42092_683 = switch_channel_test_flag (D.41512_682, 109);



Registering new PHI nodes in block #251



Registering new PHI nodes in block #252



Registering new PHI nodes in block #253

Updating SSA information for statement D.42095_685 = strlen (buf_144);

Updating SSA information for statement map.33_687 = map;

Updating SSA information for statement generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);



Registering new PHI nodes in block #254



Registering new PHI nodes in block #228

Updating SSA information for statement D.41512_690 = session_72(D)->channel;

Updating SSA information for statement D.42046_691 = switch_channel_test_flag (D.41512_690, 106);



Registering new PHI nodes in block #229

Updating SSA information for statement D.41512_692 = session_72(D)->channel;

Updating SSA information for statement D.42048_693 = switch_channel_test_flag (D.41512_692, 109);



Registering new PHI nodes in block #230



Registering new PHI nodes in block #231

Updating SSA information for statement D.41732_697 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;



Registering new PHI nodes in block #232

Updating SSA information for statement D.41512_698 = session_72(D)->channel;

Updating SSA information for statement D.42054_699 = switch_channel_test_flag (D.41512_698, 92);



Registering new PHI nodes in block #233

Updating SSA information for statement D.41512_700 = session_72(D)->channel;

Updating SSA information for statement D.42055_701 = switch_channel_test_flag (D.41512_700, 109);



Registering new PHI nodes in block #234

Updating SSA information for statement map.33_702 = map;

Updating SSA information for statement generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);

Updating SSA information for statement D.42057_703 = strlen (buf_144);

Updating SSA information for statement D.42058_705 = smh_90->crypto_mode;



Registering new PHI nodes in block #235



Registering new PHI nodes in block #236



Registering new PHI nodes in block #237

Updating SSA information for statement D.42063_707 = strlen (buf_144);

Updating SSA information for statement map.33_709 = map;

Updating SSA information for statement generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);



Registering new PHI nodes in block #256

Updating SSA information for statement D.41512_710 = session_72(D)->channel;

Updating SSA information for statement D.42097_711 = switch_channel_test_flag (D.41512_710, 98);



Registering new PHI nodes in block #257

Updating SSA information for statement D.41512_712 = session_72(D)->channel;

Updating SSA information for statement D.42100_713 = switch_channel_direction (D.41512_712);



Registering new PHI nodes in block #258

Updating SSA information for statement D.41534_714 = smh_90->session;

Updating SSA information for statement D.41535_715 = D.41534_714->channel;

Updating SSA information for statement D.42103_716 = switch_channel_test_flag (D.41535_715, 109);



Registering new PHI nodes in block #259

Updating SSA information for statement MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].no_crypto = 1;



Registering new PHI nodes in block #260

Updating SSA information for statement D.42106_717 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;



Registering new PHI nodes in block #261

Updating SSA information for statement switch_core_media_choose_port (session_72(D), 1, 0);



Registering new PHI nodes in block #262

Updating SSA information for statement D.41512_718 = session_72(D)->channel;

Updating SSA information for statement D.42109_719 = switch_channel_test_flag (D.41512_718, 106);



Registering new PHI nodes in block #263

Updating SSA information for statement switch_media_handle_set_media_flag (smh_90, 16);



Registering new PHI nodes in block #264

Updating SSA information for statement D.42112_720 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].adv_sdp_port;



Registering new PHI nodes in block #265



Registering new PHI nodes in block #442



Registering new PHI nodes in block #266

Updating SSA information for statement D.41534_723 = smh_90->session;

Updating SSA information for statement D.41535_724 = D.41534_723->channel;

Updating SSA information for statement D.42115_725 = switch_channel_test_flag (D.41535_724, 108);



Registering new PHI nodes in block #267

Updating SSA information for statement gen_ice (session_72(D), 1, ip_1, D.42118_726);



Registering new PHI nodes in block #268

Updating SSA information for statement D.42119_727 = strlen (buf_144);

Updating SSA information for statement D.42121_729 = strlen (buf_144);



Registering new PHI nodes in block #269

Updating SSA information for statement D.41512_731 = session_72(D)->channel;

Updating SSA information for statement D.42129_732 = switch_channel_test_flag (D.41512_731, 92);



Registering new PHI nodes in block #270

Updating SSA information for statement D.41512_733 = session_72(D)->channel;

Updating SSA information for statement D.42131_734 = switch_channel_direction (D.41512_733);



Registering new PHI nodes in block #271

Updating SSA information for statement D.41736_735 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;



Registering new PHI nodes in block #272

Updating SSA information for statement D.41512_736 = session_72(D)->channel;

Updating SSA information for statement D.42133_737 = switch_channel_test_flag (D.41512_736, 109);



Registering new PHI nodes in block #273



Registering new PHI nodes in block #274

Updating SSA information for statement D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);

Updating SSA information for statement switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);

Updating SSA information for statement D.42135_741 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;



Registering new PHI nodes in block #275

Updating SSA information for statement switch_core_media_set_video_codec (session_72(D), 0);

Updating SSA information for statement D.42138_742 = strlen (buf_144);

Updating SSA information for statement D.42140_744 = strlen (buf_144);

Updating SSA information for statement D.42142_746 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42143_747 = D.42142_746->agreed_pt;

Updating SSA information for statement switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);

Updating SSA information for statement D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);



Registering new PHI nodes in block #276

Updating SSA information for statement D.41747_750 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_lock (D.41747_750);

Updating SSA information for statement pmap_751 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;



Registering new PHI nodes in block #280



Registering new PHI nodes in block #281

Updating SSA information for statement D.42158_752 = pmap_49->allocated;



Registering new PHI nodes in block #277

Updating SSA information for statement D.42148_753 = pmap_49->pt;

Updating SSA information for statement D.42142_754 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_755 = D.42142_754->pt;



Registering new PHI nodes in block #278

Updating SSA information for statement D.42152_756 = strlen (buf_144);

Updating SSA information for statement D.42154_758 = strlen (buf_144);

Updating SSA information for statement D.42148_760 = pmap_49->pt;

Updating SSA information for statement switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);



Registering new PHI nodes in block #279

Updating SSA information for statement pmap_762 = pmap_49->next;



Registering new PHI nodes in block #282

Updating SSA information for statement D.41747_763 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_unlock (D.41747_763);



Registering new PHI nodes in block #283

Updating SSA information for statement D.41522_764 = smh_90->mparams;

Updating SSA information for statement D.41587_765 = D.41522_764->num_codecs;



Registering new PHI nodes in block #284

Updating SSA information for statement already_did = {};



Registering new PHI nodes in block #296

Updating SSA information for statement D.41522_767 = smh_90->mparams;

Updating SSA information for statement D.41587_768 = D.41522_767->num_codecs;



Registering new PHI nodes in block #285

Updating SSA information for statement imp_769 = smh_90->codecs[i_50];

Updating SSA information for statement D.42162_770 = imp_769->codec_type;



Registering new PHI nodes in block #286



Registering new PHI nodes in block #287

Updating SSA information for statement D.41512_771 = session_72(D)->channel;

Updating SSA information for statement D.42165_772 = switch_channel_direction (D.41512_771);



Registering new PHI nodes in block #288

Updating SSA information for statement D.41512_773 = session_72(D)->channel;

Updating SSA information for statement D.42168_774 = switch_channel_test_flag (D.41512_773, 114);



Registering new PHI nodes in block #289



Registering new PHI nodes in block #290

Updating SSA information for statement D.42171_775 = smh_90->ianacodes[i_50];



Registering new PHI nodes in block #291

Updating SSA information for statement D.42171_777 = smh_90->ianacodes[i_50];

Updating SSA information for statement D.42176_779 = already_did[D.42175_778];



Registering new PHI nodes in block #292



Registering new PHI nodes in block #293

Updating SSA information for statement D.42171_780 = smh_90->ianacodes[i_50];

Updating SSA information for statement already_did[D.42175_781] = 1;



Registering new PHI nodes in block #294

Updating SSA information for statement D.42179_782 = strlen (buf_144);

Updating SSA information for statement D.42181_784 = strlen (buf_144);

Updating SSA information for statement D.42171_786 = smh_90->ianacodes[i_50];

Updating SSA information for statement switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);



Registering new PHI nodes in block #295



Registering new PHI nodes in block #297

Updating SSA information for statement D.42186_791 = strlen (buf_144);

Updating SSA information for statement D.42188_793 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42187_792, D.42189_794, "\n");

Updating SSA information for statement D.42135_795 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;



Registering new PHI nodes in block #298

Updating SSA information for statement D.42142_796 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42192_797 = D.42142_796->rm_encoding;

Updating SSA information for statement D.42193_798 = strcasecmp (D.42192_797, "VP8");



Registering new PHI nodes in block #299

Updating SSA information for statement D.42142_799 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_800 = D.42142_799->pt;



Registering new PHI nodes in block #300

Updating SSA information for statement D.42142_802 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42192_803 = D.42142_802->rm_encoding;

Updating SSA information for statement D.42196_804 = strcasecmp (D.42192_803, "red");



Registering new PHI nodes in block #301

Updating SSA information for statement D.42142_805 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_806 = D.42142_805->pt;



Registering new PHI nodes in block #302

Updating SSA information for statement D.42199_810 = strlen (buf_144);

Updating SSA information for statement D.42201_812 = strlen (buf_144);

Updating SSA information for statement D.42142_814 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_815 = D.42142_814->pt;

Updating SSA information for statement D.42142_817 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42192_818 = D.42142_817->rm_encoding;

Updating SSA information for statement D.42142_819 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42204_820 = D.42142_819->rm_rate;

Updating SSA information for statement switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);

Updating SSA information for statement D.41512_821 = session_72(D)->channel;

Updating SSA information for statement D.42205_822 = switch_channel_test_flag (D.41512_821, 84);



Registering new PHI nodes in block #303

Updating SSA information for statement D.42142_823 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement pass_fmtp_824 = D.42142_823->rm_fmtp;



Registering new PHI nodes in block #304

Updating SSA information for statement D.41512_826 = session_72(D)->channel;

Updating SSA information for statement D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);



Registering new PHI nodes in block #305

Updating SSA information for statement D.41512_828 = session_72(D)->channel;

Updating SSA information for statement switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");



Registering new PHI nodes in block #306



Registering new PHI nodes in block #307

Updating SSA information for statement D.41512_832 = session_72(D)->channel;

Updating SSA information for statement pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);



Registering new PHI nodes in block #308



Registering new PHI nodes in block #309

Updating SSA information for statement D.42219_834 = strlen (buf_144);

Updating SSA information for statement D.42221_836 = strlen (buf_144);

Updating SSA information for statement D.42142_838 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_839 = D.42142_838->pt;

Updating SSA information for statement switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);



Registering new PHI nodes in block #310

Updating SSA information for statement D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);



Registering new PHI nodes in block #311

Updating SSA information for statement D.41747_842 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_lock (D.41747_842);

Updating SSA information for statement pmap_843 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;



Registering new PHI nodes in block #316



Registering new PHI nodes in block #317

Updating SSA information for statement D.42240_844 = pmap_51->allocated;



Registering new PHI nodes in block #312

Updating SSA information for statement D.42226_845 = pmap_51->pt;

Updating SSA information for statement D.42142_846 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;

Updating SSA information for statement D.42149_847 = D.42142_846->pt;



Registering new PHI nodes in block #313

Updating SSA information for statement D.42229_848 = pmap_51->negotiated;



Registering new PHI nodes in block #314

Updating SSA information for statement D.42232_849 = strlen (buf_144);

Updating SSA information for statement D.42234_851 = strlen (buf_144);

Updating SSA information for statement D.42226_853 = pmap_51->pt;

Updating SSA information for statement D.42237_855 = pmap_51->iananame;

Updating SSA information for statement D.42238_856 = pmap_51->rate;

Updating SSA information for statement switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);



Registering new PHI nodes in block #315

Updating SSA information for statement pmap_857 = pmap_51->next;



Registering new PHI nodes in block #318

Updating SSA information for statement D.41747_858 = smh_90->sdp_mutex;

Updating SSA information for statement switch_mutex_unlock (D.41747_858);



Registering new PHI nodes in block #319



Registering new PHI nodes in block #320

Updating SSA information for statement D.42243_859 = strlen (buf_144);

Updating SSA information for statement D.42245_861 = strlen (buf_144);

Updating SSA information for statement D.42249_863 = *append_video_80;



Registering new PHI nodes in block #321

Updating SSA information for statement D.42252_864 = strlen (append_video_80);



Registering new PHI nodes in block #322

Updating SSA information for statement D.42255_868 = *append_video_66;



Registering new PHI nodes in block #323



Registering new PHI nodes in block #324

Updating SSA information for statement switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);



Registering new PHI nodes in block #325

Updating SSA information for statement D.41522_871 = smh_90->mparams;

Updating SSA information for statement D.41587_872 = D.41522_871->num_codecs;



Registering new PHI nodes in block #326

Updating SSA information for statement already_did = {};



Registering new PHI nodes in block #368

Updating SSA information for statement D.41522_874 = smh_90->mparams;

Updating SSA information for statement D.41587_875 = D.41522_874->num_codecs;



Registering new PHI nodes in block #327

Updating SSA information for statement imp_876 = smh_90->codecs[i_52];

Updating SSA information for statement D.42262_878 = smh_90->ianacodes[i_52];

Updating SSA information for statement D.42263_880 = imp_876->codec_type;



Registering new PHI nodes in block #328



Registering new PHI nodes in block #329

Updating SSA information for statement D.41512_881 = session_72(D)->channel;

Updating SSA information for statement D.42266_882 = switch_channel_direction (D.41512_881);



Registering new PHI nodes in block #330

Updating SSA information for statement D.41512_883 = session_72(D)->channel;

Updating SSA information for statement D.42269_884 = switch_channel_test_flag (D.41512_883, 114);



Registering new PHI nodes in block #331



Registering new PHI nodes in block #332



Registering new PHI nodes in block #333

Updating SSA information for statement D.42274_885 = already_did[ianacode_879];



Registering new PHI nodes in block #334



Registering new PHI nodes in block #335

Updating SSA information for statement already_did[ianacode_879] = 1;



Registering new PHI nodes in block #336

Updating SSA information for statement D.42279_887 = imp_876->iananame;

Updating SSA information for statement D.42280_888 = imp_876->number_of_channels;

Updating SSA information for statement channels_890 = get_channels (D.42279_887, D.42281_889);

Updating SSA information for statement D.42279_891 = imp_876->iananame;

Updating SSA information for statement D.42282_892 = strcasecmp (D.42279_891, "VP8");



Registering new PHI nodes in block #337



Registering new PHI nodes in block #338

Updating SSA information for statement D.42279_894 = imp_876->iananame;

Updating SSA information for statement D.42285_895 = strcasecmp (D.42279_894, "red");



Registering new PHI nodes in block #339



Registering new PHI nodes in block #340



Registering new PHI nodes in block #341

Updating SSA information for statement D.42290_897 = strlen (buf_144);

Updating SSA information for statement D.42292_899 = strlen (buf_144);

Updating SSA information for statement D.42279_901 = imp_876->iananame;

Updating SSA information for statement D.42294_902 = imp_876->samples_per_second;

Updating SSA information for statement switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);



Registering new PHI nodes in block #342

Updating SSA information for statement D.42296_903 = strlen (buf_144);

Updating SSA information for statement D.42298_905 = strlen (buf_144);

Updating SSA information for statement D.42279_907 = imp_876->iananame;

Updating SSA information for statement D.42294_908 = imp_876->samples_per_second;

Updating SSA information for statement switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);



Registering new PHI nodes in block #343



Registering new PHI nodes in block #344

Updating SSA information for statement D.48172_1536 = *ov_fmtp_76;



Registering new PHI nodes in block #345



Registering new PHI nodes in block #346



Registering new PHI nodes in block #347

Updating SSA information for statement map.33_911 = map;



Registering new PHI nodes in block #348

Updating SSA information for statement map.33_912 = map;

Updating SSA information for statement D.42279_913 = imp_876->iananame;

Updating SSA information for statement fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);



Registering new PHI nodes in block #349

Updating SSA information for statement D.42306_915 = smh_90->fmtps[i_52];



Registering new PHI nodes in block #350

Updating SSA information for statement fmtp_916 = smh_90->fmtps[i_52];



Registering new PHI nodes in block #351



Registering new PHI nodes in block #352

Updating SSA information for statement D.48176_1538 = MEM[(const char *)fmtp_54];



Registering new PHI nodes in block #353



Registering new PHI nodes in block #354



Registering new PHI nodes in block #355

Updating SSA information for statement fmtp_918 = imp_876->fmtp;



Registering new PHI nodes in block #356



Registering new PHI nodes in block #357

Updating SSA information for statement D.48180_1540 = MEM[(const char *)fmtp_55];



Registering new PHI nodes in block #358



Registering new PHI nodes in block #359



Registering new PHI nodes in block #360



Registering new PHI nodes in block #361



Registering new PHI nodes in block #362

Updating SSA information for statement D.48184_1542 = MEM[(const char *)fmtp_56];



Registering new PHI nodes in block #363



Registering new PHI nodes in block #364



Registering new PHI nodes in block #365

Updating SSA information for statement D.42318_922 = strcasecmp (fmtp_56, "_blank_");



Registering new PHI nodes in block #366

Updating SSA information for statement D.42321_923 = strlen (buf_144);

Updating SSA information for statement D.42323_925 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);



Registering new PHI nodes in block #367



Registering new PHI nodes in block #369



Registering new PHI nodes in block #370

Updating SSA information for statement D.41512_928 = session_72(D)->channel;

Updating SSA information for statement D.42328_929 = switch_channel_test_flag (D.41512_928, 84);



Registering new PHI nodes in block #371

Updating SSA information for statement D.41534_930 = smh_90->session;

Updating SSA information for statement D.41535_931 = D.41534_930->channel;

Updating SSA information for statement D.42329_932 = switch_channel_test_flag (D.41535_931, 109);



Registering new PHI nodes in block #372

Updating SSA information for statement generate_local_fingerprint (smh_90, 1);



Registering new PHI nodes in block #373

Updating SSA information for statement D.42332_933 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;



Registering new PHI nodes in block #374

Updating SSA information for statement D.48188_1544 = MEM[(const char *)D.42332_933];



Registering new PHI nodes in block #375



Registering new PHI nodes in block #376



Registering new PHI nodes in block #377

Updating SSA information for statement D.42336_935 = strlen (buf_144);

Updating SSA information for statement D.42338_937 = strlen (buf_144);

Updating SSA information for statement D.42332_939 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;

Updating SSA information for statement switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);



Registering new PHI nodes in block #378

Updating SSA information for statement D.41522_941 = smh_90->mparams;

Updating SSA information for statement D.41527_942 = D.41522_941->rtcp_video_interval_msec;



Registering new PHI nodes in block #379

Updating SSA information for statement D.42343_943 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;



Registering new PHI nodes in block #380

Updating SSA information for statement D.42346_944 = strlen (buf_144);

Updating SSA information for statement D.42348_946 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");

Updating SSA information for statement D.42350_948 = strlen (buf_144);

Updating SSA information for statement D.42352_950 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_59, ip_1);



Registering new PHI nodes in block #381

Updating SSA information for statement D.42355_952 = strlen (buf_144);

Updating SSA information for statement D.42357_954 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_59, ip_1);



Registering new PHI nodes in block #382

Updating SSA information for statement D.42360_957 = BIT_FIELD_REF <MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B], 16, 91280>;



Registering new PHI nodes in block #383

Updating SSA information for statement D.42364_959 = strlen (buf_144);

Updating SSA information for statement D.42366_961 = strlen (buf_144);

Updating SSA information for statement D.42369_963 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].fir;



Registering new PHI nodes in block #384



Registering new PHI nodes in block #385

Updating SSA information for statement D.42374_966 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].pli;



Registering new PHI nodes in block #386



Registering new PHI nodes in block #387

Updating SSA information for statement switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);



Registering new PHI nodes in block #388

Updating SSA information for statement D.42378_969 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out.cands[0][0].ready;



Registering new PHI nodes in block #389

Updating SSA information for statement tmp1 = "";

Updating SSA information for statement tmp2 = "";

Updating SSA information for statement tmp1[10] = 0;

Updating SSA information for statement tmp2[10] = 0;

Updating SSA information for statement switch_stun_random_string (&tmp1, 10, "0123456789");

Updating SSA information for statement switch_stun_random_string (&tmp2, 10, "0123456789");

Updating SSA information for statement D.41534_976 = smh_90->session;

Updating SSA information for statement D.41535_977 = D.41534_976->channel;

Updating SSA information for statement vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);



Registering new PHI nodes in block #390

Updating SSA information for statement v_1546 = strtol (vbw_978, 0B, 10);



Registering new PHI nodes in block #391



Registering new PHI nodes in block #392

Updating SSA information for statement D.42385_981 = strlen (buf_144);

Updating SSA information for statement D.42387_983 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);



Registering new PHI nodes in block #393



Registering new PHI nodes in block #394

Updating SSA information for statement D.41512_985 = session_72(D)->channel;

Updating SSA information for statement D.42391_986 = switch_channel_test_flag (D.41512_985, 106);



Registering new PHI nodes in block #395

Updating SSA information for statement D.42394_987 = strlen (buf_144);

Updating SSA information for statement D.42396_989 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);



Registering new PHI nodes in block #396



Registering new PHI nodes in block #397

Updating SSA information for statement D.42400_991 = strlen (buf_144);

Updating SSA information for statement D.42402_993 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);



Registering new PHI nodes in block #398

Updating SSA information for statement D.42404_995 = strlen (buf_144);

Updating SSA information for statement D.42406_997 = strlen (buf_144);

Updating SSA information for statement D.42408_999 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

Updating SSA information for statement D.41935_1000 = smh_90->cname;

Updating SSA information for statement switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);

Updating SSA information for statement D.42409_1001 = strlen (buf_144);

Updating SSA information for statement D.42411_1003 = strlen (buf_144);

Updating SSA information for statement D.42408_1005 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

Updating SSA information for statement D.41719_1006 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);

Updating SSA information for statement D.42413_1007 = strlen (buf_144);

Updating SSA information for statement D.42415_1009 = strlen (buf_144);

Updating SSA information for statement D.42408_1011 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

Updating SSA information for statement D.41719_1012 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);

Updating SSA information for statement D.42417_1013 = strlen (buf_144);

Updating SSA information for statement D.42419_1015 = strlen (buf_144);

Updating SSA information for statement D.42408_1017 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;

Updating SSA information for statement D.41719_1018 = smh_90->msid;

Updating SSA information for statement switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);

Updating SSA information for statement D.42421_1019 = strlen (buf_144);

Updating SSA information for statement D.42423_1021 = strlen (buf_144);

Updating SSA information for statement D.41952_1023 = MEM[(struct ice_t *)smh_90 + 17896B].ufrag;

Updating SSA information for statement switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);

Updating SSA information for statement D.42425_1024 = strlen (buf_144);

Updating SSA information for statement D.42427_1026 = strlen (buf_144);

Updating SSA information for statement D.41957_1028 = MEM[(struct ice_t *)smh_90 + 17896B].pwd;

Updating SSA information for statement switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);

Updating SSA information for statement D.42429_1029 = strlen (buf_144);

Updating SSA information for statement D.42431_1031 = strlen (buf_144);

Updating SSA information for statement D.41962_1033 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

Updating SSA information for statement D.41963_1034 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_1035 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

Updating SSA information for statement switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, 659136, D.41963_1034, D.41965_1036);

Updating SSA information for statement D.42433_1037 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;



Registering new PHI nodes in block #399

Updating SSA information for statement D.48195_1547 = MEM[(const char *)D.42433_1037];



Registering new PHI nodes in block #400



Registering new PHI nodes in block #401



Registering new PHI nodes in block #402

Updating SSA information for statement D.41963_1039 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;



Registering new PHI nodes in block #403

Updating SSA information for statement D.48199_1549 = MEM[(const char *)D.41963_1039];



Registering new PHI nodes in block #404



Registering new PHI nodes in block #405



Registering new PHI nodes in block #406

Updating SSA information for statement D.42433_1041 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

Updating SSA information for statement D.41963_1042 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

Updating SSA information for statement D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);



Registering new PHI nodes in block #407

Updating SSA information for statement D.42106_1044 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

Updating SSA information for statement D.41964_1045 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;



Registering new PHI nodes in block #408

Updating SSA information for statement D.42444_1046 = strlen (buf_144);

Updating SSA information for statement D.42446_1048 = strlen (buf_144);

Updating SSA information for statement D.41962_1050 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

Updating SSA information for statement D.41963_1051 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_1052 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

Updating SSA information for statement D.42433_1054 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

Updating SSA information for statement D.42106_1055 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

Updating SSA information for statement switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, 659126, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);



Registering new PHI nodes in block #409

Updating SSA information for statement D.42343_1057 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;



Registering new PHI nodes in block #410

Updating SSA information for statement D.41512_1061 = session_72(D)->channel;

Updating SSA information for statement D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);



Registering new PHI nodes in block #411

Updating SSA information for statement D.42455_1063 = strlen (buf_144);

Updating SSA information for statement D.42457_1065 = strlen (buf_144);

Updating SSA information for statement D.41962_1067 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

Updating SSA information for statement D.41963_1068 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_1069 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

Updating SSA information for statement D.42343_1071 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

Updating SSA information for statement switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, 659134, D.41963_1068, D.42460_1073);

Updating SSA information for statement D.42433_1074 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;



Registering new PHI nodes in block #412

Updating SSA information for statement D.48203_1551 = MEM[(const char *)D.42433_1074];



Registering new PHI nodes in block #413



Registering new PHI nodes in block #414



Registering new PHI nodes in block #415

Updating SSA information for statement D.42464_1076 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;



Registering new PHI nodes in block #416

Updating SSA information for statement D.48207_1553 = MEM[(const char *)D.42464_1076];



Registering new PHI nodes in block #417



Registering new PHI nodes in block #418



Registering new PHI nodes in block #419

Updating SSA information for statement D.42433_1078 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

Updating SSA information for statement D.42464_1079 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;

Updating SSA information for statement D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);



Registering new PHI nodes in block #420

Updating SSA information for statement D.42106_1081 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

Updating SSA information for statement D.42470_1082 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_port;



Registering new PHI nodes in block #421

Updating SSA information for statement D.42473_1083 = strlen (buf_144);

Updating SSA information for statement D.42475_1085 = strlen (buf_144);

Updating SSA information for statement D.41962_1087 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;

Updating SSA information for statement D.41963_1088 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;

Updating SSA information for statement D.41964_1089 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;

Updating SSA information for statement D.42343_1091 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

Updating SSA information for statement D.42433_1094 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;

Updating SSA information for statement D.42106_1095 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;

Updating SSA information for statement D.42343_1097 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;

Updating SSA information for statement switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, 659124, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);



Registering new PHI nodes in block #422



Registering new PHI nodes in block #423

Updating SSA information for statement D.41512_1100 = session_72(D)->channel;

Updating SSA information for statement D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);



Registering new PHI nodes in block #424

Updating SSA information for statement D.41512_1102 = session_72(D)->channel;

Updating SSA information for statement D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);



Registering new PHI nodes in block #425



Registering new PHI nodes in block #434

Updating SSA information for statement D.42486_1105 = smh_90->crypto_suite_order[i_58];



Registering new PHI nodes in block #426

Updating SSA information for statement D.42486_1106 = smh_90->crypto_suite_order[i_58];

Updating SSA information for statement j_1107 = SUITES[D.42486_1106].type;

Updating SSA information for statement D.41736_1108 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;



Registering new PHI nodes in block #427

Updating SSA information for statement D.41736_1109 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;



Registering new PHI nodes in block #428

Updating SSA information for statement D.42490_1110 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[j_1107].local_crypto_key;



Registering new PHI nodes in block #429

Updating SSA information for statement D.48211_1555 = MEM[(const char *)D.42490_1110];



Registering new PHI nodes in block #430



Registering new PHI nodes in block #431



Registering new PHI nodes in block #432

Updating SSA information for statement D.42494_1112 = strlen (buf_144);

Updating SSA information for statement D.42496_1114 = strlen (buf_144);

Updating SSA information for statement D.42498_1116 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssec[j_1107].local_crypto_key;

Updating SSA information for statement switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);



Registering new PHI nodes in block #433



Registering new PHI nodes in block #435



Registering new PHI nodes in block #436

Updating SSA information for statement switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

Updating SSA information for statement D.42501_1118 = strlen (buf_144);

Updating SSA information for statement D.42503_1120 = strlen (buf_144);

Updating SSA information for statement switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);



Registering new PHI nodes in block #437

Updating SSA information for statement D.41512_1122 = session_72(D)->channel;

Updating SSA information for statement D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);



Registering new PHI nodes in block #438

Updating SSA information for statement D.41512_1124 = session_72(D)->channel;

Updating SSA information for statement D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);



Registering new PHI nodes in block #439

Updating SSA information for statement D.42058_1126 = smh_90->crypto_mode;



Registering new PHI nodes in block #440

Updating SSA information for statement D.42058_1127 = smh_90->crypto_mode;



Registering new PHI nodes in block #441



Registering new PHI nodes in block #443

Updating SSA information for statement map.33_1129 = map;



Registering new PHI nodes in block #444

Updating SSA information for statement switch_event_destroy (&map);



Registering new PHI nodes in block #445

Updating SSA information for statement ptmap.39_1130 = ptmap;



Registering new PHI nodes in block #446

Updating SSA information for statement switch_event_destroy (&ptmap);



Registering new PHI nodes in block #447

Updating SSA information for statement switch_core_media_set_local_sdp (session_72(D), buf_144, 1);



Registering new PHI nodes in block #448

Updating SSA information for statement free (buf_144);



Registering new PHI nodes in block #449



Symbols to be put in SSA form

{ .MEM }


Incremental SSA update started at block: 0

Number of blocks in CFG: 450
Number of blocks to update: 449 (100%)

Affected blocks


Scope blocks after cleanups:

{ Scope block #0 
  char * buf;
  int ptime;
  uint32_t rate;
  uint32_t v_port;
  int use_cng;
  const char * val;
  const char * family;
  const char * pass_fmtp;
  const char * ov_fmtp;
  const char * append_audio;
  const char * append_video;
  char srbuf[128];
  const char * var_val;
  const char * username;
  const char * fmtp_out;
  const char * fmtp_out_var;
  struct switch_event_t * map;
  struct switch_event_t * ptmap;
  const char * local_sdp_audio_zrtp_hash;
  const char * local_sdp_video_zrtp_hash;
  const char * tmp;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  struct switch_media_handle_t * smh;
  struct ice_t * ice_out; (unused)
  int vp8;
  int red;
  struct payload_map_t * pmap;
  int is_outbound;
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_gen_local_sdp";
  static const char __func__[32] = "switch_core_media_gen_local_sdp";

  { Scope block #382 src/switch_core_media.c:6449 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #383 Originating from :#0 

    }

  }

  { Scope block #384 src/switch_core_media.c:6361 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #385 Originating from :#0 

    }

  }

  { Scope block #386 src/switch_core_media.c:6356 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #387 Originating from :#0 

    }

  }

  { Scope block #388 src/switch_core_media.c:6227 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #389 Originating from :#0 

    }

  }

  { Scope block #390 src/switch_core_media.c:6203 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #391 Originating from :#0 

    }

  }

  { Scope block #392 src/switch_core_media.c:6169 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #393 Originating from :#0 

    }

  }

  { Scope block #394 
    int i;

    { Scope block #395 
      struct switch_core_session_t * orig_session;

      { Scope block #396 
        const struct switch_codec_implementation_t * imp;
        switch_payload_t orig_pt;
        char * orig_fmtp;

      }

    }

  }

  { Scope block #397 
    char tmp1[11];
    char tmp2[11];
    uint32_t c1; (unused)
    uint32_t c2; (unused)
    uint32_t c3; (unused)
    uint32_t c4; (unused)

    { Scope block #398 src/switch_core_media.c:6430 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #399 Originating from :#0 

      }

    }

    { Scope block #400 src/switch_core_media.c:6430 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #401 Originating from :#0 

      }

    }

    { Scope block #402 src/switch_core_media.c:6408 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #403 Originating from :#0 

      }

    }

    { Scope block #404 src/switch_core_media.c:6408 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #405 Originating from :#0 

      }

    }

    { Scope block #406 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

    { Scope block #407 
      size_t __s1_len; (unused)
      size_t __s2_len; (unused)

    }

  }

  { Scope block #408 
    int i;
    int cur_ptime;
    int this_ptime;
    int cng_type;
    const char * mult;

    { Scope block #409 
      char * bp;
      int both;

    }

    { Scope block #410 
      const struct switch_codec_implementation_t * imp;

      { Scope block #411 
        char * bp;
        int both;

      }

    }

  }

  { Scope block #412 
    int loops;

    { Scope block #413 src/switch_core_media.c:6759 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #414 Originating from :#0 

      }

    }

    { Scope block #415 
      struct payload_map_t * pmap;

    }

    { Scope block #416 
      int i;
      int already_did[128];

      { Scope block #417 
        const struct switch_codec_implementation_t * imp;

      }

    }

    { Scope block #418 
      const char * of; (unused)
      struct payload_map_t * pmap;

    }

    { Scope block #419 
      int i;
      int already_did[128];

      { Scope block #420 
        const struct switch_codec_implementation_t * imp;
        char * fmtp;
        uint32_t ianacode;
        int channels;

        { Scope block #421 src/switch_core_media.c:6746 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #422 Originating from :#0 

          }

        }

        { Scope block #423 src/switch_core_media.c:6743 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #424 Originating from :#0 

          }

        }

        { Scope block #425 src/switch_core_media.c:6741 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #426 Originating from :#0 

          }

        }

        { Scope block #427 src/switch_core_media.c:6729 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #428 Originating from :#0 

          }

        }

      }

    }

    { Scope block #429 
      char tmp1[11];
      char tmp2[11];
      uint32_t c1; (unused)
      uint32_t c2; (unused)
      uint32_t c3; (unused)
      uint32_t c4; (unused)
      const char * vbw;
      int bw;

      { Scope block #430 src/switch_core_media.c:6856 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #431 Originating from :#0 

        }

      }

      { Scope block #432 src/switch_core_media.c:6856 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #433 Originating from :#0 

        }

      }

      { Scope block #434 src/switch_core_media.c:6835 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #435 Originating from :#0 

        }

      }

      { Scope block #436 src/switch_core_media.c:6835 Originating from :  static int _zstr (const char *); 
        const char * s; (unused)

        { Scope block #437 Originating from :#0 

        }

      }

      { Scope block #438 
        int v;

        { Scope block #439 src/switch_core_media.c:6801 Originating from :  extern int atoi (const char *); 
          const char * __nptr; (unused)

          { Scope block #440 Originating from :#0 

          }

        }

      }

      { Scope block #441 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

      { Scope block #442 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

      }

    }

    { Scope block #443 
      int i;

      { Scope block #444 
        switch_rtp_crypto_key_type_t j;

        { Scope block #445 src/switch_core_media.c:6883 Originating from :  static int _zstr (const char *); 
          const char * s; (unused)

          { Scope block #446 Originating from :#0 

          }

        }

      }

    }

  }

}
switch_core_media_gen_local_sdp (struct switch_core_session_t * session, switch_sdp_type_t sdp_type, const char * ip, switch_port_t port, const char * sr, int force)
{
  const char D.48211;
  int D.48210;
  const char D.48207;
  int D.48206;
  const char D.48203;
  int D.48202;
  const char D.48199;
  int D.48198;
  const char D.48195;
  int D.48194;
  const char D.48188;
  int D.48187;
  const char D.48184;
  int D.48183;
  const char D.48180;
  int D.48179;
  const char D.48176;
  int D.48175;
  const char D.48172;
  int D.48171;
  const char D.48168;
  int D.48167;
  const char D.48164;
  int D.48163;
  const char D.48160;
  int D.48159;
  const char D.48156;
  int D.48155;
  const char D.48152;
  int D.48151;
  const char D.48148;
  int D.48147;
  const char D.48144;
  int D.48143;
  const char D.48140;
  int D.48139;
  const char D.48136;
  int D.48135;
  const char D.48132;
  int D.48131;
  switch_rtp_crypto_key_type_t j;
  int i;
  int v;
  int bw;
  const char * vbw;
  char tmp2[11];
  char tmp1[11];
  int channels;
  uint32_t ianacode;
  char * fmtp;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  const struct switch_codec_implementation_t * imp;
  int already_did[128];
  int i;
  struct payload_map_t * pmap;
  int loops;
  int both;
  char * bp;
  const struct switch_codec_implementation_t * imp;
  int both;
  char * bp;
  const char * mult;
  int cng_type;
  int this_ptime;
  int cur_ptime;
  int i;
  char tmp2[11];
  char tmp1[11];
  char * orig_fmtp;
  switch_payload_t orig_pt;
  const struct switch_codec_implementation_t * imp;
  struct switch_core_session_t * orig_session;
  int i;
  static const char __func__[32] = "switch_core_media_gen_local_sdp";
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_gen_local_sdp";
  int is_outbound;
  struct payload_map_t * pmap;
  int red;
  int vp8;
  struct switch_media_handle_t * smh;
  const char * tmp;
  const char * local_sdp_video_zrtp_hash;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_event_t * ptmap;
  struct switch_event_t * map;
  const char * fmtp_out_var;
  const char * fmtp_out;
  const char * username;
  const char * var_val;
  char srbuf[128];
  const char * append_video;
  const char * append_audio;
  const char * ov_fmtp;
  const char * pass_fmtp;
  const char * family;
  const char * val;
  int use_cng;
  uint32_t v_port;
  uint32_t rate;
  int ptime;
  char * buf;
  struct switch_event_t * ptmap.39;
  uint32_t D.42507;
  uint32_t D.42505;
  size_t D.42504;
  size_t D.42503;
  char * D.42502;
  size_t D.42501;
  char * D.42498;
  size_t D.42497;
  size_t D.42496;
  char * D.42495;
  size_t D.42494;
  char * D.42490;
  switch_rtp_crypto_key_type_t D.42486;
  uint32_t D.42483;
  uint32_t D.42480;
  int D.42477;
  size_t D.42476;
  size_t D.42475;
  char * D.42474;
  size_t D.42473;
  switch_port_t D.42470;
  int D.39675;
  char * D.42464;
  int D.42460;
  int D.42459;
  size_t D.42458;
  size_t D.42457;
  char * D.42456;
  size_t D.42455;
  uint32_t D.42454;
  _Bool D.42452;
  _Bool D.42451;
  int D.42448;
  size_t D.42447;
  size_t D.42446;
  char * D.42445;
  size_t D.42444;
  int D.39666;
  char * D.42433;
  size_t D.42432;
  size_t D.42431;
  char * D.42430;
  size_t D.42429;
  size_t D.42428;
  size_t D.42427;
  char * D.42426;
  size_t D.42425;
  size_t D.42424;
  size_t D.42423;
  char * D.42422;
  size_t D.42421;
  size_t D.42420;
  size_t D.42419;
  char * D.42418;
  size_t D.42417;
  size_t D.42416;
  size_t D.42415;
  char * D.42414;
  size_t D.42413;
  size_t D.42412;
  size_t D.42411;
  char * D.42410;
  size_t D.42409;
  uint32_t D.42408;
  size_t D.42407;
  size_t D.42406;
  char * D.42405;
  size_t D.42404;
  size_t D.42403;
  size_t D.42402;
  char * D.42401;
  size_t D.42400;
  size_t D.42397;
  size_t D.42396;
  char * D.42395;
  size_t D.42394;
  uint32_t D.42391;
  size_t D.42388;
  size_t D.42387;
  char * D.42386;
  size_t D.42385;
  uint8_t D.42378;
  uint8_t D.42374;
  char * iftmp.38;
  uint8_t D.42369;
  char * iftmp.37;
  size_t D.42367;
  size_t D.42366;
  char * D.42365;
  size_t D.42364;
  short unsigned int D.42361;
  short unsigned int D.42360;
  uint32_t D.42359;
  size_t D.42358;
  size_t D.42357;
  char * D.42356;
  size_t D.42355;
  size_t D.42353;
  size_t D.42352;
  char * D.42351;
  size_t D.42350;
  size_t D.42349;
  size_t D.42348;
  char * D.42347;
  size_t D.42346;
  int8_t D.42343;
  char[192] * D.42340;
  size_t D.42339;
  size_t D.42338;
  char * D.42337;
  size_t D.42336;
  char * D.42332;
  uint32_t D.42329;
  uint32_t D.42328;
  size_t D.42324;
  size_t D.42323;
  char * D.42322;
  size_t D.42321;
  int D.42318;
  char * D.42306;
  size_t D.42299;
  size_t D.42298;
  char * D.42297;
  size_t D.42296;
  const uint32_t D.42294;
  size_t D.42293;
  size_t D.42292;
  char * D.42291;
  size_t D.42290;
  int D.42285;
  int D.42282;
  int D.42281;
  const uint8_t D.42280;
  char * const D.42279;
  int D.42274;
  uint32_t D.42269;
  switch_call_direction_t D.42266;
  const switch_codec_type_t D.42263;
  switch_payload_t D.42262;
  const char D.42255;
  unsigned int D.42253;
  size_t D.42252;
  const char D.42249;
  char * iftmp.35;
  size_t D.42246;
  size_t D.42245;
  char * D.42244;
  size_t D.42243;
  uint8_t D.42240;
  uint32_t D.42238;
  char * D.42237;
  int D.42236;
  size_t D.42235;
  size_t D.42234;
  char * D.42233;
  size_t D.42232;
  uint8_t D.42229;
  switch_payload_t D.42226;
  int32_t D.42223;
  size_t D.42222;
  size_t D.42221;
  char * D.42220;
  size_t D.42219;
  const char * D.42209;
  uint32_t D.42205;
  long unsigned int D.42204;
  int D.42203;
  size_t D.42202;
  size_t D.42201;
  char * D.42200;
  size_t D.42199;
  int D.42196;
  int D.42193;
  char * D.42192;
  size_t D.42189;
  size_t D.42188;
  char * D.42187;
  size_t D.42186;
  size_t D.42182;
  size_t D.42181;
  char * D.42180;
  size_t D.42179;
  int D.42176;
  int D.42175;
  signed char D.42172;
  switch_payload_t D.42171;
  uint32_t D.42168;
  switch_call_direction_t D.42165;
  const switch_codec_type_t D.42162;
  uint8_t D.42158;
  int D.42156;
  size_t D.42155;
  size_t D.42154;
  char * D.42153;
  size_t D.42152;
  switch_payload_t D.42149;
  switch_payload_t D.42148;
  int32_t D.42145;
  int D.42144;
  switch_payload_t D.42143;
  struct payload_map_t * D.42142;
  size_t D.42141;
  size_t D.42140;
  char * D.42139;
  size_t D.42138;
  uint8_t D.42135;
  const char * D.42134;
  uint32_t D.42133;
  switch_call_direction_t D.42131;
  uint32_t D.42129;
  int iftmp.34;
  size_t D.42122;
  size_t D.42121;
  char * D.42120;
  size_t D.42119;
  short unsigned int D.42118;
  uint32_t D.42115;
  switch_port_t D.42112;
  uint32_t D.42109;
  switch_port_t D.42106;
  uint32_t D.42103;
  switch_call_direction_t D.42100;
  uint32_t D.42097;
  size_t D.42096;
  size_t D.42095;
  uint32_t D.42092;
  uint32_t D.42090;
  size_t D.42085;
  size_t D.42084;
  size_t D.42083;
  uint32_t D.42082;
  uint32_t D.42081;
  int D.42074;
  int D.42072;
  char * const D.42071;
  const int D.42068;
  const switch_codec_type_t D.42065;
  size_t D.42064;
  size_t D.42063;
  switch_rtp_crypto_mode_t D.42058;
  size_t D.42057;
  struct switch_event_t * map.33;
  uint32_t D.42055;
  uint32_t D.42054;
  uint32_t D.42048;
  uint32_t D.42046;
  int D.42042;
  uint32_t D.42039;
  int32_t D.42030;
  size_t D.42026;
  size_t D.42025;
  char * D.42024;
  size_t D.42023;
  uint32_t D.42020;
  char * D.42016;
  uint32_t D.42013;
  int D.42010;
  size_t D.42009;
  size_t D.42008;
  char * D.42007;
  size_t D.42006;
  int D.39607;
  int D.41995;
  int D.41994;
  size_t D.41993;
  size_t D.41992;
  char * D.41991;
  size_t D.41990;
  uint32_t D.41989;
  _Bool D.41987;
  _Bool D.41986;
  _Bool D.41985;
  int D.41982;
  size_t D.41981;
  size_t D.41980;
  char * D.41979;
  size_t D.41978;
  switch_port_t D.41975;
  int D.39598;
  char * D.41966;
  int D.41965;
  switch_port_t D.41964;
  char * D.41963;
  char * D.41962;
  size_t D.41961;
  size_t D.41960;
  char * D.41959;
  size_t D.41958;
  char * D.41957;
  size_t D.41956;
  size_t D.41955;
  char * D.41954;
  size_t D.41953;
  char * D.41952;
  size_t D.41951;
  size_t D.41950;
  char * D.41949;
  size_t D.41948;
  size_t D.41947;
  size_t D.41946;
  char * D.41945;
  size_t D.41944;
  size_t D.41943;
  size_t D.41942;
  char * D.41941;
  size_t D.41940;
  size_t D.41939;
  size_t D.41938;
  char * D.41937;
  size_t D.41936;
  char * D.41935;
  uint32_t D.41934;
  size_t D.41933;
  size_t D.41932;
  char * D.41931;
  size_t D.41930;
  uint8_t D.41927;
  int D.41926;
  size_t D.41925;
  size_t D.41924;
  char * D.41923;
  size_t D.41922;
  size_t D.41920;
  size_t D.41919;
  char * D.41918;
  size_t D.41917;
  size_t D.41916;
  size_t D.41915;
  char * D.41914;
  size_t D.41913;
  int8_t D.41910;
  char[192] * D.41907;
  size_t D.41906;
  size_t D.41905;
  char * D.41904;
  size_t D.41903;
  char * D.41899;
  size_t D.41898;
  size_t D.41897;
  char * D.41896;
  size_t D.41895;
  size_t D.41891;
  size_t D.41890;
  char * D.41889;
  size_t D.41888;
  size_t D.41885;
  size_t D.41884;
  char * D.41883;
  size_t D.41882;
  const char D.41876;
  unsigned int D.41874;
  size_t D.41873;
  const char D.41870;
  char * iftmp.30;
  size_t D.41867;
  size_t D.41866;
  char * D.41865;
  size_t D.41864;
  size_t D.41859;
  size_t D.41858;
  char * D.41857;
  size_t D.41856;
  size_t D.41852;
  size_t D.41851;
  char * D.41850;
  size_t D.41849;
  int32_t D.41846;
  size_t D.41845;
  size_t D.41844;
  char * D.41843;
  size_t D.41842;
  size_t D.41840;
  size_t D.41839;
  char * D.41838;
  size_t D.41837;
  uint32_t D.41834;
  uint32_t D.41831;
  int32_t D.41829;
  const int D.41825;
  const struct switch_codec_implementation_t * D.41819;
  uint32_t D.41817;
  char * D.41816;
  size_t D.41815;
  size_t D.41814;
  char * D.41813;
  size_t D.41812;
  int32_t D.41807;
  size_t D.41806;
  size_t D.41805;
  char * D.41804;
  size_t D.41803;
  size_t D.41800;
  size_t D.41799;
  char * D.41798;
  size_t D.41797;
  int D.41795;
  switch_payload_t D.41794;
  size_t D.41793;
  size_t D.41792;
  char * D.41791;
  size_t D.41790;
  int D.41787;
  char * D.41786;
  int D.41783;
  size_t D.41782;
  size_t D.41781;
  char * D.41780;
  size_t D.41779;
  size_t D.41778;
  size_t D.41777;
  char * D.41776;
  size_t D.41775;
  int32_t D.41770;
  size_t D.41769;
  size_t D.41768;
  char * D.41767;
  size_t D.41766;
  uint32_t D.41763;
  int32_t D.41761;
  uint8_t D.41757;
  int D.41755;
  size_t D.41754;
  size_t D.41753;
  char * D.41752;
  size_t D.41751;
  switch_payload_t D.41748;
  struct switch_mutex_t * D.41747;
  int32_t D.41744;
  int D.41743;
  switch_payload_t D.41742;
  size_t D.41741;
  size_t D.41740;
  char * D.41739;
  size_t D.41738;
  const char * D.41737;
  switch_rtp_crypto_key_type_t D.41736;
  uint32_t D.41734;
  uint8_t D.41732;
  int iftmp.29;
  int D.41727;
  size_t D.41726;
  size_t D.41725;
  char * D.41724;
  size_t D.41723;
  uint8_t D.41720;
  char * D.41719;
  size_t D.41718;
  size_t D.41717;
  char * D.41716;
  size_t D.41715;
  uint32_t D.41712;
  char * D.41708;
  int D.41703;
  unsigned int D.41700;
  switch_core_media_NDLB_t D.41699;
  uint32_t D.41696;
  int D.41693;
  const char * D.41692;
  uint32_t D.41689;
  unsigned int D.41688;
  unsigned int D.41687;
  unsigned int D.41686;
  time_t D.41685;
  uint32_t D.41682;
  char * D.41673;
  char * D.41664;
  uint32_t D.41655;
  uint32_t D.41653;
  _Bool D.41647;
  _Bool D.41646;
  _Bool D.41645;
  int D.41642;
  uint32_t D.41634;
  int D.41633;
  const int D.41632;
  const uint32_t D.41631;
  uint32_t D.41630;
  unsigned char D.41629;
  char * D.41628;
  char * orig_fmtp.27;
  switch_payload_t orig_pt.26;
  switch_status_t D.41622;
  char * const D.41621;
  switch_media_type_t D.41620;
  const switch_codec_type_t D.41619;
  struct switch_core_session_t * orig_session.25;
  int D.41612;
  _Bool D.41609;
  _Bool D.41608;
  _Bool D.41607;
  switch_payload_t D.41606;
  int32_t D.41603;
  int D.41602;
  int D.41599;
  switch_payload_t D.41596;
  switch_core_media_dtmf_t D.41593;
  switch_payload_t D.41590;
  int D.41587;
  const switch_payload_t D.41586;
  const struct switch_codec_implementation_t * D.41585;
  uint32_t D.41581;
  int D.41578;
  int D.41577;
  int D.41575;
  int32_t D.41572;
  struct payload_map_t * D.41566;
  int D.41565;
  const char * D.41564;
  uint32_t D.41562;
  int D.41557;
  int D.41554;
  int D.41551;
  const char * D.41550;
  uint32_t D.41547;
  uint32_t D.41546;
  uint32_t D.41544;
  int D.41538;
  struct switch_channel_t * D.41535;
  struct switch_core_session_t * D.41534;
  int D.41531;
  const char * D.41530;
  char * D.41527;
  const char * D.41526;
  char * D.41523;
  struct switch_core_media_params_t * D.41522;
  int D.41519;
  const char * D.41518;
  switch_call_direction_t D.41513;
  struct switch_channel_t * D.41512;

<bb 2>:
  # DEBUG ptime => 0
  # DEBUG rate => 0
  # DEBUG use_cng => 1
  D.41512_73 = session_72(D)->channel;
  pass_fmtp_74 = switch_channel_get_variable_dup (D.41512_73, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_74
  D.41512_75 = session_72(D)->channel;
  ov_fmtp_76 = switch_channel_get_variable_dup (D.41512_75, "rtp_force_video_fmtp", 1, -1);
  # DEBUG ov_fmtp => ov_fmtp_76
  D.41512_77 = session_72(D)->channel;
  append_audio_78 = switch_channel_get_variable_dup (D.41512_77, "rtp_append_audio_sdp", 1, -1);
  # DEBUG append_audio => append_audio_78
  D.41512_79 = session_72(D)->channel;
  append_video_80 = switch_channel_get_variable_dup (D.41512_79, "rtp_append_video_sdp", 1, -1);
  # DEBUG append_video => append_video_80
  srbuf = "";
  D.41512_81 = session_72(D)->channel;
  fmtp_out_var_82 = switch_channel_get_variable_dup (D.41512_81, "rtp_force_audio_fmtp", 1, -1);
  # DEBUG fmtp_out_var => fmtp_out_var_82
  map = 0B;
  ptmap = 0B;
  local_sdp_audio_zrtp_hash_83 = switch_core_media_get_zrtp_hash (session_72(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_83
  local_sdp_video_zrtp_hash_84 = switch_core_media_get_zrtp_hash (session_72(D), 1, 1);
  # DEBUG local_sdp_video_zrtp_hash => local_sdp_video_zrtp_hash_84
  # DEBUG vp8 => 0
  # DEBUG red => 0
  D.41512_87 = session_72(D)->channel;
  D.41513_88 = switch_channel_direction (D.41512_87);
  is_outbound_89 = D.41513_88 == 1;
  # DEBUG is_outbound => is_outbound_89
  if (session_72(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6025, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_90 = session_72(D)->media_handle;
  # DEBUG smh => smh_90
  if (smh_90 == 0B)
    goto <bb 449>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#28 => &smh_90->engines
  # DEBUG a_engine => D#28
  # DEBUG D#27 => &smh_90->engines[1]
  # DEBUG v_engine => D#27
  D.41512_93 = session_72(D)->channel;
  D.41518_94 = switch_channel_get_variable_dup (D.41512_93, "rtcp_mux", 1, -1);
  D.41519_95 = switch_true (D.41518_94);
  if (D.41519_95 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux = 1;
  MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux = 1;

<bb 7>:
  D.41522_96 = smh_90->mparams;
  D.41523_97 = D.41522_96->rtcp_audio_interval_msec;
  if (D.41523_97 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.41522_98 = smh_90->mparams;
  D.41512_99 = session_72(D)->channel;
  D.41526_100 = switch_channel_get_variable_dup (D.41512_99, "rtcp_audio_interval_msec", 1, -1);
  D.41522_98->rtcp_audio_interval_msec = D.41526_100;

<bb 9>:
  D.41522_101 = smh_90->mparams;
  D.41527_102 = D.41522_101->rtcp_video_interval_msec;
  if (D.41527_102 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  D.41522_103 = smh_90->mparams;
  D.41512_104 = session_72(D)->channel;
  D.41530_105 = switch_channel_get_variable_dup (D.41512_104, "rtcp_video_interval_msec", 1, -1);
  D.41522_103->rtcp_video_interval_msec = D.41530_105;

<bb 11>:
  D.41531_106 = dtls_ok (session_72(D));
  if (D.41531_106 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  D.41534_107 = smh_90->session;
  D.41535_108 = D.41534_107->channel;
  tmp_109 = switch_channel_get_variable_dup (D.41535_108, "webrtc_enable_dtls", 1, -1);
  # DEBUG tmp => tmp_109
  if (tmp_109 != 0B)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41538_110 = switch_false (tmp_109);
  if (D.41538_110 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41534_111 = smh_90->session;
  D.41535_112 = D.41534_111->channel;
  switch_channel_clear_flag (D.41535_112, 111);
  D.41534_113 = smh_90->session;
  D.41535_114 = D.41534_113->channel;
  switch_channel_clear_flag (D.41535_114, 109);

<bb 15>:
  if (is_outbound_89 != 0)
    goto <bb 18>;
  else
    goto <bb 16>;

<bb 16>:
  D.41512_115 = session_72(D)->channel;
  D.41544_116 = switch_channel_test_flag (D.41512_115, 84);
  if (D.41544_116 != 0)
    goto <bb 18>;
  else
    goto <bb 17>;

<bb 17>:
  D.41512_117 = session_72(D)->channel;
  D.41546_118 = switch_channel_test_flag (D.41512_117, 112);
  if (D.41546_118 != 0)
    goto <bb 18>;
  else
    goto <bb 27>;

<bb 18>:
  D.41512_119 = session_72(D)->channel;
  D.41547_120 = switch_channel_test_flag (D.41512_119, 106);
  if (D.41547_120 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;

<bb 19>:
  D.41512_121 = session_72(D)->channel;
  D.41550_122 = switch_channel_get_variable_dup (D.41512_121, "media_webrtc", 1, -1);
  D.41551_123 = switch_true (D.41550_122);
  if (D.41551_123 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41512_124 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_124, 106, 1);
  D.41512_125 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_125, 108, 1);
  D.41522_126 = smh_90->mparams;
  D.41522_126->rtcp_audio_interval_msec = "5000";
  D.41522_127 = smh_90->mparams;
  D.41522_127->rtcp_video_interval_msec = "5000";

<bb 21>:
  D.41554_128 = switch_rtp_has_dtls ();
  if (D.41554_128 != 0)
    goto <bb 22>;
  else
    goto <bb 26>;

<bb 22>:
  D.41557_129 = dtls_ok (session_72(D));
  if (D.41557_129 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

<bb 23>:
  D.41512_130 = session_72(D)->channel;
  D.41562_131 = switch_channel_test_flag (D.41512_130, 106);
  if (D.41562_131 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;

<bb 24>:
  D.41534_132 = smh_90->session;
  D.41535_133 = D.41534_132->channel;
  D.41564_134 = switch_channel_get_variable_dup (D.41535_133, "rtp_use_dtls", 1, -1);
  D.41565_135 = switch_true (D.41564_134);
  if (D.41565_135 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

<bb 25>:
  D.41534_136 = smh_90->session;
  D.41535_137 = D.41534_136->channel;
  switch_channel_set_flag_value (D.41535_137, 109, 1);
  D.41534_138 = smh_90->session;
  D.41535_139 = D.41534_138->channel;
  switch_channel_set_flag_value (D.41535_139, 92, 1);
  generate_local_fingerprint (smh_90, 0);

<bb 26>:
  switch_core_session_parse_crypto_prefs (session_72(D));
  switch_core_session_check_outgoing_crypto (session_72(D));

<bb 27>:
  D.41566_140 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  fmtp_out_141 = D.41566_140->fmtp_out;
  # DEBUG fmtp_out => fmtp_out_141
  D.41522_142 = smh_90->mparams;
  username_143 = D.41522_142->sdp_username;
  # DEBUG username => username_143
  buf_144 = calloc (1, 65536);
  # DEBUG buf => buf_144
  if (buf_144 == 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  __assert_fail ("(buf = calloc(1, (65536)))", "src/switch_core_media.c", 6078, &__PRETTY_FUNCTION__);

<bb 29>:
  switch_core_media_check_dtmf_type (session_72(D));
  D.41572_145 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41572_145 != 0)
    goto <bb 34>;
  else
    goto <bb 30>;

<bb 30>:
  D.41512_146 = session_72(D)->channel;
  val_147 = switch_channel_get_variable_dup (D.41512_146, "supress_cng", 1, -1);
  # DEBUG val => val_147
  if (val_147 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

<bb 31>:
  D.41575_148 = switch_true (val_147);
  if (D.41575_148 != 0)
    goto <bb 34>;
  else
    goto <bb 32>;

<bb 32>:
  D.41512_149 = session_72(D)->channel;
  val_150 = switch_channel_get_variable_dup (D.41512_149, "suppress_cng", 1, -1);
  # DEBUG val => val_150
  if (val_150 != 0B)
    goto <bb 33>;
  else
    goto <bb 35>;

<bb 33>:
  D.41577_151 = switch_true (val_150);
  if (D.41577_151 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:
  # DEBUG use_cng => 0
  D.41522_153 = smh_90->mparams;
  D.41522_153->cng_pt = 0;

<bb 35>:
  # use_cng_17 = PHI <1(32), 1(33), 0(34)>
  # DEBUG use_cng => use_cng_17
  D.41578_154 = smh_90->payload_space;
  if (D.41578_154 == 0)
    goto <bb 36>;
  else
    goto <bb 62>;

<bb 36>:
  D.41512_155 = session_72(D)->channel;
  D.41581_156 = switch_channel_test_flag (D.41512_155, 106);
  if (D.41581_156 != 0)
    goto <bb 37>;
  else
    goto <bb 39>;

<bb 37>:
  smh_90->payload_space = 102;

<bb 38>:
  # i_1577 = PHI <0(39), 0(37)>
  goto <bb 41>;

<bb 39>:
  smh_90->payload_space = 98;
  goto <bb 38>;

<bb 40>:
  D.41585_160 = smh_90->codecs[i_36];
  D.41586_161 = D.41585_160->ianacode;
  smh_90->ianacodes[i_36] = D.41586_161;
  i_162 = i_36 + 1;
  # DEBUG i => i_162

<bb 41>:
  # i_36 = PHI <i_1577(38), i_162(40)>
  # DEBUG i => i_36
  D.41522_158 = smh_90->mparams;
  D.41587_159 = D.41522_158->num_codecs;
  if (D.41587_159 > i_36)
    goto <bb 40>;
  else
    goto <bb 42>;

<bb 42>:
  if (sdp_type_163(D) == 0)
    goto <bb 43>;
  else
    goto <bb 62>;

<bb 43>:
  orig_session = 0B;
  switch_core_session_perform_get_partner (session_72(D), &orig_session, "src/switch_core_media.c", &__func__, 6108);
  # DEBUG i => 0
  goto <bb 59>;

<bb 44>:
  imp_167 = smh_90->codecs[i_37];
  # DEBUG imp => imp_167
  orig_pt = 0;
  orig_fmtp = 0B;
  D.41590_168 = smh_90->ianacodes[i_37];
  if (D.41590_168 > 64)
    goto <bb 45>;
  else
    goto <bb 58>;

<bb 45>:
  D.41522_169 = smh_90->mparams;
  D.41593_170 = D.41522_169->dtmf_type;
  if (D.41593_170 == 0)
    goto <bb 46>;
  else
    goto <bb 49>;

<bb 46>:
  D.41522_171 = smh_90->mparams;
  D.41596_172 = D.41522_171->te;
  if (D.41596_172 > 95)
    goto <bb 47>;
  else
    goto <bb 49>;

<bb 47>:
  D.41522_173 = smh_90->mparams;
  D.41596_174 = D.41522_173->te;
  D.41599_175 = (int) D.41596_174;
  D.41578_176 = smh_90->payload_space;
  if (D.41599_175 == D.41578_176)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:
  D.41578_177 = smh_90->payload_space;
  D.41602_178 = D.41578_177 + 1;
  smh_90->payload_space = D.41602_178;

<bb 49>:
  D.41603_179 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41603_179 == 0)
    goto <bb 50>;
  else
    goto <bb 53>;

<bb 50>:
  D.41522_180 = smh_90->mparams;
  D.41606_181 = D.41522_180->cng_pt;
  D.41607_182 = D.41606_181 != 0;
  D.41608_183 = use_cng_17 != 0;
  D.41609_184 = D.41607_182 && D.41608_183;
  if (D.41609_184 != 0)
    goto <bb 51>;
  else
    goto <bb 53>;

<bb 51>:
  D.41522_185 = smh_90->mparams;
  D.41606_186 = D.41522_185->cng_pt;
  D.41612_187 = (int) D.41606_186;
  D.41578_188 = smh_90->payload_space;
  if (D.41612_187 == D.41578_188)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:
  D.41578_189 = smh_90->payload_space;
  D.41602_190 = D.41578_189 + 1;
  smh_90->payload_space = D.41602_190;

<bb 53>:
  orig_session.25_191 = orig_session;
  if (orig_session.25_191 != 0B)
    goto <bb 54>;
  else
    goto <bb 57>;

<bb 54>:
  orig_session.25_192 = orig_session;
  D.41619_193 = imp_167->codec_type;
  D.41620_194 = D.41619_193 != 0;
  D.41621_195 = imp_167->iananame;
  D.41622_196 = switch_core_session_get_payload_code (orig_session.25_192, D.41620_194, D.41621_195, &orig_pt, 0B, &orig_fmtp);
  if (D.41622_196 == 0)
    goto <bb 55>;
  else
    goto <bb 57>;

<bb 55>:
  orig_pt.26_197 = orig_pt;
  smh_90->ianacodes[i_37] = orig_pt.26_197;
  orig_fmtp.27_198 = orig_fmtp;
  if (orig_fmtp.27_198 != 0B)
    goto <bb 56>;
  else
    goto <bb 58>;

<bb 56>:
  orig_fmtp.27_199 = orig_fmtp;
  D.41628_200 = switch_core_perform_session_strdup (session_72(D), orig_fmtp.27_199, "src/switch_core_media.c", &__func__, 6133);
  smh_90->fmtps[i_37] = D.41628_200;
  goto <bb 58>;

<bb 57>:
  D.41578_201 = smh_90->payload_space;
  D.41629_202 = (unsigned char) D.41578_201;
  smh_90->ianacodes[i_37] = D.41629_202;
  D.41602_203 = D.41578_201 + 1;
  smh_90->payload_space = D.41602_203;

<bb 58>:
  D.41619_204 = imp_167->codec_type;
  D.41620_205 = D.41619_204 != 0;
  D.41621_206 = imp_167->iananame;
  D.41590_207 = smh_90->ianacodes[i_37];
  D.41630_208 = (uint32_t) D.41590_207;
  D.41631_209 = imp_167->samples_per_second;
  D.41632_210 = imp_167->microseconds_per_packet;
  D.41633_211 = D.41632_210 / 1000;
  D.41634_212 = (uint32_t) D.41633_211;
  switch_core_media_add_payload_map (session_72(D), D.41620_205, D.41621_206, 0B, sdp_type_163(D), D.41630_208, D.41631_209, D.41634_212, 0);
  i_213 = i_37 + 1;
  # DEBUG i => i_213

<bb 59>:
  # i_37 = PHI <0(43), i_213(58)>
  # DEBUG i => i_37
  D.41522_165 = smh_90->mparams;
  D.41587_166 = D.41522_165->num_codecs;
  if (D.41587_166 > i_37)
    goto <bb 44>;
  else
    goto <bb 60>;

<bb 60>:
  orig_session.25_214 = orig_session;
  if (orig_session.25_214 != 0B)
    goto <bb 61>;
  else
    goto <bb 62>;

<bb 61>:
  orig_session.25_215 = orig_session;
  switch_core_session_rwunlock (orig_session.25_215);

<bb 62>:
  if (fmtp_out_var_82 != 0B)
    goto <bb 63>;
  else
    goto <bb 64>;

<bb 63>:
  # DEBUG fmtp_out => fmtp_out_var_82

<bb 64>:
  # fmtp_out_21 = PHI <fmtp_out_141(62), fmtp_out_var_82(63)>
  # DEBUG fmtp_out => fmtp_out_21
  D.41512_217 = session_72(D)->channel;
  val_218 = switch_channel_get_variable_dup (D.41512_217, "verbose_sdp", 1, -1);
  # DEBUG val => val_218
  if (val_218 == 0B)
    goto <bb 66>;
  else
    goto <bb 65>;

<bb 65>:
  D.41642_219 = switch_true (val_218);
  if (D.41642_219 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

<bb 66>:
  D.41512_220 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_220, 110, 1);

<bb 67>:
  D.41645_222 = force_221(D) == 0;
  D.41646_224 = ip_223(D) == 0B;
  D.41647_225 = D.41645_222 && D.41646_224;
  if (D.41647_225 != 0)
    goto <bb 68>;
  else
    goto <bb 76>;

<bb 68>:
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 71>;
  else
    goto <bb 69>;

<bb 69>:
  D.48132_1516 = *sr_226(D);
  if (D.48132_1516 == 0)
    goto <bb 71>;
  else
    goto <bb 70>;

<bb 70>:

<bb 71>:
  # D.48131_1517 = PHI <1(68), 1(69), 0(70)>
  if (D.48131_1517 != 0)
    goto <bb 72>;
  else
    goto <bb 76>;

<bb 72>:
  D.41512_228 = session_72(D)->channel;
  D.41653_229 = switch_channel_test_flag (D.41512_228, 15);
  if (D.41653_229 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;

<bb 73>:
  D.41512_230 = session_72(D)->channel;
  D.41655_231 = switch_channel_test_flag (D.41512_230, 29);
  if (D.41655_231 != 0)
    goto <bb 74>;
  else
    goto <bb 76>;

<bb 74>:
  if (buf_144 != 0B)
    goto <bb 75>;
  else
    goto <bb 449>;

<bb 75>:
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;

<bb 76>:
  if (ip_223(D) == 0B)
    goto <bb 77>;
  else
    goto <bb 79>;

<bb 77>:
  ip_233 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_ip;
  # DEBUG ip => ip_233
  if (ip_233 == 0B)
    goto <bb 78>;
  else
    goto <bb 79>;

<bb 78>:
  ip_234 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_ip;
  # DEBUG ip => ip_234

<bb 79>:
  # ip_1 = PHI <ip_223(D)(76), ip_233(77), ip_234(78)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.41512_235 = session_72(D)->channel;
  D.41664_236 = switch_channel_get_name (D.41512_235);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6182, 0B, 2, "%s NO IP!\n", D.41664_236);
  if (buf_144 != 0B)
    goto <bb 81>;
  else
    goto <bb 449>;

<bb 81>:
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;

<bb 82>:
  if (port_238(D) == 0)
    goto <bb 83>;
  else
    goto <bb 85>;

<bb 83>:
  port_239 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].adv_sdp_port;
  # DEBUG port => port_239
  if (port_239 == 0)
    goto <bb 84>;
  else
    goto <bb 85>;

<bb 84>:
  port_240 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].proxy_sdp_port;
  # DEBUG port => port_240

<bb 85>:
  # port_2 = PHI <port_238(D)(82), port_239(83), port_240(84)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 86>;
  else
    goto <bb 88>;

<bb 86>:
  D.41512_241 = session_72(D)->channel;
  D.41673_242 = switch_channel_get_name (D.41512_241);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 6194, 0B, 2, "%s NO PORT!\n", D.41673_242);
  if (buf_144 != 0B)
    goto <bb 87>;
  else
    goto <bb 449>;

<bb 87>:
  free (buf_144);
  # DEBUG buf => 0B
  goto <bb 449>;

<bb 88>:
  # DEBUG s => sr_226(D)
  if (sr_226(D) == 0B)
    goto <bb 91>;
  else
    goto <bb 89>;

<bb 89>:
  D.48136_1518 = *sr_226(D);
  if (D.48136_1518 == 0)
    goto <bb 91>;
  else
    goto <bb 90>;

<bb 90>:

<bb 91>:
  # D.48135_1519 = PHI <1(88), 1(89), 0(90)>
  if (D.48135_1519 != 0)
    goto <bb 92>;
  else
    goto <bb 94>;

<bb 92>:
  D.41512_245 = session_72(D)->channel;
  var_val_246 = switch_channel_get_variable_dup (D.41512_245, "media_audio_mode", 1, -1);
  # DEBUG var_val => var_val_246
  if (var_val_246 != 0B)
    goto <bb 93>;
  else
    goto <bb 94>;

<bb 93>:
  # DEBUG sr => var_val_246

<bb 94>:
  # sr_3 = PHI <sr_226(D)(91), var_val_246(93), "sendrecv"(92)>
  # DEBUG sr => sr_3
  D.41682_249 = smh_90->owner_id;
  if (D.41682_249 == 0)
    goto <bb 95>;
  else
    goto <bb 96>;

<bb 95>:
  D.41685_250 = switch_epoch_time_now (0B);
  D.41686_251 = (unsigned int) D.41685_250;
  D.41687_252 = (unsigned int) port_2;
  D.41688_253 = D.41686_251 - D.41687_252;
  smh_90->owner_id = D.41688_253;

<bb 96>:
  D.41689_254 = smh_90->session_id;
  if (D.41689_254 == 0)
    goto <bb 97>;
  else
    goto <bb 98>;

<bb 97>:
  D.41682_255 = smh_90->owner_id;
  smh_90->session_id = D.41682_255;

<bb 98>:
  D.41512_256 = session_72(D)->channel;
  D.41692_257 = switch_channel_get_variable_dup (D.41512_256, "drop_dtmf", 0, -1);
  D.41693_258 = switch_true (D.41692_257);
  if (D.41693_258 != 0)
    goto <bb 99>;
  else
    goto <bb 100>;

<bb 99>:
  D.41512_259 = session_72(D)->channel;
  switch_channel_set_flag_value (D.41512_259, 102, 1);

<bb 100>:
  D.41689_260 = smh_90->session_id;
  D.41696_261 = D.41689_260 + 1;
  smh_90->session_id = D.41696_261;
  D.41522_262 = smh_90->mparams;
  D.41699_263 = D.41522_262->ndlb;
  D.41700_264 = D.41699_263 & 16;
  if (D.41700_264 != 0)
    goto <bb 103>;
  else
    goto <bb 101>;

<bb 101>:
  D.41512_265 = session_72(D)->channel;
  var_val_266 = switch_channel_get_variable_dup (D.41512_265, "ndlb_sendrecv_in_session", 1, -1);
  # DEBUG var_val => var_val_266
  if (var_val_266 != 0B)
    goto <bb 102>;
  else
    goto <bb 108>;

<bb 102>:
  D.41703_267 = switch_true (var_val_266);
  if (D.41703_267 != 0)
    goto <bb 103>;
  else
    goto <bb 108>;

<bb 103>:
  # DEBUG s => sr_3
  if (sr_3 == 0B)
    goto <bb 106>;
  else
    goto <bb 104>;

<bb 104>:
  D.48140_1520 = *sr_3;
  if (D.48140_1520 == 0)
    goto <bb 106>;
  else
    goto <bb 105>;

<bb 105>:

<bb 106>:
  # D.48139_1521 = PHI <1(103), 1(104), 0(105)>
  if (D.48139_1521 == 0)
    goto <bb 107>;
  else
    goto <bb 108>;

<bb 107>:
  switch_snprintf (&srbuf, 128, "a=%s\n", sr_3);

<bb 108>:
  # sr_4 = PHI <sr_3(101), sr_3(102), 0B(107), 0B(106)>
  # DEBUG sr => sr_4
  D.41708_270 = __builtin_strchr (ip_1, 58);
  if (D.41708_270 != 0B)
    goto <bb 110>;
  else
    goto <bb 109>;

<bb 109>:

<bb 110>:
  # family_59 = PHI <"IP6"(108), "IP4"(109)>
  # DEBUG family => family_59
  D.41682_274 = smh_90->owner_id;
  D.41689_275 = smh_90->session_id;
  switch_snprintf (buf_144, 65536, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n%s", username_143, D.41682_274, D.41689_275, family_59, ip_1, username_143, family_59, ip_1, &srbuf);
  D.41534_276 = smh_90->session;
  D.41535_277 = D.41534_276->channel;
  D.41712_278 = switch_channel_test_flag (D.41535_277, 108);
  if (D.41712_278 != 0)
    goto <bb 111>;
  else
    goto <bb 112>;

<bb 111>:
  gen_ice (session_72(D), 0, ip_1, port_2);
  D.41715_279 = strlen (buf_144);
  D.41716_280 = buf_144 + D.41715_279;
  D.41717_281 = strlen (buf_144);
  D.41718_282 = 65536 - D.41717_281;
  D.41719_283 = smh_90->msid;
  switch_snprintf (D.41716_280, D.41718_282, "a=msid-semantic: WMS %s\n", D.41719_283);

<bb 112>:
  D.41720_284 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_284 != 0)
    goto <bb 113>;
  else
    goto <bb 219>;

<bb 113>:
  D.41723_285 = strlen (buf_144);
  D.41724_286 = buf_144 + D.41723_285;
  D.41725_287 = strlen (buf_144);
  D.41726_288 = 65536 - D.41725_287;
  D.41727_289 = (int) port_2;
  D.41732_290 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_290 == 0)
    goto <bb 114>;
  else
    goto <bb 117>;

<bb 114>:
  D.41512_291 = session_72(D)->channel;
  D.41734_292 = switch_channel_test_flag (D.41512_291, 109);
  if (D.41734_292 != 0)
    goto <bb 117>;
  else
    goto <bb 115>;

<bb 115>:
  D.41736_293 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_293 != 9)
    goto <bb 117>;
  else
    goto <bb 116>;

<bb 116>:

<bb 117>:
  # iftmp.29_60 = PHI <1(115), 0(116), 1(114), 0(113)>
  D.41737_296 = get_media_profile_name (session_72(D), iftmp.29_60);
  switch_snprintf (D.41724_286, D.41726_288, "m=audio %d %s", D.41727_289, D.41737_296);
  D.41738_297 = strlen (buf_144);
  D.41739_298 = buf_144 + D.41738_297;
  D.41740_299 = strlen (buf_144);
  D.41741_300 = 65536 - D.41740_299;
  D.41566_301 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_302 = D.41566_301->pt;
  D.41743_303 = (int) D.41742_302;
  switch_snprintf (D.41739_298, D.41741_300, " %d", D.41743_303);
  D.41744_304 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41744_304 != 0)
    goto <bb 118>;
  else
    goto <bb 125>;

<bb 118>:
  D.41747_305 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_305);
  pmap_306 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  # DEBUG pmap => pmap_306
  goto <bb 122>;

<bb 119>:
  D.41748_308 = pmap_34->pt;
  D.41566_309 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_310 = D.41566_309->pt;
  if (D.41748_308 != D.41742_310)
    goto <bb 120>;
  else
    goto <bb 121>;

<bb 120>:
  D.41751_311 = strlen (buf_144);
  D.41752_312 = buf_144 + D.41751_311;
  D.41753_313 = strlen (buf_144);
  D.41754_314 = 65536 - D.41753_313;
  D.41748_315 = pmap_34->pt;
  D.41755_316 = (int) D.41748_315;
  switch_snprintf (D.41752_312, D.41754_314, " %d", D.41755_316);

<bb 121>:
  pmap_317 = pmap_34->next;
  # DEBUG pmap => pmap_317

<bb 122>:
  # pmap_34 = PHI <pmap_306(118), pmap_317(121)>
  # DEBUG pmap => pmap_34
  if (pmap_34 != 0B)
    goto <bb 123>;
  else
    goto <bb 124>;

<bb 123>:
  D.41757_307 = pmap_34->allocated;
  if (D.41757_307 != 0)
    goto <bb 119>;
  else
    goto <bb 124>;

<bb 124>:
  D.41747_318 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_318);

<bb 125>:
  D.41522_319 = smh_90->mparams;
  D.41593_320 = D.41522_319->dtmf_type;
  if (D.41593_320 == 0)
    goto <bb 128>;
  else
    goto <bb 126>;

<bb 126>:
  D.41761_321 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41761_321 != 0)
    goto <bb 128>;
  else
    goto <bb 127>;

<bb 127>:
  D.41512_322 = session_72(D)->channel;
  D.41763_323 = switch_channel_test_flag (D.41512_322, 93);
  if (D.41763_323 != 0)
    goto <bb 128>;
  else
    goto <bb 130>;

<bb 128>:
  D.41522_324 = smh_90->mparams;
  D.41596_325 = D.41522_324->te;
  if (D.41596_325 > 95)
    goto <bb 129>;
  else
    goto <bb 130>;

<bb 129>:
  D.41766_326 = strlen (buf_144);
  D.41767_327 = buf_144 + D.41766_326;
  D.41768_328 = strlen (buf_144);
  D.41769_329 = 65536 - D.41768_328;
  D.41522_330 = smh_90->mparams;
  D.41596_331 = D.41522_330->te;
  D.41599_332 = (int) D.41596_331;
  switch_snprintf (D.41767_327, D.41769_329, " %d", D.41599_332);

<bb 130>:
  D.41770_333 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41770_333 == 0)
    goto <bb 131>;
  else
    goto <bb 133>;

<bb 131>:
  D.41522_334 = smh_90->mparams;
  D.41606_335 = D.41522_334->cng_pt;
  D.41607_336 = D.41606_335 != 0;
  D.41608_337 = use_cng_17 != 0;
  D.41609_338 = D.41607_336 && D.41608_337;
  if (D.41609_338 != 0)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  D.41775_339 = strlen (buf_144);
  D.41776_340 = buf_144 + D.41775_339;
  D.41777_341 = strlen (buf_144);
  D.41778_342 = 65536 - D.41777_341;
  D.41522_343 = smh_90->mparams;
  D.41606_344 = D.41522_343->cng_pt;
  D.41612_345 = (int) D.41606_344;
  switch_snprintf (D.41776_340, D.41778_342, " %d", D.41612_345);

<bb 133>:
  D.41779_346 = strlen (buf_144);
  D.41780_347 = buf_144 + D.41779_346;
  D.41781_348 = strlen (buf_144);
  D.41782_349 = 65536 - D.41781_348;
  switch_snprintf (D.41780_347, D.41782_349, "\n");
  D.41566_350 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  rate_351 = D.41566_350->adv_rm_rate;
  # DEBUG rate => rate_351
  D.41566_352 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_353 = D.41566_352->adv_channels;
  if (D.41783_353 == 0)
    goto <bb 134>;
  else
    goto <bb 135>;

<bb 134>:
  D.41566_355 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_356 = D.41566_355->rm_encoding;
  D.41787_357 = get_channels (D.41786_356, 1);
  D.41566_355->adv_channels = D.41787_357;

<bb 135>:
  D.41566_358 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_359 = D.41566_358->adv_channels;
  if (D.41783_359 > 1)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  D.41790_360 = strlen (buf_144);
  D.41791_361 = buf_144 + D.41790_360;
  D.41792_362 = strlen (buf_144);
  D.41793_363 = 65536 - D.41792_362;
  D.41566_364 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_365 = D.41566_364->agreed_pt;
  D.41795_366 = (int) D.41794_365;
  D.41566_367 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_368 = D.41566_367->rm_encoding;
  D.41566_369 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41783_370 = D.41566_369->adv_channels;
  switch_snprintf (D.41791_361, D.41793_363, "a=rtpmap:%d %s/%d/%d\n", D.41795_366, D.41786_368, rate_351, D.41783_370);
  goto <bb 138>;

<bb 137>:
  D.41797_371 = strlen (buf_144);
  D.41798_372 = buf_144 + D.41797_371;
  D.41799_373 = strlen (buf_144);
  D.41800_374 = 65536 - D.41799_373;
  D.41566_375 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_376 = D.41566_375->agreed_pt;
  D.41795_377 = (int) D.41794_376;
  D.41566_378 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41786_379 = D.41566_378->rm_encoding;
  switch_snprintf (D.41798_372, D.41800_374, "a=rtpmap:%d %s/%d\n", D.41795_377, D.41786_379, rate_351);

<bb 138>:
  if (fmtp_out_21 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;

<bb 139>:
  D.41803_380 = strlen (buf_144);
  D.41804_381 = buf_144 + D.41803_380;
  D.41805_382 = strlen (buf_144);
  D.41806_383 = 65536 - D.41805_382;
  D.41566_384 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41794_385 = D.41566_384->agreed_pt;
  D.41795_386 = (int) D.41794_385;
  switch_snprintf (D.41804_381, D.41806_383, "a=fmtp:%d %s\n", D.41795_386, fmtp_out_21);

<bb 140>:
  D.41807_387 = switch_media_handle_test_media_flag (smh_90, 15);
  if (D.41807_387 != 0)
    goto <bb 141>;
  else
    goto <bb 148>;

<bb 141>:
  D.41747_388 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_388);
  pmap_389 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  # DEBUG pmap => pmap_389
  goto <bb 145>;

<bb 142>:
  D.41748_391 = pmap_35->pt;
  D.41566_392 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].cur_payload_map;
  D.41742_393 = D.41566_392->pt;
  if (D.41748_391 != D.41742_393)
    goto <bb 143>;
  else
    goto <bb 144>;

<bb 143>:
  D.41812_394 = strlen (buf_144);
  D.41813_395 = buf_144 + D.41812_394;
  D.41814_396 = strlen (buf_144);
  D.41815_397 = 65536 - D.41814_396;
  D.41748_398 = pmap_35->pt;
  D.41755_399 = (int) D.41748_398;
  D.41816_400 = pmap_35->iananame;
  D.41817_401 = pmap_35->rate;
  switch_snprintf (D.41813_395, D.41815_397, "a=rtpmap:%d %s/%ld\n", D.41755_399, D.41816_400, D.41817_401);

<bb 144>:
  pmap_402 = pmap_35->next;
  # DEBUG pmap => pmap_402

<bb 145>:
  # pmap_35 = PHI <pmap_389(141), pmap_402(144)>
  # DEBUG pmap => pmap_35
  if (pmap_35 != 0B)
    goto <bb 146>;
  else
    goto <bb 147>;

<bb 146>:
  D.41757_390 = pmap_35->allocated;
  if (D.41757_390 != 0)
    goto <bb 142>;
  else
    goto <bb 147>;

<bb 147>:
  D.41747_403 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_403);

<bb 148>:
  D.41819_404 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
  if (D.41819_404 != 0B)
    goto <bb 149>;
  else
    goto <bb 150>;

<bb 149>:
  D.41819_408 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].read_codec.implementation;
  D.41825_409 = D.41819_408->microseconds_per_packet;
  ptime_410 = D.41825_409 / 1000;
  # DEBUG ptime => ptime_410

<bb 150>:
  # ptime_5 = PHI <0(148), ptime_410(149)>
  # DEBUG ptime => ptime_5
  D.41522_411 = smh_90->mparams;
  D.41593_412 = D.41522_411->dtmf_type;
  if (D.41593_412 == 0)
    goto <bb 153>;
  else
    goto <bb 151>;

<bb 151>:
  D.41829_413 = switch_media_handle_test_media_flag (smh_90, 8);
  if (D.41829_413 != 0)
    goto <bb 153>;
  else
    goto <bb 152>;

<bb 152>:
  D.41512_414 = session_72(D)->channel;
  D.41831_415 = switch_channel_test_flag (D.41512_414, 93);
  if (D.41831_415 != 0)
    goto <bb 153>;
  else
    goto <bb 157>;

<bb 153>:
  D.41522_416 = smh_90->mparams;
  D.41596_417 = D.41522_416->te;
  if (D.41596_417 > 95)
    goto <bb 154>;
  else
    goto <bb 157>;

<bb 154>:
  D.41512_418 = session_72(D)->channel;
  D.41834_419 = switch_channel_test_flag (D.41512_418, 106);
  if (D.41834_419 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;

<bb 155>:
  D.41837_420 = strlen (buf_144);
  D.41838_421 = buf_144 + D.41837_420;
  D.41839_422 = strlen (buf_144);
  D.41840_423 = 65536 - D.41839_422;
  D.41522_424 = smh_90->mparams;
  D.41596_425 = D.41522_424->te;
  D.41599_426 = (int) D.41596_425;
  switch_snprintf (D.41838_421, D.41840_423, "a=rtpmap:%d telephone-event/8000\n", D.41599_426);
  goto <bb 157>;

<bb 156>:
  D.41842_427 = strlen (buf_144);
  D.41843_428 = buf_144 + D.41842_427;
  D.41844_429 = strlen (buf_144);
  D.41845_430 = 65536 - D.41844_429;
  D.41522_434 = smh_90->mparams;
  D.41596_435 = D.41522_434->te;
  D.41599_436 = (int) D.41596_435;
  switch_snprintf (D.41843_428, D.41845_430, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.41599_436, D.41599_436);

<bb 157>:
  D.41846_437 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.41846_437 != 0)
    goto <bb 158>;
  else
    goto <bb 159>;

<bb 158>:
  D.41849_438 = strlen (buf_144);
  D.41850_439 = buf_144 + D.41849_438;
  D.41851_440 = strlen (buf_144);
  D.41852_441 = 65536 - D.41851_440;
  switch_snprintf (D.41850_439, D.41852_441, "a=silenceSupp:off - - - -\n");
  goto <bb 162>;

<bb 159>:
  D.41522_442 = smh_90->mparams;
  D.41606_443 = D.41522_442->cng_pt;
  D.41607_444 = D.41606_443 != 0;
  D.41608_445 = use_cng_17 != 0;
  D.41609_446 = D.41607_444 && D.41608_445;
  if (D.41609_446 != 0)
    goto <bb 160>;
  else
    goto <bb 162>;

<bb 160>:
  D.41856_447 = strlen (buf_144);
  D.41857_448 = buf_144 + D.41856_447;
  D.41858_449 = strlen (buf_144);
  D.41859_450 = 65536 - D.41858_449;
  D.41522_451 = smh_90->mparams;
  D.41606_452 = D.41522_451->cng_pt;
  D.41612_453 = (int) D.41606_452;
  switch_snprintf (D.41857_448, D.41859_450, "a=rtpmap:%d CN/8000\n", D.41612_453);
  D.41720_454 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_454 == 0)
    goto <bb 161>;
  else
    goto <bb 162>;

<bb 161>:
  D.41522_455 = smh_90->mparams;
  D.41522_455->cng_pt = 0;

<bb 162>:
  if (append_audio_78 != 0B)
    goto <bb 163>;
  else
    goto <bb 168>;

<bb 163>:
  D.41864_456 = strlen (buf_144);
  D.41865_457 = buf_144 + D.41864_456;
  D.41866_458 = strlen (buf_144);
  D.41867_459 = 65536 - D.41866_458;
  D.41870_460 = *append_audio_78;
  if (D.41870_460 != 0)
    goto <bb 164>;
  else
    goto <bb 165>;

<bb 164>:
  D.41873_461 = strlen (append_audio_78);
  D.41874_462 = D.41873_461 + -1;
  append_audio_463 = append_audio_78 + D.41874_462;

<bb 165>:
  # append_audio_62 = PHI <append_audio_463(164), append_audio_78(163)>
  D.41876_465 = *append_audio_62;
  if (D.41876_465 == 10)
    goto <bb 167>;
  else
    goto <bb 166>;

<bb 166>:

<bb 167>:
  # iftmp.30_61 = PHI <""(165), "\n"(166)>
  switch_snprintf (D.41865_457, D.41867_459, "%s%s", append_audio_78, iftmp.30_61);

<bb 168>:
  if (ptime_5 != 0)
    goto <bb 169>;
  else
    goto <bb 170>;

<bb 169>:
  D.41882_468 = strlen (buf_144);
  D.41883_469 = buf_144 + D.41882_468;
  D.41884_470 = strlen (buf_144);
  D.41885_471 = 65536 - D.41884_470;
  switch_snprintf (D.41883_469, D.41885_471, "a=ptime:%d\n", ptime_5);

<bb 170>:
  if (local_sdp_audio_zrtp_hash_83 != 0B)
    goto <bb 171>;
  else
    goto <bb 172>;

<bb 171>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6350, session_72(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);
  D.41888_472 = strlen (buf_144);
  D.41889_473 = buf_144 + D.41888_472;
  D.41890_474 = strlen (buf_144);
  D.41891_475 = 65536 - D.41890_474;
  switch_snprintf (D.41889_473, D.41891_475, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_83);

<bb 172>:
  # DEBUG s => sr_4
  if (sr_4 == 0B)
    goto <bb 175>;
  else
    goto <bb 173>;

<bb 173>:
  D.48144_1522 = *sr_4;
  if (D.48144_1522 == 0)
    goto <bb 175>;
  else
    goto <bb 174>;

<bb 174>:

<bb 175>:
  # D.48143_1523 = PHI <1(172), 1(173), 0(174)>
  if (D.48143_1523 == 0)
    goto <bb 176>;
  else
    goto <bb 177>;

<bb 176>:
  D.41895_477 = strlen (buf_144);
  D.41896_478 = buf_144 + D.41895_477;
  D.41897_479 = strlen (buf_144);
  D.41898_480 = 65536 - D.41897_479;
  switch_snprintf (D.41896_478, D.41898_480, "a=%s\n", sr_4);

<bb 177>:
  D.41899_481 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
  # DEBUG s => D.41899_481
  if (D.41899_481 == 0B)
    goto <bb 180>;
  else
    goto <bb 178>;

<bb 178>:
  D.48148_1524 = MEM[(const char *)D.41899_481];
  if (D.48148_1524 == 0)
    goto <bb 180>;
  else
    goto <bb 179>;

<bb 179>:

<bb 180>:
  # D.48147_1525 = PHI <1(177), 1(178), 0(179)>
  if (D.48147_1525 == 0)
    goto <bb 181>;
  else
    goto <bb 182>;

<bb 181>:
  D.41903_483 = strlen (buf_144);
  D.41904_484 = buf_144 + D.41903_483;
  D.41905_485 = strlen (buf_144);
  D.41906_486 = 65536 - D.41905_485;
  D.41899_487 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.type;
  D.41907_488 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_dtls_fingerprint.str;
  switch_snprintf (D.41904_484, D.41906_486, "a=fingerprint:%s %s\n", D.41899_487, D.41907_488);

<bb 182>:
  D.41522_489 = smh_90->mparams;
  D.41523_490 = D.41522_489->rtcp_audio_interval_msec;
  if (D.41523_490 != 0B)
    goto <bb 183>;
  else
    goto <bb 186>;

<bb 183>:
  D.41910_491 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  if (D.41910_491 > 0)
    goto <bb 184>;
  else
    goto <bb 185>;

<bb 184>:
  D.41913_492 = strlen (buf_144);
  D.41914_493 = buf_144 + D.41913_492;
  D.41915_494 = strlen (buf_144);
  D.41916_495 = 65536 - D.41915_494;
  switch_snprintf (D.41914_493, D.41916_495, "a=rtcp-mux\n");
  D.41917_496 = strlen (buf_144);
  D.41918_497 = buf_144 + D.41917_496;
  D.41919_498 = strlen (buf_144);
  D.41920_499 = 65536 - D.41919_498;
  D.41727_500 = (int) port_2;
  switch_snprintf (D.41918_497, D.41920_499, "a=rtcp:%d IN %s %s\n", D.41727_500, family_59, ip_1);
  goto <bb 186>;

<bb 185>:
  D.41922_501 = strlen (buf_144);
  D.41923_502 = buf_144 + D.41922_501;
  D.41924_503 = strlen (buf_144);
  D.41925_504 = 65536 - D.41924_503;
  D.41727_505 = (int) port_2;
  D.41926_506 = D.41727_505 + 1;
  switch_snprintf (D.41923_502, D.41925_504, "a=rtcp:%d IN %s %s\n", D.41926_506, family_59, ip_1);

<bb 186>:
  D.41927_507 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out.cands[0][0].ready;
  if (D.41927_507 != 0)
    goto <bb 187>;
  else
    goto <bb 211>;

<bb 187>:
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  # DEBUG c3 => 659126
  # DEBUG c4 => 659124
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  # DEBUG D#25 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ice_out
  # DEBUG ice_out => D#25
  D.41930_513 = strlen (buf_144);
  D.41931_514 = buf_144 + D.41930_513;
  D.41932_515 = strlen (buf_144);
  D.41933_516 = 65536 - D.41932_515;
  D.41934_517 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41935_518 = smh_90->cname;
  switch_snprintf (D.41931_514, D.41933_516, "a=ssrc:%u cname:%s\n", D.41934_517, D.41935_518);
  D.41936_519 = strlen (buf_144);
  D.41937_520 = buf_144 + D.41936_519;
  D.41938_521 = strlen (buf_144);
  D.41939_522 = 65536 - D.41938_521;
  D.41934_523 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_524 = smh_90->msid;
  switch_snprintf (D.41937_520, D.41939_522, "a=ssrc:%u msid:%s a0\n", D.41934_523, D.41719_524);
  D.41940_525 = strlen (buf_144);
  D.41941_526 = buf_144 + D.41940_525;
  D.41942_527 = strlen (buf_144);
  D.41943_528 = 65536 - D.41942_527;
  D.41934_529 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_530 = smh_90->msid;
  switch_snprintf (D.41941_526, D.41943_528, "a=ssrc:%u mslabel:%s\n", D.41934_529, D.41719_530);
  D.41944_531 = strlen (buf_144);
  D.41945_532 = buf_144 + D.41944_531;
  D.41946_533 = strlen (buf_144);
  D.41947_534 = 65536 - D.41946_533;
  D.41934_535 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssrc;
  D.41719_536 = smh_90->msid;
  switch_snprintf (D.41945_532, D.41947_534, "a=ssrc:%u label:%sa0\n", D.41934_535, D.41719_536);
  D.41948_537 = strlen (buf_144);
  D.41949_538 = buf_144 + D.41948_537;
  D.41950_539 = strlen (buf_144);
  D.41951_540 = 65536 - D.41950_539;
  D.41952_541 = MEM[(struct ice_t *)smh_90 + 6480B].ufrag;
  switch_snprintf (D.41949_538, D.41951_540, "a=ice-ufrag:%s\n", D.41952_541);
  D.41953_542 = strlen (buf_144);
  D.41954_543 = buf_144 + D.41953_542;
  D.41955_544 = strlen (buf_144);
  D.41956_545 = 65536 - D.41955_544;
  D.41957_546 = MEM[(struct ice_t *)smh_90 + 6480B].pwd;
  switch_snprintf (D.41954_543, D.41956_545, "a=ice-pwd:%s\n", D.41957_546);
  D.41958_547 = strlen (buf_144);
  D.41959_548 = buf_144 + D.41958_547;
  D.41960_549 = strlen (buf_144);
  D.41961_550 = 65536 - D.41960_549;
  D.41962_551 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_552 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_553 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_554 = (int) D.41964_553;
  switch_snprintf (D.41959_548, D.41961_550, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_551, 659136, D.41963_552, D.41965_554);
  D.41966_555 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  # DEBUG s => D.41966_555
  if (D.41966_555 == 0B)
    goto <bb 190>;
  else
    goto <bb 188>;

<bb 188>:
  D.48152_1526 = MEM[(const char *)D.41966_555];
  if (D.48152_1526 == 0)
    goto <bb 190>;
  else
    goto <bb 189>;

<bb 189>:

<bb 190>:
  # D.48151_1527 = PHI <1(187), 1(188), 0(189)>
  if (D.48151_1527 == 0)
    goto <bb 191>;
  else
    goto <bb 198>;

<bb 191>:
  D.41963_557 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.41963_557
  if (D.41963_557 == 0B)
    goto <bb 194>;
  else
    goto <bb 192>;

<bb 192>:
  D.48156_1528 = MEM[(const char *)D.41963_557];
  if (D.48156_1528 == 0)
    goto <bb 194>;
  else
    goto <bb 193>;

<bb 193>:

<bb 194>:
  # D.48155_1529 = PHI <1(191), 1(192), 0(193)>
  if (D.48155_1529 == 0)
    goto <bb 195>;
  else
    goto <bb 198>;

<bb 195>:
  D.41966_559 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41963_560 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.39598_561 = __builtin_strcmp (D.41966_559, D.41963_560);
  if (D.39598_561 != 0)
    goto <bb 196>;
  else
    goto <bb 198>;

<bb 196>:
  D.41975_562 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41964_563 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  if (D.41975_562 != D.41964_563)
    goto <bb 197>;
  else
    goto <bb 198>;

<bb 197>:
  D.41978_564 = strlen (buf_144);
  D.41979_565 = buf_144 + D.41978_564;
  D.41980_566 = strlen (buf_144);
  D.41981_567 = 65536 - D.41980_566;
  D.41962_568 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_569 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_570 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_571 = (int) D.41964_570;
  D.41966_572 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41975_573 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41982_574 = (int) D.41975_573;
  switch_snprintf (D.41979_565, D.41981_567, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_568, 659126, D.41963_569, D.41965_571, D.41966_572, D.41982_574);

<bb 198>:
  D.41910_575 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41985_576 = D.41910_575 <= 0;
  D.41986_577 = is_outbound_89 != 0;
  D.41987_578 = D.41985_576 || D.41986_577;
  if (D.41987_578 != 0)
    goto <bb 200>;
  else
    goto <bb 199>;

<bb 199>:
  D.41512_579 = session_72(D)->channel;
  D.41989_580 = switch_channel_test_flag (D.41512_579, 84);
  if (D.41989_580 != 0)
    goto <bb 200>;
  else
    goto <bb 211>;

<bb 200>:
  D.41990_581 = strlen (buf_144);
  D.41991_582 = buf_144 + D.41990_581;
  D.41992_583 = strlen (buf_144);
  D.41993_584 = 65536 - D.41992_583;
  D.41962_585 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_586 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_587 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_588 = (int) D.41964_587;
  D.41910_589 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_590 = D.41910_589 <= 0;
  D.41995_591 = D.41965_588 + D.41994_590;
  switch_snprintf (D.41991_582, D.41993_584, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_585, 659134, D.41963_586, D.41995_591);
  D.41966_592 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  # DEBUG s => D.41966_592
  if (D.41966_592 == 0B)
    goto <bb 203>;
  else
    goto <bb 201>;

<bb 201>:
  D.48160_1530 = MEM[(const char *)D.41966_592];
  if (D.48160_1530 == 0)
    goto <bb 203>;
  else
    goto <bb 202>;

<bb 202>:

<bb 203>:
  # D.48159_1531 = PHI <1(200), 1(201), 0(202)>
  if (D.48159_1531 == 0)
    goto <bb 204>;
  else
    goto <bb 211>;

<bb 204>:
  D.41963_594 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.41963_594
  if (D.41963_594 == 0B)
    goto <bb 207>;
  else
    goto <bb 205>;

<bb 205>:
  D.48164_1532 = MEM[(const char *)D.41963_594];
  if (D.48164_1532 == 0)
    goto <bb 207>;
  else
    goto <bb 206>;

<bb 206>:

<bb 207>:
  # D.48163_1533 = PHI <1(204), 1(205), 0(206)>
  if (D.48163_1533 == 0)
    goto <bb 208>;
  else
    goto <bb 211>;

<bb 208>:
  D.41966_596 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41963_597 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.39607_598 = __builtin_strcmp (D.41966_596, D.41963_597);
  if (D.39607_598 != 0)
    goto <bb 209>;
  else
    goto <bb 211>;

<bb 209>:
  D.41975_599 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41964_600 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  if (D.41975_599 != D.41964_600)
    goto <bb 210>;
  else
    goto <bb 211>;

<bb 210>:
  D.42006_601 = strlen (buf_144);
  D.42007_602 = buf_144 + D.42006_601;
  D.42008_603 = strlen (buf_144);
  D.42009_604 = 65536 - D.42008_603;
  D.41962_605 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].transport;
  D.41963_606 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_addr;
  D.41964_607 = MEM[(struct ice_t *)smh_90 + 6480B].cands[0][0].con_port;
  D.41965_608 = (int) D.41964_607;
  D.41910_609 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_610 = D.41910_609 <= 0;
  D.41995_611 = D.41965_608 + D.41994_610;
  D.41966_612 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_ip;
  D.41975_613 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].local_sdp_port;
  D.41982_614 = (int) D.41975_613;
  D.41910_615 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].rtcp_mux;
  D.41994_616 = D.41910_615 <= 0;
  D.42010_617 = D.41982_614 + D.41994_616;
  switch_snprintf (D.42007_602, D.42009_604, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_605, 659124, D.41963_606, D.41995_611, D.41966_612, D.42010_617);

<bb 211>:
  D.41736_618 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_618 != 9)
    goto <bb 212>;
  else
    goto <bb 256>;

<bb 212>:
  D.41512_619 = session_72(D)->channel;
  D.42013_620 = switch_channel_test_flag (D.41512_619, 109);
  if (D.42013_620 == 0)
    goto <bb 213>;
  else
    goto <bb 256>;

<bb 213>:
  D.41736_621 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  D.42016_622 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_621].local_crypto_key;
  # DEBUG s => D.42016_622
  if (D.42016_622 == 0B)
    goto <bb 216>;
  else
    goto <bb 214>;

<bb 214>:
  D.48168_1534 = MEM[(const char *)D.42016_622];
  if (D.48168_1534 == 0)
    goto <bb 216>;
  else
    goto <bb 215>;

<bb 215>:

<bb 216>:
  # D.48167_1535 = PHI <1(213), 1(214), 0(215)>
  if (D.48167_1535 == 0)
    goto <bb 217>;
  else
    goto <bb 256>;

<bb 217>:
  D.41512_624 = session_72(D)->channel;
  D.42020_625 = switch_channel_test_flag (D.41512_624, 92);
  if (D.42020_625 != 0)
    goto <bb 218>;
  else
    goto <bb 256>;

<bb 218>:
  D.42023_626 = strlen (buf_144);
  D.42024_627 = buf_144 + D.42023_626;
  D.42025_628 = strlen (buf_144);
  D.42026_629 = 65536 - D.42025_628;
  D.41736_630 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  D.42016_631 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[D.41736_630].local_crypto_key;
  switch_snprintf (D.42024_627, D.42026_629, "a=crypto:%s\n", D.42016_631);
  goto <bb 256>;

<bb 219>:
  D.41522_632 = smh_90->mparams;
  D.41587_633 = D.41522_632->num_codecs;
  if (D.41587_633 != 0)
    goto <bb 220>;
  else
    goto <bb 256>;

<bb 220>:
  # DEBUG cur_ptime => 0
  # DEBUG this_ptime => 0
  # DEBUG cng_type => 0
  D.42030_637 = switch_media_handle_test_media_flag (smh_90, 9);
  if (D.42030_637 == 0)
    goto <bb 221>;
  else
    goto <bb 224>;

<bb 221>:
  D.41522_638 = smh_90->mparams;
  D.41606_639 = D.41522_638->cng_pt;
  D.41607_640 = D.41606_639 != 0;
  D.41608_641 = use_cng_17 != 0;
  D.41609_642 = D.41607_640 && D.41608_641;
  if (D.41609_642 != 0)
    goto <bb 222>;
  else
    goto <bb 224>;

<bb 222>:
  D.41522_643 = smh_90->mparams;
  D.41606_644 = D.41522_643->cng_pt;
  cng_type_645 = (int) D.41606_644;
  # DEBUG cng_type => cng_type_645
  D.41720_646 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].codec_negotiated;
  if (D.41720_646 == 0)
    goto <bb 223>;
  else
    goto <bb 224>;

<bb 223>:
  D.41522_647 = smh_90->mparams;
  D.41522_647->cng_pt = 0;

<bb 224>:
  # cng_type_42 = PHI <0(220), 0(221), cng_type_645(222), cng_type_645(223)>
  # DEBUG cng_type => cng_type_42
  D.41512_648 = session_72(D)->channel;
  mult_649 = switch_channel_get_variable_dup (D.41512_648, "sdp_m_per_ptime", 1, -1);
  # DEBUG mult => mult_649
  D.41512_650 = session_72(D)->channel;
  D.42039_651 = switch_channel_test_flag (D.41512_650, 106);
  if (D.42039_651 != 0)
    goto <bb 228>;
  else
    goto <bb 225>;

<bb 225>:
  if (mult_649 != 0B)
    goto <bb 226>;
  else
    goto <bb 227>;

<bb 226>:
  D.42042_652 = switch_false (mult_649);
  if (D.42042_652 != 0)
    goto <bb 228>;
  else
    goto <bb 227>;

<bb 227>:
  # i_1104 = PHI <0(226), 0(225)>
  # cur_ptime_1578 = PHI <0(226), 0(225)>
  goto <bb 255>;

<bb 228>:
  # DEBUG bp => buf_144
  D.41512_690 = session_72(D)->channel;
  D.42046_691 = switch_channel_test_flag (D.41512_690, 106);
  if (D.42046_691 == 0)
    goto <bb 229>;
  else
    goto <bb 231>;

<bb 229>:
  D.41512_692 = session_72(D)->channel;
  D.42048_693 = switch_channel_test_flag (D.41512_692, 109);
  if (D.42048_693 == 0)
    goto <bb 231>;
  else
    goto <bb 230>;

<bb 230>:

<bb 231>:
  # both_63 = PHI <1(229), 0(230), 0(228)>
  # DEBUG both => both_63
  D.41732_697 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_697 == 0)
    goto <bb 232>;
  else
    goto <bb 233>;

<bb 232>:
  D.41512_698 = session_72(D)->channel;
  D.42054_699 = switch_channel_test_flag (D.41512_698, 92);
  if (D.42054_699 != 0)
    goto <bb 234>;
  else
    goto <bb 233>;

<bb 233>:
  D.41512_700 = session_72(D)->channel;
  D.42055_701 = switch_channel_test_flag (D.41512_700, 109);
  if (D.42055_701 != 0)
    goto <bb 234>;
  else
    goto <bb 236>;

<bb 234>:
  map.33_702 = map;
  generate_m.isra.4 (session_72(D), buf_144, 65536, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_702, 1);
  D.42057_703 = strlen (buf_144);
  bp_704 = buf_144 + D.42057_703;
  # DEBUG bp => bp_704
  D.42058_705 = smh_90->crypto_mode;
  if (D.42058_705 == 1)
    goto <bb 235>;
  else
    goto <bb 236>;

<bb 235>:
  # DEBUG both => 0

<bb 236>:
  # bp_43 = PHI <buf_144(233), bp_704(234), bp_704(235)>
  # both_44 = PHI <both_63(233), both_63(234), 0(235)>
  # DEBUG both => both_44
  # DEBUG bp => bp_43
  if (both_44 != 0)
    goto <bb 237>;
  else
    goto <bb 256>;

<bb 237>:
  D.42063_707 = strlen (buf_144);
  D.42064_708 = 65536 - D.42063_707;
  map.33_709 = map;
  generate_m.isra.4 (session_72(D), bp_43, D.42064_708, port_2, family_59, ip_1, 0, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_709, 0);
  goto <bb 256>;

<bb 238>:
  imp_656 = smh_90->codecs[i_38];
  # DEBUG imp => imp_656
  D.42065_657 = imp_656->codec_type;
  if (D.42065_657 != 0)
    goto <bb 239>;
  else
    goto <bb 240>;

<bb 239>:
  // predicted unlikely by continue predictor.
  goto <bb 254>;

<bb 240>:
  D.42068_658 = imp_656->microseconds_per_packet;
  this_ptime_659 = D.42068_658 / 1000;
  # DEBUG this_ptime => this_ptime_659
  D.42071_660 = imp_656->iananame;
  D.42072_661 = strcasecmp (D.42071_660, "ilbc");
  if (D.42072_661 == 0)
    goto <bb 242>;
  else
    goto <bb 241>;

<bb 241>:
  D.42071_662 = imp_656->iananame;
  D.42074_663 = strcasecmp (D.42071_662, "isac");
  if (D.42074_663 == 0)
    goto <bb 242>;
  else
    goto <bb 243>;

<bb 242>:
  # DEBUG this_ptime => 20

<bb 243>:
  # this_ptime_41 = PHI <this_ptime_659(241), 20(242)>
  # DEBUG this_ptime => this_ptime_41
  if (cur_ptime_40 != this_ptime_41)
    goto <bb 244>;
  else
    goto <bb 254>;

<bb 244>:
  # DEBUG bp => buf_144
  # DEBUG both => 1
  # DEBUG cur_ptime => this_ptime_41
  D.41732_668 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].no_crypto;
  if (D.41732_668 == 0)
    goto <bb 245>;
  else
    goto <bb 246>;

<bb 245>:
  D.41512_669 = session_72(D)->channel;
  D.42081_670 = switch_channel_test_flag (D.41512_669, 92);
  if (D.42081_670 != 0)
    goto <bb 247>;
  else
    goto <bb 246>;

<bb 246>:
  D.41512_671 = session_72(D)->channel;
  D.42082_672 = switch_channel_test_flag (D.41512_671, 109);
  if (D.42082_672 != 0)
    goto <bb 247>;
  else
    goto <bb 249>;

<bb 247>:
  D.42083_673 = strlen (buf_144);
  D.42084_674 = 65536 - D.42083_673;
  map.33_675 = map;
  generate_m.isra.4 (session_72(D), buf_144, D.42084_674, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_675, 1);
  D.42085_676 = strlen (buf_144);
  bp_677 = buf_144 + D.42085_676;
  # DEBUG bp => bp_677
  D.42058_678 = smh_90->crypto_mode;
  if (D.42058_678 == 1)
    goto <bb 248>;
  else
    goto <bb 249>;

<bb 248>:
  # DEBUG both => 0

<bb 249>:
  # bp_45 = PHI <buf_144(246), bp_677(247), bp_677(248)>
  # both_46 = PHI <1(246), 1(247), 0(248)>
  # DEBUG both => both_46
  # DEBUG bp => bp_45
  D.41512_680 = session_72(D)->channel;
  D.42090_681 = switch_channel_test_flag (D.41512_680, 106);
  if (D.42090_681 != 0)
    goto <bb 252>;
  else
    goto <bb 250>;

<bb 250>:
  D.41512_682 = session_72(D)->channel;
  D.42092_683 = switch_channel_test_flag (D.41512_682, 109);
  if (D.42092_683 != 0)
    goto <bb 251>;
  else
    goto <bb 252>;

<bb 251>:

<bb 252>:
  # both_47 = PHI <both_46(250), 0(251), 0(249)>
  # DEBUG both => both_47
  if (both_47 != 0)
    goto <bb 253>;
  else
    goto <bb 254>;

<bb 253>:
  D.42095_685 = strlen (buf_144);
  D.42096_686 = 65536 - D.42095_685;
  map.33_687 = map;
  generate_m.isra.4 (session_72(D), bp_45, D.42096_686, port_2, family_59, ip_1, this_ptime_41, append_audio_78, sr_4, use_cng_17, cng_type_42, map.33_687, 0);

<bb 254>:
  # cur_ptime_39 = PHI <cur_ptime_40(239), cur_ptime_40(243), this_ptime_41(252), this_ptime_41(253)>
  # DEBUG cur_ptime => cur_ptime_39
  i_688 = i_38 + 1;
  # DEBUG i => i_688

<bb 255>:
  # i_38 = PHI <i_1104(227), i_688(254)>
  # cur_ptime_40 = PHI <cur_ptime_1578(227), cur_ptime_39(254)>
  # DEBUG cur_ptime => cur_ptime_40
  # DEBUG i => i_38
  D.41522_654 = smh_90->mparams;
  D.41587_655 = D.41522_654->num_codecs;
  if (D.41587_655 > i_38)
    goto <bb 238>;
  else
    goto <bb 256>;

<bb 256>:
  # DEBUG rate => NULL
  # DEBUG ptime => NULL
  D.41512_710 = session_72(D)->channel;
  D.42097_711 = switch_channel_test_flag (D.41512_710, 98);
  if (D.42097_711 != 0)
    goto <bb 257>;
  else
    goto <bb 443>;

<bb 257>:
  D.41512_712 = session_72(D)->channel;
  D.42100_713 = switch_channel_direction (D.41512_712);
  if (D.42100_713 == 0)
    goto <bb 258>;
  else
    goto <bb 260>;

<bb 258>:
  D.41534_714 = smh_90->session;
  D.41535_715 = D.41534_714->channel;
  D.42103_716 = switch_channel_test_flag (D.41535_715, 109);
  if (D.42103_716 != 0)
    goto <bb 259>;
  else
    goto <bb 260>;

<bb 259>:
  MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].no_crypto = 1;

<bb 260>:
  D.42106_717 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  if (D.42106_717 == 0)
    goto <bb 261>;
  else
    goto <bb 262>;

<bb 261>:
  switch_core_media_choose_port (session_72(D), 1, 0);

<bb 262>:
  D.41512_718 = session_72(D)->channel;
  D.42109_719 = switch_channel_test_flag (D.41512_718, 106);
  if (D.42109_719 != 0)
    goto <bb 263>;
  else
    goto <bb 264>;

<bb 263>:
  switch_media_handle_set_media_flag (smh_90, 16);

<bb 264>:
  D.42112_720 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].adv_sdp_port;
  v_port_721 = (uint32_t) D.42112_720;
  # DEBUG v_port => v_port_721
  if (v_port_721 != 0)
    goto <bb 265>;
  else
    goto <bb 443>;

<bb 265>:
  # pass_fmtp_1164 = PHI <pass_fmtp_74(264)>
  # vp8_1192 = PHI <0(264)>
  # red_1197 = PHI <0(264)>
  # loops_1201 = PHI <0(264)>
  goto <bb 442>;

<bb 266>:
  D.41534_723 = smh_90->session;
  D.41535_724 = D.41534_723->channel;
  D.42115_725 = switch_channel_test_flag (D.41535_724, 108);
  if (D.42115_725 != 0)
    goto <bb 267>;
  else
    goto <bb 268>;

<bb 267>:
  D.42118_726 = (short unsigned int) v_port_721;
  gen_ice (session_72(D), 1, ip_1, D.42118_726);

<bb 268>:
  D.42119_727 = strlen (buf_144);
  D.42120_728 = buf_144 + D.42119_727;
  D.42121_729 = strlen (buf_144);
  D.42122_730 = 65536 - D.42121_729;
  if (loops_48 == 0)
    goto <bb 269>;
  else
    goto <bb 271>;

<bb 269>:
  D.41512_731 = session_72(D)->channel;
  D.42129_732 = switch_channel_test_flag (D.41512_731, 92);
  if (D.42129_732 != 0)
    goto <bb 270>;
  else
    goto <bb 271>;

<bb 270>:
  D.41512_733 = session_72(D)->channel;
  D.42131_734 = switch_channel_direction (D.41512_733);
  if (D.42131_734 == 1)
    goto <bb 274>;
  else
    goto <bb 271>;

<bb 271>:
  D.41736_735 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_735 != 9)
    goto <bb 274>;
  else
    goto <bb 272>;

<bb 272>:
  D.41512_736 = session_72(D)->channel;
  D.42133_737 = switch_channel_test_flag (D.41512_736, 109);
  if (D.42133_737 != 0)
    goto <bb 273>;
  else
    goto <bb 274>;

<bb 273>:

<bb 274>:
  # iftmp.34_64 = PHI <1(271), 0(272), 1(270), 1(273)>
  D.42134_740 = get_media_profile_name (session_72(D), iftmp.34_64);
  switch_snprintf (D.42120_728, D.42122_730, "m=video %d %s", v_port_721, D.42134_740);
  D.42135_741 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
  if (D.42135_741 != 0)
    goto <bb 275>;
  else
    goto <bb 283>;

<bb 275>:
  switch_core_media_set_video_codec (session_72(D), 0);
  D.42138_742 = strlen (buf_144);
  D.42139_743 = buf_144 + D.42138_742;
  D.42140_744 = strlen (buf_144);
  D.42141_745 = 65536 - D.42140_744;
  D.42142_746 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42143_747 = D.42142_746->agreed_pt;
  D.42144_748 = (int) D.42143_747;
  switch_snprintf (D.42139_743, D.42141_745, " %d", D.42144_748);
  D.42145_749 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42145_749 != 0)
    goto <bb 276>;
  else
    goto <bb 297>;

<bb 276>:
  D.41747_750 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_750);
  pmap_751 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  # DEBUG pmap => pmap_751
  goto <bb 280>;

<bb 277>:
  D.42148_753 = pmap_49->pt;
  D.42142_754 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_755 = D.42142_754->pt;
  if (D.42148_753 != D.42149_755)
    goto <bb 278>;
  else
    goto <bb 279>;

<bb 278>:
  D.42152_756 = strlen (buf_144);
  D.42153_757 = buf_144 + D.42152_756;
  D.42154_758 = strlen (buf_144);
  D.42155_759 = 65536 - D.42154_758;
  D.42148_760 = pmap_49->pt;
  D.42156_761 = (int) D.42148_760;
  switch_snprintf (D.42153_757, D.42155_759, " %d", D.42156_761);

<bb 279>:
  pmap_762 = pmap_49->next;
  # DEBUG pmap => pmap_762

<bb 280>:
  # pmap_49 = PHI <pmap_751(276), pmap_762(279)>
  # DEBUG pmap => pmap_49
  if (pmap_49 != 0B)
    goto <bb 281>;
  else
    goto <bb 282>;

<bb 281>:
  D.42158_752 = pmap_49->allocated;
  if (D.42158_752 != 0)
    goto <bb 277>;
  else
    goto <bb 282>;

<bb 282>:
  D.41747_763 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_763);
  goto <bb 297>;

<bb 283>:
  D.41522_764 = smh_90->mparams;
  D.41587_765 = D.41522_764->num_codecs;
  if (D.41587_765 != 0)
    goto <bb 284>;
  else
    goto <bb 297>;

<bb 284>:
  already_did = {};
  # DEBUG i => 0
  goto <bb 296>;

<bb 285>:
  imp_769 = smh_90->codecs[i_50];
  # DEBUG imp => imp_769
  D.42162_770 = imp_769->codec_type;
  if (D.42162_770 != 1)
    goto <bb 286>;
  else
    goto <bb 287>;

<bb 286>:
  // predicted unlikely by continue predictor.
  goto <bb 295>;

<bb 287>:
  D.41512_771 = session_72(D)->channel;
  D.42165_772 = switch_channel_direction (D.41512_771);
  if (D.42165_772 == 0)
    goto <bb 288>;
  else
    goto <bb 290>;

<bb 288>:
  D.41512_773 = session_72(D)->channel;
  D.42168_774 = switch_channel_test_flag (D.41512_773, 114);
  if (D.42168_774 != 0)
    goto <bb 289>;
  else
    goto <bb 290>;

<bb 289>:
  // predicted unlikely by continue predictor.
  goto <bb 295>;

<bb 290>:
  D.42171_775 = smh_90->ianacodes[i_50];
  D.42172_776 = (signed char) D.42171_775;
  if (D.42172_776 >= 0)
    goto <bb 291>;
  else
    goto <bb 294>;

<bb 291>:
  D.42171_777 = smh_90->ianacodes[i_50];
  D.42175_778 = (int) D.42171_777;
  D.42176_779 = already_did[D.42175_778];
  if (D.42176_779 != 0)
    goto <bb 292>;
  else
    goto <bb 293>;

<bb 292>:
  // predicted unlikely by continue predictor.
  goto <bb 295>;

<bb 293>:
  D.42171_780 = smh_90->ianacodes[i_50];
  D.42175_781 = (int) D.42171_780;
  already_did[D.42175_781] = 1;

<bb 294>:
  D.42179_782 = strlen (buf_144);
  D.42180_783 = buf_144 + D.42179_782;
  D.42181_784 = strlen (buf_144);
  D.42182_785 = 65536 - D.42181_784;
  D.42171_786 = smh_90->ianacodes[i_50];
  D.42175_787 = (int) D.42171_786;
  switch_snprintf (D.42180_783, D.42182_785, " %d", D.42175_787);

<bb 295>:
  # DEBUG ptime => NULL
  i_790 = i_50 + 1;
  # DEBUG i => i_790

<bb 296>:
  # i_50 = PHI <0(284), i_790(295)>
  # DEBUG i => i_50
  # DEBUG ptime => NULL
  D.41522_767 = smh_90->mparams;
  D.41587_768 = D.41522_767->num_codecs;
  if (D.41587_768 > i_50)
    goto <bb 285>;
  else
    goto <bb 297>;

<bb 297>:
  # DEBUG ptime => NULL
  D.42186_791 = strlen (buf_144);
  D.42187_792 = buf_144 + D.42186_791;
  D.42188_793 = strlen (buf_144);
  D.42189_794 = 65536 - D.42188_793;
  switch_snprintf (D.42187_792, D.42189_794, "\n");
  D.42135_795 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].codec_negotiated;
  if (D.42135_795 != 0)
    goto <bb 298>;
  else
    goto <bb 325>;

<bb 298>:
  D.42142_796 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_797 = D.42142_796->rm_encoding;
  D.42193_798 = strcasecmp (D.42192_797, "VP8");
  if (D.42193_798 == 0)
    goto <bb 299>;
  else
    goto <bb 300>;

<bb 299>:
  D.42142_799 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_800 = D.42142_799->pt;
  vp8_801 = (int) D.42149_800;
  # DEBUG vp8 => vp8_801

<bb 300>:
  # vp8_22 = PHI <vp8_27(298), vp8_801(299)>
  # DEBUG vp8 => vp8_22
  D.42142_802 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_803 = D.42142_802->rm_encoding;
  D.42196_804 = strcasecmp (D.42192_803, "red");
  if (D.42196_804 == 0)
    goto <bb 301>;
  else
    goto <bb 302>;

<bb 301>:
  D.42142_805 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_806 = D.42142_805->pt;
  red_807 = (int) D.42149_806;
  # DEBUG red => red_807

<bb 302>:
  # red_28 = PHI <red_33(300), red_807(301)>
  # DEBUG red => red_28
  # DEBUG D#32 => MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map
  # DEBUG D#31 => D#32->rm_rate
  # DEBUG rate => D#31
  D.42199_810 = strlen (buf_144);
  D.42200_811 = buf_144 + D.42199_810;
  D.42201_812 = strlen (buf_144);
  D.42202_813 = 65536 - D.42201_812;
  D.42142_814 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_815 = D.42142_814->pt;
  D.42203_816 = (int) D.42149_815;
  D.42142_817 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42192_818 = D.42142_817->rm_encoding;
  D.42142_819 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42204_820 = D.42142_819->rm_rate;
  switch_snprintf (D.42200_811, D.42202_813, "a=rtpmap:%d %s/%ld\n", D.42203_816, D.42192_818, D.42204_820);
  D.41512_821 = session_72(D)->channel;
  D.42205_822 = switch_channel_test_flag (D.41512_821, 84);
  if (D.42205_822 != 0)
    goto <bb 303>;
  else
    goto <bb 304>;

<bb 303>:
  D.42142_823 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  pass_fmtp_824 = D.42142_823->rm_fmtp;
  # DEBUG pass_fmtp => pass_fmtp_824
  goto <bb 308>;

<bb 304>:
  # DEBUG pass_fmtp => 0B
  D.41512_826 = session_72(D)->channel;
  D.42209_827 = switch_channel_get_partner_uuid (D.41512_826);
  if (D.42209_827 != 0B)
    goto <bb 305>;
  else
    goto <bb 306>;

<bb 305>:
  D.41512_828 = session_72(D)->channel;
  switch_channel_get_variable_partner (D.41512_828, "rtp_video_fmtp");
  # DEBUG of => NULL

<bb 306>:
  if (ov_fmtp_76 != 0B)
    goto <bb 308>;
  else
    goto <bb 307>;

<bb 307>:
  D.41512_832 = session_72(D)->channel;
  pass_fmtp_833 = switch_channel_get_variable_dup (D.41512_832, "rtp_video_fmtp", 1, -1);
  # DEBUG pass_fmtp => pass_fmtp_833

<bb 308>:
  # pass_fmtp_18 = PHI <pass_fmtp_824(303), ov_fmtp_76(306), pass_fmtp_833(307)>
  # DEBUG pass_fmtp => pass_fmtp_18
  if (pass_fmtp_18 != 0B)
    goto <bb 309>;
  else
    goto <bb 310>;

<bb 309>:
  D.42219_834 = strlen (buf_144);
  D.42220_835 = buf_144 + D.42219_834;
  D.42221_836 = strlen (buf_144);
  D.42222_837 = 65536 - D.42221_836;
  D.42142_838 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_839 = D.42142_838->pt;
  D.42203_840 = (int) D.42149_839;
  switch_snprintf (D.42220_835, D.42222_837, "a=fmtp:%d %s\n", D.42203_840, pass_fmtp_18);

<bb 310>:
  D.42223_841 = switch_media_handle_test_media_flag (smh_90, 16);
  if (D.42223_841 != 0)
    goto <bb 311>;
  else
    goto <bb 319>;

<bb 311>:
  D.41747_842 = smh_90->sdp_mutex;
  switch_mutex_lock (D.41747_842);
  pmap_843 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  # DEBUG pmap => pmap_843
  goto <bb 316>;

<bb 312>:
  D.42226_845 = pmap_51->pt;
  D.42142_846 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].cur_payload_map;
  D.42149_847 = D.42142_846->pt;
  if (D.42226_845 != D.42149_847)
    goto <bb 313>;
  else
    goto <bb 315>;

<bb 313>:
  D.42229_848 = pmap_51->negotiated;
  if (D.42229_848 != 0)
    goto <bb 314>;
  else
    goto <bb 315>;

<bb 314>:
  D.42232_849 = strlen (buf_144);
  D.42233_850 = buf_144 + D.42232_849;
  D.42234_851 = strlen (buf_144);
  D.42235_852 = 65536 - D.42234_851;
  D.42226_853 = pmap_51->pt;
  D.42236_854 = (int) D.42226_853;
  D.42237_855 = pmap_51->iananame;
  D.42238_856 = pmap_51->rate;
  switch_snprintf (D.42233_850, D.42235_852, "a=rtpmap:%d %s/%ld\n", D.42236_854, D.42237_855, D.42238_856);

<bb 315>:
  pmap_857 = pmap_51->next;
  # DEBUG pmap => pmap_857

<bb 316>:
  # pmap_51 = PHI <pmap_843(311), pmap_857(315)>
  # DEBUG pmap => pmap_51
  if (pmap_51 != 0B)
    goto <bb 317>;
  else
    goto <bb 318>;

<bb 317>:
  D.42240_844 = pmap_51->allocated;
  if (D.42240_844 != 0)
    goto <bb 312>;
  else
    goto <bb 318>;

<bb 318>:
  D.41747_858 = smh_90->sdp_mutex;
  switch_mutex_unlock (D.41747_858);

<bb 319>:
  if (append_video_80 != 0B)
    goto <bb 320>;
  else
    goto <bb 369>;

<bb 320>:
  D.42243_859 = strlen (buf_144);
  D.42244_860 = buf_144 + D.42243_859;
  D.42245_861 = strlen (buf_144);
  D.42246_862 = 65536 - D.42245_861;
  D.42249_863 = *append_video_80;
  if (D.42249_863 != 0)
    goto <bb 321>;
  else
    goto <bb 322>;

<bb 321>:
  D.42252_864 = strlen (append_video_80);
  D.42253_865 = D.42252_864 + -1;
  append_video_866 = append_video_80 + D.42253_865;

<bb 322>:
  # append_video_66 = PHI <append_video_866(321), append_video_80(320)>
  D.42255_868 = *append_video_66;
  if (D.42255_868 == 10)
    goto <bb 324>;
  else
    goto <bb 323>;

<bb 323>:

<bb 324>:
  # iftmp.35_65 = PHI <""(322), "\n"(323)>
  switch_snprintf (D.42244_860, D.42246_862, "%s%s", append_video_80, iftmp.35_65);
  goto <bb 369>;

<bb 325>:
  D.41522_871 = smh_90->mparams;
  D.41587_872 = D.41522_871->num_codecs;
  if (D.41587_872 != 0)
    goto <bb 326>;
  else
    goto <bb 369>;

<bb 326>:
  already_did = {};
  # DEBUG i => 0
  goto <bb 368>;

<bb 327>:
  imp_876 = smh_90->codecs[i_52];
  # DEBUG imp => imp_876
  # DEBUG fmtp => 0B
  D.42262_878 = smh_90->ianacodes[i_52];
  ianacode_879 = (uint32_t) D.42262_878;
  # DEBUG ianacode => ianacode_879
  D.42263_880 = imp_876->codec_type;
  if (D.42263_880 != 1)
    goto <bb 328>;
  else
    goto <bb 329>;

<bb 328>:
  // predicted unlikely by continue predictor.
  goto <bb 367>;

<bb 329>:
  D.41512_881 = session_72(D)->channel;
  D.42266_882 = switch_channel_direction (D.41512_881);
  if (D.42266_882 == 0)
    goto <bb 330>;
  else
    goto <bb 332>;

<bb 330>:
  D.41512_883 = session_72(D)->channel;
  D.42269_884 = switch_channel_test_flag (D.41512_883, 114);
  if (D.42269_884 != 0)
    goto <bb 331>;
  else
    goto <bb 332>;

<bb 331>:
  // predicted unlikely by continue predictor.
  goto <bb 367>;

<bb 332>:
  if (ianacode_879 <= 127)
    goto <bb 333>;
  else
    goto <bb 336>;

<bb 333>:
  D.42274_885 = already_did[ianacode_879];
  if (D.42274_885 != 0)
    goto <bb 334>;
  else
    goto <bb 335>;

<bb 334>:
  // predicted unlikely by continue predictor.
  goto <bb 367>;

<bb 335>:
  already_did[ianacode_879] = 1;

<bb 336>:
  # DEBUG rate => NULL
  D.42279_887 = imp_876->iananame;
  D.42280_888 = imp_876->number_of_channels;
  D.42281_889 = (int) D.42280_888;
  channels_890 = get_channels (D.42279_887, D.42281_889);
  # DEBUG channels => channels_890
  D.42279_891 = imp_876->iananame;
  D.42282_892 = strcasecmp (D.42279_891, "VP8");
  if (D.42282_892 == 0)
    goto <bb 337>;
  else
    goto <bb 338>;

<bb 337>:
  vp8_893 = (int) ianacode_879;
  # DEBUG vp8 => vp8_893

<bb 338>:
  # vp8_23 = PHI <vp8_25(336), vp8_893(337)>
  # DEBUG vp8 => vp8_23
  D.42279_894 = imp_876->iananame;
  D.42285_895 = strcasecmp (D.42279_894, "red");
  if (D.42285_895 == 0)
    goto <bb 339>;
  else
    goto <bb 340>;

<bb 339>:
  red_896 = (int) ianacode_879;
  # DEBUG red => red_896

<bb 340>:
  # red_29 = PHI <red_31(338), red_896(339)>
  # DEBUG red => red_29
  if (channels_890 > 1)
    goto <bb 341>;
  else
    goto <bb 342>;

<bb 341>:
  D.42290_897 = strlen (buf_144);
  D.42291_898 = buf_144 + D.42290_897;
  D.42292_899 = strlen (buf_144);
  D.42293_900 = 65536 - D.42292_899;
  D.42279_901 = imp_876->iananame;
  D.42294_902 = imp_876->samples_per_second;
  switch_snprintf (D.42291_898, D.42293_900, "a=rtpmap:%d %s/%d/%d\n", ianacode_879, D.42279_901, D.42294_902, channels_890);
  goto <bb 343>;

<bb 342>:
  D.42296_903 = strlen (buf_144);
  D.42297_904 = buf_144 + D.42296_903;
  D.42298_905 = strlen (buf_144);
  D.42299_906 = 65536 - D.42298_905;
  D.42279_907 = imp_876->iananame;
  D.42294_908 = imp_876->samples_per_second;
  switch_snprintf (D.42297_904, D.42299_906, "a=rtpmap:%d %s/%d\n", ianacode_879, D.42279_907, D.42294_908);

<bb 343>:
  # DEBUG s => ov_fmtp_76
  if (ov_fmtp_76 == 0B)
    goto <bb 346>;
  else
    goto <bb 344>;

<bb 344>:
  D.48172_1536 = *ov_fmtp_76;
  if (D.48172_1536 == 0)
    goto <bb 346>;
  else
    goto <bb 345>;

<bb 345>:

<bb 346>:
  # D.48171_1537 = PHI <1(343), 1(344), 0(345)>
  if (D.48171_1537 == 0)
    goto <bb 361>;
  else
    goto <bb 347>;

<bb 347>:
  map.33_911 = map;
  if (map.33_911 != 0B)
    goto <bb 348>;
  else
    goto <bb 349>;

<bb 348>:
  map.33_912 = map;
  D.42279_913 = imp_876->iananame;
  fmtp_914 = switch_event_get_header_idx (map.33_912, D.42279_913, -1);
  # DEBUG fmtp => fmtp_914

<bb 349>:
  # fmtp_53 = PHI <0B(347), fmtp_914(348)>
  # DEBUG fmtp => fmtp_53
  D.42306_915 = smh_90->fmtps[i_52];
  if (D.42306_915 != 0B)
    goto <bb 350>;
  else
    goto <bb 351>;

<bb 350>:
  fmtp_916 = smh_90->fmtps[i_52];
  # DEBUG fmtp => fmtp_916

<bb 351>:
  # fmtp_54 = PHI <fmtp_53(349), fmtp_916(350)>
  # DEBUG fmtp => fmtp_54
  # DEBUG s => fmtp_54
  if (fmtp_54 == 0B)
    goto <bb 354>;
  else
    goto <bb 352>;

<bb 352>:
  D.48176_1538 = MEM[(const char *)fmtp_54];
  if (D.48176_1538 == 0)
    goto <bb 354>;
  else
    goto <bb 353>;

<bb 353>:

<bb 354>:
  # D.48175_1539 = PHI <1(351), 1(352), 0(353)>
  if (D.48175_1539 != 0)
    goto <bb 355>;
  else
    goto <bb 356>;

<bb 355>:
  fmtp_918 = imp_876->fmtp;
  # DEBUG fmtp => fmtp_918

<bb 356>:
  # fmtp_55 = PHI <fmtp_54(354), fmtp_918(355)>
  # DEBUG fmtp => fmtp_55
  # DEBUG s => fmtp_55
  if (fmtp_55 == 0B)
    goto <bb 359>;
  else
    goto <bb 357>;

<bb 357>:
  D.48180_1540 = MEM[(const char *)fmtp_55];
  if (D.48180_1540 == 0)
    goto <bb 359>;
  else
    goto <bb 358>;

<bb 358>:

<bb 359>:
  # D.48179_1541 = PHI <1(356), 1(357), 0(358)>
  if (D.48179_1541 != 0)
    goto <bb 360>;
  else
    goto <bb 361>;

<bb 360>:
  # DEBUG fmtp => pass_fmtp_20

<bb 361>:
  # fmtp_56 = PHI <ov_fmtp_76(346), fmtp_55(359), pass_fmtp_20(360)>
  # DEBUG fmtp => fmtp_56
  # DEBUG s => fmtp_56
  if (fmtp_56 == 0B)
    goto <bb 364>;
  else
    goto <bb 362>;

<bb 362>:
  D.48184_1542 = MEM[(const char *)fmtp_56];
  if (D.48184_1542 == 0)
    goto <bb 364>;
  else
    goto <bb 363>;

<bb 363>:

<bb 364>:
  # D.48183_1543 = PHI <1(361), 1(362), 0(363)>
  if (D.48183_1543 == 0)
    goto <bb 365>;
  else
    goto <bb 367>;

<bb 365>:
  D.42318_922 = strcasecmp (fmtp_56, "_blank_");
  if (D.42318_922 != 0)
    goto <bb 366>;
  else
    goto <bb 367>;

<bb 366>:
  D.42321_923 = strlen (buf_144);
  D.42322_924 = buf_144 + D.42321_923;
  D.42323_925 = strlen (buf_144);
  D.42324_926 = 65536 - D.42323_925;
  switch_snprintf (D.42322_924, D.42324_926, "a=fmtp:%d %s\n", ianacode_879, fmtp_56);

<bb 367>:
  # vp8_24 = PHI <vp8_25(328), vp8_25(331), vp8_25(334), vp8_23(364), vp8_23(365), vp8_23(366)>
  # red_30 = PHI <red_31(328), red_31(331), red_31(334), red_29(364), red_29(365), red_29(366)>
  # DEBUG red => red_30
  # DEBUG vp8 => vp8_24
  # DEBUG rate => NULL
  i_927 = i_52 + 1;
  # DEBUG i => i_927

<bb 368>:
  # vp8_25 = PHI <vp8_27(326), vp8_24(367)>
  # red_31 = PHI <red_33(326), red_30(367)>
  # i_52 = PHI <0(326), i_927(367)>
  # DEBUG i => i_52
  # DEBUG red => red_31
  # DEBUG vp8 => vp8_25
  # DEBUG rate => NULL
  D.41522_874 = smh_90->mparams;
  D.41587_875 = D.41522_874->num_codecs;
  if (D.41587_875 > i_52)
    goto <bb 327>;
  else
    goto <bb 369>;

<bb 369>:
  # pass_fmtp_19 = PHI <pass_fmtp_18(324), pass_fmtp_20(325), pass_fmtp_20(368), pass_fmtp_18(319)>
  # vp8_26 = PHI <vp8_22(324), vp8_27(325), vp8_25(368), vp8_22(319)>
  # red_32 = PHI <red_28(324), red_33(325), red_31(368), red_28(319)>
  # DEBUG red => red_32
  # DEBUG vp8 => vp8_26
  # DEBUG pass_fmtp => pass_fmtp_19
  # DEBUG rate => NULL
  if (is_outbound_89 != 0)
    goto <bb 371>;
  else
    goto <bb 370>;

<bb 370>:
  D.41512_928 = session_72(D)->channel;
  D.42328_929 = switch_channel_test_flag (D.41512_928, 84);
  if (D.42328_929 != 0)
    goto <bb 371>;
  else
    goto <bb 373>;

<bb 371>:
  D.41534_930 = smh_90->session;
  D.41535_931 = D.41534_930->channel;
  D.42329_932 = switch_channel_test_flag (D.41535_931, 109);
  if (D.42329_932 != 0)
    goto <bb 372>;
  else
    goto <bb 373>;

<bb 372>:
  generate_local_fingerprint (smh_90, 1);

<bb 373>:
  D.42332_933 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
  # DEBUG s => D.42332_933
  if (D.42332_933 == 0B)
    goto <bb 376>;
  else
    goto <bb 374>;

<bb 374>:
  D.48188_1544 = MEM[(const char *)D.42332_933];
  if (D.48188_1544 == 0)
    goto <bb 376>;
  else
    goto <bb 375>;

<bb 375>:

<bb 376>:
  # D.48187_1545 = PHI <1(373), 1(374), 0(375)>
  if (D.48187_1545 == 0)
    goto <bb 377>;
  else
    goto <bb 378>;

<bb 377>:
  D.42336_935 = strlen (buf_144);
  D.42337_936 = buf_144 + D.42336_935;
  D.42338_937 = strlen (buf_144);
  D.42339_938 = 65536 - D.42338_937;
  D.42332_939 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.type;
  D.42340_940 = &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_dtls_fingerprint.str;
  switch_snprintf (D.42337_936, D.42339_938, "a=fingerprint:%s %s\n", D.42332_939, D.42340_940);

<bb 378>:
  D.41522_941 = smh_90->mparams;
  D.41527_942 = D.41522_941->rtcp_video_interval_msec;
  if (D.41527_942 != 0B)
    goto <bb 379>;
  else
    goto <bb 382>;

<bb 379>:
  D.42343_943 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  if (D.42343_943 > 0)
    goto <bb 380>;
  else
    goto <bb 381>;

<bb 380>:
  D.42346_944 = strlen (buf_144);
  D.42347_945 = buf_144 + D.42346_944;
  D.42348_946 = strlen (buf_144);
  D.42349_947 = 65536 - D.42348_946;
  switch_snprintf (D.42347_945, D.42349_947, "a=rtcp-mux\n");
  D.42350_948 = strlen (buf_144);
  D.42351_949 = buf_144 + D.42350_948;
  D.42352_950 = strlen (buf_144);
  D.42353_951 = 65536 - D.42352_950;
  switch_snprintf (D.42351_949, D.42353_951, "a=rtcp:%d IN %s %s\n", v_port_721, family_59, ip_1);
  goto <bb 382>;

<bb 381>:
  D.42355_952 = strlen (buf_144);
  D.42356_953 = buf_144 + D.42355_952;
  D.42357_954 = strlen (buf_144);
  D.42358_955 = 65536 - D.42357_954;
  D.42359_956 = v_port_721 + 1;
  switch_snprintf (D.42356_953, D.42358_955, "a=rtcp:%d IN %s %s\n", D.42359_956, family_59, ip_1);

<bb 382>:
  D.42360_957 = BIT_FIELD_REF <MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B], 16, 91280>;
  D.42361_958 = D.42360_957 & 65535;
  if (D.42361_958 != 0)
    goto <bb 383>;
  else
    goto <bb 388>;

<bb 383>:
  D.42364_959 = strlen (buf_144);
  D.42365_960 = buf_144 + D.42364_959;
  D.42366_961 = strlen (buf_144);
  D.42367_962 = 65536 - D.42366_961;
  D.42369_963 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].fir;
  if (D.42369_963 != 0)
    goto <bb 385>;
  else
    goto <bb 384>;

<bb 384>:

<bb 385>:
  # iftmp.37_67 = PHI <"fir "(383), ""(384)>
  D.42374_966 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].pli;
  if (D.42374_966 != 0)
    goto <bb 387>;
  else
    goto <bb 386>;

<bb 386>:

<bb 387>:
  # iftmp.38_68 = PHI <"pli"(385), ""(386)>
  switch_snprintf (D.42365_960, D.42367_962, "a=rtcp-fb:* %s%s\n", iftmp.37_67, iftmp.38_68);

<bb 388>:
  D.42378_969 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out.cands[0][0].ready;
  if (D.42378_969 != 0)
    goto <bb 389>;
  else
    goto <bb 422>;

<bb 389>:
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  # DEBUG c3 => 659126
  # DEBUG c4 => 659124
  # DEBUG bw => 256
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  # DEBUG D#26 => &MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ice_out
  # DEBUG ice_out => D#26
  D.41534_976 = smh_90->session;
  D.41535_977 = D.41534_976->channel;
  vbw_978 = switch_channel_get_variable_dup (D.41535_977, "rtp_video_max_bandwidth", 1, -1);
  # DEBUG vbw => vbw_978
  if (vbw_978 != 0B)
    goto <bb 390>;
  else
    goto <bb 391>;

<bb 390>:
  # DEBUG __nptr => vbw_978
  v_1546 = strtol (vbw_978, 0B, 10);
  # DEBUG v => NULL
  # DEBUG bw => v_1546

<bb 391>:
  # bw_57 = PHI <256(389), v_1546(390)>
  # DEBUG bw => bw_57
  if (bw_57 > 0)
    goto <bb 392>;
  else
    goto <bb 393>;

<bb 392>:
  D.42385_981 = strlen (buf_144);
  D.42386_982 = buf_144 + D.42385_981;
  D.42387_983 = strlen (buf_144);
  D.42388_984 = 65536 - D.42387_983;
  switch_snprintf (D.42386_982, D.42388_984, "b=AS:%d\n", bw_57);

<bb 393>:
  if (vp8_26 != 0)
    goto <bb 394>;
  else
    goto <bb 396>;

<bb 394>:
  D.41512_985 = session_72(D)->channel;
  D.42391_986 = switch_channel_test_flag (D.41512_985, 106);
  if (D.42391_986 != 0)
    goto <bb 395>;
  else
    goto <bb 396>;

<bb 395>:
  D.42394_987 = strlen (buf_144);
  D.42395_988 = buf_144 + D.42394_987;
  D.42396_989 = strlen (buf_144);
  D.42397_990 = 65536 - D.42396_989;
  switch_snprintf (D.42395_988, D.42397_990, "a=rtcp-fb:%d ccm fir\n", vp8_26);

<bb 396>:
  if (red_32 != 0)
    goto <bb 397>;
  else
    goto <bb 398>;

<bb 397>:
  D.42400_991 = strlen (buf_144);
  D.42401_992 = buf_144 + D.42400_991;
  D.42402_993 = strlen (buf_144);
  D.42403_994 = 65536 - D.42402_993;
  switch_snprintf (D.42401_992, D.42403_994, "a=rtcp-fb:%d nack\n", vp8_26);

<bb 398>:
  D.42404_995 = strlen (buf_144);
  D.42405_996 = buf_144 + D.42404_995;
  D.42406_997 = strlen (buf_144);
  D.42407_998 = 65536 - D.42406_997;
  D.42408_999 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41935_1000 = smh_90->cname;
  switch_snprintf (D.42405_996, D.42407_998, "a=ssrc:%u cname:%s\n", D.42408_999, D.41935_1000);
  D.42409_1001 = strlen (buf_144);
  D.42410_1002 = buf_144 + D.42409_1001;
  D.42411_1003 = strlen (buf_144);
  D.42412_1004 = 65536 - D.42411_1003;
  D.42408_1005 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1006 = smh_90->msid;
  switch_snprintf (D.42410_1002, D.42412_1004, "a=ssrc:%u msid:%s v0\n", D.42408_1005, D.41719_1006);
  D.42413_1007 = strlen (buf_144);
  D.42414_1008 = buf_144 + D.42413_1007;
  D.42415_1009 = strlen (buf_144);
  D.42416_1010 = 65536 - D.42415_1009;
  D.42408_1011 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1012 = smh_90->msid;
  switch_snprintf (D.42414_1008, D.42416_1010, "a=ssrc:%u mslabel:%s\n", D.42408_1011, D.41719_1012);
  D.42417_1013 = strlen (buf_144);
  D.42418_1014 = buf_144 + D.42417_1013;
  D.42419_1015 = strlen (buf_144);
  D.42420_1016 = 65536 - D.42419_1015;
  D.42408_1017 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssrc;
  D.41719_1018 = smh_90->msid;
  switch_snprintf (D.42418_1014, D.42420_1016, "a=ssrc:%u label:%sv0\n", D.42408_1017, D.41719_1018);
  D.42421_1019 = strlen (buf_144);
  D.42422_1020 = buf_144 + D.42421_1019;
  D.42423_1021 = strlen (buf_144);
  D.42424_1022 = 65536 - D.42423_1021;
  D.41952_1023 = MEM[(struct ice_t *)smh_90 + 17896B].ufrag;
  switch_snprintf (D.42422_1020, D.42424_1022, "a=ice-ufrag:%s\n", D.41952_1023);
  D.42425_1024 = strlen (buf_144);
  D.42426_1025 = buf_144 + D.42425_1024;
  D.42427_1026 = strlen (buf_144);
  D.42428_1027 = 65536 - D.42427_1026;
  D.41957_1028 = MEM[(struct ice_t *)smh_90 + 17896B].pwd;
  switch_snprintf (D.42426_1025, D.42428_1027, "a=ice-pwd:%s\n", D.41957_1028);
  D.42429_1029 = strlen (buf_144);
  D.42430_1030 = buf_144 + D.42429_1029;
  D.42431_1031 = strlen (buf_144);
  D.42432_1032 = 65536 - D.42431_1031;
  D.41962_1033 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1034 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1035 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1036 = (int) D.41964_1035;
  switch_snprintf (D.42430_1030, D.42432_1032, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1033, 659136, D.41963_1034, D.41965_1036);
  D.42433_1037 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  # DEBUG s => D.42433_1037
  if (D.42433_1037 == 0B)
    goto <bb 401>;
  else
    goto <bb 399>;

<bb 399>:
  D.48195_1547 = MEM[(const char *)D.42433_1037];
  if (D.48195_1547 == 0)
    goto <bb 401>;
  else
    goto <bb 400>;

<bb 400>:

<bb 401>:
  # D.48194_1548 = PHI <1(398), 1(399), 0(400)>
  if (D.48194_1548 == 0)
    goto <bb 402>;
  else
    goto <bb 409>;

<bb 402>:
  D.41963_1039 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  # DEBUG s => D.41963_1039
  if (D.41963_1039 == 0B)
    goto <bb 405>;
  else
    goto <bb 403>;

<bb 403>:
  D.48199_1549 = MEM[(const char *)D.41963_1039];
  if (D.48199_1549 == 0)
    goto <bb 405>;
  else
    goto <bb 404>;

<bb 404>:

<bb 405>:
  # D.48198_1550 = PHI <1(402), 1(403), 0(404)>
  if (D.48198_1550 == 0)
    goto <bb 406>;
  else
    goto <bb 409>;

<bb 406>:
  D.42433_1041 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.41963_1042 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.39666_1043 = __builtin_strcmp (D.42433_1041, D.41963_1042);
  if (D.39666_1043 != 0)
    goto <bb 407>;
  else
    goto <bb 409>;

<bb 407>:
  D.42106_1044 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.41964_1045 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  if (D.42106_1044 != D.41964_1045)
    goto <bb 408>;
  else
    goto <bb 409>;

<bb 408>:
  D.42444_1046 = strlen (buf_144);
  D.42445_1047 = buf_144 + D.42444_1046;
  D.42446_1048 = strlen (buf_144);
  D.42447_1049 = 65536 - D.42446_1048;
  D.41962_1050 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1051 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1052 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1053 = (int) D.41964_1052;
  D.42433_1054 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42106_1055 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42448_1056 = (int) D.42106_1055;
  switch_snprintf (D.42445_1047, D.42447_1049, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.41962_1050, 659126, D.41963_1051, D.41965_1053, D.42433_1054, D.42448_1056);

<bb 409>:
  D.42343_1057 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42451_1058 = D.42343_1057 <= 0;
  D.41986_1059 = is_outbound_89 != 0;
  D.42452_1060 = D.42451_1058 || D.41986_1059;
  if (D.42452_1060 != 0)
    goto <bb 411>;
  else
    goto <bb 410>;

<bb 410>:
  D.41512_1061 = session_72(D)->channel;
  D.42454_1062 = switch_channel_test_flag (D.41512_1061, 84);
  if (D.42454_1062 != 0)
    goto <bb 411>;
  else
    goto <bb 422>;

<bb 411>:
  D.42455_1063 = strlen (buf_144);
  D.42456_1064 = buf_144 + D.42455_1063;
  D.42457_1065 = strlen (buf_144);
  D.42458_1066 = 65536 - D.42457_1065;
  D.41962_1067 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1068 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1069 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1070 = (int) D.41964_1069;
  D.42343_1071 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1072 = D.42343_1071 <= 0;
  D.42460_1073 = D.41965_1070 + D.42459_1072;
  switch_snprintf (D.42456_1064, D.42458_1066, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.41962_1067, 659134, D.41963_1068, D.42460_1073);
  D.42433_1074 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  # DEBUG s => D.42433_1074
  if (D.42433_1074 == 0B)
    goto <bb 414>;
  else
    goto <bb 412>;

<bb 412>:
  D.48203_1551 = MEM[(const char *)D.42433_1074];
  if (D.48203_1551 == 0)
    goto <bb 414>;
  else
    goto <bb 413>;

<bb 413>:

<bb 414>:
  # D.48202_1552 = PHI <1(411), 1(412), 0(413)>
  if (D.48202_1552 == 0)
    goto <bb 415>;
  else
    goto <bb 422>;

<bb 415>:
  D.42464_1076 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
  # DEBUG s => D.42464_1076
  if (D.42464_1076 == 0B)
    goto <bb 418>;
  else
    goto <bb 416>;

<bb 416>:
  D.48207_1553 = MEM[(const char *)D.42464_1076];
  if (D.48207_1553 == 0)
    goto <bb 418>;
  else
    goto <bb 417>;

<bb 417>:

<bb 418>:
  # D.48206_1554 = PHI <1(415), 1(416), 0(417)>
  if (D.48206_1554 == 0)
    goto <bb 419>;
  else
    goto <bb 422>;

<bb 419>:
  D.42433_1078 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42464_1079 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_addr;
  D.39675_1080 = __builtin_strcmp (D.42433_1078, D.42464_1079);
  if (D.39675_1080 != 0)
    goto <bb 420>;
  else
    goto <bb 422>;

<bb 420>:
  D.42106_1081 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42470_1082 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][1].con_port;
  if (D.42106_1081 != D.42470_1082)
    goto <bb 421>;
  else
    goto <bb 422>;

<bb 421>:
  D.42473_1083 = strlen (buf_144);
  D.42474_1084 = buf_144 + D.42473_1083;
  D.42475_1085 = strlen (buf_144);
  D.42476_1086 = 65536 - D.42475_1085;
  D.41962_1087 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].transport;
  D.41963_1088 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_addr;
  D.41964_1089 = MEM[(struct ice_t *)smh_90 + 17896B].cands[0][0].con_port;
  D.41965_1090 = (int) D.41964_1089;
  D.42343_1091 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1092 = D.42343_1091 <= 0;
  D.42460_1093 = D.41965_1090 + D.42459_1092;
  D.42433_1094 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_ip;
  D.42106_1095 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].local_sdp_port;
  D.42448_1096 = (int) D.42106_1095;
  D.42343_1097 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].rtcp_mux;
  D.42459_1098 = D.42343_1097 <= 0;
  D.42477_1099 = D.42448_1096 + D.42459_1098;
  switch_snprintf (D.42474_1084, D.42476_1086, "a=candidate:%s 2 %s %u %s %d typ srflx generation 0\n", &tmp2, D.41962_1087, 659124, D.41963_1088, D.42460_1093, D.42433_1094, D.42477_1099);

<bb 422>:
  if (loops_48 == 0)
    goto <bb 423>;
  else
    goto <bb 435>;

<bb 423>:
  D.41512_1100 = session_72(D)->channel;
  D.42480_1101 = switch_channel_test_flag (D.41512_1100, 92);
  if (D.42480_1101 != 0)
    goto <bb 424>;
  else
    goto <bb 435>;

<bb 424>:
  D.41512_1102 = session_72(D)->channel;
  D.42483_1103 = switch_channel_test_flag (D.41512_1102, 109);
  if (D.42483_1103 == 0)
    goto <bb 425>;
  else
    goto <bb 435>;

<bb 425>:
  # i_1579 = PHI <0(424)>
  goto <bb 434>;

<bb 426>:
  D.42486_1106 = smh_90->crypto_suite_order[i_58];
  j_1107 = SUITES[D.42486_1106].type;
  # DEBUG j => j_1107
  D.41736_1108 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_1108 == j_1107)
    goto <bb 428>;
  else
    goto <bb 427>;

<bb 427>:
  D.41736_1109 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].crypto_type;
  if (D.41736_1109 == 9)
    goto <bb 428>;
  else
    goto <bb 433>;

<bb 428>:
  D.42490_1110 = MEM[(struct switch_rtp_engine_t *)smh_90 + 80B].ssec[j_1107].local_crypto_key;
  # DEBUG s => D.42490_1110
  if (D.42490_1110 == 0B)
    goto <bb 431>;
  else
    goto <bb 429>;

<bb 429>:
  D.48211_1555 = MEM[(const char *)D.42490_1110];
  if (D.48211_1555 == 0)
    goto <bb 431>;
  else
    goto <bb 430>;

<bb 430>:

<bb 431>:
  # D.48210_1556 = PHI <1(428), 1(429), 0(430)>
  if (D.48210_1556 == 0)
    goto <bb 432>;
  else
    goto <bb 433>;

<bb 432>:
  D.42494_1112 = strlen (buf_144);
  D.42495_1113 = buf_144 + D.42494_1112;
  D.42496_1114 = strlen (buf_144);
  D.42497_1115 = 65536 - D.42496_1114;
  D.42498_1116 = MEM[(struct switch_rtp_engine_t *)smh_90 + 11496B].ssec[j_1107].local_crypto_key;
  switch_snprintf (D.42495_1113, D.42497_1115, "a=crypto:%s\n", D.42498_1116);

<bb 433>:
  i_1117 = i_58 + 1;
  # DEBUG i => i_1117

<bb 434>:
  # i_58 = PHI <i_1579(425), i_1117(433)>
  # DEBUG i => i_58
  D.42486_1105 = smh_90->crypto_suite_order[i_58];
  if (D.42486_1105 != 9)
    goto <bb 426>;
  else
    goto <bb 435>;

<bb 435>:
  if (local_sdp_video_zrtp_hash_84 != 0B)
    goto <bb 436>;
  else
    goto <bb 437>;

<bb 436>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 6892, session_72(D), 7, "Adding video a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);
  D.42501_1118 = strlen (buf_144);
  D.42502_1119 = buf_144 + D.42501_1118;
  D.42503_1120 = strlen (buf_144);
  D.42504_1121 = 65536 - D.42503_1120;
  switch_snprintf (D.42502_1119, D.42504_1121, "a=zrtp-hash:%s\n", local_sdp_video_zrtp_hash_84);

<bb 437>:
  D.41512_1122 = session_72(D)->channel;
  D.42505_1123 = switch_channel_test_flag (D.41512_1122, 109);
  if (D.42505_1123 != 0)
    goto <bb 443>;
  else
    goto <bb 438>;

<bb 438>:
  D.41512_1124 = session_72(D)->channel;
  D.42507_1125 = switch_channel_test_flag (D.41512_1124, 92);
  if (D.42507_1125 == 0)
    goto <bb 443>;
  else
    goto <bb 439>;

<bb 439>:
  D.42058_1126 = smh_90->crypto_mode;
  if (D.42058_1126 == 1)
    goto <bb 443>;
  else
    goto <bb 440>;

<bb 440>:
  D.42058_1127 = smh_90->crypto_mode;
  if (D.42058_1127 == 2)
    goto <bb 443>;
  else
    goto <bb 441>;

<bb 441>:
  loops_1128 = loops_48 + 1;
  # DEBUG loops => loops_1128

<bb 442>:
  # pass_fmtp_20 = PHI <pass_fmtp_1164(265), pass_fmtp_19(441)>
  # vp8_27 = PHI <vp8_1192(265), vp8_26(441)>
  # red_33 = PHI <red_1197(265), red_32(441)>
  # loops_48 = PHI <loops_1201(265), loops_1128(441)>
  # DEBUG loops => loops_48
  # DEBUG red => red_33
  # DEBUG vp8 => vp8_27
  # DEBUG pass_fmtp => pass_fmtp_20
  # DEBUG rate => NULL
  # DEBUG ptime => NULL
  if (loops_48 <= 1)
    goto <bb 266>;
  else
    goto <bb 443>;

<bb 443>:
  map.33_1129 = map;
  if (map.33_1129 != 0B)
    goto <bb 444>;
  else
    goto <bb 445>;

<bb 444>:
  switch_event_destroy (&map);

<bb 445>:
  ptmap.39_1130 = ptmap;
  if (ptmap.39_1130 != 0B)
    goto <bb 446>;
  else
    goto <bb 447>;

<bb 446>:
  switch_event_destroy (&ptmap);

<bb 447>:
  switch_core_media_set_local_sdp (session_72(D), buf_144, 1);
  if (buf_144 != 0B)
    goto <bb 448>;
  else
    goto <bb 449>;

<bb 448>:
  free (buf_144);
  # DEBUG buf => 0B

<bb 449>:
  return;

}



;; Function switch_core_media_absorb_sdp (switch_core_media_absorb_sdp)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;;
;; Loop 1
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 11 16 17 14 15 12 13 10 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 22 5 }
;; 5 succs { 6 22 }
;; 6 succs { 7 21 }
;; 7 succs { 8 20 }
;; 8 succs { 19 }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 18 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 20 18 }
;; 18 succs { 19 }
;; 19 succs { 9 20 }
;; 20 succs { 21 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 6930, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_4

Marking useful stmt: # DEBUG D#33 => &smh_4->engines

Marking useful stmt: # DEBUG a_engine => D#33

Marking useful stmt: sdp_str_7 = switch_channel_get_variable_dup (D.41484_6, "switch_m_sdp", 1, -1);

Marking useful stmt: # DEBUG sdp_str => sdp_str_7

Marking useful stmt: parser_10 = sdp_parse (0B, sdp_str_7, D.41488_9, 0);

Marking useful stmt: # DEBUG parser => parser_10

Marking useful stmt: sdp_11 = sdp_session (parser_10);

Marking useful stmt: # DEBUG sdp => sdp_11

Marking useful stmt: # DEBUG m => m_12

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG connection => connection_15

Marking useful stmt: # DEBUG connection => connection_17

Marking useful stmt: # DEBUG connection => connection_2

Marking useful stmt: D.41504_19 = switch_core_perform_session_strdup (session_3(D), D.41503_18, "src/switch_core_media.c", &__func__, 6957);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip = D.41504_19;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port = D.41505_21;

Marking useful stmt: # DEBUG m => m_24

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: sdp_parser_free (parser_10);

Marking useful stmt: switch_core_media_set_local_sdp (session_3(D), sdp_str_7, 1);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_12(8), m_24(18)>
)
  (init_cond = m_12))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_12(8), m_24(18)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.41495_13 != 2)

Marking useful stmt: if (D.41497_14 == 0)

Marking useful stmt: if (D.41506_22 != 0B)

Marking useful stmt: if (D.41509_23 != 0)


Processing worklist:
processing: if (D.41509_23 != 0)

marking necessary through D.41509_23 stmt D.41509_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port;
processing: D.41509_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port;

marking necessary through smh_4 stmt smh_4 = session_3(D)->media_handle;
processing: smh_4 = session_3(D)->media_handle;

Marking useful stmt: if (session_3(D) == 0B)

processing: if (session_3(D) == 0B)

processing: if (D.41506_22 != 0B)

marking necessary through D.41506_22 stmt D.41506_22 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip;
processing: D.41506_22 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip;

processing: if (D.41497_14 == 0)

marking necessary through D.41497_14 stmt D.41497_14 = m_1->m_port;
processing: D.41497_14 = m_1->m_port;

marking necessary through m_1 stmt m_1 = PHI <m_12(8), m_24(18)>
processing: m_1 = PHI <m_12(8), m_24(18)>

Marking useful stmt: if (sdp_11 != 0B)

marking necessary through m_12 stmt m_12 = sdp_11->sdp_media;
marking necessary through m_24 stmt m_24 = m_1->m_next;
processing: m_24 = m_1->m_next;

processing: m_12 = sdp_11->sdp_media;

processing: if (sdp_11 != 0B)

Marking useful stmt: if (parser_10 != 0B)

processing: if (parser_10 != 0B)

Marking useful stmt: if (sdp_str_7 != 0B)

processing: if (sdp_str_7 != 0B)

Marking useful stmt: if (smh_4 == 0B)

processing: if (smh_4 == 0B)

processing: if (D.41495_13 != 2)

Marking useful stmt: if (m_1 != 0B)

marking necessary through D.41495_13 stmt D.41495_13 = m_1->m_type;
processing: D.41495_13 = m_1->m_type;

processing: if (m_1 != 0B)

processing: return;

processing: switch_core_media_set_local_sdp (session_3(D), sdp_str_7, 1);

processing: sdp_parser_free (parser_10);

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port = D.41505_21;

marking necessary through D.41505_21 stmt D.41505_21 = (short unsigned int) D.41497_20;
processing: D.41505_21 = (short unsigned int) D.41497_20;

marking necessary through D.41497_20 stmt D.41497_20 = m_1->m_port;
processing: D.41497_20 = m_1->m_port;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip = D.41504_19;

Marking useful stmt: if (connection_2 != 0B)

processing: if (connection_2 != 0B)

marking necessary through connection_2 stmt connection_2 = PHI <connection_15(12), connection_17(13)>
processing: connection_2 = PHI <connection_15(12), connection_17(13)>

marking necessary through connection_15 stmt connection_15 = sdp_11->sdp_connection;
marking necessary through connection_17 stmt connection_17 = m_1->m_connections;
Marking useful stmt: if (D.41498_16 != 0B)

processing: if (D.41498_16 != 0B)

marking necessary through D.41498_16 stmt D.41498_16 = m_1->m_connections;
processing: D.41498_16 = m_1->m_connections;

processing: connection_17 = m_1->m_connections;

processing: connection_15 = sdp_11->sdp_connection;

processing: D.41504_19 = switch_core_perform_session_strdup (session_3(D), D.41503_18, "src/switch_core_media.c", &__func__, 6957);

marking necessary through D.41503_18 stmt D.41503_18 = connection_2->c_address;
processing: D.41503_18 = connection_2->c_address;

processing: sdp_11 = sdp_session (parser_10);

processing: parser_10 = sdp_parse (0B, sdp_str_7, D.41488_9, 0);

marking necessary through D.41488_9 stmt D.41488_9 = (int) D.41487_8;
processing: D.41488_9 = (int) D.41487_8;

marking necessary through D.41487_8 stmt D.41487_8 = strlen (sdp_str_7);
processing: D.41487_8 = strlen (sdp_str_7);

processing: sdp_str_7 = switch_channel_get_variable_dup (D.41484_6, "switch_m_sdp", 1, -1);

marking necessary through D.41484_6 stmt D.41484_6 = session_3(D)->channel;
processing: D.41484_6 = session_3(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 6930, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 51 statements (0%)
Removed 0 of 7 PHI nodes (0%)
switch_core_media_absorb_sdp (struct switch_core_session_t * session)
{
  struct sdp_connection_t * connection;
  struct sdp_media_t * m;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  static const char __func__[29] = "switch_core_media_absorb_sdp";
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_absorb_sdp";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine;
  const char * sdp_str;
  switch_port_t D.41509;
  char * D.41506;
  short unsigned int D.41505;
  char * D.41504;
  const char * D.41503;
  struct sdp_connection_t * D.41498;
  long unsigned int D.41497;
  sdp_media_e D.41495;
  int D.41488;
  size_t D.41487;
  struct switch_channel_t * D.41484;

<bb 2>:
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6930, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#33 => &smh_4->engines
  # DEBUG a_engine => D#33
  D.41484_6 = session_3(D)->channel;
  sdp_str_7 = switch_channel_get_variable_dup (D.41484_6, "switch_m_sdp", 1, -1);
  # DEBUG sdp_str => sdp_str_7
  if (sdp_str_7 != 0B)
    goto <bb 6>;
  else
    goto <bb 22>;

<bb 6>:
  D.41487_8 = strlen (sdp_str_7);
  D.41488_9 = (int) D.41487_8;
  parser_10 = sdp_parse (0B, sdp_str_7, D.41488_9, 0);
  # DEBUG parser => parser_10
  if (parser_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 21>;

<bb 7>:
  sdp_11 = sdp_session (parser_10);
  # DEBUG sdp => sdp_11
  if (sdp_11 != 0B)
    goto <bb 8>;
  else
    goto <bb 20>;

<bb 8>:
  m_12 = sdp_11->sdp_media;
  # DEBUG m => m_12
  goto <bb 19>;

<bb 9>:
  D.41495_13 = m_1->m_type;
  if (D.41495_13 != 2)
    goto <bb 11>;
  else
    goto <bb 10>;

<bb 10>:
  D.41497_14 = m_1->m_port;
  if (D.41497_14 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  // predicted unlikely by continue predictor.
  goto <bb 18>;

<bb 12>:
  connection_15 = sdp_11->sdp_connection;
  # DEBUG connection => connection_15
  D.41498_16 = m_1->m_connections;
  if (D.41498_16 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  connection_17 = m_1->m_connections;
  # DEBUG connection => connection_17

<bb 14>:
  # connection_2 = PHI <connection_15(12), connection_17(13)>
  # DEBUG connection => connection_2
  if (connection_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.41503_18 = connection_2->c_address;
  D.41504_19 = switch_core_perform_session_strdup (session_3(D), D.41503_18, "src/switch_core_media.c", &__func__, 6957);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip = D.41504_19;

<bb 16>:
  D.41497_20 = m_1->m_port;
  D.41505_21 = (short unsigned int) D.41497_20;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port = D.41505_21;
  D.41506_22 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_ip;
  if (D.41506_22 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

<bb 17>:
  D.41509_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].proxy_sdp_port;
  if (D.41509_23 != 0)
    goto <bb 20>;
  else
    goto <bb 18>;

<bb 18>:
  m_24 = m_1->m_next;
  # DEBUG m => m_24

<bb 19>:
  # m_1 = PHI <m_12(8), m_24(18)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 20>;

<bb 20>:
  sdp_parser_free (parser_10);

<bb 21>:
  switch_core_media_set_local_sdp (session_3(D), sdp_str_7, 1);

<bb 22>:
  return;

}



;; Function switch_core_media_set_udptl_image_sdp (switch_core_media_set_udptl_image_sdp)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 41 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 41 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 41 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 23 22 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 }
;; 41 succs { 1 }
Marking useful stmt: # DEBUG family => "IP4"

Marking useful stmt: # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval\n"

Marking useful stmt: # DEBUG bit_removal_off => ""

Marking useful stmt: # DEBUG mmr_on => "a=T38FaxTranscodingMMR\n"

Marking useful stmt: # DEBUG mmr_off => ""

Marking useful stmt: # DEBUG jbig_on => "a=T38FaxTranscodingJBIG\n"

Marking useful stmt: # DEBUG jbig_off => ""

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 6995, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_21

Marking useful stmt: # DEBUG D#34 => &smh_21->engines

Marking useful stmt: # DEBUG a_engine => D#34

Marking useful stmt: __assert_fail ("t38_options", "src/switch_core_media.c", 7004, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG ip => ip_24

Marking useful stmt: # DEBUG port => port_26

Marking useful stmt: # DEBUG username => username_28

Marking useful stmt: var_30 = switch_channel_get_variable_dup (D.41407_29, "t38_broken_boolean", 1, -1);

Marking useful stmt: # DEBUG var => var_30

Marking useful stmt: broken_boolean_31 = switch_true (var_30);

Marking useful stmt: # DEBUG broken_boolean => broken_boolean_31

Marking useful stmt: # DEBUG ip => ip_32

Marking useful stmt: # DEBUG ip => ip_33

Marking useful stmt: # DEBUG ip => ip_1

Marking useful stmt: D.41414_35 = switch_channel_get_name (D.41407_34);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 7022, 0B, 2, "%s NO IP!\n", D.41414_35);

Marking useful stmt: # DEBUG port => port_37

Marking useful stmt: # DEBUG port => port_39

Marking useful stmt: # DEBUG port => port_2

Marking useful stmt: D.41423_41 = switch_channel_get_name (D.41407_40);

Marking useful stmt: switch_log_printf (0, "src/switch_core_media.c", &__func__, 7033, 0B, 2, "%s NO PORT!\n", D.41423_41);

Marking useful stmt: D.41427_43 = switch_epoch_time_now (0B);

Marking useful stmt: smh_21->owner_id = D.41429_45;

Marking useful stmt: smh_21->session_id = D.41424_47;

Marking useful stmt: smh_21->session_id = D.41433_49;

Marking useful stmt: # DEBUG family => family_9

Marking useful stmt: switch_snprintf (&buf, 2048, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n", username_28, D.41424_54, D.41430_55, family_9, ip_1, username_28, family_9, ip_1);

Marking useful stmt: switch_snprintf (&max_buf, 128, "a=T38FaxMaxBuffer:%d\n", D.41439_57);

Marking useful stmt: switch_snprintf (&max_data, 128, "a=T38FaxMaxDatagram:%d\n", D.41442_59);

Marking useful stmt: # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval:1\n"

Marking useful stmt: # DEBUG bit_removal_off => "a=T38FaxFillBitRemoval:0\n"

Marking useful stmt: # DEBUG mmr_on => "a=T38FaxTranscodingMMR:1\n"

Marking useful stmt: # DEBUG mmr_off => "a=T38FaxTranscodingMMR:0\n"

Marking useful stmt: # DEBUG jbig_on => "a=T38FaxTranscodingJBIG:1\n"

Marking useful stmt: # DEBUG jbig_off => "a=T38FaxTranscodingJBIG:0\n"

Marking useful stmt: # DEBUG jbig_off => jbig_off_8

Marking useful stmt: # DEBUG jbig_on => jbig_on_7

Marking useful stmt: # DEBUG mmr_off => mmr_off_6

Marking useful stmt: # DEBUG mmr_on => mmr_on_5

Marking useful stmt: # DEBUG bit_removal_off => bit_removal_off_4

Marking useful stmt: # DEBUG bit_removal_on => bit_removal_on_3

Marking useful stmt: switch_snprintf (D.41448_67, D.41450_69, "m=image %d udptl t38\na=T38FaxVersion:%d\na=T38MaxBitRate:%d\n%s%s%sa=T38FaxRateManagement:%s\n%s%sa=T38FaxUdpEC:%s\n", port_2, D.41452_71, D.41453_72, bit_removal_on_10, mmr_on_11, jbig_on_12, D.41469_82, &max_buf, &max_data, D.41470_83);

Marking useful stmt: switch_snprintf (D.41474_86, D.41476_88, "m=audio 0 RTP/AVP 19\n");

Marking useful stmt: switch_core_media_set_local_sdp (session_20(D), &buf, 1);

Marking useful stmt: D.41477_90 = switch_channel_get_name (D.41407_89);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7113, session_20(D), 7, "%s image media sdp:\n%s\n", D.41477_90, D.41478_92);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (smh_21 == 0B)

Marking useful stmt: if (t38_options_23(D) == 0B)

processing: if (t38_options_23(D) == 0B)

processing: if (smh_21 == 0B)

Marking useful stmt: if (session_20(D) == 0B)

marking necessary through smh_21 stmt smh_21 = session_20(D)->media_handle;
processing: smh_21 = session_20(D)->media_handle;

marking necessary through .MEM_101 stmt max_data = "";
marking necessary through .MEM_100 stmt max_buf = "";
marking necessary through .MEM_99 stmt buf = "";
processing: buf = "";

processing: max_buf = "";

processing: max_data = "";

processing: if (session_20(D) == 0B)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7113, session_20(D), 7, "%s image media sdp:\n%s\n", D.41477_90, D.41478_92);

Marking useful stmt: if (port_2 == 0)

marking necessary through D.41478_92 stmt D.41478_92 = D.41406_91->local_sdp_str;
processing: D.41478_92 = D.41406_91->local_sdp_str;

marking necessary through D.41406_91 stmt D.41406_91 = smh_21->mparams;
processing: D.41406_91 = smh_21->mparams;

processing: if (port_2 == 0)

Marking useful stmt: if (ip_1 == 0B)

marking necessary through port_2 stmt port_2 = PHI <port_26(12), port_37(13), port_39(14)>
processing: port_2 = PHI <port_26(12), port_37(13), port_39(14)>

marking necessary through port_26 stmt port_26 = (uint32_t) D.41405_25;
marking necessary through port_37 stmt port_37 = (uint32_t) D.41417_36;
marking necessary through port_39 stmt port_39 = (uint32_t) D.41420_38;
Marking useful stmt: if (port_26 == 0)

Marking useful stmt: if (port_37 == 0)

processing: if (port_37 == 0)

processing: if (port_26 == 0)

processing: port_39 = (uint32_t) D.41420_38;

marking necessary through D.41420_38 stmt D.41420_38 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_port;
processing: D.41420_38 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_port;

processing: port_37 = (uint32_t) D.41417_36;

marking necessary through D.41417_36 stmt D.41417_36 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_port;
processing: D.41417_36 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_port;

processing: port_26 = (uint32_t) D.41405_25;

marking necessary through D.41405_25 stmt D.41405_25 = t38_options_23(D)->local_port;
processing: D.41405_25 = t38_options_23(D)->local_port;

processing: if (ip_1 == 0B)

marking necessary through ip_1 stmt ip_1 = PHI <ip_24(7), ip_32(8), ip_33(9)>
processing: ip_1 = PHI <ip_24(7), ip_32(8), ip_33(9)>

marking necessary through ip_24 stmt ip_24 = t38_options_23(D)->local_ip;
marking necessary through ip_32 stmt ip_32 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_ip;
marking necessary through ip_33 stmt ip_33 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_ip;
Marking useful stmt: if (ip_24 == 0B)

Marking useful stmt: if (ip_32 == 0B)

processing: if (ip_32 == 0B)

processing: if (ip_24 == 0B)

processing: ip_33 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_ip;

processing: ip_32 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_ip;

processing: ip_24 = t38_options_23(D)->local_ip;

processing: D.41477_90 = switch_channel_get_name (D.41407_89);

marking necessary through D.41407_89 stmt D.41407_89 = session_20(D)->channel;
processing: D.41407_89 = session_20(D)->channel;

processing: switch_core_media_set_local_sdp (session_20(D), &buf, 1);

processing: switch_snprintf (D.41474_86, D.41476_88, "m=audio 0 RTP/AVP 19\n");

Marking useful stmt: if (insist_84(D) != 0)

marking necessary through D.41474_86 stmt D.41474_86 = &buf + D.41473_85;
marking necessary through D.41476_88 stmt D.41476_88 = 2048 - D.41475_87;
processing: D.41476_88 = 2048 - D.41475_87;

marking necessary through D.41475_87 stmt D.41475_87 = strlen (&buf);
processing: D.41475_87 = strlen (&buf);

processing: D.41474_86 = &buf + D.41473_85;

marking necessary through D.41473_85 stmt D.41473_85 = strlen (&buf);
processing: D.41473_85 = strlen (&buf);

processing: if (insist_84(D) != 0)

processing: switch_snprintf (D.41448_67, D.41450_69, "m=image %d udptl t38\na=T38FaxVersion:%d\na=T38MaxBitRate:%d\n%s%s%sa=T38FaxRateManagement:%s\n%s%sa=T38FaxUdpEC:%s\n", port_2, D.41452_71, D.41453_72, bit_removal_on_10, mmr_on_11, jbig_on_12, D.41469_82, &max_buf, &max_data, D.41470_83);

marking necessary through D.41448_67 stmt D.41448_67 = &buf + D.41447_66;
marking necessary through D.41450_69 stmt D.41450_69 = 2048 - D.41449_68;
marking necessary through D.41452_71 stmt D.41452_71 = (int) D.41451_70;
marking necessary through D.41453_72 stmt D.41453_72 = t38_options_23(D)->T38MaxBitRate;
marking necessary through bit_removal_on_10 stmt bit_removal_on_10 = PHI <bit_removal_on_3(30), bit_removal_off_4(31)>
marking necessary through mmr_on_11 stmt mmr_on_11 = PHI <mmr_on_5(33), mmr_off_6(34)>
marking necessary through jbig_on_12 stmt jbig_on_12 = PHI <jbig_on_7(36), jbig_off_8(37)>
marking necessary through D.41469_82 stmt D.41469_82 = t38_options_23(D)->T38FaxRateManagement;
marking necessary through D.41470_83 stmt D.41470_83 = t38_options_23(D)->T38FaxUdpEC;
processing: D.41470_83 = t38_options_23(D)->T38FaxUdpEC;

processing: D.41469_82 = t38_options_23(D)->T38FaxRateManagement;

processing: jbig_on_12 = PHI <jbig_on_7(36), jbig_off_8(37)>

marking necessary through jbig_on_7 stmt jbig_on_7 = PHI <"a=T38FaxTranscodingJBIG\n"(27), "a=T38FaxTranscodingJBIG:1\n"(28)>
marking necessary through jbig_off_8 stmt jbig_off_8 = PHI <""(27), "a=T38FaxTranscodingJBIG:0\n"(28)>
Marking useful stmt: if (D.41465_79 != 0)

processing: if (D.41465_79 != 0)

marking necessary through D.41465_79 stmt D.41465_79 = t38_options_23(D)->T38FaxTranscodingJBIG;
processing: D.41465_79 = t38_options_23(D)->T38FaxTranscodingJBIG;

processing: jbig_off_8 = PHI <""(27), "a=T38FaxTranscodingJBIG:0\n"(28)>

Marking useful stmt: if (broken_boolean_31 != 0)

processing: if (broken_boolean_31 != 0)

processing: jbig_on_7 = PHI <"a=T38FaxTranscodingJBIG\n"(27), "a=T38FaxTranscodingJBIG:1\n"(28)>

processing: mmr_on_11 = PHI <mmr_on_5(33), mmr_off_6(34)>

marking necessary through mmr_on_5 stmt mmr_on_5 = PHI <"a=T38FaxTranscodingMMR\n"(27), "a=T38FaxTranscodingMMR:1\n"(28)>
marking necessary through mmr_off_6 stmt mmr_off_6 = PHI <""(27), "a=T38FaxTranscodingMMR:0\n"(28)>
Marking useful stmt: if (D.41460_76 != 0)

processing: if (D.41460_76 != 0)

marking necessary through D.41460_76 stmt D.41460_76 = t38_options_23(D)->T38FaxTranscodingMMR;
processing: D.41460_76 = t38_options_23(D)->T38FaxTranscodingMMR;

processing: mmr_off_6 = PHI <""(27), "a=T38FaxTranscodingMMR:0\n"(28)>

processing: mmr_on_5 = PHI <"a=T38FaxTranscodingMMR\n"(27), "a=T38FaxTranscodingMMR:1\n"(28)>

processing: bit_removal_on_10 = PHI <bit_removal_on_3(30), bit_removal_off_4(31)>

marking necessary through bit_removal_on_3 stmt bit_removal_on_3 = PHI <"a=T38FaxFillBitRemoval\n"(27), "a=T38FaxFillBitRemoval:1\n"(28)>
marking necessary through bit_removal_off_4 stmt bit_removal_off_4 = PHI <""(27), "a=T38FaxFillBitRemoval:0\n"(28)>
Marking useful stmt: if (D.41455_73 != 0)

processing: if (D.41455_73 != 0)

marking necessary through D.41455_73 stmt D.41455_73 = t38_options_23(D)->T38FaxFillBitRemoval;
processing: D.41455_73 = t38_options_23(D)->T38FaxFillBitRemoval;

processing: bit_removal_off_4 = PHI <""(27), "a=T38FaxFillBitRemoval:0\n"(28)>

processing: bit_removal_on_3 = PHI <"a=T38FaxFillBitRemoval\n"(27), "a=T38FaxFillBitRemoval:1\n"(28)>

processing: D.41453_72 = t38_options_23(D)->T38MaxBitRate;

processing: D.41452_71 = (int) D.41451_70;

marking necessary through D.41451_70 stmt D.41451_70 = t38_options_23(D)->T38FaxVersion;
processing: D.41451_70 = t38_options_23(D)->T38FaxVersion;

processing: D.41450_69 = 2048 - D.41449_68;

marking necessary through D.41449_68 stmt D.41449_68 = strlen (&buf);
processing: D.41449_68 = strlen (&buf);

processing: D.41448_67 = &buf + D.41447_66;

marking necessary through D.41447_66 stmt D.41447_66 = strlen (&buf);
processing: D.41447_66 = strlen (&buf);

processing: switch_snprintf (&max_data, 128, "a=T38FaxMaxDatagram:%d\n", D.41442_59);

Marking useful stmt: if (D.41442_58 != 0)

marking necessary through D.41442_59 stmt D.41442_59 = t38_options_23(D)->T38FaxMaxDatagram;
processing: D.41442_59 = t38_options_23(D)->T38FaxMaxDatagram;

processing: if (D.41442_58 != 0)

marking necessary through D.41442_58 stmt D.41442_58 = t38_options_23(D)->T38FaxMaxDatagram;
processing: D.41442_58 = t38_options_23(D)->T38FaxMaxDatagram;

processing: switch_snprintf (&max_buf, 128, "a=T38FaxMaxBuffer:%d\n", D.41439_57);

Marking useful stmt: if (D.41439_56 != 0)

marking necessary through D.41439_57 stmt D.41439_57 = t38_options_23(D)->T38FaxMaxBuffer;
processing: D.41439_57 = t38_options_23(D)->T38FaxMaxBuffer;

processing: if (D.41439_56 != 0)

marking necessary through D.41439_56 stmt D.41439_56 = t38_options_23(D)->T38FaxMaxBuffer;
processing: D.41439_56 = t38_options_23(D)->T38FaxMaxBuffer;

processing: switch_snprintf (&buf, 2048, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n", username_28, D.41424_54, D.41430_55, family_9, ip_1, username_28, family_9, ip_1);

marking necessary through username_28 stmt username_28 = D.41406_27->sdp_username;
marking necessary through D.41424_54 stmt D.41424_54 = smh_21->owner_id;
marking necessary through D.41430_55 stmt D.41430_55 = smh_21->session_id;
marking necessary through family_9 stmt family_9 = PHI <"IP6"(21), "IP4"(22)>
processing: family_9 = PHI <"IP6"(21), "IP4"(22)>

Marking useful stmt: if (D.41435_50 != 0B)

processing: if (D.41435_50 != 0B)

marking necessary through D.41435_50 stmt D.41435_50 = __builtin_strchr (ip_1, 58);
processing: D.41435_50 = __builtin_strchr (ip_1, 58);

processing: D.41430_55 = smh_21->session_id;

processing: D.41424_54 = smh_21->owner_id;

processing: username_28 = D.41406_27->sdp_username;

marking necessary through D.41406_27 stmt D.41406_27 = smh_21->mparams;
processing: D.41406_27 = smh_21->mparams;

processing: smh_21->session_id = D.41433_49;

marking necessary through D.41433_49 stmt D.41433_49 = D.41430_48 + 1;
processing: D.41433_49 = D.41430_48 + 1;

marking necessary through D.41430_48 stmt D.41430_48 = smh_21->session_id;
processing: D.41430_48 = smh_21->session_id;

processing: smh_21->session_id = D.41424_47;

Marking useful stmt: if (D.41430_46 == 0)

marking necessary through D.41424_47 stmt D.41424_47 = smh_21->owner_id;
processing: D.41424_47 = smh_21->owner_id;

processing: if (D.41430_46 == 0)

marking necessary through D.41430_46 stmt D.41430_46 = smh_21->session_id;
processing: D.41430_46 = smh_21->session_id;

processing: smh_21->owner_id = D.41429_45;

Marking useful stmt: if (D.41424_42 == 0)

marking necessary through D.41429_45 stmt D.41429_45 = D.41428_44 - port_2;
processing: D.41429_45 = D.41428_44 - port_2;

marking necessary through D.41428_44 stmt D.41428_44 = (unsigned int) D.41427_43;
processing: D.41428_44 = (unsigned int) D.41427_43;

processing: if (D.41424_42 == 0)

marking necessary through D.41424_42 stmt D.41424_42 = smh_21->owner_id;
processing: D.41424_42 = smh_21->owner_id;

processing: D.41427_43 = switch_epoch_time_now (0B);

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 7033, 0B, 2, "%s NO PORT!\n", D.41423_41);

processing: D.41423_41 = switch_channel_get_name (D.41407_40);

marking necessary through D.41407_40 stmt D.41407_40 = session_20(D)->channel;
processing: D.41407_40 = session_20(D)->channel;

processing: switch_log_printf (0, "src/switch_core_media.c", &__func__, 7022, 0B, 2, "%s NO IP!\n", D.41414_35);

processing: D.41414_35 = switch_channel_get_name (D.41407_34);

marking necessary through D.41407_34 stmt D.41407_34 = session_20(D)->channel;
processing: D.41407_34 = session_20(D)->channel;

processing: broken_boolean_31 = switch_true (var_30);

processing: var_30 = switch_channel_get_variable_dup (D.41407_29, "t38_broken_boolean", 1, -1);

marking necessary through D.41407_29 stmt D.41407_29 = session_20(D)->channel;
processing: D.41407_29 = session_20(D)->channel;

processing: __assert_fail ("t38_options", "src/switch_core_media.c", 7004, &__PRETTY_FUNCTION__);

processing: __assert_fail ("session", "src/switch_core_media.c", 6995, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : jbig_on_80 = jbig_on_7;

Deleting : jbig_off_81 = jbig_off_8;

Deleting : mmr_on_77 = mmr_on_5;

Deleting : mmr_off_78 = mmr_off_6;

Deleting : bit_removal_on_74 = bit_removal_on_3;

Deleting : bit_removal_off_75 = bit_removal_off_4;

Removed 6 of 131 statements (4%)
Removed 0 of 17 PHI nodes (0%)
Removing basic block 30
;; basic block 30, loop depth 0, count 0
;; prev block 29, next block 31
;; pred:      
;; succ:       32 (fallthru,exec)
<bb 30>:
goto <bb 32>;


Removing basic block 33
;; basic block 33, loop depth 0, count 0
;; prev block 32, next block 34
;; pred:      
;; succ:       35 (fallthru,exec)
<bb 33>:
goto <bb 35>;


Removing basic block 36
;; basic block 36, loop depth 0, count 0
;; prev block 35, next block 37
;; pred:      
;; succ:       38 (fallthru,exec)
<bb 36>:
goto <bb 38>;


Scope blocks after cleanups:

{ Scope block #0 
  char buf[2048];
  char max_buf[128];
  char max_data[128];
  const char * ip;
  uint32_t port;
  const char * family;
  const char * username;
  const char * bit_removal_on;
  const char * bit_removal_off;
  const char * mmr_on;
  const char * mmr_off;
  const char * jbig_on;
  const char * jbig_off;
  const char * var;
  int broken_boolean;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_udptl_image_sdp";
  static const char __func__[38] = "switch_core_media_set_udptl_image_sdp";

}
switch_core_media_set_udptl_image_sdp (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options, int insist)
{
  static const char __func__[38] = "switch_core_media_set_udptl_image_sdp";
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_udptl_image_sdp";
  struct switch_media_handle_t * smh;
  int broken_boolean;
  const char * var;
  const char * jbig_off;
  const char * jbig_on;
  const char * mmr_off;
  const char * mmr_on;
  const char * bit_removal_off;
  const char * bit_removal_on;
  const char * username;
  const char * family;
  uint32_t port;
  const char * ip;
  char max_data[128];
  char max_buf[128];
  char buf[2048];
  char * D.41478;
  char * D.41477;
  unsigned int D.41476;
  size_t D.41475;
  char * D.41474;
  size_t D.41473;
  const char * D.41470;
  const char * D.41469;
  switch_bool_t D.41465;
  switch_bool_t D.41460;
  switch_bool_t D.41455;
  uint32_t D.41453;
  int D.41452;
  uint16_t D.41451;
  unsigned int D.41450;
  size_t D.41449;
  char * D.41448;
  size_t D.41447;
  uint32_t D.41442;
  uint32_t D.41439;
  char * D.41435;
  uint32_t D.41433;
  uint32_t D.41430;
  unsigned int D.41429;
  unsigned int D.41428;
  time_t D.41427;
  uint32_t D.41424;
  char * D.41423;
  switch_port_t D.41420;
  switch_port_t D.41417;
  char * D.41414;
  struct switch_channel_t * D.41407;
  struct switch_core_media_params_t * D.41406;
  uint16_t D.41405;

<bb 2>:
  buf = "";
  max_buf = "";
  max_data = "";
  # DEBUG family => "IP4"
  # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval\n"
  # DEBUG bit_removal_off => ""
  # DEBUG mmr_on => "a=T38FaxTranscodingMMR\n"
  # DEBUG mmr_off => ""
  # DEBUG jbig_on => "a=T38FaxTranscodingJBIG\n"
  # DEBUG jbig_off => ""
  if (session_20(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 6995, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_21 = session_20(D)->media_handle;
  # DEBUG smh => smh_21
  if (smh_21 == 0B)
    goto <bb 38>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#34 => &smh_21->engines
  # DEBUG a_engine => D#34
  if (t38_options_23(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  __assert_fail ("t38_options", "src/switch_core_media.c", 7004, &__PRETTY_FUNCTION__);

<bb 7>:
  ip_24 = t38_options_23(D)->local_ip;
  # DEBUG ip => ip_24
  D.41405_25 = t38_options_23(D)->local_port;
  port_26 = (uint32_t) D.41405_25;
  # DEBUG port => port_26
  D.41406_27 = smh_21->mparams;
  username_28 = D.41406_27->sdp_username;
  # DEBUG username => username_28
  D.41407_29 = session_20(D)->channel;
  var_30 = switch_channel_get_variable_dup (D.41407_29, "t38_broken_boolean", 1, -1);
  # DEBUG var => var_30
  broken_boolean_31 = switch_true (var_30);
  # DEBUG broken_boolean => broken_boolean_31
  if (ip_24 == 0B)
    goto <bb 8>;
  else
    goto <bb 10>;

<bb 8>:
  ip_32 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_ip;
  # DEBUG ip => ip_32
  if (ip_32 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

<bb 9>:
  ip_33 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_ip;
  # DEBUG ip => ip_33

<bb 10>:
  # ip_1 = PHI <ip_24(7), ip_32(8), ip_33(9)>
  # DEBUG ip => ip_1
  if (ip_1 == 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

<bb 11>:
  D.41407_34 = session_20(D)->channel;
  D.41414_35 = switch_channel_get_name (D.41407_34);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7022, 0B, 2, "%s NO IP!\n", D.41414_35);
  goto <bb 38>;

<bb 12>:
  if (port_26 == 0)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41417_36 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].adv_sdp_port;
  port_37 = (uint32_t) D.41417_36;
  # DEBUG port => port_37
  if (port_37 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41420_38 = MEM[(struct switch_rtp_engine_t *)smh_21 + 80B].proxy_sdp_port;
  port_39 = (uint32_t) D.41420_38;
  # DEBUG port => port_39

<bb 15>:
  # port_2 = PHI <port_26(12), port_37(13), port_39(14)>
  # DEBUG port => port_2
  if (port_2 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.41407_40 = session_20(D)->channel;
  D.41423_41 = switch_channel_get_name (D.41407_40);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 7033, 0B, 2, "%s NO PORT!\n", D.41423_41);
  goto <bb 38>;

<bb 17>:
  D.41424_42 = smh_21->owner_id;
  if (D.41424_42 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.41427_43 = switch_epoch_time_now (0B);
  D.41428_44 = (unsigned int) D.41427_43;
  D.41429_45 = D.41428_44 - port_2;
  smh_21->owner_id = D.41429_45;

<bb 19>:
  D.41430_46 = smh_21->session_id;
  if (D.41430_46 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41424_47 = smh_21->owner_id;
  smh_21->session_id = D.41424_47;

<bb 21>:
  D.41430_48 = smh_21->session_id;
  D.41433_49 = D.41430_48 + 1;
  smh_21->session_id = D.41433_49;
  D.41435_50 = __builtin_strchr (ip_1, 58);
  if (D.41435_50 != 0B)
    goto <bb 23>;
  else
    goto <bb 22>;

<bb 22>:

<bb 23>:
  # family_9 = PHI <"IP6"(21), "IP4"(22)>
  # DEBUG family => family_9
  D.41424_54 = smh_21->owner_id;
  D.41430_55 = smh_21->session_id;
  switch_snprintf (&buf, 2048, "v=0\no=%s %010u %010u IN %s %s\ns=%s\nc=IN %s %s\nt=0 0\n", username_28, D.41424_54, D.41430_55, family_9, ip_1, username_28, family_9, ip_1);
  D.41439_56 = t38_options_23(D)->T38FaxMaxBuffer;
  if (D.41439_56 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.41439_57 = t38_options_23(D)->T38FaxMaxBuffer;
  switch_snprintf (&max_buf, 128, "a=T38FaxMaxBuffer:%d\n", D.41439_57);

<bb 25>:
  D.41442_58 = t38_options_23(D)->T38FaxMaxDatagram;
  if (D.41442_58 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  D.41442_59 = t38_options_23(D)->T38FaxMaxDatagram;
  switch_snprintf (&max_data, 128, "a=T38FaxMaxDatagram:%d\n", D.41442_59);

<bb 27>:
  if (broken_boolean_31 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  # DEBUG bit_removal_on => "a=T38FaxFillBitRemoval:1\n"
  # DEBUG bit_removal_off => "a=T38FaxFillBitRemoval:0\n"
  # DEBUG mmr_on => "a=T38FaxTranscodingMMR:1\n"
  # DEBUG mmr_off => "a=T38FaxTranscodingMMR:0\n"
  # DEBUG jbig_on => "a=T38FaxTranscodingJBIG:1\n"
  # DEBUG jbig_off => "a=T38FaxTranscodingJBIG:0\n"

<bb 29>:
  # bit_removal_on_3 = PHI <"a=T38FaxFillBitRemoval\n"(27), "a=T38FaxFillBitRemoval:1\n"(28)>
  # bit_removal_off_4 = PHI <""(27), "a=T38FaxFillBitRemoval:0\n"(28)>
  # mmr_on_5 = PHI <"a=T38FaxTranscodingMMR\n"(27), "a=T38FaxTranscodingMMR:1\n"(28)>
  # mmr_off_6 = PHI <""(27), "a=T38FaxTranscodingMMR:0\n"(28)>
  # jbig_on_7 = PHI <"a=T38FaxTranscodingJBIG\n"(27), "a=T38FaxTranscodingJBIG:1\n"(28)>
  # jbig_off_8 = PHI <""(27), "a=T38FaxTranscodingJBIG:0\n"(28)>
  # DEBUG jbig_off => jbig_off_8
  # DEBUG jbig_on => jbig_on_7
  # DEBUG mmr_off => mmr_off_6
  # DEBUG mmr_on => mmr_on_5
  # DEBUG bit_removal_off => bit_removal_off_4
  # DEBUG bit_removal_on => bit_removal_on_3
  D.41447_66 = strlen (&buf);
  D.41448_67 = &buf + D.41447_66;
  D.41449_68 = strlen (&buf);
  D.41450_69 = 2048 - D.41449_68;
  D.41451_70 = t38_options_23(D)->T38FaxVersion;
  D.41452_71 = (int) D.41451_70;
  D.41453_72 = t38_options_23(D)->T38MaxBitRate;
  D.41455_73 = t38_options_23(D)->T38FaxFillBitRemoval;
  if (D.41455_73 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

<bb 30>:

<bb 31>:
  # bit_removal_on_10 = PHI <bit_removal_on_3(29), bit_removal_off_4(30)>
  D.41460_76 = t38_options_23(D)->T38FaxTranscodingMMR;
  if (D.41460_76 != 0)
    goto <bb 33>;
  else
    goto <bb 32>;

<bb 32>:

<bb 33>:
  # mmr_on_11 = PHI <mmr_on_5(31), mmr_off_6(32)>
  D.41465_79 = t38_options_23(D)->T38FaxTranscodingJBIG;
  if (D.41465_79 != 0)
    goto <bb 35>;
  else
    goto <bb 34>;

<bb 34>:

<bb 35>:
  # jbig_on_12 = PHI <jbig_on_7(33), jbig_off_8(34)>
  D.41469_82 = t38_options_23(D)->T38FaxRateManagement;
  D.41470_83 = t38_options_23(D)->T38FaxUdpEC;
  switch_snprintf (D.41448_67, D.41450_69, "m=image %d udptl t38\na=T38FaxVersion:%d\na=T38MaxBitRate:%d\n%s%s%sa=T38FaxRateManagement:%s\n%s%sa=T38FaxUdpEC:%s\n", port_2, D.41452_71, D.41453_72, bit_removal_on_10, mmr_on_11, jbig_on_12, D.41469_82, &max_buf, &max_data, D.41470_83);
  if (insist_84(D) != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:
  D.41473_85 = strlen (&buf);
  D.41474_86 = &buf + D.41473_85;
  D.41475_87 = strlen (&buf);
  D.41476_88 = 2048 - D.41475_87;
  switch_snprintf (D.41474_86, D.41476_88, "m=audio 0 RTP/AVP 19\n");

<bb 37>:
  switch_core_media_set_local_sdp (session_20(D), &buf, 1);
  D.41407_89 = session_20(D)->channel;
  D.41477_90 = switch_channel_get_name (D.41407_89);
  D.41406_91 = smh_21->mparams;
  D.41478_92 = D.41406_91->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7113, session_20(D), 7, "%s image media sdp:\n%s\n", D.41477_90, D.41478_92);

<bb 38>:
  return;

}



;; Function switch_core_media_patch_sdp (switch_core_media_patch_sdp)

Created preheader block for loop 5
Created preheader block for loop 3
Created preheader block for loop 2
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 83 53 54 55 56 57 58 61 59 60 100 62 63 64 65 66 67 68 69 70 71 72 73 76 74 75 101 77 78 79 80 81 82 99 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
;;
;; Loop 1
;;  header 89, latch 88
;;  depth 1, outer 0
;;  nodes: 89 88 87 86 99 84 85 83 82 81 80 48 52 38 50 40 79 66 65 64 100 62 63 61 60 59 58 57 56 55 53 54 49 39 25 26 24 23 90 101 77 78 76 75 74 73 72 71 67 68 69 70 32 33 37 36 35 34 29 31 30 27 28 51 46 47 44 45 42 43 41
;;
;; Loop 5
;;  header 99, latch 82
;;  depth 2, outer 1
;;  nodes: 99 82 81 80 85 84
;;
;; Loop 4
;;  header 32, latch 31
;;  depth 2, outer 1
;;  nodes: 32 31 30 34 35 36 37 33
;;
;; Loop 3
;;  header 100, latch 60
;;  depth 2, outer 1
;;  nodes: 100 60 59 63 62
;;
;; Loop 2
;;  header 101, latch 75
;;  depth 2, outer 1
;;  nodes: 101 75 74 78 77
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 98 5 }
;; 5 succs { 8 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 98 9 }
;; 9 succs { 10 14 }
;; 10 succs { 11 14 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { 98 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 98 }
;; 21 succs { 22 }
;; 22 succs { 89 }
;; 23 succs { 91 24 }
;; 24 succs { 91 25 }
;; 25 succs { 26 39 }
;; 26 succs { 27 39 }
;; 27 succs { 29 28 }
;; 28 succs { 29 }
;; 29 succs { 32 }
;; 30 succs { 91 31 }
;; 31 succs { 32 }
;; 32 succs { 33 38 }
;; 33 succs { 34 38 }
;; 34 succs { 30 35 }
;; 35 succs { 30 36 }
;; 36 succs { 30 37 }
;; 37 succs { 30 38 }
;; 38 succs { 83 }
;; 39 succs { 40 49 }
;; 40 succs { 41 83 }
;; 41 succs { 91 42 }
;; 42 succs { 44 43 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 83 }
;; 49 succs { 50 53 }
;; 50 succs { 51 83 }
;; 51 succs { 91 52 }
;; 52 succs { 83 }
;; 83 succs { 99 }
;; 53 succs { 55 54 }
;; 54 succs { 55 65 }
;; 55 succs { 56 65 }
;; 56 succs { 91 57 }
;; 57 succs { 91 58 }
;; 58 succs { 91 61 }
;; 61 succs { 100 }
;; 59 succs { 91 60 }
;; 60 succs { 100 }
;; 100 succs { 62 64 }
;; 62 succs { 63 64 }
;; 63 succs { 59 64 }
;; 64 succs { 83 }
;; 65 succs { 66 83 }
;; 66 succs { 67 83 }
;; 67 succs { 68 71 }
;; 68 succs { 69 71 }
;; 69 succs { 70 71 }
;; 70 succs { 71 }
;; 71 succs { 91 72 }
;; 72 succs { 91 73 }
;; 73 succs { 91 76 }
;; 76 succs { 101 }
;; 74 succs { 91 75 }
;; 75 succs { 101 }
;; 101 succs { 77 79 }
;; 77 succs { 78 79 }
;; 78 succs { 74 79 }
;; 79 succs { 83 }
;; 80 succs { 91 81 }
;; 81 succs { 91 82 }
;; 82 succs { 99 }
;; 99 succs { 84 86 }
;; 84 succs { 85 86 }
;; 85 succs { 80 86 }
;; 86 succs { 91 87 }
;; 87 succs { 91 88 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 23 91 }
;; 91 succs { 98 92 }
;; 92 succs { 94 93 }
;; 93 succs { 94 95 }
;; 94 succs { 98 }
;; 95 succs { 96 97 }
;; 96 succs { 98 }
;; 97 succs { 98 }
;; 98 succs { 1 }
Marking useful stmt: # DEBUG has_video => 0

Marking useful stmt: # DEBUG has_audio => 0

Marking useful stmt: # DEBUG has_ip => 0

Marking useful stmt: # DEBUG bad => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7134, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_24

Marking useful stmt: # DEBUG D#35 => &smh_24->engines

Marking useful stmt: # DEBUG a_engine => D#35

Marking useful stmt: # DEBUG D#36 => &smh_24->engines[1]

Marking useful stmt: # DEBUG v_engine => D#36

Marking useful stmt: # DEBUG s => D.41211_28

Marking useful stmt: # DEBUG len => len_33

Marking useful stmt: D.41223_38 = switch_channel_test_flag (D.41222_37, 1);

Marking useful stmt: D.41226_41 = switch_stristr ("sendonly", D.41211_40);

Marking useful stmt: D.41228_44 = switch_stristr ("0.0.0.0", D.41211_43);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7152, session_23(D), 7, "Skip patch on hold SDP\n");

Marking useful stmt: # DEBUG s => D.41231_45

Marking useful stmt: D.41235_48 = switch_core_media_choose_port (session_23(D), 0, 1);

Marking useful stmt: D.41238_50 = switch_channel_get_name (D.41222_49);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7159, session_23(D), 3, "%s I/O Error\n", D.41238_50);

Marking useful stmt: D.41240_52 = switch_core_perform_session_strdup (session_23(D), "PROXY", "src/switch_core_media.c", &__func__, 7163);

Marking useful stmt: D.41239_51->iananame = D.41240_52;

Marking useful stmt: D.41239_53->rm_rate = 8000;

Marking useful stmt: D.41239_54->adv_rm_rate = 8000;

Marking useful stmt: D.41239_55->codec_ms = 20;

Marking useful stmt: new_sdp_56 = switch_core_perform_session_alloc (session_23(D), len_33, "src/switch_core_media.c", &__func__, 7169);

Marking useful stmt: # DEBUG new_sdp => new_sdp_56

Marking useful stmt: switch_snprintf (&port_buf, 25, "%u", D.41241_58);

Marking useful stmt: # DEBUG p => p_60

Marking useful stmt: # DEBUG q => new_sdp_56

Marking useful stmt: # DEBUG pe => pe_63

Marking useful stmt: # DEBUG qe => qe_65

Marking useful stmt: __builtin_strncpy (q_7, p_5, 7);

Marking useful stmt: # DEBUG p => p_5 + 7

Marking useful stmt: # DEBUG q => q_72

Marking useful stmt: __builtin_memcpy (q_72, iftmp.16_17, 2);

Marking useful stmt: # DEBUG p => p_77

Marking useful stmt: # DEBUG q => q_78

Marking useful stmt: __builtin_strncpy (q_78, D.41254_80, D.41259_81);

Marking useful stmt: # DEBUG q => q_84

Marking useful stmt: # DEBUG p => p_97

Marking useful stmt: # DEBUG p => p_1

Marking useful stmt: # DEBUG has_ip => has_ip_98

Marking useful stmt: # DEBUG oe => oe_100

Marking useful stmt: # DEBUG family => "IP4"

Marking useful stmt: # DEBUG len => len_106

Marking useful stmt: # DEBUG p => p_107

Marking useful stmt: # DEBUG family => family_18

Marking useful stmt: D.41295_115 = switch_epoch_time_now (0B);

Marking useful stmt: smh_24->owner_id = D.41298_118;

Marking useful stmt: smh_24->session_id = D.41292_120;

Marking useful stmt: smh_24->session_id = D.41302_122;

Marking useful stmt: snprintf (&o_line, 1024, &"o=%s %010u %010u IN %s %s\n"[0], D.41304_125, D.41292_126, D.41299_127, family_18, D.41287_129);

Marking useful stmt: __builtin_strncpy (q_7, &o_line, D.41305_130);

Marking useful stmt: # DEBUG q => q_133

Marking useful stmt: # DEBUG se => se_135

Marking useful stmt: # DEBUG len => len_140

Marking useful stmt: # DEBUG p => p_141

Marking useful stmt: snprintf (&s_line, 1024, &"s=%s\n"[0], D.41304_144);

Marking useful stmt: __builtin_strncpy (q_7, &s_line, D.41319_145);

Marking useful stmt: # DEBUG q => q_148

Marking useful stmt: __builtin_strncpy (q_7, p_5, 8);

Marking useful stmt: # DEBUG p => p_153

Marking useful stmt: # DEBUG q => q_155

Marking useful stmt: __builtin_strncpy (q_155, &port_buf, D.41336_157);

Marking useful stmt: # DEBUG q => q_159

Marking useful stmt: # DEBUG p => p_165

Marking useful stmt: # DEBUG p => p_2

Marking useful stmt: # DEBUG has_audio => has_audio_166

Marking useful stmt: switch_core_media_choose_port (session_23(D), 1, 1);

Marking useful stmt: D.41352_170->rm_encoding = "PROXY-VID";

Marking useful stmt: D.41352_171->rm_rate = 90000;

Marking useful stmt: D.41352_172->adv_rm_rate = 90000;

Marking useful stmt: D.41352_173->codec_ms = 0;

Marking useful stmt: switch_snprintf (&vport_buf, 25, "%u", D.41354_175);

Marking useful stmt: D.41355_177 = switch_channel_test_ready (D.41222_176, 1, 1);

Marking useful stmt: D.41359_179 = switch_rtp_ready (D.41358_178);

Marking useful stmt: switch_channel_set_flag_value (D.41222_180, 98, 1);

Marking useful stmt: switch_channel_set_flag_value (D.41222_181, 103, 1);

Marking useful stmt: switch_core_media_activate_rtp (session_23(D));

Marking useful stmt: __builtin_strncpy (q_7, p_5, 8);

Marking useful stmt: # DEBUG p => p_182

Marking useful stmt: # DEBUG q => q_184

Marking useful stmt: __builtin_strncpy (q_184, &vport_buf, D.41366_186);

Marking useful stmt: # DEBUG q => q_188

Marking useful stmt: # DEBUG p => p_194

Marking useful stmt: # DEBUG p => p_3

Marking useful stmt: # DEBUG has_video => has_video_195

Marking useful stmt: *q_6 = D.41264_200;

Marking useful stmt: # DEBUG q => q_201

Marking useful stmt: # DEBUG p => p_202

Marking useful stmt: # DEBUG has_ip => has_ip_13

Marking useful stmt: # DEBUG has_audio => has_audio_10

Marking useful stmt: # DEBUG has_video => has_video_8

Marking useful stmt: # DEBUG q => q_6

Marking useful stmt: # DEBUG p => p_4

Marking useful stmt: *q_6 = D.41264_205;

Marking useful stmt: # DEBUG q => q_206

Marking useful stmt: # DEBUG p => p_207

Marking useful stmt: # DEBUG has_ip => has_ip_14

Marking useful stmt: # DEBUG has_audio => has_audio_11

Marking useful stmt: # DEBUG has_video => has_video_9

Marking useful stmt: # DEBUG q => q_7

Marking useful stmt: # DEBUG p => p_5

Marking useful stmt: end:

Marking useful stmt: # DEBUG bad => bad_16

Marking useful stmt: # DEBUG has_ip => has_ip_15

Marking useful stmt: # DEBUG has_audio => has_audio_12

Marking useful stmt: D.41389_209 = switch_channel_check_signal (D.41222_208, 1);

Marking useful stmt: D.41391_211 = switch_channel_get_state (D.41222_210);

Marking useful stmt: D.41392_222 = switch_channel_get_name (D.41222_221);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7394, session_23(D), 7, "%s too late.\n", D.41392_222);

Marking useful stmt: D.41396_214 = switch_channel_get_name (D.41222_213);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7400, session_23(D), 7, "%s SDP has no audio in it.\n%s\n", D.41396_214, D.41211_216);

Marking useful stmt: D.41397_218 = switch_channel_get_name (D.41222_217);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7406, session_23(D), 7, "%s Patched SDP\n---\n%s\n+++\n%s\n", D.41397_218, D.41211_220, new_sdp_56);

Marking useful stmt: switch_core_media_set_local_sdp (session_23(D), new_sdp_56, 0);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41264_66)
(get_scalar_evolution 
  (scalar = D.41264_66)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.41264_66)
(get_scalar_evolution 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = D.41264_66)
  (scalar_evolution = D.41264_66))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_5 = PHI <p_60(22), p_207(88)>
)
  (init_cond = p_60))
(analyze_evolution_in_loop 
  (loop_phi_node = p_5 = PHI <p_60(22), p_207(88)>
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(83), p_202(82)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(83), p_202(82)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(number_of_iterations_in_loop = 
  (set_nb_iterations_in_loop = scev_not_known))
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_6 = PHI <q_203(83), q_201(82)>
)
  (init_cond = q_203))
(analyze_evolution_in_loop 
  (loop_phi_node = q_6 = PHI <q_203(83), q_201(82)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = q_203)
  (to_add = 1)
  (res = {q_203, +, 1}_5))
  (evolution_function = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_6 = PHI <q_203(83), q_201(82)>
)
  (init_cond = q_203))
(analyze_evolution_in_loop 
  (loop_phi_node = q_6 = PHI <q_203(83), q_201(82)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = q_203)
  (to_add = 1)
  (res = {q_203, +, 1}_5))
  (evolution_function = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(83), p_202(82)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(83), p_202(82)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_4 = PHI <p_204(83), p_202(82)>
)
  (init_cond = p_204))
(analyze_evolution_in_loop 
  (loop_phi_node = p_4 = PHI <p_204(83), p_202(82)>
)
(add_to_evolution 
  (loop_nb = 5)
  (chrec_before = p_204)
  (to_add = 1)
  (res = {p_204, +, 1}_5))
  (evolution_function = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_7)
(get_scalar_evolution 
  (scalar = q_7)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
q_7 = PHI <new_sdp_56(22), q_206(88)>
)
  (init_cond = new_sdp_56))
(analyze_evolution_in_loop 
  (loop_phi_node = q_7 = PHI <new_sdp_56(22), q_206(88)>
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = q_6)
(get_scalar_evolution 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = q_6)
  (scalar_evolution = {q_203, +, 1}_5))
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = q_7)
  (scalar_evolution = q_7))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = q_7)
(get_scalar_evolution 
  (scalar = q_7)
  (scalar_evolution = q_7))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = q_7)
  (scalar_evolution = q_7))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = p_5)
(get_scalar_evolution 
  (scalar = p_5)
  (scalar_evolution = p_5))
(set_scalar_evolution 
  instantiated_below = 22 
  (scalar = p_5)
  (scalar_evolution = p_5))
)
can not prove finiteness of loop 1
Marking useful stmt: if (q_6 >= qe_65)

(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_197)
(get_scalar_evolution 
  (scalar = D.41264_197)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_197)
(get_scalar_evolution 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = D.41264_197)
  (scalar_evolution = D.41264_197))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_196)
(get_scalar_evolution 
  (scalar = D.41264_196)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = D.41264_196)
(get_scalar_evolution 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = D.41264_196)
  (scalar_evolution = D.41264_196))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = p_4)
(get_scalar_evolution 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
(set_scalar_evolution 
  instantiated_below = 83 
  (scalar = p_4)
  (scalar_evolution = {p_204, +, 1}_5))
)
(analyze_scalar_evolution 
  (loop_nb = 5)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 5
  exit condition [p_204, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations -(unsigned int) p_204, bounded by 4294967295
Found loop 5 to be finite: iterating -(unsigned int) p_204 times
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41264_85)
(get_scalar_evolution 
  (scalar = D.41264_85)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = D.41264_85)
(get_scalar_evolution 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = D.41264_85)
  (scalar_evolution = D.41264_85))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = p_1)
(get_scalar_evolution 
  (scalar = p_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_1 = PHI <p_77(29), p_97(31)>
)
  (init_cond = p_77))
(analyze_evolution_in_loop 
  (loop_phi_node = p_1 = PHI <p_77(29), p_97(31)>
)
(add_to_evolution 
  (loop_nb = 4)
  (chrec_before = p_77)
  (to_add = 1)
  (res = {p_77, +, 1}_4))
  (evolution_function = {p_77, +, 1}_4))
(set_scalar_evolution 
  instantiated_below = 29 
  (scalar = p_1)
  (scalar_evolution = {p_77, +, 1}_4))
)
(analyze_scalar_evolution 
  (loop_nb = 4)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 4
  exit condition [p_77, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... 0
  result:
    # of iterations -(unsigned int) p_77, bounded by 4294967295
Found loop 4 to be finite: iterating -(unsigned int) p_77 times
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41344_163)
(get_scalar_evolution 
  (scalar = D.41344_163)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_162)
(get_scalar_evolution 
  (scalar = D.41264_162)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = D.41344_163)
  (scalar_evolution = D.41264_162 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_162)
(get_scalar_evolution 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = D.41264_162)
  (scalar_evolution = D.41264_162))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_161)
(get_scalar_evolution 
  (scalar = D.41264_161)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = D.41264_161)
(get_scalar_evolution 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = D.41264_161)
  (scalar_evolution = D.41264_161))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = p_2)
(get_scalar_evolution 
  (scalar = p_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_2 = PHI <p_185(61), p_165(60)>
)
  (init_cond = p_185))
(analyze_evolution_in_loop 
  (loop_phi_node = p_2 = PHI <p_185(61), p_165(60)>
)
(add_to_evolution 
  (loop_nb = 3)
  (chrec_before = p_185)
  (to_add = 1)
  (res = {p_185, +, 1}_3))
  (evolution_function = {p_185, +, 1}_3))
(set_scalar_evolution 
  instantiated_below = 61 
  (scalar = p_2)
  (scalar_evolution = {p_185, +, 1}_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 3
  exit condition [p_5 + 8, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... -8
  result:
    # of iterations -(unsigned int) (p_5 + 8), bounded by 4294967295
Found loop 3 to be finite: iterating -(unsigned int) (p_5 + 8) times
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41344_192)
(get_scalar_evolution 
  (scalar = D.41344_192)
  (scalar_evolution = ))
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_191)
(get_scalar_evolution 
  (scalar = D.41264_191)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 208)
(get_scalar_evolution 
  (scalar = 208)
  (scalar_evolution = 208))
)
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41344_192)
  (scalar_evolution = D.41264_191 + 208))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_191)
(get_scalar_evolution 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_191)
  (scalar_evolution = D.41264_191))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_190)
(get_scalar_evolution 
  (scalar = D.41264_190)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.41264_190)
(get_scalar_evolution 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = D.41264_190)
  (scalar_evolution = D.41264_190))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = p_3)
(get_scalar_evolution 
  (scalar = p_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
p_3 = PHI <p_183(76), p_194(75)>
)
  (init_cond = p_183))
(analyze_evolution_in_loop 
  (loop_phi_node = p_3 = PHI <p_183(76), p_194(75)>
)
(add_to_evolution 
  (loop_nb = 2)
  (chrec_before = p_183)
  (to_add = 1)
  (res = {p_183, +, 1}_2))
  (evolution_function = {p_183, +, 1}_2))
(set_scalar_evolution 
  instantiated_below = 76 
  (scalar = p_3)
  (scalar_evolution = {p_183, +, 1}_2))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = 0B)
(get_scalar_evolution 
  (scalar = 0B)
  (scalar_evolution = 0B))
)
Analyzing # of iterations of loop 2
  exit condition [p_5 + 8, + , 1](no_overflow) != 0B
  bounds on difference of bases: -4294967295 ... -8
  result:
    # of iterations -(unsigned int) (p_5 + 8), bounded by 4294967295
Found loop 2 to be finite: iterating -(unsigned int) (p_5 + 8) times

Processing worklist:
processing: if (q_6 >= qe_65)

Marking useful stmt: if (p_4 >= pe_63)

marking necessary through q_6 stmt q_6 = PHI <q_203(83), q_201(82)>
marking necessary through qe_65 stmt qe_65 = new_sdp_56 + D.41243_64;
processing: qe_65 = new_sdp_56 + D.41243_64;

Marking useful stmt: if (D.41234_47 == 0)

Marking useful stmt: if (D.41235_48 != 0)

marking necessary through D.41243_64 stmt D.41243_64 = len_33 + -1;
processing: D.41243_64 = len_33 + -1;

marking necessary through len_33 stmt len_33 = D.41215_32 * 2;
processing: len_33 = D.41215_32 * 2;

Marking useful stmt: if (D.48218_290 != 0)

marking necessary through D.41215_32 stmt D.41215_32 = strlen (D.41211_31);
processing: D.41215_32 = strlen (D.41211_31);

marking necessary through D.41211_31 stmt D.41211_31 = D.41210_30->local_sdp_str;
marking necessary through .MEM_235 stmt vport_buf = "";
marking necessary through .MEM_234 stmt port_buf = "";
processing: port_buf = "";

processing: vport_buf = "";

processing: D.41211_31 = D.41210_30->local_sdp_str;

marking necessary through D.41210_30 stmt D.41210_30 = smh_24->mparams;
processing: D.41210_30 = smh_24->mparams;

marking necessary through smh_24 stmt smh_24 = session_23(D)->media_handle;
processing: smh_24 = session_23(D)->media_handle;

Marking useful stmt: if (session_23(D) == 0B)

processing: if (session_23(D) == 0B)

processing: if (D.48218_290 != 0)

Marking useful stmt: if (smh_24 == 0B)

marking necessary through D.48218_290 stmt D.48218_290 = PHI <1(5), 1(6), 0(7)>
processing: D.48218_290 = PHI <1(5), 1(6), 0(7)>

Marking useful stmt: if (D.41211_28 == 0B)

Marking useful stmt: if (D.48219_289 == 0)

processing: if (D.48219_289 == 0)

marking necessary through D.48219_289 stmt D.48219_289 = MEM[(const char *)D.41211_28];
processing: D.48219_289 = MEM[(const char *)D.41211_28];

marking necessary through D.41211_28 stmt D.41211_28 = D.41210_27->local_sdp_str;
processing: D.41211_28 = D.41210_27->local_sdp_str;

marking necessary through D.41210_27 stmt D.41210_27 = smh_24->mparams;
processing: D.41210_27 = smh_24->mparams;

processing: if (D.41211_28 == 0B)

processing: if (smh_24 == 0B)

processing: if (D.41235_48 != 0)

Marking useful stmt: if (D.48222_292 != 0)

processing: if (D.48222_292 != 0)

Marking useful stmt: if (D.41217_36 == 0)

Marking useful stmt: if (D.41223_38 != 0)

Marking useful stmt: if (D.41228_44 != 0B)

marking necessary through D.48222_292 stmt D.48222_292 = PHI <1(14), 1(15), 0(16)>
processing: D.48222_292 = PHI <1(14), 1(15), 0(16)>

Marking useful stmt: if (D.41231_45 == 0B)

Marking useful stmt: if (D.48223_291 == 0)

processing: if (D.48223_291 == 0)

marking necessary through D.48223_291 stmt D.48223_291 = MEM[(const char *)D.41231_45];
processing: D.48223_291 = MEM[(const char *)D.41231_45];

marking necessary through D.41231_45 stmt D.41231_45 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
processing: D.41231_45 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;

processing: if (D.41231_45 == 0B)

processing: if (D.41228_44 != 0B)

Marking useful stmt: if (D.41226_41 != 0B)

processing: if (D.41226_41 != 0B)

processing: if (D.41223_38 != 0)

processing: if (D.41217_36 == 0)

marking necessary through D.41217_36 stmt D.41217_36 = D.41216_35 & 32;
processing: D.41217_36 = D.41216_35 & 32;

marking necessary through D.41216_35 stmt D.41216_35 = D.41210_34->ndlb;
processing: D.41216_35 = D.41210_34->ndlb;

marking necessary through D.41210_34 stmt D.41210_34 = smh_24->mparams;
processing: D.41210_34 = smh_24->mparams;

processing: if (D.41234_47 == 0)

marking necessary through D.41234_47 stmt D.41234_47 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
processing: D.41234_47 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;

processing: q_6 = PHI <q_203(83), q_201(82)>

Marking useful stmt: if (p_1 != 0B)

Marking useful stmt: if (D.41264_85 != 0)

Marking useful stmt: if (D.41275_95 <= 5)

Marking useful stmt: if (oe_100 != 0B)

Marking useful stmt: if (oe_100 >= pe_63)

Marking useful stmt: if (se_135 != 0B)

Marking useful stmt: if (se_135 >= pe_63)

Marking useful stmt: if (p_2 != 0B)

Marking useful stmt: if (D.41264_161 != 0)

Marking useful stmt: if (D.41344_163 <= 9)

Marking useful stmt: if (D.41345_167 == 0)

Marking useful stmt: if (D.41330_169 != 48)

Marking useful stmt: if (p_3 != 0B)

Marking useful stmt: if (D.41264_190 != 0)

Marking useful stmt: if (D.41344_192 <= 9)

Marking useful stmt: if (q_6 >= qe_65)

marking necessary through q_203 stmt q_203 = PHI <q_133(48), q_148(52), q_84(38), q_7(50), q_7(40), q_188(79), q_7(66), q_7(65), q_159(64)>
marking necessary through q_201 stmt q_201 = q_6 + 1;
processing: q_201 = q_6 + 1;

processing: q_203 = PHI <q_133(48), q_148(52), q_84(38), q_7(50), q_7(40), q_188(79), q_7(66), q_7(65), q_159(64)>

marking necessary through q_133 stmt q_133 = q_7 + D.41307_132;
marking necessary through q_148 stmt q_148 = q_7 + D.41321_147;
marking necessary through q_84 stmt q_84 = q_78 + D.41260_83;
marking necessary through q_7 stmt q_7 = PHI <new_sdp_56(22), q_206(88)>
marking necessary through q_188 stmt q_188 = q_184 + D.41367_187;
marking necessary through q_159 stmt q_159 = q_155 + D.41337_158;
processing: q_159 = q_155 + D.41337_158;

Marking useful stmt: if (q_155 >= qe_65)

marking necessary through q_155 stmt q_155 = q_7 + 8;
marking necessary through D.41337_158 stmt D.41337_158 = strlen (&port_buf);
processing: D.41337_158 = strlen (&port_buf);

marking necessary through .MEM_253 stmt o_line = "";
marking necessary through .MEM_260 stmt s_line = "";
processing: s_line = "";

processing: o_line = "";

processing: q_155 = q_7 + 8;

Marking useful stmt: if (p_153 >= pe_63)

processing: if (p_153 >= pe_63)

Marking useful stmt: if (D.41330_152 != 48)

marking necessary through p_153 stmt p_153 = p_5 + 8;
marking necessary through pe_63 stmt pe_63 = p_60 + D.41242_62;
processing: pe_63 = p_60 + D.41242_62;

marking necessary through p_60 stmt p_60 = D.41210_59->local_sdp_str;
marking necessary through D.41242_62 stmt D.41242_62 = strlen (p_60);
processing: D.41242_62 = strlen (p_60);

processing: p_60 = D.41210_59->local_sdp_str;

marking necessary through D.41210_59 stmt D.41210_59 = smh_24->mparams;
processing: D.41210_59 = smh_24->mparams;

processing: p_153 = p_5 + 8;

marking necessary through p_5 stmt p_5 = PHI <p_60(22), p_207(88)>
processing: p_5 = PHI <p_60(22), p_207(88)>

marking necessary through p_207 stmt p_207 = p_4 + 1;
processing: p_207 = p_4 + 1;

marking necessary through p_4 stmt p_4 = PHI <p_204(83), p_202(82)>
processing: p_4 = PHI <p_204(83), p_202(82)>

marking necessary through p_204 stmt p_204 = PHI <p_107(48), p_141(52), p_1(38), p_5(50), p_5(40), p_3(79), p_5(66), p_5(65), p_2(64)>
marking necessary through p_202 stmt p_202 = p_4 + 1;
processing: p_202 = p_4 + 1;

processing: p_204 = PHI <p_107(48), p_141(52), p_1(38), p_5(50), p_5(40), p_3(79), p_5(66), p_5(65), p_2(64)>

marking necessary through p_107 stmt p_107 = p_5 + len_106;
marking necessary through p_141 stmt p_141 = p_5 + len_140;
marking necessary through p_1 stmt p_1 = PHI <p_77(29), p_97(31)>
marking necessary through p_3 stmt p_3 = PHI <p_183(76), p_194(75)>
marking necessary through p_2 stmt p_2 = PHI <p_185(61), p_165(60)>
processing: p_2 = PHI <p_185(61), p_165(60)>

Marking useful stmt: if (q_159 >= qe_65)

Marking useful stmt: if (p_2 >= pe_63)

marking necessary through p_185 stmt p_185 = PHI <p_153(58)>
marking necessary through p_165 stmt p_165 = p_2 + 1;
processing: p_165 = p_2 + 1;

processing: p_185 = PHI <p_153(58)>

processing: if (p_2 >= pe_63)

processing: if (q_159 >= qe_65)

processing: p_3 = PHI <p_183(76), p_194(75)>

Marking useful stmt: if (q_188 >= qe_65)

Marking useful stmt: if (p_3 >= pe_63)

marking necessary through p_183 stmt p_183 = PHI <p_182(73)>
marking necessary through p_194 stmt p_194 = p_3 + 1;
processing: p_194 = p_3 + 1;

processing: p_183 = PHI <p_182(73)>

marking necessary through p_182 stmt p_182 = p_5 + 8;
processing: p_182 = p_5 + 8;

processing: if (p_3 >= pe_63)

processing: if (q_188 >= qe_65)

Marking useful stmt: if (q_184 >= qe_65)

processing: if (q_184 >= qe_65)

Marking useful stmt: if (p_182 >= pe_63)

marking necessary through q_184 stmt q_184 = q_7 + 8;
processing: q_184 = q_7 + 8;

processing: if (p_182 >= pe_63)

processing: p_1 = PHI <p_77(29), p_97(31)>

Marking useful stmt: if (D.41251_70 == 0)

Marking useful stmt: if (p_1 >= pe_63)

marking necessary through p_77 stmt p_77 = &MEM[(void *)p_5 + 9B];
marking necessary through p_97 stmt p_97 = p_1 + 1;
processing: p_97 = p_1 + 1;

processing: p_77 = &MEM[(void *)p_5 + 9B];

processing: if (p_1 >= pe_63)

Marking useful stmt: if (D.41270_90 != 0)

Marking useful stmt: if (D.41264_91 == 58)

Marking useful stmt: if (D.41273_93 <= 5)

processing: if (D.41273_93 <= 5)

marking necessary through D.41273_93 stmt D.41273_93 = D.41264_92 + 191;
processing: D.41273_93 = D.41264_92 + 191;

marking necessary through D.41264_92 stmt D.41264_92 = *p_1;
processing: D.41264_92 = *p_1;

processing: if (D.41264_91 == 58)

marking necessary through D.41264_91 stmt D.41264_91 = *p_1;
processing: D.41264_91 = *p_1;

processing: if (D.41270_90 != 0)

marking necessary through D.41270_90 stmt D.41270_90 = D.41268_88 || D.41269_89;
processing: D.41270_90 = D.41268_88 || D.41269_89;

marking necessary through D.41268_88 stmt D.41268_88 = D.41267_87 <= 9;
marking necessary through D.41269_89 stmt D.41269_89 = D.41266_86 == 46;
processing: D.41269_89 = D.41266_86 == 46;

marking necessary through D.41266_86 stmt D.41266_86 = *p_1;
processing: D.41266_86 = *p_1;

processing: D.41268_88 = D.41267_87 <= 9;

marking necessary through D.41267_87 stmt D.41267_87 = D.41266_86 + 208;
processing: D.41267_87 = D.41266_86 + 208;

processing: if (D.41251_70 == 0)

Marking useful stmt: if (D.41231_69 != 0B)

marking necessary through D.41251_70 stmt D.41251_70 = strncmp ("c=IN IP", p_5, 7);
processing: D.41251_70 = strncmp ("c=IN IP", p_5, 7);

processing: if (D.41231_69 != 0B)

Marking useful stmt: if (q_7 >= qe_65)

marking necessary through D.41231_69 stmt D.41231_69 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
processing: D.41231_69 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;

processing: if (q_7 >= qe_65)

Marking useful stmt: if (p_5 >= pe_63)

processing: if (p_5 >= pe_63)

Marking useful stmt: if (D.41264_66 != 0)

processing: if (D.41264_66 != 0)

Marking useful stmt: if (p_5 != 0B)

marking necessary through D.41264_66 stmt D.41264_66 = *p_5;
processing: D.41264_66 = *p_5;

processing: if (p_5 != 0B)

processing: p_141 = p_5 + len_140;

marking necessary through len_140 stmt len_140 = (switch_size_t) D.41317_139;
processing: len_140 = (switch_size_t) D.41317_139;

marking necessary through D.41317_139 stmt D.41317_139 = se.20_137 - p.18_138;
processing: D.41317_139 = se.20_137 - p.18_138;

marking necessary through se.20_137 stmt se.20_137 = (int) se_135;
marking necessary through p.18_138 stmt p.18_138 = (int) p_5;
processing: p.18_138 = (int) p_5;

processing: se.20_137 = (int) se_135;

marking necessary through se_135 stmt se_135 = __builtin_strchr (p_5, 10);
processing: se_135 = __builtin_strchr (p_5, 10);

Marking useful stmt: if (D.41309_134 == 0)

processing: if (D.41309_134 == 0)

Marking useful stmt: if (D.41276_99 == 0)

marking necessary through D.41309_134 stmt D.41309_134 = strncmp ("s=", p_5, 2);
processing: D.41309_134 = strncmp ("s=", p_5, 2);

processing: if (D.41276_99 == 0)

marking necessary through D.41276_99 stmt D.41276_99 = strncmp ("o=", p_5, 2);
processing: D.41276_99 = strncmp ("o=", p_5, 2);

processing: p_107 = p_5 + len_106;

marking necessary through len_106 stmt len_106 = (switch_size_t) D.41285_105;
processing: len_106 = (switch_size_t) D.41285_105;

marking necessary through D.41285_105 stmt D.41285_105 = oe.17_103 - p.18_104;
processing: D.41285_105 = oe.17_103 - p.18_104;

marking necessary through oe.17_103 stmt oe.17_103 = (int) oe_100;
marking necessary through p.18_104 stmt p.18_104 = (int) p_5;
processing: p.18_104 = (int) p_5;

processing: oe.17_103 = (int) oe_100;

marking necessary through oe_100 stmt oe_100 = __builtin_strchr (p_5, 10);
processing: oe_100 = __builtin_strchr (p_5, 10);

processing: if (D.41330_152 != 48)

Marking useful stmt: if (D.41326_149 == 0)

Marking useful stmt: if (D.41328_150 == 0)

marking necessary through D.41330_152 stmt D.41330_152 = MEM[(char *)p_5 + 8B];
processing: D.41330_152 = MEM[(char *)p_5 + 8B];

processing: if (D.41328_150 == 0)

marking necessary through D.41328_150 stmt D.41328_150 = strncmp ("m=image ", p_5, 8);
processing: D.41328_150 = strncmp ("m=image ", p_5, 8);

processing: if (D.41326_149 == 0)

marking necessary through D.41326_149 stmt D.41326_149 = strncmp ("m=audio ", p_5, 8);
processing: D.41326_149 = strncmp ("m=audio ", p_5, 8);

processing: if (q_155 >= qe_65)

processing: q_188 = q_184 + D.41367_187;

marking necessary through D.41367_187 stmt D.41367_187 = strlen (&vport_buf);
processing: D.41367_187 = strlen (&vport_buf);

processing: q_7 = PHI <new_sdp_56(22), q_206(88)>

marking necessary through q_206 stmt q_206 = q_6 + 1;
processing: q_206 = q_6 + 1;

processing: q_84 = q_78 + D.41260_83;

marking necessary through q_78 stmt q_78 = &MEM[(void *)q_7 + 9B];
marking necessary through D.41260_83 stmt D.41260_83 = strlen (D.41254_82);
processing: D.41260_83 = strlen (D.41254_82);

marking necessary through D.41254_82 stmt D.41254_82 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
processing: D.41254_82 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;

processing: q_78 = &MEM[(void *)q_7 + 9B];

processing: q_148 = q_7 + D.41321_147;

marking necessary through D.41321_147 stmt D.41321_147 = D.41320_146 + -1;
processing: D.41321_147 = D.41320_146 + -1;

marking necessary through D.41320_146 stmt D.41320_146 = strlen (&s_line);
processing: D.41320_146 = strlen (&s_line);

processing: q_133 = q_7 + D.41307_132;

marking necessary through D.41307_132 stmt D.41307_132 = D.41306_131 + -1;
processing: D.41307_132 = D.41306_131 + -1;

marking necessary through D.41306_131 stmt D.41306_131 = strlen (&o_line);
processing: D.41306_131 = strlen (&o_line);

processing: if (q_6 >= qe_65)

Marking useful stmt: if (p_4 >= pe_63)

processing: if (p_4 >= pe_63)

Marking useful stmt: if (D.41264_197 != 10)

processing: if (D.41264_197 != 10)

Marking useful stmt: if (D.41264_196 != 0)

marking necessary through D.41264_197 stmt D.41264_197 = *p_4;
processing: D.41264_197 = *p_4;

processing: if (D.41264_196 != 0)

Marking useful stmt: if (p_4 != 0B)

marking necessary through D.41264_196 stmt D.41264_196 = *p_4;
processing: D.41264_196 = *p_4;

processing: if (p_4 != 0B)

processing: if (D.41344_192 <= 9)

marking necessary through D.41344_192 stmt D.41344_192 = D.41264_191 + 208;
processing: D.41344_192 = D.41264_191 + 208;

marking necessary through D.41264_191 stmt D.41264_191 = *p_3;
processing: D.41264_191 = *p_3;

processing: if (D.41264_190 != 0)

marking necessary through D.41264_190 stmt D.41264_190 = *p_3;
processing: D.41264_190 = *p_3;

processing: if (p_3 != 0B)

processing: if (D.41330_169 != 48)

marking necessary through D.41330_169 stmt D.41330_169 = MEM[(char *)p_5 + 8B];
processing: D.41330_169 = MEM[(char *)p_5 + 8B];

processing: if (D.41345_167 == 0)

marking necessary through D.41345_167 stmt D.41345_167 = strncmp ("m=video ", p_5, 8);
processing: D.41345_167 = strncmp ("m=video ", p_5, 8);

processing: if (D.41344_163 <= 9)

marking necessary through D.41344_163 stmt D.41344_163 = D.41264_162 + 208;
processing: D.41344_163 = D.41264_162 + 208;

marking necessary through D.41264_162 stmt D.41264_162 = *p_2;
processing: D.41264_162 = *p_2;

processing: if (D.41264_161 != 0)

marking necessary through D.41264_161 stmt D.41264_161 = *p_2;
processing: D.41264_161 = *p_2;

processing: if (p_2 != 0B)

processing: if (se_135 >= pe_63)

processing: if (se_135 != 0B)

processing: if (oe_100 >= pe_63)

processing: if (oe_100 != 0B)

processing: if (D.41275_95 <= 5)

marking necessary through D.41275_95 stmt D.41275_95 = D.41264_94 + 159;
processing: D.41275_95 = D.41264_94 + 159;

marking necessary through D.41264_94 stmt D.41264_94 = *p_1;
processing: D.41264_94 = *p_1;

processing: if (D.41264_85 != 0)

marking necessary through D.41264_85 stmt D.41264_85 = *p_1;
processing: D.41264_85 = *p_1;

processing: if (p_1 != 0B)

processing: if (p_4 >= pe_63)

processing: return;

processing: switch_core_media_set_local_sdp (session_23(D), new_sdp_56, 0);

Marking useful stmt: if (D.41393_212 == 0)

processing: if (D.41393_212 == 0)

Marking useful stmt: if (D.41391_211 > 9)

marking necessary through D.41393_212 stmt D.41393_212 = has_ip_15 | has_audio_12;
processing: D.41393_212 = has_ip_15 | has_audio_12;

marking necessary through has_ip_15 stmt has_ip_15 = PHI <has_ip_14(23), has_ip_14(24), has_ip_14(30), has_ip_14(41), has_ip_14(51), has_ip_14(56), has_ip_14(57), has_ip_14(58), has_ip_14(59), has_ip_14(71), has_ip_14(72), has_ip_14(73), has_ip_14(74), has_ip_13(80), has_ip_13(81), has_ip_13(86), has_ip_13(87), has_ip_14(89), has_ip_14(90)>
marking necessary through has_audio_12 stmt has_audio_12 = PHI <has_audio_11(23), has_audio_11(24), has_audio_11(30), has_audio_11(41), has_audio_11(51), has_audio_11(56), has_audio_11(57), has_audio_11(58), has_audio_11(59), has_audio_11(71), has_audio_11(72), has_audio_11(73), has_audio_11(74), has_audio_10(80), has_audio_10(81), has_audio_10(86), has_audio_10(87), has_audio_11(89), has_audio_11(90)>
processing: has_audio_12 = PHI <has_audio_11(23), has_audio_11(24), has_audio_11(30), has_audio_11(41), has_audio_11(51), has_audio_11(56), has_audio_11(57), has_audio_11(58), has_audio_11(59), has_audio_11(71), has_audio_11(72), has_audio_11(73), has_audio_11(74), has_audio_10(80), has_audio_10(81), has_audio_10(86), has_audio_10(87), has_audio_11(89), has_audio_11(90)>

marking necessary through has_audio_11 stmt has_audio_11 = PHI <0(22), has_audio_10(88)>
marking necessary through has_audio_10 stmt has_audio_10 = PHI <has_audio_198(83), has_audio_10(82)>
processing: has_audio_10 = PHI <has_audio_198(83), has_audio_10(82)>

marking necessary through has_audio_198 stmt has_audio_198 = PHI <has_audio_11(48), has_audio_11(52), has_audio_11(38), has_audio_11(50), has_audio_11(40), has_audio_11(79), has_audio_11(66), has_audio_11(65), has_audio_166(64)>
processing: has_audio_198 = PHI <has_audio_11(48), has_audio_11(52), has_audio_11(38), has_audio_11(50), has_audio_11(40), has_audio_11(79), has_audio_11(66), has_audio_11(65), has_audio_166(64)>

marking necessary through has_audio_166 stmt has_audio_166 = has_audio_11 + 1;
processing: has_audio_166 = has_audio_11 + 1;

processing: has_audio_11 = PHI <0(22), has_audio_10(88)>

processing: has_ip_15 = PHI <has_ip_14(23), has_ip_14(24), has_ip_14(30), has_ip_14(41), has_ip_14(51), has_ip_14(56), has_ip_14(57), has_ip_14(58), has_ip_14(59), has_ip_14(71), has_ip_14(72), has_ip_14(73), has_ip_14(74), has_ip_13(80), has_ip_13(81), has_ip_13(86), has_ip_13(87), has_ip_14(89), has_ip_14(90)>

marking necessary through has_ip_14 stmt has_ip_14 = PHI <0(22), has_ip_13(88)>
marking necessary through has_ip_13 stmt has_ip_13 = PHI <has_ip_193(83), has_ip_13(82)>
processing: has_ip_13 = PHI <has_ip_193(83), has_ip_13(82)>

marking necessary through has_ip_193 stmt has_ip_193 = PHI <has_ip_14(48), has_ip_14(52), has_ip_98(38), has_ip_14(50), has_ip_14(40), has_ip_14(79), has_ip_14(66), has_ip_14(65), has_ip_14(64)>
processing: has_ip_193 = PHI <has_ip_14(48), has_ip_14(52), has_ip_98(38), has_ip_14(50), has_ip_14(40), has_ip_14(79), has_ip_14(66), has_ip_14(65), has_ip_14(64)>

marking necessary through has_ip_98 stmt has_ip_98 = has_ip_14 + 1;
processing: has_ip_98 = has_ip_14 + 1;

processing: has_ip_14 = PHI <0(22), has_ip_13(88)>

processing: if (D.41391_211 > 9)

Marking useful stmt: if (D.41389_209 != 0)

processing: if (D.41389_209 != 0)

Marking useful stmt: if (bad_16 != 0)

processing: if (bad_16 != 0)

marking necessary through bad_16 stmt bad_16 = PHI <1(23), 2(24), 3(30), 5(41), 5(51), 4(56), 5(57), 6(58), 7(59), 8(71), 9(72), 10(73), 11(74), 12(80), 13(81), 14(86), 15(87), 0(89), 0(90)>
processing: bad_16 = PHI <1(23), 2(24), 3(30), 5(41), 5(51), 4(56), 5(57), 6(58), 7(59), 8(71), 9(72), 10(73), 11(74), 12(80), 13(81), 14(86), 15(87), 0(89), 0(90)>

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7406, session_23(D), 7, "%s Patched SDP\n---\n%s\n+++\n%s\n", D.41397_218, D.41211_220, new_sdp_56);

marking necessary through D.41211_220 stmt D.41211_220 = D.41210_219->local_sdp_str;
processing: D.41211_220 = D.41210_219->local_sdp_str;

marking necessary through D.41210_219 stmt D.41210_219 = smh_24->mparams;
processing: D.41210_219 = smh_24->mparams;

processing: D.41397_218 = switch_channel_get_name (D.41222_217);

marking necessary through D.41222_217 stmt D.41222_217 = session_23(D)->channel;
processing: D.41222_217 = session_23(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7400, session_23(D), 7, "%s SDP has no audio in it.\n%s\n", D.41396_214, D.41211_216);

marking necessary through D.41211_216 stmt D.41211_216 = D.41210_215->local_sdp_str;
processing: D.41211_216 = D.41210_215->local_sdp_str;

marking necessary through D.41210_215 stmt D.41210_215 = smh_24->mparams;
processing: D.41210_215 = smh_24->mparams;

processing: D.41396_214 = switch_channel_get_name (D.41222_213);

marking necessary through D.41222_213 stmt D.41222_213 = session_23(D)->channel;
processing: D.41222_213 = session_23(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7394, session_23(D), 7, "%s too late.\n", D.41392_222);

processing: D.41392_222 = switch_channel_get_name (D.41222_221);

marking necessary through D.41222_221 stmt D.41222_221 = session_23(D)->channel;
processing: D.41222_221 = session_23(D)->channel;

processing: D.41391_211 = switch_channel_get_state (D.41222_210);

marking necessary through D.41222_210 stmt D.41222_210 = session_23(D)->channel;
processing: D.41222_210 = session_23(D)->channel;

processing: D.41389_209 = switch_channel_check_signal (D.41222_208, 1);

marking necessary through D.41222_208 stmt D.41222_208 = session_23(D)->channel;
processing: D.41222_208 = session_23(D)->channel;

processing: *q_6 = D.41264_205;

marking necessary through D.41264_205 stmt D.41264_205 = *p_4;
processing: D.41264_205 = *p_4;

processing: *q_6 = D.41264_200;

marking necessary through D.41264_200 stmt D.41264_200 = *p_4;
processing: D.41264_200 = *p_4;

processing: __builtin_strncpy (q_184, &vport_buf, D.41366_186);

marking necessary through D.41366_186 stmt D.41366_186 = strlen (&vport_buf);
processing: D.41366_186 = strlen (&vport_buf);

processing: __builtin_strncpy (q_7, p_5, 8);

processing: switch_core_media_activate_rtp (session_23(D));

Marking useful stmt: if (D.41359_179 == 0)

processing: if (D.41359_179 == 0)

Marking useful stmt: if (D.41355_177 != 0)

processing: if (D.41355_177 != 0)

Marking useful stmt: if (has_video_9 == 0)

processing: if (has_video_9 == 0)

marking necessary through has_video_9 stmt has_video_9 = PHI <0(22), has_video_8(88)>
processing: has_video_9 = PHI <0(22), has_video_8(88)>

marking necessary through has_video_8 stmt has_video_8 = PHI <has_video_199(83), has_video_8(82)>
processing: has_video_8 = PHI <has_video_199(83), has_video_8(82)>

marking necessary through has_video_199 stmt has_video_199 = PHI <has_video_9(48), has_video_9(52), has_video_9(38), has_video_9(50), has_video_9(40), has_video_195(79), has_video_9(66), has_video_9(65), has_video_9(64)>
processing: has_video_199 = PHI <has_video_9(48), has_video_9(52), has_video_9(38), has_video_9(50), has_video_9(40), has_video_195(79), has_video_9(66), has_video_9(65), has_video_9(64)>

marking necessary through has_video_195 stmt has_video_195 = has_video_9 + 1;
processing: has_video_195 = has_video_9 + 1;

processing: switch_channel_set_flag_value (D.41222_181, 103, 1);

marking necessary through D.41222_181 stmt D.41222_181 = session_23(D)->channel;
processing: D.41222_181 = session_23(D)->channel;

processing: switch_channel_set_flag_value (D.41222_180, 98, 1);

marking necessary through D.41222_180 stmt D.41222_180 = session_23(D)->channel;
processing: D.41222_180 = session_23(D)->channel;

processing: D.41359_179 = switch_rtp_ready (D.41358_178);

marking necessary through D.41358_178 stmt D.41358_178 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].rtp_session;
processing: D.41358_178 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].rtp_session;

processing: D.41355_177 = switch_channel_test_ready (D.41222_176, 1, 1);

marking necessary through D.41222_176 stmt D.41222_176 = session_23(D)->channel;
processing: D.41222_176 = session_23(D)->channel;

processing: switch_snprintf (&vport_buf, 25, "%u", D.41354_175);

marking necessary through D.41354_175 stmt D.41354_175 = (int) D.41353_174;
processing: D.41354_175 = (int) D.41353_174;

marking necessary through D.41353_174 stmt D.41353_174 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].adv_sdp_port;
processing: D.41353_174 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].adv_sdp_port;

processing: D.41352_173->codec_ms = 0;

marking necessary through D.41352_173 stmt D.41352_173 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
processing: D.41352_173 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;

processing: D.41352_172->adv_rm_rate = 90000;

marking necessary through D.41352_172 stmt D.41352_172 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
processing: D.41352_172 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;

processing: D.41352_171->rm_rate = 90000;

marking necessary through D.41352_171 stmt D.41352_171 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
processing: D.41352_171 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;

processing: D.41352_170->rm_encoding = "PROXY-VID";

marking necessary through D.41352_170 stmt D.41352_170 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
processing: D.41352_170 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;

processing: switch_core_media_choose_port (session_23(D), 1, 1);

processing: __builtin_strncpy (q_155, &port_buf, D.41336_157);

marking necessary through D.41336_157 stmt D.41336_157 = strlen (&port_buf);
processing: D.41336_157 = strlen (&port_buf);

processing: __builtin_strncpy (q_7, p_5, 8);

processing: __builtin_strncpy (q_7, &s_line, D.41319_145);

marking necessary through D.41319_145 stmt D.41319_145 = strlen (&s_line);
processing: D.41319_145 = strlen (&s_line);

processing: snprintf (&s_line, 1024, &"s=%s\n"[0], D.41304_144);

marking necessary through D.41304_144 stmt D.41304_144 = D.41210_143->sdp_username;
processing: D.41304_144 = D.41210_143->sdp_username;

marking necessary through D.41210_143 stmt D.41210_143 = smh_24->mparams;
processing: D.41210_143 = smh_24->mparams;

processing: __builtin_strncpy (q_7, &o_line, D.41305_130);

marking necessary through D.41305_130 stmt D.41305_130 = strlen (&o_line);
processing: D.41305_130 = strlen (&o_line);

processing: snprintf (&o_line, 1024, &"o=%s %010u %010u IN %s %s\n"[0], D.41304_125, D.41292_126, D.41299_127, family_18, D.41287_129);

marking necessary through D.41304_125 stmt D.41304_125 = D.41210_124->sdp_username;
marking necessary through D.41292_126 stmt D.41292_126 = smh_24->owner_id;
marking necessary through D.41299_127 stmt D.41299_127 = smh_24->session_id;
marking necessary through family_18 stmt family_18 = PHI <"IP6"(42), "IP4"(43)>
marking necessary through D.41287_129 stmt D.41287_129 = D.41210_128->sipip;
processing: D.41287_129 = D.41210_128->sipip;

marking necessary through D.41210_128 stmt D.41210_128 = smh_24->mparams;
processing: D.41210_128 = smh_24->mparams;

processing: family_18 = PHI <"IP6"(42), "IP4"(43)>

Marking useful stmt: if (D.41288_110 != 0B)

processing: if (D.41288_110 != 0B)

marking necessary through D.41288_110 stmt D.41288_110 = __builtin_strchr (D.41287_109, 58);
processing: D.41288_110 = __builtin_strchr (D.41287_109, 58);

marking necessary through D.41287_109 stmt D.41287_109 = D.41210_108->sipip;
processing: D.41287_109 = D.41210_108->sipip;

marking necessary through D.41210_108 stmt D.41210_108 = smh_24->mparams;
processing: D.41210_108 = smh_24->mparams;

processing: D.41299_127 = smh_24->session_id;

processing: D.41292_126 = smh_24->owner_id;

processing: D.41304_125 = D.41210_124->sdp_username;

marking necessary through D.41210_124 stmt D.41210_124 = smh_24->mparams;
processing: D.41210_124 = smh_24->mparams;

processing: smh_24->session_id = D.41302_122;

marking necessary through D.41302_122 stmt D.41302_122 = D.41299_121 + 1;
processing: D.41302_122 = D.41299_121 + 1;

marking necessary through D.41299_121 stmt D.41299_121 = smh_24->session_id;
processing: D.41299_121 = smh_24->session_id;

processing: smh_24->session_id = D.41292_120;

Marking useful stmt: if (D.41299_119 == 0)

marking necessary through D.41292_120 stmt D.41292_120 = smh_24->owner_id;
processing: D.41292_120 = smh_24->owner_id;

processing: if (D.41299_119 == 0)

marking necessary through D.41299_119 stmt D.41299_119 = smh_24->session_id;
processing: D.41299_119 = smh_24->session_id;

processing: smh_24->owner_id = D.41298_118;

Marking useful stmt: if (D.41292_114 == 0)

marking necessary through D.41298_118 stmt D.41298_118 = D.41297_117 + 13849;
processing: D.41298_118 = D.41297_117 + 13849;

marking necessary through D.41297_117 stmt D.41297_117 = D.41296_116 * 31821;
processing: D.41297_117 = D.41296_116 * 31821;

marking necessary through D.41296_116 stmt D.41296_116 = (unsigned int) D.41295_115;
processing: D.41296_116 = (unsigned int) D.41295_115;

processing: if (D.41292_114 == 0)

marking necessary through D.41292_114 stmt D.41292_114 = smh_24->owner_id;
processing: D.41292_114 = smh_24->owner_id;

processing: D.41295_115 = switch_epoch_time_now (0B);

processing: __builtin_strncpy (q_78, D.41254_80, D.41259_81);

marking necessary through D.41254_80 stmt D.41254_80 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
marking necessary through D.41259_81 stmt D.41259_81 = strlen (D.41254_80);
processing: D.41259_81 = strlen (D.41254_80);

processing: D.41254_80 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;

processing: __builtin_memcpy (q_72, iftmp.16_17, 2);

marking necessary through q_72 stmt q_72 = q_7 + 7;
marking necessary through iftmp.16_17 stmt iftmp.16_17 = PHI <"6 "(27), "4 "(28)>
processing: iftmp.16_17 = PHI <"6 "(27), "4 "(28)>

Marking useful stmt: if (D.41255_74 != 0B)

processing: if (D.41255_74 != 0B)

marking necessary through D.41255_74 stmt D.41255_74 = __builtin_strchr (D.41254_73, 58);
processing: D.41255_74 = __builtin_strchr (D.41254_73, 58);

marking necessary through D.41254_73 stmt D.41254_73 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
processing: D.41254_73 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;

processing: q_72 = q_7 + 7;

processing: __builtin_strncpy (q_7, p_5, 7);

processing: switch_snprintf (&port_buf, 25, "%u", D.41241_58);

marking necessary through D.41241_58 stmt D.41241_58 = (int) D.41234_57;
processing: D.41241_58 = (int) D.41234_57;

marking necessary through D.41234_57 stmt D.41234_57 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
processing: D.41234_57 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;

processing: new_sdp_56 = switch_core_perform_session_alloc (session_23(D), len_33, "src/switch_core_media.c", &__func__, 7169);

processing: D.41239_55->codec_ms = 20;

marking necessary through D.41239_55 stmt D.41239_55 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
processing: D.41239_55 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;

processing: D.41239_54->adv_rm_rate = 8000;

marking necessary through D.41239_54 stmt D.41239_54 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
processing: D.41239_54 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;

processing: D.41239_53->rm_rate = 8000;

marking necessary through D.41239_53 stmt D.41239_53 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
processing: D.41239_53 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;

processing: D.41239_51->iananame = D.41240_52;

marking necessary through D.41239_51 stmt D.41239_51 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
processing: D.41239_51 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;

processing: D.41240_52 = switch_core_perform_session_strdup (session_23(D), "PROXY", "src/switch_core_media.c", &__func__, 7163);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7159, session_23(D), 3, "%s I/O Error\n", D.41238_50);

processing: D.41238_50 = switch_channel_get_name (D.41222_49);

marking necessary through D.41222_49 stmt D.41222_49 = session_23(D)->channel;
processing: D.41222_49 = session_23(D)->channel;

processing: D.41235_48 = switch_core_media_choose_port (session_23(D), 0, 1);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7152, session_23(D), 7, "Skip patch on hold SDP\n");

processing: D.41228_44 = switch_stristr ("0.0.0.0", D.41211_43);

marking necessary through D.41211_43 stmt D.41211_43 = D.41210_42->local_sdp_str;
processing: D.41211_43 = D.41210_42->local_sdp_str;

marking necessary through D.41210_42 stmt D.41210_42 = smh_24->mparams;
processing: D.41210_42 = smh_24->mparams;

processing: D.41226_41 = switch_stristr ("sendonly", D.41211_40);

marking necessary through D.41211_40 stmt D.41211_40 = D.41210_39->local_sdp_str;
processing: D.41211_40 = D.41210_39->local_sdp_str;

marking necessary through D.41210_39 stmt D.41210_39 = smh_24->mparams;
processing: D.41210_39 = smh_24->mparams;

processing: D.41223_38 = switch_channel_test_flag (D.41222_37, 1);

marking necessary through D.41222_37 stmt D.41222_37 = session_23(D)->channel;
processing: D.41222_37 = session_23(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 7134, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : family_113 = family_18;

Deleting : q_61 = new_sdp_56;

Removed 2 of 346 statements (0%)
Removed 0 of 38 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  switch_size_t len;
  char * p;
  char * q;
  char * pe;
  char * qe;
  int has_video;
  int has_audio;
  int has_ip;
  char port_buf[25];
  char vport_buf[25];
  char * new_sdp;
  int bad;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_patch_sdp";
  static const char __func__[28] = "switch_core_media_patch_sdp";
  void end = <<< error >>>; (unused)

  { Scope block #447 src/switch_core_media.c:7157 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #448 Originating from :#0 

    }

  }

  { Scope block #449 src/switch_core_media.c:7143 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #450 Originating from :#0 

    }

  }

  { Scope block #451 
    char * oe;
    switch_size_t len;

    { Scope block #452 
      const char * family;
      char o_line[1024];

    }

  }

  { Scope block #453 
    char * se;
    switch_size_t len;

    { Scope block #454 
      char s_line[1024];

    }

  }

}
switch_core_media_patch_sdp (struct switch_core_session_t * session)
{
  const char D.48223;
  int D.48222;
  const char D.48219;
  int D.48218;
  char s_line[1024];
  switch_size_t len;
  char * se;
  char o_line[1024];
  const char * family;
  switch_size_t len;
  char * oe;
  static const char __func__[28] = "switch_core_media_patch_sdp";
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_patch_sdp";
  struct switch_media_handle_t * smh;
  int bad;
  char * new_sdp;
  char vport_buf[25];
  char port_buf[25];
  int has_ip;
  int has_audio;
  int has_video;
  char * qe;
  char * pe;
  char * q;
  char * p;
  switch_size_t len;
  char * D.41397;
  char * D.41396;
  int D.41393;
  char * D.41392;
  switch_channel_state_t D.41391;
  int D.41389;
  size_t D.41367;
  size_t D.41366;
  uint8_t D.41359;
  struct switch_rtp_t * D.41358;
  int D.41355;
  int D.41354;
  switch_port_t D.41353;
  struct payload_map_t * D.41352;
  int D.41345;
  char D.41344;
  size_t D.41337;
  size_t D.41336;
  char D.41330;
  int D.41328;
  int D.41326;
  unsigned int D.41321;
  size_t D.41320;
  size_t D.41319;
  int D.41317;
  int se.20;
  int D.41309;
  unsigned int D.41307;
  size_t D.41306;
  size_t D.41305;
  char * D.41304;
  uint32_t D.41302;
  uint32_t D.41299;
  unsigned int D.41298;
  unsigned int D.41297;
  unsigned int D.41296;
  time_t D.41295;
  uint32_t D.41292;
  char * D.41288;
  char * D.41287;
  int D.41285;
  int p.18;
  int oe.17;
  int D.41276;
  char D.41275;
  char D.41273;
  _Bool D.41270;
  _Bool D.41269;
  _Bool D.41268;
  char D.41267;
  char D.41266;
  char D.41264;
  size_t D.41260;
  size_t D.41259;
  char * D.41255;
  char * D.41254;
  char[3] * iftmp.16;
  int D.41251;
  unsigned int D.41243;
  size_t D.41242;
  int D.41241;
  char * D.41240;
  struct payload_map_t * D.41239;
  char * D.41238;
  switch_status_t D.41235;
  switch_port_t D.41234;
  char * D.41231;
  const char * D.41228;
  const char * D.41226;
  uint32_t D.41223;
  struct switch_channel_t * D.41222;
  unsigned int D.41217;
  switch_core_media_NDLB_t D.41216;
  size_t D.41215;
  char * D.41211;
  struct switch_core_media_params_t * D.41210;

<bb 2>:
  # DEBUG has_video => 0
  # DEBUG has_audio => 0
  # DEBUG has_ip => 0
  port_buf = "";
  vport_buf = "";
  # DEBUG bad => 0
  if (session_23(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7134, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_24 = session_23(D)->media_handle;
  # DEBUG smh => smh_24
  if (smh_24 == 0B)
    goto <bb 101>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#35 => &smh_24->engines
  # DEBUG a_engine => D#35
  # DEBUG D#36 => &smh_24->engines[1]
  # DEBUG v_engine => D#36
  D.41210_27 = smh_24->mparams;
  D.41211_28 = D.41210_27->local_sdp_str;
  # DEBUG s => D.41211_28
  if (D.41211_28 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

<bb 6>:
  D.48219_289 = MEM[(const char *)D.41211_28];
  if (D.48219_289 == 0)
    goto <bb 8>;
  else
    goto <bb 7>;

<bb 7>:

<bb 8>:
  # D.48218_290 = PHI <1(5), 1(6), 0(7)>
  if (D.48218_290 != 0)
    goto <bb 101>;
  else
    goto <bb 9>;

<bb 9>:
  D.41210_30 = smh_24->mparams;
  D.41211_31 = D.41210_30->local_sdp_str;
  D.41215_32 = strlen (D.41211_31);
  len_33 = D.41215_32 * 2;
  # DEBUG len => len_33
  D.41210_34 = smh_24->mparams;
  D.41216_35 = D.41210_34->ndlb;
  D.41217_36 = D.41216_35 & 32;
  if (D.41217_36 == 0)
    goto <bb 10>;
  else
    goto <bb 14>;

<bb 10>:
  D.41222_37 = session_23(D)->channel;
  D.41223_38 = switch_channel_test_flag (D.41222_37, 1);
  if (D.41223_38 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

<bb 11>:
  D.41210_39 = smh_24->mparams;
  D.41211_40 = D.41210_39->local_sdp_str;
  D.41226_41 = switch_stristr ("sendonly", D.41211_40);
  if (D.41226_41 != 0B)
    goto <bb 13>;
  else
    goto <bb 12>;

<bb 12>:
  D.41210_42 = smh_24->mparams;
  D.41211_43 = D.41210_42->local_sdp_str;
  D.41228_44 = switch_stristr ("0.0.0.0", D.41211_43);
  if (D.41228_44 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7152, session_23(D), 7, "Skip patch on hold SDP\n");
  goto <bb 101>;

<bb 14>:
  D.41231_45 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
  # DEBUG s => D.41231_45
  if (D.41231_45 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;

<bb 15>:
  D.48223_291 = MEM[(const char *)D.41231_45];
  if (D.48223_291 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;

<bb 16>:

<bb 17>:
  # D.48222_292 = PHI <1(14), 1(15), 0(16)>
  if (D.48222_292 != 0)
    goto <bb 19>;
  else
    goto <bb 18>;

<bb 18>:
  D.41234_47 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
  if (D.41234_47 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  D.41235_48 = switch_core_media_choose_port (session_23(D), 0, 1);
  if (D.41235_48 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.41222_49 = session_23(D)->channel;
  D.41238_50 = switch_channel_get_name (D.41222_49);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7159, session_23(D), 3, "%s I/O Error\n", D.41238_50);
  goto <bb 101>;

<bb 21>:
  D.41239_51 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41240_52 = switch_core_perform_session_strdup (session_23(D), "PROXY", "src/switch_core_media.c", &__func__, 7163);
  D.41239_51->iananame = D.41240_52;
  D.41239_53 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_53->rm_rate = 8000;
  D.41239_54 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_54->adv_rm_rate = 8000;
  D.41239_55 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].cur_payload_map;
  D.41239_55->codec_ms = 20;

<bb 22>:
  new_sdp_56 = switch_core_perform_session_alloc (session_23(D), len_33, "src/switch_core_media.c", &__func__, 7169);
  # DEBUG new_sdp => new_sdp_56
  D.41234_57 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_port;
  D.41241_58 = (int) D.41234_57;
  switch_snprintf (&port_buf, 25, "%u", D.41241_58);
  D.41210_59 = smh_24->mparams;
  p_60 = D.41210_59->local_sdp_str;
  # DEBUG p => p_60
  # DEBUG q => new_sdp_56
  D.41242_62 = strlen (p_60);
  pe_63 = p_60 + D.41242_62;
  # DEBUG pe => pe_63
  D.41243_64 = len_33 + -1;
  qe_65 = new_sdp_56 + D.41243_64;
  # DEBUG qe => qe_65
  goto <bb 92>;

<bb 23>:
  if (p_5 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 24>;

<bb 24>:
  if (q_7 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 25>;

<bb 25>:
  D.41231_69 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].local_sdp_ip;
  if (D.41231_69 != 0B)
    goto <bb 26>;
  else
    goto <bb 39>;

<bb 26>:
  D.41251_70 = strncmp ("c=IN IP", p_5, 7);
  if (D.41251_70 == 0)
    goto <bb 27>;
  else
    goto <bb 39>;

<bb 27>:
  __builtin_strncpy (q_7, p_5, 7);
  # DEBUG p => p_5 + 7
  q_72 = q_7 + 7;
  # DEBUG q => q_72
  D.41254_73 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41255_74 = __builtin_strchr (D.41254_73, 58);
  if (D.41255_74 != 0B)
    goto <bb 29>;
  else
    goto <bb 28>;

<bb 28>:

<bb 29>:
  # iftmp.16_17 = PHI <"6 "(27), "4 "(28)>
  __builtin_memcpy (q_72, iftmp.16_17, 2);
  p_77 = &MEM[(void *)p_5 + 9B];
  # DEBUG p => p_77
  q_78 = &MEM[(void *)q_7 + 9B];
  # DEBUG q => q_78
  D.41254_80 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41259_81 = strlen (D.41254_80);
  __builtin_strncpy (q_78, D.41254_80, D.41259_81);
  D.41254_82 = MEM[(struct switch_rtp_engine_t *)smh_24 + 80B].adv_sdp_ip;
  D.41260_83 = strlen (D.41254_82);
  q_84 = q_78 + D.41260_83;
  # DEBUG q => q_84
  goto <bb 32>;

<bb 30>:
  if (p_1 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 31>;

<bb 31>:
  p_97 = p_1 + 1;
  # DEBUG p => p_97

<bb 32>:
  # p_1 = PHI <p_77(29), p_97(31)>
  # DEBUG p => p_1
  if (p_1 != 0B)
    goto <bb 33>;
  else
    goto <bb 38>;

<bb 33>:
  D.41264_85 = *p_1;
  if (D.41264_85 != 0)
    goto <bb 34>;
  else
    goto <bb 38>;

<bb 34>:
  D.41266_86 = *p_1;
  D.41267_87 = D.41266_86 + 208;
  D.41268_88 = D.41267_87 <= 9;
  D.41269_89 = D.41266_86 == 46;
  D.41270_90 = D.41268_88 || D.41269_89;
  if (D.41270_90 != 0)
    goto <bb 30>;
  else
    goto <bb 35>;

<bb 35>:
  D.41264_91 = *p_1;
  if (D.41264_91 == 58)
    goto <bb 30>;
  else
    goto <bb 36>;

<bb 36>:
  D.41264_92 = *p_1;
  D.41273_93 = D.41264_92 + 191;
  if (D.41273_93 <= 5)
    goto <bb 30>;
  else
    goto <bb 37>;

<bb 37>:
  D.41264_94 = *p_1;
  D.41275_95 = D.41264_94 + 159;
  if (D.41275_95 <= 5)
    goto <bb 30>;
  else
    goto <bb 38>;

<bb 38>:
  has_ip_98 = has_ip_14 + 1;
  # DEBUG has_ip => has_ip_98
  goto <bb 53>;

<bb 39>:
  D.41276_99 = strncmp ("o=", p_5, 2);
  if (D.41276_99 == 0)
    goto <bb 40>;
  else
    goto <bb 49>;

<bb 40>:
  oe_100 = __builtin_strchr (p_5, 10);
  # DEBUG oe => oe_100
  if (oe_100 != 0B)
    goto <bb 41>;
  else
    goto <bb 53>;

<bb 41>:
  # DEBUG family => "IP4"
  o_line = "";
  if (oe_100 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 42>;

<bb 42>:
  oe.17_103 = (int) oe_100;
  p.18_104 = (int) p_5;
  D.41285_105 = oe.17_103 - p.18_104;
  len_106 = (switch_size_t) D.41285_105;
  # DEBUG len => len_106
  p_107 = p_5 + len_106;
  # DEBUG p => p_107
  D.41210_108 = smh_24->mparams;
  D.41287_109 = D.41210_108->sipip;
  D.41288_110 = __builtin_strchr (D.41287_109, 58);
  if (D.41288_110 != 0B)
    goto <bb 44>;
  else
    goto <bb 43>;

<bb 43>:

<bb 44>:
  # family_18 = PHI <"IP6"(42), "IP4"(43)>
  # DEBUG family => family_18
  D.41292_114 = smh_24->owner_id;
  if (D.41292_114 == 0)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.41295_115 = switch_epoch_time_now (0B);
  D.41296_116 = (unsigned int) D.41295_115;
  D.41297_117 = D.41296_116 * 31821;
  D.41298_118 = D.41297_117 + 13849;
  smh_24->owner_id = D.41298_118;

<bb 46>:
  D.41299_119 = smh_24->session_id;
  if (D.41299_119 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.41292_120 = smh_24->owner_id;
  smh_24->session_id = D.41292_120;

<bb 48>:
  D.41299_121 = smh_24->session_id;
  D.41302_122 = D.41299_121 + 1;
  smh_24->session_id = D.41302_122;
  D.41210_124 = smh_24->mparams;
  D.41304_125 = D.41210_124->sdp_username;
  D.41292_126 = smh_24->owner_id;
  D.41299_127 = smh_24->session_id;
  D.41210_128 = smh_24->mparams;
  D.41287_129 = D.41210_128->sipip;
  snprintf (&o_line, 1024, &"o=%s %010u %010u IN %s %s\n"[0], D.41304_125, D.41292_126, D.41299_127, family_18, D.41287_129);
  D.41305_130 = strlen (&o_line);
  __builtin_strncpy (q_7, &o_line, D.41305_130);
  D.41306_131 = strlen (&o_line);
  D.41307_132 = D.41306_131 + -1;
  q_133 = q_7 + D.41307_132;
  # DEBUG q => q_133
  goto <bb 53>;

<bb 49>:
  D.41309_134 = strncmp ("s=", p_5, 2);
  if (D.41309_134 == 0)
    goto <bb 50>;
  else
    goto <bb 54>;

<bb 50>:
  se_135 = __builtin_strchr (p_5, 10);
  # DEBUG se => se_135
  if (se_135 != 0B)
    goto <bb 51>;
  else
    goto <bb 53>;

<bb 51>:
  s_line = "";
  if (se_135 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 52>;

<bb 52>:
  se.20_137 = (int) se_135;
  p.18_138 = (int) p_5;
  D.41317_139 = se.20_137 - p.18_138;
  len_140 = (switch_size_t) D.41317_139;
  # DEBUG len => len_140
  p_141 = p_5 + len_140;
  # DEBUG p => p_141
  D.41210_143 = smh_24->mparams;
  D.41304_144 = D.41210_143->sdp_username;
  snprintf (&s_line, 1024, &"s=%s\n"[0], D.41304_144);
  D.41319_145 = strlen (&s_line);
  __builtin_strncpy (q_7, &s_line, D.41319_145);
  D.41320_146 = strlen (&s_line);
  D.41321_147 = D.41320_146 + -1;
  q_148 = q_7 + D.41321_147;
  # DEBUG q => q_148

<bb 53>:
  # p_204 = PHI <p_107(48), p_141(52), p_1(38), p_5(50), p_5(40), p_3(82), p_5(68), p_5(67), p_2(66)>
  # q_203 = PHI <q_133(48), q_148(52), q_84(38), q_7(50), q_7(40), q_188(82), q_7(68), q_7(67), q_159(66)>
  # has_video_199 = PHI <has_video_9(48), has_video_9(52), has_video_9(38), has_video_9(50), has_video_9(40), has_video_195(82), has_video_9(68), has_video_9(67), has_video_9(66)>
  # has_audio_198 = PHI <has_audio_11(48), has_audio_11(52), has_audio_11(38), has_audio_11(50), has_audio_11(40), has_audio_11(82), has_audio_11(68), has_audio_11(67), has_audio_166(66)>
  # has_ip_193 = PHI <has_ip_14(48), has_ip_14(52), has_ip_98(38), has_ip_14(50), has_ip_14(40), has_ip_14(82), has_ip_14(68), has_ip_14(67), has_ip_14(66)>
  goto <bb 86>;

<bb 54>:
  D.41326_149 = strncmp ("m=audio ", p_5, 8);
  if (D.41326_149 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;

<bb 55>:
  D.41328_150 = strncmp ("m=image ", p_5, 8);
  if (D.41328_150 == 0)
    goto <bb 56>;
  else
    goto <bb 67>;

<bb 56>:
  D.41330_152 = MEM[(char *)p_5 + 8B];
  if (D.41330_152 != 48)
    goto <bb 57>;
  else
    goto <bb 67>;

<bb 57>:
  __builtin_strncpy (q_7, p_5, 8);
  p_153 = p_5 + 8;
  # DEBUG p => p_153
  if (p_153 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 58>;

<bb 58>:
  q_155 = q_7 + 8;
  # DEBUG q => q_155
  if (q_155 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 59>;

<bb 59>:
  D.41336_157 = strlen (&port_buf);
  __builtin_strncpy (q_155, &port_buf, D.41336_157);
  D.41337_158 = strlen (&port_buf);
  q_159 = q_155 + D.41337_158;
  # DEBUG q => q_159
  if (q_159 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 60>;

<bb 60>:
  # p_185 = PHI <p_153(59)>
  goto <bb 63>;

<bb 61>:
  if (p_2 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 62>;

<bb 62>:
  p_165 = p_2 + 1;
  # DEBUG p => p_165

<bb 63>:
  # p_2 = PHI <p_185(60), p_165(62)>
  # DEBUG p => p_2
  if (p_2 != 0B)
    goto <bb 64>;
  else
    goto <bb 66>;

<bb 64>:
  D.41264_161 = *p_2;
  if (D.41264_161 != 0)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  D.41264_162 = *p_2;
  D.41344_163 = D.41264_162 + 208;
  if (D.41344_163 <= 9)
    goto <bb 61>;
  else
    goto <bb 66>;

<bb 66>:
  has_audio_166 = has_audio_11 + 1;
  # DEBUG has_audio => has_audio_166
  goto <bb 53>;

<bb 67>:
  D.41345_167 = strncmp ("m=video ", p_5, 8);
  if (D.41345_167 == 0)
    goto <bb 68>;
  else
    goto <bb 53>;

<bb 68>:
  D.41330_169 = MEM[(char *)p_5 + 8B];
  if (D.41330_169 != 48)
    goto <bb 69>;
  else
    goto <bb 53>;

<bb 69>:
  if (has_video_9 == 0)
    goto <bb 70>;
  else
    goto <bb 73>;

<bb 70>:
  switch_core_media_choose_port (session_23(D), 1, 1);
  D.41352_170 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_170->rm_encoding = "PROXY-VID";
  D.41352_171 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_171->rm_rate = 90000;
  D.41352_172 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_172->adv_rm_rate = 90000;
  D.41352_173 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].cur_payload_map;
  D.41352_173->codec_ms = 0;
  D.41353_174 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].adv_sdp_port;
  D.41354_175 = (int) D.41353_174;
  switch_snprintf (&vport_buf, 25, "%u", D.41354_175);
  D.41222_176 = session_23(D)->channel;
  D.41355_177 = switch_channel_test_ready (D.41222_176, 1, 1);
  if (D.41355_177 != 0)
    goto <bb 71>;
  else
    goto <bb 73>;

<bb 71>:
  D.41358_178 = MEM[(struct switch_rtp_engine_t *)smh_24 + 11496B].rtp_session;
  D.41359_179 = switch_rtp_ready (D.41358_178);
  if (D.41359_179 == 0)
    goto <bb 72>;
  else
    goto <bb 73>;

<bb 72>:
  D.41222_180 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_180, 98, 1);
  D.41222_181 = session_23(D)->channel;
  switch_channel_set_flag_value (D.41222_181, 103, 1);
  switch_core_media_activate_rtp (session_23(D));

<bb 73>:
  __builtin_strncpy (q_7, p_5, 8);
  p_182 = p_5 + 8;
  # DEBUG p => p_182
  if (p_182 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 74>;

<bb 74>:
  q_184 = q_7 + 8;
  # DEBUG q => q_184
  if (q_184 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 75>;

<bb 75>:
  D.41366_186 = strlen (&vport_buf);
  __builtin_strncpy (q_184, &vport_buf, D.41366_186);
  D.41367_187 = strlen (&vport_buf);
  q_188 = q_184 + D.41367_187;
  # DEBUG q => q_188
  if (q_188 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 76>;

<bb 76>:
  # p_183 = PHI <p_182(75)>
  goto <bb 79>;

<bb 77>:
  if (p_3 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 78>;

<bb 78>:
  p_194 = p_3 + 1;
  # DEBUG p => p_194

<bb 79>:
  # p_3 = PHI <p_183(76), p_194(78)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 80>;
  else
    goto <bb 82>;

<bb 80>:
  D.41264_190 = *p_3;
  if (D.41264_190 != 0)
    goto <bb 81>;
  else
    goto <bb 82>;

<bb 81>:
  D.41264_191 = *p_3;
  D.41344_192 = D.41264_191 + 208;
  if (D.41344_192 <= 9)
    goto <bb 77>;
  else
    goto <bb 82>;

<bb 82>:
  has_video_195 = has_video_9 + 1;
  # DEBUG has_video => has_video_195
  goto <bb 53>;

<bb 83>:
  if (p_4 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 84>;

<bb 84>:
  if (q_6 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 85>;

<bb 85>:
  D.41264_200 = *p_4;
  *q_6 = D.41264_200;
  q_201 = q_6 + 1;
  # DEBUG q => q_201
  p_202 = p_4 + 1;
  # DEBUG p => p_202

<bb 86>:
  # p_4 = PHI <p_204(53), p_202(85)>
  # q_6 = PHI <q_203(53), q_201(85)>
  # has_video_8 = PHI <has_video_199(53), has_video_8(85)>
  # has_audio_10 = PHI <has_audio_198(53), has_audio_10(85)>
  # has_ip_13 = PHI <has_ip_193(53), has_ip_13(85)>
  # DEBUG has_ip => has_ip_13
  # DEBUG has_audio => has_audio_10
  # DEBUG has_video => has_video_8
  # DEBUG q => q_6
  # DEBUG p => p_4
  if (p_4 != 0B)
    goto <bb 87>;
  else
    goto <bb 89>;

<bb 87>:
  D.41264_196 = *p_4;
  if (D.41264_196 != 0)
    goto <bb 88>;
  else
    goto <bb 89>;

<bb 88>:
  D.41264_197 = *p_4;
  if (D.41264_197 != 10)
    goto <bb 83>;
  else
    goto <bb 89>;

<bb 89>:
  if (p_4 >= pe_63)
    goto <bb 94> (end);
  else
    goto <bb 90>;

<bb 90>:
  if (q_6 >= qe_65)
    goto <bb 94> (end);
  else
    goto <bb 91>;

<bb 91>:
  D.41264_205 = *p_4;
  *q_6 = D.41264_205;
  q_206 = q_6 + 1;
  # DEBUG q => q_206
  p_207 = p_4 + 1;
  # DEBUG p => p_207

<bb 92>:
  # p_5 = PHI <p_60(22), p_207(91)>
  # q_7 = PHI <new_sdp_56(22), q_206(91)>
  # has_video_9 = PHI <0(22), has_video_8(91)>
  # has_audio_11 = PHI <0(22), has_audio_10(91)>
  # has_ip_14 = PHI <0(22), has_ip_13(91)>
  # DEBUG has_ip => has_ip_14
  # DEBUG has_audio => has_audio_11
  # DEBUG has_video => has_video_9
  # DEBUG q => q_7
  # DEBUG p => p_5
  if (p_5 != 0B)
    goto <bb 93>;
  else
    goto <bb 94> (end);

<bb 93>:
  D.41264_66 = *p_5;
  if (D.41264_66 != 0)
    goto <bb 23>;
  else
    goto <bb 94> (end);

  # has_audio_12 = PHI <has_audio_11(23), has_audio_11(24), has_audio_11(30), has_audio_11(41), has_audio_11(51), has_audio_11(57), has_audio_11(58), has_audio_11(59), has_audio_11(61), has_audio_11(73), has_audio_11(74), has_audio_11(75), has_audio_11(77), has_audio_10(83), has_audio_10(84), has_audio_10(89), has_audio_10(90), has_audio_11(92), has_audio_11(93)>
  # has_ip_15 = PHI <has_ip_14(23), has_ip_14(24), has_ip_14(30), has_ip_14(41), has_ip_14(51), has_ip_14(57), has_ip_14(58), has_ip_14(59), has_ip_14(61), has_ip_14(73), has_ip_14(74), has_ip_14(75), has_ip_14(77), has_ip_13(83), has_ip_13(84), has_ip_13(89), has_ip_13(90), has_ip_14(92), has_ip_14(93)>
  # bad_16 = PHI <1(23), 2(24), 3(30), 5(41), 5(51), 4(57), 5(58), 6(59), 7(61), 8(73), 9(74), 10(75), 11(77), 12(83), 13(84), 14(89), 15(90), 0(92), 0(93)>
end:
  # DEBUG bad => bad_16
  # DEBUG has_ip => has_ip_15
  # DEBUG has_audio => has_audio_12
  if (bad_16 != 0)
    goto <bb 101>;
  else
    goto <bb 95>;

<bb 95>:
  D.41222_208 = session_23(D)->channel;
  D.41389_209 = switch_channel_check_signal (D.41222_208, 1);
  if (D.41389_209 != 0)
    goto <bb 97>;
  else
    goto <bb 96>;

<bb 96>:
  D.41222_210 = session_23(D)->channel;
  D.41391_211 = switch_channel_get_state (D.41222_210);
  if (D.41391_211 > 9)
    goto <bb 97>;
  else
    goto <bb 98>;

<bb 97>:
  D.41222_221 = session_23(D)->channel;
  D.41392_222 = switch_channel_get_name (D.41222_221);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7394, session_23(D), 7, "%s too late.\n", D.41392_222);
  goto <bb 101>;

<bb 98>:
  D.41393_212 = has_ip_15 | has_audio_12;
  if (D.41393_212 == 0)
    goto <bb 99>;
  else
    goto <bb 100>;

<bb 99>:
  D.41222_213 = session_23(D)->channel;
  D.41396_214 = switch_channel_get_name (D.41222_213);
  D.41210_215 = smh_24->mparams;
  D.41211_216 = D.41210_215->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7400, session_23(D), 7, "%s SDP has no audio in it.\n%s\n", D.41396_214, D.41211_216);
  goto <bb 101>;

<bb 100>:
  D.41222_217 = session_23(D)->channel;
  D.41397_218 = switch_channel_get_name (D.41222_217);
  D.41210_219 = smh_24->mparams;
  D.41211_220 = D.41210_219->local_sdp_str;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7406, session_23(D), 7, "%s Patched SDP\n---\n%s\n+++\n%s\n", D.41397_218, D.41211_220, new_sdp_56);
  switch_core_media_set_local_sdp (session_23(D), new_sdp_56, 0);

<bb 101>:
  return;

}



;; Function switch_core_media_start_udptl (switch_core_media_start_udptl)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 22 5 }
;; 5 succs { 22 6 }
;; 6 succs { 22 7 }
;; 7 succs { 8 22 }
;; 8 succs { 10 9 }
;; 9 succs { 10 11 }
;; 10 succs { 22 }
;; 11 succs { 12 15 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 22 }
;; 15 succs { 16 17 }
;; 16 succs { 22 }
;; 17 succs { 18 22 }
;; 18 succs { 19 22 }
;; 19 succs { 21 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7419, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.41168_4 = switch_channel_check_signal (D.41167_3, 1);

Marking useful stmt: D.41170_6 = switch_channel_get_state (D.41167_5);

Marking useful stmt: # DEBUG D#37 => &smh_2->engines

Marking useful stmt: # DEBUG a_engine => D#37

Marking useful stmt: D.41172_9 = switch_rtp_ready (D.41171_8);

Marking useful stmt: remote_host_11 = switch_rtp_get_remote_host (D.41171_10);

Marking useful stmt: # DEBUG remote_host => remote_host_11

Marking useful stmt: remote_port_13 = switch_rtp_get_remote_port (D.41171_12);

Marking useful stmt: # DEBUG remote_port => remote_port_13

Marking useful stmt: switch_channel_clear_flag (D.41167_14, 99);

Marking useful stmt: switch_rtp_udptl_mode (D.41171_15);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7441, session_1(D), 7, "No remote address\n");

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7446, session_1(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.41178_24, D.41189_26);

Marking useful stmt: D.41190_30 = switch_rtp_set_remote_address (D.41171_27, D.41178_28, D.41184_29, 0, 1, &err);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7453, session_1(D), 3, "IMAGE UDPTL REPORTS ERROR: [%s]\n", err.15_31);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7455, session_1(D), 7, "IMAGE UDPTL CHANGING DEST TO: [%s:%d]\n", D.41178_32, D.41189_34);

Marking useful stmt: D.41197_35 = switch_media_handle_test_media_flag (smh_2, 10);

Marking useful stmt: D.41200_37 = switch_channel_test_flag (D.41167_36, 106);

Marking useful stmt: val_39 = switch_channel_get_variable_dup (D.41167_38, "disable_udptl_auto_adjust", 1, -1);

Marking useful stmt: # DEBUG val => val_39

Marking useful stmt: D.41204_40 = switch_true (val_39);

Marking useful stmt: switch_rtp_set_flag (D.41171_41, 7);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_set_flag (D.41171_41, 7);

Marking useful stmt: if (val_39 == 0B)

Marking useful stmt: if (D.41204_40 == 0)

marking necessary through D.41171_41 stmt D.41171_41 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.41171_41 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.41204_40 == 0)

processing: if (val_39 == 0B)

Marking useful stmt: if (D.41200_37 == 0)

processing: if (D.41200_37 == 0)

Marking useful stmt: if (D.41197_35 == 0)

processing: if (D.41197_35 == 0)

Marking useful stmt: if (D.41190_30 != 0)

processing: if (D.41190_30 != 0)

Marking useful stmt: if (D.41181_20 != 0)

Marking useful stmt: if (D.41184_21 == remote_port_13)

Marking useful stmt: if (D.39841_23 == 0)

processing: if (D.39841_23 == 0)

marking necessary through D.39841_23 stmt D.39841_23 = __builtin_strcmp (remote_host_11, D.41178_22);
processing: D.39841_23 = __builtin_strcmp (remote_host_11, D.41178_22);

marking necessary through D.41178_22 stmt D.41178_22 = t38_options_16(D)->remote_ip;
processing: D.41178_22 = t38_options_16(D)->remote_ip;

processing: if (D.41184_21 == remote_port_13)

marking necessary through D.41184_21 stmt D.41184_21 = t38_options_16(D)->remote_port;
processing: D.41184_21 = t38_options_16(D)->remote_port;

processing: if (D.41181_20 != 0)

Marking useful stmt: if (D.41178_17 == 0B)

marking necessary through D.41181_20 stmt D.41181_20 = D.41179_18 && D.41180_19;
processing: D.41181_20 = D.41179_18 && D.41180_19;

marking necessary through D.41179_18 stmt D.41179_18 = remote_host_11 != 0B;
marking necessary through D.41180_19 stmt D.41180_19 = remote_port_13 != 0;
processing: D.41180_19 = remote_port_13 != 0;

processing: D.41179_18 = remote_host_11 != 0B;

processing: if (D.41178_17 == 0B)

Marking useful stmt: if (t38_options_16(D) == 0B)

marking necessary through D.41178_17 stmt D.41178_17 = t38_options_16(D)->remote_ip;
processing: D.41178_17 = t38_options_16(D)->remote_ip;

processing: if (t38_options_16(D) == 0B)

Marking useful stmt: if (D.41172_9 != 0)

processing: if (D.41172_9 != 0)

Marking useful stmt: if (D.41170_6 > 9)

processing: if (D.41170_6 > 9)

Marking useful stmt: if (D.41168_4 != 0)

processing: if (D.41168_4 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.41204_40 = switch_true (val_39);

processing: val_39 = switch_channel_get_variable_dup (D.41167_38, "disable_udptl_auto_adjust", 1, -1);

marking necessary through D.41167_38 stmt D.41167_38 = session_1(D)->channel;
processing: D.41167_38 = session_1(D)->channel;

processing: D.41200_37 = switch_channel_test_flag (D.41167_36, 106);

marking necessary through D.41167_36 stmt D.41167_36 = session_1(D)->channel;
processing: D.41167_36 = session_1(D)->channel;

processing: D.41197_35 = switch_media_handle_test_media_flag (smh_2, 10);

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7455, session_1(D), 7, "IMAGE UDPTL CHANGING DEST TO: [%s:%d]\n", D.41178_32, D.41189_34);

marking necessary through D.41178_32 stmt D.41178_32 = t38_options_16(D)->remote_ip;
marking necessary through D.41189_34 stmt D.41189_34 = (int) D.41184_33;
processing: D.41189_34 = (int) D.41184_33;

marking necessary through D.41184_33 stmt D.41184_33 = t38_options_16(D)->remote_port;
processing: D.41184_33 = t38_options_16(D)->remote_port;

processing: D.41178_32 = t38_options_16(D)->remote_ip;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7453, session_1(D), 3, "IMAGE UDPTL REPORTS ERROR: [%s]\n", err.15_31);

marking necessary through err.15_31 stmt err.15_31 = err;
processing: err.15_31 = err;

processing: D.41190_30 = switch_rtp_set_remote_address (D.41171_27, D.41178_28, D.41184_29, 0, 1, &err);

marking necessary through D.41171_27 stmt D.41171_27 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
marking necessary through D.41178_28 stmt D.41178_28 = t38_options_16(D)->remote_ip;
marking necessary through D.41184_29 stmt D.41184_29 = t38_options_16(D)->remote_port;
processing: D.41184_29 = t38_options_16(D)->remote_port;

processing: D.41178_28 = t38_options_16(D)->remote_ip;

processing: D.41171_27 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7446, session_1(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.41178_24, D.41189_26);

marking necessary through D.41178_24 stmt D.41178_24 = t38_options_16(D)->remote_ip;
marking necessary through D.41189_26 stmt D.41189_26 = (int) D.41184_25;
processing: D.41189_26 = (int) D.41184_25;

marking necessary through D.41184_25 stmt D.41184_25 = t38_options_16(D)->remote_port;
processing: D.41184_25 = t38_options_16(D)->remote_port;

processing: D.41178_24 = t38_options_16(D)->remote_ip;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7441, session_1(D), 7, "No remote address\n");

processing: switch_rtp_udptl_mode (D.41171_15);

marking necessary through D.41171_15 stmt D.41171_15 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.41171_15 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: switch_channel_clear_flag (D.41167_14, 99);

marking necessary through D.41167_14 stmt D.41167_14 = session_1(D)->channel;
processing: D.41167_14 = session_1(D)->channel;

processing: remote_port_13 = switch_rtp_get_remote_port (D.41171_12);

marking necessary through D.41171_12 stmt D.41171_12 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.41171_12 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: remote_host_11 = switch_rtp_get_remote_host (D.41171_10);

marking necessary through D.41171_10 stmt D.41171_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.41171_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: D.41172_9 = switch_rtp_ready (D.41171_8);

marking necessary through D.41171_8 stmt D.41171_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
processing: D.41171_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;

processing: D.41170_6 = switch_channel_get_state (D.41167_5);

marking necessary through D.41167_5 stmt D.41167_5 = session_1(D)->channel;
processing: D.41167_5 = session_1(D)->channel;

processing: D.41168_4 = switch_channel_check_signal (D.41167_3, 1);

marking necessary through D.41167_3 stmt D.41167_3 = session_1(D)->channel;
processing: D.41167_3 = session_1(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 7419, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 68 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_start_udptl (struct switch_core_session_t * session, struct switch_t38_options_t * t38_options)
{
  const char * val;
  const char * err;
  switch_port_t remote_port;
  char * remote_host;
  static const char __func__[30] = "switch_core_media_start_udptl";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_start_udptl";
  struct switch_media_handle_t * smh;
  int D.41204;
  uint32_t D.41200;
  int32_t D.41197;
  const char * err.15;
  switch_status_t D.41190;
  int D.41189;
  int D.39841;
  uint16_t D.41184;
  _Bool D.41181;
  _Bool D.41180;
  _Bool D.41179;
  const char * D.41178;
  uint8_t D.41172;
  struct switch_rtp_t * D.41171;
  switch_channel_state_t D.41170;
  int D.41168;
  struct switch_channel_t * D.41167;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7419, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 22>;
  else
    goto <bb 5>;

<bb 5>:
  D.41167_3 = session_1(D)->channel;
  D.41168_4 = switch_channel_check_signal (D.41167_3, 1);
  if (D.41168_4 != 0)
    goto <bb 22>;
  else
    goto <bb 6>;

<bb 6>:
  D.41167_5 = session_1(D)->channel;
  D.41170_6 = switch_channel_get_state (D.41167_5);
  if (D.41170_6 > 9)
    goto <bb 22>;
  else
    goto <bb 7>;

<bb 7>:
  # DEBUG D#37 => &smh_2->engines
  # DEBUG a_engine => D#37
  D.41171_8 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  D.41172_9 = switch_rtp_ready (D.41171_8);
  if (D.41172_9 != 0)
    goto <bb 8>;
  else
    goto <bb 22>;

<bb 8>:
  D.41171_10 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  remote_host_11 = switch_rtp_get_remote_host (D.41171_10);
  # DEBUG remote_host => remote_host_11
  D.41171_12 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  remote_port_13 = switch_rtp_get_remote_port (D.41171_12);
  # DEBUG remote_port => remote_port_13
  D.41167_14 = session_1(D)->channel;
  switch_channel_clear_flag (D.41167_14, 99);
  D.41171_15 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_udptl_mode (D.41171_15);
  if (t38_options_16(D) == 0B)
    goto <bb 10>;
  else
    goto <bb 9>;

<bb 9>:
  D.41178_17 = t38_options_16(D)->remote_ip;
  if (D.41178_17 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7441, session_1(D), 7, "No remote address\n");
  goto <bb 22>;

<bb 11>:
  D.41179_18 = remote_host_11 != 0B;
  D.41180_19 = remote_port_13 != 0;
  D.41181_20 = D.41179_18 && D.41180_19;
  if (D.41181_20 != 0)
    goto <bb 12>;
  else
    goto <bb 15>;

<bb 12>:
  D.41184_21 = t38_options_16(D)->remote_port;
  if (D.41184_21 == remote_port_13)
    goto <bb 13>;
  else
    goto <bb 15>;

<bb 13>:
  D.41178_22 = t38_options_16(D)->remote_ip;
  D.39841_23 = __builtin_strcmp (remote_host_11, D.41178_22);
  if (D.39841_23 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.41178_24 = t38_options_16(D)->remote_ip;
  D.41184_25 = t38_options_16(D)->remote_port;
  D.41189_26 = (int) D.41184_25;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7446, session_1(D), 7, "Remote address:port [%s:%d] has not changed.\n", D.41178_24, D.41189_26);
  goto <bb 22>;

<bb 15>:
  D.41171_27 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  D.41178_28 = t38_options_16(D)->remote_ip;
  D.41184_29 = t38_options_16(D)->remote_port;
  D.41190_30 = switch_rtp_set_remote_address (D.41171_27, D.41178_28, D.41184_29, 0, 1, &err);
  if (D.41190_30 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  err.15_31 = err;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7453, session_1(D), 3, "IMAGE UDPTL REPORTS ERROR: [%s]\n", err.15_31);
  goto <bb 22>;

<bb 17>:
  D.41178_32 = t38_options_16(D)->remote_ip;
  D.41184_33 = t38_options_16(D)->remote_port;
  D.41189_34 = (int) D.41184_33;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7455, session_1(D), 7, "IMAGE UDPTL CHANGING DEST TO: [%s:%d]\n", D.41178_32, D.41189_34);
  D.41197_35 = switch_media_handle_test_media_flag (smh_2, 10);
  if (D.41197_35 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;

<bb 18>:
  D.41167_36 = session_1(D)->channel;
  D.41200_37 = switch_channel_test_flag (D.41167_36, 106);
  if (D.41200_37 == 0)
    goto <bb 19>;
  else
    goto <bb 22>;

<bb 19>:
  D.41167_38 = session_1(D)->channel;
  val_39 = switch_channel_get_variable_dup (D.41167_38, "disable_udptl_auto_adjust", 1, -1);
  # DEBUG val => val_39
  if (val_39 == 0B)
    goto <bb 21>;
  else
    goto <bb 20>;

<bb 20>:
  D.41204_40 = switch_true (val_39);
  if (D.41204_40 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.41171_41 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtp_session;
  switch_rtp_set_flag (D.41171_41, 7);

<bb 22>:
  return;

}



;; Function switch_core_media_receive_message (switch_core_media_receive_message)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 2
;;  header 128, latch 127
;;  depth 1, outer 0
;;  nodes: 128 127 129
;;
;; Loop 1
;;  header 124, latch 123
;;  depth 1, outer 0
;;  nodes: 124 123 125
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 169 5 }
;; 5 succs { 169 6 }
;; 6 succs { 169 7 }
;; 7 succs { 135 74 99 115 117 10 71 113 48 12 16 8 }
;; 8 succs { 9 135 }
;; 9 succs { 135 }
;; 10 succs { 11 135 }
;; 11 succs { 135 }
;; 12 succs { 13 135 }
;; 13 succs { 14 15 }
;; 14 succs { 135 }
;; 15 succs { 135 }
;; 16 succs { 17 135 }
;; 17 succs { 18 40 }
;; 18 succs { 19 20 }
;; 19 succs { 165 }
;; 20 succs { 21 22 }
;; 21 succs { 165 }
;; 22 succs { 23 31 }
;; 23 succs { 24 30 }
;; 24 succs { 25 28 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 165 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 38 }
;; 35 succs { 36 38 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 47 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 46 }
;; 44 succs { 45 135 }
;; 45 succs { 135 }
;; 46 succs { 135 }
;; 47 succs { 135 }
;; 48 succs { 49 51 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 165 }
;; 52 succs { 55 53 }
;; 53 succs { 55 54 }
;; 54 succs { 55 }
;; 55 succs { 56 165 }
;; 56 succs { 59 57 }
;; 57 succs { 59 58 }
;; 58 succs { 59 }
;; 59 succs { 60 165 }
;; 60 succs { 62 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 65 64 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 70 }
;; 67 succs { 68 69 }
;; 68 succs { 165 }
;; 69 succs { 165 }
;; 70 succs { 165 }
;; 71 succs { 72 165 }
;; 72 succs { 73 165 }
;; 73 succs { 165 }
;; 74 succs { 75 165 }
;; 75 succs { 77 76 }
;; 76 succs { 77 80 }
;; 77 succs { 78 80 }
;; 78 succs { 79 80 }
;; 79 succs { 80 }
;; 80 succs { 81 83 }
;; 81 succs { 82 83 }
;; 82 succs { 83 }
;; 83 succs { 84 85 }
;; 84 succs { 86 }
;; 85 succs { 86 }
;; 86 succs { 87 89 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 93 }
;; 92 succs { 96 93 }
;; 93 succs { 94 95 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 98 }
;; 97 succs { 165 }
;; 98 succs { 165 }
;; 99 succs { 100 165 }
;; 100 succs { 101 103 }
;; 101 succs { 102 103 }
;; 102 succs { 103 }
;; 103 succs { 104 105 }
;; 104 succs { 105 }
;; 105 succs { 106 110 }
;; 106 succs { 107 109 }
;; 107 succs { 108 109 }
;; 108 succs { 109 }
;; 109 succs { 110 }
;; 110 succs { 111 112 }
;; 111 succs { 165 }
;; 112 succs { 165 }
;; 113 succs { 114 165 }
;; 114 succs { 165 }
;; 115 succs { 116 135 }
;; 116 succs { 135 }
;; 117 succs { 118 119 }
;; 118 succs { 119 }
;; 119 succs { 120 131 }
;; 120 succs { 121 131 }
;; 121 succs { 122 131 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 126 }
;; 125 succs { 123 126 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 130 }
;; 129 succs { 127 130 }
;; 130 succs { 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 135 }
;; 134 succs { 135 }
;; 135 succs { 136 137 }
;; 136 succs { 137 }
;; 137 succs { 163 138 }
;; 138 succs { 163 140 }
;; 140 succs { 163 161 153 141 }
;; 141 succs { 142 150 }
;; 142 succs { 143 144 }
;; 143 succs { 149 }
;; 144 succs { 145 146 }
;; 145 succs { 146 }
;; 146 succs { 148 147 }
;; 147 succs { 148 }
;; 148 succs { 149 }
;; 149 succs { 150 }
;; 150 succs { 151 163 }
;; 151 succs { 152 163 }
;; 152 succs { 163 }
;; 153 succs { 154 163 }
;; 154 succs { 155 158 }
;; 155 succs { 156 157 }
;; 156 succs { 157 }
;; 157 succs { 163 }
;; 158 succs { 159 163 }
;; 159 succs { 160 163 }
;; 160 succs { 163 }
;; 161 succs { 162 163 }
;; 162 succs { 163 }
;; 163 succs { 164 165 }
;; 164 succs { 165 }
;; 165 succs { 167 166 }
;; 166 succs { 167 168 }
;; 167 succs { 168 }
;; 168 succs { 169 }
;; 169 succs { 1 }
Marking useful stmt: # DEBUG status => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7477, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_27

Marking useful stmt: D.40824_30 = switch_channel_check_signal (D.40823_29, 1);

Marking useful stmt: D.40826_32 = switch_channel_get_state (D.40823_31);

Marking useful stmt: # DEBUG D#39 => &smh_27->engines

Marking useful stmt: # DEBUG a_engine => D#39

Marking useful stmt: # DEBUG D#38 => &smh_27->engines[1]

Marking useful stmt: # DEBUG v_engine => D#38

Marking useful stmt: <L7>:

Marking useful stmt: D.40828_38 = switch_channel_test_flag (D.40823_37, 82);

Marking useful stmt: switch_channel_set_flag_value (D.40823_39, 122, 1);

Marking useful stmt: <L10>:

Marking useful stmt: switch_rtp_video_refresh (D.40831_41);

Marking useful stmt: <L13>:

Marking useful stmt: D.40835_43 = switch_rtp_ready (D.40834_42);

Marking useful stmt: switch_rtp_set_flag (D.40834_45, 19);

Marking useful stmt: switch_rtp_clear_flag (D.40834_46, 19);

Marking useful stmt: <L19>:

Marking useful stmt: D.40842_48 = switch_rtp_ready (D.40834_47);

Marking useful stmt: # DEBUG len => 0

Marking useful stmt: # DEBUG maxlen => 0

Marking useful stmt: # DEBUG qlen => 0

Marking useful stmt: # DEBUG maxqlen => 50

Marking useful stmt: # DEBUG max_drift => 0

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_57, 1);

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_60, 0);

Marking useful stmt: # DEBUG s => s_64

Marking useful stmt: # DEBUG __s2_len => 3

Marking useful stmt: # DEBUG __s1 => s_64

Marking useful stmt: # DEBUG __result => __result_72

Marking useful stmt: # DEBUG __result => __result_82

Marking useful stmt: # DEBUG __result => __result_92

Marking useful stmt: # DEBUG __result => D.40894_98

Marking useful stmt: # DEBUG __result => __result_13

Marking useful stmt: # DEBUG s => 0B

Marking useful stmt: # DEBUG s => s_12

Marking useful stmt: status_109 = switch_rtp_debug_jitter_buffer (D.40834_108, s_12);

Marking useful stmt: # DEBUG status => status_109

Marking useful stmt: # DEBUG __nptr => D.40845_110

Marking useful stmt: len_481 = strtol (D.40845_110, 0B, 10);

Marking useful stmt: # DEBUG len => NULL

Marking useful stmt: # DEBUG qlen => qlen_114

Marking useful stmt: # DEBUG qlen => 3

Marking useful stmt: # DEBUG qlen => qlen_6

Marking useful stmt: # DEBUG p => p_117

Marking useful stmt: # DEBUG p => p_118

Marking useful stmt: # DEBUG __nptr => p_118

Marking useful stmt: maxlen_482 = strtol (p_118, 0B, 10);

Marking useful stmt: # DEBUG maxlen => NULL

Marking useful stmt: # DEBUG q => q_120

Marking useful stmt: # DEBUG q => q_121

Marking useful stmt: # DEBUG __nptr => q_121

Marking useful stmt: D.48234_483 = strtol (q_121, 0B, 10);

Marking useful stmt: # DEBUG max_drift => max_drift_123

Marking useful stmt: # DEBUG max_drift => max_drift_10

Marking useful stmt: # DEBUG maxlen => maxlen_5

Marking useful stmt: # DEBUG maxqlen => maxqlen_126

Marking useful stmt: # DEBUG max_drift => max_drift_11

Marking useful stmt: # DEBUG maxqlen => maxqlen_8

Marking useful stmt: # DEBUG qlen => qlen_7

Marking useful stmt: # DEBUG len => len_4

Marking useful stmt: # DEBUG maxqlen => maxqlen_127

Marking useful stmt: # DEBUG maxqlen => maxqlen_9

Marking useful stmt: D.40925_134 = switch_rtp_activate_jitter_buffer (D.40834_128, qlen.8_129, maxqlen.9_130, D.40922_131, D.40923_132, max_drift.10_133);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7577, session_26(D), 7, "Setting Jitterbuffer to %dms (%d frames) (%d max frames) (%d max drift)\n", len_4, qlen_7, maxqlen_9, max_drift_11);

Marking useful stmt: switch_channel_set_flag_value (D.40823_135, 57, 1);

Marking useful stmt: D.40928_137 = switch_channel_get_variable_dup (D.40823_136, "rtp_jitter_buffer_plc", 1, -1);

Marking useful stmt: D.40929_138 = switch_false (D.40928_137);

Marking useful stmt: switch_channel_set_flag_value (D.40823_139, 58, 1);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7585, session_26(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", len_4, qlen_7);

Marking useful stmt: switch_rtp_deactivate_jitter_buffer (D.40834_140);

Marking useful stmt: <L65>:

Marking useful stmt: # DEBUG rtp => rtp_141

Marking useful stmt: # DEBUG direction => direction_142

Marking useful stmt: # DEBUG direction => direction_144

Marking useful stmt: # DEBUG rtp => rtp_145

Marking useful stmt: # DEBUG direction => direction_15

Marking useful stmt: # DEBUG rtp => rtp_14

Marking useful stmt: D.40939_146 = switch_rtp_ready (rtp_14);

Marking useful stmt: # DEBUG s => direction_15

Marking useful stmt: # DEBUG s => D.40945_148

Marking useful stmt: # DEBUG both => both_151

Marking useful stmt: # DEBUG set => 0

Marking useful stmt: # DEBUG set => 1

Marking useful stmt: # DEBUG set => set_16

Marking useful stmt: # DEBUG set => set_160

Marking useful stmt: # DEBUG set => set_17

Marking useful stmt: D.40964_162 = switch_true (D.40945_161);

Marking useful stmt: switch_rtp_set_flags (rtp_14, &flags);

Marking useful stmt: switch_rtp_clear_flags (rtp_14, &flags);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7627, session_26(D), 3, "Invalid Options\n");

Marking useful stmt: <L88>:

Marking useful stmt: D.40971_165 = switch_rtp_test_flag (D.40834_164, 15);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7634, session_26(D), 4, "Pass 2833 mode may not work on a transcoded call.\n");

Marking useful stmt: <L93>:

Marking useful stmt: D.40974_167 = switch_rtp_ready (D.40834_166);

Marking useful stmt: # DEBUG ok => 0

Marking useful stmt: val_170 = switch_channel_get_variable_dup (D.40823_169, "rtp_jitter_buffer_during_bridge", 1, -1);

Marking useful stmt: # DEBUG val => val_170

Marking useful stmt: D.40980_171 = switch_false (val_170);

Marking useful stmt: D.40981_173 = switch_channel_test_flag (D.40823_172, 57);

Marking useful stmt: D.40984_175 = switch_channel_test_cap_partner (D.40823_174, 5);

Marking useful stmt: D.40987_177 = switch_channel_get_name (D.40823_176);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7647, session_26(D), 7, "%s PAUSE Jitterbuffer\n", D.40987_177);

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_178, 1);

Marking useful stmt: smh_27->flags = D.40989_180;

Marking useful stmt: D.40990_182 = switch_channel_test_flag (D.40823_181, 100);

Marking useful stmt: D.40993_184 = switch_channel_test_flag_partner (D.40823_183, 36);

Marking useful stmt: switch_rtp_set_flag (D.40834_185, 15);

Marking useful stmt: D.40996_187 = switch_channel_get_name (D.40823_186);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7656, session_26(D), 7, "%s activate passthru 2833 mode.\n", D.40996_187);

Marking useful stmt: val_189 = switch_channel_get_variable_dup (D.40823_188, "rtp_notimer_during_bridge", 1, -1);

Marking useful stmt: # DEBUG val => val_189

Marking useful stmt: ok_190 = switch_true (val_189);

Marking useful stmt: # DEBUG ok => ok_190

Marking useful stmt: D.41000_192 = switch_channel_test_flag (D.40823_191, 105);

Marking useful stmt: # DEBUG ok => ok_193

Marking useful stmt: # DEBUG ok => ok_18

Marking useful stmt: D.41003_195 = switch_rtp_test_flag (D.40834_194, 3);

Marking useful stmt: # DEBUG ok => 0

Marking useful stmt: # DEBUG ok => ok_19

Marking useful stmt: switch_rtp_clear_flag (D.40834_197, 3);

Marking useful stmt: switch_channel_set_flag_value (D.40823_198, 99, 1);

Marking useful stmt: D.41011_200 = switch_channel_test_flag (D.40823_199, 99);

Marking useful stmt: val_203 = switch_channel_get_variable_dup (D.40823_202, "rtp_autoflush_during_bridge", 1, -1);

Marking useful stmt: # DEBUG val => val_203

Marking useful stmt: ok_204 = switch_true (val_203);

Marking useful stmt: # DEBUG ok => ok_204

Marking useful stmt: # DEBUG ok => ok_206

Marking useful stmt: # DEBUG ok => ok_20

Marking useful stmt: rtp_flush_read_buffer (D.40834_207, 1);

Marking useful stmt: switch_channel_set_flag_value (D.40823_208, 104, 1);

Marking useful stmt: rtp_flush_read_buffer (D.40834_209, 0);

Marking useful stmt: <L126>:

Marking useful stmt: D.41020_211 = switch_rtp_ready (D.40834_210);

Marking useful stmt: smh_27->flags = D.41026_215;

Marking useful stmt: D.41027_217 = switch_channel_test_flag (D.40823_216, 57);

Marking useful stmt: D.41030_219 = switch_channel_get_name (D.40823_218);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7704, session_26(D), 7, "%s RESUME Jitterbuffer\n", D.41030_219);

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_220, 0);

Marking useful stmt: D.41031_222 = switch_rtp_test_flag (D.40834_221, 15);

Marking useful stmt: D.41034_224 = switch_channel_get_name (D.40823_223);

Marking useful stmt: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7712, session_26(D), 7, "%s deactivate passthru 2833 mode.\n", D.41034_224);

Marking useful stmt: switch_rtp_clear_flag (D.40834_225, 15);

Marking useful stmt: D.41035_227 = switch_channel_test_flag (D.40823_226, 99);

Marking useful stmt: D.41038_229 = switch_rtp_test_flag (D.40834_228, 12);

Marking useful stmt: D.41041_231 = switch_rtp_test_flag (D.40834_230, 19);

Marking useful stmt: switch_rtp_set_flag (D.40834_232, 3);

Marking useful stmt: switch_channel_clear_flag (D.40823_233, 99);

Marking useful stmt: D.41044_235 = switch_channel_test_flag (D.40823_234, 104);

Marking useful stmt: rtp_flush_read_buffer (D.40834_236, 2);

Marking useful stmt: switch_channel_clear_flag (D.40823_237, 104);

Marking useful stmt: rtp_flush_read_buffer (D.40834_238, 0);

Marking useful stmt: <L144>:

Marking useful stmt: D.41048_240 = switch_rtp_ready (D.40834_239);

Marking useful stmt: rtp_flush_read_buffer (D.40834_241, 0);

Marking useful stmt: <L147>:

Marking useful stmt: switch_core_session_enable_heartbeat (session_26(D), D.41051_243);

Marking useful stmt: <L150>:

Marking useful stmt: # DEBUG ip => 0B

Marking useful stmt: # DEBUG port => 0B

Marking useful stmt: switch_channel_set_flag_value (D.40823_246, 15, 1);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;

Marking useful stmt: switch_core_media_set_local_sdp (session_26(D), 0B, 0);

Marking useful stmt: D.41054_248 = switch_channel_get_variable_dup (D.40823_247, "bypass_keep_codec", 1, -1);

Marking useful stmt: D.41055_249 = switch_true (D.41054_248);

Marking useful stmt: D.41058_252 = switch_channel_get_variable_dup (D.40823_251, "ep_codec_string", 1, -1);

Marking useful stmt: switch_channel_set_variable_var_check (D.40823_251, "absolute_codec_string", D.41058_252, 1);

Marking useful stmt: uuid_254 = switch_channel_get_partner_uuid (D.40823_253);

Marking useful stmt: # DEBUG uuid => uuid_254

Marking useful stmt: other_session_255 = switch_core_session_perform_locate (uuid_254, "src/switch_core_media.c", &__func__, 7768);

Marking useful stmt: # DEBUG other_session => other_session_255

Marking useful stmt: other_channel_256 = switch_core_session_get_channel (other_session_255);

Marking useful stmt: # DEBUG other_channel => other_channel_256

Marking useful stmt: ip_257 = switch_channel_get_variable_dup (other_channel_256, "remote_media_ip", 1, -1);

Marking useful stmt: # DEBUG ip => ip_257

Marking useful stmt: port_258 = switch_channel_get_variable_dup (other_channel_256, "remote_media_port", 1, -1);

Marking useful stmt: # DEBUG port => port_258

Marking useful stmt: switch_core_session_rwunlock (other_session_255);

Marking useful stmt: switch_core_media_prepare_codecs (session_26(D), 1);

Marking useful stmt: # DEBUG engine => D#39

Marking useful stmt: # DEBUG pmap => pmap_488

Marking useful stmt: pmap_489->negotiated = 0;

Marking useful stmt: pmap_489->current = 0;

Marking useful stmt: # DEBUG pmap => pmap_490

Marking useful stmt: # DEBUG pmap => pmap_489

Marking useful stmt: # DEBUG engine => D#38

Marking useful stmt: # DEBUG pmap => pmap_492

Marking useful stmt: pmap_493->negotiated = 0;

Marking useful stmt: pmap_493->current = 0;

Marking useful stmt: # DEBUG pmap => pmap_494

Marking useful stmt: # DEBUG pmap => pmap_493

Marking useful stmt: # DEBUG __nptr => port_258

Marking useful stmt: D.48251_496 = strtol (port_258, 0B, 10);

Marking useful stmt: switch_core_media_gen_local_sdp (session_26(D), 0, ip_257, D.41069_263, 0B, 1);

Marking useful stmt: switch_core_media_absorb_sdp (session_26(D));

Marking useful stmt: switch_core_session_enable_heartbeat (session_26(D), D.41051_267);

Marking useful stmt: <L211>:

Marking useful stmt: switch_mutex_lock (D.41076_269);

Marking useful stmt: D.41081_271 = switch_channel_check_signal (D.40823_270, 1);

Marking useful stmt: D.41083_273 = switch_channel_get_state (D.40823_272);

Marking useful stmt: <L170>:

Marking useful stmt: switch_channel_set_variable_var_check (D.40823_276, "absolute_codec_string", 0B, 1);

Marking useful stmt: switch_channel_set_variable_var_check (D.40823_279, "codec_string", D.40845_280, 1);

Marking useful stmt: switch_channel_set_variable_printf (D.40823_281, "codec_string", "=%s%s%s,%s", iftmp.11_23, iftmp.12_24, D.41101_292, D.40845_293);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;

Marking useful stmt: switch_channel_clear_flag (D.40823_294, 98);

Marking useful stmt: switch_core_media_prepare_codecs (session_26(D), 1);

Marking useful stmt: switch_core_media_check_video_codecs (session_26(D));

Marking useful stmt: switch_core_media_gen_local_sdp (session_26(D), 0, 0B, 0, 0B, 1);

Marking useful stmt: switch_media_handle_set_media_flag (smh_27, 7);

Marking useful stmt: D.41104_296 = switch_core_session_perform_get_partner (session_26(D), &nsession, "src/switch_core_media.c", &__func__, 7835);

Marking useful stmt: msg_35(D)->numeric_arg = 0;

Marking useful stmt: switch_core_session_perform_receive_message (nsession.13_297, msg_35(D), "src/switch_core_media.c", &__func__, 7837);

Marking useful stmt: switch_core_session_rwunlock (nsession.13_298);

Marking useful stmt: <L186>:

Marking useful stmt: D.41108_300 = switch_rtp_ready (D.40834_299);

Marking useful stmt: D.41113_303 = switch_channel_test_flag (D.40823_302, 57);

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_304, 1);

Marking useful stmt: smh_27->flags = D.40989_306;

Marking useful stmt: rtp_flush_read_buffer (D.40834_307, 2);

Marking useful stmt: smh_27->flags = D.41026_311;

Marking useful stmt: D.41119_313 = switch_channel_test_flag (D.40823_312, 57);

Marking useful stmt: switch_rtp_pause_jitter_buffer (D.40834_314, 0);

Marking useful stmt: <L198>:

Marking useful stmt: t38_options_316 = switch_channel_get_private (D.40823_315, "t38_options");

Marking useful stmt: # DEBUG t38_options => t38_options_316

Marking useful stmt: switch_core_media_start_udptl (session_26(D), t38_options_316);

Marking useful stmt: end_lock:

Marking useful stmt: # DEBUG status => status_1

Marking useful stmt: switch_mutex_unlock (D.41076_319);

Marking useful stmt: end:

Marking useful stmt: # DEBUG status => status_2

Marking useful stmt: D.41128_321 = switch_channel_check_signal (D.40823_320, 1);

Marking useful stmt: D.41130_323 = switch_channel_get_state (D.40823_322);

Marking useful stmt: # DEBUG status => 1

Marking useful stmt: # DEBUG status => status_3

Marking useful stmt: return status_21;

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.48249_495)
(get_scalar_evolution 
  (scalar = D.48249_495)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = D.48249_495)
(get_scalar_evolution 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = D.48249_495)
  (scalar_evolution = D.48249_495))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_493)
(get_scalar_evolution 
  (scalar = pmap_493)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_493 = PHI <pmap_492(126), pmap_494(127)>
)
  (init_cond = pmap_492))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_493 = PHI <pmap_492(126), pmap_494(127)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = pmap_493)
(get_scalar_evolution 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
(set_scalar_evolution 
  instantiated_below = 126 
  (scalar = pmap_493)
  (scalar_evolution = pmap_493))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.48249_495 != 0)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.48246_491)
(get_scalar_evolution 
  (scalar = D.48246_491)
  (scalar_evolution = ))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = D.48246_491)
(get_scalar_evolution 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = D.48246_491)
  (scalar_evolution = D.48246_491))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_489)
(get_scalar_evolution 
  (scalar = pmap_489)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
pmap_489 = PHI <pmap_488(122), pmap_490(123)>
)
  (init_cond = pmap_488))
(analyze_evolution_in_loop 
  (loop_phi_node = pmap_489 = PHI <pmap_488(122), pmap_490(123)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = pmap_489)
(get_scalar_evolution 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
(set_scalar_evolution 
  instantiated_below = 122 
  (scalar = pmap_489)
  (scalar_evolution = pmap_489))
)
can not prove finiteness of loop 1
Marking useful stmt: if (D.48246_491 != 0)


Processing worklist:
processing: if (D.48246_491 != 0)

Marking useful stmt: if (pmap_489 != 0B)

marking necessary through D.48246_491 stmt D.48246_491 = pmap_489->allocated;
processing: D.48246_491 = pmap_489->allocated;

marking necessary through pmap_489 stmt pmap_489 = PHI <pmap_488(122), pmap_490(123)>
processing: pmap_489 = PHI <pmap_488(122), pmap_490(123)>

Marking useful stmt: if (D.41065_261 != 0)

marking necessary through pmap_488 stmt pmap_488 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].payload_map;
marking necessary through pmap_490 stmt pmap_490 = pmap_489->next;
processing: pmap_490 = pmap_489->next;

processing: pmap_488 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].payload_map;

marking necessary through smh_27 stmt smh_27 = session_26(D)->media_handle;
processing: smh_27 = session_26(D)->media_handle;

Marking useful stmt: if (session_26(D) == 0B)

processing: if (session_26(D) == 0B)

processing: if (D.41065_261 != 0)

Marking useful stmt: if (other_session_255 != 0B)

marking necessary through D.41065_261 stmt D.41065_261 = D.41063_259 && D.41064_260;
processing: D.41065_261 = D.41063_259 && D.41064_260;

marking necessary through D.41063_259 stmt D.41063_259 = ip_257 != 0B;
marking necessary through D.41064_260 stmt D.41064_260 = port_258 != 0B;
processing: D.41064_260 = port_258 != 0B;

processing: D.41063_259 = ip_257 != 0B;

processing: if (other_session_255 != 0B)

Marking useful stmt: if (uuid_254 != 0B)

processing: if (uuid_254 != 0B)

Marking useful stmt: switch (D.40827_36) <default: <L211>, case 4: <L93>, case 5: <L126>, case 8: <L147>, case 9: <L150>, case 17: <L10>, case 19: <L88>, case 20: <L144>, case 24: <L65>, case 25: <L13>, case 32: <L19>, case 46: <L7>>

processing: switch (D.40827_36) <default: <L211>, case 4: <L93>, case 5: <L126>, case 8: <L147>, case 9: <L150>, case 17: <L10>, case 19: <L88>, case 20: <L144>, case 24: <L65>, case 25: <L13>, case 32: <L19>, case 46: <L7>>

Marking useful stmt: if (D.40826_32 > 9)

marking necessary through D.40827_36 stmt D.40827_36 = msg_35(D)->message_id;
processing: D.40827_36 = msg_35(D)->message_id;

processing: if (D.40826_32 > 9)

Marking useful stmt: if (D.40824_30 != 0)

processing: if (D.40824_30 != 0)

Marking useful stmt: if (smh_27 == 0B)

processing: if (smh_27 == 0B)

processing: if (pmap_489 != 0B)

processing: if (D.48249_495 != 0)

Marking useful stmt: if (pmap_493 != 0B)

marking necessary through D.48249_495 stmt D.48249_495 = pmap_493->allocated;
processing: D.48249_495 = pmap_493->allocated;

marking necessary through pmap_493 stmt pmap_493 = PHI <pmap_492(126), pmap_494(127)>
processing: pmap_493 = PHI <pmap_492(126), pmap_494(127)>

marking necessary through pmap_492 stmt pmap_492 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].payload_map;
marking necessary through pmap_494 stmt pmap_494 = pmap_493->next;
processing: pmap_494 = pmap_493->next;

processing: pmap_492 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].payload_map;

processing: if (pmap_493 != 0B)

processing: return status_21;

marking necessary through status_21 stmt status_21 = PHI <1(4), 1(6), status_3(168), 1(5)>
processing: status_21 = PHI <1(4), 1(6), status_3(168), 1(5)>

marking necessary through status_3 stmt status_3 = PHI <status_2(166), 1(167)>
processing: status_3 = PHI <status_2(166), 1(167)>

marking necessary through status_2 stmt status_2 = PHI <0(19), 0(21), status_109(30), 0(55), 0(72), 0(97), 0(111), 0(114), status_1(163), status_1(164), 0(51), 0(68), 0(70), 0(69), 0(59), 0(71), 0(73), 0(74), 0(98), 0(99), 0(112), 0(113)>
Marking useful stmt: if (D.41128_321 != 0)

Marking useful stmt: if (D.41130_323 > 9)

processing: if (D.41130_323 > 9)

processing: if (D.41128_321 != 0)

processing: status_2 = PHI <0(19), 0(21), status_109(30), 0(55), 0(72), 0(97), 0(111), 0(114), status_1(163), status_1(164), 0(51), 0(68), 0(70), 0(69), 0(59), 0(71), 0(73), 0(74), 0(98), 0(99), 0(112), 0(113)>

marking necessary through status_1 stmt status_1 = PHI <1(138), 0(151), 0(157), 0(161), 0(150), 0(152), 0(153), 0(160), 0(159), 0(158), 0(140), 0(162), 1(137)>
Marking useful stmt: if (D.40848_56 == 0)

Marking useful stmt: if (D.40851_59 == 0)

Marking useful stmt: if (D.40854_62 == 0)

Marking useful stmt: if (D.40939_146 != 0)

Marking useful stmt: if (D.40834_163 != 0B)

Marking useful stmt: if (ok_20 != 0)

Marking useful stmt: if (D.41044_235 != 0)

Marking useful stmt: if (D.41048_240 != 0)

Marking useful stmt: if (D.40842_48 != 0)

Marking useful stmt: if (D.40845_54 != 0B)

Marking useful stmt: if (D.41076_318 != 0B)

Marking useful stmt: if (D.40964_162 != 0)

Marking useful stmt: if (set_17 != 0)

Marking useful stmt: if (D.48237_485 == 0)

Marking useful stmt: if (D.40971_165 != 0)

processing: if (D.40971_165 != 0)

processing: if (D.48237_485 == 0)

marking necessary through D.48237_485 stmt D.48237_485 = PHI <1(52), 1(53), 0(54)>
processing: D.48237_485 = PHI <1(52), 1(53), 0(54)>

Marking useful stmt: if (direction_15 == 0B)

Marking useful stmt: if (D.48238_484 == 0)

processing: if (D.48238_484 == 0)

marking necessary through D.48238_484 stmt D.48238_484 = *direction_15;
processing: D.48238_484 = *direction_15;

marking necessary through direction_15 stmt direction_15 = PHI <direction_142(48), direction_142(49), direction_144(50)>
processing: direction_15 = PHI <direction_142(48), direction_142(49), direction_144(50)>

marking necessary through direction_142 stmt direction_142 = msg_35(D)->string_array_arg[0];
marking necessary through direction_144 stmt direction_144 = direction_142 + 1;
Marking useful stmt: if (direction_142 != 0B)

Marking useful stmt: if (D.40936_143 == 118)

processing: if (D.40936_143 == 118)

marking necessary through D.40936_143 stmt D.40936_143 = *direction_142;
processing: D.40936_143 = *direction_142;

processing: if (direction_142 != 0B)

processing: direction_144 = direction_142 + 1;

processing: direction_142 = msg_35(D)->string_array_arg[0];

processing: if (direction_15 == 0B)

processing: if (set_17 != 0)

Marking useful stmt: if (D.48241_487 == 0)

marking necessary through set_17 stmt set_17 = PHI <set_16(64), set_160(65)>
processing: set_17 = PHI <set_16(64), set_160(65)>

marking necessary through set_16 stmt set_16 = PHI <0(61), 1(62)>
marking necessary through set_160 stmt set_160 = set_16 + 1;
Marking useful stmt: if (both_151 != 0)

Marking useful stmt: if (D.40959_157 == 0)

processing: if (D.40959_157 == 0)

marking necessary through D.40959_157 stmt D.40959_157 = strcasecmp (direction_15, "write");
processing: D.40959_157 = strcasecmp (direction_15, "write");

marking necessary through .MEM_374 stmt flags = {};
marking necessary through .MEM_375 stmt flags[28] = D.40955_155;
processing: flags[28] = D.40955_155;

Marking useful stmt: if (both_151 != 0)

Marking useful stmt: if (D.40953_153 == 0)

marking necessary through D.40955_155 stmt D.40955_155 = D.40954_154 + 1;
processing: D.40955_155 = D.40954_154 + 1;

marking necessary through D.40954_154 stmt D.40954_154 = flags[28];
processing: D.40954_154 = flags[28];

processing: if (D.40953_153 == 0)

marking necessary through D.40953_153 stmt D.40953_153 = strcasecmp (direction_15, "read");
processing: D.40953_153 = strcasecmp (direction_15, "read");

processing: if (both_151 != 0)

marking necessary through both_151 stmt both_151 = D.40949_150 == 0;
processing: both_151 = D.40949_150 == 0;

marking necessary through D.40949_150 stmt D.40949_150 = strcasecmp (direction_15, "both");
processing: D.40949_150 = strcasecmp (direction_15, "both");

processing: flags = {};

processing: if (both_151 != 0)

processing: set_160 = set_16 + 1;

processing: set_16 = PHI <0(61), 1(62)>

processing: if (D.48241_487 == 0)

marking necessary through D.48241_487 stmt D.48241_487 = PHI <1(56), 1(57), 0(58)>
processing: D.48241_487 = PHI <1(56), 1(57), 0(58)>

Marking useful stmt: if (D.40945_148 == 0B)

Marking useful stmt: if (D.48242_486 == 0)

processing: if (D.48242_486 == 0)

marking necessary through D.48242_486 stmt D.48242_486 = *D.40945_148;
processing: D.48242_486 = *D.40945_148;

marking necessary through D.40945_148 stmt D.40945_148 = msg_35(D)->string_array_arg[1];
processing: D.40945_148 = msg_35(D)->string_array_arg[1];

processing: if (D.40945_148 == 0B)

processing: if (D.40964_162 != 0)

processing: if (D.41076_318 != 0B)

marking necessary through D.41076_318 stmt D.41076_318 = smh_27->mutex;
processing: D.41076_318 = smh_27->mutex;

processing: if (D.40845_54 != 0B)

marking necessary through D.40845_54 stmt D.40845_54 = msg_35(D)->string_arg;
processing: D.40845_54 = msg_35(D)->string_arg;

processing: if (D.40842_48 != 0)

processing: if (D.41048_240 != 0)

processing: if (D.41044_235 != 0)

Marking useful stmt: if (D.41020_211 != 0)

processing: if (D.41020_211 != 0)

processing: if (ok_20 != 0)

Marking useful stmt: if (D.40974_167 != 0)

marking necessary through ok_20 stmt ok_20 = PHI <0(92), ok_204(94), ok_206(95)>
processing: ok_20 = PHI <0(92), ok_204(94), ok_206(95)>

marking necessary through ok_206 stmt ok_206 = (int) D.41016_205;
Marking useful stmt: if (ok_19 != 0)

Marking useful stmt: if (val_203 != 0B)

processing: if (val_203 != 0B)

Marking useful stmt: if (D.41011_200 != 0)

processing: if (D.41011_200 != 0)

processing: if (ok_19 != 0)

marking necessary through ok_19 stmt ok_19 = PHI <ok_18(86), ok_18(87), 0(88)>
processing: ok_19 = PHI <ok_18(86), ok_18(87), 0(88)>

marking necessary through ok_18 stmt ok_18 = PHI <ok_190(84), ok_193(85)>
Marking useful stmt: if (ok_18 != 0)

Marking useful stmt: if (D.41003_195 == 0)

processing: if (D.41003_195 == 0)

processing: if (ok_18 != 0)

processing: ok_18 = PHI <ok_190(84), ok_193(85)>

marking necessary through ok_193 stmt ok_193 = (int) D.41000_192;
Marking useful stmt: if (val_189 != 0B)

processing: if (val_189 != 0B)

processing: ok_193 = (int) D.41000_192;

processing: ok_206 = (int) D.41016_205;

marking necessary through D.41016_205 stmt D.41016_205 = smh_27->media_flags[14];
processing: D.41016_205 = smh_27->media_flags[14];

processing: if (D.40974_167 != 0)

processing: if (D.40834_163 != 0B)

marking necessary through D.40834_163 stmt D.40834_163 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_163 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (D.40939_146 != 0)

processing: if (D.40854_62 == 0)

marking necessary through D.40854_62 stmt D.40854_62 = strncasecmp (D.40845_61, "debug:", 6);
processing: D.40854_62 = strncasecmp (D.40845_61, "debug:", 6);

marking necessary through D.40845_61 stmt D.40845_61 = msg_35(D)->string_arg;
processing: D.40845_61 = msg_35(D)->string_arg;

processing: if (D.40851_59 == 0)

marking necessary through D.40851_59 stmt D.40851_59 = strcasecmp (D.40845_58, "resume");
processing: D.40851_59 = strcasecmp (D.40845_58, "resume");

marking necessary through D.40845_58 stmt D.40845_58 = msg_35(D)->string_arg;
processing: D.40845_58 = msg_35(D)->string_arg;

processing: if (D.40848_56 == 0)

marking necessary through D.40848_56 stmt D.40848_56 = strcasecmp (D.40845_55, "pause");
processing: D.40848_56 = strcasecmp (D.40845_55, "pause");

marking necessary through D.40845_55 stmt D.40845_55 = msg_35(D)->string_arg;
processing: D.40845_55 = msg_35(D)->string_arg;

processing: status_1 = PHI <1(138), 0(151), 0(157), 0(161), 0(150), 0(152), 0(153), 0(160), 0(159), 0(158), 0(140), 0(162), 1(137)>

Marking useful stmt: if (D.41081_271 != 0)

Marking useful stmt: if (D.40838_295 != 0)

Marking useful stmt: if (D.40838_301 != 0)

Marking useful stmt: switch (D.40827_274) <default: end_lock, case 30: <L198>, case 37: <L186>, case 40: <L170>>

Marking useful stmt: if (D.41104_296 == 0)

Marking useful stmt: if (D.41119_313 != 0)

Marking useful stmt: if (D.41023_309 != 0)

Marking useful stmt: if (D.41083_273 > 9)

Marking useful stmt: if (t38_options_316 != 0B)

processing: if (t38_options_316 != 0B)

processing: if (D.41083_273 > 9)

processing: if (D.41023_309 != 0)

marking necessary through D.41023_309 stmt D.41023_309 = D.40988_308 & 4;
processing: D.41023_309 = D.40988_308 & 4;

marking necessary through D.40988_308 stmt D.40988_308 = smh_27->flags;
processing: D.40988_308 = smh_27->flags;

processing: if (D.41119_313 != 0)

processing: if (D.41104_296 == 0)

processing: switch (D.40827_274) <default: end_lock, case 30: <L198>, case 37: <L186>, case 40: <L170>>

marking necessary through D.40827_274 stmt D.40827_274 = msg_35(D)->message_id;
processing: D.40827_274 = msg_35(D)->message_id;

processing: if (D.40838_301 != 0)

Marking useful stmt: if (D.41108_300 != 0)

marking necessary through D.40838_301 stmt D.40838_301 = msg_35(D)->numeric_arg;
processing: D.40838_301 = msg_35(D)->numeric_arg;

processing: if (D.41108_300 != 0)

processing: if (D.40838_295 != 0)

marking necessary through D.40838_295 stmt D.40838_295 = msg_35(D)->numeric_arg;
processing: D.40838_295 = msg_35(D)->numeric_arg;

processing: if (D.41081_271 != 0)

processing: D.41130_323 = switch_channel_get_state (D.40823_322);

marking necessary through D.40823_322 stmt D.40823_322 = session_26(D)->channel;
marking necessary through .MEM_376 stmt flags[29] = D.40961_159;
processing: flags[29] = D.40961_159;

marking necessary through D.40961_159 stmt D.40961_159 = D.40960_158 + 1;
processing: D.40961_159 = D.40960_158 + 1;

marking necessary through D.40960_158 stmt D.40960_158 = flags[29];
processing: D.40960_158 = flags[29];

processing: D.40823_322 = session_26(D)->channel;

processing: D.41128_321 = switch_channel_check_signal (D.40823_320, 1);

marking necessary through D.40823_320 stmt D.40823_320 = session_26(D)->channel;
processing: D.40823_320 = session_26(D)->channel;

processing: switch_mutex_unlock (D.41076_319);

marking necessary through D.41076_319 stmt D.41076_319 = smh_27->mutex;
processing: D.41076_319 = smh_27->mutex;

processing: switch_core_media_start_udptl (session_26(D), t38_options_316);

processing: t38_options_316 = switch_channel_get_private (D.40823_315, "t38_options");

marking necessary through D.40823_315 stmt D.40823_315 = session_26(D)->channel;
processing: D.40823_315 = session_26(D)->channel;

processing: switch_rtp_pause_jitter_buffer (D.40834_314, 0);

marking necessary through D.40834_314 stmt D.40834_314 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_314 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41119_313 = switch_channel_test_flag (D.40823_312, 57);

marking necessary through D.40823_312 stmt D.40823_312 = session_26(D)->channel;
processing: D.40823_312 = session_26(D)->channel;

processing: smh_27->flags = D.41026_311;

marking necessary through D.41026_311 stmt D.41026_311 = D.40988_310 & 4294967291;
processing: D.41026_311 = D.40988_310 & 4294967291;

marking necessary through D.40988_310 stmt D.40988_310 = smh_27->flags;
processing: D.40988_310 = smh_27->flags;

processing: rtp_flush_read_buffer (D.40834_307, 2);

marking necessary through D.40834_307 stmt D.40834_307 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_307 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: smh_27->flags = D.40989_306;

Marking useful stmt: if (D.41113_303 != 0)

marking necessary through D.40989_306 stmt D.40989_306 = D.40988_305 | 4;
processing: D.40989_306 = D.40988_305 | 4;

marking necessary through D.40988_305 stmt D.40988_305 = smh_27->flags;
processing: D.40988_305 = smh_27->flags;

processing: if (D.41113_303 != 0)

processing: switch_rtp_pause_jitter_buffer (D.40834_304, 1);

marking necessary through D.40834_304 stmt D.40834_304 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_304 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41113_303 = switch_channel_test_flag (D.40823_302, 57);

marking necessary through D.40823_302 stmt D.40823_302 = session_26(D)->channel;
processing: D.40823_302 = session_26(D)->channel;

processing: D.41108_300 = switch_rtp_ready (D.40834_299);

marking necessary through D.40834_299 stmt D.40834_299 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_299 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_core_session_rwunlock (nsession.13_298);

marking necessary through nsession.13_298 stmt nsession.13_298 = nsession;
processing: nsession.13_298 = nsession;

processing: switch_core_session_perform_receive_message (nsession.13_297, msg_35(D), "src/switch_core_media.c", &__func__, 7837);

marking necessary through nsession.13_297 stmt nsession.13_297 = nsession;
processing: nsession.13_297 = nsession;

processing: msg_35(D)->numeric_arg = 0;

processing: D.41104_296 = switch_core_session_perform_get_partner (session_26(D), &nsession, "src/switch_core_media.c", &__func__, 7835);

processing: switch_media_handle_set_media_flag (smh_27, 7);

processing: switch_core_media_gen_local_sdp (session_26(D), 0, 0B, 0, 0B, 1);

Marking useful stmt: if (D.40845_275 != 0B)

processing: if (D.40845_275 != 0B)

marking necessary through D.40845_275 stmt D.40845_275 = msg_35(D)->string_arg;
processing: D.40845_275 = msg_35(D)->string_arg;

processing: switch_core_media_check_video_codecs (session_26(D));

processing: switch_core_media_prepare_codecs (session_26(D), 1);

processing: switch_channel_clear_flag (D.40823_294, 98);

marking necessary through D.40823_294 stmt D.40823_294 = session_26(D)->channel;
processing: D.40823_294 = session_26(D)->channel;

processing: MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;

processing: MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;

processing: switch_channel_set_variable_printf (D.40823_281, "codec_string", "=%s%s%s,%s", iftmp.11_23, iftmp.12_24, D.41101_292, D.40845_293);

Marking useful stmt: if (D.41086_278 == 61)

marking necessary through D.40823_281 stmt D.40823_281 = session_26(D)->channel;
marking necessary through iftmp.11_23 stmt iftmp.11_23 = PHI <iftmp.11_285(145), ""(144)>
marking necessary through iftmp.12_24 stmt iftmp.12_24 = PHI <","(146), ""(147)>
marking necessary through D.41101_292 stmt D.41101_292 = D.41100_291->rm_encoding;
marking necessary through D.40845_293 stmt D.40845_293 = msg_35(D)->string_arg;
processing: D.40845_293 = msg_35(D)->string_arg;

processing: D.41101_292 = D.41100_291->rm_encoding;

marking necessary through D.41100_291 stmt D.41100_291 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].cur_payload_map;
processing: D.41100_291 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].cur_payload_map;

processing: iftmp.12_24 = PHI <","(146), ""(147)>

Marking useful stmt: if (D.41092_288 != 0B)

processing: if (D.41092_288 != 0B)

marking necessary through D.41092_288 stmt D.41092_288 = D.41091_287->rm_encoding;
processing: D.41092_288 = D.41091_287->rm_encoding;

marking necessary through D.41091_287 stmt D.41091_287 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
processing: D.41091_287 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;

processing: iftmp.11_23 = PHI <iftmp.11_285(145), ""(144)>

marking necessary through iftmp.11_285 stmt iftmp.11_285 = D.41091_284->rm_encoding;
Marking useful stmt: if (D.41092_283 != 0B)

processing: if (D.41092_283 != 0B)

marking necessary through D.41092_283 stmt D.41092_283 = D.41091_282->rm_encoding;
processing: D.41092_283 = D.41091_282->rm_encoding;

marking necessary through D.41091_282 stmt D.41091_282 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
processing: D.41091_282 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;

processing: iftmp.11_285 = D.41091_284->rm_encoding;

marking necessary through D.41091_284 stmt D.41091_284 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
processing: D.41091_284 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;

processing: D.40823_281 = session_26(D)->channel;

processing: if (D.41086_278 == 61)

marking necessary through D.41086_278 stmt D.41086_278 = *D.40845_277;
processing: D.41086_278 = *D.40845_277;

marking necessary through D.40845_277 stmt D.40845_277 = msg_35(D)->string_arg;
processing: D.40845_277 = msg_35(D)->string_arg;

processing: switch_channel_set_variable_var_check (D.40823_279, "codec_string", D.40845_280, 1);

marking necessary through D.40823_279 stmt D.40823_279 = session_26(D)->channel;
marking necessary through D.40845_280 stmt D.40845_280 = msg_35(D)->string_arg;
processing: D.40845_280 = msg_35(D)->string_arg;

processing: D.40823_279 = session_26(D)->channel;

processing: switch_channel_set_variable_var_check (D.40823_276, "absolute_codec_string", 0B, 1);

marking necessary through D.40823_276 stmt D.40823_276 = session_26(D)->channel;
processing: D.40823_276 = session_26(D)->channel;

processing: D.41083_273 = switch_channel_get_state (D.40823_272);

marking necessary through D.40823_272 stmt D.40823_272 = session_26(D)->channel;
processing: D.40823_272 = session_26(D)->channel;

processing: D.41081_271 = switch_channel_check_signal (D.40823_270, 1);

marking necessary through D.40823_270 stmt D.40823_270 = session_26(D)->channel;
processing: D.40823_270 = session_26(D)->channel;

processing: switch_mutex_lock (D.41076_269);

Marking useful stmt: if (D.41076_268 != 0B)

marking necessary through D.41076_269 stmt D.41076_269 = smh_27->mutex;
processing: D.41076_269 = smh_27->mutex;

processing: if (D.41076_268 != 0B)

marking necessary through D.41076_268 stmt D.41076_268 = smh_27->mutex;
processing: D.41076_268 = smh_27->mutex;

processing: switch_core_session_enable_heartbeat (session_26(D), D.41051_267);

Marking useful stmt: if (D.41051_266 != 0)

marking necessary through D.41051_267 stmt D.41051_267 = session_26(D)->track_duration;
processing: D.41051_267 = session_26(D)->track_duration;

processing: if (D.41051_266 != 0)

marking necessary through D.41051_266 stmt D.41051_266 = session_26(D)->track_duration;
processing: D.41051_266 = session_26(D)->track_duration;

processing: switch_core_media_absorb_sdp (session_26(D));

Marking useful stmt: if (D.41071_265 == 0B)

processing: if (D.41071_265 == 0B)

marking necessary through D.41071_265 stmt D.41071_265 = D.41070_264->local_sdp_str;
processing: D.41071_265 = D.41070_264->local_sdp_str;

marking necessary through D.41070_264 stmt D.41070_264 = smh_27->mparams;
processing: D.41070_264 = smh_27->mparams;

processing: switch_core_media_gen_local_sdp (session_26(D), 0, ip_257, D.41069_263, 0B, 1);

marking necessary through D.41069_263 stmt D.41069_263 = (short unsigned int) D.48251_496;
processing: D.41069_263 = (short unsigned int) D.48251_496;

processing: D.48251_496 = strtol (port_258, 0B, 10);

processing: pmap_493->current = 0;

processing: pmap_493->negotiated = 0;

processing: pmap_489->current = 0;

processing: pmap_489->negotiated = 0;

processing: switch_core_media_prepare_codecs (session_26(D), 1);

processing: switch_core_session_rwunlock (other_session_255);

processing: port_258 = switch_channel_get_variable_dup (other_channel_256, "remote_media_port", 1, -1);

processing: ip_257 = switch_channel_get_variable_dup (other_channel_256, "remote_media_ip", 1, -1);

processing: other_channel_256 = switch_core_session_get_channel (other_session_255);

processing: other_session_255 = switch_core_session_perform_locate (uuid_254, "src/switch_core_media.c", &__func__, 7768);

processing: uuid_254 = switch_channel_get_partner_uuid (D.40823_253);

marking necessary through D.40823_253 stmt D.40823_253 = session_26(D)->channel;
processing: D.40823_253 = session_26(D)->channel;

processing: switch_channel_set_variable_var_check (D.40823_251, "absolute_codec_string", D.41058_252, 1);

Marking useful stmt: if (D.41055_249 != 0)

marking necessary through D.40823_251 stmt D.40823_251 = session_26(D)->channel;
processing: D.40823_251 = session_26(D)->channel;

processing: if (D.41055_249 != 0)

processing: D.41058_252 = switch_channel_get_variable_dup (D.40823_251, "ep_codec_string", 1, -1);

processing: D.41055_249 = switch_true (D.41054_248);

processing: D.41054_248 = switch_channel_get_variable_dup (D.40823_247, "bypass_keep_codec", 1, -1);

marking necessary through D.40823_247 stmt D.40823_247 = session_26(D)->channel;
processing: D.40823_247 = session_26(D)->channel;

processing: switch_core_media_set_local_sdp (session_26(D), 0B, 0);

processing: MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;

processing: MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;

processing: switch_channel_set_flag_value (D.40823_246, 15, 1);

marking necessary through D.40823_246 stmt D.40823_246 = session_26(D)->channel;
processing: D.40823_246 = session_26(D)->channel;

processing: switch_core_session_enable_heartbeat (session_26(D), D.41051_243);

Marking useful stmt: if (D.41051_242 != 0)

marking necessary through D.41051_243 stmt D.41051_243 = session_26(D)->track_duration;
processing: D.41051_243 = session_26(D)->track_duration;

processing: if (D.41051_242 != 0)

marking necessary through D.41051_242 stmt D.41051_242 = session_26(D)->track_duration;
processing: D.41051_242 = session_26(D)->track_duration;

processing: rtp_flush_read_buffer (D.40834_241, 0);

marking necessary through D.40834_241 stmt D.40834_241 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_241 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41048_240 = switch_rtp_ready (D.40834_239);

marking necessary through D.40834_239 stmt D.40834_239 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_239 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: rtp_flush_read_buffer (D.40834_238, 0);

marking necessary through D.40834_238 stmt D.40834_238 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_238 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_channel_clear_flag (D.40823_237, 104);

marking necessary through D.40823_237 stmt D.40823_237 = session_26(D)->channel;
processing: D.40823_237 = session_26(D)->channel;

processing: rtp_flush_read_buffer (D.40834_236, 2);

marking necessary through D.40834_236 stmt D.40834_236 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_236 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41044_235 = switch_channel_test_flag (D.40823_234, 104);

marking necessary through D.40823_234 stmt D.40823_234 = session_26(D)->channel;
processing: D.40823_234 = session_26(D)->channel;

processing: switch_channel_clear_flag (D.40823_233, 99);

Marking useful stmt: if (D.41035_227 != 0)

marking necessary through D.40823_233 stmt D.40823_233 = session_26(D)->channel;
processing: D.40823_233 = session_26(D)->channel;

processing: if (D.41035_227 != 0)

processing: switch_rtp_set_flag (D.40834_232, 3);

Marking useful stmt: if (D.41041_231 == 0)

marking necessary through D.40834_232 stmt D.40834_232 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_232 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (D.41041_231 == 0)

Marking useful stmt: if (D.41038_229 == 0)

processing: if (D.41038_229 == 0)

processing: D.41041_231 = switch_rtp_test_flag (D.40834_230, 19);

marking necessary through D.40834_230 stmt D.40834_230 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_230 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41038_229 = switch_rtp_test_flag (D.40834_228, 12);

marking necessary through D.40834_228 stmt D.40834_228 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_228 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41035_227 = switch_channel_test_flag (D.40823_226, 99);

marking necessary through D.40823_226 stmt D.40823_226 = session_26(D)->channel;
processing: D.40823_226 = session_26(D)->channel;

processing: switch_rtp_clear_flag (D.40834_225, 15);

Marking useful stmt: if (D.41031_222 != 0)

marking necessary through D.40834_225 stmt D.40834_225 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_225 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (D.41031_222 != 0)

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7712, session_26(D), 7, "%s deactivate passthru 2833 mode.\n", D.41034_224);

processing: D.41034_224 = switch_channel_get_name (D.40823_223);

marking necessary through D.40823_223 stmt D.40823_223 = session_26(D)->channel;
processing: D.40823_223 = session_26(D)->channel;

processing: D.41031_222 = switch_rtp_test_flag (D.40834_221, 15);

marking necessary through D.40834_221 stmt D.40834_221 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_221 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_pause_jitter_buffer (D.40834_220, 0);

Marking useful stmt: if (D.41027_217 != 0)

marking necessary through D.40834_220 stmt D.40834_220 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_220 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (D.41027_217 != 0)

Marking useful stmt: if (D.41023_213 != 0)

processing: if (D.41023_213 != 0)

marking necessary through D.41023_213 stmt D.41023_213 = D.40988_212 & 4;
processing: D.41023_213 = D.40988_212 & 4;

marking necessary through D.40988_212 stmt D.40988_212 = smh_27->flags;
processing: D.40988_212 = smh_27->flags;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7704, session_26(D), 7, "%s RESUME Jitterbuffer\n", D.41030_219);

processing: D.41030_219 = switch_channel_get_name (D.40823_218);

marking necessary through D.40823_218 stmt D.40823_218 = session_26(D)->channel;
processing: D.40823_218 = session_26(D)->channel;

processing: D.41027_217 = switch_channel_test_flag (D.40823_216, 57);

marking necessary through D.40823_216 stmt D.40823_216 = session_26(D)->channel;
processing: D.40823_216 = session_26(D)->channel;

processing: smh_27->flags = D.41026_215;

marking necessary through D.41026_215 stmt D.41026_215 = D.40988_214 & 4294967291;
processing: D.41026_215 = D.40988_214 & 4294967291;

marking necessary through D.40988_214 stmt D.40988_214 = smh_27->flags;
processing: D.40988_214 = smh_27->flags;

processing: D.41020_211 = switch_rtp_ready (D.40834_210);

marking necessary through D.40834_210 stmt D.40834_210 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_210 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: rtp_flush_read_buffer (D.40834_209, 0);

marking necessary through D.40834_209 stmt D.40834_209 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_209 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_channel_set_flag_value (D.40823_208, 104, 1);

marking necessary through D.40823_208 stmt D.40823_208 = session_26(D)->channel;
processing: D.40823_208 = session_26(D)->channel;

processing: rtp_flush_read_buffer (D.40834_207, 1);

marking necessary through D.40834_207 stmt D.40834_207 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_207 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: ok_204 = switch_true (val_203);

processing: val_203 = switch_channel_get_variable_dup (D.40823_202, "rtp_autoflush_during_bridge", 1, -1);

marking necessary through D.40823_202 stmt D.40823_202 = session_26(D)->channel;
processing: D.40823_202 = session_26(D)->channel;

processing: D.41011_200 = switch_channel_test_flag (D.40823_199, 99);

marking necessary through D.40823_199 stmt D.40823_199 = session_26(D)->channel;
processing: D.40823_199 = session_26(D)->channel;

processing: switch_channel_set_flag_value (D.40823_198, 99, 1);

Marking useful stmt: if (ok_19 != 0)

marking necessary through D.40823_198 stmt D.40823_198 = session_26(D)->channel;
processing: D.40823_198 = session_26(D)->channel;

processing: if (ok_19 != 0)

processing: switch_rtp_clear_flag (D.40834_197, 3);

marking necessary through D.40834_197 stmt D.40834_197 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_197 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41003_195 = switch_rtp_test_flag (D.40834_194, 3);

marking necessary through D.40834_194 stmt D.40834_194 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_194 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.41000_192 = switch_channel_test_flag (D.40823_191, 105);

marking necessary through D.40823_191 stmt D.40823_191 = session_26(D)->channel;
processing: D.40823_191 = session_26(D)->channel;

processing: ok_190 = switch_true (val_189);

processing: val_189 = switch_channel_get_variable_dup (D.40823_188, "rtp_notimer_during_bridge", 1, -1);

marking necessary through D.40823_188 stmt D.40823_188 = session_26(D)->channel;
processing: D.40823_188 = session_26(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7656, session_26(D), 7, "%s activate passthru 2833 mode.\n", D.40996_187);

Marking useful stmt: if (D.40993_184 != 0)

processing: if (D.40993_184 != 0)

Marking useful stmt: if (D.40990_182 != 0)

processing: if (D.40990_182 != 0)

processing: D.40996_187 = switch_channel_get_name (D.40823_186);

marking necessary through D.40823_186 stmt D.40823_186 = session_26(D)->channel;
processing: D.40823_186 = session_26(D)->channel;

processing: switch_rtp_set_flag (D.40834_185, 15);

marking necessary through D.40834_185 stmt D.40834_185 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_185 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.40993_184 = switch_channel_test_flag_partner (D.40823_183, 36);

marking necessary through D.40823_183 stmt D.40823_183 = session_26(D)->channel;
processing: D.40823_183 = session_26(D)->channel;

processing: D.40990_182 = switch_channel_test_flag (D.40823_181, 100);

marking necessary through D.40823_181 stmt D.40823_181 = session_26(D)->channel;
processing: D.40823_181 = session_26(D)->channel;

processing: smh_27->flags = D.40989_180;

Marking useful stmt: if (D.40984_175 != 0)

marking necessary through D.40989_180 stmt D.40989_180 = D.40988_179 | 4;
processing: D.40989_180 = D.40988_179 | 4;

marking necessary through D.40988_179 stmt D.40988_179 = smh_27->flags;
processing: D.40988_179 = smh_27->flags;

processing: if (D.40984_175 != 0)

Marking useful stmt: if (D.40981_173 != 0)

processing: if (D.40981_173 != 0)

Marking useful stmt: if (val_170 == 0B)

Marking useful stmt: if (D.40980_171 != 0)

processing: if (D.40980_171 != 0)

processing: if (val_170 == 0B)

processing: switch_rtp_pause_jitter_buffer (D.40834_178, 1);

marking necessary through D.40834_178 stmt D.40834_178 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_178 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7647, session_26(D), 7, "%s PAUSE Jitterbuffer\n", D.40987_177);

processing: D.40987_177 = switch_channel_get_name (D.40823_176);

marking necessary through D.40823_176 stmt D.40823_176 = session_26(D)->channel;
processing: D.40823_176 = session_26(D)->channel;

processing: D.40984_175 = switch_channel_test_cap_partner (D.40823_174, 5);

marking necessary through D.40823_174 stmt D.40823_174 = session_26(D)->channel;
processing: D.40823_174 = session_26(D)->channel;

processing: D.40981_173 = switch_channel_test_flag (D.40823_172, 57);

marking necessary through D.40823_172 stmt D.40823_172 = session_26(D)->channel;
processing: D.40823_172 = session_26(D)->channel;

processing: D.40980_171 = switch_false (val_170);

processing: val_170 = switch_channel_get_variable_dup (D.40823_169, "rtp_jitter_buffer_during_bridge", 1, -1);

marking necessary through D.40823_169 stmt D.40823_169 = session_26(D)->channel;
processing: D.40823_169 = session_26(D)->channel;

processing: D.40974_167 = switch_rtp_ready (D.40834_166);

marking necessary through D.40834_166 stmt D.40834_166 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_166 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7634, session_26(D), 4, "Pass 2833 mode may not work on a transcoded call.\n");

processing: D.40971_165 = switch_rtp_test_flag (D.40834_164, 15);

marking necessary through D.40834_164 stmt D.40834_164 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_164 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7627, session_26(D), 3, "Invalid Options\n");

processing: switch_rtp_clear_flags (rtp_14, &flags);

marking necessary through rtp_14 stmt rtp_14 = PHI <rtp_141(48), rtp_141(49), rtp_145(50)>
processing: rtp_14 = PHI <rtp_141(48), rtp_141(49), rtp_145(50)>

marking necessary through rtp_141 stmt rtp_141 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
marking necessary through rtp_145 stmt rtp_145 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
processing: rtp_145 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;

processing: rtp_141 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_set_flags (rtp_14, &flags);

processing: D.40964_162 = switch_true (D.40945_161);

marking necessary through D.40945_161 stmt D.40945_161 = msg_35(D)->string_array_arg[1];
processing: D.40945_161 = msg_35(D)->string_array_arg[1];

processing: D.40939_146 = switch_rtp_ready (rtp_14);

processing: switch_rtp_deactivate_jitter_buffer (D.40834_140);

Marking useful stmt: if (qlen_7 != 0)

marking necessary through D.40834_140 stmt D.40834_140 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_140 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (qlen_7 != 0)

marking necessary through qlen_7 stmt qlen_7 = PHI <0(17), qlen_6(38), qlen_6(39)>
processing: qlen_7 = PHI <0(17), qlen_6(38), qlen_6(39)>

marking necessary through qlen_6 stmt qlen_6 = PHI <0(31), qlen_114(32), 3(33)>
Marking useful stmt: if (maxlen_5 != 0)

processing: if (maxlen_5 != 0)

marking necessary through maxlen_5 stmt maxlen_5 = PHI <0(34), 0(35), maxlen_482(36), maxlen_482(37)>
processing: maxlen_5 = PHI <0(34), 0(35), maxlen_482(36), maxlen_482(37)>

Marking useful stmt: if (qlen_6 != 0)

Marking useful stmt: if (p_117 != 0B)

Marking useful stmt: if (q_120 != 0B)

processing: if (q_120 != 0B)

marking necessary through q_120 stmt q_120 = __builtin_strchr (p_118, 58);
processing: q_120 = __builtin_strchr (p_118, 58);

marking necessary through p_118 stmt p_118 = p_117 + 1;
processing: p_118 = p_117 + 1;

marking necessary through p_117 stmt p_117 = __builtin_strchr (D.40845_116, 58);
processing: p_117 = __builtin_strchr (D.40845_116, 58);

marking necessary through D.40845_116 stmt D.40845_116 = msg_35(D)->string_arg;
processing: D.40845_116 = msg_35(D)->string_arg;

processing: if (p_117 != 0B)

processing: if (qlen_6 != 0)

processing: qlen_6 = PHI <0(31), qlen_114(32), 3(33)>

marking necessary through qlen_114 stmt qlen_114 = len_481 / D.40904_113;
Marking useful stmt: if (len_481 != 0)

Marking useful stmt: if (qlen_114 <= 0)

processing: if (qlen_114 <= 0)

processing: if (len_481 != 0)

processing: qlen_114 = len_481 / D.40904_113;

marking necessary through D.40904_113 stmt D.40904_113 = D.40903_112 / 1000;
processing: D.40904_113 = D.40903_112 / 1000;

marking necessary through D.40903_112 stmt D.40903_112 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
processing: D.40903_112 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7585, session_26(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", len_4, qlen_7);

Marking useful stmt: if (D.40925_134 == 0)

marking necessary through len_4 stmt len_4 = PHI <0(17), len_481(38), len_481(39)>
processing: len_4 = PHI <0(17), len_481(38), len_481(39)>

processing: if (D.40925_134 == 0)

processing: switch_channel_set_flag_value (D.40823_139, 58, 1);

Marking useful stmt: if (D.40929_138 == 0)

marking necessary through D.40823_139 stmt D.40823_139 = session_26(D)->channel;
processing: D.40823_139 = session_26(D)->channel;

processing: if (D.40929_138 == 0)

processing: D.40929_138 = switch_false (D.40928_137);

processing: D.40928_137 = switch_channel_get_variable_dup (D.40823_136, "rtp_jitter_buffer_plc", 1, -1);

marking necessary through D.40823_136 stmt D.40823_136 = session_26(D)->channel;
processing: D.40823_136 = session_26(D)->channel;

processing: switch_channel_set_flag_value (D.40823_135, 57, 1);

marking necessary through D.40823_135 stmt D.40823_135 = session_26(D)->channel;
processing: D.40823_135 = session_26(D)->channel;

processing: switch_log_printf (3, "src/switch_core_media.c", &__func__, 7577, session_26(D), 7, "Setting Jitterbuffer to %dms (%d frames) (%d max frames) (%d max drift)\n", len_4, qlen_7, maxqlen_9, max_drift_11);

marking necessary through maxqlen_9 stmt maxqlen_9 = PHI <maxqlen_8(41), maxqlen_127(42)>
marking necessary through max_drift_11 stmt max_drift_11 = PHI <0(17), max_drift_10(38), max_drift_10(39)>
processing: max_drift_11 = PHI <0(17), max_drift_10(38), max_drift_10(39)>

marking necessary through max_drift_10 stmt max_drift_10 = PHI <0(34), 0(35), 0(36), max_drift_123(37)>
processing: max_drift_10 = PHI <0(34), 0(35), 0(36), max_drift_123(37)>

marking necessary through max_drift_123 stmt max_drift_123 = ABS_EXPR <D.48234_483>;
processing: max_drift_123 = ABS_EXPR <D.48234_483>;

processing: maxqlen_9 = PHI <maxqlen_8(41), maxqlen_127(42)>

marking necessary through maxqlen_8 stmt maxqlen_8 = PHI <50(17), 50(38), maxqlen_126(39)>
marking necessary through maxqlen_127 stmt maxqlen_127 = qlen_7 * 5;
Marking useful stmt: if (maxqlen_8 < qlen_7)

processing: if (maxqlen_8 < qlen_7)

processing: maxqlen_127 = qlen_7 * 5;

processing: maxqlen_8 = PHI <50(17), 50(38), maxqlen_126(39)>

marking necessary through maxqlen_126 stmt maxqlen_126 = maxlen_5 / D.40904_125;
processing: maxqlen_126 = maxlen_5 / D.40904_125;

marking necessary through D.40904_125 stmt D.40904_125 = D.40903_124 / 1000;
processing: D.40904_125 = D.40903_124 / 1000;

marking necessary through D.40903_124 stmt D.40903_124 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
processing: D.40903_124 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;

processing: D.40925_134 = switch_rtp_activate_jitter_buffer (D.40834_128, qlen.8_129, maxqlen.9_130, D.40922_131, D.40923_132, max_drift.10_133);

marking necessary through D.40834_128 stmt D.40834_128 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
marking necessary through qlen.8_129 stmt qlen.8_129 = (uint32_t) qlen_7;
marking necessary through maxqlen.9_130 stmt maxqlen.9_130 = (uint32_t) maxqlen_9;
marking necessary through D.40922_131 stmt D.40922_131 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_packet;
marking necessary through D.40923_132 stmt D.40923_132 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_second;
marking necessary through max_drift.10_133 stmt max_drift.10_133 = (uint32_t) max_drift_11;
processing: max_drift.10_133 = (uint32_t) max_drift_11;

processing: D.40923_132 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_second;

processing: D.40922_131 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_packet;

processing: maxqlen.9_130 = (uint32_t) maxqlen_9;

processing: qlen.8_129 = (uint32_t) qlen_7;

processing: D.40834_128 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.48234_483 = strtol (q_121, 0B, 10);

marking necessary through q_121 stmt q_121 = q_120 + 1;
processing: q_121 = q_120 + 1;

processing: maxlen_482 = strtol (p_118, 0B, 10);

processing: len_481 = strtol (D.40845_110, 0B, 10);

marking necessary through D.40845_110 stmt D.40845_110 = msg_35(D)->string_arg;
processing: D.40845_110 = msg_35(D)->string_arg;

processing: status_109 = switch_rtp_debug_jitter_buffer (D.40834_108, s_12);

marking necessary through D.40834_108 stmt D.40834_108 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
marking necessary through s_12 stmt s_12 = PHI <s_64(23), s_64(28), 0B(29)>
processing: s_12 = PHI <s_64(23), s_64(28), 0B(29)>

marking necessary through s_64 stmt s_64 = D.40845_63 + 6;
Marking useful stmt: if (s_64 != 0B)

Marking useful stmt: if (__result_13 == 0)

processing: if (__result_13 == 0)

marking necessary through __result_13 stmt __result_13 = PHI <__result_72(24), __result_82(25), __result_92(26), D.40894_98(27)>
processing: __result_13 = PHI <__result_72(24), __result_82(25), __result_92(26), D.40894_98(27)>

marking necessary through __result_72 stmt __result_72 = D.40863_68 + -111;
marking necessary through __result_82 stmt __result_82 = D.40874_78 + -102;
marking necessary through __result_92 stmt __result_92 = D.40884_88 + -102;
marking necessary through D.40894_98 stmt D.40894_98 = (int) D.40893_97;
Marking useful stmt: if (__result_72 == 0)

Marking useful stmt: if (__result_82 == 0)

Marking useful stmt: if (__result_92 == 0)

processing: if (__result_92 == 0)

processing: if (__result_82 == 0)

processing: if (__result_72 == 0)

processing: D.40894_98 = (int) D.40893_97;

marking necessary through D.40893_97 stmt D.40893_97 = MEM[(const unsigned char *)D.40845_63 + 9B];
processing: D.40893_97 = MEM[(const unsigned char *)D.40845_63 + 9B];

marking necessary through D.40845_63 stmt D.40845_63 = msg_35(D)->string_arg;
processing: D.40845_63 = msg_35(D)->string_arg;

processing: __result_92 = D.40884_88 + -102;

marking necessary through D.40884_88 stmt D.40884_88 = (int) D.40883_87;
processing: D.40884_88 = (int) D.40883_87;

marking necessary through D.40883_87 stmt D.40883_87 = MEM[(const unsigned char *)D.40845_63 + 8B];
processing: D.40883_87 = MEM[(const unsigned char *)D.40845_63 + 8B];

processing: __result_82 = D.40874_78 + -102;

marking necessary through D.40874_78 stmt D.40874_78 = (int) D.40873_77;
processing: D.40874_78 = (int) D.40873_77;

marking necessary through D.40873_77 stmt D.40873_77 = MEM[(const unsigned char *)D.40845_63 + 7B];
processing: D.40873_77 = MEM[(const unsigned char *)D.40845_63 + 7B];

processing: __result_72 = D.40863_68 + -111;

marking necessary through D.40863_68 stmt D.40863_68 = (int) D.40862_67;
processing: D.40863_68 = (int) D.40862_67;

marking necessary through D.40862_67 stmt D.40862_67 = MEM[(const unsigned char *)D.40845_63 + 6B];
processing: D.40862_67 = MEM[(const unsigned char *)D.40845_63 + 6B];

processing: if (s_64 != 0B)

processing: s_64 = D.40845_63 + 6;

processing: D.40834_108 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_pause_jitter_buffer (D.40834_60, 0);

marking necessary through D.40834_60 stmt D.40834_60 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_60 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_pause_jitter_buffer (D.40834_57, 1);

marking necessary through D.40834_57 stmt D.40834_57 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_57 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.40842_48 = switch_rtp_ready (D.40834_47);

marking necessary through D.40834_47 stmt D.40834_47 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_47 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_clear_flag (D.40834_46, 19);

Marking useful stmt: if (D.40838_44 != 0)

marking necessary through D.40834_46 stmt D.40834_46 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_46 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: if (D.40838_44 != 0)

Marking useful stmt: if (D.40835_43 != 0)

marking necessary through D.40838_44 stmt D.40838_44 = msg_35(D)->numeric_arg;
processing: D.40838_44 = msg_35(D)->numeric_arg;

processing: if (D.40835_43 != 0)

processing: switch_rtp_set_flag (D.40834_45, 19);

marking necessary through D.40834_45 stmt D.40834_45 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_45 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: D.40835_43 = switch_rtp_ready (D.40834_42);

marking necessary through D.40834_42 stmt D.40834_42 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
processing: D.40834_42 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;

processing: switch_rtp_video_refresh (D.40831_41);

Marking useful stmt: if (D.40831_40 != 0B)

marking necessary through D.40831_41 stmt D.40831_41 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
processing: D.40831_41 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;

processing: if (D.40831_40 != 0B)

marking necessary through D.40831_40 stmt D.40831_40 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
processing: D.40831_40 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;

processing: switch_channel_set_flag_value (D.40823_39, 122, 1);

Marking useful stmt: if (D.40828_38 != 0)

marking necessary through D.40823_39 stmt D.40823_39 = session_26(D)->channel;
processing: D.40823_39 = session_26(D)->channel;

processing: if (D.40828_38 != 0)

processing: D.40828_38 = switch_channel_test_flag (D.40823_37, 82);

marking necessary through D.40823_37 stmt D.40823_37 = session_26(D)->channel;
processing: D.40823_37 = session_26(D)->channel;

processing: D.40826_32 = switch_channel_get_state (D.40823_31);

marking necessary through D.40823_31 stmt D.40823_31 = session_26(D)->channel;
processing: D.40823_31 = session_26(D)->channel;

processing: D.40824_30 = switch_channel_check_signal (D.40823_29, 1);

marking necessary through D.40823_29 stmt D.40823_29 = session_26(D)->channel;
processing: D.40823_29 = session_26(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 7477, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : __result_102 = D.40894_98;

Deleting : maxlen_119 = maxlen_482;

Deleting : len_111 = len_481;

Deleting : status_325 = status_3;

Removed 4 of 538 statements (0%)
Removed 0 of 55 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  switch_status_t status;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_receive_message";
  void end = <<< error >>>; (unused)
  static const char __func__[34] = "switch_core_media_receive_message";
  void end_lock = <<< error >>>; (unused)

  { Scope block #455 
    int len;
    int maxlen;
    int qlen;
    int maxqlen;
    int max_drift;

    { Scope block #456 
      char * p;
      char * q;
      const char * s;

      { Scope block #457 src/switch_core_media.c:7559 Originating from :  extern long int atol (const char *); 
        const char * __nptr; (unused)

        { Scope block #458 Originating from :#0 

        }

      }

      { Scope block #459 src/switch_core_media.c:7556 Originating from :  extern long int atol (const char *); 
        const char * __nptr; (unused)

        { Scope block #460 Originating from :#0 

        }

      }

      { Scope block #461 src/switch_core_media.c:7546 Originating from :  extern int atoi (const char *); 
        const char * __nptr; (unused)

        { Scope block #462 Originating from :#0 

        }

      }

      { Scope block #463 
        size_t __s1_len; (unused)
        size_t __s2_len; (unused)

        { Scope block #464 
          const unsigned char * __s1; (unused)
          register int __result;

        }

      }

    }

  }

  { Scope block #465 
    struct switch_rtp_t * rtp;
    const char * direction;

    { Scope block #466 src/switch_core_media.c:7605 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #467 Originating from :#0 

      }

    }

    { Scope block #468 src/switch_core_media.c:7605 Originating from :  static int _zstr (const char *); 
      const char * s; (unused)

      { Scope block #469 Originating from :#0 

      }

    }

    { Scope block #470 
      switch_rtp_flag_t flags[39];
      int both;
      int set;

    }

  }

  { Scope block #471 
    const char * val;
    int ok;

  }

  { Scope block #472 
    const char * uuid;
    struct switch_core_session_t * other_session;
    struct switch_channel_t * other_channel;
    const char * ip;
    const char * port;

    { Scope block #473 src/switch_core_media.c:7778 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #474 Originating from :#0 

      }

    }

    { Scope block #475 src/switch_core_media.c:7777 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
      struct switch_rtp_engine_t * engine; (unused)

      { Scope block #476 Originating from :#0 
        struct payload_map_t * pmap;

      }

    }

    { Scope block #477 src/switch_core_media.c:7776 Originating from :  static void clear_pmaps (struct switch_rtp_engine_t *); 
      struct switch_rtp_engine_t * engine; (unused)

      { Scope block #478 Originating from :#0 
        struct payload_map_t * pmap;

      }

    }

  }

  { Scope block #479 
    struct switch_core_session_t * nsession;

  }

  { Scope block #480 
    struct switch_t38_options_t * t38_options;

  }

}
switch_core_media_receive_message (struct switch_core_session_t * session, struct switch_core_session_message_t * msg)
{
  int D.48251;
  uint8_t D.48249;
  struct payload_map_t * pmap;
  uint8_t D.48246;
  struct payload_map_t * pmap;
  const char D.48242;
  int D.48241;
  const char D.48238;
  int D.48237;
  long int D.48234;
  struct switch_t38_options_t * t38_options;
  struct switch_core_session_t * nsession;
  const char * port;
  const char * ip;
  struct switch_channel_t * other_channel;
  struct switch_core_session_t * other_session;
  const char * uuid;
  int ok;
  const char * val;
  int set;
  int both;
  switch_rtp_flag_t flags[39];
  const char * direction;
  struct switch_rtp_t * rtp;
  register int __result;
  const char * s;
  char * q;
  char * p;
  int max_drift;
  int maxqlen;
  int qlen;
  int maxlen;
  int len;
  static const char __func__[34] = "switch_core_media_receive_message";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_receive_message";
  switch_status_t status;
  struct switch_media_handle_t * smh;
  switch_channel_state_t D.41130;
  int D.41128;
  uint32_t D.41119;
  uint32_t D.41113;
  uint8_t D.41108;
  struct switch_core_session_t * nsession.13;
  switch_status_t D.41104;
  char * D.41101;
  struct payload_map_t * D.41100;
  char * iftmp.12;
  char * D.41092;
  struct payload_map_t * D.41091;
  char * iftmp.11;
  const char D.41086;
  switch_channel_state_t D.41083;
  int D.41081;
  struct switch_mutex_t * D.41076;
  char * D.41071;
  struct switch_core_media_params_t * D.41070;
  short unsigned int D.41069;
  _Bool D.41065;
  _Bool D.41064;
  _Bool D.41063;
  const char * D.41058;
  int D.41055;
  const char * D.41054;
  uint32_t D.41051;
  uint8_t D.41048;
  uint32_t D.41044;
  uint32_t D.41041;
  uint32_t D.41038;
  uint32_t D.41035;
  char * D.41034;
  uint32_t D.41031;
  char * D.41030;
  uint32_t D.41027;
  unsigned int D.41026;
  unsigned int D.41023;
  uint8_t D.41020;
  switch_core_media_flag_t D.41016;
  uint32_t D.41011;
  uint32_t D.41003;
  uint32_t D.41000;
  char * D.40996;
  uint32_t D.40993;
  uint32_t D.40990;
  unsigned int D.40989;
  smh_flag_t D.40988;
  char * D.40987;
  uint32_t D.40984;
  uint32_t D.40981;
  int D.40980;
  uint8_t D.40974;
  uint32_t D.40971;
  int D.40964;
  switch_rtp_flag_t D.40961;
  switch_rtp_flag_t D.40960;
  int D.40959;
  switch_rtp_flag_t D.40955;
  switch_rtp_flag_t D.40954;
  int D.40953;
  int D.40949;
  const char * D.40945;
  uint8_t D.40939;
  const char D.40936;
  int D.40929;
  const char * D.40928;
  switch_status_t D.40925;
  uint32_t max_drift.10;
  uint32_t D.40923;
  uint32_t D.40922;
  uint32_t maxqlen.9;
  uint32_t qlen.8;
  int D.40904;
  int D.40903;
  int D.40894;
  const unsigned char D.40893;
  int D.40884;
  const unsigned char D.40883;
  int D.40874;
  const unsigned char D.40873;
  int D.40863;
  const unsigned char D.40862;
  int D.40854;
  int D.40851;
  int D.40848;
  const char * D.40845;
  uint8_t D.40842;
  int D.40838;
  uint8_t D.40835;
  struct switch_rtp_t * D.40834;
  struct switch_rtp_t * D.40831;
  uint32_t D.40828;
  switch_core_session_message_types_t D.40827;
  switch_channel_state_t D.40826;
  int D.40824;
  struct switch_channel_t * D.40823;

<bb 2>:
  # DEBUG status => 0
  if (session_26(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7477, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_27 = session_26(D)->media_handle;
  # DEBUG smh => smh_27
  if (smh_27 == 0B)
    goto <bb 168>;
  else
    goto <bb 5>;

<bb 5>:
  D.40823_29 = session_26(D)->channel;
  D.40824_30 = switch_channel_check_signal (D.40823_29, 1);
  if (D.40824_30 != 0)
    goto <bb 168>;
  else
    goto <bb 6>;

<bb 6>:
  D.40823_31 = session_26(D)->channel;
  D.40826_32 = switch_channel_get_state (D.40823_31);
  if (D.40826_32 > 9)
    goto <bb 168>;
  else
    goto <bb 7>;

<bb 7>:
  # DEBUG D#39 => &smh_27->engines
  # DEBUG a_engine => D#39
  # DEBUG D#38 => &smh_27->engines[1]
  # DEBUG v_engine => D#38
  D.40827_36 = msg_35(D)->message_id;
  switch (D.40827_36) <default: <L211>, case 4: <L93>, case 5: <L126>, case 8: <L147>, case 9: <L150>, case 17: <L10>, case 19: <L88>, case 20: <L144>, case 24: <L65>, case 25: <L13>, case 32: <L19>, case 46: <L7>>

<L7>:
  D.40823_37 = session_26(D)->channel;
  D.40828_38 = switch_channel_test_flag (D.40823_37, 82);
  if (D.40828_38 != 0)
    goto <bb 9>;
  else
    goto <bb 135> (<L211>);

<bb 9>:
  D.40823_39 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_39, 122, 1);
  goto <bb 135> (<L211>);

<L10>:
  D.40831_40 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  if (D.40831_40 != 0B)
    goto <bb 11>;
  else
    goto <bb 135> (<L211>);

<bb 11>:
  D.40831_41 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  switch_rtp_video_refresh (D.40831_41);
  goto <bb 135> (<L211>);

<L13>:
  D.40834_42 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40835_43 = switch_rtp_ready (D.40834_42);
  if (D.40835_43 != 0)
    goto <bb 13>;
  else
    goto <bb 135> (<L211>);

<bb 13>:
  D.40838_44 = msg_35(D)->numeric_arg;
  if (D.40838_44 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:
  D.40834_45 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_45, 19);
  goto <bb 135> (<L211>);

<bb 15>:
  D.40834_46 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_46, 19);
  goto <bb 135> (<L211>);

<L19>:
  D.40834_47 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40842_48 = switch_rtp_ready (D.40834_47);
  if (D.40842_48 != 0)
    goto <bb 17>;
  else
    goto <bb 135> (<L211>);

<bb 17>:
  # DEBUG len => 0
  # DEBUG maxlen => 0
  # DEBUG qlen => 0
  # DEBUG maxqlen => 50
  # DEBUG max_drift => 0
  D.40845_54 = msg_35(D)->string_arg;
  if (D.40845_54 != 0B)
    goto <bb 18>;
  else
    goto <bb 40>;

<bb 18>:
  D.40845_55 = msg_35(D)->string_arg;
  D.40848_56 = strcasecmp (D.40845_55, "pause");
  if (D.40848_56 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;

<bb 19>:
  D.40834_57 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_57, 1);
  goto <bb 164> (end);

<bb 20>:
  D.40845_58 = msg_35(D)->string_arg;
  D.40851_59 = strcasecmp (D.40845_58, "resume");
  if (D.40851_59 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

<bb 21>:
  D.40834_60 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_60, 0);
  goto <bb 164> (end);

<bb 22>:
  D.40845_61 = msg_35(D)->string_arg;
  D.40854_62 = strncasecmp (D.40845_61, "debug:", 6);
  if (D.40854_62 == 0)
    goto <bb 23>;
  else
    goto <bb 31>;

<bb 23>:
  D.40845_63 = msg_35(D)->string_arg;
  s_64 = D.40845_63 + 6;
  # DEBUG s => s_64
  if (s_64 != 0B)
    goto <bb 24>;
  else
    goto <bb 30>;

<bb 24>:
  # DEBUG __s2_len => 3
  # DEBUG __s1 => s_64
  D.40862_67 = MEM[(const unsigned char *)D.40845_63 + 6B];
  D.40863_68 = (int) D.40862_67;
  __result_72 = D.40863_68 + -111;
  # DEBUG __result => __result_72
  if (__result_72 == 0)
    goto <bb 25>;
  else
    goto <bb 28>;

<bb 25>:
  D.40873_77 = MEM[(const unsigned char *)D.40845_63 + 7B];
  D.40874_78 = (int) D.40873_77;
  __result_82 = D.40874_78 + -102;
  # DEBUG __result => __result_82
  if (__result_82 == 0)
    goto <bb 26>;
  else
    goto <bb 28>;

<bb 26>:
  D.40883_87 = MEM[(const unsigned char *)D.40845_63 + 8B];
  D.40884_88 = (int) D.40883_87;
  __result_92 = D.40884_88 + -102;
  # DEBUG __result => __result_92
  if (__result_92 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;

<bb 27>:
  D.40893_97 = MEM[(const unsigned char *)D.40845_63 + 9B];
  D.40894_98 = (int) D.40893_97;
  # DEBUG __result => D.40894_98

<bb 28>:
  # __result_13 = PHI <__result_72(24), __result_82(25), __result_92(26), D.40894_98(27)>
  # DEBUG __result => __result_13
  if (__result_13 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

<bb 29>:
  # DEBUG s => 0B

<bb 30>:
  # s_12 = PHI <s_64(23), s_64(28), 0B(29)>
  # DEBUG s => s_12
  D.40834_108 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  status_109 = switch_rtp_debug_jitter_buffer (D.40834_108, s_12);
  # DEBUG status => status_109
  goto <bb 164> (end);

<bb 31>:
  D.40845_110 = msg_35(D)->string_arg;
  # DEBUG __nptr => D.40845_110
  len_481 = strtol (D.40845_110, 0B, 10);
  # DEBUG len => NULL
  if (len_481 != 0)
    goto <bb 32>;
  else
    goto <bb 34>;

<bb 32>:
  D.40903_112 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
  D.40904_113 = D.40903_112 / 1000;
  qlen_114 = len_481 / D.40904_113;
  # DEBUG qlen => qlen_114
  if (qlen_114 <= 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  # DEBUG qlen => 3

<bb 34>:
  # qlen_6 = PHI <0(31), qlen_114(32), 3(33)>
  # DEBUG qlen => qlen_6
  if (qlen_6 != 0)
    goto <bb 35>;
  else
    goto <bb 38>;

<bb 35>:
  D.40845_116 = msg_35(D)->string_arg;
  p_117 = __builtin_strchr (D.40845_116, 58);
  # DEBUG p => p_117
  if (p_117 != 0B)
    goto <bb 36>;
  else
    goto <bb 38>;

<bb 36>:
  p_118 = p_117 + 1;
  # DEBUG p => p_118
  # DEBUG __nptr => p_118
  maxlen_482 = strtol (p_118, 0B, 10);
  # DEBUG maxlen => NULL
  q_120 = __builtin_strchr (p_118, 58);
  # DEBUG q => q_120
  if (q_120 != 0B)
    goto <bb 37>;
  else
    goto <bb 38>;

<bb 37>:
  q_121 = q_120 + 1;
  # DEBUG q => q_121
  # DEBUG __nptr => q_121
  D.48234_483 = strtol (q_121, 0B, 10);
  max_drift_123 = ABS_EXPR <D.48234_483>;
  # DEBUG max_drift => max_drift_123

<bb 38>:
  # maxlen_5 = PHI <0(34), 0(35), maxlen_482(36), maxlen_482(37)>
  # max_drift_10 = PHI <0(34), 0(35), 0(36), max_drift_123(37)>
  # DEBUG max_drift => max_drift_10
  # DEBUG maxlen => maxlen_5
  if (maxlen_5 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

<bb 39>:
  D.40903_124 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.microseconds_per_packet;
  D.40904_125 = D.40903_124 / 1000;
  maxqlen_126 = maxlen_5 / D.40904_125;
  # DEBUG maxqlen => maxqlen_126

<bb 40>:
  # len_4 = PHI <0(17), len_481(38), len_481(39)>
  # qlen_7 = PHI <0(17), qlen_6(38), qlen_6(39)>
  # maxqlen_8 = PHI <50(17), 50(38), maxqlen_126(39)>
  # max_drift_11 = PHI <0(17), max_drift_10(38), max_drift_10(39)>
  # DEBUG max_drift => max_drift_11
  # DEBUG maxqlen => maxqlen_8
  # DEBUG qlen => qlen_7
  # DEBUG len => len_4
  if (qlen_7 != 0)
    goto <bb 41>;
  else
    goto <bb 47>;

<bb 41>:
  if (maxqlen_8 < qlen_7)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:
  maxqlen_127 = qlen_7 * 5;
  # DEBUG maxqlen => maxqlen_127

<bb 43>:
  # maxqlen_9 = PHI <maxqlen_8(41), maxqlen_127(42)>
  # DEBUG maxqlen => maxqlen_9
  D.40834_128 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  qlen.8_129 = (uint32_t) qlen_7;
  maxqlen.9_130 = (uint32_t) maxqlen_9;
  D.40922_131 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_packet;
  D.40923_132 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].read_impl.samples_per_second;
  max_drift.10_133 = (uint32_t) max_drift_11;
  D.40925_134 = switch_rtp_activate_jitter_buffer (D.40834_128, qlen.8_129, maxqlen.9_130, D.40922_131, D.40923_132, max_drift.10_133);
  if (D.40925_134 == 0)
    goto <bb 44>;
  else
    goto <bb 46>;

<bb 44>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7577, session_26(D), 7, "Setting Jitterbuffer to %dms (%d frames) (%d max frames) (%d max drift)\n", len_4, qlen_7, maxqlen_9, max_drift_11);
  D.40823_135 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_135, 57, 1);
  D.40823_136 = session_26(D)->channel;
  D.40928_137 = switch_channel_get_variable_dup (D.40823_136, "rtp_jitter_buffer_plc", 1, -1);
  D.40929_138 = switch_false (D.40928_137);
  if (D.40929_138 == 0)
    goto <bb 45>;
  else
    goto <bb 135> (<L211>);

<bb 45>:
  D.40823_139 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_139, 58, 1);
  goto <bb 135> (<L211>);

<bb 46>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7585, session_26(D), 4, "Error Setting Jitterbuffer to %dms (%d frames)\n", len_4, qlen_7);
  goto <bb 135> (<L211>);

<bb 47>:
  D.40834_140 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_deactivate_jitter_buffer (D.40834_140);
  goto <bb 135> (<L211>);

<L65>:
  rtp_141 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  # DEBUG rtp => rtp_141
  direction_142 = msg_35(D)->string_array_arg[0];
  # DEBUG direction => direction_142
  if (direction_142 != 0B)
    goto <bb 49>;
  else
    goto <bb 51>;

<bb 49>:
  D.40936_143 = *direction_142;
  if (D.40936_143 == 118)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:
  direction_144 = direction_142 + 1;
  # DEBUG direction => direction_144
  rtp_145 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].rtp_session;
  # DEBUG rtp => rtp_145

<bb 51>:
  # rtp_14 = PHI <rtp_141(48), rtp_141(49), rtp_145(50)>
  # direction_15 = PHI <direction_142(48), direction_142(49), direction_144(50)>
  # DEBUG direction => direction_15
  # DEBUG rtp => rtp_14
  D.40939_146 = switch_rtp_ready (rtp_14);
  if (D.40939_146 != 0)
    goto <bb 52>;
  else
    goto <bb 164> (end);

<bb 52>:
  # DEBUG s => direction_15
  if (direction_15 == 0B)
    goto <bb 55>;
  else
    goto <bb 53>;

<bb 53>:
  D.48238_484 = *direction_15;
  if (D.48238_484 == 0)
    goto <bb 55>;
  else
    goto <bb 54>;

<bb 54>:

<bb 55>:
  # D.48237_485 = PHI <1(52), 1(53), 0(54)>
  if (D.48237_485 == 0)
    goto <bb 56>;
  else
    goto <bb 164> (end);

<bb 56>:
  D.40945_148 = msg_35(D)->string_array_arg[1];
  # DEBUG s => D.40945_148
  if (D.40945_148 == 0B)
    goto <bb 59>;
  else
    goto <bb 57>;

<bb 57>:
  D.48242_486 = *D.40945_148;
  if (D.48242_486 == 0)
    goto <bb 59>;
  else
    goto <bb 58>;

<bb 58>:

<bb 59>:
  # D.48241_487 = PHI <1(56), 1(57), 0(58)>
  if (D.48241_487 == 0)
    goto <bb 60>;
  else
    goto <bb 164> (end);

<bb 60>:
  flags = {};
  D.40949_150 = strcasecmp (direction_15, "both");
  both_151 = D.40949_150 == 0;
  # DEBUG both => both_151
  # DEBUG set => 0
  if (both_151 != 0)
    goto <bb 62>;
  else
    goto <bb 61>;

<bb 61>:
  D.40953_153 = strcasecmp (direction_15, "read");
  if (D.40953_153 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;

<bb 62>:
  D.40954_154 = flags[28];
  D.40955_155 = D.40954_154 + 1;
  flags[28] = D.40955_155;
  # DEBUG set => 1

<bb 63>:
  # set_16 = PHI <0(61), 1(62)>
  # DEBUG set => set_16
  if (both_151 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

<bb 64>:
  D.40959_157 = strcasecmp (direction_15, "write");
  if (D.40959_157 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;

<bb 65>:
  D.40960_158 = flags[29];
  D.40961_159 = D.40960_158 + 1;
  flags[29] = D.40961_159;
  set_160 = set_16 + 1;
  # DEBUG set => set_160

<bb 66>:
  # set_17 = PHI <set_16(64), set_160(65)>
  # DEBUG set => set_17
  if (set_17 != 0)
    goto <bb 67>;
  else
    goto <bb 70>;

<bb 67>:
  D.40945_161 = msg_35(D)->string_array_arg[1];
  D.40964_162 = switch_true (D.40945_161);
  if (D.40964_162 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;

<bb 68>:
  switch_rtp_set_flags (rtp_14, &flags);
  goto <bb 164> (end);

<bb 69>:
  switch_rtp_clear_flags (rtp_14, &flags);
  goto <bb 164> (end);

<bb 70>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7627, session_26(D), 3, "Invalid Options\n");
  goto <bb 164> (end);

<L88>:
  D.40834_163 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  if (D.40834_163 != 0B)
    goto <bb 72>;
  else
    goto <bb 164> (end);

<bb 72>:
  D.40834_164 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40971_165 = switch_rtp_test_flag (D.40834_164, 15);
  if (D.40971_165 != 0)
    goto <bb 73>;
  else
    goto <bb 164> (end);

<bb 73>:
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7634, session_26(D), 4, "Pass 2833 mode may not work on a transcoded call.\n");
  goto <bb 164> (end);

<L93>:
  D.40834_166 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.40974_167 = switch_rtp_ready (D.40834_166);
  if (D.40974_167 != 0)
    goto <bb 75>;
  else
    goto <bb 164> (end);

<bb 75>:
  # DEBUG ok => 0
  D.40823_169 = session_26(D)->channel;
  val_170 = switch_channel_get_variable_dup (D.40823_169, "rtp_jitter_buffer_during_bridge", 1, -1);
  # DEBUG val => val_170
  if (val_170 == 0B)
    goto <bb 77>;
  else
    goto <bb 76>;

<bb 76>:
  D.40980_171 = switch_false (val_170);
  if (D.40980_171 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;

<bb 77>:
  D.40823_172 = session_26(D)->channel;
  D.40981_173 = switch_channel_test_flag (D.40823_172, 57);
  if (D.40981_173 != 0)
    goto <bb 78>;
  else
    goto <bb 80>;

<bb 78>:
  D.40823_174 = session_26(D)->channel;
  D.40984_175 = switch_channel_test_cap_partner (D.40823_174, 5);
  if (D.40984_175 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

<bb 79>:
  D.40823_176 = session_26(D)->channel;
  D.40987_177 = switch_channel_get_name (D.40823_176);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7647, session_26(D), 7, "%s PAUSE Jitterbuffer\n", D.40987_177);
  D.40834_178 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_178, 1);
  D.40988_179 = smh_27->flags;
  D.40989_180 = D.40988_179 | 4;
  smh_27->flags = D.40989_180;

<bb 80>:
  D.40823_181 = session_26(D)->channel;
  D.40990_182 = switch_channel_test_flag (D.40823_181, 100);
  if (D.40990_182 != 0)
    goto <bb 81>;
  else
    goto <bb 83>;

<bb 81>:
  D.40823_183 = session_26(D)->channel;
  D.40993_184 = switch_channel_test_flag_partner (D.40823_183, 36);
  if (D.40993_184 != 0)
    goto <bb 82>;
  else
    goto <bb 83>;

<bb 82>:
  D.40834_185 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_185, 15);
  D.40823_186 = session_26(D)->channel;
  D.40996_187 = switch_channel_get_name (D.40823_186);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7656, session_26(D), 7, "%s activate passthru 2833 mode.\n", D.40996_187);

<bb 83>:
  D.40823_188 = session_26(D)->channel;
  val_189 = switch_channel_get_variable_dup (D.40823_188, "rtp_notimer_during_bridge", 1, -1);
  # DEBUG val => val_189
  if (val_189 != 0B)
    goto <bb 84>;
  else
    goto <bb 85>;

<bb 84>:
  ok_190 = switch_true (val_189);
  # DEBUG ok => ok_190
  goto <bb 86>;

<bb 85>:
  D.40823_191 = session_26(D)->channel;
  D.41000_192 = switch_channel_test_flag (D.40823_191, 105);
  ok_193 = (int) D.41000_192;
  # DEBUG ok => ok_193

<bb 86>:
  # ok_18 = PHI <ok_190(84), ok_193(85)>
  # DEBUG ok => ok_18
  if (ok_18 != 0)
    goto <bb 87>;
  else
    goto <bb 89>;

<bb 87>:
  D.40834_194 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41003_195 = switch_rtp_test_flag (D.40834_194, 3);
  if (D.41003_195 == 0)
    goto <bb 88>;
  else
    goto <bb 89>;

<bb 88>:
  # DEBUG ok => 0

<bb 89>:
  # ok_19 = PHI <ok_18(86), ok_18(87), 0(88)>
  # DEBUG ok => ok_19
  if (ok_19 != 0)
    goto <bb 90>;
  else
    goto <bb 91>;

<bb 90>:
  D.40834_197 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_197, 3);
  D.40823_198 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_198, 99, 1);

<bb 91>:
  if (ok_19 != 0)
    goto <bb 92>;
  else
    goto <bb 93>;

<bb 92>:
  D.40823_199 = session_26(D)->channel;
  D.41011_200 = switch_channel_test_flag (D.40823_199, 99);
  if (D.41011_200 != 0)
    goto <bb 96>;
  else
    goto <bb 93>;

<bb 93>:
  D.40823_202 = session_26(D)->channel;
  val_203 = switch_channel_get_variable_dup (D.40823_202, "rtp_autoflush_during_bridge", 1, -1);
  # DEBUG val => val_203
  if (val_203 != 0B)
    goto <bb 94>;
  else
    goto <bb 95>;

<bb 94>:
  ok_204 = switch_true (val_203);
  # DEBUG ok => ok_204
  goto <bb 96>;

<bb 95>:
  D.41016_205 = smh_27->media_flags[14];
  ok_206 = (int) D.41016_205;
  # DEBUG ok => ok_206

<bb 96>:
  # ok_20 = PHI <0(92), ok_204(94), ok_206(95)>
  # DEBUG ok => ok_20
  if (ok_20 != 0)
    goto <bb 97>;
  else
    goto <bb 98>;

<bb 97>:
  D.40834_207 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_207, 1);
  D.40823_208 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_208, 104, 1);
  goto <bb 164> (end);

<bb 98>:
  D.40834_209 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_209, 0);
  goto <bb 164> (end);

<L126>:
  D.40834_210 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41020_211 = switch_rtp_ready (D.40834_210);
  if (D.41020_211 != 0)
    goto <bb 100>;
  else
    goto <bb 164> (end);

<bb 100>:
  D.40988_212 = smh_27->flags;
  D.41023_213 = D.40988_212 & 4;
  if (D.41023_213 != 0)
    goto <bb 101>;
  else
    goto <bb 103>;

<bb 101>:
  D.40988_214 = smh_27->flags;
  D.41026_215 = D.40988_214 & 4294967291;
  smh_27->flags = D.41026_215;
  D.40823_216 = session_26(D)->channel;
  D.41027_217 = switch_channel_test_flag (D.40823_216, 57);
  if (D.41027_217 != 0)
    goto <bb 102>;
  else
    goto <bb 103>;

<bb 102>:
  D.40823_218 = session_26(D)->channel;
  D.41030_219 = switch_channel_get_name (D.40823_218);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7704, session_26(D), 7, "%s RESUME Jitterbuffer\n", D.41030_219);
  D.40834_220 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_220, 0);

<bb 103>:
  D.40834_221 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41031_222 = switch_rtp_test_flag (D.40834_221, 15);
  if (D.41031_222 != 0)
    goto <bb 104>;
  else
    goto <bb 105>;

<bb 104>:
  D.40823_223 = session_26(D)->channel;
  D.41034_224 = switch_channel_get_name (D.40823_223);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 7712, session_26(D), 7, "%s deactivate passthru 2833 mode.\n", D.41034_224);
  D.40834_225 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_clear_flag (D.40834_225, 15);

<bb 105>:
  D.40823_226 = session_26(D)->channel;
  D.41035_227 = switch_channel_test_flag (D.40823_226, 99);
  if (D.41035_227 != 0)
    goto <bb 106>;
  else
    goto <bb 110>;

<bb 106>:
  D.40834_228 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41038_229 = switch_rtp_test_flag (D.40834_228, 12);
  if (D.41038_229 == 0)
    goto <bb 107>;
  else
    goto <bb 109>;

<bb 107>:
  D.40834_230 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41041_231 = switch_rtp_test_flag (D.40834_230, 19);
  if (D.41041_231 == 0)
    goto <bb 108>;
  else
    goto <bb 109>;

<bb 108>:
  D.40834_232 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_set_flag (D.40834_232, 3);

<bb 109>:
  D.40823_233 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_233, 99);

<bb 110>:
  D.40823_234 = session_26(D)->channel;
  D.41044_235 = switch_channel_test_flag (D.40823_234, 104);
  if (D.41044_235 != 0)
    goto <bb 111>;
  else
    goto <bb 112>;

<bb 111>:
  D.40834_236 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_236, 2);
  D.40823_237 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_237, 104);
  goto <bb 164> (end);

<bb 112>:
  D.40834_238 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_238, 0);
  goto <bb 164> (end);

<L144>:
  D.40834_239 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41048_240 = switch_rtp_ready (D.40834_239);
  if (D.41048_240 != 0)
    goto <bb 114>;
  else
    goto <bb 164> (end);

<bb 114>:
  D.40834_241 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_241, 0);
  goto <bb 164> (end);

<L147>:
  D.41051_242 = session_26(D)->track_duration;
  if (D.41051_242 != 0)
    goto <bb 116>;
  else
    goto <bb 135> (<L211>);

<bb 116>:
  D.41051_243 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_243);
  goto <bb 135> (<L211>);

<L150>:
  # DEBUG ip => 0B
  # DEBUG port => 0B
  D.40823_246 = session_26(D)->channel;
  switch_channel_set_flag_value (D.40823_246, 15, 1);
  MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;
  MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;
  switch_core_media_set_local_sdp (session_26(D), 0B, 0);
  D.40823_247 = session_26(D)->channel;
  D.41054_248 = switch_channel_get_variable_dup (D.40823_247, "bypass_keep_codec", 1, -1);
  D.41055_249 = switch_true (D.41054_248);
  if (D.41055_249 != 0)
    goto <bb 118>;
  else
    goto <bb 119>;

<bb 118>:
  D.40823_251 = session_26(D)->channel;
  D.41058_252 = switch_channel_get_variable_dup (D.40823_251, "ep_codec_string", 1, -1);
  switch_channel_set_variable_var_check (D.40823_251, "absolute_codec_string", D.41058_252, 1);

<bb 119>:
  D.40823_253 = session_26(D)->channel;
  uuid_254 = switch_channel_get_partner_uuid (D.40823_253);
  # DEBUG uuid => uuid_254
  if (uuid_254 != 0B)
    goto <bb 120>;
  else
    goto <bb 131>;

<bb 120>:
  other_session_255 = switch_core_session_perform_locate (uuid_254, "src/switch_core_media.c", &__func__, 7768);
  # DEBUG other_session => other_session_255
  if (other_session_255 != 0B)
    goto <bb 121>;
  else
    goto <bb 131>;

<bb 121>:
  other_channel_256 = switch_core_session_get_channel (other_session_255);
  # DEBUG other_channel => other_channel_256
  ip_257 = switch_channel_get_variable_dup (other_channel_256, "remote_media_ip", 1, -1);
  # DEBUG ip => ip_257
  port_258 = switch_channel_get_variable_dup (other_channel_256, "remote_media_port", 1, -1);
  # DEBUG port => port_258
  switch_core_session_rwunlock (other_session_255);
  D.41063_259 = ip_257 != 0B;
  D.41064_260 = port_258 != 0B;
  D.41065_261 = D.41063_259 && D.41064_260;
  if (D.41065_261 != 0)
    goto <bb 122>;
  else
    goto <bb 131>;

<bb 122>:
  switch_core_media_prepare_codecs (session_26(D), 1);
  # DEBUG engine => D#39
  pmap_488 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].payload_map;
  # DEBUG pmap => pmap_488
  goto <bb 124>;

<bb 123>:
  pmap_489->negotiated = 0;
  pmap_489->current = 0;
  pmap_490 = pmap_489->next;
  # DEBUG pmap => pmap_490

<bb 124>:
  # pmap_489 = PHI <pmap_488(122), pmap_490(123)>
  # DEBUG pmap => pmap_489
  if (pmap_489 != 0B)
    goto <bb 125>;
  else
    goto <bb 126>;

<bb 125>:
  D.48246_491 = pmap_489->allocated;
  if (D.48246_491 != 0)
    goto <bb 123>;
  else
    goto <bb 126>;

<bb 126>:
  # DEBUG engine => D#38
  pmap_492 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].payload_map;
  # DEBUG pmap => pmap_492
  goto <bb 128>;

<bb 127>:
  pmap_493->negotiated = 0;
  pmap_493->current = 0;
  pmap_494 = pmap_493->next;
  # DEBUG pmap => pmap_494

<bb 128>:
  # pmap_493 = PHI <pmap_492(126), pmap_494(127)>
  # DEBUG pmap => pmap_493
  if (pmap_493 != 0B)
    goto <bb 129>;
  else
    goto <bb 130>;

<bb 129>:
  D.48249_495 = pmap_493->allocated;
  if (D.48249_495 != 0)
    goto <bb 127>;
  else
    goto <bb 130>;

<bb 130>:
  # DEBUG __nptr => port_258
  D.48251_496 = strtol (port_258, 0B, 10);
  D.41069_263 = (short unsigned int) D.48251_496;
  switch_core_media_gen_local_sdp (session_26(D), 0, ip_257, D.41069_263, 0B, 1);

<bb 131>:
  D.41070_264 = smh_27->mparams;
  D.41071_265 = D.41070_264->local_sdp_str;
  if (D.41071_265 == 0B)
    goto <bb 132>;
  else
    goto <bb 133>;

<bb 132>:
  switch_core_media_absorb_sdp (session_26(D));

<bb 133>:
  D.41051_266 = session_26(D)->track_duration;
  if (D.41051_266 != 0)
    goto <bb 134>;
  else
    goto <bb 135> (<L211>);

<bb 134>:
  D.41051_267 = session_26(D)->track_duration;
  switch_core_session_enable_heartbeat (session_26(D), D.41051_267);

<L211>:
  D.41076_268 = smh_27->mutex;
  if (D.41076_268 != 0B)
    goto <bb 136>;
  else
    goto <bb 137>;

<bb 136>:
  D.41076_269 = smh_27->mutex;
  switch_mutex_lock (D.41076_269);

<bb 137>:
  D.40823_270 = session_26(D)->channel;
  D.41081_271 = switch_channel_check_signal (D.40823_270, 1);
  if (D.41081_271 != 0)
    goto <bb 162> (end_lock);
  else
    goto <bb 138>;

<bb 138>:
  D.40823_272 = session_26(D)->channel;
  D.41083_273 = switch_channel_get_state (D.40823_272);
  if (D.41083_273 > 9)
    goto <bb 162> (end_lock);
  else
    goto <bb 139>;

<bb 139>:
  D.40827_274 = msg_35(D)->message_id;
  switch (D.40827_274) <default: end_lock, case 30: <L198>, case 37: <L186>, case 40: <L170>>

<L170>:
  D.40845_275 = msg_35(D)->string_arg;
  if (D.40845_275 != 0B)
    goto <bb 141>;
  else
    goto <bb 149>;

<bb 141>:
  D.40823_276 = session_26(D)->channel;
  switch_channel_set_variable_var_check (D.40823_276, "absolute_codec_string", 0B, 1);
  D.40845_277 = msg_35(D)->string_arg;
  D.41086_278 = *D.40845_277;
  if (D.41086_278 == 61)
    goto <bb 142>;
  else
    goto <bb 143>;

<bb 142>:
  D.40823_279 = session_26(D)->channel;
  D.40845_280 = msg_35(D)->string_arg;
  switch_channel_set_variable_var_check (D.40823_279, "codec_string", D.40845_280, 1);
  goto <bb 148>;

<bb 143>:
  D.40823_281 = session_26(D)->channel;
  D.41091_282 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  D.41092_283 = D.41091_282->rm_encoding;
  if (D.41092_283 != 0B)
    goto <bb 144>;
  else
    goto <bb 145>;

<bb 144>:
  D.41091_284 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  iftmp.11_285 = D.41091_284->rm_encoding;

<bb 145>:
  # iftmp.11_23 = PHI <iftmp.11_285(144), ""(143)>
  D.41091_287 = MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].cur_payload_map;
  D.41092_288 = D.41091_287->rm_encoding;
  if (D.41092_288 != 0B)
    goto <bb 147>;
  else
    goto <bb 146>;

<bb 146>:

<bb 147>:
  # iftmp.12_24 = PHI <","(145), ""(146)>
  D.41100_291 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].cur_payload_map;
  D.41101_292 = D.41100_291->rm_encoding;
  D.40845_293 = msg_35(D)->string_arg;
  switch_channel_set_variable_printf (D.40823_281, "codec_string", "=%s%s%s,%s", iftmp.11_23, iftmp.12_24, D.41101_292, D.40845_293);

<bb 148>:
  MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].codec_negotiated = 0;
  MEM[(struct switch_rtp_engine_t *)smh_27 + 11496B].codec_negotiated = 0;
  D.40823_294 = session_26(D)->channel;
  switch_channel_clear_flag (D.40823_294, 98);
  switch_core_media_prepare_codecs (session_26(D), 1);
  switch_core_media_check_video_codecs (session_26(D));
  switch_core_media_gen_local_sdp (session_26(D), 0, 0B, 0, 0B, 1);

<bb 149>:
  switch_media_handle_set_media_flag (smh_27, 7);
  D.40838_295 = msg_35(D)->numeric_arg;
  if (D.40838_295 != 0)
    goto <bb 150>;
  else
    goto <bb 162> (end_lock);

<bb 150>:
  D.41104_296 = switch_core_session_perform_get_partner (session_26(D), &nsession, "src/switch_core_media.c", &__func__, 7835);
  if (D.41104_296 == 0)
    goto <bb 151>;
  else
    goto <bb 162> (end_lock);

<bb 151>:
  msg_35(D)->numeric_arg = 0;
  nsession.13_297 = nsession;
  switch_core_session_perform_receive_message (nsession.13_297, msg_35(D), "src/switch_core_media.c", &__func__, 7837);
  nsession.13_298 = nsession;
  switch_core_session_rwunlock (nsession.13_298);
  goto <bb 162> (end_lock);

<L186>:
  D.40834_299 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  D.41108_300 = switch_rtp_ready (D.40834_299);
  if (D.41108_300 != 0)
    goto <bb 153>;
  else
    goto <bb 162> (end_lock);

<bb 153>:
  D.40838_301 = msg_35(D)->numeric_arg;
  if (D.40838_301 != 0)
    goto <bb 154>;
  else
    goto <bb 157>;

<bb 154>:
  D.40823_302 = session_26(D)->channel;
  D.41113_303 = switch_channel_test_flag (D.40823_302, 57);
  if (D.41113_303 != 0)
    goto <bb 155>;
  else
    goto <bb 156>;

<bb 155>:
  D.40834_304 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_304, 1);
  D.40988_305 = smh_27->flags;
  D.40989_306 = D.40988_305 | 4;
  smh_27->flags = D.40989_306;

<bb 156>:
  D.40834_307 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  rtp_flush_read_buffer (D.40834_307, 2);
  goto <bb 162> (end_lock);

<bb 157>:
  D.40988_308 = smh_27->flags;
  D.41023_309 = D.40988_308 & 4;
  if (D.41023_309 != 0)
    goto <bb 158>;
  else
    goto <bb 162> (end_lock);

<bb 158>:
  D.40988_310 = smh_27->flags;
  D.41026_311 = D.40988_310 & 4294967291;
  smh_27->flags = D.41026_311;
  D.40823_312 = session_26(D)->channel;
  D.41119_313 = switch_channel_test_flag (D.40823_312, 57);
  if (D.41119_313 != 0)
    goto <bb 159>;
  else
    goto <bb 162> (end_lock);

<bb 159>:
  D.40834_314 = MEM[(struct switch_rtp_engine_t *)smh_27 + 80B].rtp_session;
  switch_rtp_pause_jitter_buffer (D.40834_314, 0);
  goto <bb 162> (end_lock);

<L198>:
  D.40823_315 = session_26(D)->channel;
  t38_options_316 = switch_channel_get_private (D.40823_315, "t38_options");
  # DEBUG t38_options => t38_options_316
  if (t38_options_316 != 0B)
    goto <bb 161>;
  else
    goto <bb 162> (end_lock);

<bb 161>:
  switch_core_media_start_udptl (session_26(D), t38_options_316);

  # status_1 = PHI <1(138), 0(150), 0(156), 0(160), 0(149), 0(151), 0(152), 0(159), 0(158), 0(157), 0(139), 0(161), 1(137)>
end_lock:
  # DEBUG status => status_1
  D.41076_318 = smh_27->mutex;
  if (D.41076_318 != 0B)
    goto <bb 163>;
  else
    goto <bb 164> (end);

<bb 163>:
  D.41076_319 = smh_27->mutex;
  switch_mutex_unlock (D.41076_319);

  # status_2 = PHI <0(19), 0(21), status_109(30), 0(55), 0(72), 0(97), 0(111), 0(114), status_1(162), status_1(163), 0(51), 0(68), 0(70), 0(69), 0(59), 0(71), 0(73), 0(74), 0(98), 0(99), 0(112), 0(113)>
end:
  # DEBUG status => status_2
  D.40823_320 = session_26(D)->channel;
  D.41128_321 = switch_channel_check_signal (D.40823_320, 1);
  if (D.41128_321 != 0)
    goto <bb 166>;
  else
    goto <bb 165>;

<bb 165>:
  D.40823_322 = session_26(D)->channel;
  D.41130_323 = switch_channel_get_state (D.40823_322);
  if (D.41130_323 > 9)
    goto <bb 166>;
  else
    goto <bb 167>;

<bb 166>:
  # DEBUG status => 1

<bb 167>:
  # status_3 = PHI <status_2(165), 1(166)>
  # DEBUG status => status_3

<bb 168>:
  # status_21 = PHI <1(4), 1(6), status_3(167), 1(5)>
  return status_21;

}



;; Function switch_core_media_break (switch_core_media_break)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7902, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40812_5 = switch_rtp_ready (D.40811_4);

Marking useful stmt: switch_rtp_break (D.40811_6);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_break (D.40811_6);

Marking useful stmt: if (D.40812_5 != 0)

marking necessary through D.40811_6 stmt D.40811_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40811_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40812_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40812_5 = switch_rtp_ready (D.40811_4);

marking necessary through D.40811_4 stmt D.40811_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40811_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7902, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_break (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_break";
  struct switch_media_handle_t * smh;
  uint8_t D.40812;
  struct switch_rtp_t * D.40811;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7902, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40811_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40812_5 = switch_rtp_ready (D.40811_4);
  if (D.40812_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40811_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_break (D.40811_6);

<bb 7>:
  return;

}



;; Function switch_core_media_kill_socket (switch_core_media_kill_socket)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7918, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40803_5 = switch_rtp_ready (D.40802_4);

Marking useful stmt: switch_rtp_kill_socket (D.40802_6);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_kill_socket (D.40802_6);

Marking useful stmt: if (D.40803_5 != 0)

marking necessary through D.40802_6 stmt D.40802_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40802_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40803_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40803_5 = switch_rtp_ready (D.40802_4);

marking necessary through D.40802_4 stmt D.40802_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40802_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7918, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_kill_socket (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_kill_socket";
  struct switch_media_handle_t * smh;
  uint8_t D.40803;
  struct switch_rtp_t * D.40802;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7918, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40802_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40803_5 = switch_rtp_ready (D.40802_4);
  if (D.40803_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40802_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_kill_socket (D.40802_6);

<bb 7>:
  return;

}



;; Function switch_core_media_queue_rfc2833 (switch_core_media_queue_rfc2833)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7934, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40794_7 = switch_rtp_ready (D.40793_6);

Marking useful stmt: D.40792_10 = switch_rtp_queue_rfc2833 (D.40793_8, dtmf_9(D));

Marking useful stmt: return D.40792_1;


Processing worklist:
processing: return D.40792_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40792_1 stmt D.40792_1 = PHI <1(4), D.40792_10(6), 1(5)>
processing: D.40792_1 = PHI <1(4), D.40792_10(6), 1(5)>

Marking useful stmt: if (D.40794_7 != 0)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.40794_7 != 0)

processing: if (session_2(D) == 0B)

processing: D.40792_10 = switch_rtp_queue_rfc2833 (D.40793_8, dtmf_9(D));

marking necessary through D.40793_8 stmt D.40793_8 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40793_8 = smh_3->engines[type_5(D)].rtp_session;

processing: D.40794_7 = switch_rtp_ready (D.40793_6);

marking necessary through D.40793_6 stmt D.40793_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40793_6 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7934, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_queue_rfc2833 (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[32] = "switch_core_media_queue_rfc2833";
  struct switch_media_handle_t * smh;
  uint8_t D.40794;
  struct switch_rtp_t * D.40793;
  switch_status_t D.40792;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7934, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40793_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40794_7 = switch_rtp_ready (D.40793_6);
  if (D.40794_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40793_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40792_10 = switch_rtp_queue_rfc2833 (D.40793_8, dtmf_9(D));

<bb 7>:
  # D.40792_1 = PHI <1(4), D.40792_10(6), 1(5)>
  return D.40792_1;

}



;; Function switch_core_media_queue_rfc2833_in (switch_core_media_queue_rfc2833_in)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7952, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40784_7 = switch_rtp_ready (D.40783_6);

Marking useful stmt: D.40782_10 = switch_rtp_queue_rfc2833_in (D.40783_8, dtmf_9(D));

Marking useful stmt: return D.40782_1;


Processing worklist:
processing: return D.40782_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40782_1 stmt D.40782_1 = PHI <1(4), D.40782_10(6), 1(5)>
processing: D.40782_1 = PHI <1(4), D.40782_10(6), 1(5)>

Marking useful stmt: if (D.40784_7 != 0)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.40784_7 != 0)

processing: if (session_2(D) == 0B)

processing: D.40782_10 = switch_rtp_queue_rfc2833_in (D.40783_8, dtmf_9(D));

marking necessary through D.40783_8 stmt D.40783_8 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40783_8 = smh_3->engines[type_5(D)].rtp_session;

processing: D.40784_7 = switch_rtp_ready (D.40783_6);

marking necessary through D.40783_6 stmt D.40783_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40783_6 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7952, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_queue_rfc2833_in (struct switch_core_session_t * session, switch_media_type_t type, const struct switch_dtmf_t * dtmf)
{
  static const char __PRETTY_FUNCTION__[35] = "switch_core_media_queue_rfc2833_in";
  struct switch_media_handle_t * smh;
  uint8_t D.40784;
  struct switch_rtp_t * D.40783;
  switch_status_t D.40782;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7952, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40783_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40784_7 = switch_rtp_ready (D.40783_6);
  if (D.40784_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40783_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40782_10 = switch_rtp_queue_rfc2833_in (D.40783_8, dtmf_9(D));

<bb 7>:
  # D.40782_1 = PHI <1(4), D.40782_10(6), 1(5)>
  return D.40782_1;

}



;; Function switch_core_media_ready (switch_core_media_ready)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7970, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40775_7 = switch_rtp_ready (D.40776_6);

Marking useful stmt: return D.40775_1;


Processing worklist:
processing: return D.40775_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40775_1 stmt D.40775_1 = PHI <0(4), D.40775_7(5)>
processing: D.40775_1 = PHI <0(4), D.40775_7(5)>

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (session_2(D) == 0B)

processing: D.40775_7 = switch_rtp_ready (D.40776_6);

marking necessary through D.40776_6 stmt D.40776_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40776_6 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7970, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 8 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_ready (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[24] = "switch_core_media_ready";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40776;
  uint8_t D.40775;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7970, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

<bb 5>:
  D.40776_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40775_7 = switch_rtp_ready (D.40776_6);

<bb 6>:
  # D.40775_1 = PHI <0(4), D.40775_7(5)>
  return D.40775_1;

}



;; Function switch_core_media_set_rtp_flag (switch_core_media_set_rtp_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 7984, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40767_5 = switch_rtp_ready (D.40766_4);

Marking useful stmt: switch_rtp_set_flag (D.40766_6, flag_7(D));

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_set_flag (D.40766_6, flag_7(D));

Marking useful stmt: if (D.40767_5 != 0)

marking necessary through D.40766_6 stmt D.40766_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40766_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40767_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40767_5 = switch_rtp_ready (D.40766_4);

marking necessary through D.40766_4 stmt D.40766_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40766_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 7984, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_set_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_set_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40767;
  struct switch_rtp_t * D.40766;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 7984, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40766_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40767_5 = switch_rtp_ready (D.40766_4);
  if (D.40767_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40766_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_flag (D.40766_6, flag_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_clear_rtp_flag (switch_core_media_clear_rtp_flag)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8000, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40758_5 = switch_rtp_ready (D.40757_4);

Marking useful stmt: switch_rtp_clear_flag (D.40757_6, flag_7(D));

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_clear_flag (D.40757_6, flag_7(D));

Marking useful stmt: if (D.40758_5 != 0)

marking necessary through D.40757_6 stmt D.40757_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40757_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40758_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40758_5 = switch_rtp_ready (D.40757_4);

marking necessary through D.40757_4 stmt D.40757_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40757_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8000, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_clear_rtp_flag (struct switch_core_session_t * session, switch_media_type_t type, switch_rtp_flag_t flag)
{
  static const char __PRETTY_FUNCTION__[33] = "switch_core_media_clear_rtp_flag";
  struct switch_media_handle_t * smh;
  uint8_t D.40758;
  struct switch_rtp_t * D.40757;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8000, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40757_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40758_5 = switch_rtp_ready (D.40757_4);
  if (D.40758_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40757_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_clear_flag (D.40757_6, flag_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_set_telephony_event (switch_core_media_set_telephony_event)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8016, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40749_5 = switch_rtp_ready (D.40748_4);

Marking useful stmt: switch_rtp_set_telephony_event (D.40748_6, te_7(D));

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_set_telephony_event (D.40748_6, te_7(D));

Marking useful stmt: if (D.40749_5 != 0)

marking necessary through D.40748_6 stmt D.40748_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40748_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40749_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40749_5 = switch_rtp_ready (D.40748_4);

marking necessary through D.40748_4 stmt D.40748_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40748_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8016, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_set_telephony_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[38] = "switch_core_media_set_telephony_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40749;
  struct switch_rtp_t * D.40748;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8016, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40748_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40749_5 = switch_rtp_ready (D.40748_4);
  if (D.40749_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40748_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_event (D.40748_6, te_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_set_telephony_recv_event (switch_core_media_set_telephony_recv_event)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8032, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: D.40740_5 = switch_rtp_ready (D.40739_4);

Marking useful stmt: switch_rtp_set_telephony_recv_event (D.40739_6, te_7(D));

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: switch_rtp_set_telephony_recv_event (D.40739_6, te_7(D));

Marking useful stmt: if (D.40740_5 != 0)

marking necessary through D.40739_6 stmt D.40739_6 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40739_6 = smh_2->engines[type_3(D)].rtp_session;

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: if (D.40740_5 != 0)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

processing: D.40740_5 = switch_rtp_ready (D.40739_4);

marking necessary through D.40739_4 stmt D.40739_4 = smh_2->engines[type_3(D)].rtp_session;
processing: D.40739_4 = smh_2->engines[type_3(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8032, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_set_telephony_recv_event (struct switch_core_session_t * session, switch_media_type_t type, switch_payload_t te)
{
  static const char __PRETTY_FUNCTION__[43] = "switch_core_media_set_telephony_recv_event";
  struct switch_media_handle_t * smh;
  uint8_t D.40740;
  struct switch_rtp_t * D.40739;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8032, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40739_4 = smh_2->engines[type_3(D)].rtp_session;
  D.40740_5 = switch_rtp_ready (D.40739_4);
  if (D.40740_5 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40739_6 = smh_2->engines[type_3(D)].rtp_session;
  switch_rtp_set_telephony_recv_event (D.40739_6, te_7(D));

<bb 7>:
  return;

}



;; Function switch_core_media_get_stats (switch_core_media_get_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8048, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40730_9 = switch_rtp_get_stats (D.40731_7, pool_8(D));

Marking useful stmt: return D.40730_1;


Processing worklist:
processing: return D.40730_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40730_1 stmt D.40730_1 = PHI <0B(4), D.40730_9(6), 0B(5)>
processing: D.40730_1 = PHI <0B(4), D.40730_9(6), 0B(5)>

Marking useful stmt: if (D.40731_6 != 0B)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.40731_6 != 0B)

marking necessary through D.40731_6 stmt D.40731_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40731_6 = smh_3->engines[type_5(D)].rtp_session;

processing: if (session_2(D) == 0B)

processing: D.40730_9 = switch_rtp_get_stats (D.40731_7, pool_8(D));

marking necessary through D.40731_7 stmt D.40731_7 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40731_7 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8048, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 10 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_get_stats (struct switch_core_session_t * session, switch_media_type_t type, struct switch_memory_pool_t * pool)
{
  static const char __PRETTY_FUNCTION__[28] = "switch_core_media_get_stats";
  struct switch_media_handle_t * smh;
  struct switch_rtp_t * D.40731;
  struct switch_rtp_stats_t * D.40730;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8048, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40731_6 = smh_3->engines[type_5(D)].rtp_session;
  if (D.40731_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40731_7 = smh_3->engines[type_5(D)].rtp_session;
  D.40730_9 = switch_rtp_get_stats (D.40731_7, pool_8(D));

<bb 7>:
  # D.40730_1 = PHI <0B(4), D.40730_9(6), 0B(5)>
  return D.40730_1;

}



;; Function set_stats (set_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
;; 2 succs { 3 58 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 43 }
;; 42 succs { 43 }
;; 43 succs { 44 45 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { 47 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 56 57 }
;; 56 succs { 57 }
;; 57 succs { 58 }
;; 58 succs { 1 }
Marking useful stmt: stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);

Marking useful stmt: # DEBUG stats => stats_30

Marking useful stmt: channel_31 = switch_core_session_get_channel (session_28(D));

Marking useful stmt: # DEBUG channel => channel_31

Marking useful stmt: D.46527_33 = sqrt (D.46526_32);

Marking useful stmt: stats_30->inbound.std_deviation = D.46527_33;

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46532_37);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46537_40);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46542_43);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46547_46);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46552_49);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46557_52);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46562_55);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46567_58);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46572_61);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46577_64);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46582_67);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46587_70);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46592_73);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46597_76);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46602_79);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46607_82);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46612_85);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");

Marking useful stmt: switch_snprintf (&var_val, 35, "%0.2f", D.46617_88);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46622_91);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46627_94);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46632_97);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46637_100);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46642_103);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46647_106);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46652_109);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46657_112);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");

Marking useful stmt: switch_snprintf (&var_val, 35, "%d", D.46662_115);

Marking useful stmt: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

Marking useful stmt: if (stats_30 != 0B)

marking necessary through .MEM_120 stmt var_val = "";
marking necessary through .MEM_119 stmt var_name = "";
processing: var_name = "";

processing: var_val = "";

processing: if (stats_30 != 0B)

processing: switch_snprintf (&var_val, 35, "%d", D.46662_115);

marking necessary through D.46662_115 stmt D.46662_115 = stats_30->rtcp.octet_count;
processing: D.46662_115 = stats_30->rtcp.octet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");

marking necessary through prefix_27 stmt prefix_27 = PHI <prefix_34(D)(56), ""(55)>
processing: prefix_27 = PHI <prefix_34(D)(56), ""(55)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46657_112);

marking necessary through D.46657_112 stmt D.46657_112 = stats_30->rtcp.packet_count;
processing: D.46657_112 = stats_30->rtcp.packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");

marking necessary through prefix_26 stmt prefix_26 = PHI <prefix_34(D)(54), ""(53)>
processing: prefix_26 = PHI <prefix_34(D)(54), ""(53)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46652_109);

marking necessary through D.46652_109 stmt D.46652_109 = stats_30->outbound.cng_packet_count;
processing: D.46652_109 = stats_30->outbound.cng_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");

marking necessary through prefix_25 stmt prefix_25 = PHI <prefix_34(D)(52), ""(51)>
processing: prefix_25 = PHI <prefix_34(D)(52), ""(51)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46647_106);

marking necessary through D.46647_106 stmt D.46647_106 = stats_30->outbound.dtmf_packet_count;
processing: D.46647_106 = stats_30->outbound.dtmf_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");

marking necessary through prefix_24 stmt prefix_24 = PHI <prefix_34(D)(50), ""(49)>
processing: prefix_24 = PHI <prefix_34(D)(50), ""(49)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46642_103);

marking necessary through D.46642_103 stmt D.46642_103 = stats_30->outbound.skip_packet_count;
processing: D.46642_103 = stats_30->outbound.skip_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");

marking necessary through prefix_23 stmt prefix_23 = PHI <prefix_34(D)(48), ""(47)>
processing: prefix_23 = PHI <prefix_34(D)(48), ""(47)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46637_100);

marking necessary through D.46637_100 stmt D.46637_100 = stats_30->outbound.media_packet_count;
processing: D.46637_100 = stats_30->outbound.media_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");

marking necessary through prefix_22 stmt prefix_22 = PHI <prefix_34(D)(46), ""(45)>
processing: prefix_22 = PHI <prefix_34(D)(46), ""(45)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46632_97);

marking necessary through D.46632_97 stmt D.46632_97 = stats_30->outbound.packet_count;
processing: D.46632_97 = stats_30->outbound.packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");

marking necessary through prefix_21 stmt prefix_21 = PHI <prefix_34(D)(44), ""(43)>
processing: prefix_21 = PHI <prefix_34(D)(44), ""(43)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46627_94);

marking necessary through D.46627_94 stmt D.46627_94 = stats_30->outbound.media_bytes;
processing: D.46627_94 = stats_30->outbound.media_bytes;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");

marking necessary through prefix_20 stmt prefix_20 = PHI <prefix_34(D)(42), ""(41)>
processing: prefix_20 = PHI <prefix_34(D)(42), ""(41)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46622_91);

marking necessary through D.46622_91 stmt D.46622_91 = stats_30->outbound.raw_bytes;
processing: D.46622_91 = stats_30->outbound.raw_bytes;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");

marking necessary through prefix_19 stmt prefix_19 = PHI <prefix_34(D)(40), ""(39)>
processing: prefix_19 = PHI <prefix_34(D)(40), ""(39)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46617_88);

marking necessary through D.46617_88 stmt D.46617_88 = stats_30->inbound.mos;
processing: D.46617_88 = stats_30->inbound.mos;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");

marking necessary through prefix_18 stmt prefix_18 = PHI <prefix_34(D)(38), ""(37)>
processing: prefix_18 = PHI <prefix_34(D)(38), ""(37)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46612_85);

marking necessary through D.46612_85 stmt D.46612_85 = stats_30->inbound.R;
processing: D.46612_85 = stats_30->inbound.R;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");

marking necessary through prefix_17 stmt prefix_17 = PHI <prefix_34(D)(36), ""(35)>
processing: prefix_17 = PHI <prefix_34(D)(36), ""(35)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46607_82);

marking necessary through D.46607_82 stmt D.46607_82 = stats_30->inbound.flaws;
processing: D.46607_82 = stats_30->inbound.flaws;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");

marking necessary through prefix_16 stmt prefix_16 = PHI <prefix_34(D)(34), ""(33)>
processing: prefix_16 = PHI <prefix_34(D)(34), ""(33)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46602_79);

marking necessary through D.46602_79 stmt D.46602_79 = stats_30->inbound.mean_interval;
processing: D.46602_79 = stats_30->inbound.mean_interval;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");

marking necessary through prefix_15 stmt prefix_15 = PHI <prefix_34(D)(32), ""(31)>
processing: prefix_15 = PHI <prefix_34(D)(32), ""(31)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46597_76);

marking necessary through D.46597_76 stmt D.46597_76 = stats_30->inbound.burstrate;
processing: D.46597_76 = stats_30->inbound.burstrate;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");

marking necessary through prefix_14 stmt prefix_14 = PHI <prefix_34(D)(30), ""(29)>
processing: prefix_14 = PHI <prefix_34(D)(30), ""(29)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46592_73);

marking necessary through D.46592_73 stmt D.46592_73 = stats_30->inbound.lossrate;
processing: D.46592_73 = stats_30->inbound.lossrate;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");

marking necessary through prefix_13 stmt prefix_13 = PHI <prefix_34(D)(28), ""(27)>
processing: prefix_13 = PHI <prefix_34(D)(28), ""(27)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46587_70);

marking necessary through D.46587_70 stmt D.46587_70 = stats_30->inbound.max_variance;
processing: D.46587_70 = stats_30->inbound.max_variance;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");

marking necessary through prefix_12 stmt prefix_12 = PHI <prefix_34(D)(26), ""(25)>
processing: prefix_12 = PHI <prefix_34(D)(26), ""(25)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%0.2f", D.46582_67);

marking necessary through D.46582_67 stmt D.46582_67 = stats_30->inbound.min_variance;
processing: D.46582_67 = stats_30->inbound.min_variance;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");

marking necessary through prefix_11 stmt prefix_11 = PHI <prefix_34(D)(24), ""(23)>
processing: prefix_11 = PHI <prefix_34(D)(24), ""(23)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46577_64);

marking necessary through D.46577_64 stmt D.46577_64 = stats_30->inbound.largest_jb_size;
processing: D.46577_64 = stats_30->inbound.largest_jb_size;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");

marking necessary through prefix_10 stmt prefix_10 = PHI <prefix_34(D)(22), ""(21)>
processing: prefix_10 = PHI <prefix_34(D)(22), ""(21)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46572_61);

marking necessary through D.46572_61 stmt D.46572_61 = stats_30->inbound.flush_packet_count;
processing: D.46572_61 = stats_30->inbound.flush_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");

marking necessary through prefix_9 stmt prefix_9 = PHI <prefix_34(D)(20), ""(19)>
processing: prefix_9 = PHI <prefix_34(D)(20), ""(19)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46567_58);

marking necessary through D.46567_58 stmt D.46567_58 = stats_30->inbound.cng_packet_count;
processing: D.46567_58 = stats_30->inbound.cng_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");

marking necessary through prefix_8 stmt prefix_8 = PHI <prefix_34(D)(18), ""(17)>
processing: prefix_8 = PHI <prefix_34(D)(18), ""(17)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46562_55);

marking necessary through D.46562_55 stmt D.46562_55 = stats_30->inbound.dtmf_packet_count;
processing: D.46562_55 = stats_30->inbound.dtmf_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");

marking necessary through prefix_7 stmt prefix_7 = PHI <prefix_34(D)(16), ""(15)>
processing: prefix_7 = PHI <prefix_34(D)(16), ""(15)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46557_52);

marking necessary through D.46557_52 stmt D.46557_52 = stats_30->inbound.jb_packet_count;
processing: D.46557_52 = stats_30->inbound.jb_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");

marking necessary through prefix_6 stmt prefix_6 = PHI <prefix_34(D)(14), ""(13)>
processing: prefix_6 = PHI <prefix_34(D)(14), ""(13)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46552_49);

marking necessary through D.46552_49 stmt D.46552_49 = stats_30->inbound.skip_packet_count;
processing: D.46552_49 = stats_30->inbound.skip_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");

marking necessary through prefix_5 stmt prefix_5 = PHI <prefix_34(D)(12), ""(11)>
processing: prefix_5 = PHI <prefix_34(D)(12), ""(11)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46547_46);

marking necessary through D.46547_46 stmt D.46547_46 = stats_30->inbound.media_packet_count;
processing: D.46547_46 = stats_30->inbound.media_packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");

marking necessary through prefix_4 stmt prefix_4 = PHI <prefix_34(D)(10), ""(9)>
processing: prefix_4 = PHI <prefix_34(D)(10), ""(9)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46542_43);

marking necessary through D.46542_43 stmt D.46542_43 = stats_30->inbound.packet_count;
processing: D.46542_43 = stats_30->inbound.packet_count;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");

marking necessary through prefix_3 stmt prefix_3 = PHI <prefix_34(D)(8), ""(7)>
processing: prefix_3 = PHI <prefix_34(D)(8), ""(7)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46537_40);

marking necessary through D.46537_40 stmt D.46537_40 = stats_30->inbound.media_bytes;
processing: D.46537_40 = stats_30->inbound.media_bytes;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");

marking necessary through prefix_2 stmt prefix_2 = PHI <prefix_34(D)(6), ""(5)>
processing: prefix_2 = PHI <prefix_34(D)(6), ""(5)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

processing: switch_snprintf (&var_val, 35, "%d", D.46532_37);

marking necessary through D.46532_37 stmt D.46532_37 = stats_30->inbound.raw_bytes;
processing: D.46532_37 = stats_30->inbound.raw_bytes;

processing: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");

marking necessary through prefix_1 stmt prefix_1 = PHI <prefix_34(D)(4), ""(3)>
processing: prefix_1 = PHI <prefix_34(D)(4), ""(3)>

Marking useful stmt: if (prefix_34(D) != 0B)

processing: if (prefix_34(D) != 0B)

processing: stats_30->inbound.std_deviation = D.46527_33;

processing: D.46527_33 = sqrt (D.46526_32);

marking necessary through D.46526_32 stmt D.46526_32 = stats_30->inbound.variance;
processing: D.46526_32 = stats_30->inbound.variance;

processing: channel_31 = switch_core_session_get_channel (session_28(D));

processing: stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);


Eliminating unnecessary statements:
Deleting : prefix_113 = prefix_34(D);

Deleting : prefix_110 = prefix_34(D);

Deleting : prefix_107 = prefix_34(D);

Deleting : prefix_104 = prefix_34(D);

Deleting : prefix_101 = prefix_34(D);

Deleting : prefix_98 = prefix_34(D);

Deleting : prefix_95 = prefix_34(D);

Deleting : prefix_92 = prefix_34(D);

Deleting : prefix_89 = prefix_34(D);

Deleting : prefix_86 = prefix_34(D);

Deleting : prefix_83 = prefix_34(D);

Deleting : prefix_80 = prefix_34(D);

Deleting : prefix_77 = prefix_34(D);

Deleting : prefix_74 = prefix_34(D);

Deleting : prefix_71 = prefix_34(D);

Deleting : prefix_68 = prefix_34(D);

Deleting : prefix_65 = prefix_34(D);

Deleting : prefix_62 = prefix_34(D);

Deleting : prefix_59 = prefix_34(D);

Deleting : prefix_56 = prefix_34(D);

Deleting : prefix_53 = prefix_34(D);

Deleting : prefix_50 = prefix_34(D);

Deleting : prefix_47 = prefix_34(D);

Deleting : prefix_44 = prefix_34(D);

Deleting : prefix_41 = prefix_34(D);

Deleting : prefix_38 = prefix_34(D);

Deleting : prefix_35 = prefix_34(D);

Removed 27 of 173 statements (15%)
Removed 0 of 27 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct switch_rtp_stats_t * stats;
  struct switch_channel_t * channel;
  char var_name[256];
  char var_val[35];

}
set_stats (struct switch_core_session_t * session, switch_media_type_t type, const char * prefix)
{
  char var_val[35];
  char var_name[256];
  struct switch_channel_t * channel;
  struct switch_rtp_stats_t * stats;
  uint32_t D.46662;
  uint32_t D.46657;
  switch_size_t D.46652;
  switch_size_t D.46647;
  switch_size_t D.46642;
  switch_size_t D.46637;
  switch_size_t D.46632;
  switch_size_t D.46627;
  switch_size_t D.46622;
  double D.46617;
  double D.46612;
  switch_size_t D.46607;
  double D.46602;
  double D.46597;
  double D.46592;
  double D.46587;
  double D.46582;
  switch_size_t D.46577;
  switch_size_t D.46572;
  switch_size_t D.46567;
  switch_size_t D.46562;
  switch_size_t D.46557;
  switch_size_t D.46552;
  switch_size_t D.46547;
  switch_size_t D.46542;
  switch_size_t D.46537;
  switch_size_t D.46532;
  double D.46527;
  double D.46526;

<bb 2>:
  stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);
  # DEBUG stats => stats_30
  channel_31 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_31
  var_name = "";
  var_val = "";
  if (stats_30 != 0B)
    goto <bb 3>;
  else
    goto <bb 58>;

<bb 3>:
  D.46526_32 = stats_30->inbound.variance;
  D.46527_33 = sqrt (D.46526_32);
  stats_30->inbound.std_deviation = D.46527_33;
  if (prefix_34(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

<bb 4>:

<bb 5>:
  # prefix_1 = PHI <prefix_34(D)(4), ""(3)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");
  D.46532_37 = stats_30->inbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46532_37);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:

<bb 7>:
  # prefix_2 = PHI <prefix_34(D)(6), ""(5)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");
  D.46537_40 = stats_30->inbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46537_40);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:

<bb 9>:
  # prefix_3 = PHI <prefix_34(D)(8), ""(7)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");
  D.46542_43 = stats_30->inbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46542_43);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

<bb 10>:

<bb 11>:
  # prefix_4 = PHI <prefix_34(D)(10), ""(9)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");
  D.46547_46 = stats_30->inbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46547_46);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

<bb 12>:

<bb 13>:
  # prefix_5 = PHI <prefix_34(D)(12), ""(11)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");
  D.46552_49 = stats_30->inbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46552_49);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

<bb 14>:

<bb 15>:
  # prefix_6 = PHI <prefix_34(D)(14), ""(13)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");
  D.46557_52 = stats_30->inbound.jb_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46557_52);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:

<bb 17>:
  # prefix_7 = PHI <prefix_34(D)(16), ""(15)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");
  D.46562_55 = stats_30->inbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46562_55);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:

<bb 19>:
  # prefix_8 = PHI <prefix_34(D)(18), ""(17)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");
  D.46567_58 = stats_30->inbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46567_58);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:

<bb 21>:
  # prefix_9 = PHI <prefix_34(D)(20), ""(19)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");
  D.46572_61 = stats_30->inbound.flush_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46572_61);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:

<bb 23>:
  # prefix_10 = PHI <prefix_34(D)(22), ""(21)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");
  D.46577_64 = stats_30->inbound.largest_jb_size;
  switch_snprintf (&var_val, 35, "%d", D.46577_64);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:

<bb 25>:
  # prefix_11 = PHI <prefix_34(D)(24), ""(23)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");
  D.46582_67 = stats_30->inbound.min_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46582_67);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:

<bb 27>:
  # prefix_12 = PHI <prefix_34(D)(26), ""(25)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");
  D.46587_70 = stats_30->inbound.max_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46587_70);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:

<bb 29>:
  # prefix_13 = PHI <prefix_34(D)(28), ""(27)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");
  D.46592_73 = stats_30->inbound.lossrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46592_73);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;

<bb 30>:

<bb 31>:
  # prefix_14 = PHI <prefix_34(D)(30), ""(29)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");
  D.46597_76 = stats_30->inbound.burstrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46597_76);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;

<bb 32>:

<bb 33>:
  # prefix_15 = PHI <prefix_34(D)(32), ""(31)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");
  D.46602_79 = stats_30->inbound.mean_interval;
  switch_snprintf (&var_val, 35, "%0.2f", D.46602_79);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;

<bb 34>:

<bb 35>:
  # prefix_16 = PHI <prefix_34(D)(34), ""(33)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");
  D.46607_82 = stats_30->inbound.flaws;
  switch_snprintf (&var_val, 35, "%d", D.46607_82);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

<bb 36>:

<bb 37>:
  # prefix_17 = PHI <prefix_34(D)(36), ""(35)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");
  D.46612_85 = stats_30->inbound.R;
  switch_snprintf (&var_val, 35, "%0.2f", D.46612_85);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:

<bb 39>:
  # prefix_18 = PHI <prefix_34(D)(38), ""(37)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");
  D.46617_88 = stats_30->inbound.mos;
  switch_snprintf (&var_val, 35, "%0.2f", D.46617_88);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:

<bb 41>:
  # prefix_19 = PHI <prefix_34(D)(40), ""(39)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");
  D.46622_91 = stats_30->outbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46622_91);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;

<bb 42>:

<bb 43>:
  # prefix_20 = PHI <prefix_34(D)(42), ""(41)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");
  D.46627_94 = stats_30->outbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46627_94);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;

<bb 44>:

<bb 45>:
  # prefix_21 = PHI <prefix_34(D)(44), ""(43)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");
  D.46632_97 = stats_30->outbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46632_97);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;

<bb 46>:

<bb 47>:
  # prefix_22 = PHI <prefix_34(D)(46), ""(45)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");
  D.46637_100 = stats_30->outbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46637_100);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;

<bb 48>:

<bb 49>:
  # prefix_23 = PHI <prefix_34(D)(48), ""(47)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");
  D.46642_103 = stats_30->outbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46642_103);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;

<bb 50>:

<bb 51>:
  # prefix_24 = PHI <prefix_34(D)(50), ""(49)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");
  D.46647_106 = stats_30->outbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46647_106);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;

<bb 52>:

<bb 53>:
  # prefix_25 = PHI <prefix_34(D)(52), ""(51)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");
  D.46652_109 = stats_30->outbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46652_109);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;

<bb 54>:

<bb 55>:
  # prefix_26 = PHI <prefix_34(D)(54), ""(53)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");
  D.46657_112 = stats_30->rtcp.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46657_112);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;

<bb 56>:

<bb 57>:
  # prefix_27 = PHI <prefix_34(D)(56), ""(55)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");
  D.46662_115 = stats_30->rtcp.octet_count;
  switch_snprintf (&var_val, 35, "%d", D.46662_115);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);

<bb 58>:
  return;

}



;; Function switch_core_media_set_stats (switch_core_media_set_stats)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Marking useful stmt: set_stats (session_1(D), 0, "audio");

Marking useful stmt: set_stats (session_1(D), 1, "video");

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: set_stats (session_1(D), 1, "video");

Marking useful stmt: if (D.46520_2 == 0B)

processing: if (D.46520_2 == 0B)

marking necessary through D.46520_2 stmt D.46520_2 = session_1(D)->media_handle;
processing: D.46520_2 = session_1(D)->media_handle;

processing: set_stats (session_1(D), 0, "audio");


Eliminating unnecessary statements:
Removed 0 of 5 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_set_stats (struct switch_core_session_t * session)
{
  struct switch_media_handle_t * D.46520;

<bb 2>:
  D.46520_2 = session_1(D)->media_handle;
  if (D.46520_2 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

<bb 3>:
  set_stats (session_1(D), 0, "audio");
  set_stats (session_1(D), 1, "video");

<bb 4>:
  return;

}



;; Function switch_core_media_udptl_mode (switch_core_media_udptl_mode)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8066, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40722_7 = switch_rtp_ready (D.40721_6);

Marking useful stmt: D.40720_9 = switch_rtp_udptl_mode (D.40721_8);

Marking useful stmt: return D.40720_1;


Processing worklist:
processing: return D.40720_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40720_1 stmt D.40720_1 = PHI <1(4), D.40720_9(6), 1(5)>
processing: D.40720_1 = PHI <1(4), D.40720_9(6), 1(5)>

Marking useful stmt: if (D.40722_7 != 0)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.40722_7 != 0)

processing: if (session_2(D) == 0B)

processing: D.40720_9 = switch_rtp_udptl_mode (D.40721_8);

marking necessary through D.40721_8 stmt D.40721_8 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40721_8 = smh_3->engines[type_5(D)].rtp_session;

processing: D.40722_7 = switch_rtp_ready (D.40721_6);

marking necessary through D.40721_6 stmt D.40721_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40721_6 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8066, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_udptl_mode (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[29] = "switch_core_media_udptl_mode";
  struct switch_media_handle_t * smh;
  uint8_t D.40722;
  struct switch_rtp_t * D.40721;
  switch_status_t D.40720;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8066, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40721_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40722_7 = switch_rtp_ready (D.40721_6);
  if (D.40722_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40721_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40720_9 = switch_rtp_udptl_mode (D.40721_8);

<bb 7>:
  # D.40720_1 = PHI <1(4), D.40720_9(6), 1(5)>
  return D.40720_1;

}



;; Function switch_core_media_get_jb (switch_core_media_get_jb)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8084, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: D.40712_7 = switch_rtp_ready (D.40711_6);

Marking useful stmt: D.40710_9 = switch_rtp_get_jitter_buffer (D.40711_8);

Marking useful stmt: return D.40710_1;


Processing worklist:
processing: return D.40710_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40710_1 stmt D.40710_1 = PHI <0B(4), D.40710_9(6), 0B(5)>
processing: D.40710_1 = PHI <0B(4), D.40710_9(6), 0B(5)>

Marking useful stmt: if (D.40712_7 != 0)

Marking useful stmt: if (smh_3 == 0B)

processing: if (smh_3 == 0B)

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (D.40712_7 != 0)

processing: if (session_2(D) == 0B)

processing: D.40710_9 = switch_rtp_get_jitter_buffer (D.40711_8);

marking necessary through D.40711_8 stmt D.40711_8 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40711_8 = smh_3->engines[type_5(D)].rtp_session;

processing: D.40712_7 = switch_rtp_ready (D.40711_6);

marking necessary through D.40711_6 stmt D.40711_6 = smh_3->engines[type_5(D)].rtp_session;
processing: D.40711_6 = smh_3->engines[type_5(D)].rtp_session;

processing: __assert_fail ("session", "src/switch_core_media.c", 8084, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_get_jb (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[25] = "switch_core_media_get_jb";
  struct switch_media_handle_t * smh;
  uint8_t D.40712;
  struct switch_rtp_t * D.40711;
  struct stfu_instance_t * D.40710;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8084, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  D.40711_6 = smh_3->engines[type_5(D)].rtp_session;
  D.40712_7 = switch_rtp_ready (D.40711_6);
  if (D.40712_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

<bb 6>:
  D.40711_8 = smh_3->engines[type_5(D)].rtp_session;
  D.40710_9 = switch_rtp_get_jitter_buffer (D.40711_8);

<bb 7>:
  # D.40710_1 = PHI <0B(4), D.40710_9(6), 0B(5)>
  return D.40710_1;

}



;; Function switch_core_media_set_sdp_codec_string (switch_core_media_set_sdp_codec_string)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 9 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8105, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_2

Marking useful stmt: parser_6 = sdp_parse (0B, r_sdp_3(D), D.40399_5, 0);

Marking useful stmt: # DEBUG parser => parser_6

Marking useful stmt: sdp_7 = sdp_session (parser_6);

Marking useful stmt: # DEBUG sdp => sdp_7

Marking useful stmt: D.40404_8 = switch_core_media_get_codec_string (session_1(D));

Marking useful stmt: switch_core_media_set_r_sdp_codec_string (session_1(D), D.40404_8, sdp_7, sdp_type_9(D));

Marking useful stmt: sdp_parser_free (parser_6);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_1(D) == 0B)

processing: if (session_1(D) == 0B)

processing: sdp_parser_free (parser_6);

Marking useful stmt: if (parser_6 != 0B)

processing: if (parser_6 != 0B)

Marking useful stmt: if (smh_2 == 0B)

processing: if (smh_2 == 0B)

marking necessary through smh_2 stmt smh_2 = session_1(D)->media_handle;
processing: smh_2 = session_1(D)->media_handle;

processing: switch_core_media_set_r_sdp_codec_string (session_1(D), D.40404_8, sdp_7, sdp_type_9(D));

Marking useful stmt: if (sdp_7 != 0B)

processing: if (sdp_7 != 0B)

processing: D.40404_8 = switch_core_media_get_codec_string (session_1(D));

processing: sdp_7 = sdp_session (parser_6);

processing: parser_6 = sdp_parse (0B, r_sdp_3(D), D.40399_5, 0);

marking necessary through D.40399_5 stmt D.40399_5 = (int) D.40398_4;
processing: D.40399_5 = (int) D.40398_4;

marking necessary through D.40398_4 stmt D.40398_4 = strlen (r_sdp_3(D));
processing: D.40398_4 = strlen (r_sdp_3(D));

processing: __assert_fail ("session", "src/switch_core_media.c", 8105, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 17 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_set_sdp_codec_string (struct switch_core_session_t * session, const char * r_sdp, switch_sdp_type_t sdp_type)
{
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_set_sdp_codec_string";
  struct switch_media_handle_t * smh;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  const char * D.40404;
  int D.40399;
  size_t D.40398;

<bb 2>:
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8105, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;

<bb 5>:
  D.40398_4 = strlen (r_sdp_3(D));
  D.40399_5 = (int) D.40398_4;
  parser_6 = sdp_parse (0B, r_sdp_3(D), D.40399_5, 0);
  # DEBUG parser => parser_6
  if (parser_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 9>;

<bb 6>:
  sdp_7 = sdp_session (parser_6);
  # DEBUG sdp => sdp_7
  if (sdp_7 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  D.40404_8 = switch_core_media_get_codec_string (session_1(D));
  switch_core_media_set_r_sdp_codec_string (session_1(D), D.40404_8, sdp_7, sdp_type_9(D));

<bb 8>:
  sdp_parser_free (parser_6);

<bb 9>:
  return;

}



;; Function switch_core_media_codec_chosen (switch_core_media_codec_chosen)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8407, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_3

Marking useful stmt: # DEBUG engine => engine_8

Marking useful stmt: return D.40386_1;


Processing worklist:
processing: return D.40386_1;

Marking useful stmt: if (session_2(D) == 0B)

marking necessary through D.40386_1 stmt D.40386_1 = PHI <1(4), 0(5), 1(6)>
processing: D.40386_1 = PHI <1(4), 0(5), 1(6)>

Marking useful stmt: if (smh_3 == 0B)

Marking useful stmt: if (D.40390_10 != 0B)

processing: if (D.40390_10 != 0B)

marking necessary through D.40390_10 stmt D.40390_10 = D.40389_9->iananame;
processing: D.40390_10 = D.40389_9->iananame;

marking necessary through D.40389_9 stmt D.40389_9 = engine_8->cur_payload_map;
processing: D.40389_9 = engine_8->cur_payload_map;

marking necessary through engine_8 stmt engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
processing: engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};

marking necessary through smh_3 stmt smh_3 = session_2(D)->media_handle;
processing: smh_3 = session_2(D)->media_handle;

processing: if (smh_3 == 0B)

processing: if (session_2(D) == 0B)

processing: __assert_fail ("session", "src/switch_core_media.c", 8407, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 11 statements (0%)
Removed 0 of 1 PHI nodes (0%)
switch_core_media_codec_chosen (struct switch_core_session_t * session, switch_media_type_t type)
{
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_codec_chosen";
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * engine;
  char * D.40390;
  struct payload_map_t * D.40389;
  switch_status_t D.40386;

<bb 2>:
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8407, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_3 = session_2(D)->media_handle;
  # DEBUG smh => smh_3
  if (smh_3 == 0B)
    goto <bb 7>;
  else
    goto <bb 5>;

<bb 5>:
  engine_8 = &smh_3->engines[type_6(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_8
  D.40389_9 = engine_8->cur_payload_map;
  D.40390_10 = D.40389_9->iananame;
  if (D.40390_10 != 0B)
    goto <bb 7>;
  else
    goto <bb 6>;

<bb 6>:

<bb 7>:
  # D.40386_1 = PHI <1(4), 0(5), 1(6)>
  return D.40386_1;

}



;; Function switch_core_media_check_outgoing_proxy (switch_core_media_check_outgoing_proxy)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 8 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Marking useful stmt: # DEBUG r_sdp => 0B

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8430, &__PRETTY_FUNCTION__);

Marking useful stmt: D.40369_5 = switch_channel_test_flag (D.40368_4, 29);

Marking useful stmt: # DEBUG smh => smh_6

Marking useful stmt: r_sdp_8 = switch_channel_get_variable_dup (D.40368_7, "switch_r_sdp", 1, -1);

Marking useful stmt: # DEBUG r_sdp => r_sdp_8

Marking useful stmt: # DEBUG D#40 => &smh_6->engines

Marking useful stmt: # DEBUG a_engine => D#40

Marking useful stmt: # DEBUG D#41 => &smh_6->engines[1]

Marking useful stmt: # DEBUG v_engine => D#41

Marking useful stmt: switch_channel_set_flag_value (D.40374_11, 29, 1);

Marking useful stmt: D.40376_13 = switch_core_perform_session_strdup (session_2(D), "PROXY", "src/switch_core_media.c", &__func__, 8447);

Marking useful stmt: D.40375_12->iananame = D.40376_13;

Marking useful stmt: D.40375_14->rm_rate = 8000;

Marking useful stmt: D.40375_15->adv_rm_rate = 8000;

Marking useful stmt: D.40375_16->codec_ms = 20;

Marking useful stmt: D.40377_17 = switch_stristr ("m=video", r_sdp_8);

Marking useful stmt: switch_core_media_choose_port (session_2(D), 1, 1);

Marking useful stmt: D.40380_18->rm_encoding = "PROXY-VID";

Marking useful stmt: D.40380_19->rm_rate = 90000;

Marking useful stmt: D.40380_20->adv_rm_rate = 90000;

Marking useful stmt: D.40380_21->codec_ms = 0;

Marking useful stmt: switch_channel_set_flag_value (D.40374_22, 23, 1);

Marking useful stmt: switch_channel_set_flag_value (D.40374_23, 98, 1);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_2(D) == 0B)

processing: if (session_2(D) == 0B)

processing: switch_channel_set_flag_value (D.40374_23, 98, 1);

Marking useful stmt: if (D.40377_17 != 0B)

marking necessary through D.40374_23 stmt D.40374_23 = session_2(D)->channel;
processing: D.40374_23 = session_2(D)->channel;

processing: if (D.40377_17 != 0B)

Marking useful stmt: if (smh_6 == 0B)

processing: if (smh_6 == 0B)

Marking useful stmt: if (D.40369_5 == 0)

marking necessary through smh_6 stmt smh_6 = session_2(D)->media_handle;
processing: smh_6 = session_2(D)->media_handle;

processing: if (D.40369_5 == 0)

processing: switch_channel_set_flag_value (D.40374_22, 23, 1);

marking necessary through D.40374_22 stmt D.40374_22 = session_2(D)->channel;
processing: D.40374_22 = session_2(D)->channel;

processing: D.40380_21->codec_ms = 0;

marking necessary through D.40380_21 stmt D.40380_21 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
processing: D.40380_21 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;

processing: D.40380_20->adv_rm_rate = 90000;

marking necessary through D.40380_20 stmt D.40380_20 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
processing: D.40380_20 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;

processing: D.40380_19->rm_rate = 90000;

marking necessary through D.40380_19 stmt D.40380_19 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
processing: D.40380_19 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;

processing: D.40380_18->rm_encoding = "PROXY-VID";

marking necessary through D.40380_18 stmt D.40380_18 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
processing: D.40380_18 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;

processing: switch_core_media_choose_port (session_2(D), 1, 1);

processing: D.40377_17 = switch_stristr ("m=video", r_sdp_8);

processing: D.40375_16->codec_ms = 20;

marking necessary through D.40375_16 stmt D.40375_16 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
processing: D.40375_16 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;

processing: D.40375_15->adv_rm_rate = 8000;

marking necessary through D.40375_15 stmt D.40375_15 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
processing: D.40375_15 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;

processing: D.40375_14->rm_rate = 8000;

marking necessary through D.40375_14 stmt D.40375_14 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
processing: D.40375_14 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;

processing: D.40375_12->iananame = D.40376_13;

marking necessary through D.40375_12 stmt D.40375_12 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
processing: D.40375_12 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;

processing: D.40376_13 = switch_core_perform_session_strdup (session_2(D), "PROXY", "src/switch_core_media.c", &__func__, 8447);

processing: switch_channel_set_flag_value (D.40374_11, 29, 1);

marking necessary through D.40374_11 stmt D.40374_11 = session_2(D)->channel;
processing: D.40374_11 = session_2(D)->channel;

processing: r_sdp_8 = switch_channel_get_variable_dup (D.40368_7, "switch_r_sdp", 1, -1);

marking necessary through D.40368_7 stmt D.40368_7 = o_session_3(D)->channel;
processing: D.40368_7 = o_session_3(D)->channel;

processing: D.40369_5 = switch_channel_test_flag (D.40368_4, 29);

marking necessary through D.40368_4 stmt D.40368_4 = o_session_3(D)->channel;
processing: D.40368_4 = o_session_3(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 8430, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Removed 0 of 43 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_check_outgoing_proxy (struct switch_core_session_t * session, struct switch_core_session_t * o_session)
{
  static const char __func__[39] = "switch_core_media_check_outgoing_proxy";
  static const char __PRETTY_FUNCTION__[39] = "switch_core_media_check_outgoing_proxy";
  const char * r_sdp;
  struct switch_media_handle_t * smh;
  struct payload_map_t * D.40380;
  const char * D.40377;
  char * D.40376;
  struct payload_map_t * D.40375;
  struct switch_channel_t * D.40374;
  uint32_t D.40369;
  struct switch_channel_t * D.40368;

<bb 2>:
  # DEBUG r_sdp => 0B
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8430, &__PRETTY_FUNCTION__);

<bb 4>:
  D.40368_4 = o_session_3(D)->channel;
  D.40369_5 = switch_channel_test_flag (D.40368_4, 29);
  if (D.40369_5 == 0)
    goto <bb 8>;
  else
    goto <bb 5>;

<bb 5>:
  smh_6 = session_2(D)->media_handle;
  # DEBUG smh => smh_6
  if (smh_6 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

<bb 6>:
  D.40368_7 = o_session_3(D)->channel;
  r_sdp_8 = switch_channel_get_variable_dup (D.40368_7, "switch_r_sdp", 1, -1);
  # DEBUG r_sdp => r_sdp_8
  # DEBUG D#40 => &smh_6->engines
  # DEBUG a_engine => D#40
  # DEBUG D#41 => &smh_6->engines[1]
  # DEBUG v_engine => D#41
  D.40374_11 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_11, 29, 1);
  D.40375_12 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40376_13 = switch_core_perform_session_strdup (session_2(D), "PROXY", "src/switch_core_media.c", &__func__, 8447);
  D.40375_12->iananame = D.40376_13;
  D.40375_14 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_14->rm_rate = 8000;
  D.40375_15 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_15->adv_rm_rate = 8000;
  D.40375_16 = MEM[(struct switch_rtp_engine_t *)smh_6 + 80B].cur_payload_map;
  D.40375_16->codec_ms = 20;
  D.40377_17 = switch_stristr ("m=video", r_sdp_8);
  if (D.40377_17 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  switch_core_media_choose_port (session_2(D), 1, 1);
  D.40380_18 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_18->rm_encoding = "PROXY-VID";
  D.40380_19 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_19->rm_rate = 90000;
  D.40380_20 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_20->adv_rm_rate = 90000;
  D.40380_21 = MEM[(struct switch_rtp_engine_t *)smh_6 + 11496B].cur_payload_map;
  D.40380_21->codec_ms = 0;
  D.40374_22 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_22, 23, 1);
  D.40374_23 = session_2(D)->channel;
  switch_channel_set_flag_value (D.40374_23, 98, 1);

<bb 8>:
  return;

}



;; Function switch_core_media_proxy_codec (switch_core_media_proxy_codec)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;;
;; Loop 3
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 21 23 22
;;
;; Loop 2
;;  header 29, latch 28
;;  depth 1, outer 0
;;  nodes: 29 28 19
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 13 14 15 12 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 31 5 }
;; 5 succs { 31 6 }
;; 6 succs { 7 8 }
;; 7 succs { 31 }
;; 8 succs { 17 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 16 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 9 18 }
;; 18 succs { 29 }
;; 19 succs { 20 28 }
;; 20 succs { 25 }
;; 21 succs { 22 24 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 21 26 }
;; 26 succs { 27 30 }
;; 27 succs { 30 }
;; 28 succs { 29 }
;; 29 succs { 19 30 }
;; 30 succs { 31 }
;; 31 succs { 1 }
Marking useful stmt: # DEBUG parser => 0B

Marking useful stmt: # DEBUG ptime => 0

Marking useful stmt: # DEBUG dptime => 0

Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8482, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_12

Marking useful stmt: # DEBUG D#42 => &smh_12->engines

Marking useful stmt: # DEBUG a_engine => D#42

Marking useful stmt: parser_17 = sdp_parse (0B, r_sdp_14(D), D.40331_16, 0);

Marking useful stmt: # DEBUG parser => parser_17

Marking useful stmt: sdp_18 = sdp_session (parser_17);

Marking useful stmt: # DEBUG sdp => sdp_18

Marking useful stmt: sdp_parser_free (parser_17);

Marking useful stmt: # DEBUG attr => attr_19

Marking useful stmt: # DEBUG s => D.40336_20

Marking useful stmt: // predicted unlikely by continue predictor.

Marking useful stmt: # DEBUG __nptr => D.40343_24

Marking useful stmt: dptime_67 = strtol (D.40343_24, 0B, 10);

Marking useful stmt: # DEBUG dptime => NULL

Marking useful stmt: # DEBUG dptime => dptime_6

Marking useful stmt: # DEBUG attr => attr_26

Marking useful stmt: # DEBUG dptime => dptime_7

Marking useful stmt: # DEBUG attr => attr_2

Marking useful stmt: # DEBUG m => m_27

Marking useful stmt: # DEBUG ptime => dptime_7

Marking useful stmt: # DEBUG attr => attr_30

Marking useful stmt: # DEBUG __nptr => D.40343_34

Marking useful stmt: ptime_68 = strtol (D.40343_34, 0B, 10);

Marking useful stmt: # DEBUG ptime => NULL

Marking useful stmt: # DEBUG ptime => ptime_4

Marking useful stmt: # DEBUG attr => attr_39

Marking useful stmt: # DEBUG ptime => ptime_5

Marking useful stmt: # DEBUG attr => attr_3

Marking useful stmt: # DEBUG map => map_40

Marking useful stmt: D.40360_43 = switch_core_perform_session_strdup (session_11(D), D.40359_42, "src/switch_core_media.c", &__func__, 8527);

Marking useful stmt: D.40358_41->iananame = D.40360_43;

Marking useful stmt: D.40358_44->rm_rate = D.40361_45;

Marking useful stmt: D.40358_46->adv_rm_rate = D.40361_47;

Marking useful stmt: D.40358_48->codec_ms = ptime.4_49;

Marking useful stmt: switch_core_media_set_codec (session_11(D), 0, D.40364_51);

Marking useful stmt: # DEBUG m => m_52

Marking useful stmt: # DEBUG m => m_1

Marking useful stmt: sdp_parser_free (parser_17);

Marking useful stmt: return;

(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_3 = PHI <attr_30(20), attr_39(24)>
)
  (init_cond = attr_30))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_3 = PHI <attr_30(20), attr_39(24)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
(analyze_scalar_evolution 
  (loop_nb = 3)
  (scalar = attr_3)
(get_scalar_evolution 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
(set_scalar_evolution 
  instantiated_below = 20 
  (scalar = attr_3)
  (scalar_evolution = attr_3))
)
can not prove finiteness of loop 3
Marking useful stmt: if (attr_3 != 0B)

(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
m_1 = PHI <m_27(18), m_52(28)>
)
  (init_cond = m_27))
(analyze_evolution_in_loop 
  (loop_phi_node = m_1 = PHI <m_27(18), m_52(28)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 18 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
(analyze_scalar_evolution 
  (loop_nb = 2)
  (scalar = m_1)
(get_scalar_evolution 
  (scalar = m_1)
  (scalar_evolution = m_1))
(set_scalar_evolution 
  instantiated_below = 18 
  (scalar = m_1)
  (scalar_evolution = m_1))
)
can not prove finiteness of loop 2
Marking useful stmt: if (D.40344_29 == 256)

(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = ))
(analyze_initial_condition 
  (loop_phi_node = 
attr_2 = PHI <attr_19(8), attr_26(16)>
)
  (init_cond = attr_19))
(analyze_evolution_in_loop 
  (loop_phi_node = attr_2 = PHI <attr_19(8), attr_26(16)>
)
  (evolution_function = scev_not_known))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
(analyze_scalar_evolution 
  (loop_nb = 1)
  (scalar = attr_2)
(get_scalar_evolution 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
(set_scalar_evolution 
  instantiated_below = 8 
  (scalar = attr_2)
  (scalar_evolution = attr_2))
)
can not prove finiteness of loop 1
Marking useful stmt: if (attr_2 != 0B)


Processing worklist:
processing: if (attr_2 != 0B)

Marking useful stmt: if (sdp_18 == 0B)

marking necessary through attr_2 stmt attr_2 = PHI <attr_19(8), attr_26(16)>
processing: attr_2 = PHI <attr_19(8), attr_26(16)>

marking necessary through attr_19 stmt attr_19 = sdp_18->sdp_attributes;
marking necessary through attr_26 stmt attr_26 = attr_2->a_next;
processing: attr_26 = attr_2->a_next;

processing: attr_19 = sdp_18->sdp_attributes;

processing: if (sdp_18 == 0B)

Marking useful stmt: if (parser_17 == 0B)

processing: if (parser_17 == 0B)

Marking useful stmt: if (smh_12 == 0B)

processing: if (smh_12 == 0B)

Marking useful stmt: if (session_11(D) == 0B)

marking necessary through smh_12 stmt smh_12 = session_11(D)->media_handle;
processing: smh_12 = session_11(D)->media_handle;

processing: if (session_11(D) == 0B)

processing: if (D.40344_29 == 256)

Marking useful stmt: if (m_1 != 0B)

marking necessary through D.40344_29 stmt D.40344_29 = m_1->m_proto;
processing: D.40344_29 = m_1->m_proto;

marking necessary through m_1 stmt m_1 = PHI <m_27(18), m_52(28)>
processing: m_1 = PHI <m_27(18), m_52(28)>

marking necessary through m_27 stmt m_27 = sdp_18->sdp_media;
marking necessary through m_52 stmt m_52 = m_1->m_next;
processing: m_52 = m_1->m_next;

processing: m_27 = sdp_18->sdp_media;

processing: if (m_1 != 0B)

processing: if (attr_3 != 0B)

marking necessary through attr_3 stmt attr_3 = PHI <attr_30(20), attr_39(24)>
processing: attr_3 = PHI <attr_30(20), attr_39(24)>

marking necessary through attr_30 stmt attr_30 = m_1->m_attributes;
marking necessary through attr_39 stmt attr_39 = attr_3->a_next;
processing: attr_39 = attr_3->a_next;

processing: attr_30 = m_1->m_attributes;

processing: return;

processing: sdp_parser_free (parser_17);

processing: switch_core_media_set_codec (session_11(D), 0, D.40364_51);

Marking useful stmt: if (map_40 != 0B)

marking necessary through D.40364_51 stmt D.40364_51 = D.40363_50->codec_flags;
processing: D.40364_51 = D.40363_50->codec_flags;

marking necessary through D.40363_50 stmt D.40363_50 = smh_12->mparams;
processing: D.40363_50 = smh_12->mparams;

processing: if (map_40 != 0B)

marking necessary through map_40 stmt map_40 = m_1->m_rtpmaps;
processing: map_40 = m_1->m_rtpmaps;

processing: D.40358_48->codec_ms = ptime.4_49;

marking necessary through D.40358_48 stmt D.40358_48 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
marking necessary through ptime.4_49 stmt ptime.4_49 = (uint32_t) ptime_5;
processing: ptime.4_49 = (uint32_t) ptime_5;

marking necessary through ptime_5 stmt ptime_5 = PHI <dptime_7(20), ptime_4(24)>
processing: ptime_5 = PHI <dptime_7(20), ptime_4(24)>

marking necessary through dptime_7 stmt dptime_7 = PHI <0(8), dptime_6(16)>
marking necessary through ptime_4 stmt ptime_4 = PHI <ptime_5(21), ptime_68(23), ptime_5(22)>
processing: ptime_4 = PHI <ptime_5(21), ptime_68(23), ptime_5(22)>

Marking useful stmt: if (D.40343_33 != 0B)

Marking useful stmt: if (D.40347_32 == 0)

processing: if (D.40347_32 == 0)

marking necessary through D.40347_32 stmt D.40347_32 = strcasecmp (D.40336_31, "ptime");
processing: D.40347_32 = strcasecmp (D.40336_31, "ptime");

marking necessary through D.40336_31 stmt D.40336_31 = attr_3->a_name;
processing: D.40336_31 = attr_3->a_name;

processing: if (D.40343_33 != 0B)

marking necessary through D.40343_33 stmt D.40343_33 = attr_3->a_value;
processing: D.40343_33 = attr_3->a_value;

processing: dptime_7 = PHI <0(8), dptime_6(16)>

marking necessary through dptime_6 stmt dptime_6 = PHI <dptime_7(13), dptime_7(14), dptime_67(15)>
processing: dptime_6 = PHI <dptime_7(13), dptime_7(14), dptime_67(15)>

Marking useful stmt: if (D.48272_66 != 0)

Marking useful stmt: if (D.40340_23 == 0)

processing: if (D.40340_23 == 0)

marking necessary through D.40340_23 stmt D.40340_23 = strcasecmp (D.40336_22, "ptime");
processing: D.40340_23 = strcasecmp (D.40336_22, "ptime");

marking necessary through D.40336_22 stmt D.40336_22 = attr_2->a_name;
processing: D.40336_22 = attr_2->a_name;

processing: if (D.48272_66 != 0)

marking necessary through D.48272_66 stmt D.48272_66 = PHI <1(9), 1(10), 0(11)>
processing: D.48272_66 = PHI <1(9), 1(10), 0(11)>

Marking useful stmt: if (D.40336_20 == 0B)

Marking useful stmt: if (D.48273_65 == 0)

processing: if (D.48273_65 == 0)

marking necessary through D.48273_65 stmt D.48273_65 = *D.40336_20;
processing: D.48273_65 = *D.40336_20;

marking necessary through D.40336_20 stmt D.40336_20 = attr_2->a_name;
processing: D.40336_20 = attr_2->a_name;

processing: if (D.40336_20 == 0B)

processing: D.40358_48 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;

processing: D.40358_46->adv_rm_rate = D.40361_47;

marking necessary through D.40358_46 stmt D.40358_46 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
marking necessary through D.40361_47 stmt D.40361_47 = map_40->rm_rate;
processing: D.40361_47 = map_40->rm_rate;

processing: D.40358_46 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;

processing: D.40358_44->rm_rate = D.40361_45;

marking necessary through D.40358_44 stmt D.40358_44 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
marking necessary through D.40361_45 stmt D.40361_45 = map_40->rm_rate;
processing: D.40361_45 = map_40->rm_rate;

processing: D.40358_44 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;

processing: D.40358_41->iananame = D.40360_43;

marking necessary through D.40358_41 stmt D.40358_41 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
processing: D.40358_41 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;

processing: D.40360_43 = switch_core_perform_session_strdup (session_11(D), D.40359_42, "src/switch_core_media.c", &__func__, 8527);

marking necessary through D.40359_42 stmt D.40359_42 = map_40->rm_encoding;
processing: D.40359_42 = map_40->rm_encoding;

processing: ptime_68 = strtol (D.40343_34, 0B, 10);

marking necessary through D.40343_34 stmt D.40343_34 = attr_3->a_value;
processing: D.40343_34 = attr_3->a_value;

processing: dptime_67 = strtol (D.40343_24, 0B, 10);

marking necessary through D.40343_24 stmt D.40343_24 = attr_2->a_value;
processing: D.40343_24 = attr_2->a_value;

processing: sdp_parser_free (parser_17);

processing: sdp_18 = sdp_session (parser_17);

processing: parser_17 = sdp_parse (0B, r_sdp_14(D), D.40331_16, 0);

marking necessary through D.40331_16 stmt D.40331_16 = (int) D.40330_15;
processing: D.40331_16 = (int) D.40330_15;

marking necessary through D.40330_15 stmt D.40330_15 = strlen (r_sdp_14(D));
processing: D.40330_15 = strlen (r_sdp_14(D));

processing: __assert_fail ("session", "src/switch_core_media.c", 8482, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting : ptime_35 = ptime_68;

Deleting : dptime_25 = dptime_67;

Deleting : ptime_28 = dptime_7;

Removed 3 of 91 statements (3%)
Removed 0 of 13 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  struct sdp_media_t * m;
  struct sdp_parser_t * parser;
  struct sdp_session_t * sdp;
  struct sdp_attribute_t * attr;
  int ptime;
  int dptime;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_proxy_codec";
  static const char __func__[30] = "switch_core_media_proxy_codec";

  { Scope block #481 src/switch_core_media.c:8506 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #482 Originating from :#0 

    }

  }

  { Scope block #483 src/switch_core_media.c:8501 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #484 Originating from :#0 

    }

  }

  { Scope block #485 
    struct sdp_rtpmap_t * map;

    { Scope block #486 src/switch_core_media.c:8520 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #487 Originating from :#0 

      }

    }

  }

}
switch_core_media_proxy_codec (struct switch_core_session_t * session, const char * r_sdp)
{
  const char D.48273;
  int D.48272;
  struct sdp_rtpmap_t * map;
  static const char __func__[30] = "switch_core_media_proxy_codec";
  static const char __PRETTY_FUNCTION__[30] = "switch_core_media_proxy_codec";
  struct switch_media_handle_t * smh;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  uint32_t D.40364;
  struct switch_core_media_params_t * D.40363;
  uint32_t ptime.4;
  long unsigned int D.40361;
  char * D.40360;
  const char * D.40359;
  struct payload_map_t * D.40358;
  int D.40347;
  sdp_proto_e D.40344;
  const char * D.40343;
  int D.40340;
  const char * D.40336;
  int D.40331;
  size_t D.40330;

<bb 2>:
  # DEBUG parser => 0B
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  if (session_11(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8482, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_12 = session_11(D)->media_handle;
  # DEBUG smh => smh_12
  if (smh_12 == 0B)
    goto <bb 31>;
  else
    goto <bb 5>;

<bb 5>:
  # DEBUG D#42 => &smh_12->engines
  # DEBUG a_engine => D#42
  D.40330_15 = strlen (r_sdp_14(D));
  D.40331_16 = (int) D.40330_15;
  parser_17 = sdp_parse (0B, r_sdp_14(D), D.40331_16, 0);
  # DEBUG parser => parser_17
  if (parser_17 == 0B)
    goto <bb 31>;
  else
    goto <bb 6>;

<bb 6>:
  sdp_18 = sdp_session (parser_17);
  # DEBUG sdp => sdp_18
  if (sdp_18 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

<bb 7>:
  sdp_parser_free (parser_17);
  goto <bb 31>;

<bb 8>:
  attr_19 = sdp_18->sdp_attributes;
  # DEBUG attr => attr_19
  goto <bb 17>;

<bb 9>:
  D.40336_20 = attr_2->a_name;
  # DEBUG s => D.40336_20
  if (D.40336_20 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

<bb 10>:
  D.48273_65 = *D.40336_20;
  if (D.48273_65 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # D.48272_66 = PHI <1(9), 1(10), 0(11)>
  if (D.48272_66 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:
  // predicted unlikely by continue predictor.
  goto <bb 16>;

<bb 14>:
  D.40336_22 = attr_2->a_name;
  D.40340_23 = strcasecmp (D.40336_22, "ptime");
  if (D.40340_23 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

<bb 15>:
  D.40343_24 = attr_2->a_value;
  # DEBUG __nptr => D.40343_24
  dptime_67 = strtol (D.40343_24, 0B, 10);
  # DEBUG dptime => NULL

<bb 16>:
  # dptime_6 = PHI <dptime_7(13), dptime_7(14), dptime_67(15)>
  # DEBUG dptime => dptime_6
  attr_26 = attr_2->a_next;
  # DEBUG attr => attr_26

<bb 17>:
  # attr_2 = PHI <attr_19(8), attr_26(16)>
  # dptime_7 = PHI <0(8), dptime_6(16)>
  # DEBUG dptime => dptime_7
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 18>;

<bb 18>:
  m_27 = sdp_18->sdp_media;
  # DEBUG m => m_27
  goto <bb 29>;

<bb 19>:
  # DEBUG ptime => dptime_7
  D.40344_29 = m_1->m_proto;
  if (D.40344_29 == 256)
    goto <bb 20>;
  else
    goto <bb 28>;

<bb 20>:
  attr_30 = m_1->m_attributes;
  # DEBUG attr => attr_30
  goto <bb 25>;

<bb 21>:
  D.40336_31 = attr_3->a_name;
  D.40347_32 = strcasecmp (D.40336_31, "ptime");
  if (D.40347_32 == 0)
    goto <bb 22>;
  else
    goto <bb 24>;

<bb 22>:
  D.40343_33 = attr_3->a_value;
  if (D.40343_33 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;

<bb 23>:
  D.40343_34 = attr_3->a_value;
  # DEBUG __nptr => D.40343_34
  ptime_68 = strtol (D.40343_34, 0B, 10);
  # DEBUG ptime => NULL

<bb 24>:
  # ptime_4 = PHI <ptime_5(21), ptime_68(23), ptime_5(22)>
  # DEBUG ptime => ptime_4
  attr_39 = attr_3->a_next;
  # DEBUG attr => attr_39

<bb 25>:
  # attr_3 = PHI <attr_30(20), attr_39(24)>
  # ptime_5 = PHI <dptime_7(20), ptime_4(24)>
  # DEBUG ptime => ptime_5
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 21>;
  else
    goto <bb 26>;

<bb 26>:
  map_40 = m_1->m_rtpmaps;
  # DEBUG map => map_40
  if (map_40 != 0B)
    goto <bb 27>;
  else
    goto <bb 30>;

<bb 27>:
  D.40358_41 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40359_42 = map_40->rm_encoding;
  D.40360_43 = switch_core_perform_session_strdup (session_11(D), D.40359_42, "src/switch_core_media.c", &__func__, 8527);
  D.40358_41->iananame = D.40360_43;
  D.40358_44 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40361_45 = map_40->rm_rate;
  D.40358_44->rm_rate = D.40361_45;
  D.40358_46 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  D.40361_47 = map_40->rm_rate;
  D.40358_46->adv_rm_rate = D.40361_47;
  D.40358_48 = MEM[(struct switch_rtp_engine_t *)smh_12 + 80B].cur_payload_map;
  ptime.4_49 = (uint32_t) ptime_5;
  D.40358_48->codec_ms = ptime.4_49;
  D.40363_50 = smh_12->mparams;
  D.40364_51 = D.40363_50->codec_flags;
  switch_core_media_set_codec (session_11(D), 0, D.40364_51);
  goto <bb 30>;

<bb 28>:
  m_52 = m_1->m_next;
  # DEBUG m => m_52

<bb 29>:
  # m_1 = PHI <m_27(18), m_52(28)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 19>;
  else
    goto <bb 30>;

<bb 30>:
  sdp_parser_free (parser_17);

<bb 31>:
  return;

}



;; Function switch_core_media_recover_session (switch_core_media_recover_session)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 58 5 }
;; 5 succs { 58 6 }
;; 6 succs { 58 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 15 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 32 30 }
;; 30 succs { 32 31 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 37 35 }
;; 35 succs { 37 36 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 52 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 52 }
;; 51 succs { 52 }
;; 52 succs { 58 53 }
;; 53 succs { 54 56 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 1 }
Marking useful stmt: __assert_fail ("session", "src/switch_core_media.c", 8557, &__PRETTY_FUNCTION__);

Marking useful stmt: # DEBUG smh => smh_4

Marking useful stmt: ip_6 = switch_channel_get_variable_dup (D.40154_5, "local_media_ip", 1, -1);

Marking useful stmt: # DEBUG ip => ip_6

Marking useful stmt: port_8 = switch_channel_get_variable_dup (D.40154_7, "local_media_port", 1, -1);

Marking useful stmt: # DEBUG port => port_8

Marking useful stmt: D.40157_10 = switch_channel_test_flag (D.40154_9, 15);

Marking useful stmt: a_ip_15 = switch_channel_get_variable_dup (D.40154_14, "advertised_media_ip", 1, -1);

Marking useful stmt: # DEBUG a_ip => a_ip_15

Marking useful stmt: r_ip_17 = switch_channel_get_variable_dup (D.40154_16, "remote_media_ip", 1, -1);

Marking useful stmt: # DEBUG r_ip => r_ip_17

Marking useful stmt: r_port_19 = switch_channel_get_variable_dup (D.40154_18, "remote_media_port", 1, -1);

Marking useful stmt: # DEBUG r_port => r_port_19

Marking useful stmt: # DEBUG D#44 => &smh_4->engines

Marking useful stmt: # DEBUG a_engine => D#44

Marking useful stmt: # DEBUG D#43 => &smh_4->engines[1]

Marking useful stmt: # DEBUG v_engine => D#43

Marking useful stmt: D.40163_25 = switch_channel_get_variable_dup (D.40154_24, "rtp_use_codec_name", 1, -1);

Marking useful stmt: D.40162_23->rm_encoding = D.40163_25;

Marking useful stmt: D.40162_23->iananame = D.40164_26;

Marking useful stmt: D.40165_29 = switch_channel_get_variable_dup (D.40154_28, "rtp_use_codec_fmtp", 1, -1);

Marking useful stmt: D.40162_27->rm_fmtp = D.40165_29;

Marking useful stmt: tmp_31 = switch_channel_get_variable_dup (D.40154_30, "switch_r_sdp", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_31

Marking useful stmt: D.40169_33 = switch_core_perform_session_strdup (session_3(D), tmp_31, "src/switch_core_media.c", &__func__, 8581);

Marking useful stmt: D.40168_32->remote_sdp_str = D.40169_33;

Marking useful stmt: tmp_35 = switch_channel_get_variable_dup (D.40154_34, "rtp_last_audio_codec_string", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_35

Marking useful stmt: vtmp_37 = switch_channel_get_variable_dup (D.40154_36, "rtp_last_video_codec_string", 1, -1);

Marking useful stmt: # DEBUG vtmp => vtmp_37

Marking useful stmt: switch_channel_set_variable_printf (D.40154_38, "rtp_use_codec_string", "%s%s%s", tmp_35, iftmp.0_1, vtmp_2);

Marking useful stmt: tmp_44 = switch_channel_get_variable_dup (D.40154_43, "rtp_use_codec_string", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_44

Marking useful stmt: tmp_codec_string_46 = switch_core_perform_session_strdup (D.40182_45, tmp_44, "src/switch_core_media.c", &__func__, 8591);

Marking useful stmt: # DEBUG tmp_codec_string => tmp_codec_string_46

Marking useful stmt: D.40184_48 = switch_separate_string (tmp_codec_string_46, 44, D.40183_47, 50);

Marking useful stmt: smh_4->codec_order_last = D.40185_49;

Marking useful stmt: D.40188_54 = switch_loadable_module_get_codecs_sorted (D.40186_51, 50, D.40183_52, D.40187_53);

Marking useful stmt: D.40168_50->num_codecs = D.40188_54;

Marking useful stmt: tmp_56 = switch_channel_get_variable_dup (D.40154_55, "rtp_2833_send_payload", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_56

Marking useful stmt: # DEBUG __nptr => tmp_56

Marking useful stmt: D.48283_317 = strtol (tmp_56, 0B, 10);

Marking useful stmt: D.40168_57->te = D.40192_59;

Marking useful stmt: tmp_61 = switch_channel_get_variable_dup (D.40154_60, "rtp_2833_recv_payload", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_61

Marking useful stmt: # DEBUG __nptr => tmp_61

Marking useful stmt: D.48286_318 = strtol (tmp_61, 0B, 10);

Marking useful stmt: D.40168_62->recv_te = D.40196_64;

Marking useful stmt: tmp_66 = switch_channel_get_variable_dup (D.40154_65, "rtp_use_codec_rate", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_66

Marking useful stmt: # DEBUG __nptr => tmp_66

Marking useful stmt: D.48289_319 = strtol (tmp_66, 0B, 10);

Marking useful stmt: D.40162_67->rm_rate = D.40200_69;

Marking useful stmt: D.40162_71->adv_rm_rate = D.40201_72;

Marking useful stmt: tmp_74 = switch_channel_get_variable_dup (D.40154_73, "rtp_use_codec_ptime", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_74

Marking useful stmt: # DEBUG __nptr => tmp_74

Marking useful stmt: D.48292_320 = strtol (tmp_74, 0B, 10);

Marking useful stmt: D.40162_75->codec_ms = D.40205_77;

Marking useful stmt: tmp_79 = switch_channel_get_variable_dup (D.40154_78, "rtp_use_pt", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_79

Marking useful stmt: # DEBUG __nptr => tmp_79

Marking useful stmt: D.48295_321 = strtol (tmp_79, 0B, 10);

Marking useful stmt: D.40162_81->agreed_pt = D.40209_83;

Marking useful stmt: D.40162_81->pt = D.40210_84;

Marking useful stmt: tmp_86 = switch_channel_get_variable_dup (D.40154_85, "rtp_audio_recv_pt", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_86

Marking useful stmt: # DEBUG __nptr => tmp_86

Marking useful stmt: D.48298_322 = strtol (tmp_86, 0B, 10);

Marking useful stmt: D.40162_87->recv_pt = D.40214_89;

Marking useful stmt: switch_core_media_set_codec (session_3(D), 1, D.40215_91);

Marking useful stmt: D.40168_92->extrtpip = ip_6;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40216_93;

Marking useful stmt: # DEBUG __nptr => port_8

Marking useful stmt: D.48301_323 = strtol (port_8, 0B, 10);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port = D.40218_95;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_port = D.40219_96;

Marking useful stmt: # DEBUG s => ip_6

Marking useful stmt: D.40223_98 = switch_core_perform_session_strdup (session_3(D), ip_6, "src/switch_core_media.c", &__func__, 8627);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip = D.40223_98;

Marking useful stmt: D.40168_99->rtpip = D.40224_100;

Marking useful stmt: # DEBUG s => a_ip_15

Marking useful stmt: D.40228_102 = switch_core_perform_session_strdup (session_3(D), a_ip_15, "src/switch_core_media.c", &__func__, 8632);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40228_102;

Marking useful stmt: D.40162_106->remote_sdp_ip = r_ip_17;

Marking useful stmt: # DEBUG __nptr => r_port_19

Marking useful stmt: D.48312_328 = strtol (r_port_19, 0B, 10);

Marking useful stmt: D.40162_107->remote_sdp_port = D.40235_109;

Marking useful stmt: D.40236_111 = switch_channel_test_flag (D.40154_110, 23);

Marking useful stmt: tmp_113 = switch_channel_get_variable_dup (D.40154_112, "rtp_use_video_pt", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_113

Marking useful stmt: # DEBUG __nptr => tmp_113

Marking useful stmt: D.48315_329 = strtol (tmp_113, 0B, 10);

Marking useful stmt: D.40241_115->agreed_pt = D.40243_117;

Marking useful stmt: D.40241_115->pt = D.40244_118;

Marking useful stmt: tmp_120 = switch_channel_get_variable_dup (D.40154_119, "rtp_video_recv_pt", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_120

Marking useful stmt: # DEBUG __nptr => tmp_120

Marking useful stmt: D.48318_330 = strtol (tmp_120, 0B, 10);

Marking useful stmt: D.40241_121->recv_pt = D.40248_123;

Marking useful stmt: D.40249_126 = switch_channel_get_variable_dup (D.40154_125, "rtp_use_video_codec_name", 1, -1);

Marking useful stmt: D.40241_124->rm_encoding = D.40249_126;

Marking useful stmt: D.40250_129 = switch_channel_get_variable_dup (D.40154_128, "rtp_use_video_codec_fmtp", 1, -1);

Marking useful stmt: D.40241_127->rm_fmtp = D.40250_129;

Marking useful stmt: ip_131 = switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);

Marking useful stmt: # DEBUG ip => ip_131

Marking useful stmt: port_133 = switch_channel_get_variable_dup (D.40154_132, "local_video_port", 1, -1);

Marking useful stmt: # DEBUG port => port_133

Marking useful stmt: r_ip_135 = switch_channel_get_variable_dup (D.40154_134, "remote_video_ip", 1, -1);

Marking useful stmt: # DEBUG r_ip => r_ip_135

Marking useful stmt: r_port_137 = switch_channel_get_variable_dup (D.40154_136, "remote_video_port", 1, -1);

Marking useful stmt: # DEBUG r_port => r_port_137

Marking useful stmt: switch_channel_set_flag_value (D.40154_138, 98, 1);

Marking useful stmt: tmp_140 = switch_channel_get_variable_dup (D.40154_139, "rtp_use_video_codec_rate", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_140

Marking useful stmt: # DEBUG __nptr => tmp_140

Marking useful stmt: D.48321_331 = strtol (tmp_140, 0B, 10);

Marking useful stmt: D.40241_141->rm_rate = D.40254_143;

Marking useful stmt: D.40241_145->adv_rm_rate = D.40255_146;

Marking useful stmt: tmp_148 = switch_channel_get_variable_dup (D.40154_147, "rtp_use_video_codec_ptime", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_148

Marking useful stmt: # DEBUG __nptr => tmp_148

Marking useful stmt: D.48324_332 = strtol (tmp_148, 0B, 10);

Marking useful stmt: D.40241_149->codec_ms = D.40259_151;

Marking useful stmt: # DEBUG __nptr => port_133

Marking useful stmt: D.48327_333 = strtol (port_133, 0B, 10);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port = D.40261_153;

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].adv_sdp_port = D.40262_154;

Marking useful stmt: D.40241_158->remote_sdp_ip = r_ip_135;

Marking useful stmt: # DEBUG __nptr => r_port_137

Marking useful stmt: D.48330_334 = strtol (r_port_137, 0B, 10);

Marking useful stmt: D.40241_159->remote_sdp_port = D.40266_161;

Marking useful stmt: switch_core_media_gen_local_sdp (session_3(D), 0, 0B, 0, 0B, 1);

Marking useful stmt: switch_core_media_set_video_codec (session_3(D), 1);

Marking useful stmt: D.40267_162 = switch_core_media_activate_rtp (session_3(D));

Marking useful stmt: switch_core_session_get_recovery_crypto_key (session_3(D), 0);

Marking useful stmt: switch_core_session_get_recovery_crypto_key (session_3(D), 1);

Marking useful stmt: tmp_164 = switch_channel_get_variable_dup (D.40154_163, "rtp_last_audio_local_crypto_key", 1, -1);

Marking useful stmt: # DEBUG tmp => tmp_164

Marking useful stmt: # DEBUG __nptr => tmp_164

Marking useful stmt: idx_335 = strtol (tmp_164, 0B, 10);

Marking useful stmt: # DEBUG idx => NULL

Marking useful stmt: D.40276_169 = switch_core_perform_session_strdup (session_3(D), tmp_164, "src/switch_core_media.c", &__func__, 8690);

Marking useful stmt: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_168].local_crypto_key = D.40276_169;

Marking useful stmt: switch_core_media_add_crypto (D.40279_173, D.40280_175, 0);

Marking useful stmt: switch_core_media_add_crypto (D.40279_179, D.40273_181, 1);

Marking useful stmt: switch_channel_set_flag_value (D.40281_183, 92, 1);

Marking useful stmt: switch_rtp_add_crypto_key (D.40282_184, 0, idx.2_185, D.40272_189, D.40284_188, D.40286_191);

Marking useful stmt: switch_rtp_add_crypto_key (D.40282_192, 1, D.40288_195, D.40272_199, D.40289_198, D.40286_201);

Marking useful stmt: D.40290_202 = switch_core_media_ready (session_3(D), 0);

Marking useful stmt: switch_rtp_set_telephony_event (D.40282_203, D.40293_205);

Marking useful stmt: switch_rtp_set_telephony_recv_event (D.40282_206, D.40294_208);

Marking useful stmt: return;


Processing worklist:
processing: return;

Marking useful stmt: if (session_3(D) == 0B)

processing: if (session_3(D) == 0B)

processing: switch_rtp_set_telephony_recv_event (D.40282_206, D.40294_208);

Marking useful stmt: if (D.40290_202 != 0)

marking necessary through D.40282_206 stmt D.40282_206 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
marking necessary through D.40294_208 stmt D.40294_208 = D.40168_207->recv_te;
processing: D.40294_208 = D.40168_207->recv_te;

marking necessary through D.40168_207 stmt D.40168_207 = smh_4->mparams;
processing: D.40168_207 = smh_4->mparams;

marking necessary through smh_4 stmt smh_4 = session_3(D)->media_handle;
processing: smh_4 = session_3(D)->media_handle;

processing: D.40282_206 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;

processing: if (D.40290_202 != 0)

Marking useful stmt: if (D.40267_162 != 0)

processing: if (D.40267_162 != 0)

Marking useful stmt: if (D.40161_13 != 0)

processing: if (D.40161_13 != 0)

Marking useful stmt: if (D.40157_10 != 0)

marking necessary through D.40161_13 stmt D.40161_13 = D.40159_11 || D.40160_12;
processing: D.40161_13 = D.40159_11 || D.40160_12;

marking necessary through D.40159_11 stmt D.40159_11 = ip_6 == 0B;
marking necessary through D.40160_12 stmt D.40160_12 = port_8 == 0B;
processing: D.40160_12 = port_8 == 0B;

processing: D.40159_11 = ip_6 == 0B;

processing: if (D.40157_10 != 0)

Marking useful stmt: if (smh_4 == 0B)

processing: if (smh_4 == 0B)

processing: switch_rtp_set_telephony_event (D.40282_203, D.40293_205);

marking necessary through D.40282_203 stmt D.40282_203 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
marking necessary through D.40293_205 stmt D.40293_205 = D.40168_204->te;
processing: D.40293_205 = D.40168_204->te;

marking necessary through D.40168_204 stmt D.40168_204 = smh_4->mparams;
processing: D.40168_204 = smh_4->mparams;

processing: D.40282_203 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;

processing: D.40290_202 = switch_core_media_ready (session_3(D), 0);

processing: switch_rtp_add_crypto_key (D.40282_192, 1, D.40288_195, D.40272_199, D.40289_198, D.40286_201);

Marking useful stmt: if (D.40273_166 != 0B)

marking necessary through D.40282_192 stmt D.40282_192 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
marking necessary through D.40288_195 stmt D.40288_195 = (uint32_t) D.40287_194;
marking necessary through D.40272_199 stmt D.40272_199 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
marking necessary through D.40289_198 stmt D.40289_198 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_197].remote_raw_key;
marking necessary through D.40286_201 stmt D.40286_201 = (switch_size_t) D.40285_200;
processing: D.40286_201 = (switch_size_t) D.40285_200;

marking necessary through D.40285_200 stmt D.40285_200 = SUITES[D.40272_199].keylen;
processing: D.40285_200 = SUITES[D.40272_199].keylen;

processing: D.40289_198 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_197].remote_raw_key;

marking necessary through D.40272_197 stmt D.40272_197 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_197 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40272_199 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40288_195 = (uint32_t) D.40287_194;

marking necessary through D.40287_194 stmt D.40287_194 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_193].crypto_tag;
processing: D.40287_194 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_193].crypto_tag;

marking necessary through D.40272_193 stmt D.40272_193 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_193 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40282_192 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;

processing: if (D.40273_166 != 0B)

Marking useful stmt: if (tmp_164 != 0B)

marking necessary through D.40273_166 stmt D.40273_166 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_165].remote_crypto_key;
processing: D.40273_166 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_165].remote_crypto_key;

marking necessary through D.40272_165 stmt D.40272_165 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_165 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: if (tmp_164 != 0B)

processing: switch_rtp_add_crypto_key (D.40282_184, 0, idx.2_185, D.40272_189, D.40284_188, D.40286_191);

marking necessary through D.40282_184 stmt D.40282_184 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
marking necessary through idx.2_185 stmt idx.2_185 = (uint32_t) idx_335;
marking necessary through D.40272_189 stmt D.40272_189 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
marking necessary through D.40284_188 stmt D.40284_188 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_187].local_raw_key;
marking necessary through D.40286_191 stmt D.40286_191 = (switch_size_t) D.40285_190;
processing: D.40286_191 = (switch_size_t) D.40285_190;

marking necessary through D.40285_190 stmt D.40285_190 = SUITES[D.40272_189].keylen;
processing: D.40285_190 = SUITES[D.40272_189].keylen;

processing: D.40284_188 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_187].local_raw_key;

marking necessary through D.40272_187 stmt D.40272_187 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_187 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40272_189 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: idx.2_185 = (uint32_t) idx_335;

processing: D.40282_184 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;

processing: switch_channel_set_flag_value (D.40281_183, 92, 1);

marking necessary through D.40281_183 stmt D.40281_183 = D.40182_182->channel;
processing: D.40281_183 = D.40182_182->channel;

marking necessary through D.40182_182 stmt D.40182_182 = smh_4->session;
processing: D.40182_182 = smh_4->session;

processing: switch_core_media_add_crypto (D.40279_179, D.40273_181, 1);

marking necessary through D.40279_179 stmt D.40279_179 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_177]{lb: 0 sz: 144};
marking necessary through D.40273_181 stmt D.40273_181 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_180].remote_crypto_key;
processing: D.40273_181 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_180].remote_crypto_key;

marking necessary through D.40272_180 stmt D.40272_180 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_180 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40279_179 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_177]{lb: 0 sz: 144};

marking necessary through D.40272_177 stmt D.40272_177 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_177 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: switch_core_media_add_crypto (D.40279_173, D.40280_175, 0);

marking necessary through D.40279_173 stmt D.40279_173 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_171]{lb: 0 sz: 144};
marking necessary through D.40280_175 stmt D.40280_175 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_174].local_crypto_key;
processing: D.40280_175 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_174].local_crypto_key;

marking necessary through D.40272_174 stmt D.40272_174 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_174 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40279_173 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_171]{lb: 0 sz: 144};

marking necessary through D.40272_171 stmt D.40272_171 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_171 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_168].local_crypto_key = D.40276_169;

marking necessary through D.40272_168 stmt D.40272_168 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
processing: D.40272_168 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;

processing: D.40276_169 = switch_core_perform_session_strdup (session_3(D), tmp_164, "src/switch_core_media.c", &__func__, 8690);

processing: idx_335 = strtol (tmp_164, 0B, 10);

processing: tmp_164 = switch_channel_get_variable_dup (D.40154_163, "rtp_last_audio_local_crypto_key", 1, -1);

marking necessary through D.40154_163 stmt D.40154_163 = session_3(D)->channel;
processing: D.40154_163 = session_3(D)->channel;

processing: switch_core_session_get_recovery_crypto_key (session_3(D), 1);

processing: switch_core_session_get_recovery_crypto_key (session_3(D), 0);

processing: D.40267_162 = switch_core_media_activate_rtp (session_3(D));

processing: switch_core_media_set_video_codec (session_3(D), 1);

processing: switch_core_media_gen_local_sdp (session_3(D), 0, 0B, 0, 0B, 1);

processing: D.40241_159->remote_sdp_port = D.40266_161;

Marking useful stmt: if (D.40231_157 != 0)

marking necessary through D.40241_159 stmt D.40241_159 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40266_161 stmt D.40266_161 = (short unsigned int) D.48330_334;
processing: D.40266_161 = (short unsigned int) D.48330_334;

processing: D.40241_159 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: if (D.40231_157 != 0)

Marking useful stmt: if (D.40236_111 != 0)

marking necessary through D.40231_157 stmt D.40231_157 = D.40229_155 && D.40230_156;
processing: D.40231_157 = D.40229_155 && D.40230_156;

marking necessary through D.40229_155 stmt D.40229_155 = r_ip_135 != 0B;
marking necessary through D.40230_156 stmt D.40230_156 = r_port_137 != 0B;
processing: D.40230_156 = r_port_137 != 0B;

processing: D.40229_155 = r_ip_135 != 0B;

processing: if (D.40236_111 != 0)

processing: D.48330_334 = strtol (r_port_137, 0B, 10);

processing: D.40241_158->remote_sdp_ip = r_ip_135;

marking necessary through D.40241_158 stmt D.40241_158 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
processing: D.40241_158 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].adv_sdp_port = D.40262_154;

marking necessary through D.40262_154 stmt D.40262_154 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port;
processing: D.40262_154 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port = D.40261_153;

marking necessary through D.40261_153 stmt D.40261_153 = (short unsigned int) D.48327_333;
processing: D.40261_153 = (short unsigned int) D.48327_333;

processing: D.48327_333 = strtol (port_133, 0B, 10);

processing: D.40241_149->codec_ms = D.40259_151;

Marking useful stmt: if (tmp_148 != 0B)

marking necessary through D.40241_149 stmt D.40241_149 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40259_151 stmt D.40259_151 = (uint32_t) D.48324_332;
processing: D.40259_151 = (uint32_t) D.48324_332;

processing: D.40241_149 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: if (tmp_148 != 0B)

processing: D.48324_332 = strtol (tmp_148, 0B, 10);

processing: tmp_148 = switch_channel_get_variable_dup (D.40154_147, "rtp_use_video_codec_ptime", 1, -1);

marking necessary through D.40154_147 stmt D.40154_147 = session_3(D)->channel;
processing: D.40154_147 = session_3(D)->channel;

processing: D.40241_145->adv_rm_rate = D.40255_146;

Marking useful stmt: if (tmp_140 != 0B)

marking necessary through D.40241_145 stmt D.40241_145 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40255_146 stmt D.40255_146 = D.40241_145->rm_rate;
processing: D.40255_146 = D.40241_145->rm_rate;

processing: D.40241_145 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: if (tmp_140 != 0B)

processing: D.40241_141->rm_rate = D.40254_143;

marking necessary through D.40241_141 stmt D.40241_141 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40254_143 stmt D.40254_143 = (long unsigned int) D.48321_331;
processing: D.40254_143 = (long unsigned int) D.48321_331;

processing: D.40241_141 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: D.48321_331 = strtol (tmp_140, 0B, 10);

processing: tmp_140 = switch_channel_get_variable_dup (D.40154_139, "rtp_use_video_codec_rate", 1, -1);

marking necessary through D.40154_139 stmt D.40154_139 = session_3(D)->channel;
processing: D.40154_139 = session_3(D)->channel;

processing: switch_channel_set_flag_value (D.40154_138, 98, 1);

marking necessary through D.40154_138 stmt D.40154_138 = session_3(D)->channel;
processing: D.40154_138 = session_3(D)->channel;

processing: r_port_137 = switch_channel_get_variable_dup (D.40154_136, "remote_video_port", 1, -1);

marking necessary through D.40154_136 stmt D.40154_136 = session_3(D)->channel;
processing: D.40154_136 = session_3(D)->channel;

processing: r_ip_135 = switch_channel_get_variable_dup (D.40154_134, "remote_video_ip", 1, -1);

marking necessary through D.40154_134 stmt D.40154_134 = session_3(D)->channel;
processing: D.40154_134 = session_3(D)->channel;

processing: port_133 = switch_channel_get_variable_dup (D.40154_132, "local_video_port", 1, -1);

marking necessary through D.40154_132 stmt D.40154_132 = session_3(D)->channel;
processing: D.40154_132 = session_3(D)->channel;

processing: ip_131 = switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);

marking necessary through D.40154_130 stmt D.40154_130 = session_3(D)->channel;
processing: D.40154_130 = session_3(D)->channel;

processing: D.40241_127->rm_fmtp = D.40250_129;

marking necessary through D.40241_127 stmt D.40241_127 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
processing: D.40241_127 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: D.40250_129 = switch_channel_get_variable_dup (D.40154_128, "rtp_use_video_codec_fmtp", 1, -1);

marking necessary through D.40154_128 stmt D.40154_128 = session_3(D)->channel;
processing: D.40154_128 = session_3(D)->channel;

processing: D.40241_124->rm_encoding = D.40249_126;

marking necessary through D.40241_124 stmt D.40241_124 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
processing: D.40241_124 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: D.40249_126 = switch_channel_get_variable_dup (D.40154_125, "rtp_use_video_codec_name", 1, -1);

marking necessary through D.40154_125 stmt D.40154_125 = session_3(D)->channel;
processing: D.40154_125 = session_3(D)->channel;

processing: D.40241_121->recv_pt = D.40248_123;

Marking useful stmt: if (tmp_120 != 0B)

marking necessary through D.40241_121 stmt D.40241_121 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40248_123 stmt D.40248_123 = (unsigned char) D.48318_330;
processing: D.40248_123 = (unsigned char) D.48318_330;

processing: D.40241_121 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: if (tmp_120 != 0B)

processing: D.48318_330 = strtol (tmp_120, 0B, 10);

processing: tmp_120 = switch_channel_get_variable_dup (D.40154_119, "rtp_video_recv_pt", 1, -1);

marking necessary through D.40154_119 stmt D.40154_119 = session_3(D)->channel;
processing: D.40154_119 = session_3(D)->channel;

processing: D.40241_115->pt = D.40244_118;

Marking useful stmt: if (tmp_113 != 0B)

marking necessary through D.40241_115 stmt D.40241_115 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
marking necessary through D.40244_118 stmt D.40244_118 = D.40241_115->agreed_pt;
processing: D.40244_118 = D.40241_115->agreed_pt;

processing: D.40241_115 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;

processing: if (tmp_113 != 0B)

processing: D.40241_115->agreed_pt = D.40243_117;

marking necessary through D.40243_117 stmt D.40243_117 = (unsigned char) D.48315_329;
processing: D.40243_117 = (unsigned char) D.48315_329;

processing: D.48315_329 = strtol (tmp_113, 0B, 10);

processing: tmp_113 = switch_channel_get_variable_dup (D.40154_112, "rtp_use_video_pt", 1, -1);

marking necessary through D.40154_112 stmt D.40154_112 = session_3(D)->channel;
processing: D.40154_112 = session_3(D)->channel;

processing: D.40236_111 = switch_channel_test_flag (D.40154_110, 23);

marking necessary through D.40154_110 stmt D.40154_110 = session_3(D)->channel;
processing: D.40154_110 = session_3(D)->channel;

processing: D.40162_107->remote_sdp_port = D.40235_109;

Marking useful stmt: if (D.40231_105 != 0)

marking necessary through D.40162_107 stmt D.40162_107 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40235_109 stmt D.40235_109 = (short unsigned int) D.48312_328;
processing: D.40235_109 = (short unsigned int) D.48312_328;

processing: D.40162_107 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: if (D.40231_105 != 0)

marking necessary through D.40231_105 stmt D.40231_105 = D.40229_103 && D.40230_104;
processing: D.40231_105 = D.40229_103 && D.40230_104;

marking necessary through D.40229_103 stmt D.40229_103 = r_ip_17 != 0B;
marking necessary through D.40230_104 stmt D.40230_104 = r_port_19 != 0B;
processing: D.40230_104 = r_port_19 != 0B;

processing: D.40229_103 = r_ip_17 != 0B;

processing: D.48312_328 = strtol (r_port_19, 0B, 10);

processing: D.40162_106->remote_sdp_ip = r_ip_17;

marking necessary through D.40162_106 stmt D.40162_106 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
processing: D.40162_106 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40228_102;

Marking useful stmt: if (D.48308_327 == 0)

processing: if (D.48308_327 == 0)

marking necessary through D.48308_327 stmt D.48308_327 = PHI <1(34), 1(35), 0(36)>
processing: D.48308_327 = PHI <1(34), 1(35), 0(36)>

Marking useful stmt: if (a_ip_15 == 0B)

Marking useful stmt: if (D.48309_326 == 0)

processing: if (D.48309_326 == 0)

marking necessary through D.48309_326 stmt D.48309_326 = *a_ip_15;
processing: D.48309_326 = *a_ip_15;

processing: if (a_ip_15 == 0B)

processing: D.40228_102 = switch_core_perform_session_strdup (session_3(D), a_ip_15, "src/switch_core_media.c", &__func__, 8632);

processing: D.40168_99->rtpip = D.40224_100;

Marking useful stmt: if (D.48304_325 == 0)

marking necessary through D.40168_99 stmt D.40168_99 = smh_4->mparams;
marking necessary through D.40224_100 stmt D.40224_100 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip;
processing: D.40224_100 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip;

processing: D.40168_99 = smh_4->mparams;

processing: if (D.48304_325 == 0)

marking necessary through D.48304_325 stmt D.48304_325 = PHI <1(29), 1(30), 0(31)>
processing: D.48304_325 = PHI <1(29), 1(30), 0(31)>

Marking useful stmt: if (ip_6 == 0B)

Marking useful stmt: if (D.48305_324 == 0)

processing: if (D.48305_324 == 0)

marking necessary through D.48305_324 stmt D.48305_324 = *ip_6;
processing: D.48305_324 = *ip_6;

processing: if (ip_6 == 0B)

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip = D.40223_98;

processing: D.40223_98 = switch_core_perform_session_strdup (session_3(D), ip_6, "src/switch_core_media.c", &__func__, 8627);

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_port = D.40219_96;

marking necessary through D.40219_96 stmt D.40219_96 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port;
processing: D.40219_96 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port;

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port = D.40218_95;

marking necessary through D.40218_95 stmt D.40218_95 = (short unsigned int) D.48301_323;
processing: D.40218_95 = (short unsigned int) D.48301_323;

processing: D.48301_323 = strtol (port_8, 0B, 10);

processing: MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40216_93;

marking necessary through D.40216_93 stmt D.40216_93 = D.40168_92->extrtpip;
processing: D.40216_93 = D.40168_92->extrtpip;

marking necessary through D.40168_92 stmt D.40168_92 = smh_4->mparams;
processing: D.40168_92 = smh_4->mparams;

processing: D.40168_92->extrtpip = ip_6;

processing: switch_core_media_set_codec (session_3(D), 1, D.40215_91);

marking necessary through D.40215_91 stmt D.40215_91 = D.40168_90->codec_flags;
processing: D.40215_91 = D.40168_90->codec_flags;

marking necessary through D.40168_90 stmt D.40168_90 = smh_4->mparams;
processing: D.40168_90 = smh_4->mparams;

processing: D.40162_87->recv_pt = D.40214_89;

Marking useful stmt: if (tmp_86 != 0B)

marking necessary through D.40162_87 stmt D.40162_87 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40214_89 stmt D.40214_89 = (unsigned char) D.48298_322;
processing: D.40214_89 = (unsigned char) D.48298_322;

processing: D.40162_87 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: if (tmp_86 != 0B)

processing: D.48298_322 = strtol (tmp_86, 0B, 10);

processing: tmp_86 = switch_channel_get_variable_dup (D.40154_85, "rtp_audio_recv_pt", 1, -1);

marking necessary through D.40154_85 stmt D.40154_85 = session_3(D)->channel;
processing: D.40154_85 = session_3(D)->channel;

processing: D.40162_81->pt = D.40210_84;

Marking useful stmt: if (tmp_79 != 0B)

marking necessary through D.40162_81 stmt D.40162_81 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40210_84 stmt D.40210_84 = D.40162_81->agreed_pt;
processing: D.40210_84 = D.40162_81->agreed_pt;

processing: D.40162_81 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: if (tmp_79 != 0B)

processing: D.40162_81->agreed_pt = D.40209_83;

marking necessary through D.40209_83 stmt D.40209_83 = (unsigned char) D.48295_321;
processing: D.40209_83 = (unsigned char) D.48295_321;

processing: D.48295_321 = strtol (tmp_79, 0B, 10);

processing: tmp_79 = switch_channel_get_variable_dup (D.40154_78, "rtp_use_pt", 1, -1);

marking necessary through D.40154_78 stmt D.40154_78 = session_3(D)->channel;
processing: D.40154_78 = session_3(D)->channel;

processing: D.40162_75->codec_ms = D.40205_77;

Marking useful stmt: if (tmp_74 != 0B)

marking necessary through D.40162_75 stmt D.40162_75 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40205_77 stmt D.40205_77 = (uint32_t) D.48292_320;
processing: D.40205_77 = (uint32_t) D.48292_320;

processing: D.40162_75 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: if (tmp_74 != 0B)

processing: D.48292_320 = strtol (tmp_74, 0B, 10);

processing: tmp_74 = switch_channel_get_variable_dup (D.40154_73, "rtp_use_codec_ptime", 1, -1);

marking necessary through D.40154_73 stmt D.40154_73 = session_3(D)->channel;
processing: D.40154_73 = session_3(D)->channel;

processing: D.40162_71->adv_rm_rate = D.40201_72;

Marking useful stmt: if (tmp_66 != 0B)

marking necessary through D.40162_71 stmt D.40162_71 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40201_72 stmt D.40201_72 = D.40162_71->rm_rate;
processing: D.40201_72 = D.40162_71->rm_rate;

processing: D.40162_71 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: if (tmp_66 != 0B)

processing: D.40162_67->rm_rate = D.40200_69;

marking necessary through D.40162_67 stmt D.40162_67 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40200_69 stmt D.40200_69 = (long unsigned int) D.48289_319;
processing: D.40200_69 = (long unsigned int) D.48289_319;

processing: D.40162_67 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: D.48289_319 = strtol (tmp_66, 0B, 10);

processing: tmp_66 = switch_channel_get_variable_dup (D.40154_65, "rtp_use_codec_rate", 1, -1);

marking necessary through D.40154_65 stmt D.40154_65 = session_3(D)->channel;
processing: D.40154_65 = session_3(D)->channel;

processing: D.40168_62->recv_te = D.40196_64;

Marking useful stmt: if (tmp_61 != 0B)

marking necessary through D.40168_62 stmt D.40168_62 = smh_4->mparams;
marking necessary through D.40196_64 stmt D.40196_64 = (unsigned char) D.48286_318;
processing: D.40196_64 = (unsigned char) D.48286_318;

processing: D.40168_62 = smh_4->mparams;

processing: if (tmp_61 != 0B)

processing: D.48286_318 = strtol (tmp_61, 0B, 10);

processing: tmp_61 = switch_channel_get_variable_dup (D.40154_60, "rtp_2833_recv_payload", 1, -1);

marking necessary through D.40154_60 stmt D.40154_60 = session_3(D)->channel;
processing: D.40154_60 = session_3(D)->channel;

processing: D.40168_57->te = D.40192_59;

Marking useful stmt: if (tmp_56 != 0B)

marking necessary through D.40168_57 stmt D.40168_57 = smh_4->mparams;
marking necessary through D.40192_59 stmt D.40192_59 = (unsigned char) D.48283_317;
processing: D.40192_59 = (unsigned char) D.48283_317;

processing: D.40168_57 = smh_4->mparams;

processing: if (tmp_56 != 0B)

processing: D.48283_317 = strtol (tmp_56, 0B, 10);

processing: tmp_56 = switch_channel_get_variable_dup (D.40154_55, "rtp_2833_send_payload", 1, -1);

marking necessary through D.40154_55 stmt D.40154_55 = session_3(D)->channel;
processing: D.40154_55 = session_3(D)->channel;

processing: D.40168_50->num_codecs = D.40188_54;

Marking useful stmt: if (tmp_44 != 0B)

marking necessary through D.40168_50 stmt D.40168_50 = smh_4->mparams;
processing: D.40168_50 = smh_4->mparams;

processing: if (tmp_44 != 0B)

processing: D.40188_54 = switch_loadable_module_get_codecs_sorted (D.40186_51, 50, D.40183_52, D.40187_53);

marking necessary through D.40186_51 stmt D.40186_51 = &smh_4->codecs;
marking necessary through D.40183_52 stmt D.40183_52 = &smh_4->codec_order;
marking necessary through D.40187_53 stmt D.40187_53 = smh_4->codec_order_last;
processing: D.40187_53 = smh_4->codec_order_last;

processing: D.40183_52 = &smh_4->codec_order;

processing: D.40186_51 = &smh_4->codecs;

processing: smh_4->codec_order_last = D.40185_49;

marking necessary through D.40185_49 stmt D.40185_49 = (int) D.40184_48;
processing: D.40185_49 = (int) D.40184_48;

processing: D.40184_48 = switch_separate_string (tmp_codec_string_46, 44, D.40183_47, 50);

marking necessary through D.40183_47 stmt D.40183_47 = &smh_4->codec_order;
processing: D.40183_47 = &smh_4->codec_order;

processing: tmp_codec_string_46 = switch_core_perform_session_strdup (D.40182_45, tmp_44, "src/switch_core_media.c", &__func__, 8591);

marking necessary through D.40182_45 stmt D.40182_45 = smh_4->session;
processing: D.40182_45 = smh_4->session;

processing: tmp_44 = switch_channel_get_variable_dup (D.40154_43, "rtp_use_codec_string", 1, -1);

marking necessary through D.40154_43 stmt D.40154_43 = session_3(D)->channel;
processing: D.40154_43 = session_3(D)->channel;

processing: switch_channel_set_variable_printf (D.40154_38, "rtp_use_codec_string", "%s%s%s", tmp_35, iftmp.0_1, vtmp_2);

Marking useful stmt: if (tmp_35 != 0B)

marking necessary through D.40154_38 stmt D.40154_38 = session_3(D)->channel;
marking necessary through iftmp.0_1 stmt iftmp.0_1 = PHI <","(10), ""(11)>
marking necessary through vtmp_2 stmt vtmp_2 = PHI <vtmp_37(13), ""(12)>
processing: vtmp_2 = PHI <vtmp_37(13), ""(12)>

Marking useful stmt: if (vtmp_37 != 0B)

processing: if (vtmp_37 != 0B)

processing: iftmp.0_1 = PHI <","(10), ""(11)>

Marking useful stmt: if (vtmp_37 != 0B)

processing: if (vtmp_37 != 0B)

processing: D.40154_38 = session_3(D)->channel;

processing: if (tmp_35 != 0B)

processing: vtmp_37 = switch_channel_get_variable_dup (D.40154_36, "rtp_last_video_codec_string", 1, -1);

marking necessary through D.40154_36 stmt D.40154_36 = session_3(D)->channel;
processing: D.40154_36 = session_3(D)->channel;

processing: tmp_35 = switch_channel_get_variable_dup (D.40154_34, "rtp_last_audio_codec_string", 1, -1);

marking necessary through D.40154_34 stmt D.40154_34 = session_3(D)->channel;
processing: D.40154_34 = session_3(D)->channel;

processing: D.40168_32->remote_sdp_str = D.40169_33;

Marking useful stmt: if (tmp_31 != 0B)

marking necessary through D.40168_32 stmt D.40168_32 = smh_4->mparams;
processing: D.40168_32 = smh_4->mparams;

processing: if (tmp_31 != 0B)

processing: D.40169_33 = switch_core_perform_session_strdup (session_3(D), tmp_31, "src/switch_core_media.c", &__func__, 8581);

processing: tmp_31 = switch_channel_get_variable_dup (D.40154_30, "switch_r_sdp", 1, -1);

marking necessary through D.40154_30 stmt D.40154_30 = session_3(D)->channel;
processing: D.40154_30 = session_3(D)->channel;

processing: D.40162_27->rm_fmtp = D.40165_29;

marking necessary through D.40162_27 stmt D.40162_27 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
processing: D.40162_27 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: D.40165_29 = switch_channel_get_variable_dup (D.40154_28, "rtp_use_codec_fmtp", 1, -1);

marking necessary through D.40154_28 stmt D.40154_28 = session_3(D)->channel;
processing: D.40154_28 = session_3(D)->channel;

processing: D.40162_23->iananame = D.40164_26;

marking necessary through D.40162_23 stmt D.40162_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
marking necessary through D.40164_26 stmt D.40164_26 = D.40162_23->rm_encoding;
processing: D.40164_26 = D.40162_23->rm_encoding;

processing: D.40162_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;

processing: D.40162_23->rm_encoding = D.40163_25;

processing: D.40163_25 = switch_channel_get_variable_dup (D.40154_24, "rtp_use_codec_name", 1, -1);

marking necessary through D.40154_24 stmt D.40154_24 = session_3(D)->channel;
processing: D.40154_24 = session_3(D)->channel;

processing: r_port_19 = switch_channel_get_variable_dup (D.40154_18, "remote_media_port", 1, -1);

marking necessary through D.40154_18 stmt D.40154_18 = session_3(D)->channel;
processing: D.40154_18 = session_3(D)->channel;

processing: r_ip_17 = switch_channel_get_variable_dup (D.40154_16, "remote_media_ip", 1, -1);

marking necessary through D.40154_16 stmt D.40154_16 = session_3(D)->channel;
processing: D.40154_16 = session_3(D)->channel;

processing: a_ip_15 = switch_channel_get_variable_dup (D.40154_14, "advertised_media_ip", 1, -1);

marking necessary through D.40154_14 stmt D.40154_14 = session_3(D)->channel;
processing: D.40154_14 = session_3(D)->channel;

processing: D.40157_10 = switch_channel_test_flag (D.40154_9, 15);

marking necessary through D.40154_9 stmt D.40154_9 = session_3(D)->channel;
processing: D.40154_9 = session_3(D)->channel;

processing: port_8 = switch_channel_get_variable_dup (D.40154_7, "local_media_port", 1, -1);

marking necessary through D.40154_7 stmt D.40154_7 = session_3(D)->channel;
processing: D.40154_7 = session_3(D)->channel;

processing: ip_6 = switch_channel_get_variable_dup (D.40154_5, "local_media_ip", 1, -1);

marking necessary through D.40154_5 stmt D.40154_5 = session_3(D)->channel;
processing: D.40154_5 = session_3(D)->channel;

processing: __assert_fail ("session", "src/switch_core_media.c", 8557, &__PRETTY_FUNCTION__);


Eliminating unnecessary statements:
Deleting LHS of call: ip_131 = switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);

Deleting : vtmp_41 = vtmp_37;

Removed 1 of 321 statements (0%)
Removed 0 of 22 PHI nodes (0%)
Scope blocks after cleanups:

{ Scope block #0 
  const char * ip;
  const char * port;
  const char * a_ip;
  const char * r_ip;
  const char * r_port;
  const char * tmp;
  struct switch_rtp_engine_t * a_engine; (unused)
  struct switch_rtp_engine_t * v_engine; (unused)
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_recover_session";
  static const char __func__[34] = "switch_core_media_recover_session";

  { Scope block #488 src/switch_core_media.c:8672 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #489 Originating from :#0 

    }

  }

  { Scope block #490 src/switch_core_media.c:8668 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #491 Originating from :#0 

    }

  }

  { Scope block #492 src/switch_core_media.c:8665 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #493 Originating from :#0 

    }

  }

  { Scope block #494 src/switch_core_media.c:8660 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #495 Originating from :#0 

    }

  }

  { Scope block #496 src/switch_core_media.c:8646 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #497 Originating from :#0 

    }

  }

  { Scope block #498 src/switch_core_media.c:8642 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #499 Originating from :#0 

    }

  }

  { Scope block #500 src/switch_core_media.c:8637 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #501 Originating from :#0 

    }

  }

  { Scope block #502 src/switch_core_media.c:8631 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #503 Originating from :#0 

    }

  }

  { Scope block #504 src/switch_core_media.c:8626 Originating from :  static int _zstr (const char *); 
    const char * s; (unused)

    { Scope block #505 Originating from :#0 

    }

  }

  { Scope block #506 src/switch_core_media.c:8624 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #507 Originating from :#0 

    }

  }

  { Scope block #508 src/switch_core_media.c:8618 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #509 Originating from :#0 

    }

  }

  { Scope block #510 src/switch_core_media.c:8614 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #511 Originating from :#0 

    }

  }

  { Scope block #512 src/switch_core_media.c:8610 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #513 Originating from :#0 

    }

  }

  { Scope block #514 src/switch_core_media.c:8605 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #515 Originating from :#0 

    }

  }

  { Scope block #516 src/switch_core_media.c:8601 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #517 Originating from :#0 

    }

  }

  { Scope block #518 src/switch_core_media.c:8597 Originating from :  extern int atoi (const char *); 
    const char * __nptr; (unused)

    { Scope block #519 Originating from :#0 

    }

  }

  { Scope block #520 
    const char * vtmp;

  }

  { Scope block #521 
    char * tmp_codec_string;

  }

  { Scope block #522 
    int idx;

    { Scope block #523 src/switch_core_media.c:8688 Originating from :  extern int atoi (const char *); 
      const char * __nptr; (unused)

      { Scope block #524 Originating from :#0 

      }

    }

  }

}
switch_core_media_recover_session (struct switch_core_session_t * session)
{
  int D.48330;
  int D.48327;
  int D.48324;
  int D.48321;
  int D.48318;
  int D.48315;
  int D.48312;
  const char D.48309;
  int D.48308;
  const char D.48305;
  int D.48304;
  int D.48301;
  int D.48298;
  int D.48295;
  int D.48292;
  int D.48289;
  int D.48286;
  int D.48283;
  int idx;
  char * tmp_codec_string;
  const char * vtmp;
  static const char __func__[34] = "switch_core_media_recover_session";
  static const char __PRETTY_FUNCTION__[34] = "switch_core_media_recover_session";
  struct switch_media_handle_t * smh;
  const char * tmp;
  const char * r_port;
  const char * r_ip;
  const char * a_ip;
  const char * port;
  const char * ip;
  switch_payload_t D.40294;
  switch_payload_t D.40293;
  uint8_t D.40290;
  unsigned char[64] * D.40289;
  uint32_t D.40288;
  int D.40287;
  switch_size_t D.40286;
  int D.40285;
  unsigned char[64] * D.40284;
  uint32_t idx.2;
  struct switch_rtp_t * D.40282;
  struct switch_channel_t * D.40281;
  char * D.40280;
  struct switch_secure_settings_t * D.40279;
  char * D.40276;
  char * D.40273;
  switch_rtp_crypto_key_type_t D.40272;
  switch_status_t D.40267;
  short unsigned int D.40266;
  switch_port_t D.40262;
  short unsigned int D.40261;
  uint32_t D.40259;
  long unsigned int D.40255;
  long unsigned int D.40254;
  const char * D.40250;
  const char * D.40249;
  unsigned char D.40248;
  switch_payload_t D.40244;
  unsigned char D.40243;
  struct payload_map_t * D.40241;
  uint32_t D.40236;
  short unsigned int D.40235;
  _Bool D.40231;
  _Bool D.40230;
  _Bool D.40229;
  char * D.40228;
  char * D.40224;
  char * D.40223;
  switch_port_t D.40219;
  short unsigned int D.40218;
  char * D.40216;
  uint32_t D.40215;
  unsigned char D.40214;
  switch_payload_t D.40210;
  unsigned char D.40209;
  uint32_t D.40205;
  long unsigned int D.40201;
  long unsigned int D.40200;
  unsigned char D.40196;
  unsigned char D.40192;
  int D.40188;
  int D.40187;
  const struct switch_codec_implementation_t *[50] * D.40186;
  int D.40185;
  unsigned int D.40184;
  char *[50] * D.40183;
  struct switch_core_session_t * D.40182;
  char * iftmp.0;
  char * D.40169;
  struct switch_core_media_params_t * D.40168;
  const char * D.40165;
  char * D.40164;
  const char * D.40163;
  struct payload_map_t * D.40162;
  _Bool D.40161;
  _Bool D.40160;
  _Bool D.40159;
  uint32_t D.40157;
  struct switch_channel_t * D.40154;

<bb 2>:
  if (session_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  __assert_fail ("session", "src/switch_core_media.c", 8557, &__PRETTY_FUNCTION__);

<bb 4>:
  smh_4 = session_3(D)->media_handle;
  # DEBUG smh => smh_4
  if (smh_4 == 0B)
    goto <bb 58>;
  else
    goto <bb 5>;

<bb 5>:
  D.40154_5 = session_3(D)->channel;
  ip_6 = switch_channel_get_variable_dup (D.40154_5, "local_media_ip", 1, -1);
  # DEBUG ip => ip_6
  D.40154_7 = session_3(D)->channel;
  port_8 = switch_channel_get_variable_dup (D.40154_7, "local_media_port", 1, -1);
  # DEBUG port => port_8
  D.40154_9 = session_3(D)->channel;
  D.40157_10 = switch_channel_test_flag (D.40154_9, 15);
  if (D.40157_10 != 0)
    goto <bb 58>;
  else
    goto <bb 6>;

<bb 6>:
  D.40159_11 = ip_6 == 0B;
  D.40160_12 = port_8 == 0B;
  D.40161_13 = D.40159_11 || D.40160_12;
  if (D.40161_13 != 0)
    goto <bb 58>;
  else
    goto <bb 7>;

<bb 7>:
  D.40154_14 = session_3(D)->channel;
  a_ip_15 = switch_channel_get_variable_dup (D.40154_14, "advertised_media_ip", 1, -1);
  # DEBUG a_ip => a_ip_15
  D.40154_16 = session_3(D)->channel;
  r_ip_17 = switch_channel_get_variable_dup (D.40154_16, "remote_media_ip", 1, -1);
  # DEBUG r_ip => r_ip_17
  D.40154_18 = session_3(D)->channel;
  r_port_19 = switch_channel_get_variable_dup (D.40154_18, "remote_media_port", 1, -1);
  # DEBUG r_port => r_port_19
  # DEBUG D#44 => &smh_4->engines
  # DEBUG a_engine => D#44
  # DEBUG D#43 => &smh_4->engines[1]
  # DEBUG v_engine => D#43
  D.40162_23 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40154_24 = session_3(D)->channel;
  D.40163_25 = switch_channel_get_variable_dup (D.40154_24, "rtp_use_codec_name", 1, -1);
  D.40162_23->rm_encoding = D.40163_25;
  D.40164_26 = D.40162_23->rm_encoding;
  D.40162_23->iananame = D.40164_26;
  D.40162_27 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40154_28 = session_3(D)->channel;
  D.40165_29 = switch_channel_get_variable_dup (D.40154_28, "rtp_use_codec_fmtp", 1, -1);
  D.40162_27->rm_fmtp = D.40165_29;
  D.40154_30 = session_3(D)->channel;
  tmp_31 = switch_channel_get_variable_dup (D.40154_30, "switch_r_sdp", 1, -1);
  # DEBUG tmp => tmp_31
  if (tmp_31 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

<bb 8>:
  D.40168_32 = smh_4->mparams;
  D.40169_33 = switch_core_perform_session_strdup (session_3(D), tmp_31, "src/switch_core_media.c", &__func__, 8581);
  D.40168_32->remote_sdp_str = D.40169_33;

<bb 9>:
  D.40154_34 = session_3(D)->channel;
  tmp_35 = switch_channel_get_variable_dup (D.40154_34, "rtp_last_audio_codec_string", 1, -1);
  # DEBUG tmp => tmp_35
  if (tmp_35 != 0B)
    goto <bb 10>;
  else
    goto <bb 15>;

<bb 10>:
  D.40154_36 = session_3(D)->channel;
  vtmp_37 = switch_channel_get_variable_dup (D.40154_36, "rtp_last_video_codec_string", 1, -1);
  # DEBUG vtmp => vtmp_37
  D.40154_38 = session_3(D)->channel;
  if (vtmp_37 != 0B)
    goto <bb 12>;
  else
    goto <bb 11>;

<bb 11>:

<bb 12>:
  # iftmp.0_1 = PHI <","(10), ""(11)>
  if (vtmp_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

<bb 13>:

<bb 14>:
  # vtmp_2 = PHI <vtmp_37(13), ""(12)>
  switch_channel_set_variable_printf (D.40154_38, "rtp_use_codec_string", "%s%s%s", tmp_35, iftmp.0_1, vtmp_2);

<bb 15>:
  D.40154_43 = session_3(D)->channel;
  tmp_44 = switch_channel_get_variable_dup (D.40154_43, "rtp_use_codec_string", 1, -1);
  # DEBUG tmp => tmp_44
  if (tmp_44 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

<bb 16>:
  D.40182_45 = smh_4->session;
  tmp_codec_string_46 = switch_core_perform_session_strdup (D.40182_45, tmp_44, "src/switch_core_media.c", &__func__, 8591);
  # DEBUG tmp_codec_string => tmp_codec_string_46
  D.40183_47 = &smh_4->codec_order;
  D.40184_48 = switch_separate_string (tmp_codec_string_46, 44, D.40183_47, 50);
  D.40185_49 = (int) D.40184_48;
  smh_4->codec_order_last = D.40185_49;
  D.40168_50 = smh_4->mparams;
  D.40186_51 = &smh_4->codecs;
  D.40183_52 = &smh_4->codec_order;
  D.40187_53 = smh_4->codec_order_last;
  D.40188_54 = switch_loadable_module_get_codecs_sorted (D.40186_51, 50, D.40183_52, D.40187_53);
  D.40168_50->num_codecs = D.40188_54;

<bb 17>:
  D.40154_55 = session_3(D)->channel;
  tmp_56 = switch_channel_get_variable_dup (D.40154_55, "rtp_2833_send_payload", 1, -1);
  # DEBUG tmp => tmp_56
  if (tmp_56 != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

<bb 18>:
  D.40168_57 = smh_4->mparams;
  # DEBUG __nptr => tmp_56
  D.48283_317 = strtol (tmp_56, 0B, 10);
  D.40192_59 = (unsigned char) D.48283_317;
  D.40168_57->te = D.40192_59;

<bb 19>:
  D.40154_60 = session_3(D)->channel;
  tmp_61 = switch_channel_get_variable_dup (D.40154_60, "rtp_2833_recv_payload", 1, -1);
  # DEBUG tmp => tmp_61
  if (tmp_61 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;

<bb 20>:
  D.40168_62 = smh_4->mparams;
  # DEBUG __nptr => tmp_61
  D.48286_318 = strtol (tmp_61, 0B, 10);
  D.40196_64 = (unsigned char) D.48286_318;
  D.40168_62->recv_te = D.40196_64;

<bb 21>:
  D.40154_65 = session_3(D)->channel;
  tmp_66 = switch_channel_get_variable_dup (D.40154_65, "rtp_use_codec_rate", 1, -1);
  # DEBUG tmp => tmp_66
  if (tmp_66 != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;

<bb 22>:
  D.40162_67 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_66
  D.48289_319 = strtol (tmp_66, 0B, 10);
  D.40200_69 = (long unsigned int) D.48289_319;
  D.40162_67->rm_rate = D.40200_69;
  D.40162_71 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40201_72 = D.40162_71->rm_rate;
  D.40162_71->adv_rm_rate = D.40201_72;

<bb 23>:
  D.40154_73 = session_3(D)->channel;
  tmp_74 = switch_channel_get_variable_dup (D.40154_73, "rtp_use_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_74
  if (tmp_74 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

<bb 24>:
  D.40162_75 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_74
  D.48292_320 = strtol (tmp_74, 0B, 10);
  D.40205_77 = (uint32_t) D.48292_320;
  D.40162_75->codec_ms = D.40205_77;

<bb 25>:
  D.40154_78 = session_3(D)->channel;
  tmp_79 = switch_channel_get_variable_dup (D.40154_78, "rtp_use_pt", 1, -1);
  # DEBUG tmp => tmp_79
  if (tmp_79 != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;

<bb 26>:
  D.40162_81 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_79
  D.48295_321 = strtol (tmp_79, 0B, 10);
  D.40209_83 = (unsigned char) D.48295_321;
  D.40162_81->agreed_pt = D.40209_83;
  D.40210_84 = D.40162_81->agreed_pt;
  D.40162_81->pt = D.40210_84;

<bb 27>:
  D.40154_85 = session_3(D)->channel;
  tmp_86 = switch_channel_get_variable_dup (D.40154_85, "rtp_audio_recv_pt", 1, -1);
  # DEBUG tmp => tmp_86
  if (tmp_86 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;

<bb 28>:
  D.40162_87 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => tmp_86
  D.48298_322 = strtol (tmp_86, 0B, 10);
  D.40214_89 = (unsigned char) D.48298_322;
  D.40162_87->recv_pt = D.40214_89;

<bb 29>:
  D.40168_90 = smh_4->mparams;
  D.40215_91 = D.40168_90->codec_flags;
  switch_core_media_set_codec (session_3(D), 1, D.40215_91);
  D.40168_92 = smh_4->mparams;
  D.40168_92->extrtpip = ip_6;
  D.40216_93 = D.40168_92->extrtpip;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40216_93;
  # DEBUG __nptr => port_8
  D.48301_323 = strtol (port_8, 0B, 10);
  D.40218_95 = (short unsigned int) D.48301_323;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port = D.40218_95;
  D.40219_96 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_port;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_port = D.40219_96;
  # DEBUG s => ip_6
  if (ip_6 == 0B)
    goto <bb 32>;
  else
    goto <bb 30>;

<bb 30>:
  D.48305_324 = *ip_6;
  if (D.48305_324 == 0)
    goto <bb 32>;
  else
    goto <bb 31>;

<bb 31>:

<bb 32>:
  # D.48304_325 = PHI <1(29), 1(30), 0(31)>
  if (D.48304_325 == 0)
    goto <bb 33>;
  else
    goto <bb 34>;

<bb 33>:
  D.40223_98 = switch_core_perform_session_strdup (session_3(D), ip_6, "src/switch_core_media.c", &__func__, 8627);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip = D.40223_98;
  D.40168_99 = smh_4->mparams;
  D.40224_100 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].local_sdp_ip;
  D.40168_99->rtpip = D.40224_100;

<bb 34>:
  # DEBUG s => a_ip_15
  if (a_ip_15 == 0B)
    goto <bb 37>;
  else
    goto <bb 35>;

<bb 35>:
  D.48309_326 = *a_ip_15;
  if (D.48309_326 == 0)
    goto <bb 37>;
  else
    goto <bb 36>;

<bb 36>:

<bb 37>:
  # D.48308_327 = PHI <1(34), 1(35), 0(36)>
  if (D.48308_327 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;

<bb 38>:
  D.40228_102 = switch_core_perform_session_strdup (session_3(D), a_ip_15, "src/switch_core_media.c", &__func__, 8632);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].adv_sdp_ip = D.40228_102;

<bb 39>:
  D.40229_103 = r_ip_17 != 0B;
  D.40230_104 = r_port_19 != 0B;
  D.40231_105 = D.40229_103 && D.40230_104;
  if (D.40231_105 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;

<bb 40>:
  D.40162_106 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  D.40162_106->remote_sdp_ip = r_ip_17;
  D.40162_107 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].cur_payload_map;
  # DEBUG __nptr => r_port_19
  D.48312_328 = strtol (r_port_19, 0B, 10);
  D.40235_109 = (short unsigned int) D.48312_328;
  D.40162_107->remote_sdp_port = D.40235_109;

<bb 41>:
  D.40154_110 = session_3(D)->channel;
  D.40236_111 = switch_channel_test_flag (D.40154_110, 23);
  if (D.40236_111 != 0)
    goto <bb 42>;
  else
    goto <bb 52>;

<bb 42>:
  D.40154_112 = session_3(D)->channel;
  tmp_113 = switch_channel_get_variable_dup (D.40154_112, "rtp_use_video_pt", 1, -1);
  # DEBUG tmp => tmp_113
  if (tmp_113 != 0B)
    goto <bb 43>;
  else
    goto <bb 44>;

<bb 43>:
  D.40241_115 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_113
  D.48315_329 = strtol (tmp_113, 0B, 10);
  D.40243_117 = (unsigned char) D.48315_329;
  D.40241_115->agreed_pt = D.40243_117;
  D.40244_118 = D.40241_115->agreed_pt;
  D.40241_115->pt = D.40244_118;

<bb 44>:
  D.40154_119 = session_3(D)->channel;
  tmp_120 = switch_channel_get_variable_dup (D.40154_119, "rtp_video_recv_pt", 1, -1);
  # DEBUG tmp => tmp_120
  if (tmp_120 != 0B)
    goto <bb 45>;
  else
    goto <bb 46>;

<bb 45>:
  D.40241_121 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_120
  D.48318_330 = strtol (tmp_120, 0B, 10);
  D.40248_123 = (unsigned char) D.48318_330;
  D.40241_121->recv_pt = D.40248_123;

<bb 46>:
  D.40241_124 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40154_125 = session_3(D)->channel;
  D.40249_126 = switch_channel_get_variable_dup (D.40154_125, "rtp_use_video_codec_name", 1, -1);
  D.40241_124->rm_encoding = D.40249_126;
  D.40241_127 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40154_128 = session_3(D)->channel;
  D.40250_129 = switch_channel_get_variable_dup (D.40154_128, "rtp_use_video_codec_fmtp", 1, -1);
  D.40241_127->rm_fmtp = D.40250_129;
  D.40154_130 = session_3(D)->channel;
  switch_channel_get_variable_dup (D.40154_130, "local_video_ip", 1, -1);
  # DEBUG ip => NULL
  D.40154_132 = session_3(D)->channel;
  port_133 = switch_channel_get_variable_dup (D.40154_132, "local_video_port", 1, -1);
  # DEBUG port => port_133
  D.40154_134 = session_3(D)->channel;
  r_ip_135 = switch_channel_get_variable_dup (D.40154_134, "remote_video_ip", 1, -1);
  # DEBUG r_ip => r_ip_135
  D.40154_136 = session_3(D)->channel;
  r_port_137 = switch_channel_get_variable_dup (D.40154_136, "remote_video_port", 1, -1);
  # DEBUG r_port => r_port_137
  D.40154_138 = session_3(D)->channel;
  switch_channel_set_flag_value (D.40154_138, 98, 1);
  D.40154_139 = session_3(D)->channel;
  tmp_140 = switch_channel_get_variable_dup (D.40154_139, "rtp_use_video_codec_rate", 1, -1);
  # DEBUG tmp => tmp_140
  if (tmp_140 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;

<bb 47>:
  D.40241_141 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_140
  D.48321_331 = strtol (tmp_140, 0B, 10);
  D.40254_143 = (long unsigned int) D.48321_331;
  D.40241_141->rm_rate = D.40254_143;
  D.40241_145 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40255_146 = D.40241_145->rm_rate;
  D.40241_145->adv_rm_rate = D.40255_146;

<bb 48>:
  D.40154_147 = session_3(D)->channel;
  tmp_148 = switch_channel_get_variable_dup (D.40154_147, "rtp_use_video_codec_ptime", 1, -1);
  # DEBUG tmp => tmp_148
  if (tmp_148 != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

<bb 49>:
  D.40241_149 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => tmp_148
  D.48324_332 = strtol (tmp_148, 0B, 10);
  D.40259_151 = (uint32_t) D.48324_332;
  D.40241_149->codec_ms = D.40259_151;

<bb 50>:
  # DEBUG __nptr => port_133
  D.48327_333 = strtol (port_133, 0B, 10);
  D.40261_153 = (short unsigned int) D.48327_333;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port = D.40261_153;
  D.40262_154 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].local_sdp_port;
  MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].adv_sdp_port = D.40262_154;
  D.40229_155 = r_ip_135 != 0B;
  D.40230_156 = r_port_137 != 0B;
  D.40231_157 = D.40229_155 && D.40230_156;
  if (D.40231_157 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

<bb 51>:
  D.40241_158 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  D.40241_158->remote_sdp_ip = r_ip_135;
  D.40241_159 = MEM[(struct switch_rtp_engine_t *)smh_4 + 11496B].cur_payload_map;
  # DEBUG __nptr => r_port_137
  D.48330_334 = strtol (r_port_137, 0B, 10);
  D.40266_161 = (short unsigned int) D.48330_334;
  D.40241_159->remote_sdp_port = D.40266_161;

<bb 52>:
  switch_core_media_gen_local_sdp (session_3(D), 0, 0B, 0, 0B, 1);
  switch_core_media_set_video_codec (session_3(D), 1);
  D.40267_162 = switch_core_media_activate_rtp (session_3(D));
  if (D.40267_162 != 0)
    goto <bb 58>;
  else
    goto <bb 53>;

<bb 53>:
  switch_core_session_get_recovery_crypto_key (session_3(D), 0);
  switch_core_session_get_recovery_crypto_key (session_3(D), 1);
  D.40154_163 = session_3(D)->channel;
  tmp_164 = switch_channel_get_variable_dup (D.40154_163, "rtp_last_audio_local_crypto_key", 1, -1);
  # DEBUG tmp => tmp_164
  if (tmp_164 != 0B)
    goto <bb 54>;
  else
    goto <bb 56>;

<bb 54>:
  D.40272_165 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40273_166 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_165].remote_crypto_key;
  if (D.40273_166 != 0B)
    goto <bb 55>;
  else
    goto <bb 56>;

<bb 55>:
  # DEBUG __nptr => tmp_164
  idx_335 = strtol (tmp_164, 0B, 10);
  # DEBUG idx => NULL
  D.40272_168 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40276_169 = switch_core_perform_session_strdup (session_3(D), tmp_164, "src/switch_core_media.c", &__func__, 8690);
  MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_168].local_crypto_key = D.40276_169;
  D.40272_171 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40279_173 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_171]{lb: 0 sz: 144};
  D.40272_174 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40280_175 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_174].local_crypto_key;
  switch_core_media_add_crypto (D.40279_173, D.40280_175, 0);
  D.40272_177 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40279_179 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_177]{lb: 0 sz: 144};
  D.40272_180 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40273_181 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_180].remote_crypto_key;
  switch_core_media_add_crypto (D.40279_179, D.40273_181, 1);
  D.40182_182 = smh_4->session;
  D.40281_183 = D.40182_182->channel;
  switch_channel_set_flag_value (D.40281_183, 92, 1);
  D.40282_184 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  idx.2_185 = (uint32_t) idx_335;
  D.40272_187 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40284_188 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_187].local_raw_key;
  D.40272_189 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40285_190 = SUITES[D.40272_189].keylen;
  D.40286_191 = (switch_size_t) D.40285_190;
  switch_rtp_add_crypto_key (D.40282_184, 0, idx.2_185, D.40272_189, D.40284_188, D.40286_191);
  D.40282_192 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40272_193 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40287_194 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_193].crypto_tag;
  D.40288_195 = (uint32_t) D.40287_194;
  D.40272_197 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40289_198 = &MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].ssec[D.40272_197].remote_raw_key;
  D.40272_199 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].crypto_type;
  D.40285_200 = SUITES[D.40272_199].keylen;
  D.40286_201 = (switch_size_t) D.40285_200;
  switch_rtp_add_crypto_key (D.40282_192, 1, D.40288_195, D.40272_199, D.40289_198, D.40286_201);

<bb 56>:
  D.40290_202 = switch_core_media_ready (session_3(D), 0);
  if (D.40290_202 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

<bb 57>:
  D.40282_203 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40168_204 = smh_4->mparams;
  D.40293_205 = D.40168_204->te;
  switch_rtp_set_telephony_event (D.40282_203, D.40293_205);
  D.40282_206 = MEM[(struct switch_rtp_engine_t *)smh_4 + 80B].rtp_session;
  D.40168_207 = smh_4->mparams;
  D.40294_208 = D.40168_207->recv_te;
  switch_rtp_set_telephony_recv_event (D.40282_206, D.40294_208);

<bb 58>:
  return;

}



;; Function switch_core_media_init (switch_core_media_init)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: switch_core_gen_certs ("dtls-srtp.pem");

Marking useful stmt: return;


Processing worklist:
processing: return;

processing: switch_core_gen_certs ("dtls-srtp.pem");


Eliminating unnecessary statements:
Removed 0 of 2 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_init ()
{
<bb 2>:
  switch_core_gen_certs ("dtls-srtp.pem");
  return;

}



;; Function switch_core_media_deinit (switch_core_media_deinit)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Marking useful stmt: return;


Processing worklist:
processing: return;


Eliminating unnecessary statements:
Removed 0 of 1 statements (0%)
Removed 0 of 0 PHI nodes (0%)
switch_core_media_deinit ()
{
<bb 2>:
  return;

}


