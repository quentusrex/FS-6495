
;; Function atoi (atoi)



 local analysis of atoi
   scanning: D.40324_2 = strtol (__nptr_1(D), 0B, 10);
    checking flags for call: neihter
  scanning: return D.40324_2;
    checking previously known: pure

;; Function atol (atol)



 local analysis of atol
   scanning: D.41133_2 = strtol (__nptr_1(D), 0B, 10);
    checking flags for call: neihter
  scanning: return D.41133_2;
    checking previously known: pure

;; Function switch_core_codec_ready (switch_core_codec_ready)



 local analysis of switch_core_codec_ready
   scanning: if (codec_2(D) != 0B)
  scanning: D.45448_3 = codec_2(D)->flags;
    Indirect ref read is not const
  scanning: D.45449_4 = D.45448_3 & 256;
  scanning: if (D.45449_4 != 0)
  scanning: D.45451_5 = codec_2(D)->mutex;
    Indirect ref read is not const
  scanning: if (D.45451_5 != 0B)
  scanning: D.45453_6 = codec_2(D)->codec_interface;
    Indirect ref read is not const
  scanning: if (D.45453_6 != 0B)
  scanning: D.45455_7 = codec_2(D)->implementation;
    Indirect ref read is not const
  scanning: if (D.45455_7 != 0B)
  scanning: D.45443_10 = (switch_bool_t) iftmp.104_1;
  scanning: return D.45443_10;
    checking previously known: neihter
Function is locally pure.
Function found to be pure: switch_core_codec_ready
Function found to be nothrow: switch_core_codec_ready

;; Function switch_core_codec_ready

;; 
9 basic blocks, 13 edges, last basic block 9.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  4 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec)
Successors:  5 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [85.0%]  (true,exec)
Successors:  6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  8 [78.4%]  (true,exec) 7 [21.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 3 [50.0%]  (false,exec) 4 [15.0%]  (false,exec) 5 [15.0%]  (false,exec) 6 [21.6%]  (false,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [78.4%]  (true,exec) 7 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_codec_ready (struct switch_codec_t * codec)
{
  const struct switch_codec_implementation_t * D.45455;
  struct switch_codec_interface_t * D.45453;
  struct switch_mutex_t * D.45451;
  uint32_t D.45449;
  uint32_t D.45448;
  int iftmp.104;
  switch_bool_t D.45443;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (codec_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.45448_3 = codec_2(D)->flags;
  D.45449_4 = D.45448_3 & 256;
  if (D.45449_4 != 0)
    goto <bb 4>;
  else
    goto <bb 7>;
  # SUCC: 4 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 4 freq:4250
  # PRED: 3 [50.0%]  (true,exec)
  D.45451_5 = codec_2(D)->mutex;
  if (D.45451_5 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 5 freq:3612
  # PRED: 4 [85.0%]  (true,exec)
  D.45453_6 = codec_2(D)->codec_interface;
  if (D.45453_6 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 6 freq:3071
  # PRED: 5 [85.0%]  (true,exec)
  D.45455_7 = codec_2(D)->implementation;
  if (D.45455_7 != 0B)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [78.4%]  (true,exec) 7 [21.6%]  (false,exec)

  # BLOCK 7 freq:7594
  # PRED: 2 [15.0%]  (false,exec) 3 [50.0%]  (false,exec) 4 [15.0%]  (false,exec) 5 [15.0%]  (false,exec) 6 [21.6%]  (false,exec)
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:10000
  # PRED: 6 [78.4%]  (true,exec) 7 [100.0%]  (fallthru,exec)
  # iftmp.104_1 = PHI <1(6), 0(7)>
  D.45443_10 = (switch_bool_t) iftmp.104_1;
  return D.45443_10;
  # SUCC: EXIT [100.0%] 

}



;; Function _zstr (_zstr)



 local analysis of _zstr
   scanning: if (s_2(D) == 0B)
  scanning: D.40302_3 = *s_2(D);
    Indirect ref read is not const
  scanning: if (D.40302_3 == 0)
  scanning: return D.40296_1;
    checking previously known: neihter
Function is locally pure.
Function found to be pure: _zstr
Function found to be nothrow: _zstr

;; Function _zstr

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


_zstr (const char * s)
{
  const char D.40302;
  int D.40296;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (s_2(D) == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
  # SUCC: 5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.40302_3 = *s_2(D);
  if (D.40302_3 == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5481
  # PRED: 3 [61.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:10000
  # PRED: 3 [39.0%]  (true,exec) 4 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
  # D.40296_1 = PHI <1(3), 0(4), 1(2)>
  return D.40296_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_known_bitrate (switch_known_bitrate)



 local analysis of switch_known_bitrate
   scanning: csui.173_11 = payload_2(D);
  scanning: if (csui.173_11 <= 18)
  scanning: <L12>:
  scanning: D.40703_9 = 0;
  scanning: <L13>:
  scanning: D.40703_10 = CSWTCH.174[csui.173_11];
  scanning: <L14>:
  scanning: <L11>:
  scanning: return D.40703_1;
    checking previously known: neihter
Function is locally const.
Function found to be const: switch_known_bitrate
Function found to be nothrow: switch_known_bitrate

;; Function switch_known_bitrate

;; 
6 basic blocks, 6 edges, last basic block 12.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  9 [39.0%]  (false) 10 [61.0%]  (true)

Basic block 9 (new)
Predecessors:  2 [39.0%]  (false)
Successors:  8 [100.0%]  (fallthru)

Basic block 10 (new)
Predecessors:  2 [61.0%]  (true)
Successors:  8 [100.0%]  (fallthru)

Basic block 8 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
Successors:  EXIT [100.0%] 


switch_known_bitrate (switch_payload_t payload)
{
  unsigned char csui.173;
  uint32_t D.40703;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  csui.173_11 = payload_2(D);
  if (csui.173_11 <= 18)
    goto <bb 10> (<L13>);
  else
    goto <bb 9> (<L12>);
  # SUCC: 9 [39.0%]  (false) 10 [61.0%]  (true)

  # BLOCK 9 freq:3900
  # PRED: 2 [39.0%]  (false)
<L12>:
  D.40703_9 = 0;
  goto <bb 8> (<L14>);
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 10 freq:6100
  # PRED: 2 [61.0%]  (true)
<L13>:
  D.40703_10 = CSWTCH.174[csui.173_11];
  # SUCC: 8 [100.0%]  (fallthru)

  # BLOCK 8 freq:10000
  # PRED: 9 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
  # D.40703_1 = PHI <D.40703_9(9), D.40703_10(10)>
<L14>:
<L11>:
  return D.40703_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_safe_atoi (switch_safe_atoi)



 local analysis of switch_safe_atoi
   scanning: if (nptr_2(D) != 0B)
  scanning: dft_8 = strtol (nptr_2(D), 0B, 10);
    checking flags for call: neihter
  scanning: return dft_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_safe_atoi

;; Function switch_safe_atoi

;; 
5 basic blocks, 5 edges, last basic block 5.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [78.3%]  (true,exec) 4 [21.6%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.3%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 2 [21.6%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_safe_atoi (const char * nptr, int dft)
{
  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (nptr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [78.3%]  (true,exec) 4 [21.6%]  (false,exec)

  # BLOCK 3 freq:7835
  # PRED: 2 [78.3%]  (true,exec)
  # DEBUG __nptr => nptr_2(D)
  dft_8 = strtol (nptr_2(D), 0B, 10);
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 3 [100.0%]  (fallthru,exec) 2 [21.6%]  (false,exec)
  # dft_1 = PHI <dft_8(3), dft_4(D)(2)>
  return dft_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_media_type2str (switch_media_type2str)



 local analysis of switch_media_type2str
   scanning: switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>
  scanning: <L1>:
  scanning: <L2>:
  scanning: <L4>:
  scanning: return D.44061_1;
    checking previously known: neihter
Function is locally const.
Function found to be const: switch_media_type2str
Function found to be nothrow: switch_media_type2str

;; Function switch_media_type2str

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

Basic block 3 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [33.3%]  (exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_media_type2str (switch_media_type_t type)
{
  const char * D.44061;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  switch (type_2(D)) <default: <L2>, case 0: <L4>, case 1: <L1>>
  # SUCC: 4 [33.3%]  (exec) 5 [33.3%]  (exec) 3 [33.3%]  (exec)

  # BLOCK 3 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L1>:
  goto <bb 5> (<L4>);
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:3333
  # PRED: 2 [33.3%]  (exec)
<L2>:
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:9999
  # PRED: 2 [33.3%]  (exec) 3 [100.0%]  (fallthru,exec) 4 [100.0%]  (fallthru,exec)
  # D.44061_1 = PHI <"audio"(2), "video"(3), "!ERR"(4)>
<L4>:
  return D.44061_1;
  # SUCC: EXIT [100.0%] 

}



;; Function greedy_sort (greedy_sort)



 local analysis of greedy_sort
   scanning: mtmp = {};
  scanning: j.101_11 = (unsigned int) j_1;
  scanning: j.101_14 = (unsigned int) j_1;
  scanning: D.45426_15 = j.101_14 * 16;
  scanning: D.45428_17 = matches_16(D) + D.45426_15;
  scanning: MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45428_17;
    Indirect ref write is not const/pure
    Indirect ref read is not const
  scanning: j_18 = j_1 + 1;
  scanning: if (j_1 < m_idx_10(D))
  scanning: g.102_27 = (unsigned int) g_6;
  scanning: D.45430_28 = g.102_27 * 4;
  scanning: D.45431_30 = codec_array_29(D) + D.45430_28;
  scanning: imp_31 = *D.45431_30;
    Indirect ref read is not const
  scanning: D.45432_33 = mtmp[j_2].imp;
  scanning: if (D.45432_33 == imp_31)
  scanning: f.103_34 = (unsigned int) f_4;
  scanning: D.45436_35 = f.103_34 * 16;
  scanning: D.45437_36 = matches_16(D) + D.45436_35;
  scanning: j.101_37 = (unsigned int) j_2;
  scanning: *D.45437_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
    Indirect ref write is not const/pure
    Indirect ref read is not const
  scanning: f_40 = f_4 + 1;
  scanning: j_41 = j_2 + 1;
  scanning: if (j_2 < m_idx_10(D))
  scanning: g_42 = g_6 + 1;
  scanning: D.45438_21 = smh_20(D)->mparams;
    Indirect ref read is not const
  scanning: D.45439_22 = D.45438_21->num_codecs;
    Indirect ref read is not const
  scanning: D.45440_23 = D.45439_22 > g_6;
  scanning: D.45441_25 = g_6 < total_codecs_24(D);
  scanning: D.45442_26 = D.45440_23 && D.45441_25;
  scanning: if (D.45442_26 != 0)
  scanning: return;
    checking previously known: neihter
Function found to be nothrow: greedy_sort

;; Function greedy_sort

;; 
14 basic blocks, 17 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  4 [96.8%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,dfs_back,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
Successors:  3 [96.8%]  (true,exec) 5 [3.2%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [3.2%]  (false,exec)
Successors:  12 [100.0%]  (fallthru)

Basic block 6 (new, reachable)
Predecessors:  12 [91.0%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  10 [96.8%]  (true,exec)
Successors:  8 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [15.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [85.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [100.0%]  (fallthru,dfs_back,exec)

Basic block 10 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
Successors:  7 [96.8%]  (true,exec) 11 [3.2%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [3.2%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,dfs_back,exec)

Basic block 12 (new)
Predecessors:  5 [100.0%]  (fallthru) 11 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [91.0%]  (true,exec) 13 [9.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [9.0%]  (false,exec)
Successors:  EXIT [100.0%] 


greedy_sort (struct switch_media_handle_t * smh, struct matches * matches, int m_idx, const struct switch_codec_implementation_t * * codec_array, int total_codecs)
{
  const struct switch_codec_implementation_t * imp;
  struct matches mtmp[30];
  int g;
  int f;
  int j;
  _Bool D.45442;
  _Bool D.45441;
  _Bool D.45440;
  int D.45439;
  struct switch_core_media_params_t * D.45438;
  struct matches * D.45437;
  unsigned int D.45436;
  unsigned int f.103;
  const struct switch_codec_implementation_t * D.45432;
  const struct switch_codec_implementation_t * * D.45431;
  unsigned int D.45430;
  unsigned int g.102;
  struct matches * D.45428;
  unsigned int D.45426;
  unsigned int j.101;

  # BLOCK 2 freq:32
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG j => 0
  # DEBUG f => 0
  mtmp = {};
  # DEBUG j => 0
  goto <bb 4>;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:957
  # PRED: 4 [96.8%]  (true,exec)
  j.101_11 = (unsigned int) j_1;
  j.101_14 = (unsigned int) j_1;
  D.45426_15 = j.101_14 * 16;
  D.45428_17 = matches_16(D) + D.45426_15;
  MEM[(struct matches *)&mtmp][j.101_11]{lb: 0 sz: 16} = *D.45428_17;
  j_18 = j_1 + 1;
  # DEBUG j => j_18
  # SUCC: 4 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 4 freq:989
  # PRED: 2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
  # j_1 = PHI <0(2), j_18(3)>
  # DEBUG j => j_1
  if (j_1 < m_idx_10(D))
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 [96.8%]  (true,exec) 5 [3.2%]  (false,exec)

  # BLOCK 5 freq:32
  # PRED: 4 [3.2%]  (false,exec)
  # f_38 = PHI <0(4)>
  # g_32 = PHI <0(4)>
  goto <bb 12>;
  # SUCC: 12 [100.0%]  (fallthru)

  # BLOCK 6 freq:323
  # PRED: 12 [91.0%]  (true,exec)
  g.102_27 = (unsigned int) g_6;
  D.45430_28 = g.102_27 * 4;
  D.45431_30 = codec_array_29(D) + D.45430_28;
  imp_31 = *D.45431_30;
  # DEBUG imp => imp_31
  # DEBUG j => 0
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:9677
  # PRED: 10 [96.8%]  (true,exec)
  D.45432_33 = mtmp[j_2].imp;
  if (D.45432_33 == imp_31)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 8 freq:1452
  # PRED: 7 [15.0%]  (true,exec)
  f.103_34 = (unsigned int) f_4;
  D.45436_35 = f.103_34 * 16;
  D.45437_36 = matches_16(D) + D.45436_35;
  j.101_37 = (unsigned int) j_2;
  *D.45437_36 = MEM[(struct matches *)&mtmp][j.101_37]{lb: 0 sz: 16};
  f_40 = f_4 + 1;
  # DEBUG f => f_40
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9677
  # PRED: 7 [85.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  # f_3 = PHI <f_4(7), f_40(8)>
  # DEBUG f => f_3
  j_41 = j_2 + 1;
  # DEBUG j => j_41
  # SUCC: 10 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 10 freq:10000
  # PRED: 6 [100.0%]  (fallthru,exec) 9 [100.0%]  (fallthru,dfs_back,exec)
  # j_2 = PHI <0(6), j_41(9)>
  # f_4 = PHI <f_5(6), f_3(9)>
  # DEBUG f => f_4
  # DEBUG j => j_2
  if (j_2 < m_idx_10(D))
    goto <bb 7>;
  else
    goto <bb 11>;
  # SUCC: 7 [96.8%]  (true,exec) 11 [3.2%]  (false,exec)

  # BLOCK 11 freq:323
  # PRED: 10 [3.2%]  (false,exec)
  g_42 = g_6 + 1;
  # DEBUG g => g_42
  # SUCC: 12 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 12 freq:355
  # PRED: 5 [100.0%]  (fallthru) 11 [100.0%]  (fallthru,dfs_back,exec)
  # f_5 = PHI <f_38(5), f_4(11)>
  # g_6 = PHI <g_32(5), g_42(11)>
  # DEBUG g => g_6
  # DEBUG f => f_5
  D.45438_21 = smh_20(D)->mparams;
  D.45439_22 = D.45438_21->num_codecs;
  D.45440_23 = D.45439_22 > g_6;
  D.45441_25 = g_6 < total_codecs_24(D);
  D.45442_26 = D.45440_23 && D.45441_25;
  if (D.45442_26 != 0)
    goto <bb 6>;
  else
    goto <bb 13>;
  # SUCC: 6 [91.0%]  (true,exec) 13 [9.0%]  (false,exec)

  # BLOCK 13 freq:32
  # PRED: 12 [9.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function clear_pmaps (clear_pmaps)



 local analysis of clear_pmaps
   scanning: pmap_3 = engine_2(D)->payload_map;
    Indirect ref read is not const
  scanning: pmap_1->negotiated = 0;
    Indirect ref write is not const/pure
  scanning: pmap_1->current = 0;
    Indirect ref write is not const/pure
  scanning: pmap_5 = pmap_1->next;
    Indirect ref read is not const
  scanning: if (pmap_1 != 0B)
  scanning: D.41160_4 = pmap_1->allocated;
    Indirect ref read is not const
  scanning: if (D.41160_4 != 0)
  scanning: return;
    checking previously known: neihter
Function found to be nothrow: clear_pmaps

;; Function clear_pmaps

;; 
7 basic blocks, 8 edges, last basic block 7.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 3 (new, reachable)
Predecessors:  5 [95.5%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,dfs_back,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
Successors:  5 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.5%]  (true,exec)
Successors:  3 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [4.5%]  (false,exec) 5 [4.5%]  (false,exec)
Successors:  EXIT [100.0%] 


clear_pmaps (struct switch_rtp_engine_t * engine)
{
  struct payload_map_t * pmap;
  uint8_t D.41160;

  # BLOCK 2 freq:880
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  pmap_3 = engine_2(D)->payload_map;
  # DEBUG pmap => pmap_3
  goto <bb 4>;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 3 freq:9120
  # PRED: 5 [95.5%]  (true,exec)
  pmap_1->negotiated = 0;
  pmap_1->current = 0;
  pmap_5 = pmap_1->next;
  # DEBUG pmap => pmap_5
  # SUCC: 4 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [100.0%]  (fallthru,exec) 3 [100.0%]  (fallthru,dfs_back,exec)
  # pmap_1 = PHI <pmap_3(2), pmap_5(3)>
  # DEBUG pmap => pmap_1
  if (pmap_1 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

  # BLOCK 5 freq:9550
  # PRED: 4 [95.5%]  (true,exec)
  D.41160_4 = pmap_1->allocated;
  if (D.41160_4 != 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 [95.5%]  (true,exec) 6 [4.5%]  (false,exec)

  # BLOCK 6 freq:880
  # PRED: 4 [4.5%]  (false,exec) 5 [4.5%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function dtls_ok (dtls_ok)



 local analysis of dtls_ok
   scanning: D.42520_2 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.42521_3 = switch_channel_test_flag (D.42520_2, 111);
    checking flags for call: neihter
  scanning: D.42519_4 = (int) D.42521_3;
  scanning: return D.42519_4;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: dtls_ok

;; Function dtls_ok

;; 
3 basic blocks, 2 edges, last basic block 3.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


dtls_ok (struct switch_core_session_t * session)
{
  uint32_t D.42521;
  struct switch_channel_t * D.42520;
  int D.42519;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.42520_2 = session_1(D)->channel;
  D.42521_3 = switch_channel_test_flag (D.42520_2, 111);
  D.42519_4 = (int) D.42521_3;
  return D.42519_4;
  # SUCC: EXIT [100.0%] 

}



;; Function get_media_profile_name (get_media_profile_name)



 local analysis of get_media_profile_name
   scanning: if (session_2(D) == 0B)
  scanning: __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);
    checking flags for call: ignoring side effects->pure looping
  scanning: D.42967_3 = session_2(D)->channel;
    Indirect ref read is not const
  scanning: D.42968_4 = switch_channel_test_flag (D.42967_3, 106);
    checking flags for call: neihter
  scanning: if (D.42968_4 != 0)
  scanning: D.42967_5 = session_2(D)->channel;
    Indirect ref read is not const
  scanning: D.42971_6 = switch_channel_test_flag (D.42967_5, 107);
    checking flags for call: neihter
  scanning: if (D.42971_6 != 0)
  scanning: if (secure_9(D) != 0)
  scanning: return D.42974_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: get_media_profile_name

;; Function get_media_profile_name

;; 
10 basic blocks, 12 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [29.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  4 [71.0%]  (false,exec)
Successors:  9 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec) 6 [100.0%]  (fallthru,exec) 7 [39.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


get_media_profile_name (struct switch_core_session_t * session, int secure)
{
  static const char __PRETTY_FUNCTION__[23] = "get_media_profile_name";
  const char * D.42974;
  uint32_t D.42971;
  uint32_t D.42968;
  struct switch_channel_t * D.42967;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (session_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5582, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  D.42967_3 = session_2(D)->channel;
  D.42968_4 = switch_channel_test_flag (D.42967_3, 106);
  if (D.42968_4 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 5 freq:2899
  # PRED: 4 [29.0%]  (true,exec)
  D.42967_5 = session_2(D)->channel;
  D.42971_6 = switch_channel_test_flag (D.42967_5, 107);
  if (D.42971_6 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;
  # SUCC: 9 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 6 freq:1449
  # PRED: 5 [50.0%]  (false,exec)
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:7097
  # PRED: 4 [71.0%]  (false,exec)
  if (secure_9(D) != 0)
    goto <bb 9>;
  else
    goto <bb 8>;
  # SUCC: 9 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:4329
  # PRED: 7 [61.0%]  (false,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9996
  # PRED: 5 [50.0%]  (true,exec) 6 [100.0%]  (fallthru,exec) 7 [39.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
  # D.42974_1 = PHI <"UDP/TLS/RTP/SAVPF"(5), "RTP/SAVPF"(6), "RTP/SAVP"(7), "RTP/AVP"(8)>
  return D.42974_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_find_zrtp_hash (switch_core_media_find_zrtp_hash)



 local analysis of switch_core_media_find_zrtp_hash
   scanning: channel_10 = switch_core_session_get_channel (session_9(D));
    checking flags for call: neihter
  scanning: D.40619_13 = session_9(D)->media_handle;
    Indirect ref read is not const
  scanning: if (D.40619_13 == 0B)
  scanning: D.40619_14 = session_9(D)->media_handle;
    Indirect ref read is not const
  scanning: D.40619_16 = session_9(D)->media_handle;
    Indirect ref read is not const
  scanning: D.40622_18 = switch_channel_get_session (channel_10);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");
    checking flags for call: neihter
  scanning: m_20 = sdp_19(D)->sdp_media;
    Indirect ref read is not const
  scanning: D.40623_21 = got_audio_5 != 0;
  scanning: D.40624_22 = got_video_8 != 0;
  scanning: D.40625_23 = D.40623_21 && D.40624_22;
  scanning: if (D.40625_23 != 0)
  scanning: D.40628_24 = m_1->m_port;
    Indirect ref read is not const
  scanning: if (D.40628_24 != 0)
  scanning: D.40631_25 = m_1->m_type;
    Indirect ref read is not const
  scanning: D.40632_26 = D.40631_25 == 2;
  scanning: D.40633_27 = got_audio_5 == 0;
  scanning: D.40634_28 = D.40632_26 && D.40633_27;
  scanning: if (D.40634_28 != 0)
  scanning: D.40631_29 = m_1->m_type;
    Indirect ref read is not const
  scanning: D.40636_30 = D.40631_29 == 3;
  scanning: D.40637_31 = got_video_8 == 0;
  scanning: D.40638_32 = D.40636_30 && D.40637_31;
  scanning: if (D.40638_32 != 0)
  scanning: attr_33 = m_1->m_attributes;
    Indirect ref read is not const
  scanning: D.40639_34 = attr_2->a_name;
    Indirect ref read is not const
  scanning: if (D.40639_34 == 0B)
  scanning: D.47248_73 = *D.40639_34;
    Indirect ref read is not const
  scanning: if (D.47248_73 == 0)
  scanning: if (D.47247_74 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40639_36 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
    checking flags for call: pure
  scanning: if (D.40645_37 != 0)
  scanning: D.40647_38 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.40647_38 == 0B)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40631_39 = m_1->m_type;
    Indirect ref read is not const
  scanning: if (D.40631_39 == 2)
  scanning: D.40650_40 = switch_channel_get_session (channel_10);
    checking flags for call: neihter
  scanning: D.40647_41 = attr_2->a_value;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);
    checking flags for call: neihter
  scanning: D.40647_42 = attr_2->a_value;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);
    checking flags for call: neihter
  scanning: D.40647_43 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);
    checking flags for call: neihter
  scanning: MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;
    Indirect ref write is not const/pure
  scanning: got_audio_45 = got_audio_5 + 1;
  scanning: D.40631_46 = m_1->m_type;
    Indirect ref read is not const
  scanning: if (D.40631_46 == 3)
  scanning: D.40655_47 = switch_channel_get_session (channel_10);
    checking flags for call: neihter
  scanning: D.40647_48 = attr_2->a_value;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);
    checking flags for call: neihter
  scanning: D.40647_49 = attr_2->a_value;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);
    checking flags for call: neihter
  scanning: D.40647_50 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);
    checking flags for call: neihter
  scanning: MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;
    Indirect ref write is not const/pure
  scanning: got_video_52 = got_video_8 + 1;
  scanning: switch_channel_set_flag_value (channel_10, 75, 1);
    checking flags for call: neihter
  scanning: attr_53 = attr_2->a_next;
    Indirect ref read is not const
  scanning: if (attr_2 != 0B)
  scanning: m_54 = m_1->m_next;
    Indirect ref read is not const
  scanning: if (m_1 != 0B)
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_find_zrtp_hash

;; Function switch_core_media_find_zrtp_hash

;; 
27 basic blocks, 40 edges, last basic block 27.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  26 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  25 [95.5%]  (true,exec)
Successors:  26 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [95.5%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  8 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec) 7 [50.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  23 [95.5%]  (true,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec)
Successors:  16 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec) 15 [15.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [85.0%]  (false,exec)
Successors:  18 [13.7%]  (true,exec) 19 [86.3%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [13.7%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [86.3%]  (false,exec)
Successors:  20 [13.7%]  (true,exec) 21 [86.3%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [13.7%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [100.0%]  (fallthru,exec) 19 [86.3%]  (false,exec) 20 [100.0%]  (fallthru,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec)
Successors:  23 [100.0%]  (fallthru,dfs_back,exec)

Basic block 23 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [95.5%]  (true,exec) 24 [4.5%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 23 [4.5%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,dfs_back,exec)

Basic block 25 (new, reachable)
Predecessors:  3 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
Successors:  4 [95.5%]  (true,exec) 26 [4.5%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 4 [4.5%]  (true,exec) 25 [4.5%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_find_zrtp_hash (struct switch_core_session_t * session, struct sdp_session_t * sdp)
{
  const char D.47248;
  int D.47247;
  static const char __func__[33] = "switch_core_media_find_zrtp_hash";
  int got_video;
  int got_audio;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  struct switch_channel_t * channel;
  char * D.40656;
  struct switch_core_session_t * D.40655;
  char * D.40651;
  struct switch_core_session_t * D.40650;
  const char * D.40647;
  int D.40645;
  const char * D.40639;
  _Bool D.40638;
  _Bool D.40637;
  _Bool D.40636;
  _Bool D.40634;
  _Bool D.40633;
  _Bool D.40632;
  sdp_media_e D.40631;
  long unsigned int D.40628;
  _Bool D.40625;
  _Bool D.40624;
  _Bool D.40623;
  struct switch_core_session_t * D.40622;
  struct switch_media_handle_t * D.40619;

  # BLOCK 2 freq:814
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  channel_10 = switch_core_session_get_channel (session_9(D));
  # DEBUG channel => channel_10
  # DEBUG got_audio => 0
  # DEBUG got_video => 0
  D.40619_13 = session_9(D)->media_handle;
  if (D.40619_13 == 0B)
    goto <bb 26>;
  else
    goto <bb 3>;
  # SUCC: 26 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:638
  # PRED: 2 [78.4%]  (false,exec)
  D.40619_14 = session_9(D)->media_handle;
  # DEBUG D#1 => &D.40619_14->engines
  # DEBUG audio_engine => D#1
  D.40619_16 = session_9(D)->media_handle;
  # DEBUG D#2 => &D.40619_16->engines[1]
  # DEBUG video_engine => D#2
  D.40622_18 = switch_channel_get_session (channel_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 334, D.40622_18, 101, "Looking for zrtp-hash\n");
  m_20 = sdp_19(D)->sdp_media;
  # DEBUG m => m_20
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:6923
  # PRED: 25 [95.5%]  (true,exec)
  D.40623_21 = got_audio_5 != 0;
  D.40624_22 = got_video_8 != 0;
  D.40625_23 = D.40623_21 && D.40624_22;
  if (D.40625_23 != 0)
    goto <bb 26>;
  else
    goto <bb 5>;
  # SUCC: 26 [4.5%]  (true,exec) 5 [95.5%]  (false,exec)

  # BLOCK 5 freq:6612
  # PRED: 4 [95.5%]  (false,exec)
  D.40628_24 = m_1->m_port;
  if (D.40628_24 != 0)
    goto <bb 6>;
  else
    goto <bb 24>;
  # SUCC: 6 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 6 freq:3306
  # PRED: 5 [50.0%]  (true,exec)
  D.40631_25 = m_1->m_type;
  D.40632_26 = D.40631_25 == 2;
  D.40633_27 = got_audio_5 == 0;
  D.40634_28 = D.40632_26 && D.40633_27;
  if (D.40634_28 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;
  # SUCC: 8 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 7 freq:1653
  # PRED: 6 [50.0%]  (false,exec)
  D.40631_29 = m_1->m_type;
  D.40636_30 = D.40631_29 == 3;
  D.40637_31 = got_video_8 == 0;
  D.40638_32 = D.40636_30 && D.40637_31;
  if (D.40638_32 != 0)
    goto <bb 8>;
  else
    goto <bb 24>;
  # SUCC: 8 [50.0%]  (true,exec) 24 [50.0%]  (false,exec)

  # BLOCK 8 freq:2479
  # PRED: 6 [50.0%]  (true,exec) 7 [50.0%]  (true,exec)
  attr_33 = m_1->m_attributes;
  # DEBUG attr => attr_33
  goto <bb 23>;
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:9550
  # PRED: 23 [95.5%]  (true,exec)
  D.40639_34 = attr_2->a_name;
  # DEBUG s => D.40639_34
  if (D.40639_34 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:8117
  # PRED: 9 [85.0%]  (false,exec)
  D.47248_73 = *D.40639_34;
  if (D.47248_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4059
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9550
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47247_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47247_74 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:4775
  # PRED: 12 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:4775
  # PRED: 12 [50.0%]  (false,exec)
  D.40639_36 = attr_2->a_name;
  D.40645_37 = strcasecmp (D.40639_36, "zrtp-hash");
  if (D.40645_37 != 0)
    goto <bb 16>;
  else
    goto <bb 15>;
  # SUCC: 16 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 15 freq:2387
  # PRED: 14 [50.0%]  (false,exec)
  D.40647_38 = attr_2->a_value;
  if (D.40647_38 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [15.0%]  (true,exec) 17 [85.0%]  (false,exec)

  # BLOCK 16 freq:2746
  # PRED: 14 [50.0%]  (true,exec) 15 [15.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:2029
  # PRED: 15 [85.0%]  (false,exec)
  D.40631_39 = m_1->m_type;
  if (D.40631_39 == 2)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [13.7%]  (true,exec) 19 [86.3%]  (false,exec)

  # BLOCK 18 freq:278
  # PRED: 17 [13.7%]  (true,exec)
  D.40650_40 = switch_channel_get_session (channel_10);
  D.40647_41 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 343, D.40650_40, 7, "Found audio zrtp-hash; setting r_sdp_audio_zrtp_hash=%s\n", D.40647_41);
  D.40647_42 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_audio_zrtp_hash", D.40647_42, 1);
  D.40647_43 = attr_2->a_value;
  D.40651_44 = switch_core_perform_session_strdup (session_9(D), D.40647_43, "src/switch_core_media.c", &__func__, 346);
  MEM[(struct switch_rtp_engine_t *)D.40619_14 + 80B].remote_sdp_zrtp_hash = D.40651_44;
  got_audio_45 = got_audio_5 + 1;
  # DEBUG got_audio => got_audio_45
  goto <bb 21>;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:1751
  # PRED: 17 [86.3%]  (false,exec)
  D.40631_46 = m_1->m_type;
  if (D.40631_46 == 3)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [13.7%]  (true,exec) 21 [86.3%]  (false,exec)

  # BLOCK 20 freq:240
  # PRED: 19 [13.7%]  (true,exec)
  D.40655_47 = switch_channel_get_session (channel_10);
  D.40647_48 = attr_2->a_value;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 349, D.40655_47, 7, "Found video zrtp-hash; setting r_sdp_video_zrtp_hash=%s\n", D.40647_48);
  D.40647_49 = attr_2->a_value;
  switch_channel_set_variable_var_check (channel_10, "r_sdp_video_zrtp_hash", D.40647_49, 1);
  D.40647_50 = attr_2->a_value;
  D.40656_51 = switch_core_perform_session_strdup (session_9(D), D.40647_50, "src/switch_core_media.c", &__func__, 352);
  MEM[(struct switch_rtp_engine_t *)D.40619_16 + 11496B].remote_sdp_zrtp_hash = D.40656_51;
  got_video_52 = got_video_8 + 1;
  # DEBUG got_video => got_video_52
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:2029
  # PRED: 18 [100.0%]  (fallthru,exec) 19 [86.3%]  (false,exec) 20 [100.0%]  (fallthru,exec)
  # got_audio_3 = PHI <got_audio_45(18), got_audio_5(19), got_audio_5(20)>
  # got_video_6 = PHI <got_video_8(18), got_video_8(19), got_video_52(20)>
  # DEBUG got_video => got_video_6
  # DEBUG got_audio => got_audio_3
  switch_channel_set_flag_value (channel_10, 75, 1);
  goto <bb 24>;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:7521
  # PRED: 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec)
  attr_53 = attr_2->a_next;
  # DEBUG attr => attr_53
  # SUCC: 23 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 23 freq:10000
  # PRED: 8 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,dfs_back,exec)
  # attr_2 = PHI <attr_33(8), attr_53(22)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 9>;
  else
    goto <bb 24>;
  # SUCC: 9 [95.5%]  (true,exec) 24 [4.5%]  (false,exec)

  # BLOCK 24 freq:6612
  # PRED: 5 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 21 [100.0%]  (fallthru,exec) 23 [4.5%]  (false,exec)
  # got_audio_4 = PHI <got_audio_5(5), got_audio_5(7), got_audio_3(21), got_audio_5(23)>
  # got_video_7 = PHI <got_video_8(5), got_video_8(7), got_video_6(21), got_video_8(23)>
  # DEBUG got_video => got_video_7
  # DEBUG got_audio => got_audio_4
  m_54 = m_1->m_next;
  # DEBUG m => m_54
  # SUCC: 25 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 25 freq:7249
  # PRED: 3 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_20(3), m_54(24)>
  # got_audio_5 = PHI <0(3), got_audio_4(24)>
  # got_video_8 = PHI <0(3), got_video_7(24)>
  # DEBUG got_video => got_video_8
  # DEBUG got_audio => got_audio_5
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 4>;
  else
    goto <bb 26>;
  # SUCC: 4 [95.5%]  (true,exec) 26 [4.5%]  (false,exec)

  # BLOCK 26 freq:814
  # PRED: 2 [21.6%]  (true,exec) 4 [4.5%]  (true,exec) 25 [4.5%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function _switch_core_media_pass_zrtp_hash2 (_switch_core_media_pass_zrtp_hash2)



 local analysis of _switch_core_media_pass_zrtp_hash2
   scanning: D.47174_2 = aleg_session_1(D)->media_handle;
    Indirect ref read is not const
  scanning: if (D.47174_2 == 0B)
  scanning: D.47176_4 = bleg_session_3(D)->media_handle;
    Indirect ref read is not const
  scanning: if (D.47176_4 == 0B)
  scanning: D.47174_5 = aleg_session_1(D)->media_handle;
    Indirect ref read is not const
  scanning: aleg_engine_9 = &D.47174_5->engines[type_7(D)]{lb: 0 sz: 11416};
  scanning: D.47176_10 = bleg_session_3(D)->media_handle;
    Indirect ref read is not const
  scanning: bleg_engine_13 = &D.47176_10->engines[type_7(D)]{lb: 0 sz: 11416};
  scanning: D.47180_14 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47181_15 = switch_channel_get_session (D.47180_14);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47181_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");
    checking flags for call: neihter
  scanning: D.47180_16 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47182_17 = switch_channel_test_flag (D.47180_16, 73);
    checking flags for call: neihter
  scanning: if (D.47182_17 == 0)
  scanning: D.47180_18 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47185_19 = switch_channel_get_session (D.47180_18);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47185_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");
    checking flags for call: neihter
  scanning: D.47186_20 = aleg_engine_9->remote_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: if (D.47186_20 != 0B)
  scanning: D.47180_21 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47189_22 = switch_channel_get_session (D.47180_21);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47189_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");
    checking flags for call: neihter
  scanning: D.47186_23 = aleg_engine_9->remote_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: D.47190_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47186_23, "src/switch_core_media.c", &__func__, 266);
    checking flags for call: neihter
  scanning: bleg_engine_13->local_sdp_zrtp_hash = D.47190_24;
    Indirect ref write is not const/pure
  scanning: D.47191_25 = bleg_session_3(D)->channel;
    Indirect ref read is not const
  scanning: D.47192_26 = bleg_engine_13->local_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.47191_25, "l_sdp_audio_zrtp_hash", D.47192_26, 1);
    checking flags for call: neihter
  scanning: D.47193_27 = bleg_engine_13->remote_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: if (D.47193_27 != 0B)
  scanning: D.47180_28 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47196_29 = switch_channel_get_session (D.47180_28);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47196_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");
    checking flags for call: neihter
  scanning: D.47193_30 = bleg_engine_13->remote_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: D.47197_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47193_30, "src/switch_core_media.c", &__func__, 272);
    checking flags for call: neihter
  scanning: aleg_engine_9->local_sdp_zrtp_hash = D.47197_31;
    Indirect ref write is not const/pure
  scanning: D.47180_32 = aleg_session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47198_33 = aleg_engine_9->local_sdp_zrtp_hash;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.47180_32, "l_sdp_audio_zrtp_hash", D.47198_33, 1);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: _switch_core_media_pass_zrtp_hash2

;; Function _switch_core_media_pass_zrtp_hash2

;; 
11 basic blocks, 15 edges, last basic block 11.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  10 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  10 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [78.4%]  (false,exec)
Successors:  5 [20.7%]  (true,exec) 6 [79.3%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [20.7%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [79.3%]  (false,exec)
Successors:  7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [78.3%]  (true,exec) 10 [21.6%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [78.3%]  (true,exec)
Successors:  10 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  3 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec) 8 [21.6%]  (false,exec) 9 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
Successors:  EXIT [100.0%] 


_switch_core_media_pass_zrtp_hash2 (struct switch_core_session_t * aleg_session, struct switch_core_session_t * bleg_session, switch_media_type_t type)
{
  static const char __func__[35] = "_switch_core_media_pass_zrtp_hash2";
  struct switch_rtp_engine_t * bleg_engine;
  struct switch_rtp_engine_t * aleg_engine;
  char * D.47198;
  char * D.47197;
  struct switch_core_session_t * D.47196;
  char * D.47193;
  char * D.47192;
  struct switch_channel_t * D.47191;
  char * D.47190;
  struct switch_core_session_t * D.47189;
  char * D.47186;
  struct switch_core_session_t * D.47185;
  uint32_t D.47182;
  struct switch_core_session_t * D.47181;
  struct switch_channel_t * D.47180;
  unsigned int D.47178;
  struct switch_media_handle_t * D.47176;
  struct switch_media_handle_t * D.47174;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.47174_2 = aleg_session_1(D)->media_handle;
  if (D.47174_2 == 0B)
    goto <bb 10>;
  else
    goto <bb 3>;
  # SUCC: 10 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.47176_4 = bleg_session_3(D)->media_handle;
  if (D.47176_4 == 0B)
    goto <bb 10>;
  else
    goto <bb 4>;
  # SUCC: 10 [21.6%]  (true,exec) 4 [78.4%]  (false,exec)

  # BLOCK 4 freq:7041
  # PRED: 3 [78.4%]  (false,exec)
  D.47174_5 = aleg_session_1(D)->media_handle;
  aleg_engine_9 = &D.47174_5->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG aleg_engine => aleg_engine_9
  D.47176_10 = bleg_session_3(D)->media_handle;
  bleg_engine_13 = &D.47176_10->engines[type_7(D)]{lb: 0 sz: 11416};
  # DEBUG bleg_engine => bleg_engine_13
  D.47180_14 = aleg_session_1(D)->channel;
  D.47181_15 = switch_channel_get_session (D.47180_14);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 255, D.47181_15, 101, "Deciding whether to pass zrtp-hash between a-leg and b-leg\n");
  D.47180_16 = aleg_session_1(D)->channel;
  D.47182_17 = switch_channel_test_flag (D.47180_16, 73);
  if (D.47182_17 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [20.7%]  (true,exec) 6 [79.3%]  (false,exec)

  # BLOCK 5 freq:1458
  # PRED: 4 [20.7%]  (true,exec)
  D.47180_18 = aleg_session_1(D)->channel;
  D.47185_19 = switch_channel_get_session (D.47180_18);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 259, D.47185_19, 101, "CF_ZRTP_PASSTHRU_REQ not set on a-leg, so not propagating zrtp-hash\n");
  goto <bb 10>;
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:5583
  # PRED: 4 [79.3%]  (false,exec)
  D.47186_20 = aleg_engine_9->remote_sdp_zrtp_hash;
  if (D.47186_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 7 freq:3899
  # PRED: 6 [69.8%]  (true,exec)
  D.47180_21 = aleg_session_1(D)->channel;
  D.47189_22 = switch_channel_get_session (D.47180_21);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 265, D.47189_22, 7, "Passing a-leg remote zrtp-hash (audio) to b-leg\n");
  D.47186_23 = aleg_engine_9->remote_sdp_zrtp_hash;
  D.47190_24 = switch_core_perform_session_strdup (bleg_session_3(D), D.47186_23, "src/switch_core_media.c", &__func__, 266);
  bleg_engine_13->local_sdp_zrtp_hash = D.47190_24;
  D.47191_25 = bleg_session_3(D)->channel;
  D.47192_26 = bleg_engine_13->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47191_25, "l_sdp_audio_zrtp_hash", D.47192_26, 1);
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:5583
  # PRED: 6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  D.47193_27 = bleg_engine_13->remote_sdp_zrtp_hash;
  if (D.47193_27 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [78.3%]  (true,exec) 10 [21.6%]  (false,exec)

  # BLOCK 9 freq:4374
  # PRED: 8 [78.3%]  (true,exec)
  D.47180_28 = aleg_session_1(D)->channel;
  D.47196_29 = switch_channel_get_session (D.47180_28);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 271, D.47196_29, 7, "Passing b-leg remote zrtp-hash (audio) to a-leg\n");
  D.47193_30 = bleg_engine_13->remote_sdp_zrtp_hash;
  D.47197_31 = switch_core_perform_session_strdup (aleg_session_1(D), D.47193_30, "src/switch_core_media.c", &__func__, 272);
  aleg_engine_9->local_sdp_zrtp_hash = D.47197_31;
  D.47180_32 = aleg_session_1(D)->channel;
  D.47198_33 = aleg_engine_9->local_sdp_zrtp_hash;
  switch_channel_set_variable_var_check (D.47180_32, "l_sdp_audio_zrtp_hash", D.47198_33, 1);
  # SUCC: 10 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:10000
  # PRED: 3 [21.6%]  (true,exec) 5 [100.0%]  (fallthru,exec) 8 [21.6%]  (false,exec) 9 [100.0%]  (fallthru,exec) 2 [10.1%]  (true,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_true (switch_true)



 local analysis of switch_true
   scanning: if (expr_2(D) != 0B)
  scanning: D.40601_3 = strcasecmp (expr_2(D), "yes");
    checking flags for call: pure
  scanning: if (D.40601_3 == 0)
  scanning: D.40603_4 = strcasecmp (expr_2(D), "on");
    checking flags for call: pure
  scanning: if (D.40603_4 == 0)
  scanning: D.40605_5 = strcasecmp (expr_2(D), "true");
    checking flags for call: pure
  scanning: if (D.40605_5 == 0)
  scanning: D.40607_6 = strcasecmp (expr_2(D), "t");
    checking flags for call: pure
  scanning: if (D.40607_6 == 0)
  scanning: D.40609_7 = strcasecmp (expr_2(D), "enabled");
    checking flags for call: pure
  scanning: if (D.40609_7 == 0)
  scanning: D.40611_8 = strcasecmp (expr_2(D), "active");
    checking flags for call: pure
  scanning: if (D.40611_8 == 0)
  scanning: D.40613_9 = strcasecmp (expr_2(D), "allow");
    checking flags for call: pure
  scanning: if (D.40613_9 == 0)
  scanning: D.40615_10 = switch_is_number (expr_2(D));
    checking flags for call: neihter
  scanning: if (D.40615_10 != 0)
  scanning: D.47253_17 = strtol (expr_2(D), 0B, 10);
    checking flags for call: neihter
  scanning: if (D.47253_17 != 0)
  scanning: return D.40595_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_true

;; Function switch_true

;; 
14 basic blocks, 23 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [39.0%]  (false,exec)
Successors:  11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_true (const char * expr)
{
  int D.47253;
  switch_bool_t D.40615;
  int D.40613;
  int D.40611;
  int D.40609;
  int D.40607;
  int D.40605;
  int D.40603;
  int D.40601;
  int D.40595;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;
  # SUCC: 3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.40601_3 = strcasecmp (expr_2(D), "yes");
  if (D.40601_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;
  # SUCC: 13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [61.0%]  (false,exec)
  D.40603_4 = strcasecmp (expr_2(D), "on");
  if (D.40603_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;
  # SUCC: 13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:3163
  # PRED: 4 [61.0%]  (false,exec)
  D.40605_5 = strcasecmp (expr_2(D), "true");
  if (D.40605_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;
  # SUCC: 13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:1929
  # PRED: 5 [61.0%]  (false,exec)
  D.40607_6 = strcasecmp (expr_2(D), "t");
  if (D.40607_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;
  # SUCC: 13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:1177
  # PRED: 6 [61.0%]  (false,exec)
  D.40609_7 = strcasecmp (expr_2(D), "enabled");
  if (D.40609_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;
  # SUCC: 13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:718
  # PRED: 7 [61.0%]  (false,exec)
  D.40611_8 = strcasecmp (expr_2(D), "active");
  if (D.40611_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;
  # SUCC: 13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 9 freq:438
  # PRED: 8 [61.0%]  (false,exec)
  D.40613_9 = strcasecmp (expr_2(D), "allow");
  if (D.40613_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;
  # SUCC: 13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

  # BLOCK 10 freq:171
  # PRED: 9 [39.0%]  (false,exec)
  D.40615_10 = switch_is_number (expr_2(D));
  if (D.40615_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 11 freq:50
  # PRED: 10 [29.0%]  (true,exec)
  # DEBUG __nptr => expr_2(D)
  D.47253_17 = strtol (expr_2(D), 0B, 10);
  if (D.47253_17 != 0)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1651
  # PRED: 2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:10000
  # PRED: 4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
  # D.40595_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.40595_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_false (switch_false)



 local analysis of switch_false
   scanning: if (expr_2(D) != 0B)
  scanning: D.41141_3 = strcasecmp (expr_2(D), "no");
    checking flags for call: pure
  scanning: if (D.41141_3 == 0)
  scanning: D.41143_4 = strcasecmp (expr_2(D), "off");
    checking flags for call: pure
  scanning: if (D.41143_4 == 0)
  scanning: D.41145_5 = strcasecmp (expr_2(D), "false");
    checking flags for call: pure
  scanning: if (D.41145_5 == 0)
  scanning: D.41147_6 = strcasecmp (expr_2(D), "f");
    checking flags for call: pure
  scanning: if (D.41147_6 == 0)
  scanning: D.41149_7 = strcasecmp (expr_2(D), "disabled");
    checking flags for call: pure
  scanning: if (D.41149_7 == 0)
  scanning: D.41151_8 = strcasecmp (expr_2(D), "inactive");
    checking flags for call: pure
  scanning: if (D.41151_8 == 0)
  scanning: D.41153_9 = strcasecmp (expr_2(D), "disallow");
    checking flags for call: pure
  scanning: if (D.41153_9 == 0)
  scanning: D.41155_10 = switch_is_number (expr_2(D));
    checking flags for call: neihter
  scanning: if (D.41155_10 != 0)
  scanning: D.47257_17 = strtol (expr_2(D), 0B, 10);
    checking flags for call: neihter
  scanning: if (D.47257_17 == 0)
  scanning: return D.41135_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_false

;; Function switch_false

;; 
14 basic blocks, 23 edges, last basic block 14.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [85.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [61.0%]  (false,exec)
Successors:  13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [61.0%]  (false,exec)
Successors:  13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [39.0%]  (false,exec)
Successors:  11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [29.0%]  (true,exec)
Successors:  13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
Successors:  EXIT [100.0%] 


switch_false (const char * expr)
{
  int D.47257;
  switch_bool_t D.41155;
  int D.41153;
  int D.41151;
  int D.41149;
  int D.41147;
  int D.41145;
  int D.41143;
  int D.41141;
  int D.41135;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (expr_2(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 12>;
  # SUCC: 3 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 3 freq:8500
  # PRED: 2 [85.0%]  (true,exec)
  D.41141_3 = strcasecmp (expr_2(D), "no");
  if (D.41141_3 == 0)
    goto <bb 13>;
  else
    goto <bb 4>;
  # SUCC: 13 [39.0%]  (true,exec) 4 [61.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [61.0%]  (false,exec)
  D.41143_4 = strcasecmp (expr_2(D), "off");
  if (D.41143_4 == 0)
    goto <bb 13>;
  else
    goto <bb 5>;
  # SUCC: 13 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:3163
  # PRED: 4 [61.0%]  (false,exec)
  D.41145_5 = strcasecmp (expr_2(D), "false");
  if (D.41145_5 == 0)
    goto <bb 13>;
  else
    goto <bb 6>;
  # SUCC: 13 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:1929
  # PRED: 5 [61.0%]  (false,exec)
  D.41147_6 = strcasecmp (expr_2(D), "f");
  if (D.41147_6 == 0)
    goto <bb 13>;
  else
    goto <bb 7>;
  # SUCC: 13 [39.0%]  (true,exec) 7 [61.0%]  (false,exec)

  # BLOCK 7 freq:1177
  # PRED: 6 [61.0%]  (false,exec)
  D.41149_7 = strcasecmp (expr_2(D), "disabled");
  if (D.41149_7 == 0)
    goto <bb 13>;
  else
    goto <bb 8>;
  # SUCC: 13 [39.0%]  (true,exec) 8 [61.0%]  (false,exec)

  # BLOCK 8 freq:718
  # PRED: 7 [61.0%]  (false,exec)
  D.41151_8 = strcasecmp (expr_2(D), "inactive");
  if (D.41151_8 == 0)
    goto <bb 13>;
  else
    goto <bb 9>;
  # SUCC: 13 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 9 freq:438
  # PRED: 8 [61.0%]  (false,exec)
  D.41153_9 = strcasecmp (expr_2(D), "disallow");
  if (D.41153_9 == 0)
    goto <bb 13>;
  else
    goto <bb 10>;
  # SUCC: 13 [61.0%]  (true,exec) 10 [39.0%]  (false,exec)

  # BLOCK 10 freq:171
  # PRED: 9 [39.0%]  (false,exec)
  D.41155_10 = switch_is_number (expr_2(D));
  if (D.41155_10 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 11 freq:50
  # PRED: 10 [29.0%]  (true,exec)
  # DEBUG __nptr => expr_2(D)
  D.47257_17 = strtol (expr_2(D), 0B, 10);
  if (D.47257_17 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [39.0%]  (true,exec) 12 [61.0%]  (false,exec)

  # BLOCK 12 freq:1651
  # PRED: 2 [15.0%]  (false,exec) 10 [71.0%]  (false,exec) 11 [61.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:10000
  # PRED: 4 [39.0%]  (true,exec) 12 [100.0%]  (fallthru,exec) 3 [39.0%]  (true,exec) 11 [39.0%]  (true,exec) 9 [61.0%]  (true,exec) 8 [39.0%]  (true,exec) 7 [39.0%]  (true,exec) 6 [39.0%]  (true,exec) 5 [39.0%]  (true,exec)
  # D.41135_1 = PHI <1(4), 0(12), 1(3), 1(11), 1(9), 1(8), 1(7), 1(6), 1(5)>
  return D.41135_1;
  # SUCC: EXIT [100.0%] 

}



;; Function add_audio_codec (add_audio_codec)



 local analysis of add_audio_codec
   scanning: ptstr = "";
  scanning: ratestr = "";
  scanning: bitstr = "";
  scanning: codec_fmtp = {};
  scanning: if (ptime_6(D) == 0)
  scanning: D.40660_10 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: D.40661_11 = map_9(D)->rm_pt;
    Indirect ref read is not const
  scanning: D.40662_12 = (uint32_t) D.40661_11;
  scanning: D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);
    checking flags for call: neihter
  scanning: codec_ms_14 = (int) D.40663_13;
  scanning: D.40661_15 = map_9(D)->rm_pt;
    Indirect ref read is not const
  scanning: csui.173_16 = (unsigned char) D.40661_15;
  scanning: if (csui.173_16 <= 18)
  scanning: <L27>:
  scanning: map_bit_rate_71 = CSWTCH.174[csui.173_16];
  scanning: <L28>:
  scanning: <L29>:
  scanning: if (ptime_6(D) == 0)
  scanning: D.40660_18 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: D.40667_19 = strcasecmp (D.40660_18, "g723");
    checking flags for call: pure
  scanning: if (D.40667_19 == 0)
  scanning: D.40670_22 = map_9(D)->rm_fmtp;
    Indirect ref read is not const
  scanning: if (D.40670_22 == 0B)
  scanning: D.47270_73 = *D.40670_22;
    Indirect ref read is not const
  scanning: if (D.47270_73 == 0)
  scanning: if (D.47269_74 != 0)
  scanning: D.40660_24 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: D.40674_25 = strcasecmp (D.40660_24, "ilbc");
    checking flags for call: pure
  scanning: if (D.40674_25 == 0)
  scanning: D.40660_29 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: D.40678_30 = strcasecmp (D.40660_29, "isac");
    checking flags for call: pure
  scanning: if (D.40678_30 == 0)
  scanning: D.40660_34 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: D.40670_35 = map_9(D)->rm_fmtp;
    Indirect ref read is not const
  scanning: D.40682_36 = map_9(D)->rm_rate;
    Indirect ref read is not const
  scanning: D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);
    checking flags for call: neihter
  scanning: if (D.40683_37 == 0)
  scanning: D.40686_38 = codec_fmtp.bits_per_second;
  scanning: if (D.40686_38 != 0)
  scanning: D.40686_39 = codec_fmtp.bits_per_second;
  scanning: map_bit_rate_40 = (uint32_t) D.40686_39;
  scanning: D.40689_41 = codec_fmtp.microseconds_per_packet;
  scanning: if (D.40689_41 != 0)
  scanning: D.40689_42 = codec_fmtp.microseconds_per_packet;
  scanning: codec_ms_43 = D.40689_42 / 1000;
  scanning: D.40682_44 = map_9(D)->rm_rate;
    Indirect ref read is not const
  scanning: if (D.40682_44 != 0)
  scanning: D.40682_45 = map_9(D)->rm_rate;
    Indirect ref read is not const
  scanning: switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);
    checking flags for call: neihter
  scanning: if (codec_ms_3 != 0)
  scanning: switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);
    checking flags for call: neihter
  scanning: if (map_bit_rate_5 != 0)
  scanning: switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);
    checking flags for call: neihter
  scanning: D.40698_47 = strlen (buf_46(D));
    checking flags for call: pure
  scanning: D.40699_48 = buf_46(D) + D.40698_47;
  scanning: D.40700_49 = strlen (buf_46(D));
    checking flags for call: pure
  scanning: D.40701_51 = buflen_50(D) - D.40700_49;
  scanning: D.40660_52 = map_9(D)->rm_encoding;
    Indirect ref read is not const
  scanning: switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: add_audio_codec

;; Function add_audio_codec

;; 
28 basic blocks, 42 edges, last basic block 28.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [29.0%]  (true,exec) 4 [71.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [29.0%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [71.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  6 [50.0%]  (false,exec) 5 [50.0%]  (true,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [71.0%]  (true,exec) 16 [29.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [71.0%]  (true,exec)
Successors:  21 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  12 [29.0%]  (false,exec)
Successors:  17 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [50.0%]  (true,exec)
Successors:  18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [50.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [50.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 16 [50.0%]  (false,exec) 19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec) 13 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
Successors:  22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [29.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [71.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
Successors:  24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [39.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  25 [61.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


add_audio_codec (struct sdp_rtpmap_t * map, int ptime, char * buf, switch_size_t buflen)
{
  const char D.47270;
  int D.47269;
  unsigned char csui.173;
  struct switch_codec_fmtp_t codec_fmtp;
  char bitstr[20];
  char ratestr[20];
  char ptstr[20];
  uint32_t map_bit_rate;
  int codec_ms;
  switch_size_t D.40701;
  size_t D.40700;
  char * D.40699;
  size_t D.40698;
  int D.40689;
  int D.40686;
  switch_status_t D.40683;
  long unsigned int D.40682;
  int D.40678;
  int D.40674;
  const char * D.40670;
  int D.40667;
  uint32_t D.40663;
  uint32_t D.40662;
  <unnamed-unsigned:7> D.40661;
  const char * D.40660;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG codec_ms => ptime_6(D)
  # DEBUG map_bit_rate => 0
  ptstr = "";
  ratestr = "";
  bitstr = "";
  codec_fmtp = {};
  if (ptime_6(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [29.0%]  (true,exec) 4 [71.0%]  (false,exec)

  # BLOCK 3 freq:2900
  # PRED: 2 [29.0%]  (true,exec)
  D.40660_10 = map_9(D)->rm_encoding;
  D.40661_11 = map_9(D)->rm_pt;
  D.40662_12 = (uint32_t) D.40661_11;
  D.40663_13 = switch_default_ptime (D.40660_10, D.40662_12);
  codec_ms_14 = (int) D.40663_13;
  # DEBUG codec_ms => codec_ms_14
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [71.0%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  # codec_ms_1 = PHI <ptime_6(D)(2), codec_ms_14(3)>
  # DEBUG codec_ms => codec_ms_1
  D.40661_15 = map_9(D)->rm_pt;
  csui.173_16 = (unsigned char) D.40661_15;
  # DEBUG payload => csui.173_16
  if (csui.173_16 <= 18)
    goto <bb 5> (<L27>);
  else
    goto <bb 6> (<L28>);
  # SUCC: 6 [50.0%]  (false,exec) 5 [50.0%]  (true,exec)

  # BLOCK 5 freq:5000
  # PRED: 4 [50.0%]  (true,exec)
<L27>:
  map_bit_rate_71 = CSWTCH.174[csui.173_16];
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:10000
  # PRED: 4 [50.0%]  (false,exec) 5 [100.0%]  (fallthru,exec)
  # map_bit_rate_72 = PHI <0(4), map_bit_rate_71(5)>
<L28>:
<L29>:
  # DEBUG map_bit_rate => NULL
  if (ptime_6(D) == 0)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 7 freq:5000
  # PRED: 6 [50.0%]  (true,exec)
  D.40660_18 = map_9(D)->rm_encoding;
  D.40667_19 = strcasecmp (D.40660_18, "g723");
  if (D.40667_19 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [50.0%]  (true,exec) 9 [50.0%]  (false,exec)

  # BLOCK 8 freq:2500
  # PRED: 7 [50.0%]  (true,exec)
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:10000
  # PRED: 6 [50.0%]  (false,exec) 7 [50.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  # codec_ms_2 = PHI <codec_ms_1(6), codec_ms_1(7), 30(8)>
  # DEBUG codec_ms => codec_ms_2
  D.40670_22 = map_9(D)->rm_fmtp;
  # DEBUG s => D.40670_22
  if (D.40670_22 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:8500
  # PRED: 9 [85.0%]  (false,exec)
  D.47270_73 = *D.40670_22;
  if (D.47270_73 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4250
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:10000
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47269_74 = PHI <1(9), 1(10), 0(11)>
  if (D.47269_74 != 0)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [71.0%]  (true,exec) 16 [29.0%]  (false,exec)

  # BLOCK 13 freq:7100
  # PRED: 12 [71.0%]  (true,exec)
  D.40660_24 = map_9(D)->rm_encoding;
  D.40674_25 = strcasecmp (D.40660_24, "ilbc");
  if (D.40674_25 == 0)
    goto <bb 21>;
  else
    goto <bb 14>;
  # SUCC: 21 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 14 freq:3550
  # PRED: 13 [50.0%]  (false,exec)
  D.40660_29 = map_9(D)->rm_encoding;
  D.40678_30 = strcasecmp (D.40660_29, "isac");
  if (D.40678_30 == 0)
    goto <bb 15>;
  else
    goto <bb 21>;
  # SUCC: 15 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 15 freq:1775
  # PRED: 14 [50.0%]  (true,exec)
  # DEBUG codec_ms => 30
  # DEBUG ptime => 30
  # DEBUG map_bit_rate => 32000
  goto <bb 21>;
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:2900
  # PRED: 12 [29.0%]  (false,exec)
  D.40660_34 = map_9(D)->rm_encoding;
  D.40670_35 = map_9(D)->rm_fmtp;
  D.40682_36 = map_9(D)->rm_rate;
  D.40683_37 = switch_core_codec_parse_fmtp (D.40660_34, D.40670_35, D.40682_36, &codec_fmtp);
  if (D.40683_37 == 0)
    goto <bb 17>;
  else
    goto <bb 21>;
  # SUCC: 17 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 17 freq:1450
  # PRED: 16 [50.0%]  (true,exec)
  D.40686_38 = codec_fmtp.bits_per_second;
  if (D.40686_38 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 18 freq:725
  # PRED: 17 [50.0%]  (true,exec)
  D.40686_39 = codec_fmtp.bits_per_second;
  map_bit_rate_40 = (uint32_t) D.40686_39;
  # DEBUG map_bit_rate => map_bit_rate_40
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:1450
  # PRED: 17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # map_bit_rate_4 = PHI <map_bit_rate_72(17), map_bit_rate_40(18)>
  # DEBUG map_bit_rate => map_bit_rate_4
  D.40689_41 = codec_fmtp.microseconds_per_packet;
  if (D.40689_41 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 20 freq:725
  # PRED: 19 [50.0%]  (true,exec)
  D.40689_42 = codec_fmtp.microseconds_per_packet;
  codec_ms_43 = D.40689_42 / 1000;
  # DEBUG codec_ms => codec_ms_43
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:10000
  # PRED: 14 [50.0%]  (false,exec) 16 [50.0%]  (false,exec) 19 [50.0%]  (false,exec) 20 [100.0%]  (fallthru,exec) 13 [50.0%]  (true,exec) 15 [100.0%]  (fallthru,exec)
  # codec_ms_3 = PHI <codec_ms_2(14), codec_ms_2(16), codec_ms_2(19), codec_ms_43(20), 30(13), 30(15)>
  # map_bit_rate_5 = PHI <map_bit_rate_72(14), map_bit_rate_72(16), map_bit_rate_4(19), map_bit_rate_4(20), 13330(13), 32000(15)>
  # DEBUG map_bit_rate => map_bit_rate_5
  # DEBUG codec_ms => codec_ms_3
  D.40682_44 = map_9(D)->rm_rate;
  if (D.40682_44 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [29.0%]  (true,exec) 23 [71.0%]  (false,exec)

  # BLOCK 22 freq:2900
  # PRED: 21 [29.0%]  (true,exec)
  D.40682_45 = map_9(D)->rm_rate;
  switch_snprintf (&ratestr, 20, "@%uh", D.40682_45);
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:10000
  # PRED: 21 [71.0%]  (false,exec) 22 [100.0%]  (fallthru,exec)
  if (codec_ms_3 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [29.0%]  (true,exec) 25 [71.0%]  (false,exec)

  # BLOCK 24 freq:2900
  # PRED: 23 [29.0%]  (true,exec)
  switch_snprintf (&ptstr, 20, "@%di", codec_ms_3);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:10000
  # PRED: 23 [71.0%]  (false,exec) 24 [100.0%]  (fallthru,exec)
  if (map_bit_rate_5 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [39.0%]  (true,exec) 27 [61.0%]  (false,exec)

  # BLOCK 26 freq:3898
  # PRED: 25 [39.0%]  (true,exec)
  switch_snprintf (&bitstr, 20, "@%db", map_bit_rate_5);
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:10000
  # PRED: 25 [61.0%]  (false,exec) 26 [100.0%]  (fallthru,exec)
  D.40698_47 = strlen (buf_46(D));
  D.40699_48 = buf_46(D) + D.40698_47;
  D.40700_49 = strlen (buf_46(D));
  D.40701_51 = buflen_50(D) - D.40700_49;
  D.40660_52 = map_9(D)->rm_encoding;
  switch_snprintf (D.40699_48, D.40701_51, ",%s%s%s%s", D.40660_52, &ratestr, &ptstr, &bitstr);
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_parse_crypto_prefs (switch_core_session_parse_crypto_prefs)



 local analysis of switch_core_session_parse_crypto_prefs
   scanning: smh_22 = session_21(D)->media_handle;
    Indirect ref read is not const
  scanning: if (smh_22 == 0B)
  scanning: D.42525_23 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: D.42526_24 = switch_channel_test_flag (D.42525_23, 106);
    checking flags for call: neihter
  scanning: if (D.42526_24 != 0)
  scanning: D.42525_25 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: D.42529_26 = switch_channel_direction (D.42525_25);
    checking flags for call: neihter
  scanning: if (D.42529_26 == 0)
  scanning: D.42525_29 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);
    checking flags for call: neihter
  scanning: if (val_30 == 0B)
  scanning: D.42525_32 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);
    checking flags for call: neihter
  scanning: if (val_3 == 0B)
  scanning: D.47275_100 = *val_3;
    Indirect ref read is not const
  scanning: if (D.47275_100 == 0)
  scanning: if (D.47274_101 == 0)
  scanning: suites_35 = __builtin_strchr (val_3, 58);
    checking flags for call: pure
  scanning: if (suites_35 != 0B)
  scanning: *suites_35 = 0;
    Indirect ref write is not const/pure
  scanning: suites_36 = suites_35 + 1;
  scanning: if (suites_5 == 0B)
  scanning: D.47279_102 = MEM[(const char *)suites_5];
    Indirect ref read is not const
  scanning: if (D.47279_102 == 0)
  scanning: if (D.47278_103 != 0)
  scanning: D.42525_38 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);
    checking flags for call: neihter
  scanning: if (val_3 == 0B)
  scanning: D.47283_104 = *val_3;
    Indirect ref read is not const
  scanning: if (D.47283_104 == 0)
  scanning: if (D.47282_105 != 0)
  scanning: D.42525_41 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: D.42548_42 = switch_channel_direction (D.42525_41);
    checking flags for call: neihter
  scanning: if (D.42548_42 == 0)
  scanning: D.42525_43 = session_21(D)->channel;
    Indirect ref read is not const
  scanning: D.42550_44 = switch_channel_test_flag (D.42525_43, 84);
    checking flags for call: neihter
  scanning: if (D.42550_44 == 0)
  scanning: D.42552_47 = strcasecmp (val_4, "optional");
    checking flags for call: pure
  scanning: if (D.42552_47 == 0)
  scanning: smh_22->crypto_mode = 0;
    Indirect ref write is not const/pure
  scanning: D.42559_48 = switch_true (val_4);
    checking flags for call: neihter
  scanning: if (D.42559_48 != 0)
  scanning: D.42561_49 = strcasecmp (val_4, "mandatory");
    checking flags for call: pure
  scanning: if (D.42561_49 == 0)
  scanning: smh_22->crypto_mode = 1;
    Indirect ref write is not const/pure
  scanning: smh_22->crypto_mode = 2;
    Indirect ref write is not const/pure
  scanning: D.42562_50 = switch_false (val_4);
    checking flags for call: neihter
  scanning: if (D.42562_50 == 0)
  scanning: D.42565_51 = strcasecmp (val_4, "forbidden");
    checking flags for call: pure
  scanning: if (D.42565_51 != 0)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);
    checking flags for call: neihter
  scanning: D.42569_52 = smh_22->crypto_mode;
    Indirect ref read is not const
  scanning: if (D.42569_52 != 2)
  scanning: if (suites_6 == 0B)
  scanning: D.47287_106 = MEM[(const char *)suites_6];
    Indirect ref read is not const
  scanning: if (D.47287_106 == 0)
  scanning: if (D.47286_107 == 0)
  scanning: D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);
    checking flags for call: neihter
  scanning: argc_55 = (int) D.42573_54;
  scanning: D.42574_59 = fields[i_7];
  scanning: D.42575_60 = SUITES[j_9].name;
    static memory read is not const
  scanning: D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
    checking flags for call: pure
  scanning: if (D.42576_61 == 0)
  scanning: D.42579_62 = SUITES[j_9].type;
    static memory read is not const
  scanning: smh_22->crypto_suite_order[k_11] = D.42579_62;
    Indirect ref write is not const/pure
  scanning: k_63 = k_11 + 1;
  scanning: j_65 = j_9 + 1;
  scanning: if (j_9 <= 8)
  scanning: if (ok_13 == 0)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");
    checking flags for call: neihter
  scanning: i_66 = i_7 + 1;
  scanning: if (i_7 < argc_55)
  scanning: D.42582_68 = SUITES[i_8].type;
    static memory read is not const
  scanning: smh_22->crypto_suite_order[k_12] = D.42582_68;
    Indirect ref write is not const/pure
  scanning: k_69 = k_12 + 1;
  scanning: i_70 = i_8 + 1;
  scanning: if (i_8 <= 8)
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_session_parse_crypto_prefs

;; Function switch_core_session_parse_crypto_prefs

;; 
53 basic blocks, 82 edges, last basic block 53.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  52 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  52 [61.0%]  (true,exec) 4 [39.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [39.0%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [6.7%]  (true,exec) 8 [93.3%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [6.7%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [93.3%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (false,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (true,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [85.0%]  (false,exec)
Successors:  17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [29.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [50.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [29.0%]  (true,exec)
Successors:  24 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [29.0%]  (true,exec)
Successors:  26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru)

Basic block 26 (new, reachable)
Predecessors:  22 [71.0%]  (false,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru) 23 [71.0%]  (false,exec)
Successors:  27 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [71.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [29.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [50.0%]  (false,exec)
Successors:  30 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  28 [50.0%]  (true,exec) 29 [71.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  29 [29.0%]  (false,exec)
Successors:  32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [29.0%]  (true,exec)
Successors:  34 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  27 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 31 [50.0%]  (false,exec) 32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
Successors:  35 [72.0%]  (true,exec) 39 [28.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [72.0%]  (true,exec)
Successors:  38 [15.0%]  (true,exec) 36 [85.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [85.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  38 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  35 [15.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [100.0%]  (fallthru,exec)
Successors:  40 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [71.0%]  (false,exec) 34 [28.0%]  (false,exec)
Successors:  51 [100.0%]  (fallthru)

Basic block 40 (new, reachable)
Predecessors:  38 [29.0%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  44 [90.0%]  (true,exec)
Successors:  42 [4.5%]  (true,exec) 43 [95.5%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [4.5%]  (true,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [95.5%]  (false,exec)
Successors:  44 [100.0%]  (fallthru,dfs_back,exec)

Basic block 44 (new)
Predecessors:  49 [100.0%]  (fallthru) 43 [100.0%]  (fallthru,dfs_back,exec)
Successors:  41 [90.0%]  (true,exec) 45 [10.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  42 [100.0%]  (fallthru,exec) 44 [10.0%]  (false,exec)
Successors:  46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [29.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,dfs_back,exec)

Basic block 48 (new, reachable)
Predecessors:  40 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
Successors:  49 [90.9%]  (true,exec) 52 [9.1%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [90.9%]  (true,exec)
Successors:  44 [100.0%]  (fallthru)

Basic block 50 (new, reachable)
Predecessors:  51 [90.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,dfs_back,exec)

Basic block 51 (new)
Predecessors:  39 [100.0%]  (fallthru) 50 [100.0%]  (fallthru,dfs_back,exec)
Successors:  50 [90.0%]  (true,exec) 52 [10.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 3 [61.0%]  (true,exec) 48 [9.1%]  (false,exec) 51 [10.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_session_parse_crypto_prefs (struct switch_core_session_t * session)
{
  const char D.47287;
  int D.47286;
  const char D.47283;
  int D.47282;
  const char D.47279;
  int D.47278;
  const char D.47275;
  int D.47274;
  int ok;
  static const char __func__[39] = "switch_core_session_parse_crypto_prefs";
  int k;
  int j;
  int i;
  int argc;
  char * fields[10];
  struct switch_media_handle_t * smh;
  char * suites;
  const char * val;
  const char * var;
  switch_rtp_crypto_key_type_t D.42582;
  switch_rtp_crypto_key_type_t D.42579;
  int D.42576;
  char * D.42575;
  char * D.42574;
  unsigned int D.42573;
  switch_rtp_crypto_mode_t D.42569;
  int D.42565;
  int D.42562;
  int D.42561;
  int D.42559;
  int D.42552;
  uint32_t D.42550;
  switch_call_direction_t D.42548;
  switch_call_direction_t D.42529;
  uint32_t D.42526;
  struct switch_channel_t * D.42525;

  # BLOCK 2 freq:2203
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG var => 0B
  # DEBUG val => 0B
  # DEBUG suites => 0B
  # DEBUG argc => 0
  # DEBUG i => 0
  # DEBUG j => 0
  # DEBUG k => 0
  smh_22 = session_21(D)->media_handle;
  # DEBUG smh => smh_22
  if (smh_22 == 0B)
    goto <bb 52>;
  else
    goto <bb 3>;
  # SUCC: 52 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:1726
  # PRED: 2 [78.4%]  (false,exec)
  D.42525_23 = session_21(D)->channel;
  D.42526_24 = switch_channel_test_flag (D.42525_23, 106);
  if (D.42526_24 != 0)
    goto <bb 52>;
  else
    goto <bb 4>;
  # SUCC: 52 [61.0%]  (true,exec) 4 [39.0%]  (false,exec)

  # BLOCK 4 freq:673
  # PRED: 3 [39.0%]  (false,exec)
  D.42525_25 = session_21(D)->channel;
  D.42529_26 = switch_channel_direction (D.42525_25);
  if (D.42529_26 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 5 freq:336
  # PRED: 4 [50.0%]  (false,exec)
  # DEBUG var => "rtp_secure_media_outbound"
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:673
  # PRED: 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  # var_1 = PHI <"rtp_secure_media_inbound"(4), "rtp_secure_media_outbound"(5)>
  # DEBUG var => var_1
  D.42525_29 = session_21(D)->channel;
  val_30 = switch_channel_get_variable_dup (D.42525_29, var_1, 1, -1);
  # DEBUG val => val_30
  if (val_30 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [6.7%]  (true,exec) 8 [93.3%]  (false,exec)

  # BLOCK 7 freq:45
  # PRED: 6 [6.7%]  (true,exec)
  # DEBUG var => "rtp_secure_media"
  D.42525_32 = session_21(D)->channel;
  val_33 = switch_channel_get_variable_dup (D.42525_32, "rtp_secure_media", 1, -1);
  # DEBUG val => val_33
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:673
  # PRED: 6 [93.3%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  # var_2 = PHI <var_1(6), "rtp_secure_media"(7)>
  # val_3 = PHI <val_30(6), val_33(7)>
  # DEBUG val => val_3
  # DEBUG var => var_2
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;
  # SUCC: 11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 9 freq:572
  # PRED: 8 [85.0%]  (false,exec)
  D.47275_100 = *val_3;
  if (D.47275_100 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:286
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:673
  # PRED: 8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # D.47274_101 = PHI <1(8), 1(9), 0(10)>
  if (D.47274_101 == 0)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 12 freq:336
  # PRED: 11 [50.0%]  (true,exec)
  suites_35 = __builtin_strchr (val_3, 58);
  # DEBUG suites => suites_35
  if (suites_35 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:286
  # PRED: 12 [85.0%]  (true,exec)
  *suites_35 = 0;
  suites_36 = suites_35 + 1;
  # DEBUG suites => suites_36
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:673
  # PRED: 11 [50.0%]  (false,exec) 12 [15.0%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  # suites_5 = PHI <0B(11), suites_35(12), suites_36(13)>
  # DEBUG suites => suites_5
  # DEBUG s => suites_5
  if (suites_5 == 0B)
    goto <bb 17>;
  else
    goto <bb 15>;
  # SUCC: 17 [15.0%]  (true,exec) 15 [85.0%]  (false,exec)

  # BLOCK 15 freq:572
  # PRED: 14 [85.0%]  (false,exec)
  D.47279_102 = MEM[(const char *)suites_5];
  if (D.47279_102 == 0)
    goto <bb 17>;
  else
    goto <bb 16>;
  # SUCC: 17 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 16 freq:286
  # PRED: 15 [50.0%]  (false,exec)
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:673
  # PRED: 14 [15.0%]  (true,exec) 15 [50.0%]  (true,exec) 16 [100.0%]  (fallthru,exec)
  # D.47278_103 = PHI <1(14), 1(15), 0(16)>
  if (D.47278_103 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [29.0%]  (true,exec) 19 [71.0%]  (false,exec)

  # BLOCK 18 freq:195
  # PRED: 17 [29.0%]  (true,exec)
  D.42525_38 = session_21(D)->channel;
  suites_39 = switch_channel_get_variable_dup (D.42525_38, "rtp_secure_media_suites", 1, -1);
  # DEBUG suites => suites_39
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:673
  # PRED: 17 [71.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # suites_6 = PHI <suites_5(17), suites_39(18)>
  # DEBUG suites => suites_6
  # DEBUG s => val_3
  if (val_3 == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

  # BLOCK 20 freq:572
  # PRED: 19 [85.0%]  (false,exec)
  D.47283_104 = *val_3;
  if (D.47283_104 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;
  # SUCC: 22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 21 freq:286
  # PRED: 20 [50.0%]  (false,exec)
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:673
  # PRED: 19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
  # D.47282_105 = PHI <1(19), 1(20), 0(21)>
  if (D.47282_105 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;
  # SUCC: 23 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 23 freq:195
  # PRED: 22 [29.0%]  (true,exec)
  D.42525_41 = session_21(D)->channel;
  D.42548_42 = switch_channel_direction (D.42525_41);
  if (D.42548_42 == 0)
    goto <bb 24>;
  else
    goto <bb 26>;
  # SUCC: 24 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 24 freq:57
  # PRED: 23 [29.0%]  (true,exec)
  D.42525_43 = session_21(D)->channel;
  D.42550_44 = switch_channel_test_flag (D.42525_43, 84);
  if (D.42550_44 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:28
  # PRED: 24 [50.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru)

  # BLOCK 26 freq:673
  # PRED: 22 [71.0%]  (false,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru) 23 [71.0%]  (false,exec)
  # val_4 = PHI <val_3(22), "optional"(24), "forbidden"(25), "forbidden"(23)>
  # DEBUG val => val_4
  D.42552_47 = strcasecmp (val_4, "optional");
  if (D.42552_47 == 0)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [71.0%]  (true,exec) 28 [29.0%]  (false,exec)

  # BLOCK 27 freq:478
  # PRED: 26 [71.0%]  (true,exec)
  smh_22->crypto_mode = 0;
  goto <bb 34>;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:195
  # PRED: 26 [29.0%]  (false,exec)
  D.42559_48 = switch_true (val_4);
  if (D.42559_48 != 0)
    goto <bb 30>;
  else
    goto <bb 29>;
  # SUCC: 30 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 29 freq:98
  # PRED: 28 [50.0%]  (false,exec)
  D.42561_49 = strcasecmp (val_4, "mandatory");
  if (D.42561_49 == 0)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 [71.0%]  (true,exec) 31 [29.0%]  (false,exec)

  # BLOCK 30 freq:167
  # PRED: 28 [50.0%]  (true,exec) 29 [71.0%]  (true,exec)
  smh_22->crypto_mode = 1;
  goto <bb 34>;
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:28
  # PRED: 29 [29.0%]  (false,exec)
  smh_22->crypto_mode = 2;
  D.42562_50 = switch_false (val_4);
  if (D.42562_50 == 0)
    goto <bb 32>;
  else
    goto <bb 34>;
  # SUCC: 32 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 32 freq:14
  # PRED: 31 [50.0%]  (true,exec)
  D.42565_51 = strcasecmp (val_4, "forbidden");
  if (D.42565_51 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
  # SUCC: 33 [29.0%]  (true,exec) 34 [71.0%]  (false,exec)

  # BLOCK 33 freq:4
  # PRED: 32 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1123, session_21(D), 4, "INVALID VALUE FOR %s defaulting to \'forbidden\'\n", var_2);
  # SUCC: 34 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:673
  # PRED: 27 [100.0%]  (fallthru,exec) 30 [100.0%]  (fallthru,exec) 31 [50.0%]  (false,exec) 32 [71.0%]  (false,exec) 33 [100.0%]  (fallthru,exec)
  D.42569_52 = smh_22->crypto_mode;
  if (D.42569_52 != 2)
    goto <bb 35>;
  else
    goto <bb 39>;
  # SUCC: 35 [72.0%]  (true,exec) 39 [28.0%]  (false,exec)

  # BLOCK 35 freq:484
  # PRED: 34 [72.0%]  (true,exec)
  # DEBUG s => suites_6
  if (suites_6 == 0B)
    goto <bb 38>;
  else
    goto <bb 36>;
  # SUCC: 38 [15.0%]  (true,exec) 36 [85.0%]  (false,exec)

  # BLOCK 36 freq:412
  # PRED: 35 [85.0%]  (false,exec)
  D.47287_106 = MEM[(const char *)suites_6];
  if (D.47287_106 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 37 freq:206
  # PRED: 36 [50.0%]  (false,exec)
  # SUCC: 38 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:484
  # PRED: 35 [15.0%]  (true,exec) 36 [50.0%]  (true,exec) 37 [100.0%]  (fallthru,exec)
  # D.47286_107 = PHI <1(35), 1(36), 0(37)>
  if (D.47286_107 == 0)
    goto <bb 40>;
  else
    goto <bb 39>;
  # SUCC: 40 [29.0%]  (true,exec) 39 [71.0%]  (false,exec)

  # BLOCK 39 freq:532
  # PRED: 38 [71.0%]  (false,exec) 34 [28.0%]  (false,exec)
  # i_67 = PHI <0(38), 0(34)>
  # k_64 = PHI <0(38), 0(34)>
  goto <bb 51>;
  # SUCC: 51 [100.0%]  (fallthru)

  # BLOCK 40 freq:140
  # PRED: 38 [29.0%]  (true,exec)
  D.42573_54 = switch_separate_string (suites_6, 58, &fields, 10);
  argc_55 = (int) D.42573_54;
  # DEBUG argc => argc_55
  # DEBUG i => 0
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:9000
  # PRED: 44 [90.0%]  (true,exec)
  D.42574_59 = fields[i_7];
  D.42575_60 = SUITES[j_9].name;
  D.42576_61 = strcasecmp (D.42574_59, D.42575_60);
  if (D.42576_61 == 0)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [4.5%]  (true,exec) 43 [95.5%]  (false,exec)

  # BLOCK 42 freq:405
  # PRED: 41 [4.5%]  (true,exec)
  D.42579_62 = SUITES[j_9].type;
  smh_22->crypto_suite_order[k_11] = D.42579_62;
  k_63 = k_11 + 1;
  # DEBUG k => k_63
  # DEBUG ok => 1
  goto <bb 45>;
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:8595
  # PRED: 41 [95.5%]  (false,exec)
  j_65 = j_9 + 1;
  # DEBUG j => j_65
  # SUCC: 44 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 44 freq:10000
  # PRED: 49 [100.0%]  (fallthru) 43 [100.0%]  (fallthru,dfs_back,exec)
  # j_9 = PHI <j_74(49), j_65(43)>
  # DEBUG j => j_9
  if (j_9 <= 8)
    goto <bb 41>;
  else
    goto <bb 45>;
  # SUCC: 41 [90.0%]  (true,exec) 45 [10.0%]  (false,exec)

  # BLOCK 45 freq:1405
  # PRED: 42 [100.0%]  (fallthru,exec) 44 [10.0%]  (false,exec)
  # k_10 = PHI <k_63(42), k_11(44)>
  # ok_13 = PHI <1(42), 0(44)>
  # DEBUG ok => ok_13
  # DEBUG k => k_10
  if (ok_13 == 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [29.0%]  (true,exec) 47 [71.0%]  (false,exec)

  # BLOCK 46 freq:407
  # PRED: 45 [29.0%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 1142, session_21(D), 4, "INVALID SUITE SUPPLIED\n");
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1405
  # PRED: 45 [71.0%]  (false,exec) 46 [100.0%]  (fallthru,exec)
  i_66 = i_7 + 1;
  # DEBUG i => i_66
  # SUCC: 48 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 48 freq:1545
  # PRED: 40 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
  # i_7 = PHI <0(40), i_66(47)>
  # k_11 = PHI <0(40), k_10(47)>
  # DEBUG k => k_11
  # DEBUG i => i_7
  if (i_7 < argc_55)
    goto <bb 49>;
  else
    goto <bb 52>;
  # SUCC: 49 [90.9%]  (true,exec) 52 [9.1%]  (false,exec)

  # BLOCK 49 freq:1405
  # PRED: 48 [90.9%]  (true,exec)
  # j_74 = PHI <0(48)>
  goto <bb 44>;
  # SUCC: 44 [100.0%]  (fallthru)

  # BLOCK 50 freq:4791
  # PRED: 51 [90.0%]  (true,exec)
  D.42582_68 = SUITES[i_8].type;
  smh_22->crypto_suite_order[k_12] = D.42582_68;
  k_69 = k_12 + 1;
  # DEBUG k => k_69
  i_70 = i_8 + 1;
  # DEBUG i => i_70
  # SUCC: 51 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 51 freq:5323
  # PRED: 39 [100.0%]  (fallthru) 50 [100.0%]  (fallthru,dfs_back,exec)
  # i_8 = PHI <i_67(39), i_70(50)>
  # k_12 = PHI <k_64(39), k_69(50)>
  # DEBUG k => k_12
  # DEBUG i => i_8
  if (i_8 <= 8)
    goto <bb 50>;
  else
    goto <bb 52>;
  # SUCC: 50 [90.0%]  (true,exec) 52 [10.0%]  (false,exec)

  # BLOCK 52 freq:2203
  # PRED: 2 [21.6%]  (true,exec) 3 [61.0%]  (true,exec) 48 [9.1%]  (false,exec) 51 [10.0%]  (false,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function gen_ice (gen_ice)



 local analysis of gen_ice
   scanning: tmp = "";
  scanning: if (session_1(D) == 0B)
  scanning: __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);
    checking flags for call: ignoring side effects->pure looping
  scanning: smh_2 = session_1(D)->media_handle;
    Indirect ref read is not const
  scanning: if (smh_2 == 0B)
  scanning: engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  scanning: D.42929_7 = engine_6->rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.42929_7 == 0)
  scanning: engine_6->rtcp_mux = 1;
    Indirect ref write is not const/pure
  scanning: D.42932_8 = smh_2->msid;
    Indirect ref read is not const
  scanning: if (D.42932_8 == 0B)
  scanning: switch_stun_random_string (&tmp, 32, 0B);
    checking flags for call: neihter
  scanning: tmp[32] = 0;
  scanning: D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);
    checking flags for call: neihter
  scanning: smh_2->msid = D.42935_9;
    Indirect ref write is not const/pure
  scanning: D.42936_10 = smh_2->cname;
    Indirect ref read is not const
  scanning: if (D.42936_10 == 0B)
  scanning: switch_stun_random_string (&tmp, 16, 0B);
    checking flags for call: neihter
  scanning: tmp[16] = 0;
  scanning: D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);
    checking flags for call: neihter
  scanning: smh_2->cname = D.42939_11;
    Indirect ref write is not const/pure
  scanning: D.42940_12 = engine_6->ice_out.ufrag;
    Indirect ref read is not const
  scanning: if (D.42940_12 == 0B)
  scanning: switch_stun_random_string (&tmp, 16, 0B);
    checking flags for call: neihter
  scanning: tmp[16] = 0;
  scanning: D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);
    checking flags for call: neihter
  scanning: engine_6->ice_out.ufrag = D.42943_13;
    Indirect ref write is not const/pure
  scanning: D.42944_14 = engine_6->ice_out.pwd;
    Indirect ref read is not const
  scanning: if (D.42944_14 == 0B)
  scanning: switch_stun_random_string (&tmp, 16, 0B);
    checking flags for call: neihter
  scanning: D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);
    checking flags for call: neihter
  scanning: engine_6->ice_out.pwd = D.42947_15;
    Indirect ref write is not const/pure
  scanning: D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
    Indirect ref read is not const
  scanning: if (D.42948_16 == 0B)
  scanning: switch_stun_random_string (&tmp, 10, "0123456789");
    checking flags for call: neihter
  scanning: tmp[10] = 0;
  scanning: D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);
    checking flags for call: neihter
  scanning: engine_6->ice_out.cands[0][0].foundation = D.42951_17;
    Indirect ref write is not const/pure
  scanning: engine_6->ice_out.cands[0][0].transport = "udp";
    Indirect ref write is not const/pure
  scanning: D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
    Indirect ref read is not const
  scanning: if (D.42952_18 == 0)
  scanning: engine_6->ice_out.cands[0][0].component_id = 1;
    Indirect ref write is not const/pure
  scanning: D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
    Indirect ref read is not const
  scanning: D.42955_20 = 329569 - D.42952_19;
  scanning: D.42956_21 = D.42955_20 * 2;
  scanning: D.42957_22 = (uint32_t) D.42956_21;
  scanning: engine_6->ice_out.cands[0][0].priority = D.42957_22;
    Indirect ref write is not const/pure
  scanning: if (ip_23(D) == 0B)
  scanning: D.47292_66 = *ip_23(D);
    Indirect ref read is not const
  scanning: if (D.47292_66 == 0)
  scanning: if (D.47291_67 == 0)
  scanning: D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);
    checking flags for call: neihter
  scanning: engine_6->ice_out.cands[0][0].con_addr = D.42961_25;
    Indirect ref write is not const/pure
  scanning: if (port_26(D) != 0)
  scanning: engine_6->ice_out.cands[0][0].con_port = port_26(D);
    Indirect ref write is not const/pure
  scanning: engine_6->ice_out.cands[0][0].generation = "0";
    Indirect ref write is not const/pure
  scanning: engine_6->ice_out.cands[0][0].ready = 1;
    Indirect ref write is not const/pure
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: gen_ice

;; Function gen_ice

;; 
28 basic blocks, 39 edges, last basic block 28.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [50.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [6.7%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [6.7%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [6.7%]  (true,exec) 13 [93.3%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [6.7%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [93.3%]  (false,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [6.7%]  (true,exec) 15 [93.3%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [6.7%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [93.3%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [6.7%]  (true,exec) 17 [93.3%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [6.7%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  15 [93.3%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [50.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
Successors:  22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [50.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [29.0%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [71.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 26 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


gen_ice (struct switch_core_session_t * session, switch_media_type_t type, const char * ip, switch_port_t port)
{
  const char D.47292;
  int D.47291;
  static const char __func__[8] = "gen_ice";
  static const char __PRETTY_FUNCTION__[8] = "gen_ice";
  char tmp[33];
  struct switch_rtp_engine_t * engine;
  struct switch_media_handle_t * smh;
  char * D.42961;
  uint32_t D.42957;
  int D.42956;
  int D.42955;
  int D.42952;
  char * D.42951;
  char * D.42948;
  char * D.42947;
  char * D.42944;
  char * D.42943;
  char * D.42940;
  char * D.42939;
  char * D.42936;
  char * D.42935;
  char * D.42932;
  int8_t D.42929;
  unsigned int D.42928;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  tmp = "";
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3 freq:4
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 4608, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:9996
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 27>;
  else
    goto <bb 5>;
  # SUCC: 27 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:8982
  # PRED: 4 [89.9%]  (false,exec)
  engine_6 = &smh_2->engines[type_4(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_6
  D.42929_7 = engine_6->rtcp_mux;
  if (D.42929_7 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [50.0%]  (true,exec) 7 [50.0%]  (false,exec)

  # BLOCK 6 freq:4491
  # PRED: 5 [50.0%]  (true,exec)
  engine_6->rtcp_mux = 1;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:8982
  # PRED: 5 [50.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  D.42932_8 = smh_2->msid;
  if (D.42932_8 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [6.7%]  (true,exec) 9 [93.3%]  (false,exec)

  # BLOCK 8 freq:604
  # PRED: 7 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 32, 0B);
  tmp[32] = 0;
  D.42935_9 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4625);
  smh_2->msid = D.42935_9;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8982
  # PRED: 7 [93.3%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  D.42936_10 = smh_2->cname;
  if (D.42936_10 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [6.7%]  (true,exec) 11 [93.3%]  (false,exec)

  # BLOCK 10 freq:604
  # PRED: 9 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42939_11 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4631);
  smh_2->cname = D.42939_11;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:8982
  # PRED: 9 [93.3%]  (false,exec) 10 [100.0%]  (fallthru,exec)
  D.42940_12 = engine_6->ice_out.ufrag;
  if (D.42940_12 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [6.7%]  (true,exec) 13 [93.3%]  (false,exec)

  # BLOCK 12 freq:604
  # PRED: 11 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  tmp[16] = 0;
  D.42943_13 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4637);
  engine_6->ice_out.ufrag = D.42943_13;
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:8982
  # PRED: 11 [93.3%]  (false,exec) 12 [100.0%]  (fallthru,exec)
  D.42944_14 = engine_6->ice_out.pwd;
  if (D.42944_14 == 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [6.7%]  (true,exec) 15 [93.3%]  (false,exec)

  # BLOCK 14 freq:604
  # PRED: 13 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 16, 0B);
  D.42947_15 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4642);
  engine_6->ice_out.pwd = D.42947_15;
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:8982
  # PRED: 13 [93.3%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  D.42948_16 = engine_6->ice_out.cands[0][0].foundation;
  if (D.42948_16 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [6.7%]  (true,exec) 17 [93.3%]  (false,exec)

  # BLOCK 16 freq:604
  # PRED: 15 [6.7%]  (true,exec)
  switch_stun_random_string (&tmp, 10, "0123456789");
  tmp[10] = 0;
  D.42951_17 = switch_core_perform_session_strdup (session_1(D), &tmp, "src/switch_core_media.c", &__func__, 4648);
  engine_6->ice_out.cands[0][0].foundation = D.42951_17;
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:8982
  # PRED: 15 [93.3%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  engine_6->ice_out.cands[0][0].transport = "udp";
  D.42952_18 = engine_6->ice_out.cands[0][0].component_id;
  if (D.42952_18 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [50.0%]  (true,exec) 19 [50.0%]  (false,exec)

  # BLOCK 18 freq:4491
  # PRED: 17 [50.0%]  (true,exec)
  engine_6->ice_out.cands[0][0].component_id = 1;
  D.42952_19 = engine_6->ice_out.cands[0][0].component_id;
  D.42955_20 = 329569 - D.42952_19;
  D.42956_21 = D.42955_20 * 2;
  D.42957_22 = (uint32_t) D.42956_21;
  engine_6->ice_out.cands[0][0].priority = D.42957_22;
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:8982
  # PRED: 17 [50.0%]  (false,exec) 18 [100.0%]  (fallthru,exec)
  # DEBUG s => ip_23(D)
  if (ip_23(D) == 0B)
    goto <bb 22>;
  else
    goto <bb 20>;
  # SUCC: 22 [15.0%]  (true,exec) 20 [85.0%]  (false,exec)

  # BLOCK 20 freq:7635
  # PRED: 19 [85.0%]  (false,exec)
  D.47292_66 = *ip_23(D);
  if (D.47292_66 == 0)
    goto <bb 22>;
  else
    goto <bb 21>;
  # SUCC: 22 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 21 freq:3818
  # PRED: 20 [50.0%]  (false,exec)
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:8982
  # PRED: 19 [15.0%]  (true,exec) 20 [50.0%]  (true,exec) 21 [100.0%]  (fallthru,exec)
  # D.47291_67 = PHI <1(19), 1(20), 0(21)>
  if (D.47291_67 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

  # BLOCK 23 freq:2605
  # PRED: 22 [29.0%]  (true,exec)
  D.42961_25 = switch_core_perform_session_strdup (session_1(D), ip_23(D), "src/switch_core_media.c", &__func__, 4659);
  engine_6->ice_out.cands[0][0].con_addr = D.42961_25;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:8982
  # PRED: 22 [71.0%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  if (port_26(D) != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [50.0%]  (true,exec) 26 [50.0%]  (false,exec)

  # BLOCK 25 freq:4491
  # PRED: 24 [50.0%]  (true,exec)
  engine_6->ice_out.cands[0][0].con_port = port_26(D);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:8982
  # PRED: 24 [50.0%]  (false,exec) 25 [100.0%]  (fallthru,exec)
  engine_6->ice_out.cands[0][0].generation = "0";
  engine_6->ice_out.cands[0][0].ready = 1;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:9996
  # PRED: 4 [10.1%]  (true,exec) 26 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function get_channels (get_channels)



 local analysis of get_channels
   scanning: D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");
    checking flags for call: neihter
  scanning: D.42979_4 = switch_true (D.42978_3);
    checking flags for call: neihter
  scanning: if (D.42979_4 == 0)
  scanning: D.42982_6 = strcasecmp (name_5(D), "opus");
    checking flags for call: pure
  scanning: if (D.42982_6 == 0)
  scanning: if (dft_8(D) != 0)
  scanning: return dft_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: get_channels

;; Function get_channels

;; 
8 basic blocks, 10 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec)
Successors:  7 [67.0%]  (true,exec) 4 [33.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec) 3 [33.0%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 4 [50.0%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  3 [67.0%]  (true,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


get_channels (const char * name, int dft)
{
  int D.42982;
  int D.42979;
  char * D.42978;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.42978_3 = switch_core_get_variable ("NDLB_broken_opus_sdp");
  D.42979_4 = switch_true (D.42978_3);
  if (D.42979_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 3 freq:5000
  # PRED: 2 [50.0%]  (true,exec)
  D.42982_6 = strcasecmp (name_5(D), "opus");
  if (D.42982_6 == 0)
    goto <bb 7>;
  else
    goto <bb 4>;
  # SUCC: 7 [67.0%]  (true,exec) 4 [33.0%]  (false,exec)

  # BLOCK 4 freq:6650
  # PRED: 2 [50.0%]  (false,exec) 3 [33.0%]  (false,exec)
  if (dft_8(D) != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 5 freq:3325
  # PRED: 4 [50.0%]  (true,exec)
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6650
  # PRED: 5 [100.0%]  (fallthru,exec) 4 [50.0%]  (false,exec)
  # dft_2 = PHI <dft_8(D)(5), 1(4)>
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 3 [67.0%]  (true,exec) 6 [100.0%]  (fallthru,exec)
  # dft_1 = PHI <2(3), dft_2(6)>
  return dft_1;
  # SUCC: EXIT [100.0%] 

}



;; Function generate_local_fingerprint (generate_local_fingerprint)



 local analysis of generate_local_fingerprint
   scanning: engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};
  scanning: D.42993_6 = engine_5->local_dtls_fingerprint.len;
    Indirect ref read is not const
  scanning: if (D.42993_6 == 0)
  scanning: D.42996_7 = engine_5->remote_dtls_fingerprint.type;
    Indirect ref read is not const
  scanning: if (D.42996_7 != 0B)
  scanning: D.42996_8 = engine_5->remote_dtls_fingerprint.type;
    Indirect ref read is not const
  scanning: engine_5->local_dtls_fingerprint.type = D.42996_8;
    Indirect ref write is not const/pure
  scanning: engine_5->local_dtls_fingerprint.type = "sha-256";
    Indirect ref write is not const/pure
  scanning: D.43000_9 = &engine_5->local_dtls_fingerprint;
  scanning: switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: generate_local_fingerprint

;; Function generate_local_fingerprint

;; 
8 basic blocks, 9 edges, last basic block 8.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [61.0%]  (true,exec)
Successors:  4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (true,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [15.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  2 [39.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


generate_local_fingerprint (struct switch_media_handle_t * smh, switch_media_type_t type)
{
  struct switch_rtp_engine_t * engine;
  struct dtls_fingerprint_t * D.43000;
  char * D.42996;
  uint32_t D.42993;
  unsigned int D.42992;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  engine_5 = &smh_1(D)->engines[type_3(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_5
  D.42993_6 = engine_5->local_dtls_fingerprint.len;
  if (D.42993_6 == 0)
    goto <bb 3>;
  else
    goto <bb 7>;
  # SUCC: 3 [61.0%]  (true,exec) 7 [39.0%]  (false,exec)

  # BLOCK 3 freq:6100
  # PRED: 2 [61.0%]  (true,exec)
  D.42996_7 = engine_5->remote_dtls_fingerprint.type;
  if (D.42996_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [85.0%]  (true,exec)
  D.42996_8 = engine_5->remote_dtls_fingerprint.type;
  engine_5->local_dtls_fingerprint.type = D.42996_8;
  goto <bb 6>;
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:915
  # PRED: 3 [15.0%]  (false,exec)
  engine_5->local_dtls_fingerprint.type = "sha-256";
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6100
  # PRED: 4 [100.0%]  (fallthru,exec) 5 [100.0%]  (fallthru,exec)
  D.43000_9 = &engine_5->local_dtls_fingerprint;
  switch_core_cert_gen_fingerprint ("dtls-srtp", D.43000_9);
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:10000
  # PRED: 2 [39.0%]  (false,exec) 6 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function start_video_thread (start_video_thread)



 local analysis of start_video_thread
   scanning: thd_attr = 0B;
  scanning: pool_3 = switch_core_session_get_pool (session_2(D));
    checking flags for call: neihter
  scanning: smh_5 = session_2(D)->media_handle;
    Indirect ref read is not const
  scanning: if (smh_5 == 0B)
  scanning: D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
    Indirect ref read is not const
  scanning: if (D.43798_8 != 0B)
  scanning: D.43801_10 = switch_core_session_get_channel (session_2(D));
    checking flags for call: neihter
  scanning: D.43802_11 = switch_channel_get_name (D.43801_10);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);
    checking flags for call: neihter
  scanning: D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;
    Indirect ref read is not const
  scanning: D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;
    Indirect ref read is not const
  scanning: D.43805_14 = D.43804_13->agreed_pt;
    Indirect ref read is not const
  scanning: switch_rtp_set_default_payload (D.43803_12, D.43805_14);
    checking flags for call: neihter
  scanning: MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);
    Indirect ref write is not const/pure
  scanning: switch_threadattr_create (&thd_attr, pool_3);
    checking flags for call: neihter
  scanning: thd_attr.69_15 = thd_attr;
  scanning: switch_threadattr_stacksize_set (thd_attr.69_15, 245760);
    checking flags for call: neihter
  scanning: D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;
  scanning: switch_thread_cond_create (D.43807_16, pool_3);
    checking flags for call: neihter
  scanning: D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;
  scanning: switch_mutex_init (D.43808_17, 1, pool_3);
    checking flags for call: neihter
  scanning: D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];
  scanning: switch_mutex_init (D.43809_18, 1, pool_3);
    checking flags for call: neihter
  scanning: D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  scanning: thd_attr.69_20 = thd_attr;
  scanning: D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;
  scanning: D.43812_22 = switch_core_session_get_pool (session_2(D));
    checking flags for call: neihter
  scanning: switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);
    checking flags for call: neihter
  scanning: return D.43797_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: start_video_thread

;; Function start_video_thread

;; 
6 basic blocks, 7 edges, last basic block 6.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [89.9%]  (true,exec) 4 [10.1%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [10.1%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 3 [89.9%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


start_video_thread (struct switch_core_session_t * session)
{
  static const char __func__[19] = "start_video_thread";
  struct switch_media_handle_t * smh;
  struct switch_memory_pool_t * pool;
  struct switch_threadattr_t * thd_attr;
  struct switch_memory_pool_t * D.43812;
  struct media_helper * D.43811;
  struct switch_thread_t * * D.43810;
  struct switch_mutex_t * * D.43809;
  struct switch_mutex_t * * D.43808;
  struct switch_thread_cond_t * * D.43807;
  struct switch_threadattr_t * thd_attr.69;
  switch_payload_t D.43805;
  struct payload_map_t * D.43804;
  struct switch_rtp_t * D.43803;
  char * D.43802;
  struct switch_channel_t * D.43801;
  struct switch_thread_t * D.43798;
  switch_status_t D.43797;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  thd_attr = 0B;
  pool_3 = switch_core_session_get_pool (session_2(D));
  # DEBUG pool => pool_3
  # DEBUG v_engine => 0B
  smh_5 = session_2(D)->media_handle;
  # DEBUG smh => smh_5
  if (smh_5 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
  # SUCC: 5 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  # DEBUG D#3 => &smh_5->engines[1]
  # DEBUG v_engine => D#3
  D.43798_8 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  if (D.43798_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [89.9%]  (true,exec) 4 [10.1%]  (false,exec)

  # BLOCK 4 freq:910
  # PRED: 3 [10.1%]  (false,exec)
  D.43801_10 = switch_core_session_get_channel (session_2(D));
  D.43802_11 = switch_channel_get_name (D.43801_10);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4120, session_2(D), 5, "%s Starting Video thread\n", D.43802_11);
  D.43803_12 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].rtp_session;
  D.43804_13 = MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].cur_payload_map;
  D.43805_14 = D.43804_13->agreed_pt;
  switch_rtp_set_default_payload (D.43803_12, D.43805_14);
  MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.session = session_2(D);
  switch_threadattr_create (&thd_attr, pool_3);
  thd_attr.69_15 = thd_attr;
  switch_threadattr_stacksize_set (thd_attr.69_15, 245760);
  D.43807_16 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond;
  switch_thread_cond_create (D.43807_16, pool_3);
  D.43808_17 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh.cond_mutex;
  switch_mutex_init (D.43808_17, 1, pool_3);
  D.43809_18 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].read_mutex[1];
  switch_mutex_init (D.43809_18, 1, pool_3);
  D.43810_19 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].media_thread;
  thd_attr.69_20 = thd_attr;
  D.43811_21 = &MEM[(struct switch_rtp_engine_t *)smh_5 + 11496B].mh;
  D.43812_22 = switch_core_session_get_pool (session_2(D));
  switch_thread_create (D.43810_19, thd_attr.69_20, video_helper_thread, D.43811_21, D.43812_22);
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 3 [89.9%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # D.43797_1 = PHI <1(2), 1(3), 0(4)>
  return D.43797_1;
  # SUCC: EXIT [100.0%] 

}



;; Function video_helper_thread (video_helper_thread)



 local analysis of video_helper_thread
   scanning: session_7 = MEM[(struct media_helper *)obj_5(D)].session;
    Indirect ref read is not const
  scanning: channel_8 = switch_core_session_get_channel (session_7);
    checking flags for call: neihter
  scanning: smh_9 = session_7->media_handle;
    Indirect ref read is not const
  scanning: if (smh_9 == 0B)
  scanning: switch_core_session_read_lock (session_7);
    checking flags for call: neihter
  scanning: MEM[(struct media_helper *)obj_5(D)].up = 1;
    Indirect ref write is not const/pure
  scanning: D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
    Indirect ref read is not const
  scanning: switch_mutex_lock (D.43817_11);
    checking flags for call: neihter
  scanning: D.43818_12 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43819_13 = switch_channel_get_name (D.43818_12);
    checking flags for call: neihter
  scanning: D.43821_14 = switch_channel_test_flag (channel_8, 115);
    checking flags for call: neihter
  scanning: if (D.43821_14 != 0)
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);
    checking flags for call: neihter
  scanning: switch_core_session_refresh_video (session_7);
    checking flags for call: neihter
  scanning: D.43825_18 = switch_channel_test_flag (channel_8, 113);
    checking flags for call: neihter
  scanning: if (D.43825_18 != 0)
  scanning: D.43818_19 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43828_20 = switch_channel_get_name (D.43818_19);
    checking flags for call: neihter
  scanning: D.43830_21 = switch_channel_test_flag (channel_8, 115);
    checking flags for call: neihter
  scanning: if (D.43830_21 != 0)
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);
    checking flags for call: neihter
  scanning: D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;
    Indirect ref read is not const
  scanning: D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
    Indirect ref read is not const
  scanning: switch_thread_cond_wait (D.43834_24, D.43817_25);
    checking flags for call: neihter
  scanning: D.43818_26 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43835_27 = switch_channel_get_name (D.43818_26);
    checking flags for call: neihter
  scanning: D.43837_28 = switch_channel_test_flag (channel_8, 115);
    checking flags for call: neihter
  scanning: if (D.43837_28 != 0)
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);
    checking flags for call: neihter
  scanning: switch_core_session_refresh_video (session_7);
    checking flags for call: neihter
  scanning: D.43841_31 = switch_channel_test_flag (channel_8, 113);
    checking flags for call: neihter
  scanning: if (D.43841_31 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.43818_32 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43844_33 = switch_channel_test_flag (D.43818_32, 1);
    checking flags for call: neihter
  scanning: if (D.43844_33 == 0)
  scanning: D.43818_34 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43847_35 = switch_channel_test_flag (D.43818_34, 3);
    checking flags for call: neihter
  scanning: if (D.43847_35 == 0)
  scanning: switch_sleep (10000);
    checking flags for call: neihter
  scanning: // predicted unlikely by continue predictor.
  scanning: status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);
    checking flags for call: neihter
  scanning: D.43850_37 = status_36 != 0;
  scanning: D.43851_38 = status_36 != 11;
  scanning: D.43852_39 = D.43850_37 && D.43851_38;
  scanning: if (D.43852_39 != 0)
  scanning: if (status_36 != 10)
  scanning: switch_cond_next ();
    checking flags for call: neihter
  scanning: // predicted unlikely by continue predictor.
  scanning: D.43857_40 = switch_channel_test_flag (channel_8, 70);
    checking flags for call: neihter
  scanning: if (D.43857_40 != 0)
  scanning: switch_core_session_refresh_video (session_7);
    checking flags for call: neihter
  scanning: switch_channel_clear_flag (channel_8, 70);
    checking flags for call: neihter
  scanning: read_frame.73_41 = read_frame;
  scanning: D.43861_42 = read_frame.73_41->flags;
    Indirect ref read is not const
  scanning: D.43862_43 = (int) D.43861_42;
  scanning: D.43863_44 = D.43862_43 & 1;
  scanning: if (D.43863_44 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.43867_46 = switch_channel_test_flag (channel_8, 115);
    checking flags for call: neihter
  scanning: if (D.43867_46 != 0)
  scanning: read_frame.73_47 = read_frame;
  scanning: switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);
    checking flags for call: neihter
  scanning: D.43870_17 = switch_channel_get_state (channel_8);
    checking flags for call: neihter
  scanning: if (D.43870_17 <= 9)
  scanning: D.43818_48 = session_7->channel;
    Indirect ref read is not const
  scanning: D.43871_49 = switch_channel_get_name (D.43818_48);
    checking flags for call: neihter
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);
    checking flags for call: neihter
  scanning: D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
    Indirect ref read is not const
  scanning: switch_mutex_unlock (D.43817_50);
    checking flags for call: neihter
  scanning: switch_core_session_rwunlock (session_7);
    checking flags for call: neihter
  scanning: MEM[(struct media_helper *)obj_5(D)].up = 0;
    Indirect ref write is not const/pure
  scanning: return 0B;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: video_helper_thread

;; Function video_helper_thread

;; 
30 basic blocks, 43 edges, last basic block 30.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  29 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  27 [91.0%]  (true,exec)
Successors:  7 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [29.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [50.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  6 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [71.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [29.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  16 [29.0%]  (true,exec) 17 [71.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [29.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 15 [71.0%]  (false,exec)
Successors:  18 [71.0%]  (true,exec) 20 [29.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [71.0%]  (true,exec)
Successors:  19 [51.2%]  (true,exec) 20 [48.8%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [51.2%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  17 [29.0%]  (false,exec) 18 [48.8%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
Successors:  23 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [71.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [29.0%]  (false,exec)
Successors:  25 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [29.0%]  (true,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec) 24 [71.0%]  (false,exec)
Successors:  27 [100.0%]  (fallthru,dfs_back)

Basic block 27 (new)
Predecessors:  26 [100.0%]  (fallthru,dfs_back) 5 [100.0%]  (fallthru,exec)
Successors:  6 [91.0%]  (true,exec) 28 [9.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [9.0%]  (false,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 28 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


video_helper_thread (struct switch_thread_t * thread, void * obj)
{
  static const char __func__[20] = "video_helper_thread";
  struct switch_media_handle_t * smh;
  struct switch_frame_t * read_frame;
  switch_status_t status;
  struct switch_channel_t * channel;
  struct switch_core_session_t * session;
  char * D.43871;
  switch_channel_state_t D.43870;
  uint32_t D.43867;
  int D.43863;
  int D.43862;
  switch_frame_flag_t D.43861;
  struct switch_frame_t * read_frame.73;
  uint32_t D.43857;
  _Bool D.43852;
  _Bool D.43851;
  _Bool D.43850;
  uint32_t D.43847;
  uint32_t D.43844;
  uint32_t D.43841;
  uint32_t D.43837;
  char * iftmp.72;
  char * D.43835;
  struct switch_thread_cond_t * D.43834;
  uint32_t D.43830;
  char * iftmp.71;
  char * D.43828;
  uint32_t D.43825;
  uint32_t D.43821;
  char * iftmp.70;
  char * D.43819;
  struct switch_channel_t * D.43818;
  struct switch_mutex_t * D.43817;

  # BLOCK 2 freq:1149
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG mh => obj_5(D)
  session_7 = MEM[(struct media_helper *)obj_5(D)].session;
  # DEBUG session => session_7
  channel_8 = switch_core_session_get_channel (session_7);
  # DEBUG channel => channel_8
  smh_9 = session_7->media_handle;
  # DEBUG smh => smh_9
  if (smh_9 == 0B)
    goto <bb 29>;
  else
    goto <bb 3>;
  # SUCC: 29 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:900
  # PRED: 2 [78.4%]  (false,exec)
  switch_core_session_read_lock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 1;
  D.43817_11 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_lock (D.43817_11);
  D.43818_12 = session_7->channel;
  D.43819_13 = switch_channel_get_name (D.43818_12);
  D.43821_14 = switch_channel_test_flag (channel_8, 115);
  if (D.43821_14 != 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 4 freq:450
  # PRED: 3 [50.0%]  (false,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:900
  # PRED: 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # iftmp.70_2 = PHI <"on"(3), "off"(4)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4044, 0B, 7, "%s Video thread started. Echo is %s\n", D.43819_13, iftmp.70_2);
  switch_core_session_refresh_video (session_7);
  goto <bb 27>;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:9100
  # PRED: 27 [91.0%]  (true,exec)
  D.43825_18 = switch_channel_test_flag (channel_8, 113);
  if (D.43825_18 != 0)
    goto <bb 7>;
  else
    goto <bb 12>;
  # SUCC: 7 [29.0%]  (true,exec) 12 [71.0%]  (false,exec)

  # BLOCK 7 freq:2639
  # PRED: 6 [29.0%]  (true,exec)
  D.43818_19 = session_7->channel;
  D.43828_20 = switch_channel_get_name (D.43818_19);
  D.43830_21 = switch_channel_test_flag (channel_8, 115);
  if (D.43830_21 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;
  # SUCC: 9 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 8 freq:1320
  # PRED: 7 [50.0%]  (false,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:2639
  # PRED: 7 [50.0%]  (true,exec) 8 [100.0%]  (fallthru,exec)
  # iftmp.71_3 = PHI <"on"(7), "off"(8)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4051, 0B, 7, "%s Video thread paused. Echo is %s\n", D.43828_20, iftmp.71_3);
  D.43834_24 = MEM[(struct media_helper *)obj_5(D)].cond;
  D.43817_25 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_thread_cond_wait (D.43834_24, D.43817_25);
  D.43818_26 = session_7->channel;
  D.43835_27 = switch_channel_get_name (D.43818_26);
  D.43837_28 = switch_channel_test_flag (channel_8, 115);
  if (D.43837_28 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:1320
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:2639
  # PRED: 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # iftmp.72_4 = PHI <"on"(9), "off"(10)>
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4054, 0B, 7, "%s Video thread resumed  Echo is %s\n", D.43835_27, iftmp.72_4);
  switch_core_session_refresh_video (session_7);
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:9100
  # PRED: 6 [71.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  D.43841_31 = switch_channel_test_flag (channel_8, 113);
  if (D.43841_31 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [71.0%]  (true,exec) 14 [29.0%]  (false,exec)

  # BLOCK 13 freq:6461
  # PRED: 12 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:2639
  # PRED: 12 [29.0%]  (false,exec)
  D.43818_32 = session_7->channel;
  D.43844_33 = switch_channel_test_flag (D.43818_32, 1);
  if (D.43844_33 == 0)
    goto <bb 15>;
  else
    goto <bb 17>;
  # SUCC: 15 [50.0%]  (true,exec) 17 [50.0%]  (false,exec)

  # BLOCK 15 freq:1320
  # PRED: 14 [50.0%]  (true,exec)
  D.43818_34 = session_7->channel;
  D.43847_35 = switch_channel_test_flag (D.43818_34, 3);
  if (D.43847_35 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [29.0%]  (true,exec) 17 [71.0%]  (false,exec)

  # BLOCK 16 freq:383
  # PRED: 15 [29.0%]  (true,exec)
  switch_sleep (10000);
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:2256
  # PRED: 14 [50.0%]  (false,exec) 15 [71.0%]  (false,exec)
  status_36 = switch_core_session_read_video_frame (session_7, &read_frame, 0, 0);
  # DEBUG status => status_36
  D.43850_37 = status_36 != 0;
  D.43851_38 = status_36 != 11;
  D.43852_39 = D.43850_37 && D.43851_38;
  if (D.43852_39 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;
  # SUCC: 18 [71.0%]  (true,exec) 20 [29.0%]  (false,exec)

  # BLOCK 18 freq:1602
  # PRED: 17 [71.0%]  (true,exec)
  if (status_36 != 10)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [51.2%]  (true,exec) 20 [48.8%]  (false,exec)

  # BLOCK 19 freq:821
  # PRED: 18 [51.2%]  (true,exec)
  switch_cond_next ();
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:1436
  # PRED: 17 [29.0%]  (false,exec) 18 [48.8%]  (false,exec)
  D.43857_40 = switch_channel_test_flag (channel_8, 70);
  if (D.43857_40 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 [29.0%]  (true,exec) 22 [71.0%]  (false,exec)

  # BLOCK 21 freq:416
  # PRED: 20 [29.0%]  (true,exec)
  switch_core_session_refresh_video (session_7);
  switch_channel_clear_flag (channel_8, 70);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:1436
  # PRED: 20 [71.0%]  (false,exec) 21 [100.0%]  (fallthru,exec)
  read_frame.73_41 = read_frame;
  D.43861_42 = read_frame.73_41->flags;
  D.43862_43 = (int) D.43861_42;
  D.43863_44 = D.43862_43 & 1;
  if (D.43863_44 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [71.0%]  (true,exec) 24 [29.0%]  (false,exec)

  # BLOCK 23 freq:1019
  # PRED: 22 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:416
  # PRED: 22 [29.0%]  (false,exec)
  D.43867_46 = switch_channel_test_flag (channel_8, 115);
  if (D.43867_46 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 [29.0%]  (true,exec) 26 [71.0%]  (false,exec)

  # BLOCK 25 freq:121
  # PRED: 24 [29.0%]  (true,exec)
  read_frame.73_47 = read_frame;
  switch_core_session_write_video_frame (session_7, read_frame.73_47, 0, 0);
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:9100
  # PRED: 25 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec) 16 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec) 24 [71.0%]  (false,exec)
  # SUCC: 27 [100.0%]  (fallthru,dfs_back)

  # BLOCK 27 freq:10000
  # PRED: 26 [100.0%]  (fallthru,dfs_back) 5 [100.0%]  (fallthru,exec)
  D.43870_17 = switch_channel_get_state (channel_8);
  if (D.43870_17 <= 9)
    goto <bb 6>;
  else
    goto <bb 28>;
  # SUCC: 6 [91.0%]  (true,exec) 28 [9.0%]  (false,exec)

  # BLOCK 28 freq:900
  # PRED: 27 [9.0%]  (false,exec)
  D.43818_48 = session_7->channel;
  D.43871_49 = switch_channel_get_name (D.43818_48);
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 4093, 0B, 7, "%s Video thread ended\n", D.43871_49);
  D.43817_50 = MEM[(struct media_helper *)obj_5(D)].cond_mutex;
  switch_mutex_unlock (D.43817_50);
  switch_core_session_rwunlock (session_7);
  MEM[(struct media_helper *)obj_5(D)].up = 0;
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:1149
  # PRED: 2 [21.6%]  (true,exec) 28 [100.0%]  (fallthru,exec)
  return 0B;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_process_udptl (switch_core_media_process_udptl)



 local analysis of switch_core_media_process_udptl
   scanning: D.45322_4 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: t38_options_5 = switch_channel_get_private (D.45322_4, "t38_options");
    checking flags for call: neihter
  scanning: if (t38_options_5 == 0B)
  scanning: t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);
    checking flags for call: neihter
  scanning: t38_options_6->T38FaxVersion = 0;
    Indirect ref write is not const/pure
  scanning: t38_options_6->T38MaxBitRate = 14400;
    Indirect ref write is not const/pure
  scanning: D.45325_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);
    checking flags for call: neihter
  scanning: t38_options_6->T38FaxRateManagement = D.45325_7;
    Indirect ref write is not const/pure
  scanning: D.45326_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);
    checking flags for call: neihter
  scanning: t38_options_6->T38FaxUdpEC = D.45326_8;
    Indirect ref write is not const/pure
  scanning: t38_options_6->T38FaxMaxBuffer = 500;
    Indirect ref write is not const/pure
  scanning: t38_options_6->T38FaxMaxDatagram = 500;
    Indirect ref write is not const/pure
  scanning: D.45327_10 = m_9(D)->m_port;
    Indirect ref read is not const
  scanning: D.45328_11 = (short unsigned int) D.45327_10;
  scanning: t38_options_1->remote_port = D.45328_11;
    Indirect ref write is not const/pure
  scanning: D.45329_13 = sdp_12(D)->sdp_origin;
    Indirect ref read is not const
  scanning: if (D.45329_13 != 0B)
  scanning: D.45329_14 = sdp_12(D)->sdp_origin;
    Indirect ref read is not const
  scanning: D.45332_15 = D.45329_14->o_username;
    Indirect ref read is not const
  scanning: D.45333_16 = switch_core_perform_session_strdup (session_3(D), D.45332_15, "src/switch_core_media.c", &__func__, 383);
    checking flags for call: neihter
  scanning: t38_options_1->sdp_o_line = D.45333_16;
    Indirect ref write is not const/pure
  scanning: t38_options_1->sdp_o_line = "unknown";
    Indirect ref write is not const/pure
  scanning: D.45337_17 = m_9(D)->m_connections;
    Indirect ref read is not const
  scanning: if (D.45337_17 != 0B)
  scanning: D.45337_18 = m_9(D)->m_connections;
    Indirect ref read is not const
  scanning: D.45339_19 = D.45337_18->c_address;
    Indirect ref read is not const
  scanning: if (D.45339_19 != 0B)
  scanning: D.45337_20 = m_9(D)->m_connections;
    Indirect ref read is not const
  scanning: D.45339_21 = D.45337_20->c_address;
    Indirect ref read is not const
  scanning: D.45341_22 = switch_core_perform_session_strdup (session_3(D), D.45339_21, "src/switch_core_media.c", &__func__, 389);
    checking flags for call: neihter
  scanning: t38_options_1->remote_ip = D.45341_22;
    Indirect ref write is not const/pure
  scanning: if (sdp_12(D) != 0B)
  scanning: D.45344_23 = sdp_12(D)->sdp_connection;
    Indirect ref read is not const
  scanning: if (D.45344_23 != 0B)
  scanning: D.45344_24 = sdp_12(D)->sdp_connection;
    Indirect ref read is not const
  scanning: D.45347_25 = D.45344_24->c_address;
    Indirect ref read is not const
  scanning: if (D.45347_25 != 0B)
  scanning: D.45344_26 = sdp_12(D)->sdp_connection;
    Indirect ref read is not const
  scanning: D.45347_27 = D.45344_26->c_address;
    Indirect ref read is not const
  scanning: D.45350_28 = switch_core_perform_session_strdup (session_3(D), D.45347_27, "src/switch_core_media.c", &__func__, 391);
    checking flags for call: neihter
  scanning: t38_options_1->remote_ip = D.45350_28;
    Indirect ref write is not const/pure
  scanning: attr_29 = m_9(D)->m_attributes;
    Indirect ref read is not const
  scanning: D.45353_30 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45354_31 = strcasecmp (D.45353_30, "T38FaxVersion");
    checking flags for call: pure
  scanning: if (D.45354_31 == 0)
  scanning: D.45356_32 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_32 != 0B)
  scanning: D.45356_33 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.47300_136 = strtol (D.45356_33, 0B, 10);
    checking flags for call: neihter
  scanning: D.45359_35 = (short unsigned int) D.47300_136;
  scanning: t38_options_1->T38FaxVersion = D.45359_35;
    Indirect ref write is not const/pure
  scanning: D.45353_36 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45362_37 = strcasecmp (D.45353_36, "T38MaxBitRate");
    checking flags for call: pure
  scanning: if (D.45362_37 == 0)
  scanning: D.45356_38 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_38 != 0B)
  scanning: D.45356_39 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.47303_137 = strtol (D.45356_39, 0B, 10);
    checking flags for call: neihter
  scanning: D.45366_41 = (unsigned int) D.47303_137;
  scanning: t38_options_1->T38MaxBitRate = D.45366_41;
    Indirect ref write is not const/pure
  scanning: D.45353_42 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45367_43 = strcasecmp (D.45353_42, "T38FaxFillBitRemoval");
    checking flags for call: pure
  scanning: if (D.45367_43 == 0)
  scanning: D.45356_44 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_44 != 0B)
  scanning: dft_138 = strtol (D.45356_44, 0B, 10);
    checking flags for call: neihter
  scanning: D.45371_46 = (switch_bool_t) dft_139;
  scanning: t38_options_1->T38FaxFillBitRemoval = D.45371_46;
    Indirect ref write is not const/pure
  scanning: D.45353_47 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45373_48 = strcasecmp (D.45353_47, "T38FaxTranscodingMMR");
    checking flags for call: pure
  scanning: if (D.45373_48 == 0)
  scanning: D.45356_49 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_49 != 0B)
  scanning: dft_140 = strtol (D.45356_49, 0B, 10);
    checking flags for call: neihter
  scanning: D.45377_51 = (switch_bool_t) dft_141;
  scanning: t38_options_1->T38FaxTranscodingMMR = D.45377_51;
    Indirect ref write is not const/pure
  scanning: D.45353_52 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45379_53 = strcasecmp (D.45353_52, "T38FaxTranscodingJBIG");
    checking flags for call: pure
  scanning: if (D.45379_53 == 0)
  scanning: D.45356_54 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_54 != 0B)
  scanning: dft_142 = strtol (D.45356_54, 0B, 10);
    checking flags for call: neihter
  scanning: D.45383_56 = (switch_bool_t) dft_143;
  scanning: t38_options_1->T38FaxTranscodingJBIG = D.45383_56;
    Indirect ref write is not const/pure
  scanning: D.45353_57 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45387_58 = strcasecmp (D.45353_57, "T38FaxRateManagement");
    checking flags for call: pure
  scanning: if (D.45387_58 == 0)
  scanning: D.45356_59 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_59 != 0B)
  scanning: D.45356_60 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.45390_61 = switch_core_perform_session_strdup (session_3(D), D.45356_60, "src/switch_core_media.c", &__func__, 406);
    checking flags for call: neihter
  scanning: t38_options_1->T38FaxRateManagement = D.45390_61;
    Indirect ref write is not const/pure
  scanning: D.45353_62 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45393_63 = strcasecmp (D.45353_62, "T38FaxMaxBuffer");
    checking flags for call: pure
  scanning: if (D.45393_63 == 0)
  scanning: D.45356_64 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_64 != 0B)
  scanning: D.45356_65 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.47315_144 = strtol (D.45356_65, 0B, 10);
    checking flags for call: neihter
  scanning: D.45397_67 = (unsigned int) D.47315_144;
  scanning: t38_options_1->T38FaxMaxBuffer = D.45397_67;
    Indirect ref write is not const/pure
  scanning: D.45353_68 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45400_69 = strcasecmp (D.45353_68, "T38FaxMaxDatagram");
    checking flags for call: pure
  scanning: if (D.45400_69 == 0)
  scanning: D.45356_70 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_70 != 0B)
  scanning: D.45356_71 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.47318_145 = strtol (D.45356_71, 0B, 10);
    checking flags for call: neihter
  scanning: D.45404_73 = (unsigned int) D.47318_145;
  scanning: t38_options_1->T38FaxMaxDatagram = D.45404_73;
    Indirect ref write is not const/pure
  scanning: D.45353_74 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45407_75 = strcasecmp (D.45353_74, "T38FaxUdpEC");
    checking flags for call: pure
  scanning: if (D.45407_75 == 0)
  scanning: D.45356_76 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_76 != 0B)
  scanning: D.45356_77 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.45410_78 = switch_core_perform_session_strdup (session_3(D), D.45356_77, "src/switch_core_media.c", &__func__, 412);
    checking flags for call: neihter
  scanning: t38_options_1->T38FaxUdpEC = D.45410_78;
    Indirect ref write is not const/pure
  scanning: D.45353_79 = attr_2->a_name;
    Indirect ref read is not const
  scanning: D.45411_80 = strcasecmp (D.45353_79, "T38VendorInfo");
    checking flags for call: pure
  scanning: if (D.45411_80 == 0)
  scanning: D.45356_81 = attr_2->a_value;
    Indirect ref read is not const
  scanning: if (D.45356_81 != 0B)
  scanning: D.45356_82 = attr_2->a_value;
    Indirect ref read is not const
  scanning: D.45416_83 = switch_core_perform_session_strdup (session_3(D), D.45356_82, "src/switch_core_media.c", &__func__, 414);
    checking flags for call: neihter
  scanning: t38_options_1->T38VendorInfo = D.45416_83;
    Indirect ref write is not const/pure
  scanning: attr_84 = attr_2->a_next;
    Indirect ref read is not const
  scanning: if (attr_2 != 0B)
  scanning: D.45322_85 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.45322_85, "has_t38", "true", 1);
    checking flags for call: neihter
  scanning: D.45322_86 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_private (D.45322_86, "t38_options", t38_options_1);
    checking flags for call: neihter
  scanning: D.45322_87 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_app_flag_key ("T38", D.45322_87, 2);
    checking flags for call: neihter
  scanning: D.45322_88 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_execute_on (D.45322_88, "sip_execute_on_image");
    checking flags for call: neihter
  scanning: D.45322_89 = session_3(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_api_on (D.45322_89, "sip_api_on_image");
    checking flags for call: neihter
  scanning: return t38_options_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_process_udptl

;; Function switch_core_media_process_udptl

;; 
51 basic blocks, 78 edges, last basic block 51.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [6.7%]  (true,exec) 4 [93.3%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [6.7%]  (true,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [93.3%]  (false,exec) 3 [100.0%]  (fallthru,exec)
Successors:  5 [69.8%]  (true,exec) 6 [30.2%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [69.8%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [30.2%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
Successors:  8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [69.8%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  7 [15.0%]  (false,exec) 8 [30.2%]  (false,exec)
Successors:  11 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  12 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec)
Successors:  13 [69.8%]  (true,exec) 14 [30.2%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [69.8%]  (true,exec)
Successors:  14 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [100.0%]  (fallthru,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  49 [91.0%]  (true,exec)
Successors:  16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec)
Successors:  17 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec) 16 [30.2%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (true,exec)
Successors:  20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec) 19 [30.2%]  (false,exec)
Successors:  22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [69.8%]  (true,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  22 [30.2%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  26 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [50.0%]  (true,exec)
Successors:  27 [69.8%]  (true,exec) 28 [30.2%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [69.8%]  (true,exec)
Successors:  28 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  26 [30.2%]  (false,exec) 27 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  25 [50.0%]  (false,exec)
Successors:  30 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec)
Successors:  31 [69.8%]  (true,exec) 32 [30.2%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [69.8%]  (true,exec)
Successors:  32 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  30 [30.2%]  (false,exec) 31 [100.0%]  (fallthru,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  29 [50.0%]  (false,exec)
Successors:  34 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [50.0%]  (true,exec)
Successors:  35 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  33 [50.0%]  (false,exec) 34 [30.2%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec) 37 [30.2%]  (false,exec)
Successors:  40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  41 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec) 40 [30.2%]  (false,exec)
Successors:  43 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [50.0%]  (true,exec)
Successors:  44 [69.8%]  (true,exec) 45 [30.2%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  42 [50.0%]  (false,exec) 43 [30.2%]  (false,exec)
Successors:  46 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [69.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  17 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 41 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 45 [50.0%]  (false,exec) 46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [100.0%]  (fallthru,dfs_back,exec)

Basic block 49 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 48 [100.0%]  (fallthru,dfs_back,exec)
Successors:  15 [91.0%]  (true,exec) 50 [9.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [9.0%]  (false,exec)
Successors:  EXIT [100.0%] 


switch_core_media_process_udptl (struct switch_core_session_t * session, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47318;
  int D.47315;
  int dft;
  int dft;
  int dft;
  int D.47303;
  int D.47300;
  static const char __func__[32] = "switch_core_media_process_udptl";
  struct sdp_attribute_t * attr;
  struct switch_t38_options_t * t38_options;
  char * D.45416;
  int D.45411;
  char * D.45410;
  int D.45407;
  unsigned int D.45404;
  int D.45400;
  unsigned int D.45397;
  int D.45393;
  char * D.45390;
  int D.45387;
  switch_bool_t D.45383;
  int D.45379;
  switch_bool_t D.45377;
  int D.45373;
  switch_bool_t D.45371;
  int D.45367;
  unsigned int D.45366;
  int D.45362;
  short unsigned int D.45359;
  const char * D.45356;
  int D.45354;
  const char * D.45353;
  char * D.45350;
  const char * D.45347;
  struct sdp_connection_t * D.45344;
  char * D.45341;
  const char * D.45339;
  struct sdp_connection_t * D.45337;
  char * D.45333;
  const char * D.45332;
  struct sdp_origin_t * D.45329;
  short unsigned int D.45328;
  long unsigned int D.45327;
  char * D.45326;
  char * D.45325;
  struct switch_channel_t * D.45322;

  # BLOCK 2 freq:900
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.45322_4 = session_3(D)->channel;
  t38_options_5 = switch_channel_get_private (D.45322_4, "t38_options");
  # DEBUG t38_options => t38_options_5
  if (t38_options_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [6.7%]  (true,exec) 4 [93.3%]  (false,exec)

  # BLOCK 3 freq:60
  # PRED: 2 [6.7%]  (true,exec)
  t38_options_6 = switch_core_perform_session_alloc (session_3(D), 60, "src/switch_core_media.c", &__func__, 369);
  # DEBUG t38_options => t38_options_6
  t38_options_6->T38FaxVersion = 0;
  t38_options_6->T38MaxBitRate = 14400;
  D.45325_7 = switch_core_perform_session_strdup (session_3(D), "transferredTCF", "src/switch_core_media.c", &__func__, 374);
  t38_options_6->T38FaxRateManagement = D.45325_7;
  D.45326_8 = switch_core_perform_session_strdup (session_3(D), "t38UDPRedundancy", "src/switch_core_media.c", &__func__, 375);
  t38_options_6->T38FaxUdpEC = D.45326_8;
  t38_options_6->T38FaxMaxBuffer = 500;
  t38_options_6->T38FaxMaxDatagram = 500;
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:900
  # PRED: 2 [93.3%]  (false,exec) 3 [100.0%]  (fallthru,exec)
  # t38_options_1 = PHI <t38_options_5(2), t38_options_6(3)>
  # DEBUG t38_options => t38_options_1
  D.45327_10 = m_9(D)->m_port;
  D.45328_11 = (short unsigned int) D.45327_10;
  t38_options_1->remote_port = D.45328_11;
  D.45329_13 = sdp_12(D)->sdp_origin;
  if (D.45329_13 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [69.8%]  (true,exec) 6 [30.2%]  (false,exec)

  # BLOCK 5 freq:628
  # PRED: 4 [69.8%]  (true,exec)
  D.45329_14 = sdp_12(D)->sdp_origin;
  D.45332_15 = D.45329_14->o_username;
  D.45333_16 = switch_core_perform_session_strdup (session_3(D), D.45332_15, "src/switch_core_media.c", &__func__, 383);
  t38_options_1->sdp_o_line = D.45333_16;
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:272
  # PRED: 4 [30.2%]  (false,exec)
  t38_options_1->sdp_o_line = "unknown";
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:900
  # PRED: 5 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
  D.45337_17 = m_9(D)->m_connections;
  if (D.45337_17 != 0B)
    goto <bb 8>;
  else
    goto <bb 10>;
  # SUCC: 8 [85.0%]  (true,exec) 10 [15.0%]  (false,exec)

  # BLOCK 8 freq:765
  # PRED: 7 [85.0%]  (true,exec)
  D.45337_18 = m_9(D)->m_connections;
  D.45339_19 = D.45337_18->c_address;
  if (D.45339_19 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

  # BLOCK 9 freq:534
  # PRED: 8 [69.8%]  (true,exec)
  D.45337_20 = m_9(D)->m_connections;
  D.45339_21 = D.45337_20->c_address;
  D.45341_22 = switch_core_perform_session_strdup (session_3(D), D.45339_21, "src/switch_core_media.c", &__func__, 389);
  t38_options_1->remote_ip = D.45341_22;
  goto <bb 14>;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:366
  # PRED: 7 [15.0%]  (false,exec) 8 [30.2%]  (false,exec)
  if (sdp_12(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 14>;
  # SUCC: 11 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 11 freq:311
  # PRED: 10 [85.0%]  (true,exec)
  D.45344_23 = sdp_12(D)->sdp_connection;
  if (D.45344_23 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 12 freq:264
  # PRED: 11 [85.0%]  (true,exec)
  D.45344_24 = sdp_12(D)->sdp_connection;
  D.45347_25 = D.45344_24->c_address;
  if (D.45347_25 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [69.8%]  (true,exec) 14 [30.2%]  (false,exec)

  # BLOCK 13 freq:185
  # PRED: 12 [69.8%]  (true,exec)
  D.45344_26 = sdp_12(D)->sdp_connection;
  D.45347_27 = D.45344_26->c_address;
  D.45350_28 = switch_core_perform_session_strdup (session_3(D), D.45347_27, "src/switch_core_media.c", &__func__, 391);
  t38_options_1->remote_ip = D.45350_28;
  # SUCC: 14 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:900
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [15.0%]  (false,exec) 11 [15.0%]  (false,exec) 12 [30.2%]  (false,exec) 13 [100.0%]  (fallthru,exec)
  attr_29 = m_9(D)->m_attributes;
  # DEBUG attr => attr_29
  goto <bb 49>;
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:9100
  # PRED: 49 [91.0%]  (true,exec)
  D.45353_30 = attr_2->a_name;
  D.45354_31 = strcasecmp (D.45353_30, "T38FaxVersion");
  if (D.45354_31 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 16 freq:4550
  # PRED: 15 [50.0%]  (true,exec)
  D.45356_32 = attr_2->a_value;
  if (D.45356_32 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [69.8%]  (true,exec) 18 [30.2%]  (false,exec)

  # BLOCK 17 freq:3177
  # PRED: 16 [69.8%]  (true,exec)
  D.45356_33 = attr_2->a_value;
  # DEBUG __nptr => D.45356_33
  D.47300_136 = strtol (D.45356_33, 0B, 10);
  D.45359_35 = (short unsigned int) D.47300_136;
  t38_options_1->T38FaxVersion = D.45359_35;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:5923
  # PRED: 15 [50.0%]  (false,exec) 16 [30.2%]  (false,exec)
  D.45353_36 = attr_2->a_name;
  D.45362_37 = strcasecmp (D.45353_36, "T38MaxBitRate");
  if (D.45362_37 == 0)
    goto <bb 19>;
  else
    goto <bb 21>;
  # SUCC: 19 [50.0%]  (true,exec) 21 [50.0%]  (false,exec)

  # BLOCK 19 freq:2961
  # PRED: 18 [50.0%]  (true,exec)
  D.45356_38 = attr_2->a_value;
  if (D.45356_38 != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [69.8%]  (true,exec) 21 [30.2%]  (false,exec)

  # BLOCK 20 freq:2068
  # PRED: 19 [69.8%]  (true,exec)
  D.45356_39 = attr_2->a_value;
  # DEBUG __nptr => D.45356_39
  D.47303_137 = strtol (D.45356_39, 0B, 10);
  D.45366_41 = (unsigned int) D.47303_137;
  t38_options_1->T38MaxBitRate = D.45366_41;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:3855
  # PRED: 18 [50.0%]  (false,exec) 19 [30.2%]  (false,exec)
  D.45353_42 = attr_2->a_name;
  D.45367_43 = strcasecmp (D.45353_42, "T38FaxFillBitRemoval");
  if (D.45367_43 == 0)
    goto <bb 22>;
  else
    goto <bb 25>;
  # SUCC: 22 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 22 freq:1927
  # PRED: 21 [50.0%]  (true,exec)
  D.45356_44 = attr_2->a_value;
  # DEBUG nptr => D.45356_44
  # DEBUG dft => 1
  if (D.45356_44 != 0B)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [69.8%]  (true,exec) 24 [30.2%]  (false,exec)

  # BLOCK 23 freq:1346
  # PRED: 22 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45356_44
  dft_138 = strtol (D.45356_44, 0B, 10);
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:1927
  # PRED: 22 [30.2%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  # dft_139 = PHI <1(22), dft_138(23)>
  D.45371_46 = (switch_bool_t) dft_139;
  t38_options_1->T38FaxFillBitRemoval = D.45371_46;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1927
  # PRED: 21 [50.0%]  (false,exec)
  D.45353_47 = attr_2->a_name;
  D.45373_48 = strcasecmp (D.45353_47, "T38FaxTranscodingMMR");
  if (D.45373_48 == 0)
    goto <bb 26>;
  else
    goto <bb 29>;
  # SUCC: 26 [50.0%]  (true,exec) 29 [50.0%]  (false,exec)

  # BLOCK 26 freq:964
  # PRED: 25 [50.0%]  (true,exec)
  D.45356_49 = attr_2->a_value;
  # DEBUG nptr => D.45356_49
  # DEBUG dft => 1
  if (D.45356_49 != 0B)
    goto <bb 27>;
  else
    goto <bb 28>;
  # SUCC: 27 [69.8%]  (true,exec) 28 [30.2%]  (false,exec)

  # BLOCK 27 freq:673
  # PRED: 26 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45356_49
  dft_140 = strtol (D.45356_49, 0B, 10);
  # SUCC: 28 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:964
  # PRED: 26 [30.2%]  (false,exec) 27 [100.0%]  (fallthru,exec)
  # dft_141 = PHI <1(26), dft_140(27)>
  D.45377_51 = (switch_bool_t) dft_141;
  t38_options_1->T38FaxTranscodingMMR = D.45377_51;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:964
  # PRED: 25 [50.0%]  (false,exec)
  D.45353_52 = attr_2->a_name;
  D.45379_53 = strcasecmp (D.45353_52, "T38FaxTranscodingJBIG");
  if (D.45379_53 == 0)
    goto <bb 30>;
  else
    goto <bb 33>;
  # SUCC: 30 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 30 freq:482
  # PRED: 29 [50.0%]  (true,exec)
  D.45356_54 = attr_2->a_value;
  # DEBUG nptr => D.45356_54
  # DEBUG dft => 1
  if (D.45356_54 != 0B)
    goto <bb 31>;
  else
    goto <bb 32>;
  # SUCC: 31 [69.8%]  (true,exec) 32 [30.2%]  (false,exec)

  # BLOCK 31 freq:336
  # PRED: 30 [69.8%]  (true,exec)
  # DEBUG __nptr => D.45356_54
  dft_142 = strtol (D.45356_54, 0B, 10);
  # SUCC: 32 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:482
  # PRED: 30 [30.2%]  (false,exec) 31 [100.0%]  (fallthru,exec)
  # dft_143 = PHI <1(30), dft_142(31)>
  D.45383_56 = (switch_bool_t) dft_143;
  t38_options_1->T38FaxTranscodingJBIG = D.45383_56;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:482
  # PRED: 29 [50.0%]  (false,exec)
  D.45353_57 = attr_2->a_name;
  D.45387_58 = strcasecmp (D.45353_57, "T38FaxRateManagement");
  if (D.45387_58 == 0)
    goto <bb 34>;
  else
    goto <bb 36>;
  # SUCC: 34 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 34 freq:241
  # PRED: 33 [50.0%]  (true,exec)
  D.45356_59 = attr_2->a_value;
  if (D.45356_59 != 0B)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

  # BLOCK 35 freq:168
  # PRED: 34 [69.8%]  (true,exec)
  D.45356_60 = attr_2->a_value;
  D.45390_61 = switch_core_perform_session_strdup (session_3(D), D.45356_60, "src/switch_core_media.c", &__func__, 406);
  t38_options_1->T38FaxRateManagement = D.45390_61;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:314
  # PRED: 33 [50.0%]  (false,exec) 34 [30.2%]  (false,exec)
  D.45353_62 = attr_2->a_name;
  D.45393_63 = strcasecmp (D.45353_62, "T38FaxMaxBuffer");
  if (D.45393_63 == 0)
    goto <bb 37>;
  else
    goto <bb 39>;
  # SUCC: 37 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 37 freq:157
  # PRED: 36 [50.0%]  (true,exec)
  D.45356_64 = attr_2->a_value;
  if (D.45356_64 != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [69.8%]  (true,exec) 39 [30.2%]  (false,exec)

  # BLOCK 38 freq:109
  # PRED: 37 [69.8%]  (true,exec)
  D.45356_65 = attr_2->a_value;
  # DEBUG __nptr => D.45356_65
  D.47315_144 = strtol (D.45356_65, 0B, 10);
  D.45397_67 = (unsigned int) D.47315_144;
  t38_options_1->T38FaxMaxBuffer = D.45397_67;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:204
  # PRED: 36 [50.0%]  (false,exec) 37 [30.2%]  (false,exec)
  D.45353_68 = attr_2->a_name;
  D.45400_69 = strcasecmp (D.45353_68, "T38FaxMaxDatagram");
  if (D.45400_69 == 0)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 40 freq:102
  # PRED: 39 [50.0%]  (true,exec)
  D.45356_70 = attr_2->a_value;
  if (D.45356_70 != 0B)
    goto <bb 41>;
  else
    goto <bb 42>;
  # SUCC: 41 [69.8%]  (true,exec) 42 [30.2%]  (false,exec)

  # BLOCK 41 freq:71
  # PRED: 40 [69.8%]  (true,exec)
  D.45356_71 = attr_2->a_value;
  # DEBUG __nptr => D.45356_71
  D.47318_145 = strtol (D.45356_71, 0B, 10);
  D.45404_73 = (unsigned int) D.47318_145;
  t38_options_1->T38FaxMaxDatagram = D.45404_73;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:133
  # PRED: 39 [50.0%]  (false,exec) 40 [30.2%]  (false,exec)
  D.45353_74 = attr_2->a_name;
  D.45407_75 = strcasecmp (D.45353_74, "T38FaxUdpEC");
  if (D.45407_75 == 0)
    goto <bb 43>;
  else
    goto <bb 45>;
  # SUCC: 43 [50.0%]  (true,exec) 45 [50.0%]  (false,exec)

  # BLOCK 43 freq:66
  # PRED: 42 [50.0%]  (true,exec)
  D.45356_76 = attr_2->a_value;
  if (D.45356_76 != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [69.8%]  (true,exec) 45 [30.2%]  (false,exec)

  # BLOCK 44 freq:46
  # PRED: 43 [69.8%]  (true,exec)
  D.45356_77 = attr_2->a_value;
  D.45410_78 = switch_core_perform_session_strdup (session_3(D), D.45356_77, "src/switch_core_media.c", &__func__, 412);
  t38_options_1->T38FaxUdpEC = D.45410_78;
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:86
  # PRED: 42 [50.0%]  (false,exec) 43 [30.2%]  (false,exec)
  D.45353_79 = attr_2->a_name;
  D.45411_80 = strcasecmp (D.45353_79, "T38VendorInfo");
  if (D.45411_80 == 0)
    goto <bb 46>;
  else
    goto <bb 48>;
  # SUCC: 46 [50.0%]  (true,exec) 48 [50.0%]  (false,exec)

  # BLOCK 46 freq:43
  # PRED: 45 [50.0%]  (true,exec)
  D.45356_81 = attr_2->a_value;
  if (D.45356_81 != 0B)
    goto <bb 47>;
  else
    goto <bb 48>;
  # SUCC: 47 [69.8%]  (true,exec) 48 [30.2%]  (false,exec)

  # BLOCK 47 freq:30
  # PRED: 46 [69.8%]  (true,exec)
  D.45356_82 = attr_2->a_value;
  D.45416_83 = switch_core_perform_session_strdup (session_3(D), D.45356_82, "src/switch_core_media.c", &__func__, 414);
  t38_options_1->T38VendorInfo = D.45416_83;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:9100
  # PRED: 17 [100.0%]  (fallthru,exec) 20 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec) 28 [100.0%]  (fallthru,exec) 32 [100.0%]  (fallthru,exec) 35 [100.0%]  (fallthru,exec) 38 [100.0%]  (fallthru,exec) 41 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,exec) 45 [50.0%]  (false,exec) 46 [30.2%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  attr_84 = attr_2->a_next;
  # DEBUG attr => attr_84
  # SUCC: 49 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 49 freq:10000
  # PRED: 14 [100.0%]  (fallthru,exec) 48 [100.0%]  (fallthru,dfs_back,exec)
  # attr_2 = PHI <attr_29(14), attr_84(48)>
  # DEBUG attr => attr_2
  if (attr_2 != 0B)
    goto <bb 15>;
  else
    goto <bb 50>;
  # SUCC: 15 [91.0%]  (true,exec) 50 [9.0%]  (false,exec)

  # BLOCK 50 freq:900
  # PRED: 49 [9.0%]  (false,exec)
  D.45322_85 = session_3(D)->channel;
  switch_channel_set_variable_var_check (D.45322_85, "has_t38", "true", 1);
  D.45322_86 = session_3(D)->channel;
  switch_channel_set_private (D.45322_86, "t38_options", t38_options_1);
  D.45322_87 = session_3(D)->channel;
  switch_channel_set_app_flag_key ("T38", D.45322_87, 2);
  D.45322_88 = session_3(D)->channel;
  switch_channel_execute_on (D.45322_88, "sip_execute_on_image");
  D.45322_89 = session_3(D)->channel;
  switch_channel_api_on (D.45322_89, "sip_api_on_image");
  return t38_options_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_build_crypto (switch_core_media_build_crypto)



 local analysis of switch_core_media_build_crypto
   scanning: b64_key = "";
  scanning: if (smh_7(D) == 0B)
  scanning: __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);
    checking flags for call: ignoring side effects->pure looping
  scanning: D.46675_8 = smh_7(D)->session;
    Indirect ref read is not const
  scanning: channel_9 = switch_core_session_get_channel (D.46675_8);
    checking flags for call: neihter
  scanning: engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};
  scanning: if (force_14(D) == 0)
  scanning: D.46680_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
    Indirect ref read is not const
  scanning: if (D.46680_16 != 0)
  scanning: if (direction_18(D) == 0)
  scanning: key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
  scanning: key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
  scanning: D.46687_21 = SUITES[ctype_15(D)].keylen;
    static memory read is not const
  scanning: D.46688_22 = (uint32_t) D.46687_21;
  scanning: switch_rtp_get_random (key_2, D.46688_22);
    checking flags for call: neihter
  scanning: D.46687_23 = SUITES[ctype_15(D)].keylen;
    static memory read is not const
  scanning: D.46689_24 = (switch_size_t) D.46687_23;
  scanning: switch_b64_encode (key_2, D.46689_24, &b64_key, 512);
    checking flags for call: neihter
  scanning: p_25 = strrchr (&b64_key, 61);
    checking flags for call: pure
  scanning: *p_3 = 0;
    Indirect ref write is not const/pure
  scanning: p_28 = p_3 + -1;
  scanning: if (p_3 != 0B)
  scanning: D.46691_26 = *p_3;
    Indirect ref read is not const
  scanning: if (D.46691_26 != 0)
  scanning: D.46691_27 = *p_3;
    Indirect ref read is not const
  scanning: if (D.46691_27 == 61)
  scanning: if (index_29(D) == 0)
  scanning: D.46695_30 = ctype_15(D) + 1;
  scanning: index_31 = (int) D.46695_30;
  scanning: D.46675_32 = smh_7(D)->session;
    Indirect ref read is not const
  scanning: D.46696_33 = SUITES[ctype_15(D)].name;
    static memory read is not const
  scanning: D.46697_34 = switch_core_session_sprintf (D.46675_32, "%d %s inline:%s", index_1, D.46696_33, &b64_key);
    checking flags for call: neihter
  scanning: engine_13->ssec[ctype_15(D)].local_crypto_key = D.46697_34;
    Indirect ref write is not const/pure
  scanning: D.46675_35 = smh_7(D)->session;
    Indirect ref read is not const
  scanning: D.46698_36 = D.46675_35->channel;
    Indirect ref read is not const
  scanning: D.46699_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
    Indirect ref read is not const
  scanning: if (type_11(D) == 1)
  scanning: switch_channel_set_variable_name_printf (D.46698_36, D.46699_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);
    checking flags for call: neihter
  scanning: D.46675_40 = smh_7(D)->session;
    Indirect ref read is not const
  scanning: D.46698_41 = D.46675_40->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_flag_value (D.46698_41, 92, 1);
    checking flags for call: neihter
  scanning: D.46675_42 = smh_7(D)->session;
    Indirect ref read is not const
  scanning: if (type_11(D) == 1)
  scanning: D.46699_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46675_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46699_45);
    checking flags for call: neihter
  scanning: D.46711_46 = smh_7(D)->mparams;
    Indirect ref read is not const
  scanning: D.46712_47 = D.46711_46->ndlb;
    Indirect ref read is not const
  scanning: D.46713_48 = D.46712_47 & 8;
  scanning: if (D.46713_48 == 0)
  scanning: val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);
    checking flags for call: neihter
  scanning: if (val_49 == 0B)
  scanning: D.46716_50 = switch_true (val_49);
    checking flags for call: neihter
  scanning: if (D.46716_50 == 0)
  scanning: engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);
    Indirect ref write is not const/pure
  scanning: engine_13->ssec[ctype_15(D)].crypto_type = 8;
    Indirect ref write is not const/pure
  scanning: return 0;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_build_crypto

;; Function switch_core_media_build_crypto

;; 
26 basic blocks, 37 edges, last basic block 26.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (true,exec)
Successors:  25 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec) 5 [61.0%]  (false,exec)
Successors:  7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [50.0%]  (false,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  13 [97.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,dfs_back,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
Successors:  12 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [97.0%]  (true,exec)
Successors:  13 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [97.0%]  (true,exec)
Successors:  10 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  11 [3.0%]  (false,exec) 12 [3.0%]  (false,exec) 13 [3.0%]  (false,exec)
Successors:  15 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [50.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
Successors:  18 [28.0%]  (true,exec) 17 [72.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [72.0%]  (false,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [28.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
Successors:  20 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [72.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [28.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
Successors:  21 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  23 [21.6%]  (true,exec) 22 [78.3%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [78.3%]  (false,exec)
Successors:  23 [39.0%]  (true,exec) 24 [61.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [21.6%]  (true,exec) 22 [39.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 22 [61.0%]  (false,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  5 [39.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_build_crypto (struct switch_media_handle_t * smh, switch_media_type_t type, int index, switch_rtp_crypto_key_type_t ctype, switch_rtp_crypto_direction_t direction, int force)
{
  static const char __func__[31] = "switch_core_media_build_crypto";
  static const char __PRETTY_FUNCTION__[31] = "switch_core_media_build_crypto";
  struct switch_rtp_engine_t * engine;
  char * p;
  struct switch_channel_t * channel;
  const char * val;
  unsigned char * key;
  unsigned char b64_key[512];
  int D.46716;
  unsigned int D.46713;
  switch_core_media_NDLB_t D.46712;
  struct switch_core_media_params_t * D.46711;
  char * iftmp.165;
  char * iftmp.164;
  char * D.46699;
  struct switch_channel_t * D.46698;
  char * D.46697;
  char * D.46696;
  unsigned int D.46695;
  char D.46691;
  switch_size_t D.46689;
  uint32_t D.46688;
  int D.46687;
  unsigned char D.46680;
  struct switch_core_session_t * D.46675;

  # BLOCK 2 freq:1085
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  b64_key = "";
  if (smh_7(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("smh", "src/switch_core_media.c", 869, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:1085
  # PRED: 2 [100.0%]  (false,exec)
  D.46675_8 = smh_7(D)->session;
  channel_9 = switch_core_session_get_channel (D.46675_8);
  # DEBUG channel => channel_9
  engine_13 = &smh_7(D)->engines[type_11(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_13
  if (force_14(D) == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 [50.0%]  (true,exec) 6 [50.0%]  (false,exec)

  # BLOCK 5 freq:542
  # PRED: 4 [50.0%]  (true,exec)
  D.46680_16 = engine_13->ssec[ctype_15(D)].local_raw_key[0];
  if (D.46680_16 != 0)
    goto <bb 25>;
  else
    goto <bb 6>;
  # SUCC: 25 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:873
  # PRED: 4 [50.0%]  (false,exec) 5 [61.0%]  (false,exec)
  if (direction_18(D) == 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 7 freq:437
  # PRED: 6 [50.0%]  (true,exec)
  key_19 = &engine_13->ssec[ctype_15(D)].local_raw_key;
  # DEBUG key => key_19
  goto <bb 9>;
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:437
  # PRED: 6 [50.0%]  (false,exec)
  key_20 = &engine_13->ssec[ctype_15(D)].remote_raw_key;
  # DEBUG key => key_20
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:873
  # PRED: 7 [100.0%]  (fallthru,exec) 8 [100.0%]  (fallthru,exec)
  # key_2 = PHI <key_19(7), key_20(8)>
  # DEBUG key => key_2
  D.46687_21 = SUITES[ctype_15(D)].keylen;
  D.46688_22 = (uint32_t) D.46687_21;
  switch_rtp_get_random (key_2, D.46688_22);
  D.46687_23 = SUITES[ctype_15(D)].keylen;
  D.46689_24 = (switch_size_t) D.46687_23;
  switch_b64_encode (key_2, D.46689_24, &b64_key, 512);
  p_25 = strrchr (&b64_key, 61);
  # DEBUG p => p_25
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9127
  # PRED: 13 [97.0%]  (true,exec)
  *p_3 = 0;
  p_28 = p_3 + -1;
  # DEBUG p => p_28
  # SUCC: 11 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 11 freq:10000
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,dfs_back,exec)
  # p_3 = PHI <p_25(9), p_28(10)>
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 12>;
  else
    goto <bb 14>;
  # SUCC: 12 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 12 freq:9700
  # PRED: 11 [97.0%]  (true,exec)
  D.46691_26 = *p_3;
  if (D.46691_26 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 13 freq:9409
  # PRED: 12 [97.0%]  (true,exec)
  D.46691_27 = *p_3;
  if (D.46691_27 == 61)
    goto <bb 10>;
  else
    goto <bb 14>;
  # SUCC: 10 [97.0%]  (true,exec) 14 [3.0%]  (false,exec)

  # BLOCK 14 freq:873
  # PRED: 11 [3.0%]  (false,exec) 12 [3.0%]  (false,exec) 13 [3.0%]  (false,exec)
  if (index_29(D) == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [50.0%]  (true,exec) 16 [50.0%]  (false,exec)

  # BLOCK 15 freq:437
  # PRED: 14 [50.0%]  (true,exec)
  D.46695_30 = ctype_15(D) + 1;
  index_31 = (int) D.46695_30;
  # DEBUG index => index_31
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:873
  # PRED: 14 [50.0%]  (false,exec) 15 [100.0%]  (fallthru,exec)
  # index_1 = PHI <index_29(D)(14), index_31(15)>
  # DEBUG index => index_1
  D.46675_32 = smh_7(D)->session;
  D.46696_33 = SUITES[ctype_15(D)].name;
  D.46697_34 = switch_core_session_sprintf (D.46675_32, "%d %s inline:%s", index_1, D.46696_33, &b64_key);
  engine_13->ssec[ctype_15(D)].local_crypto_key = D.46697_34;
  D.46675_35 = smh_7(D)->session;
  D.46698_36 = D.46675_35->channel;
  D.46699_37 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  if (type_11(D) == 1)
    goto <bb 18>;
  else
    goto <bb 17>;
  # SUCC: 18 [28.0%]  (true,exec) 17 [72.0%]  (false,exec)

  # BLOCK 17 freq:629
  # PRED: 16 [72.0%]  (false,exec)
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:873
  # PRED: 16 [28.0%]  (true,exec) 17 [100.0%]  (fallthru,exec)
  # iftmp.164_5 = PHI <"video"(16), "audio"(17)>
  switch_channel_set_variable_name_printf (D.46698_36, D.46699_37, "rtp_last_%s_local_crypto_key", iftmp.164_5);
  D.46675_40 = smh_7(D)->session;
  D.46698_41 = D.46675_40->channel;
  switch_channel_set_flag_value (D.46698_41, 92, 1);
  D.46675_42 = smh_7(D)->session;
  if (type_11(D) == 1)
    goto <bb 20>;
  else
    goto <bb 19>;
  # SUCC: 20 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

  # BLOCK 19 freq:629
  # PRED: 18 [72.0%]  (false,exec)
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:873
  # PRED: 18 [28.0%]  (true,exec) 19 [100.0%]  (fallthru,exec)
  # iftmp.165_6 = PHI <"video"(18), "audio"(19)>
  D.46699_45 = engine_13->ssec[ctype_15(D)].local_crypto_key;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 916, D.46675_42, 7, "Set Local %s crypto Key [%s]\n", iftmp.165_6, D.46699_45);
  D.46711_46 = smh_7(D)->mparams;
  D.46712_47 = D.46711_46->ndlb;
  D.46713_48 = D.46712_47 & 8;
  if (D.46713_48 == 0)
    goto <bb 21>;
  else
    goto <bb 24>;
  # SUCC: 21 [29.0%]  (true,exec) 24 [71.0%]  (false,exec)

  # BLOCK 21 freq:253
  # PRED: 20 [29.0%]  (true,exec)
  val_49 = switch_channel_get_variable_dup (channel_9, "NDLB_support_asterisk_missing_srtp_auth", 1, -1);
  # DEBUG val => val_49
  if (val_49 == 0B)
    goto <bb 23>;
  else
    goto <bb 22>;
  # SUCC: 23 [21.6%]  (true,exec) 22 [78.3%]  (false,exec)

  # BLOCK 22 freq:198
  # PRED: 21 [78.3%]  (false,exec)
  D.46716_50 = switch_true (val_49);
  if (D.46716_50 == 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 [39.0%]  (true,exec) 24 [61.0%]  (false,exec)

  # BLOCK 23 freq:132
  # PRED: 21 [21.6%]  (true,exec) 22 [39.0%]  (true,exec)
  engine_13->ssec[ctype_15(D)].crypto_type = ctype_15(D);
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:741
  # PRED: 20 [71.0%]  (false,exec) 22 [61.0%]  (false,exec)
  engine_13->ssec[ctype_15(D)].crypto_type = 8;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:1085
  # PRED: 5 [39.0%]  (true,exec) 24 [100.0%]  (fallthru,exec) 23 [100.0%]  (fallthru,exec)
  return 0;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_crypto_str2type (switch_core_media_crypto_str2type)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_get_recovery_crypto_key (switch_core_session_get_recovery_crypto_key)



 local analysis of switch_core_session_get_recovery_crypto_key
   scanning: D.40304_5 = session_4(D)->media_handle;
    Indirect ref read is not const
  scanning: if (D.40304_5 == 0B)
  scanning: D.40304_6 = session_4(D)->media_handle;
    Indirect ref read is not const
  scanning: engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};
  scanning: if (type_8(D) == 0)
  scanning: D.40312_17 = session_4(D)->channel;
    Indirect ref read is not const
  scanning: tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);
    checking flags for call: neihter
  scanning: if (tmp_18 != 0B)
  scanning: D.40312_19 = session_4(D)->channel;
    Indirect ref read is not const
  scanning: tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);
    checking flags for call: neihter
  scanning: if (tmp_20 != 0B)
  scanning: D.40317_21 = switch_core_media_crypto_str2type (tmp_20);
    checking flags for call: neihter
  scanning: engine_10->crypto_type = D.40317_21;
    Indirect ref write is not const/pure
  scanning: D.40318_22 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);
    checking flags for call: neihter
  scanning: engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;
    Indirect ref write is not const/pure
  scanning: D.40312_24 = session_4(D)->channel;
    Indirect ref read is not const
  scanning: tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);
    checking flags for call: neihter
  scanning: if (tmp_25 != 0B)
  scanning: tv_43 = strtol (tmp_25, 0B, 10);
    checking flags for call: neihter
  scanning: D.40318_27 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: engine_10->ssec[D.40318_27].crypto_tag = tv_43;
    Indirect ref write is not const/pure
  scanning: D.40318_28 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: engine_10->ssec[D.40318_28].crypto_tag = 1;
    Indirect ref write is not const/pure
  scanning: D.40312_29 = session_4(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_flag_value (D.40312_29, 92, 1);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_session_get_recovery_crypto_key

;; Function switch_core_session_get_recovery_crypto_key

;; 
13 basic blocks, 17 edges, last basic block 13.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  12 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [89.9%]  (false,exec)
Successors:  5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (false,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
Successors:  6 [78.3%]  (true,exec) 12 [21.6%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [78.3%]  (true,exec)
Successors:  7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [69.8%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [69.8%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  8 [30.2%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  2 [10.1%]  (true,exec) 5 [21.6%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_get_recovery_crypto_key (struct switch_core_session_t * session, switch_media_type_t type)
{
  int tv;
  static const char __func__[44] = "switch_core_session_get_recovery_crypto_key";
  char * ctypevar;
  char * tagvar;
  char * keyvar;
  struct switch_rtp_engine_t * engine;
  const char * tmp;
  char * D.40319;
  switch_rtp_crypto_key_type_t D.40318;
  switch_rtp_crypto_key_type_t D.40317;
  struct switch_channel_t * D.40312;
  struct switch_media_handle_t * D.40304;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.40304_5 = session_4(D)->media_handle;
  if (D.40304_5 == 0B)
    goto <bb 12>;
  else
    goto <bb 3>;
  # SUCC: 12 [10.1%]  (true,exec) 3 [89.9%]  (false,exec)

  # BLOCK 3 freq:8986
  # PRED: 2 [89.9%]  (false,exec)
  D.40304_6 = session_4(D)->media_handle;
  engine_10 = &D.40304_6->engines[type_8(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  if (type_8(D) == 0)
    goto <bb 5>;
  else
    goto <bb 4>;
  # SUCC: 5 [50.0%]  (true,exec) 4 [50.0%]  (false,exec)

  # BLOCK 4 freq:4493
  # PRED: 3 [50.0%]  (false,exec)
  # DEBUG keyvar => "srtp_remote_video_crypto_key"
  # DEBUG tagvar => "srtp_remote_video_crypto_tag"
  # DEBUG ctypevar => "srtp_remote_video_crypto_type"
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:8986
  # PRED: 3 [50.0%]  (true,exec) 4 [100.0%]  (fallthru,exec)
  # keyvar_1 = PHI <"srtp_remote_audio_crypto_key"(3), "srtp_remote_video_crypto_key"(4)>
  # tagvar_2 = PHI <"srtp_remote_audio_crypto_tag"(3), "srtp_remote_video_crypto_tag"(4)>
  # ctypevar_3 = PHI <"srtp_remote_audio_crypto_type"(3), "srtp_remote_video_crypto_type"(4)>
  # DEBUG ctypevar => ctypevar_3
  # DEBUG tagvar => tagvar_2
  # DEBUG keyvar => keyvar_1
  D.40312_17 = session_4(D)->channel;
  tmp_18 = switch_channel_get_variable_dup (D.40312_17, keyvar_1, 1, -1);
  # DEBUG tmp => tmp_18
  if (tmp_18 != 0B)
    goto <bb 6>;
  else
    goto <bb 12>;
  # SUCC: 6 [78.3%]  (true,exec) 12 [21.6%]  (false,exec)

  # BLOCK 6 freq:7041
  # PRED: 5 [78.3%]  (true,exec)
  D.40312_19 = session_4(D)->channel;
  tmp_20 = switch_channel_get_variable_dup (D.40312_19, ctypevar_3, 1, -1);
  # DEBUG tmp => tmp_20
  if (tmp_20 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 7 freq:4916
  # PRED: 6 [69.8%]  (true,exec)
  D.40317_21 = switch_core_media_crypto_str2type (tmp_20);
  engine_10->crypto_type = D.40317_21;
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:7041
  # PRED: 6 [30.2%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  D.40318_22 = engine_10->crypto_type;
  D.40319_23 = switch_core_perform_session_strdup (session_4(D), tmp_20, "src/switch_core_media.c", &__func__, 1015);
  engine_10->ssec[D.40318_22].remote_crypto_key = D.40319_23;
  D.40312_24 = session_4(D)->channel;
  tmp_25 = switch_channel_get_variable_dup (D.40312_24, tagvar_2, 1, -1);
  # DEBUG tmp => tmp_25
  if (tmp_25 != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 [69.8%]  (true,exec) 10 [30.2%]  (false,exec)

  # BLOCK 9 freq:4916
  # PRED: 8 [69.8%]  (true,exec)
  # DEBUG __nptr => tmp_25
  tv_43 = strtol (tmp_25, 0B, 10);
  # DEBUG tv => NULL
  D.40318_27 = engine_10->crypto_type;
  engine_10->ssec[D.40318_27].crypto_tag = tv_43;
  goto <bb 11>;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:2124
  # PRED: 8 [30.2%]  (false,exec)
  D.40318_28 = engine_10->crypto_type;
  engine_10->ssec[D.40318_28].crypto_tag = 1;
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:7041
  # PRED: 9 [100.0%]  (fallthru,exec) 10 [100.0%]  (fallthru,exec)
  D.40312_29 = session_4(D)->channel;
  switch_channel_set_flag_value (D.40312_29, 92, 1);
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:10000
  # PRED: 2 [10.1%]  (true,exec) 5 [21.6%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_crypto_type2str (switch_core_media_crypto_type2str)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_crypto_keylen (switch_core_media_crypto_keylen)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_pass_zrtp_hash2 (switch_core_media_pass_zrtp_hash2)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_pass_zrtp_hash (switch_core_media_pass_zrtp_hash)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_get_zrtp_hash (switch_core_media_get_zrtp_hash)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_extract_t38_options (switch_core_media_extract_t38_options)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_get_payload_code (switch_core_session_get_payload_code)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_add_payload_map (switch_core_media_add_payload_map)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_r_sdp_codec_string (switch_core_media_set_r_sdp_codec_string)



 local analysis of switch_core_media_set_r_sdp_codec_string
   scanning: buf = {};
  scanning: already_did = {};
  scanning: codecs = {};
  scanning: channel_29 = switch_core_session_get_channel (session_28(D));
    checking flags for call: neihter
  scanning: if (session_28(D) == 0B)
  scanning: __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);
    checking flags for call: ignoring side effects->pure looping
  scanning: smh_31 = session_28(D)->media_handle;
    Indirect ref read is not const
  scanning: if (smh_31 == 0B)
  scanning: var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);
    checking flags for call: neihter
  scanning: if (var_32 != 0B)
  scanning: D.40412_33 = switch_true (var_32);
    checking flags for call: neihter
  scanning: if (D.40412_33 != 0)
  scanning: if (codec_string_35(D) == 0B)
  scanning: D.47362_278 = *codec_string_35(D);
    Indirect ref read is not const
  scanning: if (D.47362_278 == 0)
  scanning: if (D.47361_279 == 0)
  scanning: tmp_codec_string_37 = __strdup (codec_string_35(D));
    checking flags for call: neihter
  scanning: if (tmp_codec_string_37 != 0B)
  scanning: D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);
    checking flags for call: neihter
  scanning: num_codecs_39 = (int) D.40420_38;
  scanning: num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);
    checking flags for call: neihter
  scanning: if (tmp_codec_string_37 != 0B)
  scanning: free (tmp_codec_string_37);
    checking flags for call: neihter
  scanning: num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);
    checking flags for call: neihter
  scanning: D.40424_43 = channel_29 == 0B;
  scanning: D.40425_44 = num_codecs_22 == 0;
  scanning: D.40426_45 = D.40424_43 || D.40425_44;
  scanning: if (D.40426_45 != 0)
  scanning: attr_47 = sdp_46(D)->sdp_attributes;
    Indirect ref read is not const
  scanning: D.40429_48 = attr_3->a_name;
    Indirect ref read is not const
  scanning: if (D.40429_48 == 0B)
  scanning: D.47366_280 = *D.40429_48;
    Indirect ref read is not const
  scanning: if (D.47366_280 == 0)
  scanning: if (D.47365_281 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40429_50 = attr_3->a_name;
    Indirect ref read is not const
  scanning: D.40433_51 = strcasecmp (D.40429_50, "ptime");
    checking flags for call: pure
  scanning: if (D.40433_51 == 0)
  scanning: D.40436_52 = attr_3->a_value;
    Indirect ref read is not const
  scanning: dptime_282 = strtol (D.40436_52, 0B, 10);
    checking flags for call: neihter
  scanning: attr_54 = attr_3->a_next;
    Indirect ref read is not const
  scanning: if (attr_3 != 0B)
  scanning: switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));
    checking flags for call: neihter
  scanning: switch_core_media_pass_zrtp_hash (session_28(D));
    checking flags for call: neihter
  scanning: m_55 = sdp_46(D)->sdp_media;
    Indirect ref read is not const
  scanning: D.40437_57 = m_1->m_type;
    Indirect ref read is not const
  scanning: D.40438_58 = D.40437_57 + 4294967294;
  scanning: if (D.40438_58 <= 1)
  scanning: D.40441_59 = m_1->m_port;
    Indirect ref read is not const
  scanning: if (D.40441_59 != 0)
  scanning: map_60 = m_1->m_rtpmaps;
    Indirect ref read is not const
  scanning: attr_61 = m_1->m_attributes;
    Indirect ref read is not const
  scanning: D.40429_62 = attr_4->a_name;
    Indirect ref read is not const
  scanning: if (D.40429_62 == 0B)
  scanning: D.47373_283 = *D.40429_62;
    Indirect ref read is not const
  scanning: if (D.47373_283 == 0)
  scanning: if (D.47372_284 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40429_64 = attr_4->a_name;
    Indirect ref read is not const
  scanning: D.40447_65 = strcasecmp (D.40429_64, "ptime");
    checking flags for call: pure
  scanning: if (D.40447_65 == 0)
  scanning: D.40436_66 = attr_4->a_value;
    Indirect ref read is not const
  scanning: if (D.40436_66 != 0B)
  scanning: D.40436_67 = attr_4->a_value;
    Indirect ref read is not const
  scanning: ptime_285 = strtol (D.40436_67, 0B, 10);
    checking flags for call: neihter
  scanning: attr_69 = attr_4->a_next;
    Indirect ref read is not const
  scanning: if (attr_4 != 0B)
  scanning: D.40437_70 = m_1->m_type;
    Indirect ref read is not const
  scanning: D.40452_71 = D.40437_70 != 2;
  scanning: D.40453_72 = map_12->rm_encoding;
    Indirect ref read is not const
  scanning: D.40454_73 = map_12->rm_fmtp;
    Indirect ref read is not const
  scanning: D.40455_74 = map_12->rm_pt;
    Indirect ref read is not const
  scanning: D.40456_75 = (uint32_t) D.40455_74;
  scanning: D.40457_76 = map_12->rm_rate;
    Indirect ref read is not const
  scanning: ptime.5_77 = (uint32_t) ptime_6;
  scanning: switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);
    checking flags for call: neihter
  scanning: map_79 = map_12->rm_next;
    Indirect ref read is not const
  scanning: if (map_12 != 0B)
  scanning: m_80 = m_1->m_next;
    Indirect ref read is not const
  scanning: if (m_1 != 0B)
  scanning: m_81 = sdp_46(D)->sdp_media;
    Indirect ref read is not const
  scanning: D.40437_83 = m_2->m_type;
    Indirect ref read is not const
  scanning: if (D.40437_83 == 8)
  scanning: D.40441_84 = m_2->m_port;
    Indirect ref read is not const
  scanning: if (D.40441_84 != 0)
  scanning: D.40463_85 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40464_86 = &buf + D.40463_85;
  scanning: D.40465_87 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40466_88 = 1024 - D.40465_87;
  scanning: switch_snprintf (D.40464_86, D.40466_88, ",t38");
    checking flags for call: neihter
  scanning: D.40437_89 = m_2->m_type;
    Indirect ref read is not const
  scanning: if (D.40437_89 == 2)
  scanning: D.40441_90 = m_2->m_port;
    Indirect ref read is not const
  scanning: if (D.40441_90 != 0)
  scanning: attr_91 = m_2->m_attributes;
    Indirect ref read is not const
  scanning: D.40429_92 = attr_5->a_name;
    Indirect ref read is not const
  scanning: if (D.40429_92 == 0B)
  scanning: D.47380_286 = *D.40429_92;
    Indirect ref read is not const
  scanning: if (D.47380_286 == 0)
  scanning: if (D.47379_287 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40429_94 = attr_5->a_name;
    Indirect ref read is not const
  scanning: D.40474_95 = strcasecmp (D.40429_94, "ptime");
    checking flags for call: pure
  scanning: if (D.40474_95 == 0)
  scanning: D.40436_96 = attr_5->a_value;
    Indirect ref read is not const
  scanning: if (D.40436_96 != 0B)
  scanning: D.40436_97 = attr_5->a_value;
    Indirect ref read is not const
  scanning: ptime_288 = strtol (D.40436_97, 0B, 10);
    checking flags for call: neihter
  scanning: attr_99 = attr_5->a_next;
    Indirect ref read is not const
  scanning: if (attr_5 != 0B)
  scanning: connection_100 = sdp_46(D)->sdp_connection;
    Indirect ref read is not const
  scanning: D.40479_101 = m_2->m_connections;
    Indirect ref read is not const
  scanning: if (D.40479_101 != 0B)
  scanning: connection_102 = m_2->m_connections;
    Indirect ref read is not const
  scanning: if (connection_10 == 0B)
  scanning: D.40484_103 = switch_channel_get_session (channel_29);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");
    checking flags for call: neihter
  scanning: D.40487_104 = switch_channel_direction (channel_29);
    checking flags for call: neihter
  scanning: if (D.40487_104 == 0)
  scanning: if (prefer_sdp_23 != 0)
  scanning: map_141 = m_2->m_rtpmaps;
    Indirect ref read is not const
  scanning: D.40455_142 = map_13->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_143 = (int) D.40455_142;
  scanning: if (D.40491_143 > 127)
  scanning: D.40455_144 = map_13->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_145 = (int) D.40455_144;
  scanning: D.40493_146 = already_did[D.40491_145];
  scanning: if (D.40493_146 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: imp_148 = codecs[i_19];
  scanning: D.40453_149 = map_13->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_149 == 0B)
  scanning: D.47387_289 = *D.40453_149;
    Indirect ref read is not const
  scanning: if (D.47387_289 == 0)
  scanning: if (D.47386_290 != 0)
  scanning: D.40499_151 = smh_31->mparams;
    Indirect ref read is not const
  scanning: D.40500_152 = D.40499_151->ndlb;
    Indirect ref read is not const
  scanning: D.40501_153 = (int) D.40500_152;
  scanning: D.40502_154 = D.40501_153 & 1;
  scanning: if (D.40502_154 != 0)
  scanning: D.40455_156 = map_13->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_157 = (int) D.40455_156;
  scanning: if (D.40491_157 <= 95)
  scanning: D.40455_158 = map_13->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_159 = (int) D.40455_158;
  scanning: D.40505_160 = imp_148->ianacode;
    Indirect ref read is not const
  scanning: D.40506_161 = (int) D.40505_160;
  scanning: match_162 = D.40491_159 == D.40506_161;
  scanning: D.40453_163 = map_13->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_163 != 0B)
  scanning: D.40453_164 = map_13->rm_encoding;
    Indirect ref read is not const
  scanning: D.40509_165 = imp_148->iananame;
    Indirect ref read is not const
  scanning: D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
    checking flags for call: pure
  scanning: match_167 = D.40510_166 == 0;
  scanning: if (match_16 != 0)
  scanning: add_audio_codec (map_13, ptime_8, &buf, 1024);
    checking flags for call: neihter
  scanning: i_169 = i_19 + 1;
  scanning: if (i_19 < num_codecs_22)
  scanning: map_170 = map_13->rm_next;
    Indirect ref read is not const
  scanning: if (map_13 != 0B)
  scanning: imp_106 = codecs[i_20];
  scanning: D.40516_107 = imp_106->codec_type;
    Indirect ref read is not const
  scanning: if (D.40516_107 != 0)
  scanning: D.40518_108 = imp_106->ianacode;
    Indirect ref read is not const
  scanning: D.40519_109 = (signed char) D.40518_108;
  scanning: if (D.40519_109 < 0)
  scanning: D.40518_110 = imp_106->ianacode;
    Indirect ref read is not const
  scanning: D.40521_111 = (int) D.40518_110;
  scanning: D.40522_112 = already_did[D.40521_111];
  scanning: if (D.40522_112 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: map_113 = m_2->m_rtpmaps;
    Indirect ref read is not const
  scanning: D.40455_114 = map_14->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_115 = (int) D.40455_114;
  scanning: if (D.40491_115 > 127)
  scanning: D.40455_116 = map_14->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_117 = (int) D.40455_116;
  scanning: D.40493_118 = already_did[D.40491_117];
  scanning: if (D.40493_118 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40453_119 = map_14->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_119 == 0B)
  scanning: D.47391_291 = *D.40453_119;
    Indirect ref read is not const
  scanning: if (D.47391_291 == 0)
  scanning: if (D.47390_292 != 0)
  scanning: D.40499_121 = smh_31->mparams;
    Indirect ref read is not const
  scanning: D.40500_122 = D.40499_121->ndlb;
    Indirect ref read is not const
  scanning: D.40501_123 = (int) D.40500_122;
  scanning: D.40502_124 = D.40501_123 & 1;
  scanning: if (D.40502_124 != 0)
  scanning: D.40455_126 = map_14->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_127 = (int) D.40455_126;
  scanning: if (D.40491_127 <= 95)
  scanning: D.40455_128 = map_14->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_129 = (int) D.40455_128;
  scanning: D.40518_130 = imp_106->ianacode;
    Indirect ref read is not const
  scanning: D.40521_131 = (int) D.40518_130;
  scanning: match_132 = D.40491_129 == D.40521_131;
  scanning: D.40453_133 = map_14->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_133 != 0B)
  scanning: D.40453_134 = map_14->rm_encoding;
    Indirect ref read is not const
  scanning: D.40534_135 = imp_106->iananame;
    Indirect ref read is not const
  scanning: D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
    checking flags for call: pure
  scanning: match_137 = D.40535_136 == 0;
  scanning: if (match_17 != 0)
  scanning: add_audio_codec (map_14, ptime_8, &buf, 1024);
    checking flags for call: neihter
  scanning: map_139 = map_14->rm_next;
    Indirect ref read is not const
  scanning: if (map_14 != 0B)
  scanning: i_140 = i_20 + 1;
  scanning: if (i_20 < num_codecs_22)
  scanning: D.40437_171 = m_2->m_type;
    Indirect ref read is not const
  scanning: if (D.40437_171 == 3)
  scanning: D.40441_172 = m_2->m_port;
    Indirect ref read is not const
  scanning: if (D.40441_172 != 0)
  scanning: connection_173 = sdp_46(D)->sdp_connection;
    Indirect ref read is not const
  scanning: D.40479_174 = m_2->m_connections;
    Indirect ref read is not const
  scanning: if (D.40479_174 != 0B)
  scanning: connection_175 = m_2->m_connections;
    Indirect ref read is not const
  scanning: if (connection_11 == 0B)
  scanning: D.40547_176 = switch_channel_get_session (channel_29);
    checking flags for call: neihter
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");
    checking flags for call: neihter
  scanning: imp_178 = codecs[i_21];
  scanning: D.40550_179 = imp_178->codec_type;
    Indirect ref read is not const
  scanning: if (D.40550_179 != 1)
  scanning: D.40552_180 = imp_178->ianacode;
    Indirect ref read is not const
  scanning: D.40553_181 = (signed char) D.40552_180;
  scanning: if (D.40553_181 < 0)
  scanning: D.40552_182 = imp_178->ianacode;
    Indirect ref read is not const
  scanning: D.40555_183 = (int) D.40552_182;
  scanning: D.40556_184 = already_did[D.40555_183];
  scanning: if (D.40556_184 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40557_185 = session_28(D)->channel;
    Indirect ref read is not const
  scanning: D.40558_186 = switch_channel_direction (D.40557_185);
    checking flags for call: neihter
  scanning: if (D.40558_186 == 0)
  scanning: D.40557_187 = session_28(D)->channel;
    Indirect ref read is not const
  scanning: D.40561_188 = switch_channel_test_flag (D.40557_187, 114);
    checking flags for call: neihter
  scanning: if (D.40561_188 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: map_189 = m_2->m_rtpmaps;
    Indirect ref read is not const
  scanning: D.40455_190 = map_15->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_191 = (int) D.40455_190;
  scanning: if (D.40491_191 > 127)
  scanning: D.40455_192 = map_15->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_193 = (int) D.40455_192;
  scanning: D.40493_194 = already_did[D.40491_193];
  scanning: if (D.40493_194 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.40453_195 = map_15->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_195 == 0B)
  scanning: D.47395_293 = *D.40453_195;
    Indirect ref read is not const
  scanning: if (D.47395_293 == 0)
  scanning: if (D.47394_294 != 0)
  scanning: D.40499_197 = smh_31->mparams;
    Indirect ref read is not const
  scanning: D.40500_198 = D.40499_197->ndlb;
    Indirect ref read is not const
  scanning: D.40501_199 = (int) D.40500_198;
  scanning: D.40502_200 = D.40501_199 & 1;
  scanning: if (D.40502_200 != 0)
  scanning: D.40455_202 = map_15->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_203 = (int) D.40455_202;
  scanning: if (D.40491_203 <= 95)
  scanning: D.40455_204 = map_15->rm_pt;
    Indirect ref read is not const
  scanning: D.40491_205 = (int) D.40455_204;
  scanning: D.40552_206 = imp_178->ianacode;
    Indirect ref read is not const
  scanning: D.40555_207 = (int) D.40552_206;
  scanning: match_208 = D.40491_205 == D.40555_207;
  scanning: D.40453_209 = map_15->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.40453_209 != 0B)
  scanning: D.40453_210 = map_15->rm_encoding;
    Indirect ref read is not const
  scanning: D.40575_211 = imp_178->iananame;
    Indirect ref read is not const
  scanning: D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
    checking flags for call: pure
  scanning: match_213 = D.40576_212 == 0;
  scanning: if (match_18 != 0)
  scanning: if (dptime_9 > 0)
  scanning: D.40582_215 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40583_216 = &buf + D.40582_215;
  scanning: D.40584_217 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40585_218 = 1024 - D.40584_217;
  scanning: D.40575_219 = imp_178->iananame;
    Indirect ref read is not const
  scanning: D.40457_220 = map_15->rm_rate;
    Indirect ref read is not const
  scanning: switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);
    checking flags for call: neihter
  scanning: D.40587_221 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40588_222 = &buf + D.40587_221;
  scanning: D.40589_223 = strlen (&buf);
    checking flags for call: pure
  scanning: D.40590_224 = 1024 - D.40589_223;
  scanning: D.40575_225 = imp_178->iananame;
    Indirect ref read is not const
  scanning: D.40457_226 = map_15->rm_rate;
    Indirect ref read is not const
  scanning: switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);
    checking flags for call: neihter
  scanning: D.40552_227 = imp_178->ianacode;
    Indirect ref read is not const
  scanning: D.40555_228 = (int) D.40552_227;
  scanning: already_did[D.40555_228] = 1;
  scanning: map_229 = map_15->rm_next;
    Indirect ref read is not const
  scanning: if (map_15 != 0B)
  scanning: i_230 = i_21 + 1;
  scanning: if (i_21 < num_codecs_22)
  scanning: m_231 = m_2->m_next;
    Indirect ref read is not const
  scanning: if (m_2 != 0B)
  scanning: D.40591_232 = buf[0];
  scanning: if (D.40591_232 == 44)
  scanning: switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_set_r_sdp_codec_string

;; Function switch_core_media_set_r_sdp_codec_string

;; 
154 basic blocks, 239 edges, last basic block 154.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  153 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  6 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [69.8%]  (true,exec)
Successors:  7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [50.0%]  (true,exec)
Successors:  8 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  5 [30.2%]  (false,exec) 6 [50.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
Successors:  11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (false,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [50.0%]  (true,exec)
Successors:  13 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [69.8%]  (true,exec)
Successors:  14 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [69.8%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  13 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec) 12 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  153 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [61.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  26 [95.5%]  (true,exec)
Successors:  21 [15.0%]  (true,exec) 19 [85.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [85.0%]  (false,exec)
Successors:  21 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [50.0%]  (false,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  18 [15.0%]  (true,exec) 19 [50.0%]  (true,exec) 20 [100.0%]  (fallthru,exec)
Successors:  22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  24 [4.5%]  (true,exec) 25 [95.5%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [4.5%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 23 [95.5%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,dfs_back,exec)

Basic block 26 (new, reachable)
Predecessors:  17 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
Successors:  18 [95.5%]  (true,exec) 27 [4.5%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  24 [100.0%]  (fallthru,exec) 26 [4.5%]  (false,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 28 (new, reachable)
Predecessors:  45 [91.0%]  (true,exec)
Successors:  29 [27.0%]  (true,exec) 44 [73.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [27.0%]  (true,exec)
Successors:  30 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [50.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  43 [91.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 32 (new, reachable)
Predecessors:  41 [95.5%]  (true,exec)
Successors:  35 [15.0%]  (true,exec) 33 [85.0%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [85.0%]  (false,exec)
Successors:  35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [50.0%]  (false,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  32 [15.0%]  (true,exec) 33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
Successors:  36 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [50.0%]  (true,exec)
Successors:  40 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  35 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [50.0%]  (true,exec)
Successors:  39 [4.5%]  (true,exec) 40 [95.5%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [4.5%]  (true,exec)
Successors:  42 [100.0%]  (fallthru,exec)

Basic block 40 (new, reachable)
Predecessors:  36 [100.0%]  (fallthru,exec) 37 [50.0%]  (false,exec) 38 [95.5%]  (false,exec)
Successors:  41 [100.0%]  (fallthru,dfs_back,exec)

Basic block 41 (new, reachable)
Predecessors:  31 [100.0%]  (fallthru,exec) 40 [100.0%]  (fallthru,dfs_back,exec)
Successors:  32 [95.5%]  (true,exec) 42 [4.5%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [100.0%]  (fallthru,exec) 41 [4.5%]  (false,exec)
Successors:  43 [100.0%]  (fallthru,dfs_back,exec)

Basic block 43 (new, reachable)
Predecessors:  30 [100.0%]  (fallthru,exec) 42 [100.0%]  (fallthru,dfs_back,exec)
Successors:  31 [91.0%]  (true,exec) 44 [9.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  28 [73.0%]  (false,exec) 29 [50.0%]  (false,exec) 43 [9.0%]  (false,exec)
Successors:  45 [100.0%]  (fallthru,dfs_back,exec)

Basic block 45 (new, reachable)
Predecessors:  27 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,dfs_back,exec)
Successors:  28 [91.0%]  (true,exec) 46 [9.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [9.0%]  (false,exec)
Successors:  150 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  150 [97.0%]  (true,exec)
Successors:  48 [28.0%]  (true,exec) 50 [72.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [28.0%]  (true,exec)
Successors:  49 [29.0%]  (true,exec) 50 [71.0%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [29.0%]  (true,exec)
Successors:  149 [100.0%]  (fallthru,exec)

Basic block 50 (new, reachable)
Predecessors:  47 [72.0%]  (false,exec) 48 [71.0%]  (false,exec)
Successors:  51 [28.0%]  (true,exec) 113 [72.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [28.0%]  (true,exec)
Successors:  52 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  62 [95.5%]  (true,exec)
Successors:  56 [15.0%]  (true,exec) 54 [85.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  56 [100.0%]  (fallthru,exec)

Basic block 56 (new, reachable)
Predecessors:  53 [15.0%]  (true,exec) 54 [50.0%]  (true,exec) 55 [100.0%]  (fallthru,exec)
Successors:  57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [50.0%]  (false,exec)
Successors:  59 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

Basic block 59 (new, reachable)
Predecessors:  58 [50.0%]  (true,exec)
Successors:  60 [4.5%]  (true,exec) 61 [95.5%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [4.5%]  (true,exec)
Successors:  63 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  57 [100.0%]  (fallthru,exec) 58 [50.0%]  (false,exec) 59 [95.5%]  (false,exec)
Successors:  62 [100.0%]  (fallthru,dfs_back,exec)

Basic block 62 (new, reachable)
Predecessors:  52 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
Successors:  53 [95.5%]  (true,exec) 63 [4.5%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  60 [100.0%]  (fallthru,exec) 62 [4.5%]  (false,exec)
Successors:  64 [85.0%]  (true,exec) 65 [15.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [85.0%]  (true,exec)
Successors:  65 [100.0%]  (fallthru,exec)

Basic block 65 (new, reachable)
Predecessors:  63 [15.0%]  (false,exec) 64 [100.0%]  (fallthru,exec)
Successors:  66 [3.0%]  (true,exec) 67 [97.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [3.0%]  (true,exec)
Successors:  151 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  65 [97.0%]  (false,exec)
Successors:  70 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec)
Successors:  70 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [50.0%]  (false,exec)
Successors:  112 [100.0%]  (fallthru)

Basic block 70 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec) 68 [50.0%]  (true,exec)
Successors:  89 [100.0%]  (fallthru,exec)

Basic block 71 (new, reachable)
Predecessors:  89 [91.0%]  (true,exec)
Successors:  74 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [50.0%]  (false,exec)
Successors:  74 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

Basic block 73 (new, reachable)
Predecessors:  72 [50.0%]  (false,exec)
Successors:  87 [100.0%]  (fallthru)

Basic block 74 (new, reachable)
Predecessors:  71 [50.0%]  (true,exec) 72 [50.0%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 75 (new, reachable)
Predecessors:  87 [95.5%]  (true,exec)
Successors:  78 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [85.0%]  (false,exec)
Successors:  78 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [50.0%]  (false,exec)
Successors:  78 [100.0%]  (fallthru,exec)

Basic block 78 (new, reachable)
Predecessors:  75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec) 77 [100.0%]  (fallthru,exec)
Successors:  80 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [50.0%]  (false,exec)
Successors:  80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  78 [50.0%]  (true,exec) 79 [50.0%]  (true,exec)
Successors:  81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 82 (new, reachable)
Predecessors:  79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
Successors:  83 [85.0%]  (true,exec) 84 [15.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [85.0%]  (true,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 82 [15.0%]  (false,exec)
Successors:  85 [4.5%]  (true,exec) 86 [95.5%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [4.5%]  (true,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 86 (new, reachable)
Predecessors:  84 [95.5%]  (false,exec)
Successors:  87 [100.0%]  (fallthru,dfs_back,exec)

Basic block 87 (new)
Predecessors:  73 [100.0%]  (fallthru) 86 [100.0%]  (fallthru,dfs_back,exec)
Successors:  75 [95.5%]  (true,exec) 88 [4.5%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  74 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 87 [4.5%]  (false,exec)
Successors:  89 [100.0%]  (fallthru,dfs_back,exec)

Basic block 89 (new, reachable)
Predecessors:  70 [100.0%]  (fallthru,exec) 88 [100.0%]  (fallthru,dfs_back,exec)
Successors:  71 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  112 [98.0%]  (true,exec)
Successors:  93 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [50.0%]  (false,exec)
Successors:  93 [27.0%]  (true,exec) 92 [73.0%]  (false,exec)

Basic block 92 (new, reachable)
Predecessors:  91 [73.0%]  (false,exec)
Successors:  93 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  90 [50.0%]  (true,exec) 91 [27.0%]  (true,exec) 92 [50.0%]  (true,exec)
Successors:  111 [100.0%]  (fallthru,exec)

Basic block 94 (new, reachable)
Predecessors:  92 [50.0%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 95 (new, reachable)
Predecessors:  110 [95.5%]  (true,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  95 [50.0%]  (true,exec) 96 [50.0%]  (true,exec)
Successors:  109 [100.0%]  (fallthru,exec)

Basic block 98 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec)
Successors:  101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [85.0%]  (false,exec)
Successors:  101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [50.0%]  (false,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 101 (new, reachable)
Predecessors:  98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
Successors:  103 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [50.0%]  (false,exec)
Successors:  103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  101 [50.0%]  (true,exec) 102 [50.0%]  (true,exec)
Successors:  104 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [50.0%]  (true,exec)
Successors:  107 [100.0%]  (fallthru,exec)

Basic block 105 (new, reachable)
Predecessors:  102 [50.0%]  (false,exec) 103 [50.0%]  (false,exec)
Successors:  106 [85.0%]  (true,exec) 107 [15.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [85.0%]  (true,exec)
Successors:  107 [100.0%]  (fallthru,exec)

Basic block 107 (new, reachable)
Predecessors:  104 [100.0%]  (fallthru,exec) 106 [100.0%]  (fallthru,exec) 105 [15.0%]  (false,exec)
Successors:  108 [4.5%]  (true,exec) 109 [95.5%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  107 [4.5%]  (true,exec)
Successors:  111 [100.0%]  (fallthru,exec)

Basic block 109 (new, reachable)
Predecessors:  97 [100.0%]  (fallthru,exec) 107 [95.5%]  (false,exec)
Successors:  110 [100.0%]  (fallthru,dfs_back,exec)

Basic block 110 (new, reachable)
Predecessors:  94 [100.0%]  (fallthru,exec) 109 [100.0%]  (fallthru,dfs_back,exec)
Successors:  95 [95.5%]  (true,exec) 111 [4.5%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  93 [100.0%]  (fallthru,exec) 108 [100.0%]  (fallthru,exec) 110 [4.5%]  (false,exec)
Successors:  112 [100.0%]  (fallthru,dfs_back,exec)

Basic block 112 (new)
Predecessors:  69 [100.0%]  (fallthru) 111 [100.0%]  (fallthru,dfs_back,exec)
Successors:  90 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  50 [72.0%]  (false,exec) 51 [50.0%]  (false,exec)
Successors:  114 [28.0%]  (true,exec) 149 [72.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [28.0%]  (true,exec)
Successors:  115 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [50.0%]  (true,exec)
Successors:  116 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [85.0%]  (true,exec)
Successors:  117 [100.0%]  (fallthru,exec)

Basic block 117 (new, reachable)
Predecessors:  115 [15.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
Successors:  119 [3.0%]  (true,exec) 118 [97.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [97.0%]  (false,exec)
Successors:  148 [100.0%]  (fallthru)

Basic block 119 (new, reachable)
Predecessors:  117 [3.0%]  (true,exec)
Successors:  151 [100.0%]  (fallthru,exec)

Basic block 120 (new, reachable)
Predecessors:  148 [98.0%]  (true,exec)
Successors:  123 [72.0%]  (true,exec) 121 [28.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [28.0%]  (false,exec)
Successors:  123 [27.0%]  (true,exec) 122 [73.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [73.0%]  (false,exec)
Successors:  123 [71.0%]  (true,exec) 124 [29.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  120 [72.0%]  (true,exec) 121 [27.0%]  (true,exec) 122 [71.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 124 (new, reachable)
Predecessors:  122 [29.0%]  (false,exec)
Successors:  125 [29.0%]  (true,exec) 127 [71.0%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [29.0%]  (true,exec)
Successors:  126 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

Basic block 126 (new, reachable)
Predecessors:  125 [50.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  124 [71.0%]  (false,exec) 125 [50.0%]  (false,exec)
Successors:  146 [100.0%]  (fallthru,exec)

Basic block 128 (new, reachable)
Predecessors:  146 [95.5%]  (true,exec)
Successors:  130 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [50.0%]  (false,exec)
Successors:  130 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  128 [50.0%]  (true,exec) 129 [50.0%]  (true,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  129 [50.0%]  (false,exec)
Successors:  134 [15.0%]  (true,exec) 132 [85.0%]  (false,exec)

Basic block 132 (new, reachable)
Predecessors:  131 [85.0%]  (false,exec)
Successors:  134 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

Basic block 133 (new, reachable)
Predecessors:  132 [50.0%]  (false,exec)
Successors:  134 [100.0%]  (fallthru,exec)

Basic block 134 (new, reachable)
Predecessors:  131 [15.0%]  (true,exec) 132 [50.0%]  (true,exec) 133 [100.0%]  (fallthru,exec)
Successors:  136 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

Basic block 135 (new, reachable)
Predecessors:  134 [50.0%]  (false,exec)
Successors:  136 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  134 [50.0%]  (true,exec) 135 [50.0%]  (true,exec)
Successors:  137 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

Basic block 137 (new, reachable)
Predecessors:  136 [50.0%]  (true,exec)
Successors:  140 [100.0%]  (fallthru,exec)

Basic block 138 (new, reachable)
Predecessors:  135 [50.0%]  (false,exec) 136 [50.0%]  (false,exec)
Successors:  139 [85.0%]  (true,exec) 140 [15.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [85.0%]  (true,exec)
Successors:  140 [100.0%]  (fallthru,exec)

Basic block 140 (new, reachable)
Predecessors:  137 [100.0%]  (fallthru,exec) 139 [100.0%]  (fallthru,exec) 138 [15.0%]  (false,exec)
Successors:  141 [4.5%]  (true,exec) 145 [95.5%]  (false,exec)

Basic block 141 (new, reachable)
Predecessors:  140 [4.5%]  (true,exec)
Successors:  142 [73.0%]  (true,exec) 143 [27.0%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [73.0%]  (true,exec)
Successors:  144 [100.0%]  (fallthru,exec)

Basic block 143 (new, reachable)
Predecessors:  141 [27.0%]  (false,exec)
Successors:  144 [100.0%]  (fallthru,exec)

Basic block 144 (new, reachable)
Predecessors:  142 [100.0%]  (fallthru,exec) 143 [100.0%]  (fallthru,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  130 [100.0%]  (fallthru,exec) 140 [95.5%]  (false,exec)
Successors:  146 [100.0%]  (fallthru,dfs_back,exec)

Basic block 146 (new, reachable)
Predecessors:  127 [100.0%]  (fallthru,exec) 145 [100.0%]  (fallthru,dfs_back,exec)
Successors:  128 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

Basic block 147 (new, reachable)
Predecessors:  123 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,exec) 146 [4.5%]  (false,exec)
Successors:  148 [100.0%]  (fallthru,dfs_back,exec)

Basic block 148 (new)
Predecessors:  118 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
Successors:  120 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  49 [100.0%]  (fallthru,exec) 112 [2.0%]  (false,exec) 113 [72.0%]  (false,exec) 114 [50.0%]  (false,exec) 148 [2.0%]  (false,exec) 89 [9.0%]  (false,exec)
Successors:  150 [100.0%]  (fallthru,dfs_back,exec)

Basic block 150 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 149 [100.0%]  (fallthru,dfs_back,exec)
Successors:  47 [97.0%]  (true,exec) 151 [3.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  66 [100.0%]  (fallthru,exec) 119 [100.0%]  (fallthru,exec) 150 [3.0%]  (false,exec)
Successors:  152 [19.9%]  (true,exec) 153 [80.1%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [19.9%]  (true,exec)
Successors:  153 [100.0%]  (fallthru,exec)

Basic block 153 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 16 [39.0%]  (true,exec) 151 [80.1%]  (false,exec) 152 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_set_r_sdp_codec_string (struct switch_core_session_t * session, const char * codec_string, struct sdp_session_t * sdp, switch_sdp_type_t sdp_type)
{
  const char D.47395;
  int D.47394;
  const char D.47391;
  int D.47390;
  const char D.47387;
  int D.47386;
  const char D.47380;
  int D.47379;
  const char D.47373;
  int D.47372;
  const char D.47366;
  int D.47365;
  const char D.47362;
  int D.47361;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  const struct switch_codec_implementation_t * imp;
  char * tmp_codec_string;
  static const char __func__[41] = "switch_core_media_set_r_sdp_codec_string";
  static const char __PRETTY_FUNCTION__[41] = "switch_core_media_set_r_sdp_codec_string";
  struct switch_media_handle_t * smh;
  const char * var;
  int prefer_sdp;
  struct switch_channel_t * channel;
  const struct switch_codec_implementation_t * codecs[50];
  char * codec_order[50];
  int num_codecs;
  int already_did[128];
  int i;
  short int match;
  struct sdp_rtpmap_t * map;
  struct sdp_connection_t * connection;
  int dptime;
  int ptime;
  struct sdp_attribute_t * attr;
  struct sdp_media_t * m;
  char buf[1024];
  char D.40591;
  unsigned int D.40590;
  size_t D.40589;
  char * D.40588;
  size_t D.40587;
  unsigned int D.40585;
  size_t D.40584;
  char * D.40583;
  size_t D.40582;
  int D.40576;
  char * const D.40575;
  uint32_t D.40561;
  switch_call_direction_t D.40558;
  struct switch_channel_t * D.40557;
  int D.40556;
  int D.40555;
  signed char D.40553;
  const switch_payload_t D.40552;
  const switch_codec_type_t D.40550;
  struct switch_core_session_t * D.40547;
  int D.40535;
  char * const D.40534;
  int D.40522;
  int D.40521;
  signed char D.40519;
  const switch_payload_t D.40518;
  const switch_codec_type_t D.40516;
  int D.40510;
  char * const D.40509;
  int D.40506;
  const switch_payload_t D.40505;
  int D.40502;
  int D.40501;
  switch_core_media_NDLB_t D.40500;
  struct switch_core_media_params_t * D.40499;
  int D.40493;
  int D.40491;
  switch_call_direction_t D.40487;
  struct switch_core_session_t * D.40484;
  struct sdp_connection_t * D.40479;
  int D.40474;
  unsigned int D.40466;
  size_t D.40465;
  char * D.40464;
  size_t D.40463;
  uint32_t ptime.5;
  long unsigned int D.40457;
  uint32_t D.40456;
  <unnamed-unsigned:7> D.40455;
  const char * D.40454;
  const char * D.40453;
  switch_media_type_t D.40452;
  int D.40447;
  long unsigned int D.40441;
  unsigned int D.40438;
  sdp_media_e D.40437;
  const char * D.40436;
  int D.40433;
  const char * D.40429;
  _Bool D.40426;
  _Bool D.40425;
  _Bool D.40424;
  unsigned int D.40420;
  int D.40412;

  # BLOCK 2 freq:85
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  buf = {};
  # DEBUG ptime => 0
  # DEBUG dptime => 0
  # DEBUG match => 0
  already_did = {};
  # DEBUG num_codecs => 0
  codecs = {};
  channel_29 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_29
  # DEBUG prefer_sdp => 0
  if (session_28(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 8198, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:84
  # PRED: 2 [100.0%]  (false,exec)
  smh_31 = session_28(D)->media_handle;
  # DEBUG smh => smh_31
  if (smh_31 == 0B)
    goto <bb 153>;
  else
    goto <bb 5>;
  # SUCC: 153 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:66
  # PRED: 4 [78.4%]  (false,exec)
  var_32 = switch_channel_get_variable_dup (channel_29, "ep_codec_prefer_sdp", 1, -1);
  # DEBUG var => var_32
  if (var_32 != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [69.8%]  (true,exec) 8 [30.2%]  (false,exec)

  # BLOCK 6 freq:46
  # PRED: 5 [69.8%]  (true,exec)
  D.40412_33 = switch_true (var_32);
  if (D.40412_33 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 [50.0%]  (true,exec) 8 [50.0%]  (false,exec)

  # BLOCK 7 freq:23
  # PRED: 6 [50.0%]  (true,exec)
  # DEBUG prefer_sdp => 1
  # SUCC: 8 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:66
  # PRED: 5 [30.2%]  (false,exec) 6 [50.0%]  (false,exec) 7 [100.0%]  (fallthru,exec)
  # prefer_sdp_23 = PHI <0(5), 0(6), 1(7)>
  # DEBUG prefer_sdp => prefer_sdp_23
  # DEBUG s => codec_string_35(D)
  if (codec_string_35(D) == 0B)
    goto <bb 11>;
  else
    goto <bb 9>;
  # SUCC: 11 [15.0%]  (true,exec) 9 [85.0%]  (false,exec)

  # BLOCK 9 freq:56
  # PRED: 8 [85.0%]  (false,exec)
  D.47362_278 = *codec_string_35(D);
  if (D.47362_278 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:28
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:66
  # PRED: 8 [15.0%]  (true,exec) 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # D.47361_279 = PHI <1(8), 1(9), 0(10)>
  if (D.47361_279 == 0)
    goto <bb 12>;
  else
    goto <bb 15>;
  # SUCC: 12 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 12 freq:33
  # PRED: 11 [50.0%]  (true,exec)
  tmp_codec_string_37 = __strdup (codec_string_35(D));
  # DEBUG tmp_codec_string => tmp_codec_string_37
  if (tmp_codec_string_37 != 0B)
    goto <bb 13>;
  else
    goto <bb 16>;
  # SUCC: 13 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

  # BLOCK 13 freq:23
  # PRED: 12 [69.8%]  (true,exec)
  D.40420_38 = switch_separate_string (tmp_codec_string_37, 44, &codec_order, 50);
  num_codecs_39 = (int) D.40420_38;
  # DEBUG num_codecs => num_codecs_39
  num_codecs_40 = switch_loadable_module_get_codecs_sorted (&codecs, 50, &codec_order, num_codecs_39);
  # DEBUG num_codecs => num_codecs_40
  if (tmp_codec_string_37 != 0B)
    goto <bb 14>;
  else
    goto <bb 16>;
  # SUCC: 14 [69.8%]  (true,exec) 16 [30.2%]  (false,exec)

  # BLOCK 14 freq:16
  # PRED: 13 [69.8%]  (true,exec)
  free (tmp_codec_string_37);
  # DEBUG tmp_codec_string => 0B
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:33
  # PRED: 11 [50.0%]  (false,exec)
  num_codecs_42 = switch_loadable_module_get_codecs (&codecs, 50);
  # DEBUG num_codecs => num_codecs_42
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:66
  # PRED: 13 [30.2%]  (false,exec) 15 [100.0%]  (fallthru,exec) 12 [30.2%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  # num_codecs_22 = PHI <num_codecs_40(13), num_codecs_42(15), 0(12), num_codecs_40(14)>
  # DEBUG num_codecs => num_codecs_22
  D.40424_43 = channel_29 == 0B;
  D.40425_44 = num_codecs_22 == 0;
  D.40426_45 = D.40424_43 || D.40425_44;
  if (D.40426_45 != 0)
    goto <bb 153>;
  else
    goto <bb 17>;
  # SUCC: 153 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 17 freq:40
  # PRED: 16 [61.0%]  (false,exec)
  attr_47 = sdp_46(D)->sdp_attributes;
  # DEBUG attr => attr_47
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:580
  # PRED: 26 [95.5%]  (true,exec)
  D.40429_48 = attr_3->a_name;
  # DEBUG s => D.40429_48
  if (D.40429_48 == 0B)
    goto <bb 21>;
  else
    goto <bb 19>;
  # SUCC: 21 [15.0%]  (true,exec) 19 [85.0%]  (false,exec)

  # BLOCK 19 freq:493
  # PRED: 18 [85.0%]  (false,exec)
  D.47366_280 = *D.40429_48;
  if (D.47366_280 == 0)
    goto <bb 21>;
  else
    goto <bb 20>;
  # SUCC: 21 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 20 freq:247
  # PRED: 19 [50.0%]  (false,exec)
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:580
  # PRED: 18 [15.0%]  (true,exec) 19 [50.0%]  (true,exec) 20 [100.0%]  (fallthru,exec)
  # D.47365_281 = PHI <1(18), 1(19), 0(20)>
  if (D.47365_281 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 22 freq:290
  # PRED: 21 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:290
  # PRED: 21 [50.0%]  (false,exec)
  D.40429_50 = attr_3->a_name;
  D.40433_51 = strcasecmp (D.40429_50, "ptime");
  if (D.40433_51 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [4.5%]  (true,exec) 25 [95.5%]  (false,exec)

  # BLOCK 24 freq:13
  # PRED: 23 [4.5%]  (true,exec)
  D.40436_52 = attr_3->a_value;
  # DEBUG __nptr => D.40436_52
  dptime_282 = strtol (D.40436_52, 0B, 10);
  # DEBUG dptime => NULL
  goto <bb 27>;
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:567
  # PRED: 22 [100.0%]  (fallthru,exec) 23 [95.5%]  (false,exec)
  attr_54 = attr_3->a_next;
  # DEBUG attr => attr_54
  # SUCC: 26 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 26 freq:607
  # PRED: 17 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
  # attr_3 = PHI <attr_47(17), attr_54(25)>
  # DEBUG attr => attr_3
  if (attr_3 != 0B)
    goto <bb 18>;
  else
    goto <bb 27>;
  # SUCC: 18 [95.5%]  (true,exec) 27 [4.5%]  (false,exec)

  # BLOCK 27 freq:40
  # PRED: 24 [100.0%]  (fallthru,exec) 26 [4.5%]  (false,exec)
  # dptime_9 = PHI <dptime_282(24), 0(26)>
  # DEBUG dptime => dptime_9
  switch_core_media_find_zrtp_hash (session_28(D), sdp_46(D));
  switch_core_media_pass_zrtp_hash (session_28(D));
  m_55 = sdp_46(D)->sdp_media;
  # DEBUG m => m_55
  goto <bb 45>;
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 28 freq:408
  # PRED: 45 [91.0%]  (true,exec)
  # DEBUG ptime => dptime_9
  D.40437_57 = m_1->m_type;
  D.40438_58 = D.40437_57 + 4294967294;
  if (D.40438_58 <= 1)
    goto <bb 29>;
  else
    goto <bb 44>;
  # SUCC: 29 [27.0%]  (true,exec) 44 [73.0%]  (false,exec)

  # BLOCK 29 freq:110
  # PRED: 28 [27.0%]  (true,exec)
  D.40441_59 = m_1->m_port;
  if (D.40441_59 != 0)
    goto <bb 30>;
  else
    goto <bb 44>;
  # SUCC: 30 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 30 freq:55
  # PRED: 29 [50.0%]  (true,exec)
  map_60 = m_1->m_rtpmaps;
  # DEBUG map => map_60
  goto <bb 43>;
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:557
  # PRED: 43 [91.0%]  (true,exec)
  attr_61 = m_1->m_attributes;
  # DEBUG attr => attr_61
  goto <bb 41>;
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 32 freq:9550
  # PRED: 41 [95.5%]  (true,exec)
  D.40429_62 = attr_4->a_name;
  # DEBUG s => D.40429_62
  if (D.40429_62 == 0B)
    goto <bb 35>;
  else
    goto <bb 33>;
  # SUCC: 35 [15.0%]  (true,exec) 33 [85.0%]  (false,exec)

  # BLOCK 33 freq:8117
  # PRED: 32 [85.0%]  (false,exec)
  D.47373_283 = *D.40429_62;
  if (D.47373_283 == 0)
    goto <bb 35>;
  else
    goto <bb 34>;
  # SUCC: 35 [50.0%]  (true,exec) 34 [50.0%]  (false,exec)

  # BLOCK 34 freq:4059
  # PRED: 33 [50.0%]  (false,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:9550
  # PRED: 32 [15.0%]  (true,exec) 33 [50.0%]  (true,exec) 34 [100.0%]  (fallthru,exec)
  # D.47372_284 = PHI <1(32), 1(33), 0(34)>
  if (D.47372_284 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 36 freq:4775
  # PRED: 35 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 40>;
  # SUCC: 40 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:4775
  # PRED: 35 [50.0%]  (false,exec)
  D.40429_64 = attr_4->a_name;
  D.40447_65 = strcasecmp (D.40429_64, "ptime");
  if (D.40447_65 == 0)
    goto <bb 38>;
  else
    goto <bb 40>;
  # SUCC: 38 [50.0%]  (true,exec) 40 [50.0%]  (false,exec)

  # BLOCK 38 freq:2387
  # PRED: 37 [50.0%]  (true,exec)
  D.40436_66 = attr_4->a_value;
  if (D.40436_66 != 0B)
    goto <bb 39>;
  else
    goto <bb 40>;
  # SUCC: 39 [4.5%]  (true,exec) 40 [95.5%]  (false,exec)

  # BLOCK 39 freq:107
  # PRED: 38 [4.5%]  (true,exec)
  D.40436_67 = attr_4->a_value;
  # DEBUG __nptr => D.40436_67
  ptime_285 = strtol (D.40436_67, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 42>;
  # SUCC: 42 [100.0%]  (fallthru,exec)

  # BLOCK 40 freq:9443
  # PRED: 36 [100.0%]  (fallthru,exec) 37 [50.0%]  (false,exec) 38 [95.5%]  (false,exec)
  attr_69 = attr_4->a_next;
  # DEBUG attr => attr_69
  # SUCC: 41 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 41 freq:10000
  # PRED: 31 [100.0%]  (fallthru,exec) 40 [100.0%]  (fallthru,dfs_back,exec)
  # attr_4 = PHI <attr_61(31), attr_69(40)>
  # DEBUG attr => attr_4
  if (attr_4 != 0B)
    goto <bb 32>;
  else
    goto <bb 42>;
  # SUCC: 32 [95.5%]  (true,exec) 42 [4.5%]  (false,exec)

  # BLOCK 42 freq:557
  # PRED: 39 [100.0%]  (fallthru,exec) 41 [4.5%]  (false,exec)
  # ptime_6 = PHI <ptime_285(39), ptime_7(41)>
  # DEBUG ptime => ptime_6
  D.40437_70 = m_1->m_type;
  D.40452_71 = D.40437_70 != 2;
  D.40453_72 = map_12->rm_encoding;
  D.40454_73 = map_12->rm_fmtp;
  D.40455_74 = map_12->rm_pt;
  D.40456_75 = (uint32_t) D.40455_74;
  D.40457_76 = map_12->rm_rate;
  ptime.5_77 = (uint32_t) ptime_6;
  switch_core_media_add_payload_map (session_28(D), D.40452_71, D.40453_72, D.40454_73, sdp_type_78(D), D.40456_75, D.40457_76, ptime.5_77, 0);
  map_79 = map_12->rm_next;
  # DEBUG map => map_79
  # SUCC: 43 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 43 freq:613
  # PRED: 30 [100.0%]  (fallthru,exec) 42 [100.0%]  (fallthru,dfs_back,exec)
  # ptime_7 = PHI <dptime_9(30), ptime_6(42)>
  # map_12 = PHI <map_60(30), map_79(42)>
  # DEBUG map => map_12
  # DEBUG ptime => ptime_7
  if (map_12 != 0B)
    goto <bb 31>;
  else
    goto <bb 44>;
  # SUCC: 31 [91.0%]  (true,exec) 44 [9.0%]  (false,exec)

  # BLOCK 44 freq:408
  # PRED: 28 [73.0%]  (false,exec) 29 [50.0%]  (false,exec) 43 [9.0%]  (false,exec)
  m_80 = m_1->m_next;
  # DEBUG m => m_80
  # SUCC: 45 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 45 freq:449
  # PRED: 27 [100.0%]  (fallthru,exec) 44 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_55(27), m_80(44)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 28>;
  else
    goto <bb 46>;
  # SUCC: 28 [91.0%]  (true,exec) 46 [9.0%]  (false,exec)

  # BLOCK 46 freq:40
  # PRED: 45 [9.0%]  (false,exec)
  m_81 = sdp_46(D)->sdp_media;
  # DEBUG m => m_81
  goto <bb 150>;
  # SUCC: 150 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1060
  # PRED: 150 [97.0%]  (true,exec)
  # DEBUG ptime => dptime_9
  D.40437_83 = m_2->m_type;
  if (D.40437_83 == 8)
    goto <bb 48>;
  else
    goto <bb 50>;
  # SUCC: 48 [28.0%]  (true,exec) 50 [72.0%]  (false,exec)

  # BLOCK 48 freq:297
  # PRED: 47 [28.0%]  (true,exec)
  D.40441_84 = m_2->m_port;
  if (D.40441_84 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;
  # SUCC: 49 [29.0%]  (true,exec) 50 [71.0%]  (false,exec)

  # BLOCK 49 freq:86
  # PRED: 48 [29.0%]  (true,exec)
  D.40463_85 = strlen (&buf);
  D.40464_86 = &buf + D.40463_85;
  D.40465_87 = strlen (&buf);
  D.40466_88 = 1024 - D.40465_87;
  switch_snprintf (D.40464_86, D.40466_88, ",t38");
  goto <bb 149>;
  # SUCC: 149 [100.0%]  (fallthru,exec)

  # BLOCK 50 freq:974
  # PRED: 47 [72.0%]  (false,exec) 48 [71.0%]  (false,exec)
  D.40437_89 = m_2->m_type;
  if (D.40437_89 == 2)
    goto <bb 51>;
  else
    goto <bb 113>;
  # SUCC: 51 [28.0%]  (true,exec) 113 [72.0%]  (false,exec)

  # BLOCK 51 freq:273
  # PRED: 50 [28.0%]  (true,exec)
  D.40441_90 = m_2->m_port;
  if (D.40441_90 != 0)
    goto <bb 52>;
  else
    goto <bb 113>;
  # SUCC: 52 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

  # BLOCK 52 freq:136
  # PRED: 51 [50.0%]  (true,exec)
  attr_91 = m_2->m_attributes;
  # DEBUG attr => attr_91
  goto <bb 62>;
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:2336
  # PRED: 62 [95.5%]  (true,exec)
  D.40429_92 = attr_5->a_name;
  # DEBUG s => D.40429_92
  if (D.40429_92 == 0B)
    goto <bb 56>;
  else
    goto <bb 54>;
  # SUCC: 56 [15.0%]  (true,exec) 54 [85.0%]  (false,exec)

  # BLOCK 54 freq:1985
  # PRED: 53 [85.0%]  (false,exec)
  D.47380_286 = *D.40429_92;
  if (D.47380_286 == 0)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 55 freq:993
  # PRED: 54 [50.0%]  (false,exec)
  # SUCC: 56 [100.0%]  (fallthru,exec)

  # BLOCK 56 freq:2336
  # PRED: 53 [15.0%]  (true,exec) 54 [50.0%]  (true,exec) 55 [100.0%]  (fallthru,exec)
  # D.47379_287 = PHI <1(53), 1(54), 0(55)>
  if (D.47379_287 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [50.0%]  (true,exec) 58 [50.0%]  (false,exec)

  # BLOCK 57 freq:1168
  # PRED: 56 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:1168
  # PRED: 56 [50.0%]  (false,exec)
  D.40429_94 = attr_5->a_name;
  D.40474_95 = strcasecmp (D.40429_94, "ptime");
  if (D.40474_95 == 0)
    goto <bb 59>;
  else
    goto <bb 61>;
  # SUCC: 59 [50.0%]  (true,exec) 61 [50.0%]  (false,exec)

  # BLOCK 59 freq:584
  # PRED: 58 [50.0%]  (true,exec)
  D.40436_96 = attr_5->a_value;
  if (D.40436_96 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [4.5%]  (true,exec) 61 [95.5%]  (false,exec)

  # BLOCK 60 freq:26
  # PRED: 59 [4.5%]  (true,exec)
  D.40436_97 = attr_5->a_value;
  # DEBUG __nptr => D.40436_97
  ptime_288 = strtol (D.40436_97, 0B, 10);
  # DEBUG ptime => NULL
  goto <bb 63>;
  # SUCC: 63 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:2310
  # PRED: 57 [100.0%]  (fallthru,exec) 58 [50.0%]  (false,exec) 59 [95.5%]  (false,exec)
  attr_99 = attr_5->a_next;
  # DEBUG attr => attr_99
  # SUCC: 62 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 62 freq:2446
  # PRED: 52 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
  # attr_5 = PHI <attr_91(52), attr_99(61)>
  # DEBUG attr => attr_5
  if (attr_5 != 0B)
    goto <bb 53>;
  else
    goto <bb 63>;
  # SUCC: 53 [95.5%]  (true,exec) 63 [4.5%]  (false,exec)

  # BLOCK 63 freq:136
  # PRED: 60 [100.0%]  (fallthru,exec) 62 [4.5%]  (false,exec)
  # ptime_8 = PHI <ptime_288(60), dptime_9(62)>
  # DEBUG ptime => ptime_8
  connection_100 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_100
  D.40479_101 = m_2->m_connections;
  if (D.40479_101 != 0B)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [85.0%]  (true,exec) 65 [15.0%]  (false,exec)

  # BLOCK 64 freq:116
  # PRED: 63 [85.0%]  (true,exec)
  connection_102 = m_2->m_connections;
  # DEBUG connection => connection_102
  # SUCC: 65 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:136
  # PRED: 63 [15.0%]  (false,exec) 64 [100.0%]  (fallthru,exec)
  # connection_10 = PHI <connection_100(63), connection_102(64)>
  # DEBUG connection => connection_10
  if (connection_10 == 0B)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [3.0%]  (true,exec) 67 [97.0%]  (false,exec)

  # BLOCK 66 freq:4
  # PRED: 65 [3.0%]  (true,exec)
  D.40484_103 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8285, D.40484_103, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;
  # SUCC: 151 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:132
  # PRED: 65 [97.0%]  (false,exec)
  D.40487_104 = switch_channel_direction (channel_29);
  if (D.40487_104 == 0)
    goto <bb 70>;
  else
    goto <bb 68>;
  # SUCC: 70 [50.0%]  (true,exec) 68 [50.0%]  (false,exec)

  # BLOCK 68 freq:66
  # PRED: 67 [50.0%]  (false,exec)
  if (prefer_sdp_23 != 0)
    goto <bb 70>;
  else
    goto <bb 69>;
  # SUCC: 70 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

  # BLOCK 69 freq:33
  # PRED: 68 [50.0%]  (false,exec)
  # i_310 = PHI <0(68)>
  goto <bb 112>;
  # SUCC: 112 [100.0%]  (fallthru)

  # BLOCK 70 freq:99
  # PRED: 67 [50.0%]  (true,exec) 68 [50.0%]  (true,exec)
  map_141 = m_2->m_rtpmaps;
  # DEBUG map => map_141
  goto <bb 89>;
  # SUCC: 89 [100.0%]  (fallthru,exec)

  # BLOCK 71 freq:1003
  # PRED: 89 [91.0%]  (true,exec)
  D.40455_142 = map_13->rm_pt;
  D.40491_143 = (int) D.40455_142;
  if (D.40491_143 > 127)
    goto <bb 74>;
  else
    goto <bb 72>;
  # SUCC: 74 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 72 freq:501
  # PRED: 71 [50.0%]  (false,exec)
  D.40455_144 = map_13->rm_pt;
  D.40491_145 = (int) D.40455_144;
  D.40493_146 = already_did[D.40491_145];
  if (D.40493_146 != 0)
    goto <bb 74>;
  else
    goto <bb 73>;
  # SUCC: 74 [50.0%]  (true,exec) 73 [50.0%]  (false,exec)

  # BLOCK 73 freq:251
  # PRED: 72 [50.0%]  (false,exec)
  # i_214 = PHI <0(72)>
  goto <bb 87>;
  # SUCC: 87 [100.0%]  (fallthru)

  # BLOCK 74 freq:752
  # PRED: 71 [50.0%]  (true,exec) 72 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 88>;
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 75 freq:2722
  # PRED: 87 [95.5%]  (true,exec)
  imp_148 = codecs[i_19];
  # DEBUG imp => imp_148
  D.40453_149 = map_13->rm_encoding;
  # DEBUG s => D.40453_149
  if (D.40453_149 == 0B)
    goto <bb 78>;
  else
    goto <bb 76>;
  # SUCC: 78 [15.0%]  (true,exec) 76 [85.0%]  (false,exec)

  # BLOCK 76 freq:2313
  # PRED: 75 [85.0%]  (false,exec)
  D.47387_289 = *D.40453_149;
  if (D.47387_289 == 0)
    goto <bb 78>;
  else
    goto <bb 77>;
  # SUCC: 78 [50.0%]  (true,exec) 77 [50.0%]  (false,exec)

  # BLOCK 77 freq:1157
  # PRED: 76 [50.0%]  (false,exec)
  # SUCC: 78 [100.0%]  (fallthru,exec)

  # BLOCK 78 freq:2722
  # PRED: 75 [15.0%]  (true,exec) 76 [50.0%]  (true,exec) 77 [100.0%]  (fallthru,exec)
  # D.47386_290 = PHI <1(75), 1(76), 0(77)>
  if (D.47386_290 != 0)
    goto <bb 80>;
  else
    goto <bb 79>;
  # SUCC: 80 [50.0%]  (true,exec) 79 [50.0%]  (false,exec)

  # BLOCK 79 freq:1361
  # PRED: 78 [50.0%]  (false,exec)
  D.40499_151 = smh_31->mparams;
  D.40500_152 = D.40499_151->ndlb;
  D.40501_153 = (int) D.40500_152;
  D.40502_154 = D.40501_153 & 1;
  if (D.40502_154 != 0)
    goto <bb 80>;
  else
    goto <bb 82>;
  # SUCC: 80 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 80 freq:2041
  # PRED: 78 [50.0%]  (true,exec) 79 [50.0%]  (true,exec)
  D.40455_156 = map_13->rm_pt;
  D.40491_157 = (int) D.40455_156;
  if (D.40491_157 <= 95)
    goto <bb 81>;
  else
    goto <bb 82>;
  # SUCC: 81 [50.0%]  (true,exec) 82 [50.0%]  (false,exec)

  # BLOCK 81 freq:1021
  # PRED: 80 [50.0%]  (true,exec)
  D.40455_158 = map_13->rm_pt;
  D.40491_159 = (int) D.40455_158;
  D.40505_160 = imp_148->ianacode;
  D.40506_161 = (int) D.40505_160;
  match_162 = D.40491_159 == D.40506_161;
  # DEBUG match => match_162
  goto <bb 84>;
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 82 freq:1701
  # PRED: 79 [50.0%]  (false,exec) 80 [50.0%]  (false,exec)
  D.40453_163 = map_13->rm_encoding;
  if (D.40453_163 != 0B)
    goto <bb 83>;
  else
    goto <bb 84>;
  # SUCC: 83 [85.0%]  (true,exec) 84 [15.0%]  (false,exec)

  # BLOCK 83 freq:1446
  # PRED: 82 [85.0%]  (true,exec)
  D.40453_164 = map_13->rm_encoding;
  D.40509_165 = imp_148->iananame;
  D.40510_166 = strcasecmp (D.40453_164, D.40509_165);
  match_167 = D.40510_166 == 0;
  # DEBUG match => match_167
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:2722
  # PRED: 81 [100.0%]  (fallthru,exec) 83 [100.0%]  (fallthru,exec) 82 [15.0%]  (false,exec)
  # match_16 = PHI <match_162(81), match_167(83), 0(82)>
  # DEBUG match => match_16
  if (match_16 != 0)
    goto <bb 85>;
  else
    goto <bb 86>;
  # SUCC: 85 [4.5%]  (true,exec) 86 [95.5%]  (false,exec)

  # BLOCK 85 freq:122
  # PRED: 84 [4.5%]  (true,exec)
  add_audio_codec (map_13, ptime_8, &buf, 1024);
  goto <bb 88>;
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 86 freq:2599
  # PRED: 84 [95.5%]  (false,exec)
  i_169 = i_19 + 1;
  # DEBUG i => i_169
  # SUCC: 87 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 87 freq:2850
  # PRED: 73 [100.0%]  (fallthru) 86 [100.0%]  (fallthru,dfs_back,exec)
  # i_19 = PHI <i_214(73), i_169(86)>
  # DEBUG i => i_19
  if (i_19 < num_codecs_22)
    goto <bb 75>;
  else
    goto <bb 88>;
  # SUCC: 75 [95.5%]  (true,exec) 88 [4.5%]  (false,exec)

  # BLOCK 88 freq:1003
  # PRED: 74 [100.0%]  (fallthru,exec) 85 [100.0%]  (fallthru,exec) 87 [4.5%]  (false,exec)
  map_170 = map_13->rm_next;
  # DEBUG map => map_170
  # SUCC: 89 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 89 freq:1102
  # PRED: 70 [100.0%]  (fallthru,exec) 88 [100.0%]  (fallthru,dfs_back,exec)
  # map_13 = PHI <map_141(70), map_170(88)>
  # DEBUG map => map_13
  if (map_13 != 0B)
    goto <bb 71>;
  else
    goto <bb 149>;
  # SUCC: 71 [91.0%]  (true,exec) 149 [9.0%]  (false,exec)

  # BLOCK 90 freq:1654
  # PRED: 112 [98.0%]  (true,exec)
  imp_106 = codecs[i_20];
  # DEBUG imp => imp_106
  D.40516_107 = imp_106->codec_type;
  if (D.40516_107 != 0)
    goto <bb 93>;
  else
    goto <bb 91>;
  # SUCC: 93 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 91 freq:827
  # PRED: 90 [50.0%]  (false,exec)
  D.40518_108 = imp_106->ianacode;
  D.40519_109 = (signed char) D.40518_108;
  if (D.40519_109 < 0)
    goto <bb 93>;
  else
    goto <bb 92>;
  # SUCC: 93 [27.0%]  (true,exec) 92 [73.0%]  (false,exec)

  # BLOCK 92 freq:604
  # PRED: 91 [73.0%]  (false,exec)
  D.40518_110 = imp_106->ianacode;
  D.40521_111 = (int) D.40518_110;
  D.40522_112 = already_did[D.40521_111];
  if (D.40522_112 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;
  # SUCC: 93 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

  # BLOCK 93 freq:1352
  # PRED: 90 [50.0%]  (true,exec) 91 [27.0%]  (true,exec) 92 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru,exec)

  # BLOCK 94 freq:302
  # PRED: 92 [50.0%]  (false,exec)
  map_113 = m_2->m_rtpmaps;
  # DEBUG map => map_113
  goto <bb 110>;
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 95 freq:5171
  # PRED: 110 [95.5%]  (true,exec)
  D.40455_114 = map_14->rm_pt;
  D.40491_115 = (int) D.40455_114;
  if (D.40491_115 > 127)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:2585
  # PRED: 95 [50.0%]  (false,exec)
  D.40455_116 = map_14->rm_pt;
  D.40491_117 = (int) D.40455_116;
  D.40493_118 = already_did[D.40491_117];
  if (D.40493_118 != 0)
    goto <bb 97>;
  else
    goto <bb 98>;
  # SUCC: 97 [50.0%]  (true,exec) 98 [50.0%]  (false,exec)

  # BLOCK 97 freq:3878
  # PRED: 95 [50.0%]  (true,exec) 96 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 109>;
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 98 freq:1293
  # PRED: 96 [50.0%]  (false,exec)
  D.40453_119 = map_14->rm_encoding;
  # DEBUG s => D.40453_119
  if (D.40453_119 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;
  # SUCC: 101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

  # BLOCK 99 freq:1099
  # PRED: 98 [85.0%]  (false,exec)
  D.47391_291 = *D.40453_119;
  if (D.47391_291 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;
  # SUCC: 101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

  # BLOCK 100 freq:549
  # PRED: 99 [50.0%]  (false,exec)
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 101 freq:1293
  # PRED: 98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
  # D.47390_292 = PHI <1(98), 1(99), 0(100)>
  if (D.47390_292 != 0)
    goto <bb 103>;
  else
    goto <bb 102>;
  # SUCC: 103 [50.0%]  (true,exec) 102 [50.0%]  (false,exec)

  # BLOCK 102 freq:646
  # PRED: 101 [50.0%]  (false,exec)
  D.40499_121 = smh_31->mparams;
  D.40500_122 = D.40499_121->ndlb;
  D.40501_123 = (int) D.40500_122;
  D.40502_124 = D.40501_123 & 1;
  if (D.40502_124 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;
  # SUCC: 103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 103 freq:970
  # PRED: 101 [50.0%]  (true,exec) 102 [50.0%]  (true,exec)
  D.40455_126 = map_14->rm_pt;
  D.40491_127 = (int) D.40455_126;
  if (D.40491_127 <= 95)
    goto <bb 104>;
  else
    goto <bb 105>;
  # SUCC: 104 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 104 freq:485
  # PRED: 103 [50.0%]  (true,exec)
  D.40455_128 = map_14->rm_pt;
  D.40491_129 = (int) D.40455_128;
  D.40518_130 = imp_106->ianacode;
  D.40521_131 = (int) D.40518_130;
  match_132 = D.40491_129 == D.40521_131;
  # DEBUG match => match_132
  goto <bb 107>;
  # SUCC: 107 [100.0%]  (fallthru,exec)

  # BLOCK 105 freq:808
  # PRED: 102 [50.0%]  (false,exec) 103 [50.0%]  (false,exec)
  D.40453_133 = map_14->rm_encoding;
  if (D.40453_133 != 0B)
    goto <bb 106>;
  else
    goto <bb 107>;
  # SUCC: 106 [85.0%]  (true,exec) 107 [15.0%]  (false,exec)

  # BLOCK 106 freq:687
  # PRED: 105 [85.0%]  (true,exec)
  D.40453_134 = map_14->rm_encoding;
  D.40534_135 = imp_106->iananame;
  D.40535_136 = strcasecmp (D.40453_134, D.40534_135);
  match_137 = D.40535_136 == 0;
  # DEBUG match => match_137
  # SUCC: 107 [100.0%]  (fallthru,exec)

  # BLOCK 107 freq:1293
  # PRED: 104 [100.0%]  (fallthru,exec) 106 [100.0%]  (fallthru,exec) 105 [15.0%]  (false,exec)
  # match_17 = PHI <match_132(104), match_137(106), 0(105)>
  # DEBUG match => match_17
  if (match_17 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;
  # SUCC: 108 [4.5%]  (true,exec) 109 [95.5%]  (false,exec)

  # BLOCK 108 freq:58
  # PRED: 107 [4.5%]  (true,exec)
  add_audio_codec (map_14, ptime_8, &buf, 1024);
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:5113
  # PRED: 97 [100.0%]  (fallthru,exec) 107 [95.5%]  (false,exec)
  map_139 = map_14->rm_next;
  # DEBUG map => map_139
  # SUCC: 110 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 110 freq:5414
  # PRED: 94 [100.0%]  (fallthru,exec) 109 [100.0%]  (fallthru,dfs_back,exec)
  # map_14 = PHI <map_113(94), map_139(109)>
  # DEBUG map => map_14
  if (map_14 != 0B)
    goto <bb 95>;
  else
    goto <bb 111>;
  # SUCC: 95 [95.5%]  (true,exec) 111 [4.5%]  (false,exec)

  # BLOCK 111 freq:1654
  # PRED: 93 [100.0%]  (fallthru,exec) 108 [100.0%]  (fallthru,exec) 110 [4.5%]  (false,exec)
  i_140 = i_20 + 1;
  # DEBUG i => i_140
  # SUCC: 112 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 112 freq:1687
  # PRED: 69 [100.0%]  (fallthru) 111 [100.0%]  (fallthru,dfs_back,exec)
  # i_20 = PHI <i_310(69), i_140(111)>
  # DEBUG i => i_20
  if (i_20 < num_codecs_22)
    goto <bb 90>;
  else
    goto <bb 149>;
  # SUCC: 90 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

  # BLOCK 113 freq:838
  # PRED: 50 [72.0%]  (false,exec) 51 [50.0%]  (false,exec)
  D.40437_171 = m_2->m_type;
  if (D.40437_171 == 3)
    goto <bb 114>;
  else
    goto <bb 149>;
  # SUCC: 114 [28.0%]  (true,exec) 149 [72.0%]  (false,exec)

  # BLOCK 114 freq:235
  # PRED: 113 [28.0%]  (true,exec)
  D.40441_172 = m_2->m_port;
  if (D.40441_172 != 0)
    goto <bb 115>;
  else
    goto <bb 149>;
  # SUCC: 115 [50.0%]  (true,exec) 149 [50.0%]  (false,exec)

  # BLOCK 115 freq:117
  # PRED: 114 [50.0%]  (true,exec)
  connection_173 = sdp_46(D)->sdp_connection;
  # DEBUG connection => connection_173
  D.40479_174 = m_2->m_connections;
  if (D.40479_174 != 0B)
    goto <bb 116>;
  else
    goto <bb 117>;
  # SUCC: 116 [85.0%]  (true,exec) 117 [15.0%]  (false,exec)

  # BLOCK 116 freq:100
  # PRED: 115 [85.0%]  (true,exec)
  connection_175 = m_2->m_connections;
  # DEBUG connection => connection_175
  # SUCC: 117 [100.0%]  (fallthru,exec)

  # BLOCK 117 freq:117
  # PRED: 115 [15.0%]  (false,exec) 116 [100.0%]  (fallthru,exec)
  # connection_11 = PHI <connection_173(115), connection_175(116)>
  # DEBUG connection => connection_11
  if (connection_11 == 0B)
    goto <bb 119>;
  else
    goto <bb 118>;
  # SUCC: 119 [3.0%]  (true,exec) 118 [97.0%]  (false,exec)

  # BLOCK 118 freq:114
  # PRED: 117 [97.0%]  (false,exec)
  # i_177 = PHI <0(117)>
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru)

  # BLOCK 119 freq:4
  # PRED: 117 [3.0%]  (true,exec)
  D.40547_176 = switch_channel_get_session (channel_29);
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 8352, D.40547_176, 3, "Cannot find a c= line in the sdp at media or session level!\n");
  goto <bb 151>;
  # SUCC: 151 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:5689
  # PRED: 148 [98.0%]  (true,exec)
  imp_178 = codecs[i_21];
  # DEBUG imp => imp_178
  D.40550_179 = imp_178->codec_type;
  if (D.40550_179 != 1)
    goto <bb 123>;
  else
    goto <bb 121>;
  # SUCC: 123 [72.0%]  (true,exec) 121 [28.0%]  (false,exec)

  # BLOCK 121 freq:1593
  # PRED: 120 [28.0%]  (false,exec)
  D.40552_180 = imp_178->ianacode;
  D.40553_181 = (signed char) D.40552_180;
  if (D.40553_181 < 0)
    goto <bb 123>;
  else
    goto <bb 122>;
  # SUCC: 123 [27.0%]  (true,exec) 122 [73.0%]  (false,exec)

  # BLOCK 122 freq:1163
  # PRED: 121 [73.0%]  (false,exec)
  D.40552_182 = imp_178->ianacode;
  D.40555_183 = (int) D.40552_182;
  D.40556_184 = already_did[D.40555_183];
  if (D.40556_184 != 0)
    goto <bb 123>;
  else
    goto <bb 124>;
  # SUCC: 123 [71.0%]  (true,exec) 124 [29.0%]  (false,exec)

  # BLOCK 123 freq:5352
  # PRED: 120 [72.0%]  (true,exec) 121 [27.0%]  (true,exec) 122 [71.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 124 freq:337
  # PRED: 122 [29.0%]  (false,exec)
  D.40557_185 = session_28(D)->channel;
  D.40558_186 = switch_channel_direction (D.40557_185);
  if (D.40558_186 == 0)
    goto <bb 125>;
  else
    goto <bb 127>;
  # SUCC: 125 [29.0%]  (true,exec) 127 [71.0%]  (false,exec)

  # BLOCK 125 freq:98
  # PRED: 124 [29.0%]  (true,exec)
  D.40557_187 = session_28(D)->channel;
  D.40561_188 = switch_channel_test_flag (D.40557_187, 114);
  if (D.40561_188 != 0)
    goto <bb 126>;
  else
    goto <bb 127>;
  # SUCC: 126 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

  # BLOCK 126 freq:49
  # PRED: 125 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:288
  # PRED: 124 [71.0%]  (false,exec) 125 [50.0%]  (false,exec)
  map_189 = m_2->m_rtpmaps;
  # DEBUG map => map_189
  goto <bb 146>;
  # SUCC: 146 [100.0%]  (fallthru,exec)

  # BLOCK 128 freq:4940
  # PRED: 146 [95.5%]  (true,exec)
  D.40455_190 = map_15->rm_pt;
  D.40491_191 = (int) D.40455_190;
  if (D.40491_191 > 127)
    goto <bb 130>;
  else
    goto <bb 129>;
  # SUCC: 130 [50.0%]  (true,exec) 129 [50.0%]  (false,exec)

  # BLOCK 129 freq:2470
  # PRED: 128 [50.0%]  (false,exec)
  D.40455_192 = map_15->rm_pt;
  D.40491_193 = (int) D.40455_192;
  D.40493_194 = already_did[D.40491_193];
  if (D.40493_194 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;
  # SUCC: 130 [50.0%]  (true,exec) 131 [50.0%]  (false,exec)

  # BLOCK 130 freq:3705
  # PRED: 128 [50.0%]  (true,exec) 129 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 145>;
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:1235
  # PRED: 129 [50.0%]  (false,exec)
  D.40453_195 = map_15->rm_encoding;
  # DEBUG s => D.40453_195
  if (D.40453_195 == 0B)
    goto <bb 134>;
  else
    goto <bb 132>;
  # SUCC: 134 [15.0%]  (true,exec) 132 [85.0%]  (false,exec)

  # BLOCK 132 freq:1050
  # PRED: 131 [85.0%]  (false,exec)
  D.47395_293 = *D.40453_195;
  if (D.47395_293 == 0)
    goto <bb 134>;
  else
    goto <bb 133>;
  # SUCC: 134 [50.0%]  (true,exec) 133 [50.0%]  (false,exec)

  # BLOCK 133 freq:525
  # PRED: 132 [50.0%]  (false,exec)
  # SUCC: 134 [100.0%]  (fallthru,exec)

  # BLOCK 134 freq:1235
  # PRED: 131 [15.0%]  (true,exec) 132 [50.0%]  (true,exec) 133 [100.0%]  (fallthru,exec)
  # D.47394_294 = PHI <1(131), 1(132), 0(133)>
  if (D.47394_294 != 0)
    goto <bb 136>;
  else
    goto <bb 135>;
  # SUCC: 136 [50.0%]  (true,exec) 135 [50.0%]  (false,exec)

  # BLOCK 135 freq:617
  # PRED: 134 [50.0%]  (false,exec)
  D.40499_197 = smh_31->mparams;
  D.40500_198 = D.40499_197->ndlb;
  D.40501_199 = (int) D.40500_198;
  D.40502_200 = D.40501_199 & 1;
  if (D.40502_200 != 0)
    goto <bb 136>;
  else
    goto <bb 138>;
  # SUCC: 136 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

  # BLOCK 136 freq:926
  # PRED: 134 [50.0%]  (true,exec) 135 [50.0%]  (true,exec)
  D.40455_202 = map_15->rm_pt;
  D.40491_203 = (int) D.40455_202;
  if (D.40491_203 <= 95)
    goto <bb 137>;
  else
    goto <bb 138>;
  # SUCC: 137 [50.0%]  (true,exec) 138 [50.0%]  (false,exec)

  # BLOCK 137 freq:463
  # PRED: 136 [50.0%]  (true,exec)
  D.40455_204 = map_15->rm_pt;
  D.40491_205 = (int) D.40455_204;
  D.40552_206 = imp_178->ianacode;
  D.40555_207 = (int) D.40552_206;
  match_208 = D.40491_205 == D.40555_207;
  # DEBUG match => match_208
  goto <bb 140>;
  # SUCC: 140 [100.0%]  (fallthru,exec)

  # BLOCK 138 freq:772
  # PRED: 135 [50.0%]  (false,exec) 136 [50.0%]  (false,exec)
  D.40453_209 = map_15->rm_encoding;
  if (D.40453_209 != 0B)
    goto <bb 139>;
  else
    goto <bb 140>;
  # SUCC: 139 [85.0%]  (true,exec) 140 [15.0%]  (false,exec)

  # BLOCK 139 freq:656
  # PRED: 138 [85.0%]  (true,exec)
  D.40453_210 = map_15->rm_encoding;
  D.40575_211 = imp_178->iananame;
  D.40576_212 = strcasecmp (D.40453_210, D.40575_211);
  match_213 = D.40576_212 == 0;
  # DEBUG match => match_213
  # SUCC: 140 [100.0%]  (fallthru,exec)

  # BLOCK 140 freq:1235
  # PRED: 137 [100.0%]  (fallthru,exec) 139 [100.0%]  (fallthru,exec) 138 [15.0%]  (false,exec)
  # match_18 = PHI <match_208(137), match_213(139), 0(138)>
  # DEBUG match => match_18
  if (match_18 != 0)
    goto <bb 141>;
  else
    goto <bb 145>;
  # SUCC: 141 [4.5%]  (true,exec) 145 [95.5%]  (false,exec)

  # BLOCK 141 freq:56
  # PRED: 140 [4.5%]  (true,exec)
  if (dptime_9 > 0)
    goto <bb 142>;
  else
    goto <bb 143>;
  # SUCC: 142 [73.0%]  (true,exec) 143 [27.0%]  (false,exec)

  # BLOCK 142 freq:41
  # PRED: 141 [73.0%]  (true,exec)
  D.40582_215 = strlen (&buf);
  D.40583_216 = &buf + D.40582_215;
  D.40584_217 = strlen (&buf);
  D.40585_218 = 1024 - D.40584_217;
  D.40575_219 = imp_178->iananame;
  D.40457_220 = map_15->rm_rate;
  switch_snprintf (D.40583_216, D.40585_218, ",%s@%uh@%di", D.40575_219, D.40457_220, dptime_9);
  goto <bb 144>;
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 143 freq:15
  # PRED: 141 [27.0%]  (false,exec)
  D.40587_221 = strlen (&buf);
  D.40588_222 = &buf + D.40587_221;
  D.40589_223 = strlen (&buf);
  D.40590_224 = 1024 - D.40589_223;
  D.40575_225 = imp_178->iananame;
  D.40457_226 = map_15->rm_rate;
  switch_snprintf (D.40588_222, D.40590_224, ",%s@%uh", D.40575_225, D.40457_226);
  # SUCC: 144 [100.0%]  (fallthru,exec)

  # BLOCK 144 freq:56
  # PRED: 142 [100.0%]  (fallthru,exec) 143 [100.0%]  (fallthru,exec)
  D.40552_227 = imp_178->ianacode;
  D.40555_228 = (int) D.40552_227;
  already_did[D.40555_228] = 1;
  goto <bb 147>;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:4884
  # PRED: 130 [100.0%]  (fallthru,exec) 140 [95.5%]  (false,exec)
  map_229 = map_15->rm_next;
  # DEBUG map => map_229
  # SUCC: 146 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 146 freq:5172
  # PRED: 127 [100.0%]  (fallthru,exec) 145 [100.0%]  (fallthru,dfs_back,exec)
  # map_15 = PHI <map_189(127), map_229(145)>
  # DEBUG map => map_15
  if (map_15 != 0B)
    goto <bb 128>;
  else
    goto <bb 147>;
  # SUCC: 128 [95.5%]  (true,exec) 147 [4.5%]  (false,exec)

  # BLOCK 147 freq:5689
  # PRED: 123 [100.0%]  (fallthru,exec) 126 [100.0%]  (fallthru,exec) 144 [100.0%]  (fallthru,exec) 146 [4.5%]  (false,exec)
  i_230 = i_21 + 1;
  # DEBUG i => i_230
  # SUCC: 148 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 148 freq:5803
  # PRED: 118 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
  # i_21 = PHI <i_177(118), i_230(147)>
  # DEBUG i => i_21
  if (i_21 < num_codecs_22)
    goto <bb 120>;
  else
    goto <bb 149>;
  # SUCC: 120 [98.0%]  (true,exec) 149 [2.0%]  (false,exec)

  # BLOCK 149 freq:1052
  # PRED: 49 [100.0%]  (fallthru,exec) 112 [2.0%]  (false,exec) 113 [72.0%]  (false,exec) 114 [50.0%]  (false,exec) 148 [2.0%]  (false,exec) 89 [9.0%]  (false,exec)
  m_231 = m_2->m_next;
  # DEBUG m => m_231
  # SUCC: 150 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 150 freq:1093
  # PRED: 46 [100.0%]  (fallthru,exec) 149 [100.0%]  (fallthru,dfs_back,exec)
  # m_2 = PHI <m_81(46), m_231(149)>
  # DEBUG m => m_2
  if (m_2 != 0B)
    goto <bb 47>;
  else
    goto <bb 151>;
  # SUCC: 47 [97.0%]  (true,exec) 151 [3.0%]  (false,exec)

  # BLOCK 151 freq:40
  # PRED: 66 [100.0%]  (fallthru,exec) 119 [100.0%]  (fallthru,exec) 150 [3.0%]  (false,exec)
  D.40591_232 = buf[0];
  if (D.40591_232 == 44)
    goto <bb 152>;
  else
    goto <bb 153>;
  # SUCC: 152 [19.9%]  (true,exec) 153 [80.1%]  (false,exec)

  # BLOCK 152 freq:8
  # PRED: 151 [19.9%]  (true,exec)
  switch_channel_set_variable_var_check (channel_29, "ep_codec_string", &buf[1], 1);
  # SUCC: 153 [100.0%]  (fallthru,exec)

  # BLOCK 153 freq:84
  # PRED: 4 [21.6%]  (true,exec) 16 [39.0%]  (true,exec) 151 [80.1%]  (false,exec) 152 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_get_codec_string (switch_core_media_get_codec_string)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_clear_crypto (switch_core_session_clear_crypto)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_local_crypto_key (switch_core_session_local_crypto_key)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_parse_rtp_bugs (switch_core_media_parse_rtp_bugs)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_add_crypto (switch_core_media_add_crypto)



 local analysis of switch_core_media_add_crypto
   scanning: p_3 = __builtin_strchr (key_str_2(D), 32);
    checking flags for call: pure
  scanning: if (p_3 != 0B)
  scanning: D.46817_4 = *p_3;
    Indirect ref read is not const
  scanning: if (D.46817_4 != 0)
  scanning: D.46821_6 = MEM[(char *)p_3 + 1B];
    Indirect ref read is not const
  scanning: if (D.46821_6 != 0)
  scanning: p_7 = p_3 + 1;
  scanning: type_8 = switch_core_media_crypto_str2type (p_7);
    checking flags for call: neihter
  scanning: if (type_8 == 9)
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);
    checking flags for call: neihter
  scanning: p_9 = __builtin_strchr (p_7, 32);
    checking flags for call: pure
  scanning: if (p_9 != 0B)
  scanning: D.46817_10 = *p_9;
    Indirect ref read is not const
  scanning: if (D.46817_10 != 0)
  scanning: D.46821_12 = MEM[(char *)p_9 + 1B];
    Indirect ref read is not const
  scanning: if (D.46821_12 != 0)
  scanning: p_13 = p_9 + 1;
  scanning: D.46832_14 = strncasecmp (p_13, "inline:", 7);
    checking flags for call: pure
  scanning: if (D.46832_14 != 0)
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);
    checking flags for call: neihter
  scanning: p_15 = &MEM[(void *)p_9 + 8B];
  scanning: switch_b64_decode (p_15, &key, 64);
    checking flags for call: neihter
  scanning: if (direction_16(D) == 0)
  scanning: D.46837_18 = &ssec_17(D)->local_raw_key[0];
  scanning: D.46838_19 = (void * restrict) D.46837_18;
  scanning: D.46840_21 = SUITES[type_8].keylen;
    static memory read is not const
  scanning: D.46841_22 = (size_t) D.46840_21;
  scanning: memcpy (D.46838_19, &key[0], D.46841_22);
    checking flags for call: neihter
  scanning: D.46843_23 = &ssec_17(D)->remote_raw_key[0];
  scanning: D.46844_24 = (void * restrict) D.46843_23;
  scanning: D.46840_26 = SUITES[type_8].keylen;
    static memory read is not const
  scanning: D.46841_27 = (size_t) D.46840_26;
  scanning: memcpy (D.46844_24, &key[0], D.46841_27);
    checking flags for call: neihter
  scanning: bad:
  scanning: switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");
    checking flags for call: neihter
  scanning: return D.46845_1;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_add_crypto

;; Function switch_core_media_add_crypto

;; 
17 basic blocks, 25 edges, last basic block 17.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [93.3%]  (true,exec)
Successors:  4 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [50.0%]  (true,exec)
Successors:  5 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [29.0%]  (true,exec)
Successors:  6 [13.7%]  (true,exec) 7 [86.3%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [13.7%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [86.3%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [50.0%]  (true,exec)
Successors:  10 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  2 [6.7%]  (false,exec) 3 [50.0%]  (false,exec) 4 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  16 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_add_crypto (struct switch_secure_settings_t * ssec, const char * key_str, switch_rtp_crypto_direction_t direction)
{
  static const char __func__[29] = "switch_core_media_add_crypto";
  char * p;
  switch_rtp_crypto_key_type_t type;
  unsigned char key[64];
  switch_status_t D.46845;
  void * restrict D.46844;
  unsigned char * D.46843;
  size_t D.46841;
  int D.46840;
  void * restrict D.46838;
  unsigned char * D.46837;
  int D.46832;
  char D.46821;
  char D.46817;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  p_3 = __builtin_strchr (key_str_2(D), 32);
  # DEBUG p => p_3
  if (p_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 15> (bad);
  # SUCC: 3 [93.3%]  (true,exec) 15 [6.7%]  (false,exec)

  # BLOCK 3 freq:9328
  # PRED: 2 [93.3%]  (true,exec)
  D.46817_4 = *p_3;
  if (D.46817_4 != 0)
    goto <bb 4>;
  else
    goto <bb 15> (bad);
  # SUCC: 4 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 4 freq:4664
  # PRED: 3 [50.0%]  (true,exec)
  D.46821_6 = MEM[(char *)p_3 + 1B];
  if (D.46821_6 != 0)
    goto <bb 5>;
  else
    goto <bb 15> (bad);
  # SUCC: 5 [29.0%]  (true,exec) 15 [71.0%]  (false,exec)

  # BLOCK 5 freq:1353
  # PRED: 4 [29.0%]  (true,exec)
  p_7 = p_3 + 1;
  # DEBUG p => p_7
  type_8 = switch_core_media_crypto_str2type (p_7);
  # DEBUG type => type_8
  if (type_8 == 9)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [13.7%]  (true,exec) 7 [86.3%]  (false,exec)

  # BLOCK 6 freq:185
  # PRED: 5 [13.7%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 949, 0B, 3, "Parse Error near [%s]\n", p_7);
  goto <bb 15> (bad);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:1167
  # PRED: 5 [86.3%]  (false,exec)
  p_9 = __builtin_strchr (p_7, 32);
  # DEBUG p => p_9
  if (p_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 15> (bad);
  # SUCC: 8 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

  # BLOCK 8 freq:992
  # PRED: 7 [85.0%]  (true,exec)
  D.46817_10 = *p_9;
  if (D.46817_10 != 0)
    goto <bb 9>;
  else
    goto <bb 15> (bad);
  # SUCC: 9 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 9 freq:496
  # PRED: 8 [50.0%]  (true,exec)
  D.46821_12 = MEM[(char *)p_9 + 1B];
  if (D.46821_12 != 0)
    goto <bb 10>;
  else
    goto <bb 15> (bad);
  # SUCC: 10 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 10 freq:248
  # PRED: 9 [50.0%]  (true,exec)
  p_13 = p_9 + 1;
  # DEBUG p => p_13
  D.46832_14 = strncasecmp (p_13, "inline:", 7);
  if (D.46832_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [50.0%]  (true,exec) 12 [50.0%]  (false,exec)

  # BLOCK 11 freq:124
  # PRED: 10 [50.0%]  (true,exec)
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 957, 0B, 3, "Parse Error near [%s]\n", p_13);
  goto <bb 15> (bad);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:124
  # PRED: 10 [50.0%]  (false,exec)
  p_15 = &MEM[(void *)p_9 + 8B];
  # DEBUG p => p_15
  switch_b64_decode (p_15, &key, 64);
  if (direction_16(D) == 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:62
  # PRED: 12 [50.0%]  (true,exec)
  D.46837_18 = &ssec_17(D)->local_raw_key[0];
  D.46838_19 = (void * restrict) D.46837_18;
  D.46840_21 = SUITES[type_8].keylen;
  D.46841_22 = (size_t) D.46840_21;
  memcpy (D.46838_19, &key[0], D.46841_22);
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:62
  # PRED: 12 [50.0%]  (false,exec)
  D.46843_23 = &ssec_17(D)->remote_raw_key[0];
  D.46844_24 = (void * restrict) D.46843_23;
  D.46840_26 = SUITES[type_8].keylen;
  D.46841_27 = (size_t) D.46840_26;
  memcpy (D.46844_24, &key[0], D.46841_27);
  goto <bb 16>;
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:9876
  # PRED: 2 [6.7%]  (false,exec) 3 [50.0%]  (false,exec) 4 [71.0%]  (false,exec) 6 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec) 8 [50.0%]  (false,exec) 9 [50.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
bad:
  switch_log_printf (0, "src/switch_core_media.c", &__func__, 976, 0B, 3, "Error!\n");
  # SUCC: 16 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:10000
  # PRED: 14 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 13 [100.0%]  (fallthru,exec)
  # D.46845_1 = PHI <0(14), 1(15), 0(13)>
  return D.46845_1;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_apply_crypto (switch_core_session_apply_crypto)



 local analysis of switch_core_session_apply_crypto
   scanning: if (type_2(D) == 0)
  scanning: D.43876_6 = session_5(D)->media_handle;
    Indirect ref read is not const
  scanning: if (D.43876_6 == 0B)
  scanning: D.43876_7 = session_5(D)->media_handle;
    Indirect ref read is not const
  scanning: engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};
  scanning: D.43881_11 = session_5(D)->channel;
    Indirect ref read is not const
  scanning: D.43882_12 = switch_channel_test_flag (D.43881_11, 84);
    checking flags for call: neihter
  scanning: if (D.43882_12 != 0)
  scanning: D.43885_13 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
    Indirect ref read is not const
  scanning: if (D.43886_14 != 0B)
  scanning: D.43881_15 = session_5(D)->channel;
    Indirect ref read is not const
  scanning: D.43889_16 = switch_channel_test_flag (D.43881_15, 92);
    checking flags for call: neihter
  scanning: if (D.43889_16 != 0)
  scanning: D.43885_18 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};
  scanning: D.43885_21 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
    Indirect ref read is not const
  scanning: switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);
    checking flags for call: neihter
  scanning: D.43895_23 = engine_10->rtp_session;
    Indirect ref read is not const
  scanning: D.43885_26 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
  scanning: D.43885_28 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
    Indirect ref read is not const
  scanning: D.43898_30 = SUITES[D.43896_29].keylen;
    static memory read is not const
  scanning: D.43899_31 = (switch_size_t) D.43898_30;
  scanning: switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);
    checking flags for call: neihter
  scanning: D.43895_32 = engine_10->rtp_session;
    Indirect ref read is not const
  scanning: D.43885_33 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
    Indirect ref read is not const
  scanning: D.43901_35 = (uint32_t) D.43900_34;
  scanning: D.43885_38 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
  scanning: D.43885_40 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
    Indirect ref read is not const
  scanning: D.43898_42 = SUITES[D.43896_41].keylen;
    static memory read is not const
  scanning: D.43899_43 = (switch_size_t) D.43898_42;
  scanning: switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);
    checking flags for call: neihter
  scanning: D.43881_44 = session_5(D)->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);
    checking flags for call: neihter
  scanning: D.43881_45 = session_5(D)->channel;
    Indirect ref read is not const
  scanning: D.43885_46 = engine_10->crypto_type;
    Indirect ref read is not const
  scanning: D.43903_47 = SUITES[D.43885_46].name;
    static memory read is not const
  scanning: switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_session_apply_crypto

;; Function switch_core_session_apply_crypto

;; 
10 basic blocks, 14 edges, last basic block 10.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  4 [50.0%]  (true,exec) 3 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec)
Successors:  4 [100.0%]  (fallthru,exec)

Basic block 4 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec) 3 [100.0%]  (fallthru,exec)
Successors:  9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [78.4%]  (false,exec)
Successors:  9 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [61.0%]  (false,exec)
Successors:  7 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [78.3%]  (true,exec)
Successors:  8 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [39.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  4 [21.6%]  (true,exec) 5 [39.0%]  (true,exec) 6 [21.6%]  (false,exec) 7 [61.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_session_apply_crypto (struct switch_core_session_t * session, switch_media_type_t type)
{
  const char * varname;
  struct switch_rtp_engine_t * engine;
  char * D.43903;
  unsigned char[64] * D.43902;
  uint32_t D.43901;
  int D.43900;
  switch_size_t D.43899;
  int D.43898;
  unsigned char[64] * D.43897;
  switch_rtp_crypto_key_type_t D.43896;
  struct switch_rtp_t * D.43895;
  struct switch_secure_settings_t * D.43894;
  uint32_t D.43889;
  char * D.43886;
  switch_rtp_crypto_key_type_t D.43885;
  uint32_t D.43882;
  struct switch_channel_t * D.43881;
  struct switch_media_handle_t * D.43876;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  if (type_2(D) == 0)
    goto <bb 4>;
  else
    goto <bb 3>;
  # SUCC: 4 [50.0%]  (true,exec) 3 [50.0%]  (false,exec)

  # BLOCK 3 freq:5000
  # PRED: 2 [50.0%]  (false,exec)
  # DEBUG varname => "rtp_secure_video_confirmed"
  # SUCC: 4 [100.0%]  (fallthru,exec)

  # BLOCK 4 freq:10000
  # PRED: 2 [50.0%]  (true,exec) 3 [100.0%]  (fallthru,exec)
  # varname_1 = PHI <"rtp_secure_audio_confirmed"(2), "rtp_secure_video_confirmed"(3)>
  # DEBUG varname => varname_1
  D.43876_6 = session_5(D)->media_handle;
  if (D.43876_6 == 0B)
    goto <bb 9>;
  else
    goto <bb 5>;
  # SUCC: 9 [21.6%]  (true,exec) 5 [78.4%]  (false,exec)

  # BLOCK 5 freq:7836
  # PRED: 4 [78.4%]  (false,exec)
  D.43876_7 = session_5(D)->media_handle;
  engine_10 = &D.43876_7->engines[type_2(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_10
  D.43881_11 = session_5(D)->channel;
  D.43882_12 = switch_channel_test_flag (D.43881_11, 84);
  if (D.43882_12 != 0)
    goto <bb 9>;
  else
    goto <bb 6>;
  # SUCC: 9 [39.0%]  (true,exec) 6 [61.0%]  (false,exec)

  # BLOCK 6 freq:4780
  # PRED: 5 [61.0%]  (false,exec)
  D.43885_13 = engine_10->crypto_type;
  D.43886_14 = engine_10->ssec[D.43885_13].remote_crypto_key;
  if (D.43886_14 != 0B)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 [78.3%]  (true,exec) 9 [21.6%]  (false,exec)

  # BLOCK 7 freq:3745
  # PRED: 6 [78.3%]  (true,exec)
  D.43881_15 = session_5(D)->channel;
  D.43889_16 = switch_channel_test_flag (D.43881_15, 92);
  if (D.43889_16 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [39.0%]  (true,exec) 9 [61.0%]  (false,exec)

  # BLOCK 8 freq:1460
  # PRED: 7 [39.0%]  (true,exec)
  D.43885_18 = engine_10->crypto_type;
  D.43894_20 = &engine_10->ssec[D.43885_18]{lb: 0 sz: 144};
  D.43885_21 = engine_10->crypto_type;
  D.43886_22 = engine_10->ssec[D.43885_21].remote_crypto_key;
  switch_core_media_add_crypto (D.43894_20, D.43886_22, 1);
  D.43895_23 = engine_10->rtp_session;
  D.43885_26 = engine_10->crypto_type;
  D.43897_27 = &engine_10->ssec[D.43885_26].local_raw_key;
  D.43885_28 = engine_10->crypto_type;
  D.43896_29 = engine_10->ssec[D.43885_28].crypto_type;
  D.43898_30 = SUITES[D.43896_29].keylen;
  D.43899_31 = (switch_size_t) D.43898_30;
  switch_rtp_add_crypto_key (D.43895_23, 0, 1, D.43896_29, D.43897_27, D.43899_31);
  D.43895_32 = engine_10->rtp_session;
  D.43885_33 = engine_10->crypto_type;
  D.43900_34 = engine_10->ssec[D.43885_33].crypto_tag;
  D.43901_35 = (uint32_t) D.43900_34;
  D.43885_38 = engine_10->crypto_type;
  D.43902_39 = &engine_10->ssec[D.43885_38].remote_raw_key;
  D.43885_40 = engine_10->crypto_type;
  D.43896_41 = engine_10->ssec[D.43885_40].crypto_type;
  D.43898_42 = SUITES[D.43896_41].keylen;
  D.43899_43 = (switch_size_t) D.43898_42;
  switch_rtp_add_crypto_key (D.43895_32, 1, D.43901_35, D.43896_41, D.43902_39, D.43899_43);
  D.43881_44 = session_5(D)->channel;
  switch_channel_set_variable_var_check (D.43881_44, varname_1, "true", 1);
  D.43881_45 = session_5(D)->channel;
  D.43885_46 = engine_10->crypto_type;
  D.43903_47 = SUITES[D.43885_46].name;
  switch_channel_set_variable_var_check (D.43881_45, "rtp_secure_media_negotiated", D.43903_47, 1);
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:10000
  # PRED: 4 [21.6%]  (true,exec) 5 [39.0%]  (true,exec) 6 [21.6%]  (false,exec) 7 [61.0%]  (false,exec) 8 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_rtp_session (switch_core_media_set_rtp_session)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_check_incoming_crypto (switch_core_session_check_incoming_crypto)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_create (switch_media_handle_create)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_set_media_flag (switch_media_handle_set_media_flag)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_set_media_flags (switch_media_handle_set_media_flags)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_clear_media_flag (switch_media_handle_clear_media_flag)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_test_media_flag (switch_media_handle_test_media_flag)

Function is not available or overwritable; not analyzing.

;; Function generate_m.isra.4 (generate_m.isra.4)



 local analysis of generate_m.isra.4
   scanning: already_did = {};
  scanning: if (session_1(D) == 0B)
  scanning: __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);
    checking flags for call: ignoring side effects->pure looping
  scanning: smh_2 = session_1(D)->media_handle;
    Indirect ref read is not const
  scanning: if (smh_2 == 0B)
  scanning: D.47710_4 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47709_5 = buf_3(D) + D.47710_4;
  scanning: D.47708_6 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47707_8 = buflen_7(D) - D.47708_6;
  scanning: D.47706_10 = (int) port_9(D);
  scanning: if (secure_11(D) != 0)
  scanning: D.47704_12 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47703_13 = switch_channel_direction (D.47704_12);
    checking flags for call: neihter
  scanning: if (D.47703_13 == 1)
  scanning: D.47702_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
    Indirect ref read is not const
  scanning: if (D.47702_14 != 9)
  scanning: D.47701_16 = get_media_profile_name (session_1(D), iftmp.40_15);
    checking flags for call: neihter
  scanning: switch_snprintf (D.47709_5, D.47707_8, "m=audio %d %s", D.47706_10, D.47701_16);
    checking flags for call: neihter
  scanning: imp_18 = smh_2->codecs[i_17];
    Indirect ref read is not const
  scanning: D.47700_19 = imp_18->microseconds_per_packet;
    Indirect ref read is not const
  scanning: this_ptime_20 = D.47700_19 / 1000;
  scanning: D.47699_21 = imp_18->iananame;
    Indirect ref read is not const
  scanning: D.47698_22 = strcasecmp (D.47699_21, "ilbc");
    checking flags for call: pure
  scanning: if (D.47698_22 == 0)
  scanning: D.47699_23 = imp_18->iananame;
    Indirect ref read is not const
  scanning: D.47697_24 = strcasecmp (D.47699_23, "isac");
    checking flags for call: pure
  scanning: if (D.47697_24 == 0)
  scanning: D.47696_25 = imp_18->codec_type;
    Indirect ref read is not const
  scanning: if (D.47696_25 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: if (cur_ptime_26(D) == 0)
  scanning: if (ptime_27 == 0)
  scanning: if (cur_ptime_26(D) != this_ptime_28)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.47695_29 = smh_2->ianacodes[i_17];
    Indirect ref read is not const
  scanning: D.47694_30 = (signed char) D.47695_29;
  scanning: if (D.47694_30 >= 0)
  scanning: D.47695_31 = smh_2->ianacodes[i_17];
    Indirect ref read is not const
  scanning: D.47693_32 = (int) D.47695_31;
  scanning: D.47692_33 = already_did[D.47693_32];
  scanning: if (D.47692_33 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.47695_34 = smh_2->ianacodes[i_17];
    Indirect ref read is not const
  scanning: D.47693_35 = (int) D.47695_34;
  scanning: already_did[D.47693_35] = 1;
  scanning: D.47691_36 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47690_37 = buf_3(D) + D.47691_36;
  scanning: D.47689_38 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47688_39 = buflen_7(D) - D.47689_38;
  scanning: D.47695_40 = smh_2->ianacodes[i_17];
    Indirect ref read is not const
  scanning: D.47693_41 = (int) D.47695_40;
  scanning: switch_snprintf (D.47690_37, D.47688_39, " %d", D.47693_41);
    checking flags for call: neihter
  scanning: i_42 = i_17 + 1;
  scanning: D.47687_43 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47686_44 = D.47687_43->num_codecs;
    Indirect ref read is not const
  scanning: if (i_17 < D.47686_44)
  scanning: D.47687_45 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47685_46 = D.47687_45->dtmf_type;
    Indirect ref read is not const
  scanning: if (D.47685_46 == 0)
  scanning: D.47687_47 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47684_48 = D.47687_47->te;
    Indirect ref read is not const
  scanning: if (D.47684_48 > 95)
  scanning: D.47683_49 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47682_50 = buf_3(D) + D.47683_49;
  scanning: D.47681_51 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47680_52 = buflen_7(D) - D.47681_51;
  scanning: D.47687_53 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47684_54 = D.47687_53->te;
    Indirect ref read is not const
  scanning: D.47679_55 = (int) D.47684_54;
  scanning: switch_snprintf (D.47682_50, D.47680_52, " %d", D.47679_55);
    checking flags for call: neihter
  scanning: D.47678_56 = switch_media_handle_test_media_flag (smh_2, 9);
    checking flags for call: neihter
  scanning: if (D.47678_56 == 0)
  scanning: D.47677_58 = cng_type_57(D) != 0;
  scanning: D.47676_60 = use_cng_59(D) != 0;
  scanning: D.47675_61 = D.47677_58 && D.47676_60;
  scanning: if (D.47675_61 != 0)
  scanning: D.47674_62 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47673_63 = buf_3(D) + D.47674_62;
  scanning: D.47672_64 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47671_65 = buflen_7(D) - D.47672_64;
  scanning: switch_snprintf (D.47673_63, D.47671_65, " %d", cng_type_57(D));
    checking flags for call: neihter
  scanning: D.47670_66 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47669_67 = buf_3(D) + D.47670_66;
  scanning: D.47668_68 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47667_69 = buflen_7(D) - D.47668_68;
  scanning: switch_snprintf (D.47669_67, D.47667_69, "\n");
    checking flags for call: neihter
  scanning: memset (&already_did, 0, 512);
    checking flags for call: neihter
  scanning: imp_71 = smh_2->codecs[i_70];
    Indirect ref read is not const
  scanning: fmtp_72 = imp_71->fmtp;
    Indirect ref read is not const
  scanning: D.47666_73 = imp_71->microseconds_per_packet;
    Indirect ref read is not const
  scanning: this_ptime_74 = D.47666_73 / 1000;
  scanning: D.47665_75 = imp_71->codec_type;
    Indirect ref read is not const
  scanning: if (D.47665_75 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.47664_76 = imp_71->iananame;
    Indirect ref read is not const
  scanning: D.47663_77 = strcasecmp (D.47664_76, "ilbc");
    checking flags for call: pure
  scanning: if (D.47663_77 == 0)
  scanning: D.47664_78 = imp_71->iananame;
    Indirect ref read is not const
  scanning: D.47662_79 = strcasecmp (D.47664_78, "isac");
    checking flags for call: pure
  scanning: if (D.47662_79 == 0)
  scanning: if (cur_ptime_26(D) == 0)
  scanning: if (ptime_80 == 0)
  scanning: if (cur_ptime_26(D) != this_ptime_81)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.47695_82 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47694_83 = (signed char) D.47695_82;
  scanning: if (D.47694_83 >= 0)
  scanning: D.47695_84 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47693_85 = (int) D.47695_84;
  scanning: D.47692_86 = already_did[D.47693_85];
  scanning: if (D.47692_86 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.47695_87 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47693_88 = (int) D.47695_87;
  scanning: already_did[D.47693_88] = 1;
  scanning: D.47661_89 = imp_71->samples_per_second;
    Indirect ref read is not const
  scanning: rate_90 = (int) D.47661_89;
  scanning: if (map_91(D) != 0B)
  scanning: key = "";
  scanning: D.47664_92 = imp_71->iananame;
    Indirect ref read is not const
  scanning: D.47660_93 = imp_71->bits_per_second;
    Indirect ref read is not const
  scanning: switch_snprintf (&key, 128, "%s:%u", D.47664_92, D.47660_93);
    checking flags for call: neihter
  scanning: check_94 = switch_event_get_header_idx (map_91(D), &key, -1);
    checking flags for call: neihter
  scanning: if (check_94 != 0B)
  scanning: D.47664_95 = imp_71->iananame;
    Indirect ref read is not const
  scanning: check_96 = switch_event_get_header_idx (map_91(D), D.47664_95, -1);
    checking flags for call: neihter
  scanning: if (check_96 != 0B)
  scanning: D.47659_97 = smh_2->fmtps[i_70];
    Indirect ref read is not const
  scanning: if (D.47659_97 != 0B)
  scanning: fmtp_98 = smh_2->fmtps[i_70];
    Indirect ref read is not const
  scanning: D.47695_99 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: if (D.47695_99 > 95)
  scanning: D.47704_100 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47658_101 = switch_channel_test_flag (D.47704_100, 110);
    checking flags for call: neihter
  scanning: if (D.47658_101 != 0)
  scanning: D.47664_102 = imp_71->iananame;
    Indirect ref read is not const
  scanning: D.47657_103 = imp_71->number_of_channels;
    Indirect ref read is not const
  scanning: D.47656_104 = (int) D.47657_103;
  scanning: channels_105 = get_channels (D.47664_102, D.47656_104);
    checking flags for call: neihter
  scanning: if (channels_105 > 1)
  scanning: D.47655_106 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47654_107 = buf_3(D) + D.47655_106;
  scanning: D.47653_108 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47652_109 = buflen_7(D) - D.47653_108;
  scanning: D.47695_110 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47693_111 = (int) D.47695_110;
  scanning: D.47664_112 = imp_71->iananame;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47654_107, D.47652_109, "a=rtpmap:%d %s/%d/%d\n", D.47693_111, D.47664_112, rate_90, channels_105);
    checking flags for call: neihter
  scanning: D.47651_113 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47650_114 = buf_3(D) + D.47651_113;
  scanning: D.47649_115 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47648_116 = buflen_7(D) - D.47649_115;
  scanning: D.47695_117 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47693_118 = (int) D.47695_117;
  scanning: D.47664_119 = imp_71->iananame;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47650_114, D.47648_116, "a=rtpmap:%d %s/%d\n", D.47693_118, D.47664_119, rate_90);
    checking flags for call: neihter
  scanning: if (fmtp_120 != 0B)
  scanning: D.47647_121 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47646_122 = buf_3(D) + D.47647_121;
  scanning: D.47645_123 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47644_124 = buflen_7(D) - D.47645_123;
  scanning: D.47695_125 = smh_2->ianacodes[i_70];
    Indirect ref read is not const
  scanning: D.47693_126 = (int) D.47695_125;
  scanning: switch_snprintf (D.47646_122, D.47644_124, "a=fmtp:%d %s\n", D.47693_126, fmtp_120);
    checking flags for call: neihter
  scanning: i_127 = i_70 + 1;
  scanning: D.47687_128 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47686_129 = D.47687_128->num_codecs;
    Indirect ref read is not const
  scanning: if (i_70 < D.47686_129)
  scanning: D.47687_130 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47685_131 = D.47687_130->dtmf_type;
    Indirect ref read is not const
  scanning: if (D.47685_131 == 0)
  scanning: D.47643_132 = switch_media_handle_test_media_flag (smh_2, 8);
    checking flags for call: neihter
  scanning: if (D.47643_132 != 0)
  scanning: D.47704_133 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47642_134 = switch_channel_test_flag (D.47704_133, 93);
    checking flags for call: neihter
  scanning: if (D.47642_134 != 0)
  scanning: D.47687_135 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47684_136 = D.47687_135->te;
    Indirect ref read is not const
  scanning: if (D.47684_136 > 95)
  scanning: D.47704_137 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47641_138 = switch_channel_test_flag (D.47704_137, 106);
    checking flags for call: neihter
  scanning: if (D.47641_138 != 0)
  scanning: D.47640_139 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47639_140 = buf_3(D) + D.47640_139;
  scanning: D.47638_141 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47637_142 = buflen_7(D) - D.47638_141;
  scanning: D.47687_143 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47684_144 = D.47687_143->te;
    Indirect ref read is not const
  scanning: D.47679_145 = (int) D.47684_144;
  scanning: switch_snprintf (D.47639_140, D.47637_142, "a=rtpmap:%d telephone-event/8000\n", D.47679_145);
    checking flags for call: neihter
  scanning: D.47636_146 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47635_147 = buf_3(D) + D.47636_146;
  scanning: D.47634_148 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47633_149 = buflen_7(D) - D.47634_148;
  scanning: D.47687_150 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47684_151 = D.47687_150->te;
    Indirect ref read is not const
  scanning: D.47679_152 = (int) D.47684_151;
  scanning: switch_snprintf (D.47635_147, D.47633_149, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.47679_152, D.47679_152);
    checking flags for call: neihter
  scanning: D.47632_153 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
    Indirect ref read is not const
  scanning: if (D.47632_153 == 0B)
  scanning: D.47516_154 = MEM[(const char *)D.47632_153];
    Indirect ref read is not const
  scanning: if (D.47516_154 == 0)
  scanning: if (D.47517_155 == 0)
  scanning: if (secure_11(D) != 0)
  scanning: D.47631_156 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47630_157 = buf_3(D) + D.47631_156;
  scanning: D.47629_158 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47628_159 = buflen_7(D) - D.47629_158;
  scanning: D.47632_160 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
    Indirect ref read is not const
  scanning: D.47627_161 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.str;
  scanning: switch_snprintf (D.47630_157, D.47628_159, "a=fingerprint:%s %s\n", D.47632_160, D.47627_161);
    checking flags for call: neihter
  scanning: D.47687_162 = smh_2->mparams;
    Indirect ref read is not const
  scanning: D.47626_163 = D.47687_162->rtcp_audio_interval_msec;
    Indirect ref read is not const
  scanning: if (D.47626_163 != 0B)
  scanning: D.47625_164 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.47625_164 > 0)
  scanning: D.47624_165 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47623_166 = buf_3(D) + D.47624_165;
  scanning: D.47622_167 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47621_168 = buflen_7(D) - D.47622_167;
  scanning: switch_snprintf (D.47623_166, D.47621_168, "a=rtcp-mux\n");
    checking flags for call: neihter
  scanning: D.47620_169 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47619_170 = buf_3(D) + D.47620_169;
  scanning: D.47618_171 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47617_172 = buflen_7(D) - D.47618_171;
  scanning: D.47706_173 = (int) port_9(D);
  scanning: switch_snprintf (D.47619_170, D.47617_172, "a=rtcp:%d IN %s %s\n", D.47706_173, family_174(D), ip_175(D));
    checking flags for call: neihter
  scanning: D.47616_176 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47615_177 = buf_3(D) + D.47616_176;
  scanning: D.47614_178 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47613_179 = buflen_7(D) - D.47614_178;
  scanning: D.47706_180 = (int) port_9(D);
  scanning: D.47612_181 = D.47706_180 + 1;
  scanning: switch_snprintf (D.47615_177, D.47613_179, "a=rtcp:%d IN %s %s\n", D.47612_181, family_174(D), ip_175(D));
    checking flags for call: neihter
  scanning: D.47611_182 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ice_out.cands[0][0].ready;
    Indirect ref read is not const
  scanning: if (D.47611_182 != 0)
  scanning: tmp1 = "";
  scanning: tmp2 = "";
  scanning: tmp1[10] = 0;
  scanning: tmp2[10] = 0;
  scanning: switch_stun_random_string (&tmp1, 10, "0123456789");
    checking flags for call: neihter
  scanning: switch_stun_random_string (&tmp2, 10, "0123456789");
    checking flags for call: neihter
  scanning: gen_ice (session_1(D), 0, 0B, 0);
    checking flags for call: neihter
  scanning: D.47610_183 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47609_184 = buf_3(D) + D.47610_183;
  scanning: D.47608_185 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47607_186 = buflen_7(D) - D.47608_185;
  scanning: D.47606_187 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
    Indirect ref read is not const
  scanning: D.47605_188 = smh_2->cname;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47609_184, D.47607_186, "a=ssrc:%u cname:%s\n", D.47606_187, D.47605_188);
    checking flags for call: neihter
  scanning: D.47604_189 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47603_190 = buf_3(D) + D.47604_189;
  scanning: D.47602_191 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47601_192 = buflen_7(D) - D.47602_191;
  scanning: D.47606_193 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
    Indirect ref read is not const
  scanning: D.47600_194 = smh_2->msid;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47603_190, D.47601_192, "a=ssrc:%u msid:%s a0\n", D.47606_193, D.47600_194);
    checking flags for call: neihter
  scanning: D.47599_195 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47598_196 = buf_3(D) + D.47599_195;
  scanning: D.47597_197 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47596_198 = buflen_7(D) - D.47597_197;
  scanning: D.47606_199 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
    Indirect ref read is not const
  scanning: D.47600_200 = smh_2->msid;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47598_196, D.47596_198, "a=ssrc:%u mslabel:%s\n", D.47606_199, D.47600_200);
    checking flags for call: neihter
  scanning: D.47595_201 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47594_202 = buf_3(D) + D.47595_201;
  scanning: D.47593_203 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47592_204 = buflen_7(D) - D.47593_203;
  scanning: D.47606_205 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
    Indirect ref read is not const
  scanning: D.47600_206 = smh_2->msid;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47594_202, D.47592_204, "a=ssrc:%u label:%sa0\n", D.47606_205, D.47600_206);
    checking flags for call: neihter
  scanning: D.47591_207 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47590_208 = buf_3(D) + D.47591_207;
  scanning: D.47589_209 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47588_210 = buflen_7(D) - D.47589_209;
  scanning: D.47587_211 = MEM[(struct ice_t *)smh_2 + 6480B].ufrag;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47590_208, D.47588_210, "a=ice-ufrag:%s\n", D.47587_211);
    checking flags for call: neihter
  scanning: D.47586_212 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47585_213 = buf_3(D) + D.47586_212;
  scanning: D.47584_214 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47583_215 = buflen_7(D) - D.47584_214;
  scanning: D.47582_216 = MEM[(struct ice_t *)smh_2 + 6480B].pwd;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47585_213, D.47583_215, "a=ice-pwd:%s\n", D.47582_216);
    checking flags for call: neihter
  scanning: D.47581_217 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47580_218 = buf_3(D) + D.47581_217;
  scanning: D.47579_219 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47578_220 = buflen_7(D) - D.47579_219;
  scanning: D.47577_221 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
    Indirect ref read is not const
  scanning: D.47576_222 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: D.47575_223 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
    Indirect ref read is not const
  scanning: D.47574_224 = (int) D.47575_223;
  scanning: switch_snprintf (D.47580_218, D.47578_220, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.47577_221, 659136, D.47576_222, D.47574_224);
    checking flags for call: neihter
  scanning: D.47573_225 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: if (D.47573_225 == 0B)
  scanning: D.47514_226 = MEM[(const char *)D.47573_225];
    Indirect ref read is not const
  scanning: if (D.47514_226 == 0)
  scanning: if (D.47515_227 == 0)
  scanning: D.47576_228 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: if (D.47576_228 == 0B)
  scanning: D.47512_229 = MEM[(const char *)D.47576_228];
    Indirect ref read is not const
  scanning: if (D.47512_229 == 0)
  scanning: if (D.47513_230 == 0)
  scanning: D.47573_231 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: D.47576_232 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: D.47572_233 = __builtin_strcmp (D.47573_231, D.47576_232);
    checking flags for call: pure
  scanning: if (D.47572_233 != 0)
  scanning: D.47571_234 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
    Indirect ref read is not const
  scanning: D.47575_235 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
    Indirect ref read is not const
  scanning: if (D.47571_234 != D.47575_235)
  scanning: D.47570_236 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47569_237 = buf_3(D) + D.47570_236;
  scanning: D.47568_238 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47567_239 = buflen_7(D) - D.47568_238;
  scanning: D.47577_240 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
    Indirect ref read is not const
  scanning: D.47576_241 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: D.47575_242 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
    Indirect ref read is not const
  scanning: D.47574_243 = (int) D.47575_242;
  scanning: D.47573_244 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: D.47571_245 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
    Indirect ref read is not const
  scanning: D.47566_246 = (int) D.47571_245;
  scanning: switch_snprintf (D.47569_237, D.47567_239, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47577_240, 659134, D.47576_241, D.47574_243, D.47573_244, D.47566_246);
    checking flags for call: neihter
  scanning: D.47625_247 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.47625_247 <= 0)
  scanning: D.47704_248 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47565_249 = switch_channel_direction (D.47704_248);
    checking flags for call: neihter
  scanning: if (D.47565_249 == 1)
  scanning: D.47564_250 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47563_251 = buf_3(D) + D.47564_250;
  scanning: D.47562_252 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47561_253 = buflen_7(D) - D.47562_252;
  scanning: D.47577_254 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
    Indirect ref read is not const
  scanning: D.47576_255 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: D.47575_256 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
    Indirect ref read is not const
  scanning: D.47574_257 = (int) D.47575_256;
  scanning: D.47625_258 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
    Indirect ref read is not const
  scanning: D.47560_259 = D.47625_258 <= 0;
  scanning: D.47559_260 = D.47574_257 + D.47560_259;
  scanning: switch_snprintf (D.47563_251, D.47561_253, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.47577_254, 659136, D.47576_255, D.47559_260);
    checking flags for call: neihter
  scanning: D.47573_261 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: if (D.47573_261 == 0B)
  scanning: D.47510_262 = MEM[(const char *)D.47573_261];
    Indirect ref read is not const
  scanning: if (D.47510_262 == 0)
  scanning: if (D.47511_263 == 0)
  scanning: D.47558_264 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
    Indirect ref read is not const
  scanning: if (D.47558_264 == 0B)
  scanning: D.47508_265 = MEM[(const char *)D.47558_264];
    Indirect ref read is not const
  scanning: if (D.47508_265 == 0)
  scanning: if (D.47509_266 == 0)
  scanning: D.47573_267 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: D.47558_268 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
    Indirect ref read is not const
  scanning: D.47557_269 = __builtin_strcmp (D.47573_267, D.47558_268);
    checking flags for call: pure
  scanning: if (D.47557_269 != 0)
  scanning: D.47571_270 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
    Indirect ref read is not const
  scanning: D.47556_271 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_port;
    Indirect ref read is not const
  scanning: if (D.47571_270 != D.47556_271)
  scanning: D.47555_272 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47554_273 = buf_3(D) + D.47555_272;
  scanning: D.47553_274 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47552_275 = buflen_7(D) - D.47553_274;
  scanning: D.47577_276 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
    Indirect ref read is not const
  scanning: D.47576_277 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
    Indirect ref read is not const
  scanning: D.47575_278 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
    Indirect ref read is not const
  scanning: D.47574_279 = (int) D.47575_278;
  scanning: D.47625_280 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
    Indirect ref read is not const
  scanning: D.47560_281 = D.47625_280 <= 0;
  scanning: D.47559_282 = D.47574_279 + D.47560_281;
  scanning: D.47573_283 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
    Indirect ref read is not const
  scanning: D.47571_284 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
    Indirect ref read is not const
  scanning: D.47566_285 = (int) D.47571_284;
  scanning: D.47625_286 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
    Indirect ref read is not const
  scanning: D.47560_287 = D.47625_286 <= 0;
  scanning: D.47551_288 = D.47566_285 + D.47560_287;
  scanning: switch_snprintf (D.47554_273, D.47552_275, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47577_276, 659134, D.47576_277, D.47559_282, D.47573_283, D.47551_288);
    checking flags for call: neihter
  scanning: if (secure_11(D) != 0)
  scanning: D.47704_289 = session_1(D)->channel;
    Indirect ref read is not const
  scanning: D.47550_290 = switch_channel_test_flag (D.47704_289, 109);
    checking flags for call: neihter
  scanning: if (D.47550_290 == 0)
  scanning: D.47549_292 = smh_2->crypto_suite_order[i_291];
    Indirect ref read is not const
  scanning: j_293 = SUITES[D.47549_292].type;
    static memory read is not const
  scanning: D.47702_294 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
    Indirect ref read is not const
  scanning: if (j_293 == D.47702_294)
  scanning: D.47702_295 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
    Indirect ref read is not const
  scanning: if (D.47702_295 == 9)
  scanning: D.47548_296 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
    Indirect ref read is not const
  scanning: if (D.47548_296 == 0B)
  scanning: D.47506_297 = MEM[(const char *)D.47548_296];
    Indirect ref read is not const
  scanning: if (D.47506_297 == 0)
  scanning: if (D.47507_298 == 0)
  scanning: D.47547_299 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47546_300 = buf_3(D) + D.47547_299;
  scanning: D.47545_301 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47544_302 = buflen_7(D) - D.47545_301;
  scanning: D.47548_303 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
    Indirect ref read is not const
  scanning: switch_snprintf (D.47546_300, D.47544_302, "a=crypto:%s\n", D.47548_303);
    checking flags for call: neihter
  scanning: i_304 = i_291 + 1;
  scanning: D.47549_305 = smh_2->crypto_suite_order[i_291];
    Indirect ref read is not const
  scanning: if (D.47549_305 != 9)
  scanning: if (cng_type_57(D) == 0)
  scanning: D.47543_306 = switch_media_handle_test_media_flag (smh_2, 9);
    checking flags for call: neihter
  scanning: if (D.47543_306 != 0)
  scanning: D.47542_307 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47541_308 = buf_3(D) + D.47542_307;
  scanning: D.47540_309 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47539_310 = buflen_7(D) - D.47540_309;
  scanning: switch_snprintf (D.47541_308, D.47539_310, "a=silenceSupp:off - - - -\n");
    checking flags for call: neihter
  scanning: if (append_audio_311(D) != 0B)
  scanning: D.47538_312 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47537_313 = buf_3(D) + D.47538_312;
  scanning: D.47536_314 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47535_315 = buflen_7(D) - D.47536_314;
  scanning: D.47533_316 = *append_audio_311(D);
    Indirect ref read is not const
  scanning: if (D.47533_316 != 0)
  scanning: D.47532_317 = strlen (append_audio_311(D));
    checking flags for call: pure
  scanning: D.47531_318 = D.47532_317 + -1;
  scanning: append_audio_319 = append_audio_311(D) + D.47531_318;
  scanning: D.47530_321 = *append_audio_320;
    Indirect ref read is not const
  scanning: if (D.47530_321 == 10)
  scanning: switch_snprintf (D.47537_313, D.47535_315, "%s%s", append_audio_311(D), iftmp.41_322);
    checking flags for call: neihter
  scanning: if (cur_ptime_26(D) == 0)
  scanning: if (cur_ptime_323 != 0)
  scanning: D.47529_324 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47528_325 = buf_3(D) + D.47529_324;
  scanning: D.47527_326 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47526_327 = buflen_7(D) - D.47527_326;
  scanning: switch_snprintf (D.47528_325, D.47526_327, "a=ptime:%d\n", cur_ptime_323);
    checking flags for call: neihter
  scanning: local_sdp_audio_zrtp_hash_328 = switch_core_media_get_zrtp_hash (session_1(D), 0, 1);
    checking flags for call: neihter
  scanning: if (local_sdp_audio_zrtp_hash_328 != 0B)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_1(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
    checking flags for call: neihter
  scanning: D.47525_329 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47524_330 = buf_3(D) + D.47525_329;
  scanning: D.47523_331 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47522_332 = buflen_7(D) - D.47523_331;
  scanning: switch_snprintf (D.47524_330, D.47522_332, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
    checking flags for call: neihter
  scanning: if (sr_333(D) == 0B)
  scanning: D.47504_334 = *sr_333(D);
    Indirect ref read is not const
  scanning: if (D.47504_334 == 0)
  scanning: if (D.47505_335 == 0)
  scanning: D.47521_336 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47520_337 = buf_3(D) + D.47521_336;
  scanning: D.47519_338 = strlen (buf_3(D));
    checking flags for call: pure
  scanning: D.47518_339 = buflen_7(D) - D.47519_338;
  scanning: switch_snprintf (D.47520_337, D.47518_339, "a=%s\n", sr_333(D));
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: generate_m.isra.4

;; Function generate_m.isra.4

;; 
139 basic blocks, 221 edges, last basic block 139.

Basic block 138 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  2 [100.0%]  (fallthru)

Basic block 2 (new, reachable)
Predecessors:  138 [100.0%]  (fallthru)
Successors:  3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [0.0%]  (true,exec)
Successors: 

Basic block 4 (new, reachable)
Predecessors:  2 [100.0%]  (false,exec)
Successors:  137 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [89.9%]  (false,exec)
Successors:  6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [29.0%]  (true,exec)
Successors:  9 [28.0%]  (true,exec) 7 [72.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  5 [71.0%]  (false,exec) 6 [72.0%]  (false,exec)
Successors:  8 [72.0%]  (true,exec) 9 [28.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [72.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru)

Basic block 9 (new, reachable)
Predecessors:  6 [28.0%]  (true,exec) 7 [28.0%]  (false,exec) 8 [100.0%]  (fallthru)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 10 (new, reachable)
Predecessors:  26 [98.0%]  (true,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  10 [50.0%]  (true,exec) 11 [50.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [50.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [50.0%]  (false,exec)
Successors:  16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [50.0%]  (true,exec)
Successors:  17 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [50.0%]  (true,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  15 [50.0%]  (false,exec)
Successors:  19 [72.0%]  (true,exec) 20 [28.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [72.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  16 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec) 18 [28.0%]  (false,exec)
Successors:  21 [86.9%]  (true,exec) 24 [13.1%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [86.9%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  21 [50.0%]  (false,exec)
Successors:  24 [100.0%]  (fallthru,exec)

Basic block 24 (new, reachable)
Predecessors:  20 [13.1%]  (false,exec) 23 [100.0%]  (fallthru,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec)
Successors:  26 [100.0%]  (fallthru,dfs_back,exec)

Basic block 26 (new, reachable)
Predecessors:  9 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
Successors:  10 [98.0%]  (true,exec) 27 [2.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [2.0%]  (false,exec)
Successors:  28 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [50.0%]  (true,exec)
Successors:  29 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [29.0%]  (true,exec)
Successors:  30 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  27 [50.0%]  (false,exec) 28 [71.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
Successors:  31 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec)
Successors:  32 [29.0%]  (true,exec) 33 [71.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [29.0%]  (true,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec) 31 [71.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
Successors:  62 [100.0%]  (fallthru,exec)

Basic block 34 (new, reachable)
Predecessors:  62 [98.0%]  (true,exec)
Successors:  35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  34 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  38 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec) 37 [50.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  37 [50.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
Successors:  40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [50.0%]  (true,exec)
Successors:  41 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [50.0%]  (true,exec)
Successors:  44 [100.0%]  (fallthru,exec)

Basic block 42 (new, reachable)
Predecessors:  39 [50.0%]  (false,exec)
Successors:  43 [72.0%]  (true,exec) 44 [28.0%]  (false,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [72.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 44 (new, reachable)
Predecessors:  40 [50.0%]  (false,exec) 41 [100.0%]  (fallthru,exec) 42 [28.0%]  (false,exec)
Successors:  45 [73.0%]  (true,exec) 48 [27.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [73.0%]  (true,exec)
Successors:  46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [50.0%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  45 [50.0%]  (false,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 48 (new, reachable)
Predecessors:  44 [27.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
Successors:  49 [69.8%]  (true,exec) 52 [30.2%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [69.8%]  (true,exec)
Successors:  51 [93.3%]  (true,exec) 50 [6.7%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [6.7%]  (false,exec)
Successors:  51 [85.0%]  (true,exec) 52 [15.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  49 [93.3%]  (true,exec) 50 [85.0%]  (true,exec)
Successors:  52 [100.0%]  (fallthru,exec)

Basic block 52 (new, reachable)
Predecessors:  48 [30.2%]  (false,exec) 50 [15.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
Successors:  53 [85.0%]  (true,exec) 54 [15.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [85.0%]  (true,exec)
Successors:  54 [100.0%]  (fallthru,exec)

Basic block 54 (new, reachable)
Predecessors:  52 [15.0%]  (false,exec) 53 [100.0%]  (fallthru,exec)
Successors:  56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [50.0%]  (false,exec)
Successors:  56 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
Successors:  57 [73.0%]  (true,exec) 58 [27.0%]  (false,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [73.0%]  (true,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  56 [27.0%]  (false,exec)
Successors:  59 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  55 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
Successors:  60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [69.8%]  (true,exec)
Successors:  61 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  35 [100.0%]  (fallthru,exec) 43 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
Successors:  62 [100.0%]  (fallthru,dfs_back,exec)

Basic block 62 (new, reachable)
Predecessors:  33 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
Successors:  34 [98.0%]  (true,exec) 63 [2.0%]  (false,exec)

Basic block 63 (new, reachable)
Predecessors:  62 [2.0%]  (false,exec)
Successors:  66 [71.0%]  (true,exec) 64 [29.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [29.0%]  (false,exec)
Successors:  66 [71.0%]  (true,exec) 65 [29.0%]  (false,exec)

Basic block 65 (new, reachable)
Predecessors:  64 [29.0%]  (false,exec)
Successors:  66 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  63 [71.0%]  (true,exec) 64 [71.0%]  (true,exec) 65 [50.0%]  (true,exec)
Successors:  67 [29.0%]  (true,exec) 70 [71.0%]  (false,exec)

Basic block 67 (new, reachable)
Predecessors:  66 [29.0%]  (true,exec)
Successors:  68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

Basic block 68 (new, reachable)
Predecessors:  67 [50.0%]  (true,exec)
Successors:  70 [100.0%]  (fallthru,exec)

Basic block 69 (new, reachable)
Predecessors:  67 [50.0%]  (false,exec)
Successors:  70 [100.0%]  (fallthru,exec)

Basic block 70 (new, reachable)
Predecessors:  65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec)
Successors:  73 [15.0%]  (true,exec) 71 [85.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [85.0%]  (false,exec)
Successors:  73 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 72 (new, reachable)
Predecessors:  71 [50.0%]  (false,exec)
Successors:  73 [100.0%]  (fallthru,exec)

Basic block 73 (new, reachable)
Predecessors:  70 [15.0%]  (true,exec) 71 [50.0%]  (true,exec) 72 [100.0%]  (fallthru,exec)
Successors:  74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [50.0%]  (true,exec)
Successors:  75 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [29.0%]  (true,exec)
Successors:  76 [100.0%]  (fallthru,exec)

Basic block 76 (new, reachable)
Predecessors:  73 [50.0%]  (false,exec) 74 [71.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
Successors:  77 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

Basic block 77 (new, reachable)
Predecessors:  76 [85.0%]  (true,exec)
Successors:  78 [73.0%]  (true,exec) 79 [27.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [73.0%]  (true,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 79 (new, reachable)
Predecessors:  77 [27.0%]  (false,exec)
Successors:  80 [100.0%]  (fallthru,exec)

Basic block 80 (new, reachable)
Predecessors:  76 [15.0%]  (false,exec) 78 [100.0%]  (fallthru,exec) 79 [100.0%]  (fallthru,exec)
Successors:  81 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [29.0%]  (true,exec)
Successors:  84 [15.0%]  (true,exec) 82 [85.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [85.0%]  (false,exec)
Successors:  84 [50.0%]  (true,exec) 83 [50.0%]  (false,exec)

Basic block 83 (new, reachable)
Predecessors:  82 [50.0%]  (false,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  81 [15.0%]  (true,exec) 82 [50.0%]  (true,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  88 [15.0%]  (true,exec) 86 [85.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [85.0%]  (false,exec)
Successors:  88 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [50.0%]  (false,exec)
Successors:  88 [100.0%]  (fallthru,exec)

Basic block 88 (new, reachable)
Predecessors:  85 [15.0%]  (true,exec) 86 [50.0%]  (true,exec) 87 [100.0%]  (fallthru,exec)
Successors:  89 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [50.0%]  (true,exec)
Successors:  90 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

Basic block 90 (new, reachable)
Predecessors:  89 [50.0%]  (true,exec)
Successors:  91 [51.2%]  (true,exec) 92 [48.8%]  (false,exec)

Basic block 91 (new, reachable)
Predecessors:  90 [51.2%]  (true,exec)
Successors:  92 [100.0%]  (fallthru,exec)

Basic block 92 (new, reachable)
Predecessors:  84 [50.0%]  (false,exec) 88 [50.0%]  (false,exec) 89 [50.0%]  (false,exec) 90 [48.8%]  (false,exec) 91 [100.0%]  (fallthru,exec)
Successors:  94 [27.0%]  (true,exec) 93 [73.0%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [73.0%]  (false,exec)
Successors:  94 [28.0%]  (true,exec) 105 [72.0%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  92 [27.0%]  (true,exec) 93 [28.0%]  (true,exec)
Successors:  97 [15.0%]  (true,exec) 95 [85.0%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  94 [85.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [100.0%]  (fallthru,exec)

Basic block 97 (new, reachable)
Predecessors:  94 [15.0%]  (true,exec) 95 [50.0%]  (true,exec) 96 [100.0%]  (fallthru,exec)
Successors:  98 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 98 (new, reachable)
Predecessors:  97 [50.0%]  (true,exec)
Successors:  101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [85.0%]  (false,exec)
Successors:  101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [50.0%]  (false,exec)
Successors:  101 [100.0%]  (fallthru,exec)

Basic block 101 (new, reachable)
Predecessors:  98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
Successors:  102 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [50.0%]  (true,exec)
Successors:  103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

Basic block 103 (new, reachable)
Predecessors:  102 [50.0%]  (true,exec)
Successors:  104 [51.2%]  (true,exec) 105 [48.8%]  (false,exec)

Basic block 104 (new, reachable)
Predecessors:  103 [51.2%]  (true,exec)
Successors:  105 [100.0%]  (fallthru,exec)

Basic block 105 (new, reachable)
Predecessors:  80 [71.0%]  (false,exec) 93 [72.0%]  (false,exec) 97 [50.0%]  (false,exec) 101 [50.0%]  (false,exec) 102 [50.0%]  (false,exec) 103 [48.8%]  (false,exec) 104 [100.0%]  (fallthru,exec)
Successors:  106 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [29.0%]  (true,exec)
Successors:  107 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [50.0%]  (true,exec)
Successors:  116 [100.0%]  (fallthru)

Basic block 108 (new, reachable)
Predecessors:  116 [90.0%]  (true,exec)
Successors:  110 [28.0%]  (true,exec) 109 [72.0%]  (false,exec)

Basic block 109 (new, reachable)
Predecessors:  108 [72.0%]  (false,exec)
Successors:  110 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

Basic block 110 (new, reachable)
Predecessors:  108 [28.0%]  (true,exec) 109 [28.0%]  (true,exec)
Successors:  113 [15.0%]  (true,exec) 111 [85.0%]  (false,exec)

Basic block 111 (new, reachable)
Predecessors:  110 [85.0%]  (false,exec)
Successors:  113 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

Basic block 112 (new, reachable)
Predecessors:  111 [50.0%]  (false,exec)
Successors:  113 [100.0%]  (fallthru,exec)

Basic block 113 (new, reachable)
Predecessors:  110 [15.0%]  (true,exec) 111 [50.0%]  (true,exec) 112 [100.0%]  (fallthru,exec)
Successors:  114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  113 [29.0%]  (true,exec)
Successors:  115 [100.0%]  (fallthru,exec)

Basic block 115 (new, reachable)
Predecessors:  109 [72.0%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
Successors:  116 [100.0%]  (fallthru,dfs_back,exec)

Basic block 116 (new, reachable)
Predecessors:  107 [100.0%]  (fallthru) 115 [100.0%]  (fallthru,dfs_back,exec)
Successors:  108 [90.0%]  (true,exec) 117 [10.0%]  (false,exec)

Basic block 117 (new, reachable)
Predecessors:  105 [71.0%]  (false,exec) 106 [50.0%]  (false,exec) 116 [10.0%]  (false,exec)
Successors:  118 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

Basic block 118 (new, reachable)
Predecessors:  117 [29.0%]  (true,exec)
Successors:  119 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

Basic block 119 (new, reachable)
Predecessors:  118 [29.0%]  (true,exec)
Successors:  120 [100.0%]  (fallthru,exec)

Basic block 120 (new, reachable)
Predecessors:  117 [71.0%]  (false,exec) 118 [71.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
Successors:  121 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [85.0%]  (true,exec)
Successors:  122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

Basic block 122 (new, reachable)
Predecessors:  121 [50.0%]  (true,exec)
Successors:  123 [100.0%]  (fallthru,exec)

Basic block 123 (new, reachable)
Predecessors:  121 [50.0%]  (false,exec) 122 [100.0%]  (fallthru,exec)
Successors:  125 [28.0%]  (true,exec) 124 [72.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [72.0%]  (false,exec)
Successors:  125 [100.0%]  (fallthru,exec)

Basic block 125 (new, reachable)
Predecessors:  123 [28.0%]  (true,exec) 124 [100.0%]  (fallthru,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  120 [15.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
Successors:  127 [50.0%]  (true,exec) 128 [50.0%]  (false,exec)

Basic block 127 (new, reachable)
Predecessors:  126 [50.0%]  (true,exec)
Successors:  128 [100.0%]  (fallthru,exec)

Basic block 128 (new, reachable)
Predecessors:  126 [50.0%]  (false,exec) 127 [100.0%]  (fallthru,exec)
Successors:  129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [29.0%]  (true,exec)
Successors:  130 [100.0%]  (fallthru,exec)

Basic block 130 (new, reachable)
Predecessors:  128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
Successors:  131 [69.8%]  (true,exec) 132 [30.2%]  (false,exec)

Basic block 131 (new, reachable)
Predecessors:  130 [69.8%]  (true,exec)
Successors:  132 [100.0%]  (fallthru,exec)

Basic block 132 (new, reachable)
Predecessors:  130 [30.2%]  (false,exec) 131 [100.0%]  (fallthru,exec)
Successors:  135 [15.0%]  (true,exec) 133 [85.0%]  (false,exec)

Basic block 133 (new, reachable)
Predecessors:  132 [85.0%]  (false,exec)
Successors:  135 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [50.0%]  (false,exec)
Successors:  135 [100.0%]  (fallthru,exec)

Basic block 135 (new, reachable)
Predecessors:  132 [15.0%]  (true,exec) 133 [50.0%]  (true,exec) 134 [100.0%]  (fallthru,exec)
Successors:  136 [39.0%]  (true,exec) 137 [61.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [39.0%]  (true,exec)
Successors:  137 [100.0%]  (fallthru,exec)

Basic block 137 (new, reachable)
Predecessors:  4 [10.1%]  (true,exec) 135 [61.0%]  (false,exec) 136 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


generate_m.isra.4 (struct switch_core_session_t * session, char * buf, size_t buflen, switch_port_t port, const char * family, const char * ip, int cur_ptime, const char * append_audio, const char * sr, int use_cng, int cng_type, struct switch_event_t * map, int secure)
{
  size_t D.47710;
  char * D.47709;
  size_t D.47708;
  size_t D.47707;
  int D.47706;
  int iftmp.40;
  struct switch_channel_t * D.47704;
  switch_call_direction_t D.47703;
  switch_rtp_crypto_key_type_t D.47702;
  const char * D.47701;
  const int D.47700;
  char * const D.47699;
  int D.47698;
  int D.47697;
  const switch_codec_type_t D.47696;
  switch_payload_t D.47695;
  signed char D.47694;
  int D.47693;
  int D.47692;
  size_t D.47691;
  char * D.47690;
  size_t D.47689;
  size_t D.47688;
  struct switch_core_media_params_t * D.47687;
  int D.47686;
  switch_core_media_dtmf_t D.47685;
  switch_payload_t D.47684;
  size_t D.47683;
  char * D.47682;
  size_t D.47681;
  size_t D.47680;
  int D.47679;
  int32_t D.47678;
  _Bool D.47677;
  _Bool D.47676;
  _Bool D.47675;
  size_t D.47674;
  char * D.47673;
  size_t D.47672;
  size_t D.47671;
  size_t D.47670;
  char * D.47669;
  size_t D.47668;
  size_t D.47667;
  const int D.47666;
  const switch_codec_type_t D.47665;
  char * const D.47664;
  int D.47663;
  int D.47662;
  const uint32_t D.47661;
  const int D.47660;
  char * D.47659;
  uint32_t D.47658;
  const uint8_t D.47657;
  int D.47656;
  size_t D.47655;
  char * D.47654;
  size_t D.47653;
  size_t D.47652;
  size_t D.47651;
  char * D.47650;
  size_t D.47649;
  size_t D.47648;
  size_t D.47647;
  char * D.47646;
  size_t D.47645;
  size_t D.47644;
  int32_t D.47643;
  uint32_t D.47642;
  uint32_t D.47641;
  size_t D.47640;
  char * D.47639;
  size_t D.47638;
  size_t D.47637;
  size_t D.47636;
  char * D.47635;
  size_t D.47634;
  size_t D.47633;
  char * D.47632;
  size_t D.47631;
  char * D.47630;
  size_t D.47629;
  size_t D.47628;
  char[192] * D.47627;
  char * D.47626;
  int8_t D.47625;
  size_t D.47624;
  char * D.47623;
  size_t D.47622;
  size_t D.47621;
  size_t D.47620;
  char * D.47619;
  size_t D.47618;
  size_t D.47617;
  size_t D.47616;
  char * D.47615;
  size_t D.47614;
  size_t D.47613;
  int D.47612;
  uint8_t D.47611;
  size_t D.47610;
  char * D.47609;
  size_t D.47608;
  size_t D.47607;
  uint32_t D.47606;
  char * D.47605;
  size_t D.47604;
  char * D.47603;
  size_t D.47602;
  size_t D.47601;
  char * D.47600;
  size_t D.47599;
  char * D.47598;
  size_t D.47597;
  size_t D.47596;
  size_t D.47595;
  char * D.47594;
  size_t D.47593;
  size_t D.47592;
  size_t D.47591;
  char * D.47590;
  size_t D.47589;
  size_t D.47588;
  char * D.47587;
  size_t D.47586;
  char * D.47585;
  size_t D.47584;
  size_t D.47583;
  char * D.47582;
  size_t D.47581;
  char * D.47580;
  size_t D.47579;
  size_t D.47578;
  char * D.47577;
  char * D.47576;
  switch_port_t D.47575;
  int D.47574;
  char * D.47573;
  int D.47572;
  switch_port_t D.47571;
  size_t D.47570;
  char * D.47569;
  size_t D.47568;
  size_t D.47567;
  int D.47566;
  switch_call_direction_t D.47565;
  size_t D.47564;
  char * D.47563;
  size_t D.47562;
  size_t D.47561;
  int D.47560;
  int D.47559;
  char * D.47558;
  int D.47557;
  switch_port_t D.47556;
  size_t D.47555;
  char * D.47554;
  size_t D.47553;
  size_t D.47552;
  int D.47551;
  uint32_t D.47550;
  switch_rtp_crypto_key_type_t D.47549;
  char * D.47548;
  size_t D.47547;
  char * D.47546;
  size_t D.47545;
  size_t D.47544;
  int32_t D.47543;
  size_t D.47542;
  char * D.47541;
  size_t D.47540;
  size_t D.47539;
  size_t D.47538;
  char * D.47537;
  size_t D.47536;
  size_t D.47535;
  char * iftmp.41;
  const char D.47533;
  size_t D.47532;
  unsigned int D.47531;
  const char D.47530;
  size_t D.47529;
  char * D.47528;
  size_t D.47527;
  size_t D.47526;
  size_t D.47525;
  char * D.47524;
  size_t D.47523;
  size_t D.47522;
  size_t D.47521;
  char * D.47520;
  size_t D.47519;
  size_t D.47518;
  int i;
  int rate;
  int already_did[128];
  int ptime;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_media_handle_t * smh;
  static const char __PRETTY_FUNCTION__[11] = "generate_m";
  static const char __func__[11] = "generate_m";
  const struct switch_codec_implementation_t * imp;
  int this_ptime;
  const struct switch_codec_implementation_t * imp;
  char * fmtp;
  int this_ptime;
  char key[128];
  char * check;
  int channels;
  char tmp1[11];
  char tmp2[11];
  int i;
  switch_rtp_crypto_key_type_t j;
  int D.47517;
  const char D.47516;
  int D.47515;
  const char D.47514;
  int D.47513;
  const char D.47512;
  int D.47511;
  const char D.47510;
  int D.47509;
  const char D.47508;
  int D.47507;
  const char D.47506;
  int D.47505;
  const char D.47504;
  static const char __func__[11] = "generate_m";
  static const char __PRETTY_FUNCTION__[11] = "generate_m";

  # BLOCK 138 freq:218
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # SUCC: 2 [100.0%]  (fallthru)

  # BLOCK 2 freq:218
  # PRED: 138 [100.0%]  (fallthru)
  # DEBUG i => 0
  already_did = {};
  # DEBUG ptime => 0
  # DEBUG noptime => 0
  if (session_1(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 [0.0%]  (true,exec) 4 [100.0%]  (false,exec)

  # BLOCK 3
  # PRED: 2 [0.0%]  (true,exec)
  __assert_fail ("session", "src/switch_core_media.c", 5614, &__PRETTY_FUNCTION__);
  # SUCC:

  # BLOCK 4 freq:218
  # PRED: 2 [100.0%]  (false,exec)
  smh_2 = session_1(D)->media_handle;
  # DEBUG smh => smh_2
  if (smh_2 == 0B)
    goto <bb 137>;
  else
    goto <bb 5>;
  # SUCC: 137 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 5 freq:196
  # PRED: 4 [89.9%]  (false,exec)
  # DEBUG D#4 => &smh_2->engines
  # DEBUG a_engine => D#4
  D.47710_4 = strlen (buf_3(D));
  D.47709_5 = buf_3(D) + D.47710_4;
  D.47708_6 = strlen (buf_3(D));
  D.47707_8 = buflen_7(D) - D.47708_6;
  D.47706_10 = (int) port_9(D);
  if (secure_11(D) != 0)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [29.0%]  (true,exec) 7 [71.0%]  (false,exec)

  # BLOCK 6 freq:57
  # PRED: 5 [29.0%]  (true,exec)
  D.47704_12 = session_1(D)->channel;
  D.47703_13 = switch_channel_direction (D.47704_12);
  if (D.47703_13 == 1)
    goto <bb 9>;
  else
    goto <bb 7>;
  # SUCC: 9 [28.0%]  (true,exec) 7 [72.0%]  (false,exec)

  # BLOCK 7 freq:180
  # PRED: 5 [71.0%]  (false,exec) 6 [72.0%]  (false,exec)
  D.47702_14 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (D.47702_14 != 9)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [72.0%]  (true,exec) 9 [28.0%]  (false,exec)

  # BLOCK 8 freq:130
  # PRED: 7 [72.0%]  (true,exec)
  # SUCC: 9 [100.0%]  (fallthru)

  # BLOCK 9 freq:196
  # PRED: 6 [28.0%]  (true,exec) 7 [28.0%]  (false,exec) 8 [100.0%]  (fallthru)
  # iftmp.40_15 = PHI <1(6), 0(7), 1(8)>
  D.47701_16 = get_media_profile_name (session_1(D), iftmp.40_15);
  switch_snprintf (D.47709_5, D.47707_8, "m=audio %d %s", D.47706_10, D.47701_16);
  # DEBUG i => 0
  goto <bb 26>;
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 10 freq:9804
  # PRED: 26 [98.0%]  (true,exec)
  imp_18 = smh_2->codecs[i_17];
  # DEBUG imp => imp_18
  D.47700_19 = imp_18->microseconds_per_packet;
  this_ptime_20 = D.47700_19 / 1000;
  # DEBUG this_ptime => this_ptime_20
  D.47699_21 = imp_18->iananame;
  D.47698_22 = strcasecmp (D.47699_21, "ilbc");
  if (D.47698_22 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:4902
  # PRED: 10 [50.0%]  (false,exec)
  D.47699_23 = imp_18->iananame;
  D.47697_24 = strcasecmp (D.47699_23, "isac");
  if (D.47697_24 == 0)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [50.0%]  (true,exec) 13 [50.0%]  (false,exec)

  # BLOCK 12 freq:7353
  # PRED: 10 [50.0%]  (true,exec) 11 [50.0%]  (true,exec)
  # DEBUG this_ptime => 20
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:9804
  # PRED: 11 [50.0%]  (false,exec) 12 [100.0%]  (fallthru,exec)
  # this_ptime_28 = PHI <this_ptime_20(11), 20(12)>
  # DEBUG this_ptime => this_ptime_28
  D.47696_25 = imp_18->codec_type;
  if (D.47696_25 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [50.0%]  (true,exec) 15 [50.0%]  (false,exec)

  # BLOCK 14 freq:4902
  # PRED: 13 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:4902
  # PRED: 13 [50.0%]  (false,exec)
  if (cur_ptime_26(D) == 0)
    goto <bb 16>;
  else
    goto <bb 18>;
  # SUCC: 16 [50.0%]  (true,exec) 18 [50.0%]  (false,exec)

  # BLOCK 16 freq:2451
  # PRED: 15 [50.0%]  (true,exec)
  if (ptime_27 == 0)
    goto <bb 17>;
  else
    goto <bb 20>;
  # SUCC: 17 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 17 freq:1225
  # PRED: 16 [50.0%]  (true,exec)
  # DEBUG ptime => this_ptime_28
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:2451
  # PRED: 15 [50.0%]  (false,exec)
  if (cur_ptime_26(D) != this_ptime_28)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [72.0%]  (true,exec) 20 [28.0%]  (false,exec)

  # BLOCK 19 freq:1765
  # PRED: 18 [72.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:3137
  # PRED: 16 [50.0%]  (false,exec) 17 [100.0%]  (fallthru,exec) 18 [28.0%]  (false,exec)
  # ptime_340 = PHI <ptime_27(16), this_ptime_28(17), ptime_27(18)>
  # DEBUG ptime => ptime_340
  D.47695_29 = smh_2->ianacodes[i_17];
  D.47694_30 = (signed char) D.47695_29;
  if (D.47694_30 >= 0)
    goto <bb 21>;
  else
    goto <bb 24>;
  # SUCC: 21 [86.9%]  (true,exec) 24 [13.1%]  (false,exec)

  # BLOCK 21 freq:2726
  # PRED: 20 [86.9%]  (true,exec)
  D.47695_31 = smh_2->ianacodes[i_17];
  D.47693_32 = (int) D.47695_31;
  D.47692_33 = already_did[D.47693_32];
  if (D.47692_33 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [50.0%]  (true,exec) 23 [50.0%]  (false,exec)

  # BLOCK 22 freq:1363
  # PRED: 21 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 25>;
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:1363
  # PRED: 21 [50.0%]  (false,exec)
  D.47695_34 = smh_2->ianacodes[i_17];
  D.47693_35 = (int) D.47695_34;
  already_did[D.47693_35] = 1;
  # SUCC: 24 [100.0%]  (fallthru,exec)

  # BLOCK 24 freq:1774
  # PRED: 20 [13.1%]  (false,exec) 23 [100.0%]  (fallthru,exec)
  D.47691_36 = strlen (buf_3(D));
  D.47690_37 = buf_3(D) + D.47691_36;
  D.47689_38 = strlen (buf_3(D));
  D.47688_39 = buflen_7(D) - D.47689_38;
  D.47695_40 = smh_2->ianacodes[i_17];
  D.47693_41 = (int) D.47695_40;
  switch_snprintf (D.47690_37, D.47688_39, " %d", D.47693_41);
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:9804
  # PRED: 14 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 22 [100.0%]  (fallthru,exec) 24 [100.0%]  (fallthru,exec)
  # ptime_341 = PHI <ptime_27(14), ptime_27(19), ptime_340(22), ptime_340(24)>
  # DEBUG ptime => ptime_341
  i_42 = i_17 + 1;
  # DEBUG i => i_42
  # SUCC: 26 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 26 freq:10000
  # PRED: 9 [100.0%]  (fallthru,exec) 25 [100.0%]  (fallthru,dfs_back,exec)
  # i_17 = PHI <0(9), i_42(25)>
  # ptime_27 = PHI <0(9), ptime_341(25)>
  # DEBUG ptime => ptime_27
  # DEBUG i => i_17
  D.47687_43 = smh_2->mparams;
  D.47686_44 = D.47687_43->num_codecs;
  if (i_17 < D.47686_44)
    goto <bb 10>;
  else
    goto <bb 27>;
  # SUCC: 10 [98.0%]  (true,exec) 27 [2.0%]  (false,exec)

  # BLOCK 27 freq:196
  # PRED: 26 [2.0%]  (false,exec)
  D.47687_45 = smh_2->mparams;
  D.47685_46 = D.47687_45->dtmf_type;
  if (D.47685_46 == 0)
    goto <bb 28>;
  else
    goto <bb 30>;
  # SUCC: 28 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 28 freq:98
  # PRED: 27 [50.0%]  (true,exec)
  D.47687_47 = smh_2->mparams;
  D.47684_48 = D.47687_47->te;
  if (D.47684_48 > 95)
    goto <bb 29>;
  else
    goto <bb 30>;
  # SUCC: 29 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 29 freq:28
  # PRED: 28 [29.0%]  (true,exec)
  D.47683_49 = strlen (buf_3(D));
  D.47682_50 = buf_3(D) + D.47683_49;
  D.47681_51 = strlen (buf_3(D));
  D.47680_52 = buflen_7(D) - D.47681_51;
  D.47687_53 = smh_2->mparams;
  D.47684_54 = D.47687_53->te;
  D.47679_55 = (int) D.47684_54;
  switch_snprintf (D.47682_50, D.47680_52, " %d", D.47679_55);
  # SUCC: 30 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:196
  # PRED: 27 [50.0%]  (false,exec) 28 [71.0%]  (false,exec) 29 [100.0%]  (fallthru,exec)
  D.47678_56 = switch_media_handle_test_media_flag (smh_2, 9);
  if (D.47678_56 == 0)
    goto <bb 31>;
  else
    goto <bb 33>;
  # SUCC: 31 [50.0%]  (true,exec) 33 [50.0%]  (false,exec)

  # BLOCK 31 freq:98
  # PRED: 30 [50.0%]  (true,exec)
  D.47677_58 = cng_type_57(D) != 0;
  D.47676_60 = use_cng_59(D) != 0;
  D.47675_61 = D.47677_58 && D.47676_60;
  if (D.47675_61 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [29.0%]  (true,exec) 33 [71.0%]  (false,exec)

  # BLOCK 32 freq:28
  # PRED: 31 [29.0%]  (true,exec)
  D.47674_62 = strlen (buf_3(D));
  D.47673_63 = buf_3(D) + D.47674_62;
  D.47672_64 = strlen (buf_3(D));
  D.47671_65 = buflen_7(D) - D.47672_64;
  switch_snprintf (D.47673_63, D.47671_65, " %d", cng_type_57(D));
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:196
  # PRED: 30 [50.0%]  (false,exec) 31 [71.0%]  (false,exec) 32 [100.0%]  (fallthru,exec)
  D.47670_66 = strlen (buf_3(D));
  D.47669_67 = buf_3(D) + D.47670_66;
  D.47668_68 = strlen (buf_3(D));
  D.47667_69 = buflen_7(D) - D.47668_68;
  switch_snprintf (D.47669_67, D.47667_69, "\n");
  memset (&already_did, 0, 512);
  # DEBUG i => 0
  goto <bb 62>;
  # SUCC: 62 [100.0%]  (fallthru,exec)

  # BLOCK 34 freq:9804
  # PRED: 62 [98.0%]  (true,exec)
  imp_71 = smh_2->codecs[i_70];
  # DEBUG imp => imp_71
  fmtp_72 = imp_71->fmtp;
  # DEBUG fmtp => fmtp_72
  D.47666_73 = imp_71->microseconds_per_packet;
  this_ptime_74 = D.47666_73 / 1000;
  # DEBUG this_ptime => this_ptime_74
  D.47665_75 = imp_71->codec_type;
  if (D.47665_75 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;
  # SUCC: 35 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 35 freq:4902
  # PRED: 34 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:4902
  # PRED: 34 [50.0%]  (false,exec)
  D.47664_76 = imp_71->iananame;
  D.47663_77 = strcasecmp (D.47664_76, "ilbc");
  if (D.47663_77 == 0)
    goto <bb 38>;
  else
    goto <bb 37>;
  # SUCC: 38 [50.0%]  (true,exec) 37 [50.0%]  (false,exec)

  # BLOCK 37 freq:2451
  # PRED: 36 [50.0%]  (false,exec)
  D.47664_78 = imp_71->iananame;
  D.47662_79 = strcasecmp (D.47664_78, "isac");
  if (D.47662_79 == 0)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [50.0%]  (true,exec) 39 [50.0%]  (false,exec)

  # BLOCK 38 freq:3676
  # PRED: 36 [50.0%]  (true,exec) 37 [50.0%]  (true,exec)
  # DEBUG this_ptime => 20
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:4902
  # PRED: 37 [50.0%]  (false,exec) 38 [100.0%]  (fallthru,exec)
  # this_ptime_81 = PHI <this_ptime_74(37), 20(38)>
  # DEBUG this_ptime => this_ptime_81
  if (cur_ptime_26(D) == 0)
    goto <bb 40>;
  else
    goto <bb 42>;
  # SUCC: 40 [50.0%]  (true,exec) 42 [50.0%]  (false,exec)

  # BLOCK 40 freq:2451
  # PRED: 39 [50.0%]  (true,exec)
  if (ptime_80 == 0)
    goto <bb 41>;
  else
    goto <bb 44>;
  # SUCC: 41 [50.0%]  (true,exec) 44 [50.0%]  (false,exec)

  # BLOCK 41 freq:1225
  # PRED: 40 [50.0%]  (true,exec)
  # DEBUG ptime => this_ptime_81
  goto <bb 44>;
  # SUCC: 44 [100.0%]  (fallthru,exec)

  # BLOCK 42 freq:2451
  # PRED: 39 [50.0%]  (false,exec)
  if (cur_ptime_26(D) != this_ptime_81)
    goto <bb 43>;
  else
    goto <bb 44>;
  # SUCC: 43 [72.0%]  (true,exec) 44 [28.0%]  (false,exec)

  # BLOCK 43 freq:1765
  # PRED: 42 [72.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 44 freq:3137
  # PRED: 40 [50.0%]  (false,exec) 41 [100.0%]  (fallthru,exec) 42 [28.0%]  (false,exec)
  # ptime_342 = PHI <ptime_80(40), this_ptime_81(41), ptime_80(42)>
  # DEBUG ptime => ptime_342
  D.47695_82 = smh_2->ianacodes[i_70];
  D.47694_83 = (signed char) D.47695_82;
  if (D.47694_83 >= 0)
    goto <bb 45>;
  else
    goto <bb 48>;
  # SUCC: 45 [73.0%]  (true,exec) 48 [27.0%]  (false,exec)

  # BLOCK 45 freq:2290
  # PRED: 44 [73.0%]  (true,exec)
  D.47695_84 = smh_2->ianacodes[i_70];
  D.47693_85 = (int) D.47695_84;
  D.47692_86 = already_did[D.47693_85];
  if (D.47692_86 != 0)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [50.0%]  (true,exec) 47 [50.0%]  (false,exec)

  # BLOCK 46 freq:1145
  # PRED: 45 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 61>;
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:1145
  # PRED: 45 [50.0%]  (false,exec)
  D.47695_87 = smh_2->ianacodes[i_70];
  D.47693_88 = (int) D.47695_87;
  already_did[D.47693_88] = 1;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 48 freq:1992
  # PRED: 44 [27.0%]  (false,exec) 47 [100.0%]  (fallthru,exec)
  D.47661_89 = imp_71->samples_per_second;
  rate_90 = (int) D.47661_89;
  # DEBUG rate => rate_90
  if (map_91(D) != 0B)
    goto <bb 49>;
  else
    goto <bb 52>;
  # SUCC: 49 [69.8%]  (true,exec) 52 [30.2%]  (false,exec)

  # BLOCK 49 freq:1391
  # PRED: 48 [69.8%]  (true,exec)
  key = "";
  # DEBUG check => 0B
  D.47664_92 = imp_71->iananame;
  D.47660_93 = imp_71->bits_per_second;
  switch_snprintf (&key, 128, "%s:%u", D.47664_92, D.47660_93);
  check_94 = switch_event_get_header_idx (map_91(D), &key, -1);
  # DEBUG check => check_94
  if (check_94 != 0B)
    goto <bb 51>;
  else
    goto <bb 50>;
  # SUCC: 51 [93.3%]  (true,exec) 50 [6.7%]  (false,exec)

  # BLOCK 50 freq:93
  # PRED: 49 [6.7%]  (false,exec)
  D.47664_95 = imp_71->iananame;
  check_96 = switch_event_get_header_idx (map_91(D), D.47664_95, -1);
  # DEBUG check => check_96
  if (check_96 != 0B)
    goto <bb 51>;
  else
    goto <bb 52>;
  # SUCC: 51 [85.0%]  (true,exec) 52 [15.0%]  (false,exec)

  # BLOCK 51 freq:1377
  # PRED: 49 [93.3%]  (true,exec) 50 [85.0%]  (true,exec)
  # check_343 = PHI <check_94(49), check_96(50)>
  # DEBUG check => check_343
  # DEBUG fmtp => check_343
  # SUCC: 52 [100.0%]  (fallthru,exec)

  # BLOCK 52 freq:1992
  # PRED: 48 [30.2%]  (false,exec) 50 [15.0%]  (false,exec) 51 [100.0%]  (fallthru,exec)
  # fmtp_344 = PHI <fmtp_72(48), fmtp_72(50), check_343(51)>
  # DEBUG fmtp => fmtp_344
  D.47659_97 = smh_2->fmtps[i_70];
  if (D.47659_97 != 0B)
    goto <bb 53>;
  else
    goto <bb 54>;
  # SUCC: 53 [85.0%]  (true,exec) 54 [15.0%]  (false,exec)

  # BLOCK 53 freq:1693
  # PRED: 52 [85.0%]  (true,exec)
  fmtp_98 = smh_2->fmtps[i_70];
  # DEBUG fmtp => fmtp_98
  # SUCC: 54 [100.0%]  (fallthru,exec)

  # BLOCK 54 freq:1992
  # PRED: 52 [15.0%]  (false,exec) 53 [100.0%]  (fallthru,exec)
  # fmtp_120 = PHI <fmtp_344(52), fmtp_98(53)>
  # DEBUG fmtp => fmtp_120
  D.47695_99 = smh_2->ianacodes[i_70];
  if (D.47695_99 > 95)
    goto <bb 56>;
  else
    goto <bb 55>;
  # SUCC: 56 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 55 freq:996
  # PRED: 54 [50.0%]  (false,exec)
  D.47704_100 = session_1(D)->channel;
  D.47658_101 = switch_channel_test_flag (D.47704_100, 110);
  if (D.47658_101 != 0)
    goto <bb 56>;
  else
    goto <bb 59>;
  # SUCC: 56 [50.0%]  (true,exec) 59 [50.0%]  (false,exec)

  # BLOCK 56 freq:1494
  # PRED: 54 [50.0%]  (true,exec) 55 [50.0%]  (true,exec)
  D.47664_102 = imp_71->iananame;
  D.47657_103 = imp_71->number_of_channels;
  D.47656_104 = (int) D.47657_103;
  channels_105 = get_channels (D.47664_102, D.47656_104);
  # DEBUG channels => channels_105
  if (channels_105 > 1)
    goto <bb 57>;
  else
    goto <bb 58>;
  # SUCC: 57 [73.0%]  (true,exec) 58 [27.0%]  (false,exec)

  # BLOCK 57 freq:1091
  # PRED: 56 [73.0%]  (true,exec)
  D.47655_106 = strlen (buf_3(D));
  D.47654_107 = buf_3(D) + D.47655_106;
  D.47653_108 = strlen (buf_3(D));
  D.47652_109 = buflen_7(D) - D.47653_108;
  D.47695_110 = smh_2->ianacodes[i_70];
  D.47693_111 = (int) D.47695_110;
  D.47664_112 = imp_71->iananame;
  switch_snprintf (D.47654_107, D.47652_109, "a=rtpmap:%d %s/%d/%d\n", D.47693_111, D.47664_112, rate_90, channels_105);
  goto <bb 59>;
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:403
  # PRED: 56 [27.0%]  (false,exec)
  D.47651_113 = strlen (buf_3(D));
  D.47650_114 = buf_3(D) + D.47651_113;
  D.47649_115 = strlen (buf_3(D));
  D.47648_116 = buflen_7(D) - D.47649_115;
  D.47695_117 = smh_2->ianacodes[i_70];
  D.47693_118 = (int) D.47695_117;
  D.47664_119 = imp_71->iananame;
  switch_snprintf (D.47650_114, D.47648_116, "a=rtpmap:%d %s/%d\n", D.47693_118, D.47664_119, rate_90);
  # SUCC: 59 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:1992
  # PRED: 55 [50.0%]  (false,exec) 57 [100.0%]  (fallthru,exec) 58 [100.0%]  (fallthru,exec)
  if (fmtp_120 != 0B)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [69.8%]  (true,exec) 61 [30.2%]  (false,exec)

  # BLOCK 60 freq:1391
  # PRED: 59 [69.8%]  (true,exec)
  D.47647_121 = strlen (buf_3(D));
  D.47646_122 = buf_3(D) + D.47647_121;
  D.47645_123 = strlen (buf_3(D));
  D.47644_124 = buflen_7(D) - D.47645_123;
  D.47695_125 = smh_2->ianacodes[i_70];
  D.47693_126 = (int) D.47695_125;
  switch_snprintf (D.47646_122, D.47644_124, "a=fmtp:%d %s\n", D.47693_126, fmtp_120);
  # SUCC: 61 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:9804
  # PRED: 35 [100.0%]  (fallthru,exec) 43 [100.0%]  (fallthru,exec) 46 [100.0%]  (fallthru,exec) 59 [30.2%]  (false,exec) 60 [100.0%]  (fallthru,exec)
  # ptime_345 = PHI <ptime_80(35), ptime_80(43), ptime_342(46), ptime_342(59), ptime_342(60)>
  # DEBUG ptime => ptime_345
  i_127 = i_70 + 1;
  # DEBUG i => i_127
  # SUCC: 62 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 62 freq:10000
  # PRED: 33 [100.0%]  (fallthru,exec) 61 [100.0%]  (fallthru,dfs_back,exec)
  # i_70 = PHI <0(33), i_127(61)>
  # ptime_80 = PHI <ptime_27(33), ptime_345(61)>
  # DEBUG ptime => ptime_80
  # DEBUG i => i_70
  D.47687_128 = smh_2->mparams;
  D.47686_129 = D.47687_128->num_codecs;
  if (i_70 < D.47686_129)
    goto <bb 34>;
  else
    goto <bb 63>;
  # SUCC: 34 [98.0%]  (true,exec) 63 [2.0%]  (false,exec)

  # BLOCK 63 freq:196
  # PRED: 62 [2.0%]  (false,exec)
  D.47687_130 = smh_2->mparams;
  D.47685_131 = D.47687_130->dtmf_type;
  if (D.47685_131 == 0)
    goto <bb 66>;
  else
    goto <bb 64>;
  # SUCC: 66 [71.0%]  (true,exec) 64 [29.0%]  (false,exec)

  # BLOCK 64 freq:57
  # PRED: 63 [29.0%]  (false,exec)
  D.47643_132 = switch_media_handle_test_media_flag (smh_2, 8);
  if (D.47643_132 != 0)
    goto <bb 66>;
  else
    goto <bb 65>;
  # SUCC: 66 [71.0%]  (true,exec) 65 [29.0%]  (false,exec)

  # BLOCK 65 freq:16
  # PRED: 64 [29.0%]  (false,exec)
  D.47704_133 = session_1(D)->channel;
  D.47642_134 = switch_channel_test_flag (D.47704_133, 93);
  if (D.47642_134 != 0)
    goto <bb 66>;
  else
    goto <bb 70>;
  # SUCC: 66 [50.0%]  (true,exec) 70 [50.0%]  (false,exec)

  # BLOCK 66 freq:188
  # PRED: 63 [71.0%]  (true,exec) 64 [71.0%]  (true,exec) 65 [50.0%]  (true,exec)
  D.47687_135 = smh_2->mparams;
  D.47684_136 = D.47687_135->te;
  if (D.47684_136 > 95)
    goto <bb 67>;
  else
    goto <bb 70>;
  # SUCC: 67 [29.0%]  (true,exec) 70 [71.0%]  (false,exec)

  # BLOCK 67 freq:54
  # PRED: 66 [29.0%]  (true,exec)
  D.47704_137 = session_1(D)->channel;
  D.47641_138 = switch_channel_test_flag (D.47704_137, 106);
  if (D.47641_138 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;
  # SUCC: 68 [50.0%]  (true,exec) 69 [50.0%]  (false,exec)

  # BLOCK 68 freq:27
  # PRED: 67 [50.0%]  (true,exec)
  D.47640_139 = strlen (buf_3(D));
  D.47639_140 = buf_3(D) + D.47640_139;
  D.47638_141 = strlen (buf_3(D));
  D.47637_142 = buflen_7(D) - D.47638_141;
  D.47687_143 = smh_2->mparams;
  D.47684_144 = D.47687_143->te;
  D.47679_145 = (int) D.47684_144;
  switch_snprintf (D.47639_140, D.47637_142, "a=rtpmap:%d telephone-event/8000\n", D.47679_145);
  goto <bb 70>;
  # SUCC: 70 [100.0%]  (fallthru,exec)

  # BLOCK 69 freq:27
  # PRED: 67 [50.0%]  (false,exec)
  D.47636_146 = strlen (buf_3(D));
  D.47635_147 = buf_3(D) + D.47636_146;
  D.47634_148 = strlen (buf_3(D));
  D.47633_149 = buflen_7(D) - D.47634_148;
  D.47687_150 = smh_2->mparams;
  D.47684_151 = D.47687_150->te;
  D.47679_152 = (int) D.47684_151;
  switch_snprintf (D.47635_147, D.47633_149, "a=rtpmap:%d telephone-event/8000\na=fmtp:%d 0-16\n", D.47679_152, D.47679_152);
  # SUCC: 70 [100.0%]  (fallthru,exec)

  # BLOCK 70 freq:196
  # PRED: 65 [50.0%]  (false,exec) 66 [71.0%]  (false,exec) 68 [100.0%]  (fallthru,exec) 69 [100.0%]  (fallthru,exec)
  D.47632_153 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
  # DEBUG s => D.47632_153
  if (D.47632_153 == 0B)
    goto <bb 73>;
  else
    goto <bb 71>;
  # SUCC: 73 [15.0%]  (true,exec) 71 [85.0%]  (false,exec)

  # BLOCK 71 freq:167
  # PRED: 70 [85.0%]  (false,exec)
  D.47516_154 = MEM[(const char *)D.47632_153];
  if (D.47516_154 == 0)
    goto <bb 73>;
  else
    goto <bb 72>;
  # SUCC: 73 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 72 freq:83
  # PRED: 71 [50.0%]  (false,exec)
  # SUCC: 73 [100.0%]  (fallthru,exec)

  # BLOCK 73 freq:196
  # PRED: 70 [15.0%]  (true,exec) 71 [50.0%]  (true,exec) 72 [100.0%]  (fallthru,exec)
  # D.47517_155 = PHI <1(70), 1(71), 0(72)>
  if (D.47517_155 == 0)
    goto <bb 74>;
  else
    goto <bb 76>;
  # SUCC: 74 [50.0%]  (true,exec) 76 [50.0%]  (false,exec)

  # BLOCK 74 freq:98
  # PRED: 73 [50.0%]  (true,exec)
  if (secure_11(D) != 0)
    goto <bb 75>;
  else
    goto <bb 76>;
  # SUCC: 75 [29.0%]  (true,exec) 76 [71.0%]  (false,exec)

  # BLOCK 75 freq:28
  # PRED: 74 [29.0%]  (true,exec)
  D.47631_156 = strlen (buf_3(D));
  D.47630_157 = buf_3(D) + D.47631_156;
  D.47629_158 = strlen (buf_3(D));
  D.47628_159 = buflen_7(D) - D.47629_158;
  D.47632_160 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.type;
  D.47627_161 = &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_dtls_fingerprint.str;
  switch_snprintf (D.47630_157, D.47628_159, "a=fingerprint:%s %s\n", D.47632_160, D.47627_161);
  # SUCC: 76 [100.0%]  (fallthru,exec)

  # BLOCK 76 freq:196
  # PRED: 73 [50.0%]  (false,exec) 74 [71.0%]  (false,exec) 75 [100.0%]  (fallthru,exec)
  D.47687_162 = smh_2->mparams;
  D.47626_163 = D.47687_162->rtcp_audio_interval_msec;
  if (D.47626_163 != 0B)
    goto <bb 77>;
  else
    goto <bb 80>;
  # SUCC: 77 [85.0%]  (true,exec) 80 [15.0%]  (false,exec)

  # BLOCK 77 freq:167
  # PRED: 76 [85.0%]  (true,exec)
  D.47625_164 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  if (D.47625_164 > 0)
    goto <bb 78>;
  else
    goto <bb 79>;
  # SUCC: 78 [73.0%]  (true,exec) 79 [27.0%]  (false,exec)

  # BLOCK 78 freq:122
  # PRED: 77 [73.0%]  (true,exec)
  D.47624_165 = strlen (buf_3(D));
  D.47623_166 = buf_3(D) + D.47624_165;
  D.47622_167 = strlen (buf_3(D));
  D.47621_168 = buflen_7(D) - D.47622_167;
  switch_snprintf (D.47623_166, D.47621_168, "a=rtcp-mux\n");
  D.47620_169 = strlen (buf_3(D));
  D.47619_170 = buf_3(D) + D.47620_169;
  D.47618_171 = strlen (buf_3(D));
  D.47617_172 = buflen_7(D) - D.47618_171;
  D.47706_173 = (int) port_9(D);
  switch_snprintf (D.47619_170, D.47617_172, "a=rtcp:%d IN %s %s\n", D.47706_173, family_174(D), ip_175(D));
  goto <bb 80>;
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 79 freq:45
  # PRED: 77 [27.0%]  (false,exec)
  D.47616_176 = strlen (buf_3(D));
  D.47615_177 = buf_3(D) + D.47616_176;
  D.47614_178 = strlen (buf_3(D));
  D.47613_179 = buflen_7(D) - D.47614_178;
  D.47706_180 = (int) port_9(D);
  D.47612_181 = D.47706_180 + 1;
  switch_snprintf (D.47615_177, D.47613_179, "a=rtcp:%d IN %s %s\n", D.47612_181, family_174(D), ip_175(D));
  # SUCC: 80 [100.0%]  (fallthru,exec)

  # BLOCK 80 freq:196
  # PRED: 76 [15.0%]  (false,exec) 78 [100.0%]  (fallthru,exec) 79 [100.0%]  (fallthru,exec)
  D.47611_182 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ice_out.cands[0][0].ready;
  if (D.47611_182 != 0)
    goto <bb 81>;
  else
    goto <bb 105>;
  # SUCC: 81 [29.0%]  (true,exec) 105 [71.0%]  (false,exec)

  # BLOCK 81 freq:57
  # PRED: 80 [29.0%]  (true,exec)
  tmp1 = "";
  tmp2 = "";
  # DEBUG c1 => 659136
  # DEBUG c2 => 659134
  tmp1[10] = 0;
  tmp2[10] = 0;
  switch_stun_random_string (&tmp1, 10, "0123456789");
  switch_stun_random_string (&tmp2, 10, "0123456789");
  gen_ice (session_1(D), 0, 0B, 0);
  # DEBUG D#5 => &MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ice_out
  # DEBUG ice_out => D#5
  D.47610_183 = strlen (buf_3(D));
  D.47609_184 = buf_3(D) + D.47610_183;
  D.47608_185 = strlen (buf_3(D));
  D.47607_186 = buflen_7(D) - D.47608_185;
  D.47606_187 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47605_188 = smh_2->cname;
  switch_snprintf (D.47609_184, D.47607_186, "a=ssrc:%u cname:%s\n", D.47606_187, D.47605_188);
  D.47604_189 = strlen (buf_3(D));
  D.47603_190 = buf_3(D) + D.47604_189;
  D.47602_191 = strlen (buf_3(D));
  D.47601_192 = buflen_7(D) - D.47602_191;
  D.47606_193 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47600_194 = smh_2->msid;
  switch_snprintf (D.47603_190, D.47601_192, "a=ssrc:%u msid:%s a0\n", D.47606_193, D.47600_194);
  D.47599_195 = strlen (buf_3(D));
  D.47598_196 = buf_3(D) + D.47599_195;
  D.47597_197 = strlen (buf_3(D));
  D.47596_198 = buflen_7(D) - D.47597_197;
  D.47606_199 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47600_200 = smh_2->msid;
  switch_snprintf (D.47598_196, D.47596_198, "a=ssrc:%u mslabel:%s\n", D.47606_199, D.47600_200);
  D.47595_201 = strlen (buf_3(D));
  D.47594_202 = buf_3(D) + D.47595_201;
  D.47593_203 = strlen (buf_3(D));
  D.47592_204 = buflen_7(D) - D.47593_203;
  D.47606_205 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssrc;
  D.47600_206 = smh_2->msid;
  switch_snprintf (D.47594_202, D.47592_204, "a=ssrc:%u label:%sa0\n", D.47606_205, D.47600_206);
  D.47591_207 = strlen (buf_3(D));
  D.47590_208 = buf_3(D) + D.47591_207;
  D.47589_209 = strlen (buf_3(D));
  D.47588_210 = buflen_7(D) - D.47589_209;
  D.47587_211 = MEM[(struct ice_t *)smh_2 + 6480B].ufrag;
  switch_snprintf (D.47590_208, D.47588_210, "a=ice-ufrag:%s\n", D.47587_211);
  D.47586_212 = strlen (buf_3(D));
  D.47585_213 = buf_3(D) + D.47586_212;
  D.47584_214 = strlen (buf_3(D));
  D.47583_215 = buflen_7(D) - D.47584_214;
  D.47582_216 = MEM[(struct ice_t *)smh_2 + 6480B].pwd;
  switch_snprintf (D.47585_213, D.47583_215, "a=ice-pwd:%s\n", D.47582_216);
  D.47581_217 = strlen (buf_3(D));
  D.47580_218 = buf_3(D) + D.47581_217;
  D.47579_219 = strlen (buf_3(D));
  D.47578_220 = buflen_7(D) - D.47579_219;
  D.47577_221 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47576_222 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47575_223 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47574_224 = (int) D.47575_223;
  switch_snprintf (D.47580_218, D.47578_220, "a=candidate:%s 1 %s %u %s %d typ host generation 0\n", &tmp1, D.47577_221, 659136, D.47576_222, D.47574_224);
  D.47573_225 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  # DEBUG s => D.47573_225
  if (D.47573_225 == 0B)
    goto <bb 84>;
  else
    goto <bb 82>;
  # SUCC: 84 [15.0%]  (true,exec) 82 [85.0%]  (false,exec)

  # BLOCK 82 freq:48
  # PRED: 81 [85.0%]  (false,exec)
  D.47514_226 = MEM[(const char *)D.47573_225];
  if (D.47514_226 == 0)
    goto <bb 84>;
  else
    goto <bb 83>;
  # SUCC: 84 [50.0%]  (true,exec) 83 [50.0%]  (false,exec)

  # BLOCK 83 freq:24
  # PRED: 82 [50.0%]  (false,exec)
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:57
  # PRED: 81 [15.0%]  (true,exec) 82 [50.0%]  (true,exec) 83 [100.0%]  (fallthru,exec)
  # D.47515_227 = PHI <1(81), 1(82), 0(83)>
  if (D.47515_227 == 0)
    goto <bb 85>;
  else
    goto <bb 92>;
  # SUCC: 85 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 85 freq:28
  # PRED: 84 [50.0%]  (true,exec)
  D.47576_228 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  # DEBUG s => D.47576_228
  if (D.47576_228 == 0B)
    goto <bb 88>;
  else
    goto <bb 86>;
  # SUCC: 88 [15.0%]  (true,exec) 86 [85.0%]  (false,exec)

  # BLOCK 86 freq:24
  # PRED: 85 [85.0%]  (false,exec)
  D.47512_229 = MEM[(const char *)D.47576_228];
  if (D.47512_229 == 0)
    goto <bb 88>;
  else
    goto <bb 87>;
  # SUCC: 88 [50.0%]  (true,exec) 87 [50.0%]  (false,exec)

  # BLOCK 87 freq:12
  # PRED: 86 [50.0%]  (false,exec)
  # SUCC: 88 [100.0%]  (fallthru,exec)

  # BLOCK 88 freq:28
  # PRED: 85 [15.0%]  (true,exec) 86 [50.0%]  (true,exec) 87 [100.0%]  (fallthru,exec)
  # D.47513_230 = PHI <1(85), 1(86), 0(87)>
  if (D.47513_230 == 0)
    goto <bb 89>;
  else
    goto <bb 92>;
  # SUCC: 89 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 89 freq:14
  # PRED: 88 [50.0%]  (true,exec)
  D.47573_231 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47576_232 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47572_233 = __builtin_strcmp (D.47573_231, D.47576_232);
  if (D.47572_233 != 0)
    goto <bb 90>;
  else
    goto <bb 92>;
  # SUCC: 90 [50.0%]  (true,exec) 92 [50.0%]  (false,exec)

  # BLOCK 90 freq:7
  # PRED: 89 [50.0%]  (true,exec)
  D.47571_234 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47575_235 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  if (D.47571_234 != D.47575_235)
    goto <bb 91>;
  else
    goto <bb 92>;
  # SUCC: 91 [51.2%]  (true,exec) 92 [48.8%]  (false,exec)

  # BLOCK 91 freq:4
  # PRED: 90 [51.2%]  (true,exec)
  D.47570_236 = strlen (buf_3(D));
  D.47569_237 = buf_3(D) + D.47570_236;
  D.47568_238 = strlen (buf_3(D));
  D.47567_239 = buflen_7(D) - D.47568_238;
  D.47577_240 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47576_241 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47575_242 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47574_243 = (int) D.47575_242;
  D.47573_244 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47571_245 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47566_246 = (int) D.47571_245;
  switch_snprintf (D.47569_237, D.47567_239, "a=candidate:%s 1 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47577_240, 659134, D.47576_241, D.47574_243, D.47573_244, D.47566_246);
  # SUCC: 92 [100.0%]  (fallthru,exec)

  # BLOCK 92 freq:57
  # PRED: 84 [50.0%]  (false,exec) 88 [50.0%]  (false,exec) 89 [50.0%]  (false,exec) 90 [48.8%]  (false,exec) 91 [100.0%]  (fallthru,exec)
  D.47625_247 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  if (D.47625_247 <= 0)
    goto <bb 94>;
  else
    goto <bb 93>;
  # SUCC: 94 [27.0%]  (true,exec) 93 [73.0%]  (false,exec)

  # BLOCK 93 freq:41
  # PRED: 92 [73.0%]  (false,exec)
  D.47704_248 = session_1(D)->channel;
  D.47565_249 = switch_channel_direction (D.47704_248);
  if (D.47565_249 == 1)
    goto <bb 94>;
  else
    goto <bb 105>;
  # SUCC: 94 [28.0%]  (true,exec) 105 [72.0%]  (false,exec)

  # BLOCK 94 freq:27
  # PRED: 92 [27.0%]  (true,exec) 93 [28.0%]  (true,exec)
  D.47564_250 = strlen (buf_3(D));
  D.47563_251 = buf_3(D) + D.47564_250;
  D.47562_252 = strlen (buf_3(D));
  D.47561_253 = buflen_7(D) - D.47562_252;
  D.47577_254 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47576_255 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47575_256 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47574_257 = (int) D.47575_256;
  D.47625_258 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47560_259 = D.47625_258 <= 0;
  D.47559_260 = D.47574_257 + D.47560_259;
  switch_snprintf (D.47563_251, D.47561_253, "a=candidate:%s 2 %s %u %s %d typ host generation 0\n", &tmp1, D.47577_254, 659136, D.47576_255, D.47559_260);
  D.47573_261 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  # DEBUG s => D.47573_261
  if (D.47573_261 == 0B)
    goto <bb 97>;
  else
    goto <bb 95>;
  # SUCC: 97 [15.0%]  (true,exec) 95 [85.0%]  (false,exec)

  # BLOCK 95 freq:23
  # PRED: 94 [85.0%]  (false,exec)
  D.47510_262 = MEM[(const char *)D.47573_261];
  if (D.47510_262 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:11
  # PRED: 95 [50.0%]  (false,exec)
  # SUCC: 97 [100.0%]  (fallthru,exec)

  # BLOCK 97 freq:27
  # PRED: 94 [15.0%]  (true,exec) 95 [50.0%]  (true,exec) 96 [100.0%]  (fallthru,exec)
  # D.47511_263 = PHI <1(94), 1(95), 0(96)>
  if (D.47511_263 == 0)
    goto <bb 98>;
  else
    goto <bb 105>;
  # SUCC: 98 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 98 freq:13
  # PRED: 97 [50.0%]  (true,exec)
  D.47558_264 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
  # DEBUG s => D.47558_264
  if (D.47558_264 == 0B)
    goto <bb 101>;
  else
    goto <bb 99>;
  # SUCC: 101 [15.0%]  (true,exec) 99 [85.0%]  (false,exec)

  # BLOCK 99 freq:11
  # PRED: 98 [85.0%]  (false,exec)
  D.47508_265 = MEM[(const char *)D.47558_264];
  if (D.47508_265 == 0)
    goto <bb 101>;
  else
    goto <bb 100>;
  # SUCC: 101 [50.0%]  (true,exec) 100 [50.0%]  (false,exec)

  # BLOCK 100 freq:6
  # PRED: 99 [50.0%]  (false,exec)
  # SUCC: 101 [100.0%]  (fallthru,exec)

  # BLOCK 101 freq:13
  # PRED: 98 [15.0%]  (true,exec) 99 [50.0%]  (true,exec) 100 [100.0%]  (fallthru,exec)
  # D.47509_266 = PHI <1(98), 1(99), 0(100)>
  if (D.47509_266 == 0)
    goto <bb 102>;
  else
    goto <bb 105>;
  # SUCC: 102 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 102 freq:7
  # PRED: 101 [50.0%]  (true,exec)
  D.47573_267 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47558_268 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_addr;
  D.47557_269 = __builtin_strcmp (D.47573_267, D.47558_268);
  if (D.47557_269 != 0)
    goto <bb 103>;
  else
    goto <bb 105>;
  # SUCC: 103 [50.0%]  (true,exec) 105 [50.0%]  (false,exec)

  # BLOCK 103 freq:3
  # PRED: 102 [50.0%]  (true,exec)
  D.47571_270 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47556_271 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][1].con_port;
  if (D.47571_270 != D.47556_271)
    goto <bb 104>;
  else
    goto <bb 105>;
  # SUCC: 104 [51.2%]  (true,exec) 105 [48.8%]  (false,exec)

  # BLOCK 104 freq:2
  # PRED: 103 [51.2%]  (true,exec)
  D.47555_272 = strlen (buf_3(D));
  D.47554_273 = buf_3(D) + D.47555_272;
  D.47553_274 = strlen (buf_3(D));
  D.47552_275 = buflen_7(D) - D.47553_274;
  D.47577_276 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].transport;
  D.47576_277 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_addr;
  D.47575_278 = MEM[(struct ice_t *)smh_2 + 6480B].cands[0][0].con_port;
  D.47574_279 = (int) D.47575_278;
  D.47625_280 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47560_281 = D.47625_280 <= 0;
  D.47559_282 = D.47574_279 + D.47560_281;
  D.47573_283 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_ip;
  D.47571_284 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].local_sdp_port;
  D.47566_285 = (int) D.47571_284;
  D.47625_286 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].rtcp_mux;
  D.47560_287 = D.47625_286 <= 0;
  D.47551_288 = D.47566_285 + D.47560_287;
  switch_snprintf (D.47554_273, D.47552_275, "a=candidate:%s 2 %s %u %s %d typ srflx raddr %s rport %d generation 0\n", &tmp2, D.47577_276, 659134, D.47576_277, D.47559_282, D.47573_283, D.47551_288);
  # SUCC: 105 [100.0%]  (fallthru,exec)

  # BLOCK 105 freq:196
  # PRED: 80 [71.0%]  (false,exec) 93 [72.0%]  (false,exec) 97 [50.0%]  (false,exec) 101 [50.0%]  (false,exec) 102 [50.0%]  (false,exec) 103 [48.8%]  (false,exec) 104 [100.0%]  (fallthru,exec)
  if (secure_11(D) != 0)
    goto <bb 106>;
  else
    goto <bb 117>;
  # SUCC: 106 [29.0%]  (true,exec) 117 [71.0%]  (false,exec)

  # BLOCK 106 freq:57
  # PRED: 105 [29.0%]  (true,exec)
  D.47704_289 = session_1(D)->channel;
  D.47550_290 = switch_channel_test_flag (D.47704_289, 109);
  if (D.47550_290 == 0)
    goto <bb 107>;
  else
    goto <bb 117>;
  # SUCC: 107 [50.0%]  (true,exec) 117 [50.0%]  (false,exec)

  # BLOCK 107 freq:28
  # PRED: 106 [50.0%]  (true,exec)
  # i_346 = PHI <0(106)>
  goto <bb 116>;
  # SUCC: 116 [100.0%]  (fallthru)

  # BLOCK 108 freq:256
  # PRED: 116 [90.0%]  (true,exec)
  D.47549_292 = smh_2->crypto_suite_order[i_291];
  j_293 = SUITES[D.47549_292].type;
  # DEBUG j => j_293
  D.47702_294 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (j_293 == D.47702_294)
    goto <bb 110>;
  else
    goto <bb 109>;
  # SUCC: 110 [28.0%]  (true,exec) 109 [72.0%]  (false,exec)

  # BLOCK 109 freq:184
  # PRED: 108 [72.0%]  (false,exec)
  D.47702_295 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].crypto_type;
  if (D.47702_295 == 9)
    goto <bb 110>;
  else
    goto <bb 115>;
  # SUCC: 110 [28.0%]  (true,exec) 115 [72.0%]  (false,exec)

  # BLOCK 110 freq:123
  # PRED: 108 [28.0%]  (true,exec) 109 [28.0%]  (true,exec)
  D.47548_296 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
  # DEBUG s => D.47548_296
  if (D.47548_296 == 0B)
    goto <bb 113>;
  else
    goto <bb 111>;
  # SUCC: 113 [15.0%]  (true,exec) 111 [85.0%]  (false,exec)

  # BLOCK 111 freq:105
  # PRED: 110 [85.0%]  (false,exec)
  D.47506_297 = MEM[(const char *)D.47548_296];
  if (D.47506_297 == 0)
    goto <bb 113>;
  else
    goto <bb 112>;
  # SUCC: 113 [50.0%]  (true,exec) 112 [50.0%]  (false,exec)

  # BLOCK 112 freq:52
  # PRED: 111 [50.0%]  (false,exec)
  # SUCC: 113 [100.0%]  (fallthru,exec)

  # BLOCK 113 freq:123
  # PRED: 110 [15.0%]  (true,exec) 111 [50.0%]  (true,exec) 112 [100.0%]  (fallthru,exec)
  # D.47507_298 = PHI <1(110), 1(111), 0(112)>
  if (D.47507_298 == 0)
    goto <bb 114>;
  else
    goto <bb 115>;
  # SUCC: 114 [29.0%]  (true,exec) 115 [71.0%]  (false,exec)

  # BLOCK 114 freq:36
  # PRED: 113 [29.0%]  (true,exec)
  D.47547_299 = strlen (buf_3(D));
  D.47546_300 = buf_3(D) + D.47547_299;
  D.47545_301 = strlen (buf_3(D));
  D.47544_302 = buflen_7(D) - D.47545_301;
  D.47548_303 = MEM[(struct switch_rtp_engine_t *)smh_2 + 80B].ssec[j_293].local_crypto_key;
  switch_snprintf (D.47546_300, D.47544_302, "a=crypto:%s\n", D.47548_303);
  # SUCC: 115 [100.0%]  (fallthru,exec)

  # BLOCK 115 freq:256
  # PRED: 109 [72.0%]  (false,exec) 113 [71.0%]  (false,exec) 114 [100.0%]  (fallthru,exec)
  i_304 = i_291 + 1;
  # DEBUG i => i_304
  # SUCC: 116 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 116 freq:284
  # PRED: 107 [100.0%]  (fallthru) 115 [100.0%]  (fallthru,dfs_back,exec)
  # i_291 = PHI <i_346(107), i_304(115)>
  # DEBUG i => i_291
  D.47549_305 = smh_2->crypto_suite_order[i_291];
  if (D.47549_305 != 9)
    goto <bb 108>;
  else
    goto <bb 117>;
  # SUCC: 108 [90.0%]  (true,exec) 117 [10.0%]  (false,exec)

  # BLOCK 117 freq:196
  # PRED: 105 [71.0%]  (false,exec) 106 [50.0%]  (false,exec) 116 [10.0%]  (false,exec)
  if (cng_type_57(D) == 0)
    goto <bb 118>;
  else
    goto <bb 120>;
  # SUCC: 118 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

  # BLOCK 118 freq:57
  # PRED: 117 [29.0%]  (true,exec)
  D.47543_306 = switch_media_handle_test_media_flag (smh_2, 9);
  if (D.47543_306 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;
  # SUCC: 119 [29.0%]  (true,exec) 120 [71.0%]  (false,exec)

  # BLOCK 119 freq:16
  # PRED: 118 [29.0%]  (true,exec)
  D.47542_307 = strlen (buf_3(D));
  D.47541_308 = buf_3(D) + D.47542_307;
  D.47540_309 = strlen (buf_3(D));
  D.47539_310 = buflen_7(D) - D.47540_309;
  switch_snprintf (D.47541_308, D.47539_310, "a=silenceSupp:off - - - -\n");
  # SUCC: 120 [100.0%]  (fallthru,exec)

  # BLOCK 120 freq:196
  # PRED: 117 [71.0%]  (false,exec) 118 [71.0%]  (false,exec) 119 [100.0%]  (fallthru,exec)
  if (append_audio_311(D) != 0B)
    goto <bb 121>;
  else
    goto <bb 126>;
  # SUCC: 121 [85.0%]  (true,exec) 126 [15.0%]  (false,exec)

  # BLOCK 121 freq:167
  # PRED: 120 [85.0%]  (true,exec)
  D.47538_312 = strlen (buf_3(D));
  D.47537_313 = buf_3(D) + D.47538_312;
  D.47536_314 = strlen (buf_3(D));
  D.47535_315 = buflen_7(D) - D.47536_314;
  D.47533_316 = *append_audio_311(D);
  if (D.47533_316 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;
  # SUCC: 122 [50.0%]  (true,exec) 123 [50.0%]  (false,exec)

  # BLOCK 122 freq:83
  # PRED: 121 [50.0%]  (true,exec)
  D.47532_317 = strlen (append_audio_311(D));
  D.47531_318 = D.47532_317 + -1;
  append_audio_319 = append_audio_311(D) + D.47531_318;
  # SUCC: 123 [100.0%]  (fallthru,exec)

  # BLOCK 123 freq:167
  # PRED: 121 [50.0%]  (false,exec) 122 [100.0%]  (fallthru,exec)
  # append_audio_320 = PHI <append_audio_311(D)(121), append_audio_319(122)>
  D.47530_321 = *append_audio_320;
  if (D.47530_321 == 10)
    goto <bb 125>;
  else
    goto <bb 124>;
  # SUCC: 125 [28.0%]  (true,exec) 124 [72.0%]  (false,exec)

  # BLOCK 124 freq:120
  # PRED: 123 [72.0%]  (false,exec)
  # SUCC: 125 [100.0%]  (fallthru,exec)

  # BLOCK 125 freq:167
  # PRED: 123 [28.0%]  (true,exec) 124 [100.0%]  (fallthru,exec)
  # iftmp.41_322 = PHI <""(123), "\n"(124)>
  switch_snprintf (D.47537_313, D.47535_315, "%s%s", append_audio_311(D), iftmp.41_322);
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:196
  # PRED: 120 [15.0%]  (false,exec) 125 [100.0%]  (fallthru,exec)
  if (cur_ptime_26(D) == 0)
    goto <bb 127>;
  else
    goto <bb 128>;
  # SUCC: 127 [50.0%]  (true,exec) 128 [50.0%]  (false,exec)

  # BLOCK 127 freq:98
  # PRED: 126 [50.0%]  (true,exec)
  # DEBUG cur_ptime => ptime_80
  # SUCC: 128 [100.0%]  (fallthru,exec)

  # BLOCK 128 freq:196
  # PRED: 126 [50.0%]  (false,exec) 127 [100.0%]  (fallthru,exec)
  # cur_ptime_323 = PHI <cur_ptime_26(D)(126), ptime_80(127)>
  # DEBUG cur_ptime => cur_ptime_323
  if (cur_ptime_323 != 0)
    goto <bb 129>;
  else
    goto <bb 130>;
  # SUCC: 129 [29.0%]  (true,exec) 130 [71.0%]  (false,exec)

  # BLOCK 129 freq:57
  # PRED: 128 [29.0%]  (true,exec)
  D.47529_324 = strlen (buf_3(D));
  D.47528_325 = buf_3(D) + D.47529_324;
  D.47527_326 = strlen (buf_3(D));
  D.47526_327 = buflen_7(D) - D.47527_326;
  switch_snprintf (D.47528_325, D.47526_327, "a=ptime:%d\n", cur_ptime_323);
  # SUCC: 130 [100.0%]  (fallthru,exec)

  # BLOCK 130 freq:196
  # PRED: 128 [71.0%]  (false,exec) 129 [100.0%]  (fallthru,exec)
  local_sdp_audio_zrtp_hash_328 = switch_core_media_get_zrtp_hash (session_1(D), 0, 1);
  # DEBUG local_sdp_audio_zrtp_hash => local_sdp_audio_zrtp_hash_328
  if (local_sdp_audio_zrtp_hash_328 != 0B)
    goto <bb 131>;
  else
    goto <bb 132>;
  # SUCC: 131 [69.8%]  (true,exec) 132 [30.2%]  (false,exec)

  # BLOCK 131 freq:137
  # PRED: 130 [69.8%]  (true,exec)
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 5882, session_1(D), 7, "Adding audio a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
  D.47525_329 = strlen (buf_3(D));
  D.47524_330 = buf_3(D) + D.47525_329;
  D.47523_331 = strlen (buf_3(D));
  D.47522_332 = buflen_7(D) - D.47523_331;
  switch_snprintf (D.47524_330, D.47522_332, "a=zrtp-hash:%s\n", local_sdp_audio_zrtp_hash_328);
  # SUCC: 132 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:196
  # PRED: 130 [30.2%]  (false,exec) 131 [100.0%]  (fallthru,exec)
  # DEBUG s => sr_333(D)
  if (sr_333(D) == 0B)
    goto <bb 135>;
  else
    goto <bb 133>;
  # SUCC: 135 [15.0%]  (true,exec) 133 [85.0%]  (false,exec)

  # BLOCK 133 freq:167
  # PRED: 132 [85.0%]  (false,exec)
  D.47504_334 = *sr_333(D);
  if (D.47504_334 == 0)
    goto <bb 135>;
  else
    goto <bb 134>;
  # SUCC: 135 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

  # BLOCK 134 freq:83
  # PRED: 133 [50.0%]  (false,exec)
  # SUCC: 135 [100.0%]  (fallthru,exec)

  # BLOCK 135 freq:196
  # PRED: 132 [15.0%]  (true,exec) 133 [50.0%]  (true,exec) 134 [100.0%]  (fallthru,exec)
  # D.47505_335 = PHI <1(132), 1(133), 0(134)>
  if (D.47505_335 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;
  # SUCC: 136 [39.0%]  (true,exec) 137 [61.0%]  (false,exec)

  # BLOCK 136 freq:76
  # PRED: 135 [39.0%]  (true,exec)
  D.47521_336 = strlen (buf_3(D));
  D.47520_337 = buf_3(D) + D.47521_336;
  D.47519_338 = strlen (buf_3(D));
  D.47518_339 = buflen_7(D) - D.47519_338;
  switch_snprintf (D.47520_337, D.47518_339, "a=%s\n", sr_333(D));
  # SUCC: 137 [100.0%]  (fallthru,exec)

  # BLOCK 137 freq:218
  # PRED: 4 [10.1%]  (true,exec) 135 [61.0%]  (false,exec) 136 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}


Merging blocks 138 and 2
Scope blocks after cleanups:

{ Scope block #0 Originating from :#0 
  int i;
  int rate;
  int already_did[128];
  int ptime;
  const char * local_sdp_audio_zrtp_hash;
  struct switch_media_handle_t * smh;
  struct switch_rtp_engine_t * a_engine; (unused)
  int noptime; (nonlocalized)
  static const char __PRETTY_FUNCTION__[11] = "generate_m"; (nonlocalized)
  static const char __func__[11] = "generate_m"; (nonlocalized)

  { Scope block #119 src/switch_core_media.c:5886 Originating from :  static int _zstr (const char *); 
    const char * s; (nonlocalized)

    { Scope block #120 Originating from :#0 

    }

  }

  { Scope block #121 src/switch_core_media.c:5758 Originating from :  static int _zstr (const char *); 
    const char * s; (nonlocalized)

    { Scope block #122 Originating from :#0 

    }

  }

  { Scope block #123 Originating from :#100 
    const struct switch_codec_implementation_t * imp;
    int this_ptime;

  }

  { Scope block #124 Originating from :#101 
    const struct switch_codec_implementation_t * imp;
    char * fmtp;
    int this_ptime;

    { Scope block #125 Originating from :#102 
      char key[128];
      char * check;

    }

    { Scope block #126 Originating from :#103 
      int channels;

    }

  }

  { Scope block #127 Originating from :#104 
    char tmp1[11];
    char tmp2[11];
    uint32_t c1; (unused)
    struct ice_t * ice_out; (unused)
    uint32_t c2; (nonlocalized)

    { Scope block #128 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (nonlocalized)

      { Scope block #129 Originating from :#0 

      }

    }

    { Scope block #130 src/switch_core_media.c:5826 Originating from :  static int _zstr (const char *); 
      const char * s; (nonlocalized)

      { Scope block #131 Originating from :#0 

      }

    }

    { Scope block #132 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (nonlocalized)

      { Scope block #133 Originating from :#0 

      }

    }

    { Scope block #134 src/switch_core_media.c:5807 Originating from :  static int _zstr (const char *); 
      const char * s; (nonlocalized)

      { Scope block #135 Originating from :#0 

      }

    }

    { Scope block #136 Originating from :#113 
      size_t __s1_len; (nonlocalized)
      size_t __s2_len; (nonlocalized)

    }

    { Scope block #137 Originating from :#114 
      size_t __s1_len; (nonlocalized)
      size_t __s2_len; (nonlocalized)

    }

  }

  { Scope block #138 Originating from :#115 
    int i;

    { Scope block #139 Originating from :#116 
      switch_rtp_crypto_key_type_t j;

      { Scope block #140 src/switch_core_media.c:5852 Originating from :  static int _zstr (const char *); 
        const char * s; (nonlocalized)

        { Scope block #141 Originating from :#0 

        }

      }

    }

  }

}

;; Function switch_core_session_media_handle_ready (switch_core_session_media_handle_ready)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_check_outgoing_crypto (switch_core_session_check_outgoing_crypto)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_get_media_handle (switch_core_session_get_media_handle)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_clear_media_handle (switch_core_session_clear_media_handle)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_get_mparams (switch_core_media_get_mparams)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_prepare_codecs (switch_core_media_prepare_codecs)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_write_frame (switch_core_media_write_frame)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_copy_t38_options (switch_core_media_copy_t38_options)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_process_t38_passthru (switch_core_media_process_t38_passthru)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_get_offered_pt (switch_core_media_get_offered_pt)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_video_codec (switch_core_media_set_video_codec)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_codec (switch_core_media_set_codec)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_read_frame (switch_core_media_read_frame)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_add_ice_acl (switch_core_media_add_ice_acl)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_check_video_codecs (switch_core_media_check_video_codecs)

Function is not available or overwritable; not analyzing.

;; Function switch_ice_direction (switch_ice_direction)

Function is not available or overwritable; not analyzing.

;; Function check_dtls_reinvite (check_dtls_reinvite)



 local analysis of check_dtls_reinvite
   scanning: D.43905_5 = session_4(D)->channel;
    Indirect ref read is not const
  scanning: D.43906_6 = switch_channel_test_flag (D.43905_5, 103);
    checking flags for call: neihter
  scanning: if (D.43906_6 != 0)
  scanning: D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
  scanning: if (D.43909_8 == 0B)
  scanning: D.47800_40 = MEM[(const char *)engine_7(D) + 10904B];
    Indirect ref read is not const
  scanning: if (D.47800_40 == 0)
  scanning: if (D.47799_41 == 0)
  scanning: D.43913_10 = switch_rtp_has_dtls ();
    checking flags for call: neihter
  scanning: if (D.43913_10 != 0)
  scanning: D.43916_11 = dtls_ok (session_4(D));
    checking flags for call: neihter
  scanning: if (D.43916_11 != 0)
  scanning: D.43920_12 = switch_ice_direction (session_4(D));
    checking flags for call: neihter
  scanning: if (D.43920_12 == 0)
  scanning: D.43925_16 = engine_7(D)->type;
    Indirect ref read is not const
  scanning: if (D.43925_16 == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);
    checking flags for call: neihter
  scanning: D.43929_20 = engine_7(D)->rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.43929_20 > 0)
  scanning: D.43932_22 = engine_7(D)->rtp_session;
    Indirect ref read is not const
  scanning: D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
  scanning: D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
  scanning: D.43935_25 = xtype_1 | dtype_2;
  scanning: switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);
    checking flags for call: neihter
  scanning: D.43929_26 = engine_7(D)->rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.43929_26 <= 0)
  scanning: D.43932_28 = engine_7(D)->rtp_session;
    Indirect ref read is not const
  scanning: D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
  scanning: D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
  scanning: D.43935_31 = dtype_2 | 8;
  scanning: switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: check_dtls_reinvite

;; Function check_dtls_reinvite

;; 
18 basic blocks, 27 edges, last basic block 18.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [61.0%]  (true,exec)
Successors:  6 [15.0%]  (true,exec) 4 [85.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (false,exec)
Successors:  6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [50.0%]  (false,exec)
Successors:  6 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  3 [15.0%]  (true,exec) 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
Successors:  7 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [39.0%]  (true,exec)
Successors:  8 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [39.0%]  (true,exec)
Successors:  9 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [39.0%]  (true,exec)
Successors:  11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [50.0%]  (false,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
Successors:  13 [28.0%]  (true,exec) 12 [72.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [72.0%]  (false,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  11 [28.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
Successors:  14 [73.0%]  (true,exec) 15 [27.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [73.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [27.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [19.1%]  (true,exec) 17 [80.9%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [19.1%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  2 [39.0%]  (false,exec) 6 [61.0%]  (false,exec) 7 [61.0%]  (false,exec) 8 [61.0%]  (false,exec) 15 [80.9%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


check_dtls_reinvite (struct switch_core_session_t * session, struct switch_rtp_engine_t * engine)
{
  const char D.47800;
  int D.47799;
  dtls_type_t dtype;
  dtls_type_t xtype;
  static const char __func__[20] = "check_dtls_reinvite";
  unsigned int D.43935;
  struct dtls_fingerprint_t * D.43934;
  struct dtls_fingerprint_t * D.43933;
  struct switch_rtp_t * D.43932;
  int8_t D.43929;
  switch_media_type_t D.43925;
  char * iftmp.75;
  switch_call_direction_t D.43920;
  int D.43916;
  int D.43913;
  char[192] * D.43909;
  uint32_t D.43906;
  struct switch_channel_t * D.43905;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  D.43905_5 = session_4(D)->channel;
  D.43906_6 = switch_channel_test_flag (D.43905_5, 103);
  if (D.43906_6 != 0)
    goto <bb 3>;
  else
    goto <bb 17>;
  # SUCC: 3 [61.0%]  (true,exec) 17 [39.0%]  (false,exec)

  # BLOCK 3 freq:6100
  # PRED: 2 [61.0%]  (true,exec)
  D.43909_8 = &engine_7(D)->local_dtls_fingerprint.str;
  # DEBUG s => D.43909_8
  if (D.43909_8 == 0B)
    goto <bb 6>;
  else
    goto <bb 4>;
  # SUCC: 6 [15.0%]  (true,exec) 4 [85.0%]  (false,exec)

  # BLOCK 4 freq:5185
  # PRED: 3 [85.0%]  (false,exec)
  D.47800_40 = MEM[(const char *)engine_7(D) + 10904B];
  if (D.47800_40 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;
  # SUCC: 6 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 5 freq:2592
  # PRED: 4 [50.0%]  (false,exec)
  # SUCC: 6 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:6100
  # PRED: 3 [15.0%]  (true,exec) 4 [50.0%]  (true,exec) 5 [100.0%]  (fallthru,exec)
  # D.47799_41 = PHI <1(3), 1(4), 0(5)>
  if (D.47799_41 == 0)
    goto <bb 7>;
  else
    goto <bb 17>;
  # SUCC: 7 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 7 freq:2378
  # PRED: 6 [39.0%]  (true,exec)
  D.43913_10 = switch_rtp_has_dtls ();
  if (D.43913_10 != 0)
    goto <bb 8>;
  else
    goto <bb 17>;
  # SUCC: 8 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 8 freq:927
  # PRED: 7 [39.0%]  (true,exec)
  D.43916_11 = dtls_ok (session_4(D));
  if (D.43916_11 != 0)
    goto <bb 9>;
  else
    goto <bb 17>;
  # SUCC: 9 [39.0%]  (true,exec) 17 [61.0%]  (false,exec)

  # BLOCK 9 freq:361
  # PRED: 8 [39.0%]  (true,exec)
  D.43920_12 = switch_ice_direction (session_4(D));
  if (D.43920_12 == 0)
    goto <bb 11>;
  else
    goto <bb 10>;
  # SUCC: 11 [50.0%]  (true,exec) 10 [50.0%]  (false,exec)

  # BLOCK 10 freq:181
  # PRED: 9 [50.0%]  (false,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:361
  # PRED: 9 [50.0%]  (true,exec) 10 [100.0%]  (fallthru,exec)
  # dtype_2 = PHI <1(9), 2(10)>
  # DEBUG dtype => dtype_2
  D.43925_16 = engine_7(D)->type;
  if (D.43925_16 == 1)
    goto <bb 13>;
  else
    goto <bb 12>;
  # SUCC: 13 [28.0%]  (true,exec) 12 [72.0%]  (false,exec)

  # BLOCK 12 freq:260
  # PRED: 11 [72.0%]  (false,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:361
  # PRED: 11 [28.0%]  (true,exec) 12 [100.0%]  (fallthru,exec)
  # iftmp.75_3 = PHI <"video"(11), "audio"(12)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 4701, session_4(D), 6, "RE-SETTING %s DTLS\n", iftmp.75_3);
  # DEBUG xtype => 4
  D.43929_20 = engine_7(D)->rtcp_mux;
  if (D.43929_20 > 0)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [73.0%]  (true,exec) 15 [27.0%]  (false,exec)

  # BLOCK 14 freq:264
  # PRED: 13 [73.0%]  (true,exec)
  # DEBUG xtype => 12
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:361
  # PRED: 13 [27.0%]  (false,exec) 14 [100.0%]  (fallthru,exec)
  # xtype_1 = PHI <4(13), 12(14)>
  # DEBUG xtype => xtype_1
  D.43932_22 = engine_7(D)->rtp_session;
  D.43933_23 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_24 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_25 = xtype_1 | dtype_2;
  switch_rtp_add_dtls (D.43932_22, D.43933_23, D.43934_24, D.43935_25);
  D.43929_26 = engine_7(D)->rtcp_mux;
  if (D.43929_26 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [19.1%]  (true,exec) 17 [80.9%]  (false,exec)

  # BLOCK 16 freq:69
  # PRED: 15 [19.1%]  (true,exec)
  # DEBUG xtype => 8
  D.43932_28 = engine_7(D)->rtp_session;
  D.43933_29 = &engine_7(D)->local_dtls_fingerprint;
  D.43934_30 = &engine_7(D)->remote_dtls_fingerprint;
  D.43935_31 = dtype_2 | 8;
  switch_rtp_add_dtls (D.43932_28, D.43933_29, D.43934_30, D.43935_31);
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:10000
  # PRED: 2 [39.0%]  (false,exec) 6 [61.0%]  (false,exec) 7 [61.0%]  (false,exec) 8 [61.0%]  (false,exec) 15 [80.9%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function check_ice (check_ice)



 local analysis of check_ice
   scanning: engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};
  scanning: D.45460_41 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_41 != 0)
  scanning: D.45463_42 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_42 != 0)
  scanning: D.45466_43 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_44 = D.45466_43->channel;
    Indirect ref read is not const
  scanning: D.45468_45 = switch_channel_test_flag (D.45467_44, 103);
    checking flags for call: neihter
  scanning: if (D.45468_45 == 0)
  scanning: engine_38->ice_in.chosen[0] = 0;
    Indirect ref write is not const/pure
  scanning: engine_38->ice_in.chosen[1] = 0;
    Indirect ref write is not const/pure
  scanning: engine_38->ice_in.cand_idx = 0;
    Indirect ref write is not const/pure
  scanning: if (m_46(D) != 0B)
  scanning: attr_47 = m_46(D)->m_attributes;
    Indirect ref read is not const
  scanning: attr_49 = sdp_48(D)->sdp_attributes;
    Indirect ref read is not const
  scanning: D.45474_53 = attr_1->a_name;
    Indirect ref read is not const
  scanning: if (D.45474_53 == 0B)
  scanning: D.47828_640 = *D.45474_53;
    Indirect ref read is not const
  scanning: if (D.47828_640 == 0)
  scanning: if (D.47827_641 != 0)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.45474_55 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45478_56 = strcasecmp (D.45474_55, "ice-ufrag");
    checking flags for call: pure
  scanning: if (D.45478_56 == 0)
  scanning: D.45466_57 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45481_58 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.45482_59 = switch_core_perform_session_strdup (D.45466_57, D.45481_58, "src/switch_core_media.c", &__func__, 2503);
    checking flags for call: neihter
  scanning: engine_38->ice_in.ufrag = D.45482_59;
    Indirect ref write is not const/pure
  scanning: D.45474_60 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45484_61 = strcasecmp (D.45474_60, "ice-pwd");
    checking flags for call: pure
  scanning: if (D.45484_61 == 0)
  scanning: D.45466_62 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45481_63 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.45487_64 = switch_core_perform_session_strdup (D.45466_62, D.45481_63, "src/switch_core_media.c", &__func__, 2505);
    checking flags for call: neihter
  scanning: engine_38->ice_in.pwd = D.45487_64;
    Indirect ref write is not const/pure
  scanning: D.45474_65 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45489_66 = strcasecmp (D.45474_65, "ice-options");
    checking flags for call: pure
  scanning: if (D.45489_66 == 0)
  scanning: D.45466_67 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45481_68 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.45492_69 = switch_core_perform_session_strdup (D.45466_67, D.45481_68, "src/switch_core_media.c", &__func__, 2507);
    checking flags for call: neihter
  scanning: engine_38->ice_in.options = D.45492_69;
    Indirect ref write is not const/pure
  scanning: D.45496_70 = switch_rtp_has_dtls ();
    checking flags for call: neihter
  scanning: if (D.45496_70 != 0)
  scanning: D.45466_71 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45498_72 = dtls_ok (D.45466_71);
    checking flags for call: neihter
  scanning: if (D.45498_72 != 0)
  scanning: D.45474_73 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45500_74 = strcasecmp (D.45474_73, "fingerprint");
    checking flags for call: pure
  scanning: if (D.45500_74 == 0)
  scanning: D.45481_75 = attr_1->a_value;
    Indirect ref read is not const
  scanning: if (D.45481_75 == 0B)
  scanning: D.47832_642 = *D.45481_75;
    Indirect ref read is not const
  scanning: if (D.47832_642 == 0)
  scanning: if (D.47831_643 == 0)
  scanning: D.45466_77 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45481_78 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.45504_79 = switch_core_perform_session_strdup (D.45466_77, D.45481_78, "src/switch_core_media.c", &__func__, 2512);
    checking flags for call: neihter
  scanning: engine_38->remote_dtls_fingerprint.type = D.45504_79;
    Indirect ref write is not const/pure
  scanning: D.45505_80 = engine_38->remote_dtls_fingerprint.type;
    Indirect ref read is not const
  scanning: p_81 = __builtin_strchr (D.45505_80, 32);
    checking flags for call: pure
  scanning: if (p_81 != 0B)
  scanning: *p_81 = 0;
    Indirect ref write is not const/pure
  scanning: p_82 = p_81 + 1;
  scanning: D.45508_83 = &engine_38->local_dtls_fingerprint.str;
  scanning: switch_copy_string (D.45508_83, p_82, 192);
    checking flags for call: neihter
  scanning: generate_local_fingerprint (smh_34(D), type_36(D));
    checking flags for call: neihter
  scanning: D.45466_84 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_85 = D.45466_84->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_flag_value (D.45467_85, 109, 1);
    checking flags for call: neihter
  scanning: D.45511_86 = engine_38->remote_ssrc;
    Indirect ref read is not const
  scanning: if (D.45511_86 == 0)
  scanning: D.45474_87 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45513_88 = strcasecmp (D.45474_87, "ssrc");
    checking flags for call: pure
  scanning: if (D.45513_88 == 0)
  scanning: D.45481_89 = attr_1->a_value;
    Indirect ref read is not const
  scanning: if (D.45481_89 != 0B)
  scanning: D.45481_90 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.47835_644 = strtol (D.45481_90, 0B, 10);
    checking flags for call: neihter
  scanning: D.45517_92 = (unsigned int) D.47835_644;
  scanning: engine_38->remote_ssrc = D.45517_92;
    Indirect ref write is not const/pure
  scanning: D.45518_93 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: if (D.45518_93 != 0B)
  scanning: D.45511_94 = engine_38->remote_ssrc;
    Indirect ref read is not const
  scanning: if (D.45511_94 != 0)
  scanning: D.45518_95 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45511_96 = engine_38->remote_ssrc;
    Indirect ref read is not const
  scanning: switch_rtp_set_remote_ssrc (D.45518_95, D.45511_96);
    checking flags for call: neihter
  scanning: D.45474_97 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45523_98 = strcasecmp (D.45474_97, "rtcp-mux");
    checking flags for call: pure
  scanning: if (D.45523_98 == 0)
  scanning: engine_38->rtcp_mux = 1;
    Indirect ref write is not const/pure
  scanning: D.45526_99 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45527_100 = D.45526_99->remote_sdp_port;
    Indirect ref read is not const
  scanning: engine_38->remote_rtcp_port = D.45527_100;
    Indirect ref write is not const/pure
  scanning: got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
  scanning: D.45474_102 = attr_1->a_name;
    Indirect ref read is not const
  scanning: D.45529_103 = strcasecmp (D.45474_102, "candidate");
    checking flags for call: pure
  scanning: if (D.45529_103 == 0)
  scanning: D.45466_104 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_105 = D.45466_104->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_flag_value (D.45467_105, 108, 1);
    checking flags for call: neihter
  scanning: D.45532_106 = engine_38->cand_acl_count;
    Indirect ref read is not const
  scanning: if (D.45532_106 == 0)
  scanning: D.45532_107 = engine_38->cand_acl_count;
    Indirect ref read is not const
  scanning: engine_38->cand_acl[D.45532_107] = "wan.auto";
    Indirect ref write is not const/pure
  scanning: D.45535_108 = D.45532_107 + 1;
  scanning: engine_38->cand_acl_count = D.45535_108;
    Indirect ref write is not const/pure
  scanning: D.45466_109 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45466_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");
    checking flags for call: neihter
  scanning: D.45481_110 = attr_1->a_value;
    Indirect ref read is not const
  scanning: D.45536_111 = switch_stristr (" udp ", D.45481_110);
    checking flags for call: neihter
  scanning: if (D.45536_111 == 0B)
  scanning: // predicted unlikely by continue predictor.
  scanning: D.45466_112 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45481_113 = attr_1->a_value;
    Indirect ref read is not const
  scanning: data_114 = switch_core_perform_session_strdup (D.45466_112, D.45481_113, "src/switch_core_media.c", &__func__, 2556);
    checking flags for call: neihter
  scanning: D.45539_115 = switch_separate_string (data_114, 32, &fields, 15);
    checking flags for call: neihter
  scanning: argc_116 = (int) D.45539_115;
  scanning: if (argc_116 <= 4)
  scanning: D.45543_117 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: if (D.45543_117 > 48)
  scanning: D.45466_215 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45466_215, 4, "Invalid data\n");
    checking flags for call: neihter
  scanning: // predicted unlikely by continue predictor.
  scanning: D.45544_118 = fields[1];
  scanning: D.47838_645 = strtol (D.45544_118, 0B, 10);
    checking flags for call: neihter
  scanning: cid_120 = D.47838_645 + -1;
  scanning: D.45466_122 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45546_123 = fields[i_2];
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45466_122, 101, "CAND %d [%s]\n", i_2, D.45546_123);
    checking flags for call: neihter
  scanning: i_124 = i_2 + 1;
  scanning: if (i_2 < argc_116)
  scanning: D.45466_125 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45548_127 = fields[2];
  scanning: D.45549_128 = fields[7];
  scanning: D.45550_129 = fields[4];
  scanning: D.45551_130 = fields[5];
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45466_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47838_645, D.45548_127, D.45549_128, D.45550_129, D.45551_130);
    checking flags for call: neihter
  scanning: D.45543_131 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45552_132 = D.45543_131 + 1;
  scanning: engine_38->ice_in.cand_idx = D.45552_132;
    Indirect ref write is not const/pure
  scanning: D.45532_134 = engine_38->cand_acl_count;
    Indirect ref read is not const
  scanning: if (D.45532_134 > 0)
  scanning: D.45555_135 = engine_38->ice_in.chosen[cid_120];
    Indirect ref read is not const
  scanning: if (D.45555_135 == 0)
  scanning: D.45550_136 = fields[4];
  scanning: D.45557_137 = engine_38->cand_acl[0];
    Indirect ref read is not const
  scanning: D.45558_138 = switch_check_network_list_ip_token (D.45550_136, D.45557_137, 0B);
    checking flags for call: neihter
  scanning: if (D.45558_138 != 0)
  scanning: D.45543_139 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: engine_38->ice_in.chosen[cid_120] = D.45543_139;
    Indirect ref write is not const/pure
  scanning: D.45466_140 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45548_144 = fields[2];
  scanning: D.45549_145 = fields[7];
  scanning: D.45550_146 = fields[4];
  scanning: D.45551_147 = fields[5];
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45466_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47838_645, D.45548_144, D.45549_145, D.45550_146, D.45551_147);
    checking flags for call: neihter
  scanning: D.45466_148 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45548_152 = fields[2];
  scanning: D.45549_153 = fields[7];
  scanning: D.45550_154 = fields[4];
  scanning: D.45551_155 = fields[5];
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45466_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47838_645, D.45548_152, D.45549_153, D.45550_154, D.45551_155);
    checking flags for call: neihter
  scanning: D.45543_156 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_157 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45568_158 = fields[0];
  scanning: D.45569_159 = switch_core_perform_session_strdup (D.45466_157, D.45568_158, "src/switch_core_media.c", &__func__, 2592);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_156][cid_120].foundation = D.45569_159;
    Indirect ref write is not const/pure
  scanning: D.45543_160 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45544_161 = fields[1];
  scanning: D.47841_646 = strtol (D.45544_161, 0B, 10);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_160][cid_120].component_id = D.47841_646;
    Indirect ref write is not const/pure
  scanning: D.45543_163 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_164 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45548_165 = fields[2];
  scanning: D.45571_166 = switch_core_perform_session_strdup (D.45466_164, D.45548_165, "src/switch_core_media.c", &__func__, 2594);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_163][cid_120].transport = D.45571_166;
    Indirect ref write is not const/pure
  scanning: D.45543_167 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45572_168 = fields[3];
  scanning: D.47844_647 = strtol (D.45572_168, 0B, 10);
    checking flags for call: neihter
  scanning: D.45574_170 = (uint32_t) D.47844_647;
  scanning: engine_38->ice_in.cands[D.45543_167][cid_120].priority = D.45574_170;
    Indirect ref write is not const/pure
  scanning: D.45543_171 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_172 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45550_173 = fields[4];
  scanning: D.45575_174 = switch_core_perform_session_strdup (D.45466_172, D.45550_173, "src/switch_core_media.c", &__func__, 2596);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_171][cid_120].con_addr = D.45575_174;
    Indirect ref write is not const/pure
  scanning: D.45543_175 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45551_176 = fields[5];
  scanning: D.47847_648 = strtol (D.45551_176, 0B, 10);
    checking flags for call: neihter
  scanning: D.45577_178 = (short unsigned int) D.47847_648;
  scanning: engine_38->ice_in.cands[D.45543_175][cid_120].con_port = D.45577_178;
    Indirect ref write is not const/pure
  scanning: D.45578_182 = fields[j_10];
  scanning: D.45579_183 = strcasecmp (D.45578_182, "typ");
    checking flags for call: pure
  scanning: if (D.45579_183 == 0)
  scanning: D.45543_184 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_185 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45582_186 = j_10 + 1;
  scanning: D.45583_187 = fields[D.45582_186];
  scanning: D.45584_188 = switch_core_perform_session_strdup (D.45466_185, D.45583_187, "src/switch_core_media.c", &__func__, 2604);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_184][cid_120].cand_type = D.45584_188;
    Indirect ref write is not const/pure
  scanning: D.45578_189 = fields[j_10];
  scanning: D.45586_190 = strcasecmp (D.45578_189, "raddr");
    checking flags for call: pure
  scanning: if (D.45586_190 == 0)
  scanning: D.45543_191 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_192 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45582_193 = j_10 + 1;
  scanning: D.45583_194 = fields[D.45582_193];
  scanning: D.45589_195 = switch_core_perform_session_strdup (D.45466_192, D.45583_194, "src/switch_core_media.c", &__func__, 2606);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_191][cid_120].raddr = D.45589_195;
    Indirect ref write is not const/pure
  scanning: D.45578_196 = fields[j_10];
  scanning: D.45591_197 = strcasecmp (D.45578_196, "rport");
    checking flags for call: pure
  scanning: if (D.45591_197 == 0)
  scanning: D.45543_198 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45582_199 = j_10 + 1;
  scanning: D.45583_200 = fields[D.45582_199];
  scanning: D.47850_649 = strtol (D.45583_200, 0B, 10);
    checking flags for call: neihter
  scanning: D.45595_202 = (short unsigned int) D.47850_649;
  scanning: engine_38->ice_in.cands[D.45543_198][cid_120].rport = D.45595_202;
    Indirect ref write is not const/pure
  scanning: D.45578_203 = fields[j_10];
  scanning: D.45597_204 = strcasecmp (D.45578_203, "generation");
    checking flags for call: pure
  scanning: if (D.45597_204 == 0)
  scanning: D.45543_205 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: D.45466_206 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45582_207 = j_10 + 1;
  scanning: D.45583_208 = fields[D.45582_207];
  scanning: D.45600_209 = switch_core_perform_session_strdup (D.45466_206, D.45583_208, "src/switch_core_media.c", &__func__, 2610);
    checking flags for call: neihter
  scanning: engine_38->ice_in.cands[D.45543_205][cid_120].generation = D.45600_209;
    Indirect ref write is not const/pure
  scanning: j_210 = j_10 + 2;
  scanning: if (j_10 < argc_116)
  scanning: D.45582_180 = j_10 + 1;
  scanning: D.45583_181 = fields[D.45582_180];
  scanning: if (D.45583_181 != 0B)
  scanning: D.45555_211 = engine_38->ice_in.chosen[cid_120];
    Indirect ref read is not const
  scanning: if (D.45555_211 != 0)
  scanning: D.45555_212 = engine_38->ice_in.chosen[cid_120];
    Indirect ref read is not const
  scanning: D.45604_213 = engine_38->ice_in.cands[D.45555_212][cid_120].ready;
    Indirect ref read is not const
  scanning: D.45605_214 = D.45604_213 + 1;
  scanning: engine_38->ice_in.cands[D.45555_212][cid_120].ready = D.45605_214;
    Indirect ref write is not const/pure
  scanning: attr_216 = attr_1->a_next;
    Indirect ref read is not const
  scanning: if (attr_1 != 0B)
  scanning: D.45460_217 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_217 == 0)
  scanning: D.45463_218 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_218 == 0)
  scanning: D.45460_223 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_223 == 0)
  scanning: D.45610_224 = engine_38->ice_in.cands[i_3][0].component_id;
    Indirect ref read is not const
  scanning: if (D.45610_224 == 1)
  scanning: D.45613_225 = engine_38->ice_in.cands[i_3][0].rport;
    Indirect ref read is not const
  scanning: if (D.45613_225 == 0)
  scanning: D.45616_226 = engine_38->ice_in.cands[i_3][0].con_addr;
    Indirect ref read is not const
  scanning: D.45617_227 = switch_check_network_list_ip_token (D.45616_226, "localnet.auto", 0B);
    checking flags for call: neihter
  scanning: if (D.45617_227 != 0)
  scanning: engine_38->ice_in.chosen[0] = i_3;
    Indirect ref write is not const/pure
  scanning: D.45460_228 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45620_229 = engine_38->ice_in.cands[D.45460_228][0].ready;
    Indirect ref read is not const
  scanning: D.45621_230 = D.45620_229 + 1;
  scanning: engine_38->ice_in.cands[D.45460_228][0].ready = D.45621_230;
    Indirect ref write is not const/pure
  scanning: D.45466_231 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45466_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);
    checking flags for call: neihter
  scanning: D.45463_234 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_234 == 0)
  scanning: D.45628_235 = engine_38->ice_in.cands[i_3][1].component_id;
    Indirect ref read is not const
  scanning: if (D.45628_235 == 2)
  scanning: D.45631_236 = engine_38->ice_in.cands[i_3][1].rport;
    Indirect ref read is not const
  scanning: if (D.45631_236 == 0)
  scanning: D.45634_237 = engine_38->ice_in.cands[i_3][1].con_addr;
    Indirect ref read is not const
  scanning: D.45635_238 = switch_check_network_list_ip_token (D.45634_237, "localnet.auto", 0B);
    checking flags for call: neihter
  scanning: if (D.45635_238 != 0)
  scanning: engine_38->ice_in.chosen[1] = i_3;
    Indirect ref write is not const/pure
  scanning: D.45463_239 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45638_240 = engine_38->ice_in.cands[D.45463_239][1].ready;
    Indirect ref read is not const
  scanning: D.45639_241 = D.45638_240 + 1;
  scanning: engine_38->ice_in.cands[D.45463_239][1].ready = D.45639_241;
    Indirect ref write is not const/pure
  scanning: D.45466_242 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45466_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);
    checking flags for call: neihter
  scanning: i_245 = i_3 + 1;
  scanning: D.45543_220 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: if (D.45543_220 >= i_3)
  scanning: D.45460_221 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_221 == 0)
  scanning: D.45463_222 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_222 == 0)
  scanning: D.45460_246 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_246 == 0)
  scanning: D.45463_247 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_247 == 0)
  scanning: D.45460_252 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_252 == 0)
  scanning: D.45610_253 = engine_38->ice_in.cands[i_4][0].component_id;
    Indirect ref read is not const
  scanning: if (D.45610_253 == 1)
  scanning: D.45613_254 = engine_38->ice_in.cands[i_4][0].rport;
    Indirect ref read is not const
  scanning: if (D.45613_254 != 0)
  scanning: engine_38->ice_in.chosen[0] = i_4;
    Indirect ref write is not const/pure
  scanning: D.45460_255 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45620_256 = engine_38->ice_in.cands[D.45460_255][0].ready;
    Indirect ref read is not const
  scanning: D.45621_257 = D.45620_256 + 1;
  scanning: engine_38->ice_in.cands[D.45460_255][0].ready = D.45621_257;
    Indirect ref write is not const/pure
  scanning: D.45466_258 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45466_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);
    checking flags for call: neihter
  scanning: D.45463_261 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_261 == 0)
  scanning: D.45628_262 = engine_38->ice_in.cands[i_4][1].component_id;
    Indirect ref read is not const
  scanning: if (D.45628_262 == 2)
  scanning: D.45631_263 = engine_38->ice_in.cands[i_4][1].rport;
    Indirect ref read is not const
  scanning: if (D.45631_263 != 0)
  scanning: engine_38->ice_in.chosen[1] = i_4;
    Indirect ref write is not const/pure
  scanning: D.45463_264 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45638_265 = engine_38->ice_in.cands[D.45463_264][1].ready;
    Indirect ref read is not const
  scanning: D.45639_266 = D.45638_265 + 1;
  scanning: engine_38->ice_in.cands[D.45463_264][1].ready = D.45639_266;
    Indirect ref write is not const/pure
  scanning: D.45466_267 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45466_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);
    checking flags for call: neihter
  scanning: i_270 = i_4 + 1;
  scanning: D.45543_249 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: if (D.45543_249 >= i_4)
  scanning: D.45460_250 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_250 == 0)
  scanning: D.45463_251 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_251 == 0)
  scanning: D.45460_271 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_271 != 0)
  scanning: D.45463_272 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45672_273 = D.45463_272 == 0;
  scanning: D.45673_274 = got_rtcp_mux_8 != 0;
  scanning: D.45674_275 = D.45672_273 && D.45673_274;
  scanning: if (D.45674_275 != 0)
  scanning: D.45460_276 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: engine_38->ice_in.chosen[1] = D.45460_276;
    Indirect ref write is not const/pure
  scanning: D.45677_277 = &engine_38->ice_in.cands[0][0];
  scanning: D.45678_278 = (void * restrict) D.45677_277;
  scanning: D.45463_279 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45679_280 = (unsigned int) D.45463_279;
  scanning: D.45680_281 = D.45679_280 * 88;
  scanning: D.45681_282 = D.45680_281 + 44;
  scanning: D.45682_283 = D.45678_278 + D.45681_282;
  scanning: D.45677_284 = &engine_38->ice_in.cands[0][0];
  scanning: D.45683_285 = (const void * restrict) D.45677_284;
  scanning: D.45460_286 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45684_287 = (unsigned int) D.45460_286;
  scanning: D.45685_288 = D.45684_287 * 88;
  scanning: D.45686_289 = D.45683_285 + D.45685_288;
  scanning: memcpy (D.45682_283, D.45686_289, 44);
    checking flags for call: neihter
  scanning: D.45463_290 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45638_291 = engine_38->ice_in.cands[D.45463_290][1].ready;
    Indirect ref read is not const
  scanning: D.45639_292 = D.45638_291 + 1;
  scanning: engine_38->ice_in.cands[D.45463_290][1].ready = D.45639_292;
    Indirect ref write is not const/pure
  scanning: D.45466_293 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45463_296 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45691_297 = engine_38->ice_in.cands[D.45463_296][1].con_addr;
    Indirect ref read is not const
  scanning: D.45463_298 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_299 = engine_38->ice_in.cands[D.45463_298][1].con_port;
    Indirect ref read is not const
  scanning: D.45693_300 = (int) D.45692_299;
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45466_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45691_297, D.45693_300);
    checking flags for call: neihter
  scanning: D.45460_301 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_301 == 0)
  scanning: D.45463_302 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_302 == 0)
  scanning: D.45460_307 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_307 == 0)
  scanning: D.45610_308 = engine_38->ice_in.cands[i_5][0].component_id;
    Indirect ref read is not const
  scanning: if (D.45610_308 == 1)
  scanning: engine_38->ice_in.chosen[0] = i_5;
    Indirect ref write is not const/pure
  scanning: D.45460_309 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45620_310 = engine_38->ice_in.cands[D.45460_309][0].ready;
    Indirect ref read is not const
  scanning: D.45621_311 = D.45620_310 + 1;
  scanning: engine_38->ice_in.cands[D.45460_309][0].ready = D.45621_311;
    Indirect ref write is not const/pure
  scanning: D.45466_312 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45466_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);
    checking flags for call: neihter
  scanning: D.45463_315 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_315 == 0)
  scanning: D.45628_316 = engine_38->ice_in.cands[i_5][1].component_id;
    Indirect ref read is not const
  scanning: if (D.45628_316 == 2)
  scanning: engine_38->ice_in.chosen[1] = i_5;
    Indirect ref write is not const/pure
  scanning: D.45463_317 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45638_318 = engine_38->ice_in.cands[D.45463_317][1].ready;
    Indirect ref read is not const
  scanning: D.45639_319 = D.45638_318 + 1;
  scanning: engine_38->ice_in.cands[D.45463_317][1].ready = D.45639_319;
    Indirect ref write is not const/pure
  scanning: D.45466_320 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45466_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);
    checking flags for call: neihter
  scanning: i_323 = i_5 + 1;
  scanning: D.45543_304 = engine_38->ice_in.cand_idx;
    Indirect ref read is not const
  scanning: if (D.45543_304 >= i_5)
  scanning: D.45460_305 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: if (D.45460_305 == 0)
  scanning: D.45463_306 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: if (D.45463_306 == 0)
  scanning: D.45714_325 = engine_38->ice_in.chosen[i_6];
    Indirect ref read is not const
  scanning: D.45715_326 = engine_38->ice_in.cands[D.45714_325][i_6].ready;
    Indirect ref read is not const
  scanning: if (D.45715_326 != 0)
  scanning: D.45720_327 = engine_38->ice_in.ufrag;
    Indirect ref read is not const
  scanning: if (D.45720_327 == 0B)
  scanning: D.47854_650 = MEM[(const char *)D.45720_327];
    Indirect ref read is not const
  scanning: if (D.47854_650 == 0)
  scanning: if (D.47853_651 != 0)
  scanning: D.45723_329 = engine_38->ice_in.pwd;
    Indirect ref read is not const
  scanning: if (D.45723_329 == 0B)
  scanning: D.47858_652 = MEM[(const char *)D.45723_329];
    Indirect ref read is not const
  scanning: if (D.47858_652 == 0)
  scanning: if (D.47857_653 != 0)
  scanning: D.45714_331 = engine_38->ice_in.chosen[i_6];
    Indirect ref read is not const
  scanning: engine_38->ice_in.cands[D.45714_331][i_6].ready = 0;
    Indirect ref write is not const/pure
  scanning: i_332 = i_6 + 1;
  scanning: if (i_6 <= 1)
  scanning: D.45460_333 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_334 = engine_38->ice_in.cands[D.45460_333][0].con_addr;
    Indirect ref read is not const
  scanning: if (D.45725_334 != 0B)
  scanning: D.45460_335 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45728_336 = engine_38->ice_in.cands[D.45460_335][0].con_port;
    Indirect ref read is not const
  scanning: if (D.45728_336 != 0)
  scanning: tmp = "";
  scanning: D.45526_337 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45466_338 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45460_339 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_340 = engine_38->ice_in.cands[D.45460_339][0].con_addr;
    Indirect ref read is not const
  scanning: D.45731_341 = switch_core_perform_session_strdup (D.45466_338, D.45725_340, "src/switch_core_media.c", &__func__, 2709);
    checking flags for call: neihter
  scanning: D.45526_337->remote_sdp_ip = D.45731_341;
    Indirect ref write is not const/pure
  scanning: D.45466_342 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45460_345 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_346 = engine_38->ice_in.cands[D.45460_345][0].con_addr;
    Indirect ref read is not const
  scanning: D.45460_347 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45728_348 = engine_38->ice_in.cands[D.45460_347][0].con_port;
    Indirect ref read is not const
  scanning: D.45736_349 = (int) D.45728_348;
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45466_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45725_346, D.45736_349);
    checking flags for call: neihter
  scanning: D.45460_350 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45620_351 = engine_38->ice_in.cands[D.45460_350][0].ready;
    Indirect ref read is not const
  scanning: D.45621_352 = D.45620_351 + 1;
  scanning: engine_38->ice_in.cands[D.45460_350][0].ready = D.45621_352;
    Indirect ref write is not const/pure
  scanning: D.45460_353 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45728_354 = engine_38->ice_in.cands[D.45460_353][0].con_port;
    Indirect ref read is not const
  scanning: engine_38->remote_rtp_ice_port = D.45728_354;
    Indirect ref write is not const/pure
  scanning: D.45466_355 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45460_356 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_357 = engine_38->ice_in.cands[D.45460_356][0].con_addr;
    Indirect ref read is not const
  scanning: D.45737_358 = switch_core_perform_session_strdup (D.45466_355, D.45725_357, "src/switch_core_media.c", &__func__, 2716);
    checking flags for call: neihter
  scanning: engine_38->remote_rtp_ice_addr = D.45737_358;
    Indirect ref write is not const/pure
  scanning: D.45526_359 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45466_360 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45460_361 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_362 = engine_38->ice_in.cands[D.45460_361][0].con_addr;
    Indirect ref read is not const
  scanning: D.45738_363 = switch_core_perform_session_strdup (D.45466_360, D.45725_362, "src/switch_core_media.c", &__func__, 2718);
    checking flags for call: neihter
  scanning: D.45526_359->remote_sdp_ip = D.45738_363;
    Indirect ref write is not const/pure
  scanning: D.45526_364 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45460_365 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45728_366 = engine_38->ice_in.cands[D.45460_365][0].con_port;
    Indirect ref read is not const
  scanning: D.45526_364->remote_sdp_port = D.45728_366;
    Indirect ref write is not const/pure
  scanning: D.45739_367 = engine_38->remote_rtcp_port;
    Indirect ref read is not const
  scanning: if (D.45739_367 != 0)
  scanning: D.45526_368 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45527_369 = D.45526_368->remote_sdp_port;
    Indirect ref read is not const
  scanning: engine_38->remote_rtcp_port = D.45527_369;
    Indirect ref write is not const/pure
  scanning: D.45526_370 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45527_371 = D.45526_370->remote_sdp_port;
    Indirect ref read is not const
  scanning: D.45742_372 = (int) D.45527_371;
  scanning: switch_snprintf (&tmp, 80, "%d", D.45742_372);
    checking flags for call: neihter
  scanning: D.45466_373 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_374 = D.45466_373->channel;
    Indirect ref read is not const
  scanning: D.45526_375 = engine_38->cur_payload_map;
    Indirect ref read is not const
  scanning: D.45743_376 = D.45526_375->remote_sdp_ip;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.45467_374, "remote_media_ip", D.45743_376, 1);
    checking flags for call: neihter
  scanning: D.45466_377 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_378 = D.45466_377->channel;
    Indirect ref read is not const
  scanning: switch_channel_set_variable_var_check (D.45467_378, "remote_media_port", &tmp, 1);
    checking flags for call: neihter
  scanning: D.45463_379 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_380 = engine_38->ice_in.cands[D.45463_379][1].con_port;
    Indirect ref read is not const
  scanning: if (D.45692_380 != 0)
  scanning: D.45466_381 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45463_384 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45691_385 = engine_38->ice_in.cands[D.45463_384][1].con_addr;
    Indirect ref read is not const
  scanning: D.45463_386 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_387 = engine_38->ice_in.cands[D.45463_386][1].con_port;
    Indirect ref read is not const
  scanning: D.45693_388 = (int) D.45692_387;
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45466_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45691_385, D.45693_388);
    checking flags for call: neihter
  scanning: D.45463_389 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_390 = engine_38->ice_in.cands[D.45463_389][1].con_port;
    Indirect ref read is not const
  scanning: engine_38->remote_rtcp_ice_port = D.45692_390;
    Indirect ref write is not const/pure
  scanning: D.45466_391 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45463_392 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45691_393 = engine_38->ice_in.cands[D.45463_392][1].con_addr;
    Indirect ref read is not const
  scanning: D.45750_394 = switch_core_perform_session_strdup (D.45466_391, D.45691_393, "src/switch_core_media.c", &__func__, 2734);
    checking flags for call: neihter
  scanning: engine_38->remote_rtcp_ice_addr = D.45750_394;
    Indirect ref write is not const/pure
  scanning: D.45463_395 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_396 = engine_38->ice_in.cands[D.45463_395][1].con_port;
    Indirect ref read is not const
  scanning: engine_38->remote_rtcp_port = D.45692_396;
    Indirect ref write is not const/pure
  scanning: D.45751_397 = m_46(D) != 0B;
  scanning: D.45752_398 = got_rtcp_mux_8 == 0;
  scanning: D.45753_399 = D.45751_397 && D.45752_398;
  scanning: if (D.45753_399 != 0)
  scanning: engine_38->rtcp_mux = -1;
    Indirect ref write is not const/pure
  scanning: D.45466_400 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_401 = D.45466_400->channel;
    Indirect ref read is not const
  scanning: D.45756_402 = switch_channel_test_flag (D.45467_401, 103);
    checking flags for call: neihter
  scanning: if (D.45756_402 != 0)
  scanning: D.45518_403 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45759_404 = switch_rtp_ready (D.45518_403);
    checking flags for call: neihter
  scanning: if (D.45759_404 != 0)
  scanning: D.45460_405 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45620_406 = engine_38->ice_in.cands[D.45460_405][0].ready;
    Indirect ref read is not const
  scanning: if (D.45620_406 != 0)
  scanning: D.45466_407 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45466_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);
    checking flags for call: neihter
  scanning: D.45518_410 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45720_411 = engine_38->ice_in.ufrag;
    Indirect ref read is not const
  scanning: D.45768_412 = engine_38->ice_out.ufrag;
    Indirect ref read is not const
  scanning: D.45769_413 = engine_38->ice_out.pwd;
    Indirect ref read is not const
  scanning: D.45723_414 = engine_38->ice_in.pwd;
    Indirect ref read is not const
  scanning: D.45466_415 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45771_416 = switch_ice_direction (D.45466_415);
    checking flags for call: neihter
  scanning: if (D.45771_416 == 1)
  scanning: D.45775_419 = &engine_38->ice_in;
  scanning: switch_rtp_activate_ice (D.45518_410, D.45720_411, D.45768_412, D.45769_413, D.45723_414, 0, iftmp.117_25, D.45775_419);
    checking flags for call: neihter
  scanning: D.45518_420 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: if (D.45518_420 != 0B)
  scanning: D.45466_421 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_422 = D.45466_421->channel;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: val_425 = switch_channel_get_variable_dup (D.45467_422, iftmp.118_26, 1, -1);
    checking flags for call: neihter
  scanning: if (val_425 != 0B)
  scanning: if (type_36(D) == 1)
  scanning: D.45788_426 = smh_34(D)->mparams;
    Indirect ref read is not const
  scanning: val_427 = D.45788_426->rtcp_video_interval_msec;
    Indirect ref read is not const
  scanning: D.45788_428 = smh_34(D)->mparams;
    Indirect ref read is not const
  scanning: val_429 = D.45788_428->rtcp_audio_interval_msec;
    Indirect ref read is not const
  scanning: if (val_27 != 0B)
  scanning: D.45466_431 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45467_432 = D.45466_431->channel;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: rport_435 = switch_channel_get_variable_dup (D.45467_432, iftmp.120_28, 1, -1);
    checking flags for call: neihter
  scanning: remote_rtcp_port_436 = engine_38->remote_rtcp_port;
    Indirect ref read is not const
  scanning: D.45794_437 = remote_rtcp_port_436 == 0;
  scanning: D.45795_438 = rport_435 != 0B;
  scanning: D.45796_439 = D.45794_437 && D.45795_438;
  scanning: if (D.45796_439 != 0)
  scanning: D.47861_654 = strtol (rport_435, 0B, 10);
    checking flags for call: neihter
  scanning: remote_rtcp_port_441 = (switch_port_t) D.47861_654;
  scanning: D.45800_442 = strcasecmp (val_9, "passthru");
    checking flags for call: pure
  scanning: if (D.45800_442 == 0)
  scanning: D.45466_443 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45807_446 = (int) remote_rtcp_port_11;
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45466_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45807_446);
    checking flags for call: neihter
  scanning: D.45518_447 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45808_448 = engine_38->rtcp_mux;
    Indirect ref read is not const
  scanning: D.45809_449 = D.45808_448 > 0;
  scanning: switch_rtp_activate_rtcp (D.45518_447, -1, remote_rtcp_port_11, D.45809_449);
    checking flags for call: neihter
  scanning: interval_655 = strtol (val_9, 0B, 10);
    checking flags for call: neihter
  scanning: interval.122_451 = (unsigned int) interval_655;
  scanning: D.45812_452 = interval.122_451 + 4294967196;
  scanning: if (D.45812_452 > 499900)
  scanning: D.45466_453 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45466_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);
    checking flags for call: neihter
  scanning: D.45466_455 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: D.45807_458 = (int) remote_rtcp_port_11;
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45466_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45807_458);
    checking flags for call: neihter
  scanning: D.45518_459 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45808_460 = engine_38->rtcp_mux;
    Indirect ref read is not const
  scanning: D.45809_461 = D.45808_460 > 0;
  scanning: switch_rtp_activate_rtcp (D.45518_459, interval_12, remote_rtcp_port_11, D.45809_461);
    checking flags for call: neihter
  scanning: D.45463_462 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45638_463 = engine_38->ice_in.cands[D.45463_462][1].ready;
    Indirect ref read is not const
  scanning: if (D.45638_463 != 0)
  scanning: D.45808_464 = engine_38->rtcp_mux;
    Indirect ref read is not const
  scanning: if (D.45808_464 > 0)
  scanning: D.45463_465 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45691_466 = engine_38->ice_in.cands[D.45463_465][1].con_addr;
    Indirect ref read is not const
  scanning: D.45460_467 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45725_468 = engine_38->ice_in.cands[D.45460_467][0].con_addr;
    Indirect ref read is not const
  scanning: D.38904_469 = __builtin_strcmp (D.45691_466, D.45725_468);
    checking flags for call: pure
  scanning: if (D.38904_469 == 0)
  scanning: D.45463_470 = engine_38->ice_in.chosen[1];
    Indirect ref read is not const
  scanning: D.45692_471 = engine_38->ice_in.cands[D.45463_470][1].con_port;
    Indirect ref read is not const
  scanning: D.45460_472 = engine_38->ice_in.chosen[0];
    Indirect ref read is not const
  scanning: D.45728_473 = engine_38->ice_in.cands[D.45460_472][0].con_port;
    Indirect ref read is not const
  scanning: if (D.45692_471 == D.45728_473)
  scanning: D.45466_474 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45466_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);
    checking flags for call: neihter
  scanning: D.45466_477 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: if (type_36(D) == 1)
  scanning: switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45466_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);
    checking flags for call: neihter
  scanning: D.45518_480 = engine_38->rtp_session;
    Indirect ref read is not const
  scanning: D.45720_481 = engine_38->ice_in.ufrag;
    Indirect ref read is not const
  scanning: D.45768_482 = engine_38->ice_out.ufrag;
    Indirect ref read is not const
  scanning: D.45769_483 = engine_38->ice_out.pwd;
    Indirect ref read is not const
  scanning: D.45723_484 = engine_38->ice_in.pwd;
    Indirect ref read is not const
  scanning: D.45466_485 = smh_34(D)->session;
    Indirect ref read is not const
  scanning: D.45835_486 = switch_ice_direction (D.45466_485);
    checking flags for call: neihter
  scanning: if (D.45835_486 == 1)
  scanning: D.45775_489 = &engine_38->ice_in;
  scanning: switch_rtp_activate_ice (D.45518_480, D.45720_481, D.45768_482, D.45769_483, D.45723_484, 1, iftmp.126_33, D.45775_489);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: check_ice

;; Function check_ice

;; 
204 basic blocks, 325 edges, last basic block 204.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [50.0%]  (true,exec)
Successors:  4 [29.0%]  (true,exec) 5 [71.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [29.0%]  (true,exec)
Successors:  203 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

Basic block 5 (new, reachable)
Predecessors:  2 [50.0%]  (false,exec) 3 [71.0%]  (false,exec) 4 [61.0%]  (false,exec)
Successors:  6 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
Successors:  73 [100.0%]  (fallthru)

Basic block 8 (new, reachable)
Predecessors:  5 [15.0%]  (false,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  73 [91.0%]  (true,exec)
Successors:  12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (false,exec)
Successors:  12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [50.0%]  (false,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [50.0%]  (false,exec)
Successors:  15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 16 (new, reachable)
Predecessors:  14 [71.0%]  (false,exec)
Successors:  17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 18 (new, reachable)
Predecessors:  16 [71.0%]  (false,exec)
Successors:  19 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 20 (new, reachable)
Predecessors:  18 [50.0%]  (false,exec)
Successors:  21 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [29.0%]  (true,exec)
Successors:  22 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [50.0%]  (true,exec)
Successors:  23 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [50.0%]  (true,exec)
Successors:  26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (false,exec)
Successors:  26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [50.0%]  (false,exec)
Successors:  26 [100.0%]  (fallthru,exec)

Basic block 26 (new, reachable)
Predecessors:  23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
Successors:  27 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [29.0%]  (true,exec)
Successors:  28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [69.8%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 30 (new, reachable)
Predecessors:  20 [71.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [50.0%]  (false,exec) 26 [71.0%]  (false,exec)
Successors:  31 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [50.0%]  (true,exec)
Successors:  32 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [50.0%]  (true,exec)
Successors:  33 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [69.8%]  (true,exec)
Successors:  34 [85.0%]  (true,exec) 72 [15.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [85.0%]  (true,exec)
Successors:  35 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [29.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 36 (new, reachable)
Predecessors:  30 [50.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec)
Successors:  37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 38 (new, reachable)
Predecessors:  36 [50.0%]  (false,exec)
Successors:  39 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [29.0%]  (true,exec)
Successors:  40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [29.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
Successors:  42 [30.2%]  (true,exec) 43 [69.8%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [30.2%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  41 [69.8%]  (false,exec)
Successors:  45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [71.0%]  (false,exec)
Successors:  45 [71.0%]  (true,exec) 46 [29.0%]  (false,exec)

Basic block 45 (new, reachable)
Predecessors:  43 [29.0%]  (true,exec) 44 [71.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 46 (new, reachable)
Predecessors:  44 [29.0%]  (false,exec)
Successors:  48 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  48 [93.8%]  (true,exec)
Successors:  48 [100.0%]  (fallthru,dfs_back,exec)

Basic block 48 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
Successors:  47 [93.8%]  (true,exec) 49 [6.2%]  (false,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [6.2%]  (false,exec)
Successors:  50 [73.0%]  (true,exec) 72 [27.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [73.0%]  (true,exec)
Successors:  51 [29.0%]  (true,exec) 55 [71.0%]  (false,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [29.0%]  (true,exec)
Successors:  52 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [50.0%]  (true,exec)
Successors:  54 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [72.0%]  (false,exec)
Successors:  54 [100.0%]  (fallthru,exec)

Basic block 54 (new, reachable)
Predecessors:  52 [28.0%]  (true,exec) 53 [100.0%]  (fallthru,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  50 [71.0%]  (false,exec) 51 [50.0%]  (false,exec)
Successors:  57 [28.0%]  (true,exec) 56 [72.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [72.0%]  (false,exec)
Successors:  57 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  55 [28.0%]  (true,exec) 56 [100.0%]  (fallthru,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  54 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec)
Successors:  68 [100.0%]  (fallthru,exec)

Basic block 59 (new, reachable)
Predecessors:  69 [95.5%]  (true,exec)
Successors:  60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

Basic block 60 (new, reachable)
Predecessors:  59 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 61 (new, reachable)
Predecessors:  59 [71.0%]  (false,exec)
Successors:  62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

Basic block 62 (new, reachable)
Predecessors:  61 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 63 (new, reachable)
Predecessors:  61 [71.0%]  (false,exec)
Successors:  64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

Basic block 64 (new, reachable)
Predecessors:  63 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 65 (new, reachable)
Predecessors:  63 [71.0%]  (false,exec)
Successors:  66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

Basic block 66 (new, reachable)
Predecessors:  65 [29.0%]  (true,exec)
Successors:  67 [100.0%]  (fallthru,exec)

Basic block 67 (new, reachable)
Predecessors:  60 [100.0%]  (fallthru,exec) 62 [100.0%]  (fallthru,exec) 64 [100.0%]  (fallthru,exec) 65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
Successors:  68 [100.0%]  (fallthru,dfs_back,exec)

Basic block 68 (new, reachable)
Predecessors:  58 [100.0%]  (fallthru,exec) 67 [100.0%]  (fallthru,dfs_back,exec)
Successors:  69 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

Basic block 69 (new, reachable)
Predecessors:  68 [95.5%]  (true,exec)
Successors:  59 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

Basic block 70 (new, reachable)
Predecessors:  68 [4.5%]  (false,exec) 69 [4.5%]  (false,exec)
Successors:  71 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

Basic block 71 (new, reachable)
Predecessors:  70 [50.0%]  (true,exec)
Successors:  72 [100.0%]  (fallthru,exec)

Basic block 72 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 34 [71.0%]  (false,exec) 37 [100.0%]  (fallthru,exec) 38 [71.0%]  (false,exec) 42 [100.0%]  (fallthru,exec) 45 [100.0%]  (fallthru,exec) 71 [100.0%]  (fallthru,exec) 49 [27.0%]  (false,exec) 33 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec) 70 [50.0%]  (false,exec)
Successors:  73 [100.0%]  (fallthru,dfs_back,exec)

Basic block 73 (new)
Predecessors:  7 [100.0%]  (fallthru) 72 [100.0%]  (fallthru,dfs_back,exec)
Successors:  9 [91.0%]  (true,exec) 74 [9.0%]  (false,exec)

Basic block 74 (new, reachable)
Predecessors:  73 [9.0%]  (false,exec)
Successors:  76 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

Basic block 75 (new, reachable)
Predecessors:  74 [50.0%]  (false,exec)
Successors:  76 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

Basic block 76 (new, reachable)
Predecessors:  75 [50.0%]  (true,exec) 74 [50.0%]  (true,exec)
Successors:  92 [100.0%]  (fallthru)

Basic block 77 (new, reachable)
Predecessors:  93 [50.0%]  (true,exec) 94 [95.5%]  (true,exec)
Successors:  78 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 78 (new, reachable)
Predecessors:  77 [50.0%]  (true,exec)
Successors:  79 [28.0%]  (true,exec) 84 [72.0%]  (false,exec)

Basic block 79 (new, reachable)
Predecessors:  78 [28.0%]  (true,exec)
Successors:  80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

Basic block 80 (new, reachable)
Predecessors:  79 [29.0%]  (true,exec)
Successors:  81 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

Basic block 81 (new, reachable)
Predecessors:  80 [50.0%]  (true,exec)
Successors:  83 [28.0%]  (true,exec) 82 [72.0%]  (false,exec)

Basic block 82 (new, reachable)
Predecessors:  81 [72.0%]  (false,exec)
Successors:  83 [100.0%]  (fallthru,exec)

Basic block 83 (new, reachable)
Predecessors:  81 [28.0%]  (true,exec) 82 [100.0%]  (fallthru,exec)
Successors:  84 [100.0%]  (fallthru,exec)

Basic block 84 (new, reachable)
Predecessors:  77 [50.0%]  (false,exec) 78 [72.0%]  (false,exec) 79 [71.0%]  (false,exec) 80 [50.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
Successors:  85 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 85 (new, reachable)
Predecessors:  84 [50.0%]  (true,exec)
Successors:  86 [28.0%]  (true,exec) 91 [72.0%]  (false,exec)

Basic block 86 (new, reachable)
Predecessors:  85 [28.0%]  (true,exec)
Successors:  87 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

Basic block 87 (new, reachable)
Predecessors:  86 [29.0%]  (true,exec)
Successors:  88 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

Basic block 88 (new, reachable)
Predecessors:  87 [50.0%]  (true,exec)
Successors:  90 [28.0%]  (true,exec) 89 [72.0%]  (false,exec)

Basic block 89 (new, reachable)
Predecessors:  88 [72.0%]  (false,exec)
Successors:  90 [100.0%]  (fallthru,exec)

Basic block 90 (new, reachable)
Predecessors:  88 [28.0%]  (true,exec) 89 [100.0%]  (fallthru,exec)
Successors:  91 [100.0%]  (fallthru,exec)

Basic block 91 (new, reachable)
Predecessors:  84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
Successors:  92 [100.0%]  (fallthru,dfs_back,exec)

Basic block 92 (new)
Predecessors:  76 [100.0%]  (fallthru) 91 [100.0%]  (fallthru,dfs_back,exec)
Successors:  93 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

Basic block 93 (new, reachable)
Predecessors:  92 [95.5%]  (true,exec)
Successors:  77 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

Basic block 94 (new, reachable)
Predecessors:  93 [50.0%]  (false,exec)
Successors:  77 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

Basic block 95 (new, reachable)
Predecessors:  75 [50.0%]  (false,exec) 92 [4.5%]  (false,exec) 94 [4.5%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

Basic block 96 (new, reachable)
Predecessors:  95 [50.0%]  (false,exec)
Successors:  97 [50.0%]  (true,exec) 114 [50.0%]  (false,exec)

Basic block 97 (new, reachable)
Predecessors:  96 [50.0%]  (true,exec) 95 [50.0%]  (true,exec)
Successors:  111 [100.0%]  (fallthru)

Basic block 98 (new, reachable)
Predecessors:  112 [50.0%]  (true,exec) 113 [95.5%]  (true,exec)
Successors:  99 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

Basic block 99 (new, reachable)
Predecessors:  98 [50.0%]  (true,exec)
Successors:  100 [28.0%]  (true,exec) 104 [72.0%]  (false,exec)

Basic block 100 (new, reachable)
Predecessors:  99 [28.0%]  (true,exec)
Successors:  101 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

Basic block 101 (new, reachable)
Predecessors:  100 [50.0%]  (true,exec)
Successors:  103 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

Basic block 102 (new, reachable)
Predecessors:  101 [72.0%]  (false,exec)
Successors:  103 [100.0%]  (fallthru,exec)

Basic block 103 (new, reachable)
Predecessors:  101 [28.0%]  (true,exec) 102 [100.0%]  (fallthru,exec)
Successors:  104 [100.0%]  (fallthru,exec)

Basic block 104 (new, reachable)
Predecessors:  98 [50.0%]  (false,exec) 99 [72.0%]  (false,exec) 100 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
Successors:  105 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

Basic block 105 (new, reachable)
Predecessors:  104 [50.0%]  (true,exec)
Successors:  106 [28.0%]  (true,exec) 110 [72.0%]  (false,exec)

Basic block 106 (new, reachable)
Predecessors:  105 [28.0%]  (true,exec)
Successors:  107 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

Basic block 107 (new, reachable)
Predecessors:  106 [50.0%]  (true,exec)
Successors:  109 [28.0%]  (true,exec) 108 [72.0%]  (false,exec)

Basic block 108 (new, reachable)
Predecessors:  107 [72.0%]  (false,exec)
Successors:  109 [100.0%]  (fallthru,exec)

Basic block 109 (new, reachable)
Predecessors:  107 [28.0%]  (true,exec) 108 [100.0%]  (fallthru,exec)
Successors:  110 [100.0%]  (fallthru,exec)

Basic block 110 (new, reachable)
Predecessors:  104 [50.0%]  (false,exec) 105 [72.0%]  (false,exec) 106 [50.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
Successors:  111 [100.0%]  (fallthru,dfs_back,exec)

Basic block 111 (new)
Predecessors:  97 [100.0%]  (fallthru) 110 [100.0%]  (fallthru,dfs_back,exec)
Successors:  112 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

Basic block 112 (new, reachable)
Predecessors:  111 [95.5%]  (true,exec)
Successors:  98 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

Basic block 113 (new, reachable)
Predecessors:  112 [50.0%]  (false,exec)
Successors:  98 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

Basic block 114 (new, reachable)
Predecessors:  96 [50.0%]  (false,exec) 111 [4.5%]  (false,exec) 113 [4.5%]  (false,exec)
Successors:  115 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

Basic block 115 (new, reachable)
Predecessors:  114 [50.0%]  (true,exec)
Successors:  116 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

Basic block 116 (new, reachable)
Predecessors:  115 [29.0%]  (true,exec)
Successors:  118 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

Basic block 117 (new, reachable)
Predecessors:  116 [72.0%]  (false,exec)
Successors:  118 [100.0%]  (fallthru,exec)

Basic block 118 (new, reachable)
Predecessors:  116 [28.0%]  (true,exec) 117 [100.0%]  (fallthru,exec)
Successors:  119 [100.0%]  (fallthru,exec)

Basic block 119 (new, reachable)
Predecessors:  114 [50.0%]  (false,exec) 115 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
Successors:  121 [50.0%]  (true,exec) 120 [50.0%]  (false,exec)

Basic block 120 (new, reachable)
Predecessors:  119 [50.0%]  (false,exec)
Successors:  121 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

Basic block 121 (new, reachable)
Predecessors:  120 [50.0%]  (true,exec) 119 [50.0%]  (true,exec)
Successors:  133 [100.0%]  (fallthru)

Basic block 122 (new, reachable)
Predecessors:  135 [50.0%]  (true,exec) 136 [95.5%]  (true,exec)
Successors:  123 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

Basic block 123 (new, reachable)
Predecessors:  122 [50.0%]  (true,exec)
Successors:  124 [28.0%]  (true,exec) 127 [72.0%]  (false,exec)

Basic block 124 (new, reachable)
Predecessors:  123 [28.0%]  (true,exec)
Successors:  126 [28.0%]  (true,exec) 125 [72.0%]  (false,exec)

Basic block 125 (new, reachable)
Predecessors:  124 [72.0%]  (false,exec)
Successors:  126 [100.0%]  (fallthru,exec)

Basic block 126 (new, reachable)
Predecessors:  124 [28.0%]  (true,exec) 125 [100.0%]  (fallthru,exec)
Successors:  127 [100.0%]  (fallthru,exec)

Basic block 127 (new, reachable)
Predecessors:  122 [50.0%]  (false,exec) 123 [72.0%]  (false,exec) 126 [100.0%]  (fallthru,exec)
Successors:  128 [50.0%]  (true,exec) 132 [50.0%]  (false,exec)

Basic block 128 (new, reachable)
Predecessors:  127 [50.0%]  (true,exec)
Successors:  129 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

Basic block 129 (new, reachable)
Predecessors:  128 [28.0%]  (true,exec)
Successors:  131 [28.0%]  (true,exec) 130 [72.0%]  (false,exec)

Basic block 130 (new, reachable)
Predecessors:  129 [72.0%]  (false,exec)
Successors:  131 [100.0%]  (fallthru,exec)

Basic block 131 (new, reachable)
Predecessors:  129 [28.0%]  (true,exec) 130 [100.0%]  (fallthru,exec)
Successors:  132 [100.0%]  (fallthru,exec)

Basic block 132 (new, reachable)
Predecessors:  127 [50.0%]  (false,exec) 128 [72.0%]  (false,exec) 131 [100.0%]  (fallthru,exec)
Successors:  133 [100.0%]  (fallthru,dfs_back,exec)

Basic block 133 (new)
Predecessors:  121 [100.0%]  (fallthru) 132 [100.0%]  (fallthru,dfs_back,exec)
Successors:  135 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

Basic block 134 (new, reachable)
Predecessors:  133 [4.5%]  (false,exec) 136 [4.5%]  (false,exec) 120 [50.0%]  (false,exec)
Successors:  148 [100.0%]  (fallthru)

Basic block 135 (new, reachable)
Predecessors:  133 [95.5%]  (true,exec)
Successors:  122 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

Basic block 136 (new, reachable)
Predecessors:  135 [50.0%]  (false,exec)
Successors:  122 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

Basic block 137 (new, reachable)
Predecessors:  148 [66.7%]  (true,exec)
Successors:  138 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 138 (new, reachable)
Predecessors:  137 [50.0%]  (true,exec)
Successors:  141 [15.0%]  (true,exec) 139 [85.0%]  (false,exec)

Basic block 139 (new, reachable)
Predecessors:  138 [85.0%]  (false,exec)
Successors:  141 [50.0%]  (true,exec) 140 [50.0%]  (false,exec)

Basic block 140 (new, reachable)
Predecessors:  139 [50.0%]  (false,exec)
Successors:  141 [100.0%]  (fallthru,exec)

Basic block 141 (new, reachable)
Predecessors:  138 [15.0%]  (true,exec) 139 [50.0%]  (true,exec) 140 [100.0%]  (fallthru,exec)
Successors:  146 [50.0%]  (true,exec) 142 [50.0%]  (false,exec)

Basic block 142 (new, reachable)
Predecessors:  141 [50.0%]  (false,exec)
Successors:  145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

Basic block 143 (new, reachable)
Predecessors:  142 [85.0%]  (false,exec)
Successors:  145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

Basic block 144 (new, reachable)
Predecessors:  143 [50.0%]  (false,exec)
Successors:  145 [100.0%]  (fallthru,exec)

Basic block 145 (new, reachable)
Predecessors:  142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
Successors:  146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

Basic block 146 (new, reachable)
Predecessors:  141 [50.0%]  (true,exec) 145 [50.0%]  (true,exec)
Successors:  147 [100.0%]  (fallthru,exec)

Basic block 147 (new, reachable)
Predecessors:  137 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
Successors:  148 [100.0%]  (fallthru,dfs_back,exec)

Basic block 148 (new)
Predecessors:  134 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
Successors:  137 [66.7%]  (true,exec) 149 [33.3%]  (false,exec)

Basic block 149 (new, reachable)
Predecessors:  148 [33.3%]  (false,exec)
Successors:  150 [85.0%]  (true,exec) 156 [15.0%]  (false,exec)

Basic block 150 (new, reachable)
Predecessors:  149 [85.0%]  (true,exec)
Successors:  151 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

Basic block 151 (new, reachable)
Predecessors:  150 [29.0%]  (true,exec)
Successors:  153 [28.0%]  (true,exec) 152 [72.0%]  (false,exec)

Basic block 152 (new, reachable)
Predecessors:  151 [72.0%]  (false,exec)
Successors:  153 [100.0%]  (fallthru,exec)

Basic block 153 (new, reachable)
Predecessors:  151 [28.0%]  (true,exec) 152 [100.0%]  (fallthru,exec)
Successors:  154 [50.0%]  (true,exec) 155 [50.0%]  (false,exec)

Basic block 154 (new, reachable)
Predecessors:  153 [50.0%]  (true,exec)
Successors:  155 [100.0%]  (fallthru,exec)

Basic block 155 (new, reachable)
Predecessors:  153 [50.0%]  (false,exec) 154 [100.0%]  (fallthru,exec)
Successors:  156 [100.0%]  (fallthru,exec)

Basic block 156 (new, reachable)
Predecessors:  149 [15.0%]  (false,exec) 150 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
Successors:  157 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

Basic block 157 (new, reachable)
Predecessors:  156 [50.0%]  (true,exec)
Successors:  159 [28.0%]  (true,exec) 158 [72.0%]  (false,exec)

Basic block 158 (new, reachable)
Predecessors:  157 [72.0%]  (false,exec)
Successors:  159 [100.0%]  (fallthru,exec)

Basic block 159 (new, reachable)
Predecessors:  157 [28.0%]  (true,exec) 158 [100.0%]  (fallthru,exec)
Successors:  160 [100.0%]  (fallthru,exec)

Basic block 160 (new, reachable)
Predecessors:  156 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec)
Successors:  161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

Basic block 161 (new, reachable)
Predecessors:  160 [50.0%]  (true,exec)
Successors:  162 [100.0%]  (fallthru,exec)

Basic block 162 (new, reachable)
Predecessors:  160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
Successors:  163 [39.0%]  (true,exec) 203 [61.0%]  (false,exec)

Basic block 163 (new, reachable)
Predecessors:  162 [39.0%]  (true,exec)
Successors:  164 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 164 (new, reachable)
Predecessors:  163 [50.0%]  (true,exec)
Successors:  165 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

Basic block 165 (new, reachable)
Predecessors:  164 [50.0%]  (true,exec)
Successors:  167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

Basic block 166 (new, reachable)
Predecessors:  165 [72.0%]  (false,exec)
Successors:  167 [100.0%]  (fallthru,exec)

Basic block 167 (new, reachable)
Predecessors:  165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
Successors:  169 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

Basic block 168 (new, reachable)
Predecessors:  167 [72.0%]  (false,exec)
Successors:  169 [100.0%]  (fallthru,exec)

Basic block 169 (new, reachable)
Predecessors:  167 [28.0%]  (true,exec) 168 [100.0%]  (fallthru,exec)
Successors:  170 [100.0%]  (fallthru,exec)

Basic block 170 (new, reachable)
Predecessors:  163 [50.0%]  (false,exec) 164 [50.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
Successors:  171 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

Basic block 171 (new, reachable)
Predecessors:  170 [85.0%]  (true,exec)
Successors:  173 [28.0%]  (true,exec) 172 [72.0%]  (false,exec)

Basic block 172 (new, reachable)
Predecessors:  171 [72.0%]  (false,exec)
Successors:  173 [100.0%]  (fallthru,exec)

Basic block 173 (new, reachable)
Predecessors:  171 [28.0%]  (true,exec) 172 [100.0%]  (fallthru,exec)
Successors:  178 [85.0%]  (true,exec) 174 [15.0%]  (false,exec)

Basic block 174 (new, reachable)
Predecessors:  173 [15.0%]  (false,exec)
Successors:  175 [28.0%]  (true,exec) 176 [72.0%]  (false,exec)

Basic block 175 (new, reachable)
Predecessors:  174 [28.0%]  (true,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 176 (new, reachable)
Predecessors:  174 [72.0%]  (false,exec)
Successors:  177 [100.0%]  (fallthru,exec)

Basic block 177 (new, reachable)
Predecessors:  175 [100.0%]  (fallthru,exec) 176 [100.0%]  (fallthru,exec)
Successors:  178 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

Basic block 178 (new, reachable)
Predecessors:  173 [85.0%]  (true,exec) 177 [85.0%]  (true,exec)
Successors:  180 [28.0%]  (true,exec) 179 [72.0%]  (false,exec)

Basic block 179 (new, reachable)
Predecessors:  178 [72.0%]  (false,exec)
Successors:  180 [100.0%]  (fallthru,exec)

Basic block 180 (new, reachable)
Predecessors:  178 [28.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
Successors:  181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

Basic block 181 (new, reachable)
Predecessors:  180 [29.0%]  (true,exec)
Successors:  182 [100.0%]  (fallthru,exec)

Basic block 182 (new, reachable)
Predecessors:  180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
Successors:  183 [71.0%]  (true,exec) 186 [29.0%]  (false,exec)

Basic block 183 (new, reachable)
Predecessors:  182 [71.0%]  (true,exec)
Successors:  185 [28.0%]  (true,exec) 184 [72.0%]  (false,exec)

Basic block 184 (new, reachable)
Predecessors:  183 [72.0%]  (false,exec)
Successors:  185 [100.0%]  (fallthru,exec)

Basic block 185 (new, reachable)
Predecessors:  183 [28.0%]  (true,exec) 184 [100.0%]  (fallthru,exec)
Successors:  191 [100.0%]  (fallthru,exec)

Basic block 186 (new, reachable)
Predecessors:  182 [29.0%]  (false,exec)
Successors:  187 [29.0%]  (true,exec) 188 [71.0%]  (false,exec)

Basic block 187 (new, reachable)
Predecessors:  186 [29.0%]  (true,exec)
Successors:  188 [100.0%]  (fallthru,exec)

Basic block 188 (new, reachable)
Predecessors:  186 [71.0%]  (false,exec) 187 [100.0%]  (fallthru,exec)
Successors:  190 [28.0%]  (true,exec) 189 [72.0%]  (false,exec)

Basic block 189 (new, reachable)
Predecessors:  188 [72.0%]  (false,exec)
Successors:  190 [100.0%]  (fallthru,exec)

Basic block 190 (new, reachable)
Predecessors:  188 [28.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
Successors:  191 [100.0%]  (fallthru,exec)

Basic block 191 (new, reachable)
Predecessors:  170 [15.0%]  (false,exec) 177 [15.0%]  (false,exec) 185 [100.0%]  (fallthru,exec) 190 [100.0%]  (fallthru,exec)
Successors:  192 [61.0%]  (true,exec) 203 [39.0%]  (false,exec)

Basic block 192 (new, reachable)
Predecessors:  191 [61.0%]  (true,exec)
Successors:  193 [73.0%]  (true,exec) 198 [27.0%]  (false,exec)

Basic block 193 (new, reachable)
Predecessors:  192 [73.0%]  (true,exec)
Successors:  194 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

Basic block 194 (new, reachable)
Predecessors:  193 [50.0%]  (true,exec)
Successors:  195 [28.0%]  (true,exec) 198 [72.0%]  (false,exec)

Basic block 195 (new, reachable)
Predecessors:  194 [28.0%]  (true,exec)
Successors:  197 [19.9%]  (true,exec) 196 [80.1%]  (false,exec)

Basic block 196 (new, reachable)
Predecessors:  195 [80.1%]  (false,exec)
Successors:  197 [100.0%]  (fallthru,exec)

Basic block 197 (new, reachable)
Predecessors:  195 [19.9%]  (true,exec) 196 [100.0%]  (fallthru,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 198 (new, reachable)
Predecessors:  192 [27.0%]  (false,exec) 193 [50.0%]  (false,exec) 194 [72.0%]  (false,exec)
Successors:  200 [28.0%]  (true,exec) 199 [72.0%]  (false,exec)

Basic block 199 (new, reachable)
Predecessors:  198 [72.0%]  (false,exec)
Successors:  200 [100.0%]  (fallthru,exec)

Basic block 200 (new, reachable)
Predecessors:  198 [28.0%]  (true,exec) 199 [100.0%]  (fallthru,exec)
Successors:  202 [28.0%]  (true,exec) 201 [72.0%]  (false,exec)

Basic block 201 (new, reachable)
Predecessors:  200 [72.0%]  (false,exec)
Successors:  202 [100.0%]  (fallthru,exec)

Basic block 202 (new, reachable)
Predecessors:  200 [28.0%]  (true,exec) 201 [100.0%]  (fallthru,exec)
Successors:  203 [100.0%]  (fallthru,exec)

Basic block 203 (new, reachable)
Predecessors:  4 [39.0%]  (true,exec) 162 [61.0%]  (false,exec) 191 [39.0%]  (false,exec) 197 [100.0%]  (fallthru,exec) 202 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


check_ice (struct switch_media_handle_t * smh, switch_media_type_t type, struct sdp_session_t * sdp, struct sdp_media_t * m)
{
  int D.47861;
  const char D.47858;
  int D.47857;
  const char D.47854;
  int D.47853;
  int D.47850;
  int D.47847;
  long int D.47844;
  int D.47841;
  int D.47838;
  long int D.47835;
  const char D.47832;
  int D.47831;
  const char D.47828;
  int D.47827;
  int interval;
  switch_port_t remote_rtcp_port;
  const char * rport;
  char tmp[80];
  char * p;
  int cid;
  int j;
  int argc;
  char * fields[15];
  char * data;
  static const char __func__[10] = "check_ice";
  const char * val;
  int got_rtcp_mux;
  int i;
  struct sdp_attribute_t * attr;
  struct switch_rtp_engine_t * engine;
  switch_call_direction_t D.45835;
  switch_core_media_ice_type_t iftmp.126;
  char * iftmp.125;
  char * iftmp.124;
  int D.38904;
  char * iftmp.123;
  unsigned int D.45812;
  unsigned int interval.122;
  switch_bool_t D.45809;
  int8_t D.45808;
  int D.45807;
  char * iftmp.121;
  int D.45800;
  _Bool D.45796;
  _Bool D.45795;
  _Bool D.45794;
  char[27] * iftmp.120;
  struct switch_core_media_params_t * D.45788;
  char[25] * iftmp.118;
  struct ice_t * D.45775;
  switch_call_direction_t D.45771;
  switch_core_media_ice_type_t iftmp.117;
  char * D.45769;
  char * D.45768;
  char * iftmp.116;
  uint8_t D.45759;
  uint32_t D.45756;
  _Bool D.45753;
  _Bool D.45752;
  _Bool D.45751;
  char * D.45750;
  char * iftmp.115;
  char * D.45743;
  int D.45742;
  switch_port_t D.45739;
  char * D.45738;
  char * D.45737;
  int D.45736;
  char * iftmp.114;
  char * D.45731;
  switch_port_t D.45728;
  char * D.45725;
  char * D.45723;
  char * D.45720;
  uint8_t D.45715;
  int D.45714;
  char * iftmp.113;
  char * iftmp.112;
  int D.45693;
  switch_port_t D.45692;
  char * D.45691;
  char * iftmp.111;
  const void * restrict D.45686;
  unsigned int D.45685;
  unsigned int D.45684;
  const void * restrict D.45683;
  void * restrict D.45682;
  unsigned int D.45681;
  unsigned int D.45680;
  unsigned int D.45679;
  void * restrict D.45678;
  struct icand_t * D.45677;
  _Bool D.45674;
  _Bool D.45673;
  _Bool D.45672;
  char * iftmp.110;
  char * iftmp.109;
  char * iftmp.108;
  uint8_t D.45639;
  uint8_t D.45638;
  switch_bool_t D.45635;
  char * D.45634;
  switch_port_t D.45631;
  int D.45628;
  char * iftmp.107;
  uint8_t D.45621;
  uint8_t D.45620;
  switch_bool_t D.45617;
  char * D.45616;
  switch_port_t D.45613;
  int D.45610;
  uint8_t D.45605;
  uint8_t D.45604;
  char * D.45600;
  int D.45597;
  short unsigned int D.45595;
  int D.45591;
  char * D.45589;
  int D.45586;
  char * D.45584;
  char * D.45583;
  int D.45582;
  int D.45579;
  char * D.45578;
  short unsigned int D.45577;
  char * D.45575;
  uint32_t D.45574;
  char * D.45572;
  char * D.45571;
  char * D.45569;
  char * D.45568;
  char * iftmp.106;
  char * iftmp.105;
  switch_bool_t D.45558;
  char * D.45557;
  int D.45555;
  int D.45552;
  char * D.45551;
  char * D.45550;
  char * D.45549;
  char * D.45548;
  char * D.45546;
  char * D.45544;
  int D.45543;
  unsigned int D.45539;
  const char * D.45536;
  int D.45535;
  int D.45532;
  int D.45529;
  switch_port_t D.45527;
  struct payload_map_t * D.45526;
  int D.45523;
  struct switch_rtp_t * D.45518;
  unsigned int D.45517;
  int D.45513;
  uint32_t D.45511;
  char[192] * D.45508;
  char * D.45505;
  char * D.45504;
  int D.45500;
  int D.45498;
  int D.45496;
  char * D.45492;
  int D.45489;
  char * D.45487;
  int D.45484;
  char * D.45482;
  const char * D.45481;
  int D.45478;
  const char * D.45474;
  uint32_t D.45468;
  struct switch_channel_t * D.45467;
  struct switch_core_session_t * D.45466;
  int D.45463;
  int D.45460;

  # BLOCK 2 freq:940
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  engine_38 = &smh_34(D)->engines[type_36(D)]{lb: 0 sz: 11416};
  # DEBUG engine => engine_38
  # DEBUG i => 0
  # DEBUG got_rtcp_mux => 0
  D.45460_41 = engine_38->ice_in.chosen[0];
  if (D.45460_41 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;
  # SUCC: 3 [50.0%]  (true,exec) 5 [50.0%]  (false,exec)

  # BLOCK 3 freq:470
  # PRED: 2 [50.0%]  (true,exec)
  D.45463_42 = engine_38->ice_in.chosen[1];
  if (D.45463_42 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [29.0%]  (true,exec) 5 [71.0%]  (false,exec)

  # BLOCK 4 freq:136
  # PRED: 3 [29.0%]  (true,exec)
  D.45466_43 = smh_34(D)->session;
  D.45467_44 = D.45466_43->channel;
  D.45468_45 = switch_channel_test_flag (D.45467_44, 103);
  if (D.45468_45 == 0)
    goto <bb 203>;
  else
    goto <bb 5>;
  # SUCC: 203 [39.0%]  (true,exec) 5 [61.0%]  (false,exec)

  # BLOCK 5 freq:887
  # PRED: 2 [50.0%]  (false,exec) 3 [71.0%]  (false,exec) 4 [61.0%]  (false,exec)
  engine_38->ice_in.chosen[0] = 0;
  engine_38->ice_in.chosen[1] = 0;
  engine_38->ice_in.cand_idx = 0;
  if (m_46(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 8>;
  # SUCC: 6 [85.0%]  (true,exec) 8 [15.0%]  (false,exec)

  # BLOCK 6 freq:754
  # PRED: 5 [85.0%]  (true,exec)
  attr_47 = m_46(D)->m_attributes;
  # DEBUG attr => attr_47
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:887
  # PRED: 8 [100.0%]  (fallthru,exec) 6 [100.0%]  (fallthru,exec)
  # attr_417 = PHI <attr_49(8), attr_47(6)>
  # got_rtcp_mux_672 = PHI <0(8), 0(6)>
  goto <bb 73>;
  # SUCC: 73 [100.0%]  (fallthru)

  # BLOCK 8 freq:133
  # PRED: 5 [15.0%]  (false,exec)
  attr_49 = sdp_48(D)->sdp_attributes;
  # DEBUG attr => attr_49
  goto <bb 7>;
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:8964
  # PRED: 73 [91.0%]  (true,exec)
  # DEBUG argc => 0
  # DEBUG j => 0
  # DEBUG cid => 0
  D.45474_53 = attr_1->a_name;
  # DEBUG s => D.45474_53
  if (D.45474_53 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;
  # SUCC: 12 [15.0%]  (true,exec) 10 [85.0%]  (false,exec)

  # BLOCK 10 freq:7619
  # PRED: 9 [85.0%]  (false,exec)
  D.47828_640 = *D.45474_53;
  if (D.47828_640 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;
  # SUCC: 12 [50.0%]  (true,exec) 11 [50.0%]  (false,exec)

  # BLOCK 11 freq:3809
  # PRED: 10 [50.0%]  (false,exec)
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:8964
  # PRED: 9 [15.0%]  (true,exec) 10 [50.0%]  (true,exec) 11 [100.0%]  (fallthru,exec)
  # D.47827_641 = PHI <1(9), 1(10), 0(11)>
  if (D.47827_641 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [50.0%]  (true,exec) 14 [50.0%]  (false,exec)

  # BLOCK 13 freq:4482
  # PRED: 12 [50.0%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:4482
  # PRED: 12 [50.0%]  (false,exec)
  D.45474_55 = attr_1->a_name;
  D.45478_56 = strcasecmp (D.45474_55, "ice-ufrag");
  if (D.45478_56 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;
  # SUCC: 15 [29.0%]  (true,exec) 16 [71.0%]  (false,exec)

  # BLOCK 15 freq:1300
  # PRED: 14 [29.0%]  (true,exec)
  D.45466_57 = smh_34(D)->session;
  D.45481_58 = attr_1->a_value;
  D.45482_59 = switch_core_perform_session_strdup (D.45466_57, D.45481_58, "src/switch_core_media.c", &__func__, 2503);
  engine_38->ice_in.ufrag = D.45482_59;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 16 freq:3182
  # PRED: 14 [71.0%]  (false,exec)
  D.45474_60 = attr_1->a_name;
  D.45484_61 = strcasecmp (D.45474_60, "ice-pwd");
  if (D.45484_61 == 0)
    goto <bb 17>;
  else
    goto <bb 18>;
  # SUCC: 17 [29.0%]  (true,exec) 18 [71.0%]  (false,exec)

  # BLOCK 17 freq:923
  # PRED: 16 [29.0%]  (true,exec)
  D.45466_62 = smh_34(D)->session;
  D.45481_63 = attr_1->a_value;
  D.45487_64 = switch_core_perform_session_strdup (D.45466_62, D.45481_63, "src/switch_core_media.c", &__func__, 2505);
  engine_38->ice_in.pwd = D.45487_64;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 18 freq:2259
  # PRED: 16 [71.0%]  (false,exec)
  D.45474_65 = attr_1->a_name;
  D.45489_66 = strcasecmp (D.45474_65, "ice-options");
  if (D.45489_66 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 [50.0%]  (true,exec) 20 [50.0%]  (false,exec)

  # BLOCK 19 freq:1130
  # PRED: 18 [50.0%]  (true,exec)
  D.45466_67 = smh_34(D)->session;
  D.45481_68 = attr_1->a_value;
  D.45492_69 = switch_core_perform_session_strdup (D.45466_67, D.45481_68, "src/switch_core_media.c", &__func__, 2507);
  engine_38->ice_in.options = D.45492_69;
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 20 freq:1130
  # PRED: 18 [50.0%]  (false,exec)
  D.45496_70 = switch_rtp_has_dtls ();
  if (D.45496_70 != 0)
    goto <bb 21>;
  else
    goto <bb 30>;
  # SUCC: 21 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 21 freq:328
  # PRED: 20 [29.0%]  (true,exec)
  D.45466_71 = smh_34(D)->session;
  D.45498_72 = dtls_ok (D.45466_71);
  if (D.45498_72 != 0)
    goto <bb 22>;
  else
    goto <bb 30>;
  # SUCC: 22 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 22 freq:164
  # PRED: 21 [50.0%]  (true,exec)
  D.45474_73 = attr_1->a_name;
  D.45500_74 = strcasecmp (D.45474_73, "fingerprint");
  if (D.45500_74 == 0)
    goto <bb 23>;
  else
    goto <bb 30>;
  # SUCC: 23 [50.0%]  (true,exec) 30 [50.0%]  (false,exec)

  # BLOCK 23 freq:82
  # PRED: 22 [50.0%]  (true,exec)
  D.45481_75 = attr_1->a_value;
  # DEBUG s => D.45481_75
  if (D.45481_75 == 0B)
    goto <bb 26>;
  else
    goto <bb 24>;
  # SUCC: 26 [15.0%]  (true,exec) 24 [85.0%]  (false,exec)

  # BLOCK 24 freq:70
  # PRED: 23 [85.0%]  (false,exec)
  D.47832_642 = *D.45481_75;
  if (D.47832_642 == 0)
    goto <bb 26>;
  else
    goto <bb 25>;
  # SUCC: 26 [50.0%]  (true,exec) 25 [50.0%]  (false,exec)

  # BLOCK 25 freq:35
  # PRED: 24 [50.0%]  (false,exec)
  # SUCC: 26 [100.0%]  (fallthru,exec)

  # BLOCK 26 freq:82
  # PRED: 23 [15.0%]  (true,exec) 24 [50.0%]  (true,exec) 25 [100.0%]  (fallthru,exec)
  # D.47831_643 = PHI <1(23), 1(24), 0(25)>
  if (D.47831_643 == 0)
    goto <bb 27>;
  else
    goto <bb 30>;
  # SUCC: 27 [29.0%]  (true,exec) 30 [71.0%]  (false,exec)

  # BLOCK 27 freq:24
  # PRED: 26 [29.0%]  (true,exec)
  D.45466_77 = smh_34(D)->session;
  D.45481_78 = attr_1->a_value;
  D.45504_79 = switch_core_perform_session_strdup (D.45466_77, D.45481_78, "src/switch_core_media.c", &__func__, 2512);
  engine_38->remote_dtls_fingerprint.type = D.45504_79;
  D.45505_80 = engine_38->remote_dtls_fingerprint.type;
  p_81 = __builtin_strchr (D.45505_80, 32);
  # DEBUG p => p_81
  if (p_81 != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [69.8%]  (true,exec) 29 [30.2%]  (false,exec)

  # BLOCK 28 freq:17
  # PRED: 27 [69.8%]  (true,exec)
  *p_81 = 0;
  p_82 = p_81 + 1;
  # DEBUG p => p_82
  D.45508_83 = &engine_38->local_dtls_fingerprint.str;
  switch_copy_string (D.45508_83, p_82, 192);
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:24
  # PRED: 27 [30.2%]  (false,exec) 28 [100.0%]  (fallthru,exec)
  generate_local_fingerprint (smh_34(D), type_36(D));
  D.45466_84 = smh_34(D)->session;
  D.45467_85 = D.45466_84->channel;
  switch_channel_set_flag_value (D.45467_85, 109, 1);
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 30 freq:1106
  # PRED: 20 [71.0%]  (false,exec) 21 [50.0%]  (false,exec) 22 [50.0%]  (false,exec) 26 [71.0%]  (false,exec)
  D.45511_86 = engine_38->remote_ssrc;
  if (D.45511_86 == 0)
    goto <bb 31>;
  else
    goto <bb 36>;
  # SUCC: 31 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 31 freq:553
  # PRED: 30 [50.0%]  (true,exec)
  D.45474_87 = attr_1->a_name;
  D.45513_88 = strcasecmp (D.45474_87, "ssrc");
  if (D.45513_88 == 0)
    goto <bb 32>;
  else
    goto <bb 36>;
  # SUCC: 32 [50.0%]  (true,exec) 36 [50.0%]  (false,exec)

  # BLOCK 32 freq:276
  # PRED: 31 [50.0%]  (true,exec)
  D.45481_89 = attr_1->a_value;
  if (D.45481_89 != 0B)
    goto <bb 33>;
  else
    goto <bb 36>;
  # SUCC: 33 [69.8%]  (true,exec) 36 [30.2%]  (false,exec)

  # BLOCK 33 freq:193
  # PRED: 32 [69.8%]  (true,exec)
  D.45481_90 = attr_1->a_value;
  # DEBUG __nptr => D.45481_90
  D.47835_644 = strtol (D.45481_90, 0B, 10);
  D.45517_92 = (unsigned int) D.47835_644;
  engine_38->remote_ssrc = D.45517_92;
  D.45518_93 = engine_38->rtp_session;
  if (D.45518_93 != 0B)
    goto <bb 34>;
  else
    goto <bb 72>;
  # SUCC: 34 [85.0%]  (true,exec) 72 [15.0%]  (false,exec)

  # BLOCK 34 freq:164
  # PRED: 33 [85.0%]  (true,exec)
  D.45511_94 = engine_38->remote_ssrc;
  if (D.45511_94 != 0)
    goto <bb 35>;
  else
    goto <bb 72>;
  # SUCC: 35 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

  # BLOCK 35 freq:48
  # PRED: 34 [29.0%]  (true,exec)
  D.45518_95 = engine_38->rtp_session;
  D.45511_96 = engine_38->remote_ssrc;
  switch_rtp_set_remote_ssrc (D.45518_95, D.45511_96);
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 36 freq:913
  # PRED: 30 [50.0%]  (false,exec) 31 [50.0%]  (false,exec) 32 [30.2%]  (false,exec)
  D.45474_97 = attr_1->a_name;
  D.45523_98 = strcasecmp (D.45474_97, "rtcp-mux");
  if (D.45523_98 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
  # SUCC: 37 [50.0%]  (true,exec) 38 [50.0%]  (false,exec)

  # BLOCK 37 freq:456
  # PRED: 36 [50.0%]  (true,exec)
  engine_38->rtcp_mux = 1;
  D.45526_99 = engine_38->cur_payload_map;
  D.45527_100 = D.45526_99->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45527_100;
  got_rtcp_mux_101 = got_rtcp_mux_8 + 1;
  # DEBUG got_rtcp_mux => got_rtcp_mux_101
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 38 freq:456
  # PRED: 36 [50.0%]  (false,exec)
  D.45474_102 = attr_1->a_name;
  D.45529_103 = strcasecmp (D.45474_102, "candidate");
  if (D.45529_103 == 0)
    goto <bb 39>;
  else
    goto <bb 72>;
  # SUCC: 39 [29.0%]  (true,exec) 72 [71.0%]  (false,exec)

  # BLOCK 39 freq:132
  # PRED: 38 [29.0%]  (true,exec)
  D.45466_104 = smh_34(D)->session;
  D.45467_105 = D.45466_104->channel;
  switch_channel_set_flag_value (D.45467_105, 108, 1);
  D.45532_106 = engine_38->cand_acl_count;
  if (D.45532_106 == 0)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [29.0%]  (true,exec) 41 [71.0%]  (false,exec)

  # BLOCK 40 freq:38
  # PRED: 39 [29.0%]  (true,exec)
  D.45532_107 = engine_38->cand_acl_count;
  engine_38->cand_acl[D.45532_107] = "wan.auto";
  D.45535_108 = D.45532_107 + 1;
  engine_38->cand_acl_count = D.45535_108;
  D.45466_109 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2548, D.45466_109, 4, "NO candidate ACL defined, Defaulting to wan.auto\n");
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:132
  # PRED: 39 [71.0%]  (false,exec) 40 [100.0%]  (fallthru,exec)
  D.45481_110 = attr_1->a_value;
  D.45536_111 = switch_stristr (" udp ", D.45481_110);
  if (D.45536_111 == 0B)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [30.2%]  (true,exec) 43 [69.8%]  (false,exec)

  # BLOCK 42 freq:40
  # PRED: 41 [30.2%]  (true,exec)
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:92
  # PRED: 41 [69.8%]  (false,exec)
  D.45466_112 = smh_34(D)->session;
  D.45481_113 = attr_1->a_value;
  data_114 = switch_core_perform_session_strdup (D.45466_112, D.45481_113, "src/switch_core_media.c", &__func__, 2556);
  # DEBUG data => data_114
  D.45539_115 = switch_separate_string (data_114, 32, &fields, 15);
  argc_116 = (int) D.45539_115;
  # DEBUG argc => argc_116
  if (argc_116 <= 4)
    goto <bb 45>;
  else
    goto <bb 44>;
  # SUCC: 45 [29.0%]  (true,exec) 44 [71.0%]  (false,exec)

  # BLOCK 44 freq:66
  # PRED: 43 [71.0%]  (false,exec)
  D.45543_117 = engine_38->ice_in.cand_idx;
  if (D.45543_117 > 48)
    goto <bb 45>;
  else
    goto <bb 46>;
  # SUCC: 45 [71.0%]  (true,exec) 46 [29.0%]  (false,exec)

  # BLOCK 45 freq:73
  # PRED: 43 [29.0%]  (true,exec) 44 [71.0%]  (true,exec)
  D.45466_215 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2561, D.45466_215, 4, "Invalid data\n");
  // predicted unlikely by continue predictor.
  goto <bb 72>;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 46 freq:19
  # PRED: 44 [29.0%]  (false,exec)
  D.45544_118 = fields[1];
  # DEBUG __nptr => D.45544_118
  D.47838_645 = strtol (D.45544_118, 0B, 10);
  cid_120 = D.47838_645 + -1;
  # DEBUG cid => cid_120
  # DEBUG i => 0
  goto <bb 48>;
  # SUCC: 48 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:285
  # PRED: 48 [93.8%]  (true,exec)
  D.45466_122 = smh_34(D)->session;
  D.45546_123 = fields[i_2];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2569, D.45466_122, 101, "CAND %d [%s]\n", i_2, D.45546_123);
  i_124 = i_2 + 1;
  # DEBUG i => i_124
  # SUCC: 48 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 48 freq:304
  # PRED: 46 [100.0%]  (fallthru,exec) 47 [100.0%]  (fallthru,dfs_back,exec)
  # i_2 = PHI <0(46), i_124(47)>
  # DEBUG i => i_2
  if (i_2 < argc_116)
    goto <bb 47>;
  else
    goto <bb 49>;
  # SUCC: 47 [93.8%]  (true,exec) 49 [6.2%]  (false,exec)

  # BLOCK 49 freq:19
  # PRED: 48 [6.2%]  (false,exec)
  D.45466_125 = smh_34(D)->session;
  D.45548_127 = fields[2];
  D.45549_128 = fields[7];
  D.45550_129 = fields[4];
  D.45551_130 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2572, D.45466_125, 7, "Checking Candidate cid: %d proto: %s type: %s addr: %s:%s\n", D.47838_645, D.45548_127, D.45549_128, D.45550_129, D.45551_130);
  D.45543_131 = engine_38->ice_in.cand_idx;
  D.45552_132 = D.45543_131 + 1;
  engine_38->ice_in.cand_idx = D.45552_132;
  # DEBUG i => 0
  D.45532_134 = engine_38->cand_acl_count;
  if (D.45532_134 > 0)
    goto <bb 50>;
  else
    goto <bb 72>;
  # SUCC: 50 [73.0%]  (true,exec) 72 [27.0%]  (false,exec)

  # BLOCK 50 freq:14
  # PRED: 49 [73.0%]  (true,exec)
  D.45555_135 = engine_38->ice_in.chosen[cid_120];
  if (D.45555_135 == 0)
    goto <bb 51>;
  else
    goto <bb 55>;
  # SUCC: 51 [29.0%]  (true,exec) 55 [71.0%]  (false,exec)

  # BLOCK 51 freq:4
  # PRED: 50 [29.0%]  (true,exec)
  D.45550_136 = fields[4];
  D.45557_137 = engine_38->cand_acl[0];
  D.45558_138 = switch_check_network_list_ip_token (D.45550_136, D.45557_137, 0B);
  if (D.45558_138 != 0)
    goto <bb 52>;
  else
    goto <bb 55>;
  # SUCC: 52 [50.0%]  (true,exec) 55 [50.0%]  (false,exec)

  # BLOCK 52 freq:2
  # PRED: 51 [50.0%]  (true,exec)
  D.45543_139 = engine_38->ice_in.cand_idx;
  engine_38->ice_in.chosen[cid_120] = D.45543_139;
  D.45466_140 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 54>;
  else
    goto <bb 53>;
  # SUCC: 54 [28.0%]  (true,exec) 53 [72.0%]  (false,exec)

  # BLOCK 53 freq:1
  # PRED: 52 [72.0%]  (false,exec)
  # SUCC: 54 [100.0%]  (fallthru,exec)

  # BLOCK 54 freq:2
  # PRED: 52 [28.0%]  (true,exec) 53 [100.0%]  (fallthru,exec)
  # iftmp.105_13 = PHI <"video"(52), "audio"(53)>
  D.45548_144 = fields[2];
  D.45549_145 = fields[7];
  D.45550_146 = fields[4];
  D.45551_147 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2581, D.45466_140, 5, "Choose %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.105_13, D.47838_645, D.45548_144, D.45549_145, D.45550_146, D.45551_147);
  goto <bb 58>;
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:12
  # PRED: 50 [71.0%]  (false,exec) 51 [50.0%]  (false,exec)
  D.45466_148 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 57>;
  else
    goto <bb 56>;
  # SUCC: 57 [28.0%]  (true,exec) 56 [72.0%]  (false,exec)

  # BLOCK 56 freq:9
  # PRED: 55 [72.0%]  (false,exec)
  # SUCC: 57 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:12
  # PRED: 55 [28.0%]  (true,exec) 56 [100.0%]  (fallthru,exec)
  # iftmp.106_14 = PHI <"video"(55), "audio"(56)>
  D.45548_152 = fields[2];
  D.45549_153 = fields[7];
  D.45550_154 = fields[4];
  D.45551_155 = fields[5];
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2586, D.45466_148, 5, "Save %s Candidate cid: %d proto: %s type: %s addr: %s:%s\n", iftmp.106_14, D.47838_645, D.45548_152, D.45549_153, D.45550_154, D.45551_155);
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:14
  # PRED: 54 [100.0%]  (fallthru,exec) 57 [100.0%]  (fallthru,exec)
  D.45543_156 = engine_38->ice_in.cand_idx;
  D.45466_157 = smh_34(D)->session;
  D.45568_158 = fields[0];
  D.45569_159 = switch_core_perform_session_strdup (D.45466_157, D.45568_158, "src/switch_core_media.c", &__func__, 2592);
  engine_38->ice_in.cands[D.45543_156][cid_120].foundation = D.45569_159;
  D.45543_160 = engine_38->ice_in.cand_idx;
  D.45544_161 = fields[1];
  # DEBUG __nptr => D.45544_161
  D.47841_646 = strtol (D.45544_161, 0B, 10);
  engine_38->ice_in.cands[D.45543_160][cid_120].component_id = D.47841_646;
  D.45543_163 = engine_38->ice_in.cand_idx;
  D.45466_164 = smh_34(D)->session;
  D.45548_165 = fields[2];
  D.45571_166 = switch_core_perform_session_strdup (D.45466_164, D.45548_165, "src/switch_core_media.c", &__func__, 2594);
  engine_38->ice_in.cands[D.45543_163][cid_120].transport = D.45571_166;
  D.45543_167 = engine_38->ice_in.cand_idx;
  D.45572_168 = fields[3];
  # DEBUG __nptr => D.45572_168
  D.47844_647 = strtol (D.45572_168, 0B, 10);
  D.45574_170 = (uint32_t) D.47844_647;
  engine_38->ice_in.cands[D.45543_167][cid_120].priority = D.45574_170;
  D.45543_171 = engine_38->ice_in.cand_idx;
  D.45466_172 = smh_34(D)->session;
  D.45550_173 = fields[4];
  D.45575_174 = switch_core_perform_session_strdup (D.45466_172, D.45550_173, "src/switch_core_media.c", &__func__, 2596);
  engine_38->ice_in.cands[D.45543_171][cid_120].con_addr = D.45575_174;
  D.45543_175 = engine_38->ice_in.cand_idx;
  D.45551_176 = fields[5];
  # DEBUG __nptr => D.45551_176
  D.47847_648 = strtol (D.45551_176, 0B, 10);
  D.45577_178 = (short unsigned int) D.47847_648;
  engine_38->ice_in.cands[D.45543_175][cid_120].con_port = D.45577_178;
  # DEBUG j => 6
  goto <bb 68>;
  # SUCC: 68 [100.0%]  (fallthru,exec)

  # BLOCK 59 freq:144
  # PRED: 69 [95.5%]  (true,exec)
  D.45578_182 = fields[j_10];
  D.45579_183 = strcasecmp (D.45578_182, "typ");
  if (D.45579_183 == 0)
    goto <bb 60>;
  else
    goto <bb 61>;
  # SUCC: 60 [29.0%]  (true,exec) 61 [71.0%]  (false,exec)

  # BLOCK 60 freq:42
  # PRED: 59 [29.0%]  (true,exec)
  D.45543_184 = engine_38->ice_in.cand_idx;
  D.45466_185 = smh_34(D)->session;
  D.45582_186 = j_10 + 1;
  D.45583_187 = fields[D.45582_186];
  D.45584_188 = switch_core_perform_session_strdup (D.45466_185, D.45583_187, "src/switch_core_media.c", &__func__, 2604);
  engine_38->ice_in.cands[D.45543_184][cid_120].cand_type = D.45584_188;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 61 freq:102
  # PRED: 59 [71.0%]  (false,exec)
  D.45578_189 = fields[j_10];
  D.45586_190 = strcasecmp (D.45578_189, "raddr");
  if (D.45586_190 == 0)
    goto <bb 62>;
  else
    goto <bb 63>;
  # SUCC: 62 [29.0%]  (true,exec) 63 [71.0%]  (false,exec)

  # BLOCK 62 freq:30
  # PRED: 61 [29.0%]  (true,exec)
  D.45543_191 = engine_38->ice_in.cand_idx;
  D.45466_192 = smh_34(D)->session;
  D.45582_193 = j_10 + 1;
  D.45583_194 = fields[D.45582_193];
  D.45589_195 = switch_core_perform_session_strdup (D.45466_192, D.45583_194, "src/switch_core_media.c", &__func__, 2606);
  engine_38->ice_in.cands[D.45543_191][cid_120].raddr = D.45589_195;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 63 freq:73
  # PRED: 61 [71.0%]  (false,exec)
  D.45578_196 = fields[j_10];
  D.45591_197 = strcasecmp (D.45578_196, "rport");
  if (D.45591_197 == 0)
    goto <bb 64>;
  else
    goto <bb 65>;
  # SUCC: 64 [29.0%]  (true,exec) 65 [71.0%]  (false,exec)

  # BLOCK 64 freq:21
  # PRED: 63 [29.0%]  (true,exec)
  D.45543_198 = engine_38->ice_in.cand_idx;
  D.45582_199 = j_10 + 1;
  D.45583_200 = fields[D.45582_199];
  # DEBUG __nptr => D.45583_200
  D.47850_649 = strtol (D.45583_200, 0B, 10);
  D.45595_202 = (short unsigned int) D.47850_649;
  engine_38->ice_in.cands[D.45543_198][cid_120].rport = D.45595_202;
  goto <bb 67>;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 65 freq:52
  # PRED: 63 [71.0%]  (false,exec)
  D.45578_203 = fields[j_10];
  D.45597_204 = strcasecmp (D.45578_203, "generation");
  if (D.45597_204 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;
  # SUCC: 66 [29.0%]  (true,exec) 67 [71.0%]  (false,exec)

  # BLOCK 66 freq:15
  # PRED: 65 [29.0%]  (true,exec)
  D.45543_205 = engine_38->ice_in.cand_idx;
  D.45466_206 = smh_34(D)->session;
  D.45582_207 = j_10 + 1;
  D.45583_208 = fields[D.45582_207];
  D.45600_209 = switch_core_perform_session_strdup (D.45466_206, D.45583_208, "src/switch_core_media.c", &__func__, 2610);
  engine_38->ice_in.cands[D.45543_205][cid_120].generation = D.45600_209;
  # SUCC: 67 [100.0%]  (fallthru,exec)

  # BLOCK 67 freq:144
  # PRED: 60 [100.0%]  (fallthru,exec) 62 [100.0%]  (fallthru,exec) 64 [100.0%]  (fallthru,exec) 65 [71.0%]  (false,exec) 66 [100.0%]  (fallthru,exec)
  j_210 = j_10 + 2;
  # DEBUG j => j_210
  # SUCC: 68 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 68 freq:158
  # PRED: 58 [100.0%]  (fallthru,exec) 67 [100.0%]  (fallthru,dfs_back,exec)
  # j_10 = PHI <6(58), j_210(67)>
  # DEBUG j => j_10
  if (j_10 < argc_116)
    goto <bb 69>;
  else
    goto <bb 70>;
  # SUCC: 69 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

  # BLOCK 69 freq:151
  # PRED: 68 [95.5%]  (true,exec)
  D.45582_180 = j_10 + 1;
  D.45583_181 = fields[D.45582_180];
  if (D.45583_181 != 0B)
    goto <bb 59>;
  else
    goto <bb 70>;
  # SUCC: 59 [95.5%]  (true,exec) 70 [4.5%]  (false,exec)

  # BLOCK 70 freq:14
  # PRED: 68 [4.5%]  (false,exec) 69 [4.5%]  (false,exec)
  D.45555_211 = engine_38->ice_in.chosen[cid_120];
  if (D.45555_211 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;
  # SUCC: 71 [50.0%]  (true,exec) 72 [50.0%]  (false,exec)

  # BLOCK 71 freq:7
  # PRED: 70 [50.0%]  (true,exec)
  D.45555_212 = engine_38->ice_in.chosen[cid_120];
  D.45604_213 = engine_38->ice_in.cands[D.45555_212][cid_120].ready;
  D.45605_214 = D.45604_213 + 1;
  engine_38->ice_in.cands[D.45555_212][cid_120].ready = D.45605_214;
  # SUCC: 72 [100.0%]  (fallthru,exec)

  # BLOCK 72 freq:8964
  # PRED: 13 [100.0%]  (fallthru,exec) 15 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,exec) 29 [100.0%]  (fallthru,exec) 34 [71.0%]  (false,exec) 37 [100.0%]  (fallthru,exec) 38 [71.0%]  (false,exec) 42 [100.0%]  (fallthru,exec) 45 [100.0%]  (fallthru,exec) 71 [100.0%]  (fallthru,exec) 49 [27.0%]  (false,exec) 33 [15.0%]  (false,exec) 35 [100.0%]  (fallthru,exec) 70 [50.0%]  (false,exec)
  # got_rtcp_mux_7 = PHI <got_rtcp_mux_8(13), got_rtcp_mux_8(15), got_rtcp_mux_8(17), got_rtcp_mux_8(19), got_rtcp_mux_8(29), got_rtcp_mux_8(34), got_rtcp_mux_101(37), got_rtcp_mux_8(38), got_rtcp_mux_8(42), got_rtcp_mux_8(45), got_rtcp_mux_8(71), got_rtcp_mux_8(49), got_rtcp_mux_8(33), got_rtcp_mux_8(35), got_rtcp_mux_8(70)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_7
  attr_216 = attr_1->a_next;
  # DEBUG attr => attr_216
  # SUCC: 73 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 73 freq:9850
  # PRED: 7 [100.0%]  (fallthru) 72 [100.0%]  (fallthru,dfs_back,exec)
  # attr_1 = PHI <attr_417(7), attr_216(72)>
  # got_rtcp_mux_8 = PHI <got_rtcp_mux_672(7), got_rtcp_mux_7(72)>
  # DEBUG got_rtcp_mux => got_rtcp_mux_8
  # DEBUG attr => attr_1
  if (attr_1 != 0B)
    goto <bb 9>;
  else
    goto <bb 74>;
  # SUCC: 9 [91.0%]  (true,exec) 74 [9.0%]  (false,exec)

  # BLOCK 74 freq:887
  # PRED: 73 [9.0%]  (false,exec)
  D.45460_217 = engine_38->ice_in.chosen[0];
  if (D.45460_217 == 0)
    goto <bb 76>;
  else
    goto <bb 75>;
  # SUCC: 76 [50.0%]  (true,exec) 75 [50.0%]  (false,exec)

  # BLOCK 75 freq:443
  # PRED: 74 [50.0%]  (false,exec)
  D.45463_218 = engine_38->ice_in.chosen[1];
  if (D.45463_218 == 0)
    goto <bb 76>;
  else
    goto <bb 95>;
  # SUCC: 76 [50.0%]  (true,exec) 95 [50.0%]  (false,exec)

  # BLOCK 76 freq:665
  # PRED: 75 [50.0%]  (true,exec) 74 [50.0%]  (true,exec)
  # i_440 = PHI <0(75), 0(74)>
  goto <bb 92>;
  # SUCC: 92 [100.0%]  (fallthru)

  # BLOCK 77 freq:9335
  # PRED: 93 [50.0%]  (true,exec) 94 [95.5%]  (true,exec)
  D.45460_223 = engine_38->ice_in.chosen[0];
  if (D.45460_223 == 0)
    goto <bb 78>;
  else
    goto <bb 84>;
  # SUCC: 78 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 78 freq:4668
  # PRED: 77 [50.0%]  (true,exec)
  D.45610_224 = engine_38->ice_in.cands[i_3][0].component_id;
  if (D.45610_224 == 1)
    goto <bb 79>;
  else
    goto <bb 84>;
  # SUCC: 79 [28.0%]  (true,exec) 84 [72.0%]  (false,exec)

  # BLOCK 79 freq:1307
  # PRED: 78 [28.0%]  (true,exec)
  D.45613_225 = engine_38->ice_in.cands[i_3][0].rport;
  if (D.45613_225 == 0)
    goto <bb 80>;
  else
    goto <bb 84>;
  # SUCC: 80 [29.0%]  (true,exec) 84 [71.0%]  (false,exec)

  # BLOCK 80 freq:379
  # PRED: 79 [29.0%]  (true,exec)
  D.45616_226 = engine_38->ice_in.cands[i_3][0].con_addr;
  D.45617_227 = switch_check_network_list_ip_token (D.45616_226, "localnet.auto", 0B);
  if (D.45617_227 != 0)
    goto <bb 81>;
  else
    goto <bb 84>;
  # SUCC: 81 [50.0%]  (true,exec) 84 [50.0%]  (false,exec)

  # BLOCK 81 freq:190
  # PRED: 80 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_3;
  D.45460_228 = engine_38->ice_in.chosen[0];
  D.45620_229 = engine_38->ice_in.cands[D.45460_228][0].ready;
  D.45621_230 = D.45620_229 + 1;
  engine_38->ice_in.cands[D.45460_228][0].ready = D.45621_230;
  D.45466_231 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 83>;
  else
    goto <bb 82>;
  # SUCC: 83 [28.0%]  (true,exec) 82 [72.0%]  (false,exec)

  # BLOCK 82 freq:136
  # PRED: 81 [72.0%]  (false,exec)
  # SUCC: 83 [100.0%]  (fallthru,exec)

  # BLOCK 83 freq:190
  # PRED: 81 [28.0%]  (true,exec) 82 [100.0%]  (fallthru,exec)
  # iftmp.107_15 = PHI <"video"(81), "audio"(82)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2636, D.45466_231, 5, "No %s RTP candidate found; defaulting to the first local one.\n", iftmp.107_15);
  # SUCC: 84 [100.0%]  (fallthru,exec)

  # BLOCK 84 freq:9335
  # PRED: 77 [50.0%]  (false,exec) 78 [72.0%]  (false,exec) 79 [71.0%]  (false,exec) 80 [50.0%]  (false,exec) 83 [100.0%]  (fallthru,exec)
  D.45463_234 = engine_38->ice_in.chosen[1];
  if (D.45463_234 == 0)
    goto <bb 85>;
  else
    goto <bb 91>;
  # SUCC: 85 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 85 freq:4668
  # PRED: 84 [50.0%]  (true,exec)
  D.45628_235 = engine_38->ice_in.cands[i_3][1].component_id;
  if (D.45628_235 == 2)
    goto <bb 86>;
  else
    goto <bb 91>;
  # SUCC: 86 [28.0%]  (true,exec) 91 [72.0%]  (false,exec)

  # BLOCK 86 freq:1307
  # PRED: 85 [28.0%]  (true,exec)
  D.45631_236 = engine_38->ice_in.cands[i_3][1].rport;
  if (D.45631_236 == 0)
    goto <bb 87>;
  else
    goto <bb 91>;
  # SUCC: 87 [29.0%]  (true,exec) 91 [71.0%]  (false,exec)

  # BLOCK 87 freq:379
  # PRED: 86 [29.0%]  (true,exec)
  D.45634_237 = engine_38->ice_in.cands[i_3][1].con_addr;
  D.45635_238 = switch_check_network_list_ip_token (D.45634_237, "localnet.auto", 0B);
  if (D.45635_238 != 0)
    goto <bb 88>;
  else
    goto <bb 91>;
  # SUCC: 88 [50.0%]  (true,exec) 91 [50.0%]  (false,exec)

  # BLOCK 88 freq:190
  # PRED: 87 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_3;
  D.45463_239 = engine_38->ice_in.chosen[1];
  D.45638_240 = engine_38->ice_in.cands[D.45463_239][1].ready;
  D.45639_241 = D.45638_240 + 1;
  engine_38->ice_in.cands[D.45463_239][1].ready = D.45639_241;
  D.45466_242 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 90>;
  else
    goto <bb 89>;
  # SUCC: 90 [28.0%]  (true,exec) 89 [72.0%]  (false,exec)

  # BLOCK 89 freq:136
  # PRED: 88 [72.0%]  (false,exec)
  # SUCC: 90 [100.0%]  (fallthru,exec)

  # BLOCK 90 freq:190
  # PRED: 88 [28.0%]  (true,exec) 89 [100.0%]  (fallthru,exec)
  # iftmp.108_16 = PHI <"video"(88), "audio"(89)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2643, D.45466_242, 5, "No %s RTCP candidate found; defaulting to the first local one.\n", iftmp.108_16);
  # SUCC: 91 [100.0%]  (fallthru,exec)

  # BLOCK 91 freq:9335
  # PRED: 84 [50.0%]  (false,exec) 85 [72.0%]  (false,exec) 86 [71.0%]  (false,exec) 87 [50.0%]  (false,exec) 90 [100.0%]  (fallthru,exec)
  i_245 = i_3 + 1;
  # DEBUG i => i_245
  # SUCC: 92 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 92 freq:10000
  # PRED: 76 [100.0%]  (fallthru) 91 [100.0%]  (fallthru,dfs_back,exec)
  # i_3 = PHI <i_440(76), i_245(91)>
  # DEBUG i => i_3
  D.45543_220 = engine_38->ice_in.cand_idx;
  if (D.45543_220 >= i_3)
    goto <bb 93>;
  else
    goto <bb 95>;
  # SUCC: 93 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

  # BLOCK 93 freq:9550
  # PRED: 92 [95.5%]  (true,exec)
  D.45460_221 = engine_38->ice_in.chosen[0];
  if (D.45460_221 == 0)
    goto <bb 77>;
  else
    goto <bb 94>;
  # SUCC: 77 [50.0%]  (true,exec) 94 [50.0%]  (false,exec)

  # BLOCK 94 freq:4775
  # PRED: 93 [50.0%]  (false,exec)
  D.45463_222 = engine_38->ice_in.chosen[1];
  if (D.45463_222 == 0)
    goto <bb 77>;
  else
    goto <bb 95>;
  # SUCC: 77 [95.5%]  (true,exec) 95 [4.5%]  (false,exec)

  # BLOCK 95 freq:887
  # PRED: 75 [50.0%]  (false,exec) 92 [4.5%]  (false,exec) 94 [4.5%]  (false,exec)
  D.45460_246 = engine_38->ice_in.chosen[0];
  if (D.45460_246 == 0)
    goto <bb 97>;
  else
    goto <bb 96>;
  # SUCC: 97 [50.0%]  (true,exec) 96 [50.0%]  (false,exec)

  # BLOCK 96 freq:443
  # PRED: 95 [50.0%]  (false,exec)
  D.45463_247 = engine_38->ice_in.chosen[1];
  if (D.45463_247 == 0)
    goto <bb 97>;
  else
    goto <bb 114>;
  # SUCC: 97 [50.0%]  (true,exec) 114 [50.0%]  (false,exec)

  # BLOCK 97 freq:665
  # PRED: 96 [50.0%]  (true,exec) 95 [50.0%]  (true,exec)
  # i_676 = PHI <0(96), 0(95)>
  goto <bb 111>;
  # SUCC: 111 [100.0%]  (fallthru)

  # BLOCK 98 freq:9335
  # PRED: 112 [50.0%]  (true,exec) 113 [95.5%]  (true,exec)
  D.45460_252 = engine_38->ice_in.chosen[0];
  if (D.45460_252 == 0)
    goto <bb 99>;
  else
    goto <bb 104>;
  # SUCC: 99 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

  # BLOCK 99 freq:4668
  # PRED: 98 [50.0%]  (true,exec)
  D.45610_253 = engine_38->ice_in.cands[i_4][0].component_id;
  if (D.45610_253 == 1)
    goto <bb 100>;
  else
    goto <bb 104>;
  # SUCC: 100 [28.0%]  (true,exec) 104 [72.0%]  (false,exec)

  # BLOCK 100 freq:1307
  # PRED: 99 [28.0%]  (true,exec)
  D.45613_254 = engine_38->ice_in.cands[i_4][0].rport;
  if (D.45613_254 != 0)
    goto <bb 101>;
  else
    goto <bb 104>;
  # SUCC: 101 [50.0%]  (true,exec) 104 [50.0%]  (false,exec)

  # BLOCK 101 freq:653
  # PRED: 100 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_4;
  D.45460_255 = engine_38->ice_in.chosen[0];
  D.45620_256 = engine_38->ice_in.cands[D.45460_255][0].ready;
  D.45621_257 = D.45620_256 + 1;
  engine_38->ice_in.cands[D.45460_255][0].ready = D.45621_257;
  D.45466_258 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 103>;
  else
    goto <bb 102>;
  # SUCC: 103 [28.0%]  (true,exec) 102 [72.0%]  (false,exec)

  # BLOCK 102 freq:470
  # PRED: 101 [72.0%]  (false,exec)
  # SUCC: 103 [100.0%]  (fallthru,exec)

  # BLOCK 103 freq:653
  # PRED: 101 [28.0%]  (true,exec) 102 [100.0%]  (fallthru,exec)
  # iftmp.109_17 = PHI <"video"(101), "audio"(102)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2655, D.45466_258, 5, "No %s RTP candidate found; defaulting to the first srflx one.\n", iftmp.109_17);
  # SUCC: 104 [100.0%]  (fallthru,exec)

  # BLOCK 104 freq:9335
  # PRED: 98 [50.0%]  (false,exec) 99 [72.0%]  (false,exec) 100 [50.0%]  (false,exec) 103 [100.0%]  (fallthru,exec)
  D.45463_261 = engine_38->ice_in.chosen[1];
  if (D.45463_261 == 0)
    goto <bb 105>;
  else
    goto <bb 110>;
  # SUCC: 105 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

  # BLOCK 105 freq:4668
  # PRED: 104 [50.0%]  (true,exec)
  D.45628_262 = engine_38->ice_in.cands[i_4][1].component_id;
  if (D.45628_262 == 2)
    goto <bb 106>;
  else
    goto <bb 110>;
  # SUCC: 106 [28.0%]  (true,exec) 110 [72.0%]  (false,exec)

  # BLOCK 106 freq:1307
  # PRED: 105 [28.0%]  (true,exec)
  D.45631_263 = engine_38->ice_in.cands[i_4][1].rport;
  if (D.45631_263 != 0)
    goto <bb 107>;
  else
    goto <bb 110>;
  # SUCC: 107 [50.0%]  (true,exec) 110 [50.0%]  (false,exec)

  # BLOCK 107 freq:653
  # PRED: 106 [50.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_4;
  D.45463_264 = engine_38->ice_in.chosen[1];
  D.45638_265 = engine_38->ice_in.cands[D.45463_264][1].ready;
  D.45639_266 = D.45638_265 + 1;
  engine_38->ice_in.cands[D.45463_264][1].ready = D.45639_266;
  D.45466_267 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 109>;
  else
    goto <bb 108>;
  # SUCC: 109 [28.0%]  (true,exec) 108 [72.0%]  (false,exec)

  # BLOCK 108 freq:470
  # PRED: 107 [72.0%]  (false,exec)
  # SUCC: 109 [100.0%]  (fallthru,exec)

  # BLOCK 109 freq:653
  # PRED: 107 [28.0%]  (true,exec) 108 [100.0%]  (fallthru,exec)
  # iftmp.110_18 = PHI <"video"(107), "audio"(108)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2661, D.45466_267, 5, "No %s RTCP candidate found; defaulting to the first srflx one.\n", iftmp.110_18);
  # SUCC: 110 [100.0%]  (fallthru,exec)

  # BLOCK 110 freq:9335
  # PRED: 104 [50.0%]  (false,exec) 105 [72.0%]  (false,exec) 106 [50.0%]  (false,exec) 109 [100.0%]  (fallthru,exec)
  i_270 = i_4 + 1;
  # DEBUG i => i_270
  # SUCC: 111 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 111 freq:10000
  # PRED: 97 [100.0%]  (fallthru) 110 [100.0%]  (fallthru,dfs_back,exec)
  # i_4 = PHI <i_676(97), i_270(110)>
  # DEBUG i => i_4
  D.45543_249 = engine_38->ice_in.cand_idx;
  if (D.45543_249 >= i_4)
    goto <bb 112>;
  else
    goto <bb 114>;
  # SUCC: 112 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

  # BLOCK 112 freq:9550
  # PRED: 111 [95.5%]  (true,exec)
  D.45460_250 = engine_38->ice_in.chosen[0];
  if (D.45460_250 == 0)
    goto <bb 98>;
  else
    goto <bb 113>;
  # SUCC: 98 [50.0%]  (true,exec) 113 [50.0%]  (false,exec)

  # BLOCK 113 freq:4775
  # PRED: 112 [50.0%]  (false,exec)
  D.45463_251 = engine_38->ice_in.chosen[1];
  if (D.45463_251 == 0)
    goto <bb 98>;
  else
    goto <bb 114>;
  # SUCC: 98 [95.5%]  (true,exec) 114 [4.5%]  (false,exec)

  # BLOCK 114 freq:886
  # PRED: 96 [50.0%]  (false,exec) 111 [4.5%]  (false,exec) 113 [4.5%]  (false,exec)
  D.45460_271 = engine_38->ice_in.chosen[0];
  if (D.45460_271 != 0)
    goto <bb 115>;
  else
    goto <bb 119>;
  # SUCC: 115 [50.0%]  (true,exec) 119 [50.0%]  (false,exec)

  # BLOCK 115 freq:443
  # PRED: 114 [50.0%]  (true,exec)
  D.45463_272 = engine_38->ice_in.chosen[1];
  D.45672_273 = D.45463_272 == 0;
  D.45673_274 = got_rtcp_mux_8 != 0;
  D.45674_275 = D.45672_273 && D.45673_274;
  if (D.45674_275 != 0)
    goto <bb 116>;
  else
    goto <bb 119>;
  # SUCC: 116 [29.0%]  (true,exec) 119 [71.0%]  (false,exec)

  # BLOCK 116 freq:129
  # PRED: 115 [29.0%]  (true,exec)
  D.45460_276 = engine_38->ice_in.chosen[0];
  engine_38->ice_in.chosen[1] = D.45460_276;
  D.45677_277 = &engine_38->ice_in.cands[0][0];
  D.45678_278 = (void * restrict) D.45677_277;
  D.45463_279 = engine_38->ice_in.chosen[1];
  D.45679_280 = (unsigned int) D.45463_279;
  D.45680_281 = D.45679_280 * 88;
  D.45681_282 = D.45680_281 + 44;
  D.45682_283 = D.45678_278 + D.45681_282;
  D.45677_284 = &engine_38->ice_in.cands[0][0];
  D.45683_285 = (const void * restrict) D.45677_284;
  D.45460_286 = engine_38->ice_in.chosen[0];
  D.45684_287 = (unsigned int) D.45460_286;
  D.45685_288 = D.45684_287 * 88;
  D.45686_289 = D.45683_285 + D.45685_288;
  memcpy (D.45682_283, D.45686_289, 44);
  D.45463_290 = engine_38->ice_in.chosen[1];
  D.45638_291 = engine_38->ice_in.cands[D.45463_290][1].ready;
  D.45639_292 = D.45638_291 + 1;
  engine_38->ice_in.cands[D.45463_290][1].ready = D.45639_292;
  D.45466_293 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 118>;
  else
    goto <bb 117>;
  # SUCC: 118 [28.0%]  (true,exec) 117 [72.0%]  (false,exec)

  # BLOCK 117 freq:93
  # PRED: 116 [72.0%]  (false,exec)
  # SUCC: 118 [100.0%]  (fallthru,exec)

  # BLOCK 118 freq:129
  # PRED: 116 [28.0%]  (true,exec) 117 [100.0%]  (fallthru,exec)
  # iftmp.111_19 = PHI <"video"(116), "audio"(117)>
  D.45463_296 = engine_38->ice_in.chosen[1];
  D.45691_297 = engine_38->ice_in.cands[D.45463_296][1].con_addr;
  D.45463_298 = engine_38->ice_in.chosen[1];
  D.45692_299 = engine_38->ice_in.cands[D.45463_298][1].con_port;
  D.45693_300 = (int) D.45692_299;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2675, D.45466_293, 5, "No %s RTCP candidate found; defaulting to the same as RTP [%s:%d]\n", iftmp.111_19, D.45691_297, D.45693_300);
  # SUCC: 119 [100.0%]  (fallthru,exec)

  # BLOCK 119 freq:886
  # PRED: 114 [50.0%]  (false,exec) 115 [71.0%]  (false,exec) 118 [100.0%]  (fallthru,exec)
  D.45460_301 = engine_38->ice_in.chosen[0];
  if (D.45460_301 == 0)
    goto <bb 121>;
  else
    goto <bb 120>;
  # SUCC: 121 [50.0%]  (true,exec) 120 [50.0%]  (false,exec)

  # BLOCK 120 freq:443
  # PRED: 119 [50.0%]  (false,exec)
  D.45463_302 = engine_38->ice_in.chosen[1];
  if (D.45463_302 == 0)
    goto <bb 121>;
  else
    goto <bb 134>;
  # SUCC: 121 [50.0%]  (true,exec) 134 [50.0%]  (false,exec)

  # BLOCK 121 freq:665
  # PRED: 120 [50.0%]  (true,exec) 119 [50.0%]  (true,exec)
  # i_487 = PHI <0(120), 0(119)>
  goto <bb 133>;
  # SUCC: 133 [100.0%]  (fallthru)

  # BLOCK 122 freq:9335
  # PRED: 135 [50.0%]  (true,exec) 136 [95.5%]  (true,exec)
  D.45460_307 = engine_38->ice_in.chosen[0];
  if (D.45460_307 == 0)
    goto <bb 123>;
  else
    goto <bb 127>;
  # SUCC: 123 [50.0%]  (true,exec) 127 [50.0%]  (false,exec)

  # BLOCK 123 freq:4668
  # PRED: 122 [50.0%]  (true,exec)
  D.45610_308 = engine_38->ice_in.cands[i_5][0].component_id;
  if (D.45610_308 == 1)
    goto <bb 124>;
  else
    goto <bb 127>;
  # SUCC: 124 [28.0%]  (true,exec) 127 [72.0%]  (false,exec)

  # BLOCK 124 freq:1307
  # PRED: 123 [28.0%]  (true,exec)
  engine_38->ice_in.chosen[0] = i_5;
  D.45460_309 = engine_38->ice_in.chosen[0];
  D.45620_310 = engine_38->ice_in.cands[D.45460_309][0].ready;
  D.45621_311 = D.45620_310 + 1;
  engine_38->ice_in.cands[D.45460_309][0].ready = D.45621_311;
  D.45466_312 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 126>;
  else
    goto <bb 125>;
  # SUCC: 126 [28.0%]  (true,exec) 125 [72.0%]  (false,exec)

  # BLOCK 125 freq:941
  # PRED: 124 [72.0%]  (false,exec)
  # SUCC: 126 [100.0%]  (fallthru,exec)

  # BLOCK 126 freq:1307
  # PRED: 124 [28.0%]  (true,exec) 125 [100.0%]  (fallthru,exec)
  # iftmp.112_20 = PHI <"video"(124), "audio"(125)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2686, D.45466_312, 5, "No %s RTP candidate found; defaulting to the first one.\n", iftmp.112_20);
  # SUCC: 127 [100.0%]  (fallthru,exec)

  # BLOCK 127 freq:9335
  # PRED: 122 [50.0%]  (false,exec) 123 [72.0%]  (false,exec) 126 [100.0%]  (fallthru,exec)
  D.45463_315 = engine_38->ice_in.chosen[1];
  if (D.45463_315 == 0)
    goto <bb 128>;
  else
    goto <bb 132>;
  # SUCC: 128 [50.0%]  (true,exec) 132 [50.0%]  (false,exec)

  # BLOCK 128 freq:4668
  # PRED: 127 [50.0%]  (true,exec)
  D.45628_316 = engine_38->ice_in.cands[i_5][1].component_id;
  if (D.45628_316 == 2)
    goto <bb 129>;
  else
    goto <bb 132>;
  # SUCC: 129 [28.0%]  (true,exec) 132 [72.0%]  (false,exec)

  # BLOCK 129 freq:1307
  # PRED: 128 [28.0%]  (true,exec)
  engine_38->ice_in.chosen[1] = i_5;
  D.45463_317 = engine_38->ice_in.chosen[1];
  D.45638_318 = engine_38->ice_in.cands[D.45463_317][1].ready;
  D.45639_319 = D.45638_318 + 1;
  engine_38->ice_in.cands[D.45463_317][1].ready = D.45639_319;
  D.45466_320 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 131>;
  else
    goto <bb 130>;
  # SUCC: 131 [28.0%]  (true,exec) 130 [72.0%]  (false,exec)

  # BLOCK 130 freq:941
  # PRED: 129 [72.0%]  (false,exec)
  # SUCC: 131 [100.0%]  (fallthru,exec)

  # BLOCK 131 freq:1307
  # PRED: 129 [28.0%]  (true,exec) 130 [100.0%]  (fallthru,exec)
  # iftmp.113_21 = PHI <"video"(129), "audio"(130)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2692, D.45466_320, 5, "No %s RTCP candidate found; defaulting to the first one.\n", iftmp.113_21);
  # SUCC: 132 [100.0%]  (fallthru,exec)

  # BLOCK 132 freq:9335
  # PRED: 127 [50.0%]  (false,exec) 128 [72.0%]  (false,exec) 131 [100.0%]  (fallthru,exec)
  i_323 = i_5 + 1;
  # DEBUG i => i_323
  # SUCC: 133 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 133 freq:10000
  # PRED: 121 [100.0%]  (fallthru) 132 [100.0%]  (fallthru,dfs_back,exec)
  # i_5 = PHI <i_487(121), i_323(132)>
  # DEBUG i => i_5
  D.45543_304 = engine_38->ice_in.cand_idx;
  if (D.45543_304 >= i_5)
    goto <bb 135>;
  else
    goto <bb 134>;
  # SUCC: 135 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

  # BLOCK 134 freq:886
  # PRED: 133 [4.5%]  (false,exec) 136 [4.5%]  (false,exec) 120 [50.0%]  (false,exec)
  # i_513 = PHI <0(133), 0(136), 0(120)>
  goto <bb 148>;
  # SUCC: 148 [100.0%]  (fallthru)

  # BLOCK 135 freq:9550
  # PRED: 133 [95.5%]  (true,exec)
  D.45460_305 = engine_38->ice_in.chosen[0];
  if (D.45460_305 == 0)
    goto <bb 122>;
  else
    goto <bb 136>;
  # SUCC: 122 [50.0%]  (true,exec) 136 [50.0%]  (false,exec)

  # BLOCK 136 freq:4775
  # PRED: 135 [50.0%]  (false,exec)
  D.45463_306 = engine_38->ice_in.chosen[1];
  if (D.45463_306 == 0)
    goto <bb 122>;
  else
    goto <bb 134>;
  # SUCC: 122 [95.5%]  (true,exec) 134 [4.5%]  (false,exec)

  # BLOCK 137 freq:1773
  # PRED: 148 [66.7%]  (true,exec)
  D.45714_325 = engine_38->ice_in.chosen[i_6];
  D.45715_326 = engine_38->ice_in.cands[D.45714_325][i_6].ready;
  if (D.45715_326 != 0)
    goto <bb 138>;
  else
    goto <bb 147>;
  # SUCC: 138 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 138 freq:887
  # PRED: 137 [50.0%]  (true,exec)
  D.45720_327 = engine_38->ice_in.ufrag;
  # DEBUG s => D.45720_327
  if (D.45720_327 == 0B)
    goto <bb 141>;
  else
    goto <bb 139>;
  # SUCC: 141 [15.0%]  (true,exec) 139 [85.0%]  (false,exec)

  # BLOCK 139 freq:754
  # PRED: 138 [85.0%]  (false,exec)
  D.47854_650 = MEM[(const char *)D.45720_327];
  if (D.47854_650 == 0)
    goto <bb 141>;
  else
    goto <bb 140>;
  # SUCC: 141 [50.0%]  (true,exec) 140 [50.0%]  (false,exec)

  # BLOCK 140 freq:377
  # PRED: 139 [50.0%]  (false,exec)
  # SUCC: 141 [100.0%]  (fallthru,exec)

  # BLOCK 141 freq:887
  # PRED: 138 [15.0%]  (true,exec) 139 [50.0%]  (true,exec) 140 [100.0%]  (fallthru,exec)
  # D.47853_651 = PHI <1(138), 1(139), 0(140)>
  if (D.47853_651 != 0)
    goto <bb 146>;
  else
    goto <bb 142>;
  # SUCC: 146 [50.0%]  (true,exec) 142 [50.0%]  (false,exec)

  # BLOCK 142 freq:443
  # PRED: 141 [50.0%]  (false,exec)
  D.45723_329 = engine_38->ice_in.pwd;
  # DEBUG s => D.45723_329
  if (D.45723_329 == 0B)
    goto <bb 145>;
  else
    goto <bb 143>;
  # SUCC: 145 [15.0%]  (true,exec) 143 [85.0%]  (false,exec)

  # BLOCK 143 freq:377
  # PRED: 142 [85.0%]  (false,exec)
  D.47858_652 = MEM[(const char *)D.45723_329];
  if (D.47858_652 == 0)
    goto <bb 145>;
  else
    goto <bb 144>;
  # SUCC: 145 [50.0%]  (true,exec) 144 [50.0%]  (false,exec)

  # BLOCK 144 freq:188
  # PRED: 143 [50.0%]  (false,exec)
  # SUCC: 145 [100.0%]  (fallthru,exec)

  # BLOCK 145 freq:443
  # PRED: 142 [15.0%]  (true,exec) 143 [50.0%]  (true,exec) 144 [100.0%]  (fallthru,exec)
  # D.47857_653 = PHI <1(142), 1(143), 0(144)>
  if (D.47857_653 != 0)
    goto <bb 146>;
  else
    goto <bb 147>;
  # SUCC: 146 [50.0%]  (true,exec) 147 [50.0%]  (false,exec)

  # BLOCK 146 freq:665
  # PRED: 141 [50.0%]  (true,exec) 145 [50.0%]  (true,exec)
  D.45714_331 = engine_38->ice_in.chosen[i_6];
  engine_38->ice_in.cands[D.45714_331][i_6].ready = 0;
  # SUCC: 147 [100.0%]  (fallthru,exec)

  # BLOCK 147 freq:1773
  # PRED: 137 [50.0%]  (false,exec) 145 [50.0%]  (false,exec) 146 [100.0%]  (fallthru,exec)
  i_332 = i_6 + 1;
  # DEBUG i => i_332
  # SUCC: 148 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 148 freq:2660
  # PRED: 134 [100.0%]  (fallthru) 147 [100.0%]  (fallthru,dfs_back,exec)
  # i_6 = PHI <i_513(134), i_332(147)>
  # DEBUG i => i_6
  if (i_6 <= 1)
    goto <bb 137>;
  else
    goto <bb 149>;
  # SUCC: 137 [66.7%]  (true,exec) 149 [33.3%]  (false,exec)

  # BLOCK 149 freq:886
  # PRED: 148 [33.3%]  (false,exec)
  D.45460_333 = engine_38->ice_in.chosen[0];
  D.45725_334 = engine_38->ice_in.cands[D.45460_333][0].con_addr;
  if (D.45725_334 != 0B)
    goto <bb 150>;
  else
    goto <bb 156>;
  # SUCC: 150 [85.0%]  (true,exec) 156 [15.0%]  (false,exec)

  # BLOCK 150 freq:754
  # PRED: 149 [85.0%]  (true,exec)
  D.45460_335 = engine_38->ice_in.chosen[0];
  D.45728_336 = engine_38->ice_in.cands[D.45460_335][0].con_port;
  if (D.45728_336 != 0)
    goto <bb 151>;
  else
    goto <bb 156>;
  # SUCC: 151 [29.0%]  (true,exec) 156 [71.0%]  (false,exec)

  # BLOCK 151 freq:219
  # PRED: 150 [29.0%]  (true,exec)
  tmp = "";
  D.45526_337 = engine_38->cur_payload_map;
  D.45466_338 = smh_34(D)->session;
  D.45460_339 = engine_38->ice_in.chosen[0];
  D.45725_340 = engine_38->ice_in.cands[D.45460_339][0].con_addr;
  D.45731_341 = switch_core_perform_session_strdup (D.45466_338, D.45725_340, "src/switch_core_media.c", &__func__, 2709);
  D.45526_337->remote_sdp_ip = D.45731_341;
  D.45466_342 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 153>;
  else
    goto <bb 152>;
  # SUCC: 153 [28.0%]  (true,exec) 152 [72.0%]  (false,exec)

  # BLOCK 152 freq:157
  # PRED: 151 [72.0%]  (false,exec)
  # SUCC: 153 [100.0%]  (fallthru,exec)

  # BLOCK 153 freq:219
  # PRED: 151 [28.0%]  (true,exec) 152 [100.0%]  (fallthru,exec)
  # iftmp.114_22 = PHI <"video"(151), "audio"(152)>
  D.45460_345 = engine_38->ice_in.chosen[0];
  D.45725_346 = engine_38->ice_in.cands[D.45460_345][0].con_addr;
  D.45460_347 = engine_38->ice_in.chosen[0];
  D.45728_348 = engine_38->ice_in.cands[D.45460_347][0].con_port;
  D.45736_349 = (int) D.45728_348;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2710, D.45466_342, 5, "setting remote %s ice addr to %s:%d based on candidate\n", iftmp.114_22, D.45725_346, D.45736_349);
  D.45460_350 = engine_38->ice_in.chosen[0];
  D.45620_351 = engine_38->ice_in.cands[D.45460_350][0].ready;
  D.45621_352 = D.45620_351 + 1;
  engine_38->ice_in.cands[D.45460_350][0].ready = D.45621_352;
  D.45460_353 = engine_38->ice_in.chosen[0];
  D.45728_354 = engine_38->ice_in.cands[D.45460_353][0].con_port;
  engine_38->remote_rtp_ice_port = D.45728_354;
  D.45466_355 = smh_34(D)->session;
  D.45460_356 = engine_38->ice_in.chosen[0];
  D.45725_357 = engine_38->ice_in.cands[D.45460_356][0].con_addr;
  D.45737_358 = switch_core_perform_session_strdup (D.45466_355, D.45725_357, "src/switch_core_media.c", &__func__, 2716);
  engine_38->remote_rtp_ice_addr = D.45737_358;
  D.45526_359 = engine_38->cur_payload_map;
  D.45466_360 = smh_34(D)->session;
  D.45460_361 = engine_38->ice_in.chosen[0];
  D.45725_362 = engine_38->ice_in.cands[D.45460_361][0].con_addr;
  D.45738_363 = switch_core_perform_session_strdup (D.45466_360, D.45725_362, "src/switch_core_media.c", &__func__, 2718);
  D.45526_359->remote_sdp_ip = D.45738_363;
  D.45526_364 = engine_38->cur_payload_map;
  D.45460_365 = engine_38->ice_in.chosen[0];
  D.45728_366 = engine_38->ice_in.cands[D.45460_365][0].con_port;
  D.45526_364->remote_sdp_port = D.45728_366;
  D.45739_367 = engine_38->remote_rtcp_port;
  if (D.45739_367 != 0)
    goto <bb 154>;
  else
    goto <bb 155>;
  # SUCC: 154 [50.0%]  (true,exec) 155 [50.0%]  (false,exec)

  # BLOCK 154 freq:109
  # PRED: 153 [50.0%]  (true,exec)
  D.45526_368 = engine_38->cur_payload_map;
  D.45527_369 = D.45526_368->remote_sdp_port;
  engine_38->remote_rtcp_port = D.45527_369;
  # SUCC: 155 [100.0%]  (fallthru,exec)

  # BLOCK 155 freq:219
  # PRED: 153 [50.0%]  (false,exec) 154 [100.0%]  (fallthru,exec)
  D.45526_370 = engine_38->cur_payload_map;
  D.45527_371 = D.45526_370->remote_sdp_port;
  D.45742_372 = (int) D.45527_371;
  switch_snprintf (&tmp, 80, "%d", D.45742_372);
  D.45466_373 = smh_34(D)->session;
  D.45467_374 = D.45466_373->channel;
  D.45526_375 = engine_38->cur_payload_map;
  D.45743_376 = D.45526_375->remote_sdp_ip;
  switch_channel_set_variable_var_check (D.45467_374, "remote_media_ip", D.45743_376, 1);
  D.45466_377 = smh_34(D)->session;
  D.45467_378 = D.45466_377->channel;
  switch_channel_set_variable_var_check (D.45467_378, "remote_media_port", &tmp, 1);
  # SUCC: 156 [100.0%]  (fallthru,exec)

  # BLOCK 156 freq:886
  # PRED: 149 [15.0%]  (false,exec) 150 [71.0%]  (false,exec) 155 [100.0%]  (fallthru,exec)
  D.45463_379 = engine_38->ice_in.chosen[1];
  D.45692_380 = engine_38->ice_in.cands[D.45463_379][1].con_port;
  if (D.45692_380 != 0)
    goto <bb 157>;
  else
    goto <bb 160>;
  # SUCC: 157 [50.0%]  (true,exec) 160 [50.0%]  (false,exec)

  # BLOCK 157 freq:443
  # PRED: 156 [50.0%]  (true,exec)
  D.45466_381 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 159>;
  else
    goto <bb 158>;
  # SUCC: 159 [28.0%]  (true,exec) 158 [72.0%]  (false,exec)

  # BLOCK 158 freq:319
  # PRED: 157 [72.0%]  (false,exec)
  # SUCC: 159 [100.0%]  (fallthru,exec)

  # BLOCK 159 freq:443
  # PRED: 157 [28.0%]  (true,exec) 158 [100.0%]  (fallthru,exec)
  # iftmp.115_23 = PHI <"video"(157), "audio"(158)>
  D.45463_384 = engine_38->ice_in.chosen[1];
  D.45691_385 = engine_38->ice_in.cands[D.45463_384][1].con_addr;
  D.45463_386 = engine_38->ice_in.chosen[1];
  D.45692_387 = engine_38->ice_in.cands[D.45463_386][1].con_port;
  D.45693_388 = (int) D.45692_387;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2730, D.45466_381, 5, "setting remote rtcp %s addr to %s:%d based on candidate\n", iftmp.115_23, D.45691_385, D.45693_388);
  D.45463_389 = engine_38->ice_in.chosen[1];
  D.45692_390 = engine_38->ice_in.cands[D.45463_389][1].con_port;
  engine_38->remote_rtcp_ice_port = D.45692_390;
  D.45466_391 = smh_34(D)->session;
  D.45463_392 = engine_38->ice_in.chosen[1];
  D.45691_393 = engine_38->ice_in.cands[D.45463_392][1].con_addr;
  D.45750_394 = switch_core_perform_session_strdup (D.45466_391, D.45691_393, "src/switch_core_media.c", &__func__, 2734);
  engine_38->remote_rtcp_ice_addr = D.45750_394;
  D.45463_395 = engine_38->ice_in.chosen[1];
  D.45692_396 = engine_38->ice_in.cands[D.45463_395][1].con_port;
  engine_38->remote_rtcp_port = D.45692_396;
  # SUCC: 160 [100.0%]  (fallthru,exec)

  # BLOCK 160 freq:886
  # PRED: 156 [50.0%]  (false,exec) 159 [100.0%]  (fallthru,exec)
  D.45751_397 = m_46(D) != 0B;
  D.45752_398 = got_rtcp_mux_8 == 0;
  D.45753_399 = D.45751_397 && D.45752_398;
  if (D.45753_399 != 0)
    goto <bb 161>;
  else
    goto <bb 162>;
  # SUCC: 161 [50.0%]  (true,exec) 162 [50.0%]  (false,exec)

  # BLOCK 161 freq:443
  # PRED: 160 [50.0%]  (true,exec)
  engine_38->rtcp_mux = -1;
  # SUCC: 162 [100.0%]  (fallthru,exec)

  # BLOCK 162 freq:886
  # PRED: 160 [50.0%]  (false,exec) 161 [100.0%]  (fallthru,exec)
  D.45466_400 = smh_34(D)->session;
  D.45467_401 = D.45466_400->channel;
  D.45756_402 = switch_channel_test_flag (D.45467_401, 103);
  if (D.45756_402 != 0)
    goto <bb 163>;
  else
    goto <bb 203>;
  # SUCC: 163 [39.0%]  (true,exec) 203 [61.0%]  (false,exec)

  # BLOCK 163 freq:346
  # PRED: 162 [39.0%]  (true,exec)
  D.45518_403 = engine_38->rtp_session;
  D.45759_404 = switch_rtp_ready (D.45518_403);
  if (D.45759_404 != 0)
    goto <bb 164>;
  else
    goto <bb 170>;
  # SUCC: 164 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 164 freq:173
  # PRED: 163 [50.0%]  (true,exec)
  D.45460_405 = engine_38->ice_in.chosen[0];
  D.45620_406 = engine_38->ice_in.cands[D.45460_405][0].ready;
  if (D.45620_406 != 0)
    goto <bb 165>;
  else
    goto <bb 170>;
  # SUCC: 165 [50.0%]  (true,exec) 170 [50.0%]  (false,exec)

  # BLOCK 165 freq:86
  # PRED: 164 [50.0%]  (true,exec)
  D.45466_407 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 167>;
  else
    goto <bb 166>;
  # SUCC: 167 [28.0%]  (true,exec) 166 [72.0%]  (false,exec)

  # BLOCK 166 freq:62
  # PRED: 165 [72.0%]  (false,exec)
  # SUCC: 167 [100.0%]  (fallthru,exec)

  # BLOCK 167 freq:86
  # PRED: 165 [28.0%]  (true,exec) 166 [100.0%]  (fallthru,exec)
  # iftmp.116_24 = PHI <"video"(165), "audio"(166)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2749, D.45466_407, 6, "RE-Activating %s ICE\n", iftmp.116_24);
  D.45518_410 = engine_38->rtp_session;
  D.45720_411 = engine_38->ice_in.ufrag;
  D.45768_412 = engine_38->ice_out.ufrag;
  D.45769_413 = engine_38->ice_out.pwd;
  D.45723_414 = engine_38->ice_in.pwd;
  D.45466_415 = smh_34(D)->session;
  D.45771_416 = switch_ice_direction (D.45466_415);
  if (D.45771_416 == 1)
    goto <bb 169>;
  else
    goto <bb 168>;
  # SUCC: 169 [28.0%]  (true,exec) 168 [72.0%]  (false,exec)

  # BLOCK 168 freq:62
  # PRED: 167 [72.0%]  (false,exec)
  # SUCC: 169 [100.0%]  (fallthru,exec)

  # BLOCK 169 freq:86
  # PRED: 167 [28.0%]  (true,exec) 168 [100.0%]  (fallthru,exec)
  # iftmp.117_25 = PHI <2(167), 6(168)>
  D.45775_419 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45518_410, D.45720_411, D.45768_412, D.45769_413, D.45723_414, 0, iftmp.117_25, D.45775_419);
  # SUCC: 170 [100.0%]  (fallthru,exec)

  # BLOCK 170 freq:346
  # PRED: 163 [50.0%]  (false,exec) 164 [50.0%]  (false,exec) 169 [100.0%]  (fallthru,exec)
  D.45518_420 = engine_38->rtp_session;
  if (D.45518_420 != 0B)
    goto <bb 171>;
  else
    goto <bb 191>;
  # SUCC: 171 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

  # BLOCK 171 freq:294
  # PRED: 170 [85.0%]  (true,exec)
  D.45466_421 = smh_34(D)->session;
  D.45467_422 = D.45466_421->channel;
  if (type_36(D) == 1)
    goto <bb 173>;
  else
    goto <bb 172>;
  # SUCC: 173 [28.0%]  (true,exec) 172 [72.0%]  (false,exec)

  # BLOCK 172 freq:211
  # PRED: 171 [72.0%]  (false,exec)
  # SUCC: 173 [100.0%]  (fallthru,exec)

  # BLOCK 173 freq:294
  # PRED: 171 [28.0%]  (true,exec) 172 [100.0%]  (fallthru,exec)
  # iftmp.118_26 = PHI <"rtcp_video_interval_msec"(171), "rtcp_audio_interval_msec"(172)>
  val_425 = switch_channel_get_variable_dup (D.45467_422, iftmp.118_26, 1, -1);
  # DEBUG val => val_425
  if (val_425 != 0B)
    goto <bb 178>;
  else
    goto <bb 174>;
  # SUCC: 178 [85.0%]  (true,exec) 174 [15.0%]  (false,exec)

  # BLOCK 174 freq:44
  # PRED: 173 [15.0%]  (false,exec)
  if (type_36(D) == 1)
    goto <bb 175>;
  else
    goto <bb 176>;
  # SUCC: 175 [28.0%]  (true,exec) 176 [72.0%]  (false,exec)

  # BLOCK 175 freq:12
  # PRED: 174 [28.0%]  (true,exec)
  D.45788_426 = smh_34(D)->mparams;
  val_427 = D.45788_426->rtcp_video_interval_msec;
  goto <bb 177>;
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 176 freq:32
  # PRED: 174 [72.0%]  (false,exec)
  D.45788_428 = smh_34(D)->mparams;
  val_429 = D.45788_428->rtcp_audio_interval_msec;
  # SUCC: 177 [100.0%]  (fallthru,exec)

  # BLOCK 177 freq:44
  # PRED: 175 [100.0%]  (fallthru,exec) 176 [100.0%]  (fallthru,exec)
  # val_27 = PHI <val_427(175), val_429(176)>
  # DEBUG val => val_27
  if (val_27 != 0B)
    goto <bb 178>;
  else
    goto <bb 191>;
  # SUCC: 178 [85.0%]  (true,exec) 191 [15.0%]  (false,exec)

  # BLOCK 178 freq:287
  # PRED: 173 [85.0%]  (true,exec) 177 [85.0%]  (true,exec)
  # val_9 = PHI <val_425(173), val_27(177)>
  # DEBUG val => val_9
  D.45466_431 = smh_34(D)->session;
  D.45467_432 = D.45466_431->channel;
  if (type_36(D) == 1)
    goto <bb 180>;
  else
    goto <bb 179>;
  # SUCC: 180 [28.0%]  (true,exec) 179 [72.0%]  (false,exec)

  # BLOCK 179 freq:207
  # PRED: 178 [72.0%]  (false,exec)
  # SUCC: 180 [100.0%]  (fallthru,exec)

  # BLOCK 180 freq:287
  # PRED: 178 [28.0%]  (true,exec) 179 [100.0%]  (fallthru,exec)
  # iftmp.120_28 = PHI <"rtp_remote_video_rtcp_port"(178), "rtp_remote_audio_rtcp_port"(179)>
  rport_435 = switch_channel_get_variable_dup (D.45467_432, iftmp.120_28, 1, -1);
  # DEBUG rport => rport_435
  remote_rtcp_port_436 = engine_38->remote_rtcp_port;
  # DEBUG remote_rtcp_port => remote_rtcp_port_436
  D.45794_437 = remote_rtcp_port_436 == 0;
  D.45795_438 = rport_435 != 0B;
  D.45796_439 = D.45794_437 && D.45795_438;
  if (D.45796_439 != 0)
    goto <bb 181>;
  else
    goto <bb 182>;
  # SUCC: 181 [29.0%]  (true,exec) 182 [71.0%]  (false,exec)

  # BLOCK 181 freq:83
  # PRED: 180 [29.0%]  (true,exec)
  # DEBUG __nptr => rport_435
  D.47861_654 = strtol (rport_435, 0B, 10);
  remote_rtcp_port_441 = (switch_port_t) D.47861_654;
  # DEBUG remote_rtcp_port => remote_rtcp_port_441
  # SUCC: 182 [100.0%]  (fallthru,exec)

  # BLOCK 182 freq:287
  # PRED: 180 [71.0%]  (false,exec) 181 [100.0%]  (fallthru,exec)
  # remote_rtcp_port_11 = PHI <remote_rtcp_port_436(180), remote_rtcp_port_441(181)>
  # DEBUG remote_rtcp_port => remote_rtcp_port_11
  D.45800_442 = strcasecmp (val_9, "passthru");
  if (D.45800_442 == 0)
    goto <bb 183>;
  else
    goto <bb 186>;
  # SUCC: 183 [71.0%]  (true,exec) 186 [29.0%]  (false,exec)

  # BLOCK 183 freq:204
  # PRED: 182 [71.0%]  (true,exec)
  D.45466_443 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 185>;
  else
    goto <bb 184>;
  # SUCC: 185 [28.0%]  (true,exec) 184 [72.0%]  (false,exec)

  # BLOCK 184 freq:147
  # PRED: 183 [72.0%]  (false,exec)
  # SUCC: 185 [100.0%]  (fallthru,exec)

  # BLOCK 185 freq:204
  # PRED: 183 [28.0%]  (true,exec) 184 [100.0%]  (fallthru,exec)
  # iftmp.121_29 = PHI <"video"(183), "audio"(184)>
  D.45807_446 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2787, D.45466_443, 6, "Activating %s RTCP PASSTHRU PORT %d\n", iftmp.121_29, D.45807_446);
  D.45518_447 = engine_38->rtp_session;
  D.45808_448 = engine_38->rtcp_mux;
  D.45809_449 = D.45808_448 > 0;
  switch_rtp_activate_rtcp (D.45518_447, -1, remote_rtcp_port_11, D.45809_449);
  goto <bb 191>;
  # SUCC: 191 [100.0%]  (fallthru,exec)

  # BLOCK 186 freq:83
  # PRED: 182 [29.0%]  (false,exec)
  # DEBUG __nptr => val_9
  interval_655 = strtol (val_9, 0B, 10);
  # DEBUG interval => NULL
  interval.122_451 = (unsigned int) interval_655;
  D.45812_452 = interval.122_451 + 4294967196;
  if (D.45812_452 > 499900)
    goto <bb 187>;
  else
    goto <bb 188>;
  # SUCC: 187 [29.0%]  (true,exec) 188 [71.0%]  (false,exec)

  # BLOCK 187 freq:24
  # PRED: 186 [29.0%]  (true,exec)
  D.45466_453 = smh_34(D)->session;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2793, D.45466_453, 3, "Invalid rtcp interval spec [%d] must be between 100 and 500000\n", interval_655);
  # DEBUG interval => 10000
  # SUCC: 188 [100.0%]  (fallthru,exec)

  # BLOCK 188 freq:83
  # PRED: 186 [71.0%]  (false,exec) 187 [100.0%]  (fallthru,exec)
  # interval_12 = PHI <interval_655(186), 10000(187)>
  # DEBUG interval => interval_12
  D.45466_455 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 190>;
  else
    goto <bb 189>;
  # SUCC: 190 [28.0%]  (true,exec) 189 [72.0%]  (false,exec)

  # BLOCK 189 freq:60
  # PRED: 188 [72.0%]  (false,exec)
  # SUCC: 190 [100.0%]  (fallthru,exec)

  # BLOCK 190 freq:83
  # PRED: 188 [28.0%]  (true,exec) 189 [100.0%]  (fallthru,exec)
  # iftmp.123_30 = PHI <"video"(188), "audio"(189)>
  D.45807_458 = (int) remote_rtcp_port_11;
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2798, D.45466_455, 6, "Activating %s RTCP PORT %d\n", iftmp.123_30, D.45807_458);
  D.45518_459 = engine_38->rtp_session;
  D.45808_460 = engine_38->rtcp_mux;
  D.45809_461 = D.45808_460 > 0;
  switch_rtp_activate_rtcp (D.45518_459, interval_12, remote_rtcp_port_11, D.45809_461);
  # SUCC: 191 [100.0%]  (fallthru,exec)

  # BLOCK 191 freq:346
  # PRED: 170 [15.0%]  (false,exec) 177 [15.0%]  (false,exec) 185 [100.0%]  (fallthru,exec) 190 [100.0%]  (fallthru,exec)
  D.45463_462 = engine_38->ice_in.chosen[1];
  D.45638_463 = engine_38->ice_in.cands[D.45463_462][1].ready;
  if (D.45638_463 != 0)
    goto <bb 192>;
  else
    goto <bb 203>;
  # SUCC: 192 [61.0%]  (true,exec) 203 [39.0%]  (false,exec)

  # BLOCK 192 freq:211
  # PRED: 191 [61.0%]  (true,exec)
  D.45808_464 = engine_38->rtcp_mux;
  if (D.45808_464 > 0)
    goto <bb 193>;
  else
    goto <bb 198>;
  # SUCC: 193 [73.0%]  (true,exec) 198 [27.0%]  (false,exec)

  # BLOCK 193 freq:154
  # PRED: 192 [73.0%]  (true,exec)
  D.45463_465 = engine_38->ice_in.chosen[1];
  D.45691_466 = engine_38->ice_in.cands[D.45463_465][1].con_addr;
  D.45460_467 = engine_38->ice_in.chosen[0];
  D.45725_468 = engine_38->ice_in.cands[D.45460_467][0].con_addr;
  D.38904_469 = __builtin_strcmp (D.45691_466, D.45725_468);
  if (D.38904_469 == 0)
    goto <bb 194>;
  else
    goto <bb 198>;
  # SUCC: 194 [50.0%]  (true,exec) 198 [50.0%]  (false,exec)

  # BLOCK 194 freq:77
  # PRED: 193 [50.0%]  (true,exec)
  D.45463_470 = engine_38->ice_in.chosen[1];
  D.45692_471 = engine_38->ice_in.cands[D.45463_470][1].con_port;
  D.45460_472 = engine_38->ice_in.chosen[0];
  D.45728_473 = engine_38->ice_in.cands[D.45460_472][0].con_port;
  if (D.45692_471 == D.45728_473)
    goto <bb 195>;
  else
    goto <bb 198>;
  # SUCC: 195 [28.0%]  (true,exec) 198 [72.0%]  (false,exec)

  # BLOCK 195 freq:22
  # PRED: 194 [28.0%]  (true,exec)
  D.45466_474 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 197>;
  else
    goto <bb 196>;
  # SUCC: 197 [19.9%]  (true,exec) 196 [80.1%]  (false,exec)

  # BLOCK 196 freq:17
  # PRED: 195 [80.1%]  (false,exec)
  # SUCC: 197 [100.0%]  (fallthru,exec)

  # BLOCK 197 freq:22
  # PRED: 195 [19.9%]  (true,exec) 196 [100.0%]  (fallthru,exec)
  # iftmp.124_31 = PHI <"video"(195), "audio"(196)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2806, D.45466_474, 6, "Skipping %s RTCP ICE (Same as RTP)\n", iftmp.124_31);
  goto <bb 203>;
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 198 freq:189
  # PRED: 192 [27.0%]  (false,exec) 193 [50.0%]  (false,exec) 194 [72.0%]  (false,exec)
  D.45466_477 = smh_34(D)->session;
  if (type_36(D) == 1)
    goto <bb 200>;
  else
    goto <bb 199>;
  # SUCC: 200 [28.0%]  (true,exec) 199 [72.0%]  (false,exec)

  # BLOCK 199 freq:136
  # PRED: 198 [72.0%]  (false,exec)
  # SUCC: 200 [100.0%]  (fallthru,exec)

  # BLOCK 200 freq:189
  # PRED: 198 [28.0%]  (true,exec) 199 [100.0%]  (fallthru,exec)
  # iftmp.125_32 = PHI <"video"(198), "audio"(199)>
  switch_log_printf (3, "src/switch_core_media.c", &__func__, 2808, D.45466_477, 6, "Activating %s RTCP ICE\n", iftmp.125_32);
  D.45518_480 = engine_38->rtp_session;
  D.45720_481 = engine_38->ice_in.ufrag;
  D.45768_482 = engine_38->ice_out.ufrag;
  D.45769_483 = engine_38->ice_out.pwd;
  D.45723_484 = engine_38->ice_in.pwd;
  D.45466_485 = smh_34(D)->session;
  D.45835_486 = switch_ice_direction (D.45466_485);
  if (D.45835_486 == 1)
    goto <bb 202>;
  else
    goto <bb 201>;
  # SUCC: 202 [28.0%]  (true,exec) 201 [72.0%]  (false,exec)

  # BLOCK 201 freq:136
  # PRED: 200 [72.0%]  (false,exec)
  # SUCC: 202 [100.0%]  (fallthru,exec)

  # BLOCK 202 freq:189
  # PRED: 200 [28.0%]  (true,exec) 201 [100.0%]  (fallthru,exec)
  # iftmp.126_33 = PHI <2(200), 6(201)>
  D.45775_489 = &engine_38->ice_in;
  switch_rtp_activate_ice (D.45518_480, D.45720_481, D.45768_482, D.45769_483, D.45723_484, 1, iftmp.126_33, D.45775_489);
  # SUCC: 203 [100.0%]  (fallthru,exec)

  # BLOCK 203 freq:940
  # PRED: 4 [39.0%]  (true,exec) 162 [61.0%]  (false,exec) 191 [39.0%]  (false,exec) 197 [100.0%]  (fallthru,exec) 202 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_session_set_ice (switch_core_session_set_ice)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_toggle_hold (switch_core_media_toggle_hold)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_negotiate_sdp (switch_core_media_negotiate_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_proxy_remote_addr (switch_core_media_proxy_remote_addr)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_check_nat (switch_core_media_check_nat)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_ext_address_lookup (switch_core_media_ext_address_lookup)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_reset_autofix (switch_core_media_reset_autofix)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_choose_port (switch_core_media_choose_port)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_choose_ports (switch_core_media_choose_ports)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_deactivate_rtp (switch_core_media_deactivate_rtp)

Function is not available or overwritable; not analyzing.

;; Function switch_media_handle_destroy (switch_media_handle_destroy)

Function is not available or overwritable; not analyzing.

;; Function switch_core_session_wake_video_thread (switch_core_session_wake_video_thread)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_activate_rtp (switch_core_media_activate_rtp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_check_dtmf_type (switch_core_media_check_dtmf_type)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_sdp_map (switch_core_media_sdp_map)



 local analysis of switch_core_media_sdp_map
   scanning: D.43018_7 = strlen (r_sdp_6(D));
    checking flags for call: pure
  scanning: D.43019_8 = (int) D.43018_7;
  scanning: parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);
    checking flags for call: neihter
  scanning: if (parser_9 == 0B)
  scanning: sdp_11 = sdp_session (parser_9);
    checking flags for call: neihter
  scanning: if (sdp_11 == 0B)
  scanning: sdp_parser_free (parser_9);
    checking flags for call: neihter
  scanning: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);
    checking flags for call: neihter
  scanning: switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);
    checking flags for call: neihter
  scanning: m_15 = sdp_11->sdp_media;
    Indirect ref read is not const
  scanning: D.43025_16 = m_1->m_proto;
    Indirect ref read is not const
  scanning: if (D.43025_16 == 256)
  scanning: map_17 = m_1->m_rtpmaps;
    Indirect ref read is not const
  scanning: D.43028_18 = map_2->rm_encoding;
    Indirect ref read is not const
  scanning: if (D.43028_18 != 0B)
  scanning: buf = "";
  scanning: key = "";
  scanning: D.43031_20 = map_2->rm_fmtp;
    Indirect ref read is not const
  scanning: if (D.43031_20 != 0B)
  scanning: D.43031_21 = map_2->rm_fmtp;
    Indirect ref read is not const
  scanning: br_22 = strstr (D.43031_21, "bitrate=");
    checking flags for call: pure
  scanning: if (br_22 != 0B)
  scanning: br_23 = br_22 + 8;
  scanning: D.43036_24 = map_2->rm_pt;
    Indirect ref read is not const
  scanning: D.43037_25 = (int) D.43036_24;
  scanning: switch_snprintf (&buf, 25, "%d", D.43037_25);
    checking flags for call: neihter
  scanning: if (br_3 != 0B)
  scanning: D.43028_26 = map_2->rm_encoding;
    Indirect ref read is not const
  scanning: switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);
    checking flags for call: neihter
  scanning: D.43028_27 = map_2->rm_encoding;
    Indirect ref read is not const
  scanning: switch_snprintf (&key, 128, "%s", D.43028_27);
    checking flags for call: neihter
  scanning: D.43041_28 = *pt_14(D);
    Indirect ref read is not const
  scanning: switch_event_add_header_string (D.43041_28, 1, &key, &buf);
    checking flags for call: neihter
  scanning: D.43031_29 = map_2->rm_fmtp;
    Indirect ref read is not const
  scanning: if (D.43031_29 != 0B)
  scanning: D.43044_30 = *fmtp_13(D);
    Indirect ref read is not const
  scanning: D.43031_31 = map_2->rm_fmtp;
    Indirect ref read is not const
  scanning: switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);
    checking flags for call: neihter
  scanning: map_32 = map_2->rm_next;
    Indirect ref read is not const
  scanning: if (map_2 != 0B)
  scanning: m_33 = m_1->m_next;
    Indirect ref read is not const
  scanning: if (m_1 != 0B)
  scanning: sdp_parser_free (parser_9);
    checking flags for call: neihter
  scanning: return D.43022_4;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: switch_core_media_sdp_map

;; Function switch_core_media_sdp_map

;; 
23 basic blocks, 32 edges, last basic block 23.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  22 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.4%]  (false,exec)
Successors:  4 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [10.1%]  (true,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  3 [89.9%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,exec)

Basic block 6 (new, reachable)
Predecessors:  20 [91.0%]  (true,exec)
Successors:  7 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [28.0%]  (true,exec)
Successors:  18 [100.0%]  (fallthru,exec)

Basic block 8 (new, reachable)
Predecessors:  18 [91.0%]  (true,exec)
Successors:  9 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [85.0%]  (true,exec)
Successors:  10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [85.0%]  (true,exec)
Successors:  12 [100.0%]  (fallthru,exec)

Basic block 12 (new, reachable)
Predecessors:  9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
Successors:  13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [85.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 14 (new, reachable)
Predecessors:  12 [15.0%]  (false,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  13 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec)
Successors:  16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [69.8%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  8 [15.0%]  (false,exec) 15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
Successors:  18 [100.0%]  (fallthru,dfs_back,exec)

Basic block 18 (new, reachable)
Predecessors:  7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
Successors:  8 [91.0%]  (true,exec) 19 [9.0%]  (false,exec)

Basic block 19 (new, reachable)
Predecessors:  6 [72.0%]  (false,exec) 18 [9.0%]  (false,exec)
Successors:  20 [100.0%]  (fallthru,dfs_back,exec)

Basic block 20 (new, reachable)
Predecessors:  5 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,dfs_back,exec)
Successors:  6 [91.0%]  (true,exec) 21 [9.0%]  (false,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [9.0%]  (false,exec)
Successors:  22 [100.0%]  (fallthru,exec)

Basic block 22 (new, reachable)
Predecessors:  2 [21.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


switch_core_media_sdp_map (const char * r_sdp, struct switch_event_t * * fmtp, struct switch_event_t * * pt)
{
  char * br;
  char key[128];
  char buf[25];
  struct sdp_rtpmap_t * map;
  static const char __func__[26] = "switch_core_media_sdp_map";
  struct sdp_session_t * sdp;
  struct sdp_parser_t * parser;
  struct sdp_media_t * m;
  struct switch_event_t * D.43044;
  struct switch_event_t * D.43041;
  int D.43037;
  <unnamed-unsigned:7> D.43036;
  const char * D.43031;
  const char * D.43028;
  sdp_proto_e D.43025;
  switch_status_t D.43022;
  int D.43019;
  size_t D.43018;

  # BLOCK 2 freq:451
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  # DEBUG parser => 0B
  D.43018_7 = strlen (r_sdp_6(D));
  D.43019_8 = (int) D.43018_7;
  parser_9 = sdp_parse (0B, r_sdp_6(D), D.43019_8, 0);
  # DEBUG parser => parser_9
  if (parser_9 == 0B)
    goto <bb 22>;
  else
    goto <bb 3>;
  # SUCC: 22 [21.6%]  (true,exec) 3 [78.4%]  (false,exec)

  # BLOCK 3 freq:354
  # PRED: 2 [78.4%]  (false,exec)
  sdp_11 = sdp_session (parser_9);
  # DEBUG sdp => sdp_11
  if (sdp_11 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [10.1%]  (true,exec) 5 [89.9%]  (false,exec)

  # BLOCK 4 freq:36
  # PRED: 3 [10.1%]  (true,exec)
  sdp_parser_free (parser_9);
  goto <bb 22>;
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:318
  # PRED: 3 [89.9%]  (false,exec)
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5930, fmtp_13(D), 62, 0B);
  switch_event_create_subclass_detailed ("src/switch_core_media.c", &__func__, 5931, pt_14(D), 62, 0B);
  m_15 = sdp_11->sdp_media;
  # DEBUG m => m_15
  goto <bb 20>;
  # SUCC: 20 [100.0%]  (fallthru,exec)

  # BLOCK 6 freq:3214
  # PRED: 20 [91.0%]  (true,exec)
  D.43025_16 = m_1->m_proto;
  if (D.43025_16 == 256)
    goto <bb 7>;
  else
    goto <bb 19>;
  # SUCC: 7 [28.0%]  (true,exec) 19 [72.0%]  (false,exec)

  # BLOCK 7 freq:900
  # PRED: 6 [28.0%]  (true,exec)
  map_17 = m_1->m_rtpmaps;
  # DEBUG map => map_17
  goto <bb 18>;
  # SUCC: 18 [100.0%]  (fallthru,exec)

  # BLOCK 8 freq:9100
  # PRED: 18 [91.0%]  (true,exec)
  D.43028_18 = map_2->rm_encoding;
  if (D.43028_18 != 0B)
    goto <bb 9>;
  else
    goto <bb 17>;
  # SUCC: 9 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 9 freq:7735
  # PRED: 8 [85.0%]  (true,exec)
  buf = "";
  key = "";
  # DEBUG br => 0B
  D.43031_20 = map_2->rm_fmtp;
  if (D.43031_20 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 10 freq:6575
  # PRED: 9 [85.0%]  (true,exec)
  D.43031_21 = map_2->rm_fmtp;
  br_22 = strstr (D.43031_21, "bitrate=");
  # DEBUG br => br_22
  if (br_22 != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 [85.0%]  (true,exec) 12 [15.0%]  (false,exec)

  # BLOCK 11 freq:5589
  # PRED: 10 [85.0%]  (true,exec)
  br_23 = br_22 + 8;
  # DEBUG br => br_23
  # SUCC: 12 [100.0%]  (fallthru,exec)

  # BLOCK 12 freq:7735
  # PRED: 9 [15.0%]  (false,exec) 10 [15.0%]  (false,exec) 11 [100.0%]  (fallthru,exec)
  # br_3 = PHI <0B(9), br_22(10), br_23(11)>
  # DEBUG br => br_3
  D.43036_24 = map_2->rm_pt;
  D.43037_25 = (int) D.43036_24;
  switch_snprintf (&buf, 25, "%d", D.43037_25);
  if (br_3 != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;
  # SUCC: 13 [85.0%]  (true,exec) 14 [15.0%]  (false,exec)

  # BLOCK 13 freq:6576
  # PRED: 12 [85.0%]  (true,exec)
  D.43028_26 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s:%s", D.43028_26, br_3);
  goto <bb 15>;
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 14 freq:1159
  # PRED: 12 [15.0%]  (false,exec)
  D.43028_27 = map_2->rm_encoding;
  switch_snprintf (&key, 128, "%s", D.43028_27);
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:7735
  # PRED: 13 [100.0%]  (fallthru,exec) 14 [100.0%]  (fallthru,exec)
  D.43041_28 = *pt_14(D);
  switch_event_add_header_string (D.43041_28, 1, &key, &buf);
  D.43031_29 = map_2->rm_fmtp;
  if (D.43031_29 != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [69.8%]  (true,exec) 17 [30.2%]  (false,exec)

  # BLOCK 16 freq:5401
  # PRED: 15 [69.8%]  (true,exec)
  D.43044_30 = *fmtp_13(D);
  D.43031_31 = map_2->rm_fmtp;
  switch_event_add_header_string (D.43044_30, 1, &key, D.43031_31);
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:9100
  # PRED: 8 [15.0%]  (false,exec) 15 [30.2%]  (false,exec) 16 [100.0%]  (fallthru,exec)
  map_32 = map_2->rm_next;
  # DEBUG map => map_32
  # SUCC: 18 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 18 freq:10000
  # PRED: 7 [100.0%]  (fallthru,exec) 17 [100.0%]  (fallthru,dfs_back,exec)
  # map_2 = PHI <map_17(7), map_32(17)>
  # DEBUG map => map_2
  if (map_2 != 0B)
    goto <bb 8>;
  else
    goto <bb 19>;
  # SUCC: 8 [91.0%]  (true,exec) 19 [9.0%]  (false,exec)

  # BLOCK 19 freq:3214
  # PRED: 6 [72.0%]  (false,exec) 18 [9.0%]  (false,exec)
  m_33 = m_1->m_next;
  # DEBUG m => m_33
  # SUCC: 20 [100.0%]  (fallthru,dfs_back,exec)

  # BLOCK 20 freq:3532
  # PRED: 5 [100.0%]  (fallthru,exec) 19 [100.0%]  (fallthru,dfs_back,exec)
  # m_1 = PHI <m_15(5), m_33(19)>
  # DEBUG m => m_1
  if (m_1 != 0B)
    goto <bb 6>;
  else
    goto <bb 21>;
  # SUCC: 6 [91.0%]  (true,exec) 21 [9.0%]  (false,exec)

  # BLOCK 21 freq:318
  # PRED: 20 [9.0%]  (false,exec)
  sdp_parser_free (parser_9);
  # SUCC: 22 [100.0%]  (fallthru,exec)

  # BLOCK 22 freq:451
  # PRED: 2 [21.6%]  (true,exec) 4 [100.0%]  (fallthru,exec) 21 [100.0%]  (fallthru,exec)
  # D.43022_4 = PHI <1(2), 1(4), 0(21)>
  return D.43022_4;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_local_sdp (switch_core_media_set_local_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_gen_local_sdp (switch_core_media_gen_local_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_absorb_sdp (switch_core_media_absorb_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_udptl_image_sdp (switch_core_media_set_udptl_image_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_patch_sdp (switch_core_media_patch_sdp)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_start_udptl (switch_core_media_start_udptl)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_receive_message (switch_core_media_receive_message)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_break (switch_core_media_break)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_kill_socket (switch_core_media_kill_socket)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_queue_rfc2833 (switch_core_media_queue_rfc2833)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_queue_rfc2833_in (switch_core_media_queue_rfc2833_in)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_ready (switch_core_media_ready)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_rtp_flag (switch_core_media_set_rtp_flag)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_clear_rtp_flag (switch_core_media_clear_rtp_flag)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_telephony_event (switch_core_media_set_telephony_event)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_telephony_recv_event (switch_core_media_set_telephony_recv_event)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_get_stats (switch_core_media_get_stats)

Function is not available or overwritable; not analyzing.

;; Function set_stats (set_stats)



 local analysis of set_stats
   scanning: stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);
    checking flags for call: neihter
  scanning: channel_31 = switch_core_session_get_channel (session_28(D));
    checking flags for call: neihter
  scanning: var_name = "";
  scanning: var_val = "";
  scanning: if (stats_30 != 0B)
  scanning: D.46525_32 = stats_30->inbound.variance;
    Indirect ref read is not const
  scanning: D.46526_33 = sqrt (D.46525_32);
    checking flags for call: neihter
  scanning: stats_30->inbound.std_deviation = D.46526_33;
    Indirect ref write is not const/pure
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");
    checking flags for call: neihter
  scanning: D.46531_37 = stats_30->inbound.raw_bytes;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46531_37);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");
    checking flags for call: neihter
  scanning: D.46536_40 = stats_30->inbound.media_bytes;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46536_40);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");
    checking flags for call: neihter
  scanning: D.46541_43 = stats_30->inbound.packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46541_43);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");
    checking flags for call: neihter
  scanning: D.46546_46 = stats_30->inbound.media_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46546_46);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");
    checking flags for call: neihter
  scanning: D.46551_49 = stats_30->inbound.skip_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46551_49);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");
    checking flags for call: neihter
  scanning: D.46556_52 = stats_30->inbound.jb_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46556_52);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");
    checking flags for call: neihter
  scanning: D.46561_55 = stats_30->inbound.dtmf_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46561_55);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");
    checking flags for call: neihter
  scanning: D.46566_58 = stats_30->inbound.cng_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46566_58);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");
    checking flags for call: neihter
  scanning: D.46571_61 = stats_30->inbound.flush_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46571_61);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");
    checking flags for call: neihter
  scanning: D.46576_64 = stats_30->inbound.largest_jb_size;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46576_64);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");
    checking flags for call: neihter
  scanning: D.46581_67 = stats_30->inbound.min_variance;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46581_67);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");
    checking flags for call: neihter
  scanning: D.46586_70 = stats_30->inbound.max_variance;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46586_70);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");
    checking flags for call: neihter
  scanning: D.46591_73 = stats_30->inbound.lossrate;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46591_73);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");
    checking flags for call: neihter
  scanning: D.46596_76 = stats_30->inbound.burstrate;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46596_76);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");
    checking flags for call: neihter
  scanning: D.46601_79 = stats_30->inbound.mean_interval;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46601_79);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");
    checking flags for call: neihter
  scanning: D.46606_82 = stats_30->inbound.flaws;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46606_82);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");
    checking flags for call: neihter
  scanning: D.46611_85 = stats_30->inbound.R;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46611_85);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");
    checking flags for call: neihter
  scanning: D.46616_88 = stats_30->inbound.mos;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%0.2f", D.46616_88);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");
    checking flags for call: neihter
  scanning: D.46621_91 = stats_30->outbound.raw_bytes;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46621_91);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");
    checking flags for call: neihter
  scanning: D.46626_94 = stats_30->outbound.media_bytes;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46626_94);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");
    checking flags for call: neihter
  scanning: D.46631_97 = stats_30->outbound.packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46631_97);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");
    checking flags for call: neihter
  scanning: D.46636_100 = stats_30->outbound.media_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46636_100);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");
    checking flags for call: neihter
  scanning: D.46641_103 = stats_30->outbound.skip_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46641_103);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");
    checking flags for call: neihter
  scanning: D.46646_106 = stats_30->outbound.dtmf_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46646_106);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");
    checking flags for call: neihter
  scanning: D.46651_109 = stats_30->outbound.cng_packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46651_109);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");
    checking flags for call: neihter
  scanning: D.46656_112 = stats_30->rtcp.packet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46656_112);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: if (prefix_34(D) != 0B)
  scanning: switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");
    checking flags for call: neihter
  scanning: D.46661_115 = stats_30->rtcp.octet_count;
    Indirect ref read is not const
  scanning: switch_snprintf (&var_val, 35, "%d", D.46661_115);
    checking flags for call: neihter
  scanning: switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
    checking flags for call: neihter
  scanning: return;
    checking previously known: neihter
Function is locally looping.
Function found to be nothrow: set_stats

;; Function set_stats

;; 
59 basic blocks, 86 edges, last basic block 59.

Basic block 2 (new, reachable)
Predecessors:  ENTRY [100.0%]  (fallthru,exec)
Successors:  3 [78.3%]  (true,exec) 58 [21.6%]  (false,exec)

Basic block 3 (new, reachable)
Predecessors:  2 [78.3%]  (true,exec)
Successors:  4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

Basic block 4 (new, reachable)
Predecessors:  3 [85.0%]  (true,exec)
Successors:  5 [100.0%]  (fallthru,exec)

Basic block 5 (new, reachable)
Predecessors:  4 [100.0%]  (fallthru,exec) 3 [15.0%]  (false,exec)
Successors:  6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

Basic block 6 (new, reachable)
Predecessors:  5 [85.0%]  (true,exec)
Successors:  7 [100.0%]  (fallthru,exec)

Basic block 7 (new, reachable)
Predecessors:  6 [100.0%]  (fallthru,exec) 5 [15.0%]  (false,exec)
Successors:  8 [85.0%]  (true,exec) 9 [15.0%]  (false,exec)

Basic block 8 (new, reachable)
Predecessors:  7 [85.0%]  (true,exec)
Successors:  9 [100.0%]  (fallthru,exec)

Basic block 9 (new, reachable)
Predecessors:  8 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec)
Successors:  10 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

Basic block 10 (new, reachable)
Predecessors:  9 [85.0%]  (true,exec)
Successors:  11 [100.0%]  (fallthru,exec)

Basic block 11 (new, reachable)
Predecessors:  10 [100.0%]  (fallthru,exec) 9 [15.0%]  (false,exec)
Successors:  12 [85.0%]  (true,exec) 13 [15.0%]  (false,exec)

Basic block 12 (new, reachable)
Predecessors:  11 [85.0%]  (true,exec)
Successors:  13 [100.0%]  (fallthru,exec)

Basic block 13 (new, reachable)
Predecessors:  12 [100.0%]  (fallthru,exec) 11 [15.0%]  (false,exec)
Successors:  14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

Basic block 14 (new, reachable)
Predecessors:  13 [85.0%]  (true,exec)
Successors:  15 [100.0%]  (fallthru,exec)

Basic block 15 (new, reachable)
Predecessors:  14 [100.0%]  (fallthru,exec) 13 [15.0%]  (false,exec)
Successors:  16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

Basic block 16 (new, reachable)
Predecessors:  15 [85.0%]  (true,exec)
Successors:  17 [100.0%]  (fallthru,exec)

Basic block 17 (new, reachable)
Predecessors:  16 [100.0%]  (fallthru,exec) 15 [15.0%]  (false,exec)
Successors:  18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

Basic block 18 (new, reachable)
Predecessors:  17 [85.0%]  (true,exec)
Successors:  19 [100.0%]  (fallthru,exec)

Basic block 19 (new, reachable)
Predecessors:  18 [100.0%]  (fallthru,exec) 17 [15.0%]  (false,exec)
Successors:  20 [85.0%]  (true,exec) 21 [15.0%]  (false,exec)

Basic block 20 (new, reachable)
Predecessors:  19 [85.0%]  (true,exec)
Successors:  21 [100.0%]  (fallthru,exec)

Basic block 21 (new, reachable)
Predecessors:  20 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec)
Successors:  22 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

Basic block 22 (new, reachable)
Predecessors:  21 [85.0%]  (true,exec)
Successors:  23 [100.0%]  (fallthru,exec)

Basic block 23 (new, reachable)
Predecessors:  22 [100.0%]  (fallthru,exec) 21 [15.0%]  (false,exec)
Successors:  24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

Basic block 24 (new, reachable)
Predecessors:  23 [85.0%]  (true,exec)
Successors:  25 [100.0%]  (fallthru,exec)

Basic block 25 (new, reachable)
Predecessors:  24 [100.0%]  (fallthru,exec) 23 [15.0%]  (false,exec)
Successors:  26 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

Basic block 26 (new, reachable)
Predecessors:  25 [85.0%]  (true,exec)
Successors:  27 [100.0%]  (fallthru,exec)

Basic block 27 (new, reachable)
Predecessors:  26 [100.0%]  (fallthru,exec) 25 [15.0%]  (false,exec)
Successors:  28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

Basic block 28 (new, reachable)
Predecessors:  27 [85.0%]  (true,exec)
Successors:  29 [100.0%]  (fallthru,exec)

Basic block 29 (new, reachable)
Predecessors:  28 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec)
Successors:  30 [85.0%]  (true,exec) 31 [15.0%]  (false,exec)

Basic block 30 (new, reachable)
Predecessors:  29 [85.0%]  (true,exec)
Successors:  31 [100.0%]  (fallthru,exec)

Basic block 31 (new, reachable)
Predecessors:  30 [100.0%]  (fallthru,exec) 29 [15.0%]  (false,exec)
Successors:  32 [85.0%]  (true,exec) 33 [15.0%]  (false,exec)

Basic block 32 (new, reachable)
Predecessors:  31 [85.0%]  (true,exec)
Successors:  33 [100.0%]  (fallthru,exec)

Basic block 33 (new, reachable)
Predecessors:  32 [100.0%]  (fallthru,exec) 31 [15.0%]  (false,exec)
Successors:  34 [85.0%]  (true,exec) 35 [15.0%]  (false,exec)

Basic block 34 (new, reachable)
Predecessors:  33 [85.0%]  (true,exec)
Successors:  35 [100.0%]  (fallthru,exec)

Basic block 35 (new, reachable)
Predecessors:  34 [100.0%]  (fallthru,exec) 33 [15.0%]  (false,exec)
Successors:  36 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

Basic block 36 (new, reachable)
Predecessors:  35 [85.0%]  (true,exec)
Successors:  37 [100.0%]  (fallthru,exec)

Basic block 37 (new, reachable)
Predecessors:  36 [100.0%]  (fallthru,exec) 35 [15.0%]  (false,exec)
Successors:  38 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

Basic block 38 (new, reachable)
Predecessors:  37 [85.0%]  (true,exec)
Successors:  39 [100.0%]  (fallthru,exec)

Basic block 39 (new, reachable)
Predecessors:  38 [100.0%]  (fallthru,exec) 37 [15.0%]  (false,exec)
Successors:  40 [85.0%]  (true,exec) 41 [15.0%]  (false,exec)

Basic block 40 (new, reachable)
Predecessors:  39 [85.0%]  (true,exec)
Successors:  41 [100.0%]  (fallthru,exec)

Basic block 41 (new, reachable)
Predecessors:  40 [100.0%]  (fallthru,exec) 39 [15.0%]  (false,exec)
Successors:  42 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

Basic block 42 (new, reachable)
Predecessors:  41 [85.0%]  (true,exec)
Successors:  43 [100.0%]  (fallthru,exec)

Basic block 43 (new, reachable)
Predecessors:  42 [100.0%]  (fallthru,exec) 41 [15.0%]  (false,exec)
Successors:  44 [85.0%]  (true,exec) 45 [15.0%]  (false,exec)

Basic block 44 (new, reachable)
Predecessors:  43 [85.0%]  (true,exec)
Successors:  45 [100.0%]  (fallthru,exec)

Basic block 45 (new, reachable)
Predecessors:  44 [100.0%]  (fallthru,exec) 43 [15.0%]  (false,exec)
Successors:  46 [85.0%]  (true,exec) 47 [15.0%]  (false,exec)

Basic block 46 (new, reachable)
Predecessors:  45 [85.0%]  (true,exec)
Successors:  47 [100.0%]  (fallthru,exec)

Basic block 47 (new, reachable)
Predecessors:  46 [100.0%]  (fallthru,exec) 45 [15.0%]  (false,exec)
Successors:  48 [85.0%]  (true,exec) 49 [15.0%]  (false,exec)

Basic block 48 (new, reachable)
Predecessors:  47 [85.0%]  (true,exec)
Successors:  49 [100.0%]  (fallthru,exec)

Basic block 49 (new, reachable)
Predecessors:  48 [100.0%]  (fallthru,exec) 47 [15.0%]  (false,exec)
Successors:  50 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

Basic block 50 (new, reachable)
Predecessors:  49 [85.0%]  (true,exec)
Successors:  51 [100.0%]  (fallthru,exec)

Basic block 51 (new, reachable)
Predecessors:  50 [100.0%]  (fallthru,exec) 49 [15.0%]  (false,exec)
Successors:  52 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

Basic block 52 (new, reachable)
Predecessors:  51 [85.0%]  (true,exec)
Successors:  53 [100.0%]  (fallthru,exec)

Basic block 53 (new, reachable)
Predecessors:  52 [100.0%]  (fallthru,exec) 51 [15.0%]  (false,exec)
Successors:  54 [85.0%]  (true,exec) 55 [15.0%]  (false,exec)

Basic block 54 (new, reachable)
Predecessors:  53 [85.0%]  (true,exec)
Successors:  55 [100.0%]  (fallthru,exec)

Basic block 55 (new, reachable)
Predecessors:  54 [100.0%]  (fallthru,exec) 53 [15.0%]  (false,exec)
Successors:  56 [85.0%]  (true,exec) 57 [15.0%]  (false,exec)

Basic block 56 (new, reachable)
Predecessors:  55 [85.0%]  (true,exec)
Successors:  57 [100.0%]  (fallthru,exec)

Basic block 57 (new, reachable)
Predecessors:  56 [100.0%]  (fallthru,exec) 55 [15.0%]  (false,exec)
Successors:  58 [100.0%]  (fallthru,exec)

Basic block 58 (new, reachable)
Predecessors:  2 [21.6%]  (false,exec) 57 [100.0%]  (fallthru,exec)
Successors:  EXIT [100.0%] 


set_stats (struct switch_core_session_t * session, switch_media_type_t type, const char * prefix)
{
  char var_val[35];
  char var_name[256];
  struct switch_channel_t * channel;
  struct switch_rtp_stats_t * stats;
  uint32_t D.46661;
  uint32_t D.46656;
  switch_size_t D.46651;
  switch_size_t D.46646;
  switch_size_t D.46641;
  switch_size_t D.46636;
  switch_size_t D.46631;
  switch_size_t D.46626;
  switch_size_t D.46621;
  double D.46616;
  double D.46611;
  switch_size_t D.46606;
  double D.46601;
  double D.46596;
  double D.46591;
  double D.46586;
  double D.46581;
  switch_size_t D.46576;
  switch_size_t D.46571;
  switch_size_t D.46566;
  switch_size_t D.46561;
  switch_size_t D.46556;
  switch_size_t D.46551;
  switch_size_t D.46546;
  switch_size_t D.46541;
  switch_size_t D.46536;
  switch_size_t D.46531;
  double D.46526;
  double D.46525;

  # BLOCK 2 freq:10000
  # PRED: ENTRY [100.0%]  (fallthru,exec)
  stats_30 = switch_core_media_get_stats (session_28(D), type_29(D), 0B);
  # DEBUG stats => stats_30
  channel_31 = switch_core_session_get_channel (session_28(D));
  # DEBUG channel => channel_31
  var_name = "";
  var_val = "";
  if (stats_30 != 0B)
    goto <bb 3>;
  else
    goto <bb 58>;
  # SUCC: 3 [78.3%]  (true,exec) 58 [21.6%]  (false,exec)

  # BLOCK 3 freq:7835
  # PRED: 2 [78.3%]  (true,exec)
  D.46525_32 = stats_30->inbound.variance;
  D.46526_33 = sqrt (D.46525_32);
  stats_30->inbound.std_deviation = D.46526_33;
  if (prefix_34(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 [85.0%]  (true,exec) 5 [15.0%]  (false,exec)

  # BLOCK 4 freq:6660
  # PRED: 3 [85.0%]  (true,exec)
  # SUCC: 5 [100.0%]  (fallthru,exec)

  # BLOCK 5 freq:7835
  # PRED: 4 [100.0%]  (fallthru,exec) 3 [15.0%]  (false,exec)
  # prefix_1 = PHI <prefix_34(D)(4), ""(3)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_1, "in_raw_bytes");
  D.46531_37 = stats_30->inbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46531_37);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
  # SUCC: 6 [85.0%]  (true,exec) 7 [15.0%]  (false,exec)

  # BLOCK 6 freq:6660
  # PRED: 5 [85.0%]  (true,exec)
  # SUCC: 7 [100.0%]  (fallthru,exec)

  # BLOCK 7 freq:7835
  # PRED: 6 [100.0%]  (fallthru,exec) 5 [15.0%]  (false,exec)
  # prefix_2 = PHI <prefix_34(D)(6), ""(5)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_2, "in_media_bytes");
  D.46536_40 = stats_30->inbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46536_40);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 [85.0%]  (true,exec) 9 [15.0%]  (false,exec)

  # BLOCK 8 freq:6660
  # PRED: 7 [85.0%]  (true,exec)
  # SUCC: 9 [100.0%]  (fallthru,exec)

  # BLOCK 9 freq:7835
  # PRED: 8 [100.0%]  (fallthru,exec) 7 [15.0%]  (false,exec)
  # prefix_3 = PHI <prefix_34(D)(8), ""(7)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_3, "in_packet_count");
  D.46541_43 = stats_30->inbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46541_43);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;
  # SUCC: 10 [85.0%]  (true,exec) 11 [15.0%]  (false,exec)

  # BLOCK 10 freq:6660
  # PRED: 9 [85.0%]  (true,exec)
  # SUCC: 11 [100.0%]  (fallthru,exec)

  # BLOCK 11 freq:7835
  # PRED: 10 [100.0%]  (fallthru,exec) 9 [15.0%]  (false,exec)
  # prefix_4 = PHI <prefix_34(D)(10), ""(9)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_4, "in_media_packet_count");
  D.46546_46 = stats_30->inbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46546_46);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
  # SUCC: 12 [85.0%]  (true,exec) 13 [15.0%]  (false,exec)

  # BLOCK 12 freq:6660
  # PRED: 11 [85.0%]  (true,exec)
  # SUCC: 13 [100.0%]  (fallthru,exec)

  # BLOCK 13 freq:7835
  # PRED: 12 [100.0%]  (fallthru,exec) 11 [15.0%]  (false,exec)
  # prefix_5 = PHI <prefix_34(D)(12), ""(11)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_5, "in_skip_packet_count");
  D.46551_49 = stats_30->inbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46551_49);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;
  # SUCC: 14 [85.0%]  (true,exec) 15 [15.0%]  (false,exec)

  # BLOCK 14 freq:6660
  # PRED: 13 [85.0%]  (true,exec)
  # SUCC: 15 [100.0%]  (fallthru,exec)

  # BLOCK 15 freq:7835
  # PRED: 14 [100.0%]  (fallthru,exec) 13 [15.0%]  (false,exec)
  # prefix_6 = PHI <prefix_34(D)(14), ""(13)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_6, "in_jitter_packet_count");
  D.46556_52 = stats_30->inbound.jb_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46556_52);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;
  # SUCC: 16 [85.0%]  (true,exec) 17 [15.0%]  (false,exec)

  # BLOCK 16 freq:6660
  # PRED: 15 [85.0%]  (true,exec)
  # SUCC: 17 [100.0%]  (fallthru,exec)

  # BLOCK 17 freq:7835
  # PRED: 16 [100.0%]  (fallthru,exec) 15 [15.0%]  (false,exec)
  # prefix_7 = PHI <prefix_34(D)(16), ""(15)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_7, "in_dtmf_packet_count");
  D.46561_55 = stats_30->inbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46561_55);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;
  # SUCC: 18 [85.0%]  (true,exec) 19 [15.0%]  (false,exec)

  # BLOCK 18 freq:6660
  # PRED: 17 [85.0%]  (true,exec)
  # SUCC: 19 [100.0%]  (fallthru,exec)

  # BLOCK 19 freq:7835
  # PRED: 18 [100.0%]  (fallthru,exec) 17 [15.0%]  (false,exec)
  # prefix_8 = PHI <prefix_34(D)(18), ""(17)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_8, "in_cng_packet_count");
  D.46566_58 = stats_30->inbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46566_58);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 20>;
  else
    goto <bb 21>;
  # SUCC: 20 [85.0%]  (true,exec) 21 [15.0%]  (false,exec)

  # BLOCK 20 freq:6660
  # PRED: 19 [85.0%]  (true,exec)
  # SUCC: 21 [100.0%]  (fallthru,exec)

  # BLOCK 21 freq:7835
  # PRED: 20 [100.0%]  (fallthru,exec) 19 [15.0%]  (false,exec)
  # prefix_9 = PHI <prefix_34(D)(20), ""(19)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_9, "in_flush_packet_count");
  D.46571_61 = stats_30->inbound.flush_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46571_61);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 22>;
  else
    goto <bb 23>;
  # SUCC: 22 [85.0%]  (true,exec) 23 [15.0%]  (false,exec)

  # BLOCK 22 freq:6660
  # PRED: 21 [85.0%]  (true,exec)
  # SUCC: 23 [100.0%]  (fallthru,exec)

  # BLOCK 23 freq:7835
  # PRED: 22 [100.0%]  (fallthru,exec) 21 [15.0%]  (false,exec)
  # prefix_10 = PHI <prefix_34(D)(22), ""(21)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_10, "in_largest_jb_size");
  D.46576_64 = stats_30->inbound.largest_jb_size;
  switch_snprintf (&var_val, 35, "%d", D.46576_64);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;
  # SUCC: 24 [85.0%]  (true,exec) 25 [15.0%]  (false,exec)

  # BLOCK 24 freq:6660
  # PRED: 23 [85.0%]  (true,exec)
  # SUCC: 25 [100.0%]  (fallthru,exec)

  # BLOCK 25 freq:7835
  # PRED: 24 [100.0%]  (fallthru,exec) 23 [15.0%]  (false,exec)
  # prefix_11 = PHI <prefix_34(D)(24), ""(23)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_11, "in_jitter_min_variance");
  D.46581_67 = stats_30->inbound.min_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46581_67);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 26>;
  else
    goto <bb 27>;
  # SUCC: 26 [85.0%]  (true,exec) 27 [15.0%]  (false,exec)

  # BLOCK 26 freq:6660
  # PRED: 25 [85.0%]  (true,exec)
  # SUCC: 27 [100.0%]  (fallthru,exec)

  # BLOCK 27 freq:7835
  # PRED: 26 [100.0%]  (fallthru,exec) 25 [15.0%]  (false,exec)
  # prefix_12 = PHI <prefix_34(D)(26), ""(25)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_12, "in_jitter_max_variance");
  D.46586_70 = stats_30->inbound.max_variance;
  switch_snprintf (&var_val, 35, "%0.2f", D.46586_70);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 28>;
  else
    goto <bb 29>;
  # SUCC: 28 [85.0%]  (true,exec) 29 [15.0%]  (false,exec)

  # BLOCK 28 freq:6660
  # PRED: 27 [85.0%]  (true,exec)
  # SUCC: 29 [100.0%]  (fallthru,exec)

  # BLOCK 29 freq:7835
  # PRED: 28 [100.0%]  (fallthru,exec) 27 [15.0%]  (false,exec)
  # prefix_13 = PHI <prefix_34(D)(28), ""(27)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_13, "in_jitter_loss_rate");
  D.46591_73 = stats_30->inbound.lossrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46591_73);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 30>;
  else
    goto <bb 31>;
  # SUCC: 30 [85.0%]  (true,exec) 31 [15.0%]  (false,exec)

  # BLOCK 30 freq:6660
  # PRED: 29 [85.0%]  (true,exec)
  # SUCC: 31 [100.0%]  (fallthru,exec)

  # BLOCK 31 freq:7835
  # PRED: 30 [100.0%]  (fallthru,exec) 29 [15.0%]  (false,exec)
  # prefix_14 = PHI <prefix_34(D)(30), ""(29)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_14, "in_jitter_burst_rate");
  D.46596_76 = stats_30->inbound.burstrate;
  switch_snprintf (&var_val, 35, "%0.2f", D.46596_76);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 32>;
  else
    goto <bb 33>;
  # SUCC: 32 [85.0%]  (true,exec) 33 [15.0%]  (false,exec)

  # BLOCK 32 freq:6660
  # PRED: 31 [85.0%]  (true,exec)
  # SUCC: 33 [100.0%]  (fallthru,exec)

  # BLOCK 33 freq:7835
  # PRED: 32 [100.0%]  (fallthru,exec) 31 [15.0%]  (false,exec)
  # prefix_15 = PHI <prefix_34(D)(32), ""(31)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_15, "in_mean_interval");
  D.46601_79 = stats_30->inbound.mean_interval;
  switch_snprintf (&var_val, 35, "%0.2f", D.46601_79);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 34>;
  else
    goto <bb 35>;
  # SUCC: 34 [85.0%]  (true,exec) 35 [15.0%]  (false,exec)

  # BLOCK 34 freq:6660
  # PRED: 33 [85.0%]  (true,exec)
  # SUCC: 35 [100.0%]  (fallthru,exec)

  # BLOCK 35 freq:7835
  # PRED: 34 [100.0%]  (fallthru,exec) 33 [15.0%]  (false,exec)
  # prefix_16 = PHI <prefix_34(D)(34), ""(33)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_16, "in_flaw_total");
  D.46606_82 = stats_30->inbound.flaws;
  switch_snprintf (&var_val, 35, "%d", D.46606_82);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;
  # SUCC: 36 [85.0%]  (true,exec) 37 [15.0%]  (false,exec)

  # BLOCK 36 freq:6660
  # PRED: 35 [85.0%]  (true,exec)
  # SUCC: 37 [100.0%]  (fallthru,exec)

  # BLOCK 37 freq:7835
  # PRED: 36 [100.0%]  (fallthru,exec) 35 [15.0%]  (false,exec)
  # prefix_17 = PHI <prefix_34(D)(36), ""(35)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_17, "in_quality_percentage");
  D.46611_85 = stats_30->inbound.R;
  switch_snprintf (&var_val, 35, "%0.2f", D.46611_85);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 38>;
  else
    goto <bb 39>;
  # SUCC: 38 [85.0%]  (true,exec) 39 [15.0%]  (false,exec)

  # BLOCK 38 freq:6660
  # PRED: 37 [85.0%]  (true,exec)
  # SUCC: 39 [100.0%]  (fallthru,exec)

  # BLOCK 39 freq:7835
  # PRED: 38 [100.0%]  (fallthru,exec) 37 [15.0%]  (false,exec)
  # prefix_18 = PHI <prefix_34(D)(38), ""(37)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_18, "in_mos");
  D.46616_88 = stats_30->inbound.mos;
  switch_snprintf (&var_val, 35, "%0.2f", D.46616_88);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 40>;
  else
    goto <bb 41>;
  # SUCC: 40 [85.0%]  (true,exec) 41 [15.0%]  (false,exec)

  # BLOCK 40 freq:6660
  # PRED: 39 [85.0%]  (true,exec)
  # SUCC: 41 [100.0%]  (fallthru,exec)

  # BLOCK 41 freq:7835
  # PRED: 40 [100.0%]  (fallthru,exec) 39 [15.0%]  (false,exec)
  # prefix_19 = PHI <prefix_34(D)(40), ""(39)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_19, "out_raw_bytes");
  D.46621_91 = stats_30->outbound.raw_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46621_91);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 42>;
  else
    goto <bb 43>;
  # SUCC: 42 [85.0%]  (true,exec) 43 [15.0%]  (false,exec)

  # BLOCK 42 freq:6660
  # PRED: 41 [85.0%]  (true,exec)
  # SUCC: 43 [100.0%]  (fallthru,exec)

  # BLOCK 43 freq:7835
  # PRED: 42 [100.0%]  (fallthru,exec) 41 [15.0%]  (false,exec)
  # prefix_20 = PHI <prefix_34(D)(42), ""(41)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_20, "out_media_bytes");
  D.46626_94 = stats_30->outbound.media_bytes;
  switch_snprintf (&var_val, 35, "%d", D.46626_94);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 44>;
  else
    goto <bb 45>;
  # SUCC: 44 [85.0%]  (true,exec) 45 [15.0%]  (false,exec)

  # BLOCK 44 freq:6660
  # PRED: 43 [85.0%]  (true,exec)
  # SUCC: 45 [100.0%]  (fallthru,exec)

  # BLOCK 45 freq:7835
  # PRED: 44 [100.0%]  (fallthru,exec) 43 [15.0%]  (false,exec)
  # prefix_21 = PHI <prefix_34(D)(44), ""(43)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_21, "out_packet_count");
  D.46631_97 = stats_30->outbound.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46631_97);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 46>;
  else
    goto <bb 47>;
  # SUCC: 46 [85.0%]  (true,exec) 47 [15.0%]  (false,exec)

  # BLOCK 46 freq:6660
  # PRED: 45 [85.0%]  (true,exec)
  # SUCC: 47 [100.0%]  (fallthru,exec)

  # BLOCK 47 freq:7835
  # PRED: 46 [100.0%]  (fallthru,exec) 45 [15.0%]  (false,exec)
  # prefix_22 = PHI <prefix_34(D)(46), ""(45)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_22, "out_media_packet_count");
  D.46636_100 = stats_30->outbound.media_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46636_100);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 48>;
  else
    goto <bb 49>;
  # SUCC: 48 [85.0%]  (true,exec) 49 [15.0%]  (false,exec)

  # BLOCK 48 freq:6660
  # PRED: 47 [85.0%]  (true,exec)
  # SUCC: 49 [100.0%]  (fallthru,exec)

  # BLOCK 49 freq:7835
  # PRED: 48 [100.0%]  (fallthru,exec) 47 [15.0%]  (false,exec)
  # prefix_23 = PHI <prefix_34(D)(48), ""(47)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_23, "out_skip_packet_count");
  D.46641_103 = stats_30->outbound.skip_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46641_103);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 50>;
  else
    goto <bb 51>;
  # SUCC: 50 [85.0%]  (true,exec) 51 [15.0%]  (false,exec)

  # BLOCK 50 freq:6660
  # PRED: 49 [85.0%]  (true,exec)
  # SUCC: 51 [100.0%]  (fallthru,exec)

  # BLOCK 51 freq:7835
  # PRED: 50 [100.0%]  (fallthru,exec) 49 [15.0%]  (false,exec)
  # prefix_24 = PHI <prefix_34(D)(50), ""(49)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_24, "out_dtmf_packet_count");
  D.46646_106 = stats_30->outbound.dtmf_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46646_106);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 52>;
  else
    goto <bb 53>;
  # SUCC: 52 [85.0%]  (true,exec) 53 [15.0%]  (false,exec)

  # BLOCK 52 freq:6660
  # PRED: 51 [85.0%]  (true,exec)
  # SUCC: 53 [100.0%]  (fallthru,exec)

  # BLOCK 53 freq:7835
  # PRED: 52 [100.0%]  (fallthru,exec) 51 [15.0%]  (false,exec)
  # prefix_25 = PHI <prefix_34(D)(52), ""(51)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_25, "out_cng_packet_count");
  D.46651_109 = stats_30->outbound.cng_packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46651_109);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 54>;
  else
    goto <bb 55>;
  # SUCC: 54 [85.0%]  (true,exec) 55 [15.0%]  (false,exec)

  # BLOCK 54 freq:6660
  # PRED: 53 [85.0%]  (true,exec)
  # SUCC: 55 [100.0%]  (fallthru,exec)

  # BLOCK 55 freq:7835
  # PRED: 54 [100.0%]  (fallthru,exec) 53 [15.0%]  (false,exec)
  # prefix_26 = PHI <prefix_34(D)(54), ""(53)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_26, "rtcp_packet_count");
  D.46656_112 = stats_30->rtcp.packet_count;
  switch_snprintf (&var_val, 35, "%d", D.46656_112);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  if (prefix_34(D) != 0B)
    goto <bb 56>;
  else
    goto <bb 57>;
  # SUCC: 56 [85.0%]  (true,exec) 57 [15.0%]  (false,exec)

  # BLOCK 56 freq:6660
  # PRED: 55 [85.0%]  (true,exec)
  # SUCC: 57 [100.0%]  (fallthru,exec)

  # BLOCK 57 freq:7835
  # PRED: 56 [100.0%]  (fallthru,exec) 55 [15.0%]  (false,exec)
  # prefix_27 = PHI <prefix_34(D)(56), ""(55)>
  switch_snprintf (&var_name, 256, "rtp_%s_%s", prefix_27, "rtcp_octet_count");
  D.46661_115 = stats_30->rtcp.octet_count;
  switch_snprintf (&var_val, 35, "%d", D.46661_115);
  switch_channel_set_variable_var_check (channel_31, &var_name, &var_val, 1);
  # SUCC: 58 [100.0%]  (fallthru,exec)

  # BLOCK 58 freq:10000
  # PRED: 2 [21.6%]  (false,exec) 57 [100.0%]  (fallthru,exec)
  return;
  # SUCC: EXIT [100.0%] 

}



;; Function switch_core_media_set_stats (switch_core_media_set_stats)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_udptl_mode (switch_core_media_udptl_mode)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_get_jb (switch_core_media_get_jb)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_set_sdp_codec_string (switch_core_media_set_sdp_codec_string)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_codec_chosen (switch_core_media_codec_chosen)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_check_outgoing_proxy (switch_core_media_check_outgoing_proxy)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_proxy_codec (switch_core_media_proxy_codec)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_recover_session (switch_core_media_recover_session)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_init (switch_core_media_init)

Function is not available or overwritable; not analyzing.

;; Function switch_core_media_deinit (switch_core_media_deinit)

Function is not available or overwritable; not analyzing.
